<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 23:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:12/1351984893889069</guid>
      <description>&lt;p&gt;
And you could control the order (parent theme, child theme, plugin) via the priority arg. Got it.
&lt;/p&gt;
&lt;p&gt;
Instead of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_template_stack( 'get_stylesheet_directory', 10 );
&lt;/pre&gt;&lt;p&gt;
why couldn't you do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_template_stack( get_stylesheet_directory(), 10 );
&lt;/pre&gt;&lt;p&gt;
since the callback just returns a path, which needs to be computed only once.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 03 Nov 2012 23:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:11/1351984092682504</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22355#comment:10" title="Comment 10"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A usage example from start to finish would be helpful.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Imagine a plugin registers a custom post type 'foo' and wants to bundle templates for twentytwelve support. This plugin would:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Call: register_theme_stack( 'my_plugin_twentytwelve_template_path', 10 );
&lt;/li&gt;&lt;li&gt;Now, /plugins/my-foo/twentytwelve/single-foo.php is in the stack.
&lt;/li&gt;&lt;li&gt;locate_template() finds a match in the plugin directory.
&lt;/li&gt;&lt;li&gt;Profit.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14833 (performance serving static files) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 03 Nov 2012 23:03:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14833#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14833#comment:10/1351983788110546</guid>
      <description>&lt;p&gt;
I think this original bug report was focusing on subdirectory links (/blogname/wp-content/themes/something/style.css, versus without /blogname/) being rewritten by .htaccess to drop the /blogname/. This doesn't go through PHP, it is handled by the server. So, this is invalid.
&lt;/p&gt;
&lt;p&gt;
If you wanted (as I wrote originally), you could filter things so you could rely on browser caching by making many assets all go through the same central/common URL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22355.2.patch attached to Ticket #22355</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 03 Nov 2012 23:02:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22355/22355.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22355/22355.2.patch/1351983722402904</guid>
      <description>&lt;p&gt;
Reverse lookup (name to stack) and break out of both loops
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22350 (Restored Drafts Shouldn't Have a Publication Date) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 03 Nov 2012 23:01:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22350#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22350#comment:2/1351983664611973</guid>
      <description>&lt;p&gt;
Nacin and I noticed the related date issues while fixing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21858" title="#21858: defect (bug): Autosave does not work when a draft post has a time in the future (closed: fixed)"&gt;#21858&lt;/a&gt;.  There seems to be a lot of confusion about which value is supposed to go into each of the date fields.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 23:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:10/1351983646858566</guid>
      <description>&lt;p&gt;
A usage example from start to finish would be helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Sat, 03 Nov 2012 23:00:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:9/1351983605902271</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12756 (WPMU does not handle files with two or more dots in the filename) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:59:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12756#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12756#comment:16/1351983591198564</guid>
      <description>&lt;p&gt;
Unfortunately, people will be running ms-files.php for the foreseeable future. Unlike global terms, moving away from ms-files.php is not easy. Some fixes to ms-files like this can be easy wins.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #22290 (Update to jQuery UI 1.9.1) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22290#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22290#comment:1/1351983099459727</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22361" title="jQuery UI 1.9.1
Props ocean90
fixes #22290
"&gt;22361&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
jQuery UI 1.9.1&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ocean90&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22290" title="#22290: enhancement: Update to jQuery UI 1.9.1 (closed: fixed)"&gt;#22290&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [22361]: jQuery UI 1.9.1  Props ocean90 fixes #22290 </title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:51:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22361</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22361/1351983098327125</guid>
      <description>&lt;p&gt;
jQuery UI 1.9.1
&lt;/p&gt;
&lt;p&gt;
Props ocean90
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22290" title="#22290: enhancement: Update to jQuery UI 1.9.1 (closed: fixed)"&gt;#22290&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22300 (enhance urlencode_deep()) updated</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22300#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22300#comment:12/1351982995361106</guid>
      <description>&lt;p&gt;
The path from &lt;code&gt;map_deep()&lt;/code&gt; to "mad deep", to "truly, madly, deeply" isn't very long.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>stephenh1988</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:37:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:8/1351982251053978</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22300 (enhance urlencode_deep()) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:33:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22300#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22300#comment:11/1351982028330591</guid>
      <description>&lt;p&gt;
Every time I see this, I think is says "mad deep"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22300 (enhance urlencode_deep()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22300#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22300#comment:10/1351981978805150</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 for map_deep().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:05:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:7/1351980301963034</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>map_deep.diff attached to Ticket #22300</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:03:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22300/map_deep.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22300/map_deep.diff/1351980236555093</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22300 (enhance urlencode_deep()) updated</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22300#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22300#comment:9/1351980218171666</guid>
      <description>&lt;p&gt;
It turned out that the idea of running them sequentially wasn't so good. I tested some more and the final result was that there is almost zero difference. Which means we should go ahead with the &lt;code&gt;map_deep()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Here is a patch for the introduction of &lt;code&gt;map_deep()&lt;/code&gt; and converting all older &lt;code&gt;*_deep()&lt;/code&gt; functions to using it.
&lt;/p&gt;
&lt;p&gt;
All the old tests pass and &lt;a class="ext-link" href="http://unit-tests.trac.wordpress.org/browser/trunk/tests/formatting/MapDeep.php?rev=1110"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here are some for map_deep()&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:6/1351980139015349</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Sat, 03 Nov 2012 22:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:5/1351980056398291</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>curtismchale</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:4/1351979785872109</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:3/1351979553286087</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20509" title="#20509: feature request: Theme idea - generic.php (closed: maybelater)"&gt;#20509&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20509 (Theme idea - generic.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:52:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20509#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20509#comment:49/1351979550641093</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22355" title="#22355: enhancement: Template stack - Beyond parent/child theme relationships (new)"&gt;#22355&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:2/1351979431928737</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:48:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355#comment:1/1351979331162702</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>22355.patch attached to Ticket #22355</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22355/22355.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22355/22355.patch/1351979155046058</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22355 (Template stack - Beyond parent/child theme relationships) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:45:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22355</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22355/1351979125585172</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Problem&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Robust plugins (BuddyPress, bbPress, et all) are unable to break out of the parent/child restrictions that WordPress imposes on template output. For these plugins to include their own template parts, elaborate code must be written to hook into several different execution points, requiring an intimate knowledge of the inner workings of WordPress's template loading system.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Solution&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Create a stack of template locations, and allow WordPress to transverse this array following the same STYLESHEETPATH/TEMPLATEPATH order it always has, while also enabling additional paths to be added with a priority (similar to the filters API.)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Details&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The attached patch includes two new functions in wp-includes/template.php:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;register_template_stack()
&lt;/li&gt;&lt;li&gt;get_template_stack()
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Register template stack is a wrapper for the 'template_stack' filter. get_template_stack() is a variation of apply_filters() that returns the array of filtered template locations.
&lt;/p&gt;
&lt;p&gt;
A modification to wp-settings.php calls register_template_stack() two times, passing get_stylesheet_directory() and get_template_directory() as callbacks, to initialize the core parent/child relationship, ensuring complete backwards compatibility.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Result&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This allows for plugins to register additional paths in the template loader hierarchy, and enables plugins that may come with their own default template parts the option of registering a fallback template location.
&lt;/p&gt;
&lt;p&gt;
This works with both locate_template() and get_template_part(), and has the added benefit removing duplicate items inside of get_template_stack(), resulting in avoiding an additional file system check should the parent and child themes be the same.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset in tests [1111]: 1111 :D </title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1111/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1111/tests/1351978821016522</guid>
      <description>&lt;p&gt;
1111 :D
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset in tests [1110]: Add tests for map_deep(). See #WP22300 </title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Sat, 03 Nov 2012 21:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1110/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1110/tests/1351977257170939</guid>
      <description>&lt;p&gt;
Add tests for map_deep(). See &lt;a href="https://core.trac.wordpress.org//intertrac/ticket%3A22300" title="ticket:22300 in WordPress Trac"&gt;#WP22300&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21152 (Kill use of colons in class names) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 20:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21152#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21152#comment:25/1351975819307914</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21152 (Kill use of colons in class names) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 20:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21152#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21152#comment:24/1351975800960767</guid>
      <description>&lt;p&gt;
Refreshed with the fix for adding link categories from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22340" title="#22340: defect (bug): Link Manager: cannot create a new category link via the Quick link in ... (closed: fixed)"&gt;#22340&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21152.6.diff attached to Ticket #21152</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 20:48:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21152/21152.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21152/21152.6.diff/1351975706856807</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 03 Nov 2012 20:45:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:19/1351975530184280</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22271#comment:18" title="Comment 18"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I apologize if my tone came off as disrespectful, but I did have a point.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for apology. After posting those comments I regretted it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 20:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:18/1351975290270143</guid>
      <description>&lt;p&gt;
I apologize if my tone came off as disrespectful, but I did have a point. I'm guilty of it myself: trying to push a change into Core that would be helpful for the narrow problem I'm trying to solve at the time, not realizing that it's actually a bad idea in the general case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 03 Nov 2012 20:12:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:17/1351973532067373</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22271#comment:15" title="Comment 15"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I call it trolling because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"You're avoiding change for the sake of avoiding change" is something you can throw around whenever you disagree with a wontfix, regardless of what argument was made.
&lt;/li&gt;&lt;li&gt;It detracts from the actual discussion, steering it into meta discussion about governance.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
And I replied as I did because I was reacting to how frequently you reply in a manner that is disrespectful to others in the community who are trying to contribute.  Had you simply held your comment to be &lt;em&gt;"Yes, it does: filters that don't expect $post to be null will break"&lt;/em&gt; and not added &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/22271?replyto=15#comment:10"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the disrespectful comment&lt;/a&gt; I wouldn't have replied as I did. But yes, this is a meta/governance issue so that's all I'll say on this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 20:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:16/1351972828222784</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Anyway, back to the topic at hand:
&lt;/p&gt;
&lt;p&gt;
Example breakage:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function my_old_callback( $classes, $class, $post ) {
  if ( 'foo' == $post-&amp;gt;post_type )
    $classes[] = 'bar';
  return $classes;
}
add_filter( 'post_class', 'my_old_callback', 10, 3 );
&lt;/pre&gt;&lt;p&gt;
With the patch applied, my_old_callback will break when $post is null and would have to be amended, like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function my_old_callback( $classes, $class, $post ) {
  if ( $post &amp;amp;&amp;amp; 'foo' == $post-&amp;gt;post_type )
    $classes[] = 'foo2';
  return $classes;
}
&lt;/pre&gt;&lt;p&gt;
This is clearly a change that would break backwards compatibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:58:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:15/1351972729048982</guid>
      <description>&lt;p&gt;
I call it trolling because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"You're avoiding change for the sake of avoiding change" is something you can throw around whenever you disagree with a wontfix, regardless of what argument was made.
&lt;/li&gt;&lt;li&gt;It detracts from the actual discussion, steering it into meta discussion about governance.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:14/1351972623863111</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's all play nice and get some core dev feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:13/1351972116298951</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22271#comment:11" title="Comment 11"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22271#comment:10" title="Comment 10"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
just because it's convenient for you
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Trolling?  Back at ya.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:12/1351972025420077</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22271#comment:11" title="Comment 11"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Making sure it always runs the filter is &lt;em&gt;"diluting it's purpose?"&lt;/em&gt;  Sounds like avoidance of change for avoidance of change sake.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds like trolling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:45:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:11/1351971922886702</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22271#comment:10" title="Comment 10"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems to me that you're trying to transform get_post_class() into something that dilutes it's purpose, just because it's convenient for you, instead of fixing your theme to account for the is_404() case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Making sure it always runs the filter is &lt;em&gt;"diluting it's purpose?"&lt;/em&gt;  Sounds like avoidance of change for avoidance of change sake.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:30:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:10/1351971043296204</guid>
      <description>&lt;p&gt;
It seems to me that you're trying to transform get_post_class() into something that dilutes it's purpose, just because it's convenient for you, instead of fixing your theme to account for the is_404() case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:27:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:9/1351970832800520</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Why would you expect a function called &lt;code&gt;get_post_class()&lt;/code&gt; to work when no post is present?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It doesn't harm any other callback (or interfere with it).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it does: filters that don't expect $post to be null will break.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19907 (Updating an unpublished draft post in quick-edit mode sets the post's ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19907#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19907#comment:8/1351970753218137</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22350" title="#22350: defect (bug): Restored Drafts Shouldn't Have a Publication Date (closed: duplicate)"&gt;#22350&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22350 (Restored Drafts Shouldn't Have a Publication Date) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 19:25:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22350#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22350#comment:1/1351970750450145</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/19907" title="#19907: defect (bug): Updating an unpublished draft post in quick-edit mode sets the post's ... (new)"&gt;#19907&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 03 Nov 2012 18:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:8/1351965740530089</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems like a no-brainer...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Sat, 03 Nov 2012 18:01:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:7/1351965699481444</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14037 (XMLRPC posts failing since upgrade from WP 2.9.2 to WP 3.0) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 17:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14037#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14037#comment:24/1351962847468434</guid>
      <description>worksforme: &lt;p&gt;
Feel free to reopen with steps to reproduce if there's still a problem.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14037 (XMLRPC posts failing since upgrade from WP 2.9.2 to WP 3.0) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sat, 03 Nov 2012 17:09:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14037#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14037#comment:23/1351962581800007</guid>
      <description>&lt;p&gt;
XMLRPC was refactored in 3.4. This should be safe to close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14037 (XMLRPC posts failing since upgrade from WP 2.9.2 to WP 3.0) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 03 Nov 2012 16:13:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14037#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14037#comment:22/1351959224893979</guid>
      <description>&lt;p&gt;
I'm curious if we can close this ticket. In 22 months no traction and we already are a few releases further.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18434 (Retrieve post terms via XML-RPC) closed</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18434#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18434#comment:7/1351957911488206</guid>
      <description>fixed: &lt;p&gt;
Marked as fixed in 3.4
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18435 (Set post terms via XML-RPC) closed</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18435#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18435#comment:3/1351957787299504</guid>
      <description>fixed: &lt;p&gt;
Marked as fixed in 3.4
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22320 (getRecentPosts API succeeds with empty response for unauthorized user) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:45:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22320#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22320#comment:2/1351957530588329</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22335 (XML-RPC: wp.editPost changes post_status from 'inherit' to 'draft') updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22335#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22335#comment:11/1351957486746921</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://unit-tests.trac.wordpress.org//intertrac/changeset%3A1109" title="changeset:1109 in WordPress Unit Tests Trac (old)"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;[UT1109]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [1109]: XML-RPC: Updated tests for wp.editPost when user tries to modify an ...</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1109/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1109/tests/1351957340730918</guid>
      <description>&lt;p&gt;
XML-RPC: Updated tests for wp.editPost when user tries to modify an attachment
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19030 (Sharding BLOGUPLOADDIR) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:27:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19030#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19030#comment:9/1351956447018557</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12756 (WPMU does not handle files with two or more dots in the filename) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12756#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12756#comment:15/1351956081320990</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22125 (Prevent stomping $wp_the_query by accident) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22125#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22125#comment:5/1351955655227162</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22351 (Action "permalink_structure_changed" passes new permalink_structure ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 15:09:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22351#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22351#comment:4/1351955398522272</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18079 (WP has dropped support of the path field in the site table) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sat, 03 Nov 2012 14:25:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18079#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18079#comment:6/1351952750208078</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The configuration described in the ticket did not work in WordPress MU without either sunrise.php or a core hack and a modified .htaccess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16201 (when updating a multisite blog subblogs getting 404 error) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sat, 03 Nov 2012 14:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16201#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16201#comment:22/1351952323813000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can anyone reproduce this in an install with no plugins and sites that are created with the Network Admin -&amp;gt; Add Site screen ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>Bueltge</dc:creator>

      <pubDate>Sat, 03 Nov 2012 14:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:6/1351951574342859</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Sat, 03 Nov 2012 13:14:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:5/1351948459218373</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22271 (get_post_class() does not always apply filter to output) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sat, 03 Nov 2012 13:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22271#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22271#comment:4/1351947704626545</guid>
      <description>&lt;p&gt;
From a brief test, &lt;code&gt;post_class&lt;/code&gt; also fails on the index page, if there's no loop (so &lt;code&gt;get_post()&lt;/code&gt; can't trigger &lt;code&gt;wp_cache_get($post_id, 'posts')&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22107 (user_email_used error string is not used anywhere?) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sat, 03 Nov 2012 12:12:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22107#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22107#comment:3/1351944776265148</guid>
      <description>&lt;p&gt;
patch looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18934 (Multisite issue cleaning up empty capabilities) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sat, 03 Nov 2012 12:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18934#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18934#comment:17/1351944661016520</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20527 (Adding sunrise-like capability to ms-files) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 12:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20527#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20527#comment:5/1351944571484611</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18225 (Sub-blog on Network site redirects to wrong URL for user registration) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 12:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18225#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18225#comment:5/1351944262161266</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15552 (Serving video to iOS devices does not work in Multisite Wordpress due ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 11:49:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15552#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15552#comment:7/1351943346323337</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19235" title="#19235: task (blessed): Turn ms-files.php off by default (closed: fixed)"&gt;#19235&lt;/a&gt; turned off &lt;code&gt;ms-files.php&lt;/code&gt; by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14833 (performance serving static files) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 11:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14833#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14833#comment:9/1351942912067243</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22352 (Update get_permalink() to allow for permalink structure argument) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sat, 03 Nov 2012 10:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22352#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22352#comment:3/1351939287434199</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19807 (Clicking Preview in Multisite Creates 404 Error) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 07:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19807#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19807#comment:5/1351927011623090</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #12496,​19235 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Nov 2012 07:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=12496%2C19235</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=12496%2C19235/1351926871996734</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12496" title="#12496: feature request: blog.dir should not require the use of php to serve large files (closed: duplicate)"&gt;#12496&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #21583 (Improve discoverability and visual design of Screen Options and Help Panels) updated</title>
      
        <dc:creator>hidgw</dc:creator>

      <pubDate>Sat, 03 Nov 2012 05:36:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21583#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21583#comment:40/1351920993021222</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22129 (Plugins cannot be updated when getting updates from outside the repo) updated</title>
      
        <dc:creator>griffinjt</dc:creator>

      <pubDate>Sat, 03 Nov 2012 03:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22129#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22129#comment:10/1351912158591864</guid>
      <description>&lt;p&gt;
I've developed a way around it. Won't fix is fine by me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22129 (Plugins cannot be updated when getting updates from outside the repo) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 03:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22129#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22129#comment:9/1351911653079506</guid>
      <description>&lt;p&gt;
Yep, I have developed such an updater plugin (and know several other WP shops that have done the same) which works fine in Multisite, so it's definitely doable, without any changes to Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22347 (Wrong default_background_color in Twenty Eleven) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 03 Nov 2012 02:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22347#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22347#comment:1/1351910780257961</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22354 (Gravatar Shouldn't Use images/blank.gif) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 03 Nov 2012 02:45:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22354#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22354#comment:1/1351910715460847</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>miqro-blank-gravatars.diff attached to Ticket #22354</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 03 Nov 2012 02:44:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22354/miqro-blank-gravatars.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22354/miqro-blank-gravatars.diff/1351910643767551</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22354 (Gravatar Shouldn't Use images/blank.gif) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 03 Nov 2012 02:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22354</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22354/1351910627659450</guid>
      <description>&lt;p&gt;
There is a very subtle flow-of-control error in pluggable.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	elseif ( 'blank' == $default )
		$default = includes_url('images/blank.gif');
&lt;/pre&gt;&lt;p&gt;
This makes sense when $email has no value, because it will cause the local blank.gif file to be displayed.  However...
&lt;/p&gt;
&lt;p&gt;
When $email is not empty, this function is causing the gravatar.com server to make a proxy request to the blank.gif file and display the local file through a remote request.  This is not the intended behavior.  When the $email value is present, the Gravatar request should simply contain "&amp;amp;d=blank" to get a blank image.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22129 (Plugins cannot be updated when getting updates from outside the repo) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sat, 03 Nov 2012 02:19:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22129#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22129#comment:8/1351909194792320</guid>
      <description>wontfix: &lt;p&gt;
Plugins can do this already with the filters and actions already in core. There are only a few places where this is slightly challenging, but it's still very possible.
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as wontfix, since the capability is already there and it's not particularly hard to use. In multisite, the same applies, but using network activation is a must.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22351 (Action "permalink_structure_changed" passes new permalink_structure ...) updated</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 02:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22351#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22351#comment:3/1351908587818057</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22352 (Update get_permalink() to allow for permalink structure argument) closed</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 02:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22352#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22352#comment:2/1351908392892442</guid>
      <description>invalid: &lt;p&gt;
Ack, you are 100% correct, that would be exactly the way to do it. Got a bit carried away dealing with the bug in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22351" title="#22351: defect (bug): Action &amp;#34;permalink_structure_changed&amp;#34; passes new permalink_structure ... (closed: fixed)"&gt;ticket:22351&lt;/a&gt; trying to create a permalink from the "old permalink_structure" which is (not correctly) being passed by the "permalink_structure_changed" action. In hindsight it's easy enough to keep this value in an instance variable and reference it from the hooked filter, so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class MyClass {
    private $old_structure;
    public function get_old_structure(){
        return $this-&amp;gt;old_structure;
    }
    public function permalink_structure_changed($old_structure, $new_structure){
        $this-&amp;gt;old_structure = $old_structure;
        add_filter( 'pre_post_link', array($this, 'get_old_structure') );
        $old_permalink = get_permalink($post_id, false);
        remove_filter( 'pre_post_link', array($this, 'get_old_structure') );
        // more code...
    }
}
$myclass = new MyClass();
add_action( 'permalink_structure_changed', array( $myclass, 'permalink_structure_changed' ), 10, 2 );
&lt;/pre&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22353 (in function wp_publish_post, make it call the wp_update_post) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 01:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22353#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22353#comment:1/1351907909494836</guid>
      <description>invalid: &lt;p&gt;
This is already the case since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22189" title="Use wp_update_post() rather than wp_insert_post() in wp_publish_post() ..."&gt;[22189]&lt;/a&gt; (WP 3.5-beta2).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21506 (Standard Theme Hooks) updated</title>
      
        <dc:creator>garinungkadol</dc:creator>

      <pubDate>Sat, 03 Nov 2012 01:55:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21506#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21506#comment:45/1351907715663018</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22353 (in function wp_publish_post, make it call the wp_update_post) created</title>
      
        <dc:creator>wordpressplugindeveloper</dc:creator>

      <pubDate>Sat, 03 Nov 2012 01:17:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22353</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22353/1351905467115137</guid>
      <description>&lt;p&gt;
If the post is submitted by role who cannot publish posts, the post will be pending by default and the post name will be empty.
&lt;/p&gt;
&lt;p&gt;
We have a custom posts management interface to approve pending posts.
&lt;/p&gt;
&lt;p&gt;
We use wp_publish_post to approve posts.
&lt;/p&gt;
&lt;p&gt;
Sadly, we find out the approved posts don't have post slug.
&lt;/p&gt;
&lt;p&gt;
So I just wonder will it be better if it can call wp_update_post to handle post status update.
&lt;/p&gt;
&lt;p&gt;
Just my 2 cents.
&lt;/p&gt;
&lt;p&gt;
Thanks for your hard work on wordpress!
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_publish_post($post_id) {
	global $wpdb;
	$post = get_post($post_id);
	if ( empty($post) )
		return;
	if ( 'publish' == $post-&amp;gt;post_status )
		return;
	$old_status = $post-&amp;gt;post_status;
	$post-&amp;gt;post_status = 'publish';
	wp_update_post($post);
	wp_transition_post_status('publish', $old_status, $post);
	do_action('edit_post', $post_id, $post);
	do_action('save_post', $post_id, $post);
	do_action('wp_insert_post', $post_id, $post);
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22352 (Update get_permalink() to allow for permalink structure argument) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 03 Nov 2012 01:08:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22352#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22352#comment:1/1351904881918291</guid>
      <description>&lt;p&gt;
Couldn't you use the 'pre_post_link' filter?
&lt;/p&gt;
&lt;pre class="wiki"&gt;function my_change_permalink( $permalink, $post ) {
  return '/foo/bar/';
}
add_filter( 'pre_post_link', 'my_change_permalink', 10, 2 );
$link = get_permalink();
remove_filter( 'pre_post_link', 'my_change_permalink', 10, 2 );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22342 (WP_DEBUG "undefined index" notices in get_metadata() for empty arrays) updated</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22342#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22342#comment:1/1351904185808831</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>link-template.php.patch attached to Ticket #22352</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22352/link-template.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22352/link-template.php.patch/1351904129102536</guid>
      <description>&lt;p&gt;
optional permalink structure argument for get_permalink()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22352 (Update get_permalink() to allow for permalink structure argument) created</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22352</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22352/1351904108341858</guid>
      <description>&lt;p&gt;
This patch allows for an optional custom permalink structure argument to the get_permalink() function, which would be used for the permalink generation in place of the structure saved in the "permalink_structure" option. Useful for showing what a permalink for a post/page would look like with a new structure, or for updating content when permalink structures change.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22351 (Action "permalink_structure_changed" passes new permalink_structure ...) updated</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:39:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22351#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22351#comment:2/1351903188275188</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16568.2.diff attached to Ticket #16568</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16568/16568.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16568/16568.2.diff/1351903127047268</guid>
      <description>&lt;p&gt;
16568.diff refreshed for 3.5
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:30:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:22/1351902612934010</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:21" title="Comment 21"&gt;CaptainN&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Related, there is a hole in the model we've been discussing, which is sometimes it's convenient to change the POST or GET data. Neither attempt has a solution for allowing that. Adding it would seem to complicate things.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could easily be like the following with no real added complexity:
&lt;/p&gt;
&lt;pre class="wiki"&gt;set_GET( 'test', 'abc123' );
set_POST( array( 'foo', 'bar'), array( 'baz' =&amp;gt; 'bazoom') );
&lt;/pre&gt;&lt;p&gt;
Beyond that I'll wait to hear for the &lt;em&gt;"powers that be"&lt;/em&gt; weigh in. :)
&lt;/p&gt;
&lt;p&gt;
P.S. Also updated the code to add &lt;code&gt;set_GET()&lt;/code&gt;, &lt;code&gt;set_POST()&lt;/code&gt; and &lt;code&gt;set_REQUEST()&lt;/code&gt; as well as created a &lt;code&gt;WP_GPCS&lt;/code&gt; class that wraps copies of &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt; and &lt;code&gt;$_REQUEST&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>wycks</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:29:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:78/1351902581071006</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+ 1 for a revisit , I have used the globals for this specific reason, and would be happy to delete that code in favor of something better. I agree with azaozz but I think some care should be taken here.
&lt;/p&gt;
&lt;p&gt;
Maybe it can be tied into &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/21583" title="#21583: enhancement: Improve discoverability and visual design of Screen Options and Help Panels (new)"&gt;#21583&lt;/a&gt; , screen options suffer from the same problems.(Ryan's comment, I could not find a specific trac for it )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22351 (Action "permalink_structure_changed" passes new permalink_structure ...) updated</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:29:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22351#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22351#comment:1/1351902565952864</guid>
      <description>&lt;p&gt;
functionality was originally added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11325" title="Add a permalink_structure_changed action to allow plugins to do ..."&gt;changeset:11325&lt;/a&gt; with bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>GPCS-2.php attached to Ticket #22325</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22325/GPCS-2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22325/GPCS-2.php/1351902434753597</guid>
      <description>&lt;p&gt;
2nd Proposed implementation of _GET(), _POST() and _REQUEST(), etc.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>rewrite.php.patch attached to Ticket #22351</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22351/rewrite.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22351/rewrite.php.patch/1351901995287814</guid>
      <description>&lt;p&gt;
fixes "permalink_structure_changed" action
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22351 (Action "permalink_structure_changed" passes new permalink_structure ...) created</title>
      
        <dc:creator>doublesharp</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:19:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22351</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22351/1351901960686168</guid>
      <description>&lt;p&gt;
Per the function PHPDoc, the set_permalink_structure() method in /wp-includes/rewrite.php should fire the 'permalink_structure_changed' with the old and new permalink structure after the new structure is saved:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;* Fires the 'permalink_structure_changed' action once the init call has
&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;processed passing the old and new values&lt;em&gt;
&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It is currently passing $this-&amp;gt;permalink_structure as the "old" structure value, however as this value is updated by the call to $this-&amp;gt;init() the result is that the new structure is passed instead of the old structure.
&lt;/p&gt;
&lt;p&gt;
Suggested patch would copy $this-&amp;gt;permalink_structure before the call to $this-&amp;gt;init() and pass the copy as the old permalink structure.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22350 (Restored Drafts Shouldn't Have a Publication Date) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 03 Nov 2012 00:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22350</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22350/1351901259326781</guid>
      <description>&lt;p&gt;
After creating a draft, trashing it, and then restoring it, the post editor shows a "Publish on" date as though it were a scheduled post, and the Date value in the list of all posts will be wrong after further editing (e.g. "3 hours ago, Last Modified").
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22235 (Blog path included in base) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 23:46:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22235#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22235#comment:2/1351899992745533</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22129 (Plugins cannot be updated when getting updates from outside the repo) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 23:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22129#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22129#comment:7/1351899881390189</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22129#comment:6" title="Comment 6"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22129#comment:3" title="Comment 3"&gt;griffinjt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are you insinuating here that WordPress should do this or that plugin authors should do this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Since custom repositories are not going to be supported by core, I guess plugin authors who need a custom repository should create a meta plugin (intended to be network activated) which would add support for that repository, allowing inactive plugins to also be checked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I develop plugins that are hosted on private repositories and agree that this is the best solution. WP core cannot reasonably be loaded up with a list of all third party plugin repositories. Nor do I think that most people running said repositories would want their repositories being automatically checked by all wP installs.
&lt;/p&gt;
&lt;p&gt;
I'm for won't fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20846 (Multisite: Network Users can post comments without being members of ...) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 23:02:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20846#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20846#comment:9/1351897372136293</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20846#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is how MU functioned.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Consider a single WP install as a network of one site. In a test single site, create a test user then remove the user's role. Set the discussion settings to registered users can comment. The test user can still comment even though they have no role on the site. The behavior in the network is the same. It isn't a test that the user has a role but a test that the user has a valid account.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [22360]: Compress scripts/styles: 3.5-beta2-22360.</title>
      
        <dc:creator>bumpbot</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:58:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22360</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22360/1351897117215952</guid>
      <description>&lt;p&gt;
Compress scripts/styles: 3.5-beta2-22360.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20825 (User activation in multisite should happen in the main blog..) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20825#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20825#comment:1/1351896728455849</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20825" title="#20825: defect (bug): User activation in multisite should happen in the main blog.. (closed: worksforme)"&gt;rahal.aboulfeth&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In multisite mode ( subdomain ) , when a user activates his account, it should happen in the main blog ( or not ? ) .
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This works the same as MU did. Activation in a subdomain install occurred at the subdomain address. We may want to change that. Just noting that it's not a bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20527 (Adding sunrise-like capability to ms-files) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20527#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20527#comment:4/1351896609204821</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Recommending close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20220 (add test to see if sunrise === on in ms-settings) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20220#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20220#comment:8/1351896554572987</guid>
      <description>&lt;p&gt;
You can add a simple check to the beginning of sunrise.php and if some condition is met and return.
&lt;/p&gt;
&lt;p&gt;
Even though there is a sunrise.php included in domain mapping sunrise.php is intended to be manually maintained. There are lots of different things that you can do in sunrise.php. If you have two plugins that both use sunrise.php you have manually create your own sunrise.php that correctly incorporates the code from both plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19807 (Clicking Preview in Multisite Creates 404 Error) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19807#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19807#comment:4/1351896242862501</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As a guess, this may have been a domain mapping related report.  When 3.3 was released preview stopped working on installs that did not have the lastest version of domain mapping.
&lt;/p&gt;
&lt;p&gt;
Suggesting we close until someone can provide some details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19030 (Sharding BLOGUPLOADDIR) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:41:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19030#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19030#comment:8/1351896079215183</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sharding of the blogs.dir directory was typically handled in sunrise.php as well.
&lt;/p&gt;
&lt;p&gt;
sunrise.php could be used to do database lookups and define any of the MU/MS specific constants.
&lt;/p&gt;
&lt;p&gt;
Given &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19235" title="#19235: task (blessed): Turn ms-files.php off by default (closed: fixed)"&gt;#19235&lt;/a&gt;, I'm rcommending we close this one. Since sharding involved moving files around anyway there isn't any advantage to continuing to use ms-files.php after the files are moved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>CaptainN</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:21/1351896076907148</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:20" title="Comment 20"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
The differences here are so minor, and there's no word on whether the approach would be preferred or not in broad terms over the more robust OOP based frameworks mentioned above, but let's keep going a bit more. :-)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In my past where I went crazy with helper functions but learned that too much is not a good thing; best to just stick with what exists.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well in that case, why not just copy the 5 GPCS(R) array values, and call it a day. It'd be easy enough:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$WP_GET = $_GET;
$WP_POST = $_POST;
// etc.
&lt;/pre&gt;&lt;p&gt;
These wouldn't be super global, but they could be globaled, and then they would work literally and exactly like the plain old superglobals. It'd be the easiest for any PHP developer to pick up. But I think there's room to improve things (I started with opposite position heh).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;pre class="wiki"&gt;// vs:
if ( _GET( 'myVar', 'default value' ) != 'default value' )
// or:
if ( has_GET( 'myVar' ) &amp;amp;&amp;amp; _GET( 'myVar' ) != 'default value' )
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
You got that last one wrong.  It should just be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( _GET( 'myVar' ) != 'default value' )
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Don't think I did. If the value hasn't been set (eg !has_GET('myVar')) then it'll pass the != 'default value' test because the value is NULL, which is not what you want.
&lt;/p&gt;
&lt;p&gt;
I did realize while playing with this stuff, you could use my _check and _default methods even with the normal superglobals if I just suppress the lookup error - what I did works exactly as an array lookup (returns NULL if the key doesn't exist in the array). I think all we've really accomplished vs the standard globalvars, is to not kick up a warning.
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo _default( @$_GET[ 'myVar' ], 'default value' );
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And finally to output the value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// vs:
echo _default( _get( 'myVar'), 'default value' );
// vs:
echo _GET( 'myVar', 'default value' );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
It's clear which of these I prefer. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Having the ability to set a default there does have some appeal.
&lt;/p&gt;
&lt;p&gt;
Related, there is a hole in the model we've been discussing, which is sometimes it's convenient to change the POST or GET data. Neither attempt has a solution for allowing that. Adding it would seem to complicate things.
&lt;/p&gt;
&lt;p&gt;
Kevin N.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16293 (In multisite installs, users with id 1 can't be deleted) updated</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:39:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16293#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16293#comment:9/1351895981748295</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Should be good now?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16293.3.diff attached to Ticket #16293</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16293/16293.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16293/16293.3.diff/1351895949152476</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18225 (Sub-blog on Network site redirects to wrong URL for user registration) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:37:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18225#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18225#comment:4/1351895860024967</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is not a bug. WordPress MU worked exactly the same way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17397 (Inconsistency in allowed site addresses) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17397#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17397#comment:5/1351895673015631</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There is a legitimate use case for Super admins adding subdomains with one or more '.' as long as they are not two together.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16328 (Auto redirect to home when www is in the URL in MU) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16328#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16328#comment:4/1351895316638978</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This sounds as though the network was created without the www and then switched to the www after the fact.
&lt;/p&gt;
&lt;p&gt;
The correct way to have this work is change your siteurl &amp;amp; home to www.domain.com before creating the network. I've only ever seen this situation occur when the url of the main site was changed after the network was created.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16293 (In multisite installs, users with id 1 can't be deleted) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16293#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16293#comment:8/1351895131855188</guid>
      <description>&lt;p&gt;
The issue with 16293.2.diff is that some networks will only have one super admin. The last condition should be removed
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;amp;&amp;amp; count( get_super_admins() ) &amp;gt; 1
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22125 (Prevent stomping $wp_the_query by accident) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:23:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22125#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22125#comment:4/1351895001050017</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14862 (wp 30 to wpmu - wild card domain - suggestion) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:19:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14862#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14862#comment:2/1351894757321113</guid>
      <description>&lt;p&gt;
Since 3.0 was released I've encountered quite a few people who have set up subdomain installs on hosts where wildcard subdomains were not supported.
&lt;/p&gt;
&lt;p&gt;
To get this to work they had to install as a folder install, edit wp-config.php and change the configuration to subdomains. Each added subdomain is set up as a domain alias in their web server config.
&lt;/p&gt;
&lt;p&gt;
In closed networks (where registration is closed) there isn't a compelling reason to check for wildcard subdomains on network setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14833 (performance serving static files) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:12:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14833#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14833#comment:8/1351894378578237</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Static files the used to be under /files/ will no longer be handled by php (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19235" title="#19235: task (blessed): Turn ms-files.php off by default (closed: fixed)"&gt;#19235&lt;/a&gt;). Recommending close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12496 (blog.dir should not require the use of php to serve large files) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:06:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12496#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12496#comment:4/1351894017242458</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was more or less addressed by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19235" title="#19235: task (blessed): Turn ms-files.php off by default (closed: fixed)"&gt;#19235&lt;/a&gt;. Recommending close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12756 (WPMU does not handle files with two or more dots in the filename) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 22:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12756#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12756#comment:14/1351893978523470</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was more or less addressed by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19235" title="#19235: task (blessed): Turn ms-files.php off by default (closed: fixed)"&gt;#19235&lt;/a&gt;. Recommending close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19796 (Multisite installs should work with WordPress in a subdirectory) updated</title>
      
        <dc:creator>budykiller</dc:creator>

      <pubDate>Fri, 02 Nov 2012 21:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19796#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19796#comment:72/1351892403440480</guid>
      <description>&lt;p&gt;
Hello.
I've upgrade to &lt;strong&gt;WP 3.5 beta 2&lt;/strong&gt; to use your patch but i still can't use Multisite installation in a subdirectory while accessing it from the root URL (avoiding the subdirectory in URL).
&lt;/p&gt;
&lt;p&gt;
Is there anything special to do to get it working ?
Here's my post on WP Support forum :
&lt;a class="ext-link" href="http://wordpress.org/support/topic/accessing-wordpress-subdirectory-from-root-url"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/accessing-wordpress-subdirectory-from-root-url&lt;/a&gt;
Thank you very much for all your work.
Adrien.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22125 (Prevent stomping $wp_the_query by accident) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 21:36:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22125#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22125#comment:3/1351892210971314</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-query-test.php attached to Ticket #22125</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 21:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22125/wp-query-test.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22125/wp-query-test.php/1351892128361675</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22125 (Prevent stomping $wp_the_query by accident) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 02 Nov 2012 21:34:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22125#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22125#comment:2/1351892079996707</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached is a page template for 2012 that demonstrates that wp_reset_query does not reset to the original query when the global $wp_query is assigned a new WP_Query. This problem is fixed by 22125.diff.
&lt;/p&gt;
&lt;p&gt;
The bug was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21792" title="Remove unnecessary return by refs. Props wonderboymusic. fixes #21839
"&gt;[21792]&lt;/a&gt;. Prior to that change query_posts returned a reference which replaced the existing $wp_query reference. After the change query_posts is returning an object which replaces the referenced object.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Nov 2012 21:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:20/1351891429379576</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:18" title="Comment 18"&gt;CaptainN&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm approaching this from an API design perspective. My primary goal is to make the API not suck. :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's exactly my reason too.  But as is typical with two programmers, we have three opinions and they are all different. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:17" title="Comment 17"&gt;MikeSchinkel&lt;/a&gt;:
The only weird thing with that, is I tend to think of array values as "next to" rather than "in to". That they are used essentially as pivot tables is a bit weird to me (but it's not unprecedented, and it's not bad). I suppose using multiple function arguments could be said to employ a similar hack, and multiple args does limit the ability to conveniently set a default in there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Another benefit is the &lt;code&gt;$key&lt;/code&gt; is a single value which can be stored and passed around as a single item.  You could still do that with your approach but accessing it would require the decidedly obtuse approach of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$value = call_user_func_array( '_get', $keys_as_array );
&lt;/pre&gt;&lt;p&gt;
I personally would prefer to just know the &lt;code&gt;_GET()&lt;/code&gt;'s first parameter is always the key in whatever form the key takes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you set a default value in a form (like "enter first name", or some invalid value in a select box, or even just an empty string), and you want the user to change the default, you'd have to check it on post back. has_GET only checks if the key is in the array.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Seems like this would work fine:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$first_name = _GET( 'first_name' );
if ( is_null( $first_name ) ||  "enter first name" == $first_name )
   echo "Sorry, you must enter a first name please.";
&lt;/pre&gt;&lt;p&gt;
That use-case is also mutually exclusive from the need for a default value so I don't see the default value conflicting with a placeholder.  If it did however, here is a contrived example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$first_name = _GET( 'first_name' );
if ( "enter first name" == $first_name )
   echo "Sorry, you must enter a first name please.";
else
   $first_name = 'John Doe';
&lt;/pre&gt;&lt;p&gt;
This could somehow be turned into an expression by adding your &lt;code&gt;_default()&lt;/code&gt; function but that's adding another helper method and I would prefer to keep the number of new WordPress' specific functions we have to learn to a minimum. If we want to add a &lt;code&gt;_default()&lt;/code&gt; and &lt;code&gt;_check()&lt;/code&gt; I'd propose creating a new ticket proposing that WordPress add them.
&lt;/p&gt;
&lt;p&gt;
But if you &lt;em&gt;really&lt;/em&gt; want a single expression:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$first_name = _GET( 'first_name', 'John Doe', 'enter first name' )
if ( is_wp_error( $first_name ) )
   echo "Sorry, you must enter a first name please.";
&lt;/pre&gt;&lt;p&gt;
Or even:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$first_name = _GET( 'first_name', 'John Doe', array(
   'stop_value' =&amp;gt; 'enter first name',
   'not_empty' =&amp;gt; true,
));
if ( is_wp_error( $first_name ) )
   switch ( $first_name-&amp;gt;get_error_code() ) {
      case 'empty':
      case 'invalid_value':
         echo "Sorry, you must enter a first name please.";
         break
   }
&lt;/pre&gt;&lt;p&gt;
But I wouldn't advocate for that level of complexity.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or if you need to check for a default value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// old way:
if ( isset( $_GET['myVar'] ) &amp;amp;&amp;amp; 'default value' != $_GET['myVar'] )
// vs:
if ( _check( _get( 'myVar' ), 'default value' ) )
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
This adds even more surface area to WordPress.  There's a cost in terms of runtime overhead, and learning; everyone will need to learn what &lt;code&gt;_check()&lt;/code&gt; does. People who are familiar with PHP don't have to learn this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isset( $_GET['myVar'] ) &amp;amp;&amp;amp; 'default value' != $_GET['myVar'] )
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
...
The ... are way better than the "old way".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Syntactical sugar in PHP is good IMO but adding helper functions in libraries and frameworks usually just adds unnecessary complexity. In my past where I went crazy with helper functions but learned that too much is not a good thing; best to just stick with what exists.
&lt;/p&gt;
&lt;p&gt;
In the case of the proposed &lt;code&gt;_GET()&lt;/code&gt;, we'd already be are adding it so we can kill three (3) birds with one stone; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;: Be graceful when $_GET&lt;a class="missing wiki"&gt;foo?&lt;/a&gt; doesn't exist, and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt;: Allow us to add a default value when we need one.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;pre class="wiki"&gt;// vs:
if ( _GET( 'myVar', 'default value' ) != 'default value' )
// or:
if ( has_GET( 'myVar' ) &amp;amp;&amp;amp; _GET( 'myVar' ) != 'default value' )
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
You got that last one wrong.  It should just be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( _GET( 'myVar' ) != 'default value' )
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
And finally to output the value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// vs:
echo _default( _get( 'myVar'), 'default value' );
// vs:
echo _GET( 'myVar', 'default value' );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
It's clear which of these I prefer. :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:19" title="Comment 19"&gt;CaptainN&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also note, your implementation would need to do something similar.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. I didn't address that part because I don't understand the requirements 100%.  I was focused on suggesting an API that I think doesn't suck, much as you were. :)
&lt;/p&gt;
&lt;p&gt;
But given that it's WordPress I would guess they might simply want to use the object cache?
&lt;/p&gt;
&lt;p&gt;
So...we've now both made our cases. But neither of us makes the decision. :)  I'm just going to  leave it to let others give their opinions, and eventually @nacin or someone else from the core team will decide.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21391 (Move attachment editing (media.php) to use standard post type UI) updated</title>
      
        <dc:creator>husobj</dc:creator>

      <pubDate>Fri, 02 Nov 2012 20:53:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21391#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21391#comment:58/1351889634495364</guid>
      <description>&lt;p&gt;
I like it too
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22349 (options-privacy.php should redirect to options-reading.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Nov 2012 20:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22349#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22349#comment:3/1351888231492944</guid>
      <description>&lt;p&gt;
It's not too important. The admin page of a plugin of mine links to &lt;code&gt;options-privacy.php&lt;/code&gt; and clicking on it currently gives you a WSOD.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>CaptainN</dc:creator>

      <pubDate>Fri, 02 Nov 2012 20:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:19/1351887670973364</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:17" title="Comment 17"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:16" title="Comment 16"&gt;CaptainN&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here's a quick version I through together (without testing):
$wp_get = $_GET;
$wp_post = $_POST;
$wp_request = $_REQUEST;
$wp_cookie = $_COOKIE;
$wp_server = $_SERVER;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ignoring everything else for the moment, I think WordPress is moving away from global vars and not adding any new ones. Can someone else confirm this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, ideally that'd all be wrapped in a class and store that data in properties instead of just dumping them into the global space.
&lt;/p&gt;
&lt;p&gt;
Also note, your implementation would need to do something similar. Right now you wrap the superglobals directly, which carries with it whatever baggage WordPress is dumping into those (as well as any damage done to them by plugin authors etc. - I once manually unslashed the GPCS values, before I understood why they were being magic quoted even though the php.ini setting was off - I've seen others do that, and I actually wonder how many plugins still do it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18960 (Localised installs no longer receiving translations for bundled themes) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 20:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18960#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18960#comment:24/1351887280986646</guid>
      <description>&lt;p&gt;
I've deployed changes to wordpress.org's localized package builder to place bundled theme po/mo files in the new location starting in 3.5. Tested and good to go.
&lt;/p&gt;
&lt;p&gt;
Here's what the build looks like: &lt;a class="ext-link" href="http://nl.wordpress.org/builds/nl_NL/trunk/wordpress-3.5-beta2-22352-nl_NL.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://nl.wordpress.org/builds/nl_NL/trunk/wordpress-3.5-beta2-22352-nl_NL.zip&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>CaptainN</dc:creator>

      <pubDate>Fri, 02 Nov 2012 20:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:18/1351886958390339</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:17" title="Comment 17"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The code I uploaded used an array for that, i.e.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$print_r(  _GET( array( 'level1', 'level2' ) ) );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Ah! I missed that (I wrote mine while you were posting yours, and didn't check yours thoroughly - and mine was a proof of concept, not meant to be production code - more of a design mockup).
&lt;/p&gt;
&lt;p&gt;
The only weird thing with that, is I tend to think of array values as "next to" rather than "in to". That they are used essentially as pivot tables is a bit weird to me (but it's not unprecedented, and it's not bad). I suppose using multiple function arguments could be said to employ a similar hack, and multiple args does limit the ability to conveniently set a default in there.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, how would you know that you've set the default value? You'd still have to check that. Maybe more methods are called for?
&lt;/p&gt;
&lt;pre class="wiki"&gt;// default value and set in the GPCS method
if ( _get( 'myVar', 'default value' ) != 'default value' ) {
    // validation passes
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
What's the use case where that is needed that &lt;code&gt;has_GET()&lt;/code&gt;and not passing a default &lt;code&gt;_GET( 'myVar' )&lt;/code&gt;  doesn't address?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you set a default value in a form (like "enter first name", or some invalid value in a select box, or even just an empty string), and you want the user to change the default, you'd have to check it on post back. has_GET only checks if the key is in the array.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt; a function to check for a default value with NULL checks
if ( _check( _get( 'myVar' ), 'default value' )  {
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; the value is validated
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; and if you need to output the value with a default
echo _default( _get( 'myVar' ), 'default value' );
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;_default()&lt;/code&gt; and &lt;code&gt;_check()&lt;/code&gt; seems like more work than doing it the old way.  IMO, of course.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To just check if the key is set.
&lt;/p&gt;
&lt;pre class="wiki"&gt;// old way:
if ( isset( $_GET['myVar'] ) )
// vs:
if ( is_null( _get('myVar') )
// vs:
if ( has_GET( 'myVar' ) )
&lt;/pre&gt;&lt;p&gt;
Or if you need to check for a default value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// old way:
if ( isset( $_GET['myVar'] ) &amp;amp;&amp;amp; 'default value' != $_GET['myVar'] )
// vs:
if ( _check( _get( 'myVar' ), 'default value' ) )
// vs:
if ( _GET( 'myVar', 'default value' ) != 'default value' )
// or:
if ( has_GET( 'myVar' ) &amp;amp;&amp;amp; _GET( 'myVar' ) != 'default value' )
&lt;/pre&gt;&lt;p&gt;
And finally to output the value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// old way:
if ( isset( $_GET['myVar'] ) ) echo $_GET['myVar']; else echo 'default value';
// vs:
echo _default( _get( 'myVar'), 'default value' );
// vs:
echo _get( 'myVar', 'default value' );
&lt;/pre&gt;&lt;p&gt;
The second two in each of the three case (except maybe the first) are way better than the "old way". Of course, has_GET (et al) and _check could easily be written on top of either API solution for even more brevity - for example check_GET( 'myVar', 'default value' ) could be nice in the "check for default value example" above.
&lt;/p&gt;
&lt;p&gt;
I'm approaching this from an API design perspective. My primary goal is to make the API not suck. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22349 (options-privacy.php should redirect to options-reading.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 19:42:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22349#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22349#comment:2/1351885358080066</guid>
      <description>&lt;p&gt;
We've gotten away with removing admin pages before without redirects many times before, such as categories.php, page.php, page-new.php, edit-pages.php, link-category.php, optons-misc.php, and the entire set of mu-* or ms-* files that made up the old Super Admin menu in MU and 3.0, respectively. Is this coming out of a simple suggestion, or have we seen a number of users affected by this in the forums?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22349 (options-privacy.php should redirect to options-reading.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Nov 2012 19:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22349#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22349#comment:1/1351884376310147</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>22349.patch attached to Ticket #22349</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Nov 2012 19:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22349/22349.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22349/22349.patch/1351884355986837</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22349 (options-privacy.php should redirect to options-reading.php) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Nov 2012 19:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22349</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22349/1351884314768235</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21838" title="Fold Privacy Settings into Reading Settings, moving blog_public ..."&gt;r21838&lt;/a&gt; removed &lt;code&gt;options-privacy.php&lt;/code&gt; and moved its one remaining option into &lt;code&gt;options-reading.php&lt;/code&gt;. We should do a redirect from the former to the latter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22348 (Add support for custom background default images) created</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Fri, 02 Nov 2012 19:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22348</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22348/1351884312583256</guid>
      <description>&lt;p&gt;
When specifying custom header default images for a theme, I always forget that you can't do the same for custom backgrounds.
&lt;/p&gt;
&lt;p&gt;
It would be highly desirable to be able to set default background images, just as you can with custom headers.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22343 (Make some better theme preview test data) updated</title>
      
        <dc:creator>wycks</dc:creator>

      <pubDate>Fri, 02 Nov 2012 19:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22343#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22343#comment:3/1351883986544495</guid>
      <description>&lt;p&gt;
What is needed to be able to program &lt;em&gt;with wordpress&lt;/em&gt; on a boat?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Nov 2012 19:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:17/1351883111337973</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:16" title="Comment 16"&gt;CaptainN&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here's a quick version I through together (without testing):
$wp_get = $_GET;
$wp_post = $_POST;
$wp_request = $_REQUEST;
$wp_cookie = $_COOKIE;
$wp_server = $_SERVER;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ignoring everything else for the moment, I think WordPress is moving away from global vars and not adding any new ones. Can someone else confirm this?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So how do you mix the default value specification in the method signature that retains the multidimensional capability of PHP forms (name="level1[level2]"). I'd use the second (third, etc.) arguments as a way to access the indexes in the array (_get('level1','level2');), but you've used them to specify the default value.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The code I uploaded used an array for that, i.e.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$print_r(  _GET( array( 'level1', 'level2' ) ) );
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, how would you know that you've set the default value? You'd still have to check that. Maybe more methods are called for?
&lt;/p&gt;
&lt;pre class="wiki"&gt;// default value and set in the GPCS method
if ( _get( 'myVar', 'default value' ) != 'default value' ) {
    // validation passes
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
What's the use case where that is needed that &lt;code&gt;has_GET()&lt;/code&gt;and not passing a default &lt;code&gt;_GET( 'myVar' )&lt;/code&gt;  doesn't address?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt; a function to check for a default value with NULL checks
if ( _check( _get( 'myVar' ), 'default value' )  {
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; the value is validated
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; and if you need to output the value with a default
echo _default( _get( 'myVar' ), 'default value' );
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;_default()&lt;/code&gt; and &lt;code&gt;_check()&lt;/code&gt; seems like more work than doing it the old way.  IMO, of course.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Fri, 02 Nov 2012 19:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:13/1351883103945444</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22058#comment:12" title="Comment 12"&gt;grapplerulrich&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@MikeHansenMe Thanks, I updated the patch. I also saw a problem with the "background-attachment:" and fixed that too. How long will it take for it to be implemented in WordPress?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Tested and can confirm the customizer is now working as expected. We are currently in a feature freeze for this release cycle so it will likely be reviewed after 3.5 comes out when enhancements are being considered. Thanks for contributing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21506 (Standard Theme Hooks) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21506#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21506#comment:44/1351882732137600</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>CaptainN</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:55:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:16/1351882541436036</guid>
      <description>&lt;p&gt;
Here's a quick version I through together (without testing):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
$wp_get = $_GET;
$wp_post = $_POST;
$wp_request = $_REQUEST;
$wp_cookie = $_COOKIE;
$wp_server = $_SERVER;
function wp_gpcs( $gprcs, $key )
{
	global $wp_get, $wp_post, $wp_request, $wp_cookie, $wp_server;
	// return the whole array if no $key specified
	if ( is_null( $key ) )
		return $$gprcs;
	// return the value of the key
	if ( isset( $$gprcs[ $key ] ) )
		return $$gprcs[ $Key ];
	// if not set, return NULL - this differs from standard PHP
	// behavior, which would throw a notice.
	else
		return NULL;
	// :TODO: Expand with support for multi-dimensional arrays.
}
function _get( $key = NULL ) {
	return wp_gpcs( 'wp_get', $key );
}
function _post( $key = NULL ) {
	return wp_gpcs( 'wp_post', $key );
}
function _request( $key = NULL ) {
	return wp_gpcs( 'wp_request', $key );
}
function _cookie( $key = NULL ) {
	return wp_gpcs( 'wp_cookie', $key );
}
function _server( $key = NULL ) {
	return wp_gpcs( 'wp_server', $key );
}
&lt;/pre&gt;&lt;p&gt;
That whole thing could be wrapped in a class to make it much cleaner, but this is just a quick and dirty example.
&lt;/p&gt;
&lt;p&gt;
This would have be be inserted before the WordPress magic quotes operations. I changed the part where it would normally throw a notice (or error, I don't remember which it does), because I don't actually know how to do that while retaining the call stack, etc. This may be better anyway. I also didn't implement multidimensional support, but it wouldn't be too hard (using func_get_args and family).
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:14" title="Comment 14"&gt;MikeSchinkel&lt;/a&gt;: You have a point, it would be nice (and simulating the PHP error system may be too problematic anyway). So how do you mix the default value specification in the method signature that retains the multidimensional capability of PHP forms (name="level1[level2]"). I'd use the second (third, etc.) arguments as a way to access the indexes in the array (_get('level1','level2');), but you've used them to specify the default value.
&lt;/p&gt;
&lt;p&gt;
Also, how would you know that you've set the default value? You'd still have to check that. Maybe more methods are called for?
&lt;/p&gt;
&lt;pre class="wiki"&gt;// default value and set in the GPCS method
if ( _get( 'myVar', 'default value' ) != 'default value' ) {
    // validation passes
}
// If we return NULL:
// to check if it's set at all (for checkboxes and radios)
if ( !is_null( _get( 'myVar' ) ) ) {
    // It's set!
}
// a function to check for a default value with NULL checks
if ( _check( _get( 'myVar' ), 'default value' )  {
    // the value is validated
}
// and if you need to output the value with a default
echo _default( _get( 'myVar' ), 'default value' );
// returns value of $default if $value is null, $value otherwise
function _default( $value, $default ) {
    return ( is_null( $value ) )? $default: $value;
}
// returns false if the value is either null, or matches $default
function _check( $value, $default ) {
    return ( is_null( $value ) || $value == $default )? false: true;
}
// :NOTE: The above is psuedo code. I didn't run or test any of it.
&lt;/pre&gt;&lt;p&gt;
That way we can have the multidimensional support, and a reduction of boilerplate with no errors or notices being thrown, and the GPCS methods work almost the same as PHP does (except without annoying notices).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>miqro-twenty-eleven-default-bg-color.diff attached to Ticket #22347</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22347/miqro-twenty-eleven-default-bg-color.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22347/miqro-twenty-eleven-default-bg-color.diff/1351882334697926</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22347 (Wrong default_background_color in Twenty Eleven) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22347</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22347/1351882133650548</guid>
      <description>&lt;p&gt;
In functions.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		$default_background_color = 'f1f1f1';
&lt;/pre&gt;&lt;p&gt;
In style.css:
&lt;/p&gt;
&lt;pre class="wiki"&gt;body {
	background: #e2e2e2;
}
&lt;/pre&gt;&lt;p&gt;
As a result, when the user goes to the Custom Background screen for the first time, the background color value says #f1f1f1, which is not accurate.
&lt;/p&gt;
&lt;p&gt;
Found in 3.4.2. Confirmed in trunk. Attaching a patch file.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:15/1351881212514998</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21611 (Remove CSS hover styling of postboxes with disabled JS) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21611#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21611#comment:7/1351880620168200</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is so much better for no JS - I'd consider current behavior buggy looking and feeling. Makes perfect sense - let's do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19254 (Alignment of labels in "Add media" dialog) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19254#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19254#comment:8/1351879866857588</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19254-refresh.diff attached to Ticket #19254</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:10:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19254/19254-refresh.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19254/19254-refresh.diff/1351879812639746</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21506 (Standard Theme Hooks) updated</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21506#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21506#comment:43/1351879773649207</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21506 (Standard Theme Hooks) updated</title>
      
        <dc:creator>emiluzelac</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:07:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21506#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21506#comment:42/1351879648358162</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:04:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:14/1351879498224243</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:13" title="Comment 13"&gt;CaptainN&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A comment on that implementation though - I'd prefer lower case function names (_get, _post, _request) to uppercase, because I think if these are lower case, it'll be less likely to be confused with the real superglobals at a glance.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The reason I like uppercase is because I think &lt;code&gt;_get()&lt;/code&gt;, &lt;code&gt;_post()&lt;/code&gt;, &lt;code&gt;_request()&lt;/code&gt; would too easily get lost in other code and it would be harder for developers &lt;em&gt;(like me)&lt;/em&gt; to see them while scanning.  But it all depends on what the decision makers think I guess, and I'm not one. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe this is less of an issue, but I'd also like to see little else other than a wrapper around the actual superglobals. In other words, it should behave pretty much exactly as the PHP standard on which it's based.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What do you propose for accessing not existent elements; throwing an error?  Personally I would hate to loose the opportunity to finally have a standard way to cleanly get a default value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21391 (Move attachment editing (media.php) to use standard post type UI) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 02 Nov 2012 18:01:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21391#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21391#comment:57/1351879279020448</guid>
      <description>&lt;p&gt;
I like it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>CaptainN</dc:creator>

      <pubDate>Fri, 02 Nov 2012 17:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:13/1351879107780731</guid>
      <description>&lt;p&gt;
Another way to reduce validation boilerplate is to use a system like WP_OnceForm, which polyfills the missing values. OnceForm starts from the HTML form, so it knows up front which name/value pairs will need to be filled in.
&lt;/p&gt;
&lt;p&gt;
The php GPCS system is different, it just deals with whatever is sent to the server without referencing anything else, so if the scope will be limited in the same way as PHP's GPCS system, some query methods to check for missing items as MikeSchinkel described makes sense (they even make sense for dealing with the standard PHP superglobals).
&lt;/p&gt;
&lt;p&gt;
A comment on that implementation though - I'd prefer lower case function names (_get, _post, _request) to uppercase, because I think if these are lower case, it'll be less likely to be confused with the real superglobals at a glance.
&lt;/p&gt;
&lt;p&gt;
Maybe this is less of an issue, but I'd also like to see little else other than a wrapper around the actual superglobals. In other words, it should behave pretty much exactly as the PHP standard on which it's based. The headache with the current system (especially when you are first getting started) is that WordPress's model differs from PHP in a couple of substantial (magic-quotes), and some less substantial (the way the GPCS vars are mixed) ways, which causes a lot of problems before you find out what WordPress is doing in there, and here's a change to fix that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21807 (Caption editing in the media modal library view) updated</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 02 Nov 2012 17:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21807#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21807#comment:25/1351878215877803</guid>
      <description>&lt;p&gt;
Hi,
I see that description gets mapped to different fields depending on the type of attachment. Will we be adding the ability to specifically modify individual fields from here in the future (like the image title and alt tag fields) or will that be restricted to the main Media Library interface? If so, is there a better ticket to ask this question or track progress for that?
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Nov 2012 17:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:12/1351877836059796</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:11" title="Comment 11"&gt;CaptainN&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was thinking something a bit more simple, a set of functions that mimic the GPCS globals.
&lt;/p&gt;
&lt;pre class="wiki"&gt;// instead of
$something = $_GET['something'];
// use the new
$something = _get('something');
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
+1.
&lt;/p&gt;
&lt;p&gt;
Suggestions:
&lt;/p&gt;
&lt;p&gt;
1.) It would be great if we could finally get away from this pattern:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$foo = isset( $_GET['foo'] ) ? $_GET['foo'] : false
&lt;/pre&gt;&lt;p&gt;
and instead be able to do &lt;em&gt;(something like)&lt;/em&gt; this &lt;em&gt;(which defaults to 100)&lt;/em&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$foo = _GET( 'foo', 100 );
&lt;/pre&gt;&lt;p&gt;
And maybe this defaults to &lt;code&gt;null&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$foo = _GET( 'foo' );
&lt;/pre&gt;&lt;p&gt;
2.) If it supports defaults we need a way to test for existence, and we could do this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! has_GET( 'bananas' ) )
  echo "We have no bananas today.";
&lt;/pre&gt;&lt;p&gt;
3.) We might need to test count of $_POST to see if a form was submitted, so passing no parameters to has_POST() could do that:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! has_POST() )
  echo "No form submitted.";
&lt;/pre&gt;&lt;p&gt;
4.) For accessing multi dimensional arrays we could pass in an array of keys instead of a string or numeric key:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// For &amp;lt;input type="text" name="test[abc][123][xyz]" /&amp;gt;
var_dump( _REQUEST( array( 'test', 'abc','123','xyz' ) ) );
&lt;/pre&gt;&lt;p&gt;
5.) The examples above use uppercase for _GET() and _POST(); those would be more consistent with the existing vars than using &lt;code&gt;_get()&lt;/code&gt; and &lt;code&gt;_post()&lt;/code&gt;, be easier to see in code, and probably be less likely to conflict with existing code.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;I've implemented and &lt;em&gt;(mostly)&lt;/em&gt; commented &lt;code&gt;_GET()&lt;/code&gt;, &lt;code&gt;_POST()&lt;/code&gt; and &lt;code&gt;_REQUEST()&lt;/code&gt; in a self-contained attached example file &lt;code&gt;GPCS.php&lt;/code&gt;&lt;/strong&gt;. You can drop in to the root of a WordPress site to test and play with.  I didn't have time to implement the rest of the superglobals but might work on them if people like this approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>GPCS.php attached to Ticket #22325</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Nov 2012 17:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22325/GPCS.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22325/GPCS.php/1351877544898037</guid>
      <description>&lt;p&gt;
Proposed implementations of _GET(), _POST() and _REQUEST()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22319 (Gallery Order for 3.5 beta) updated</title>
      
        <dc:creator>tar.gz</dc:creator>

      <pubDate>Fri, 02 Nov 2012 17:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22319#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22319#comment:3/1351877417657363</guid>
      <description>&lt;p&gt;
FYI, Koopersmith &lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2012-09-18&amp;amp;sort=asc#m58793"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;has commented&lt;/a&gt; on this matter during the weekly UI chat back in September:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"I can tell you that we’ll probably do something with the exif data. Whether or not we deal with raw order changes will probably end up being the debate here."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And I share willwenzel's opinion: the default result for numbered images goes against the most common use cases (chronological narration).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22128 (Adding upload mimetype in Multisite does not work if mimetype is not ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 17:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22128#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22128#comment:13/1351876316809733</guid>
      <description>&lt;p&gt;
In general, I think I would prefer for this UI to be in a plugin — including the current input box.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [1108]: Update test_double_escaped_placeholders() to actually pass additional ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 17:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1108/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1108/tests/1351875961724055</guid>
      <description>&lt;p&gt;
Update test_double_escaped_placeholders() to actually pass additional arguments to prepare().
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21570 (is_email_address_unsafe() is too aggressive) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:57:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21570#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21570#comment:11/1351875479451989</guid>
      <description>&lt;p&gt;
See &lt;a class="ext-link" href="https://unit-tests.trac.wordpress.org//intertrac/changeset%3A1094" title="changeset:1094 in WordPress Unit Tests Trac (old)"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;[UT1094]&lt;/a&gt; for an additional test that now fails: blocking foo.co also blocks foo.com.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [1107]: Remove unused directory. Remove extra tab.  </title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1107/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1107/tests/1351875377053663</guid>
      <description>&lt;p&gt;
Remove unused directory. Remove extra tab.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22331 (show_home not working on wp_page_menu) closed</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22331#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22331#comment:4/1351875174787633</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22359" title="Bundled Themes: allow `show_home` argument to be overridden when using ..."&gt;22359&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bundled Themes: allow &lt;code&gt;show_home&lt;/code&gt; argument to be overridden when using &lt;code&gt;wp_page_menu&lt;/code&gt; as a fallback to a Custom Menu. Props SergeyBiryukov and kovshenin, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22331" title="#22331: defect (bug): show_home not working on wp_page_menu (closed: fixed)"&gt;#22331&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [22359]: Bundled Themes: allow `show_home` argument to be overridden when using ...</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22359</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22359/1351875173892281</guid>
      <description>&lt;p&gt;
Bundled Themes: allow &lt;code&gt;show_home&lt;/code&gt; argument to be overridden when using &lt;code&gt;wp_page_menu&lt;/code&gt; as a fallback to a Custom Menu. Props SergeyBiryukov and kovshenin, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22331" title="#22331: defect (bug): show_home not working on wp_page_menu (closed: fixed)"&gt;#22331&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>22307.2.diff attached to Ticket #22307</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:50:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22307/22307.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22307/22307.2.diff/1351875058079282</guid>
      <description>&lt;p&gt;
Perhaps a nicer way to do this.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [22358]: Twenty Twelve: handle a long site title a bit better in mobile view, ...</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22358</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22358/1351874891334732</guid>
      <description>&lt;p&gt;
Twenty Twelve: handle a long site title a bit better in mobile view, don't use line-height to add space between the h1 and h2 elements in this case.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22307 (Twenty Twelve: JavaScript error if navigation wrapper markup is ...) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:41:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22307#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22307#comment:21/1351874478934674</guid>
      <description>&lt;p&gt;
Good discussion so far.
&lt;/p&gt;
&lt;p&gt;
My take: while this should be the duty of the plugin or child theme to do things right, I think it's worth adding the JS check to make the theme more bulletproof. It's not a lot of code and helps it fail gracefully.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11399 (clean_post_cache() generates enormous amounts of queries on sites with ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11399#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11399#comment:25/1351872834538476</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22357" title="clean_post_cache() no longer calls itself recursively. see #11399.
"&gt;22357&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
clean_post_cache() no longer calls itself recursively. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11399" title="#11399: defect (bug): clean_post_cache() generates enormous amounts of queries on sites with ... (closed: fixed)"&gt;#11399&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [22357]: clean_post_cache() no longer calls itself recursively. see #11399.  </title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22357</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22357/1351872833713041</guid>
      <description>&lt;p&gt;
clean_post_cache() no longer calls itself recursively. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11399" title="#11399: defect (bug): clean_post_cache() generates enormous amounts of queries on sites with ... (closed: fixed)"&gt;#11399&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22346 (Add Videojug.com to internal whitelist) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:01:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22346#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22346#comment:1/1351872073893623</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Probably best done as a plugin for now, but here's a patch FWIW :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22346.diff attached to Ticket #22346</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Fri, 02 Nov 2012 16:00:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22346/22346.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22346/22346.diff/1351872036770168</guid>
      <description>&lt;p&gt;
Adds it in as an oebmed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>functions.php attached to Ticket #22346</title>
      
        <dc:creator>Videojug</dc:creator>

      <pubDate>Fri, 02 Nov 2012 15:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22346/functions.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22346/functions.php/1351870301655945</guid>
      <description>&lt;p&gt;
The modified default theme.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22346 (Add Videojug.com to internal whitelist) created</title>
      
        <dc:creator>Videojug</dc:creator>

      <pubDate>Fri, 02 Nov 2012 15:30:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22346</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22346/1351870250080743</guid>
      <description>&lt;p&gt;
Dear Wordpress,
&lt;/p&gt;
&lt;p&gt;
I am writing on behalf of Videojug. We create and distribute hiqh quality "How-To" online content, and have been producing professional, instructional, short-form video content since 2006. We receive many requests monthly from our Contributors and Users asking for assistance in embedding our videos in their Wordpress sites. Currently it is a convoluted process involving plugins adding complexities.
&lt;/p&gt;
&lt;p&gt;
Other video providers in our sector are already whitelisted. We would like to be added please to your internal whitelist, allowing any Wordpress blogger to embed our videos by copying the URL just like they would when embedding a Youtube video. Our own embed code has been stable for a long time.
&lt;/p&gt;
&lt;p&gt;
We have our oembeds working in the following wordpress account:
&lt;a class="ext-link" href="http://chloeluper.co.uk/index.php/embed-test-page/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://chloeluper.co.uk/index.php/embed-test-page/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is the add oembed provider code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_oembed_add_provider( '#http://(www\.)?videojug.com/(film|interview)/.*#i', 'http://www.videojug.com/oembed.{format}', true );
&lt;/pre&gt;&lt;p&gt;
I have attached the modified default theme.
&lt;/p&gt;
&lt;p&gt;
Thank you
Imad Salhi
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22343 (Make some better theme preview test data) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 02 Nov 2012 14:11:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22343#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22343#comment:2/1351865515504904</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not every theme needs to say "I'm On a Boat!"
&lt;/p&gt;
&lt;p&gt;
This was brought up at the Community Summit to the Theme Review team.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22344 (Fatal error with asp_tags on) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Fri, 02 Nov 2012 13:51:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22344#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22344#comment:7/1351864277864995</guid>
      <description>&lt;p&gt;
I stand in support of Mustache, partially because we've just begun Movember &lt;a class="ext-link" href="http://us.movember.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us.movember.com/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>CaptainN</dc:creator>

      <pubDate>Fri, 02 Nov 2012 13:42:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:11/1351863751252299</guid>
      <description>&lt;p&gt;
I was thinking something a bit more simple, a set of functions that mimic the GPCS globals.
&lt;/p&gt;
&lt;pre class="wiki"&gt;// instead of
$something = $_GET['something'];
// use the new
$something = _get('something');
&lt;/pre&gt;&lt;p&gt;
We could simulate other things like calling those methods with no arguments would return the entire array, multie args for multidimensional arrays etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 13:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:10/1351863212223319</guid>
      <description>&lt;p&gt;
I'd like to adopt a GPCS wrapper pattern that makes sense. To do that, I was figuring we could study what other PHP frameworks and systems were doing. Adopting or actually forking them is not necessary (and may not always be okay license-wise).
&lt;/p&gt;
&lt;p&gt;
The only thing we really care about for now is raw access to GPCS globals. We already do things like repair SERVER in wp_fix_server_vars(). Some of the helper functions in Symfony's Request are kind of nifty but they don't seem at all necessary at this point.
&lt;/p&gt;
&lt;p&gt;
This should probably have been a P2 post to better facilitate conversation. I will likely move the conversation there in the coming days.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22344 (Fatal error with asp_tags on) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Nov 2012 12:19:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22344#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22344#comment:6/1351858750488629</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22344#comment:5" title="Comment 5"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why not use &lt;code&gt;{{ }}&lt;/code&gt; and &lt;code&gt;{{{ }}}&lt;/code&gt; like in &lt;a class="ext-link" href="http://mustache.github.com/mustache.5.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Mustache&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd be happy to switch it to use that if we'd prefer, but I stuck to the closest one I could for now (and # was a handy symbol on my keyboard; it might be the case that it's hard to access on other keyboards though).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22344 (Fatal error with asp_tags on) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Nov 2012 12:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22344#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22344#comment:5/1351858158211270</guid>
      <description>&lt;p&gt;
Why not use &lt;code&gt;{{ }}&lt;/code&gt; and &lt;code&gt;{{{ }}}&lt;/code&gt; like in &lt;a class="ext-link" href="http://mustache.github.com/mustache.5.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Mustache&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22321.patch attached to Ticket #22321</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 02 Nov 2012 07:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22321/22321.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22321/22321.patch/1351843127700988</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22321 (Update SimplePie to 1.3.1) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Nov 2012 06:59:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22321#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22321#comment:7/1351839562705718</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I marked this as has-patch, since it's literally just copying over the 1.3.1 release; making a .diff for it makes no sense. If you &lt;em&gt;really&lt;/em&gt; want a patch: &lt;a class="ext-link" href="https://github.com/simplepie/simplepie/compare/1.3...1.3.1.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/simplepie/simplepie/compare/1.3...1.3.1.diff&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15705 (I can't login to admin.) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Nov 2012 06:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15705#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15705#comment:32/1351839386650793</guid>
      <description>invalid: &lt;p&gt;
Traced this down with the user, it was a problem with the server still running PHP/FI 2. We downgraded back to Personal Homepage Tools version 1, and it's all fixed now.
&lt;/p&gt;
&lt;p&gt;
(On a more serious note, we really should stop opening this.)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22344 (Fatal error with asp_tags on) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Nov 2012 06:18:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22344#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22344#comment:4/1351837112258834</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached patch changes all instances of &lt;code&gt;&amp;lt;%&lt;/code&gt; in the output code into &lt;code&gt;&amp;lt;#&lt;/code&gt; (likewise for the closing tags) and sets Underscore up to use those instead. Looks like it's working perfectly to me, but I'd recommend double-checking in case I missed something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22344.diff attached to Ticket #22344</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Nov 2012 06:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22344/22344.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22344/22344.diff/1351836979950842</guid>
      <description>&lt;p&gt;
Replace &amp;lt;% template tags with &amp;lt;#
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22344 (Fatal error with asp_tags on) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Nov 2012 06:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22344#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22344#comment:3/1351836207860166</guid>
      <description>&lt;p&gt;
Changing this to use &lt;code&gt;&amp;lt;?php echo '&amp;lt;%'; ?&amp;gt;&lt;/code&gt; is &lt;em&gt;really&lt;/em&gt; ugly and makes it much harder to work with. What if we change it to, say, &lt;code&gt;&amp;lt;#&lt;/code&gt; instead (&lt;a class="ext-link" href="http://underscorejs.org/#template"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;_.template&lt;/a&gt; supports that)? It seems much cleaner.
&lt;/p&gt;
&lt;p&gt;
I'll submit a patch for that, since changing it to echo it every time just doesn't make sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22325 (Abstract GPCS away from the superglobals) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Nov 2012 05:27:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22325#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22325#comment:9/1351834037950474</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22325#comment:8" title="Comment 8"&gt;mbijon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Symfony is definitely the only future-proofed candidate here. But, if we add Symfony we should be prepared for a bump to requiring 5.3.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At the moment, that's really out of the question. The &lt;a class="ext-link" href="http://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;stats page&lt;/a&gt; shows that we still have a huge 5.2 userbase, and I think it's somewhat unlikely that this will change soon. Personally, I'd love to drop 5.2, but practically, it's not possible.
&lt;/p&gt;
&lt;p&gt;
I think what would most likely happen is that we would have to fork the Request component, convert to 5.2-compatible, and then attempt to keep that up-to-date. It sucks, but it's most likely the only way. The code it seems relatively stable (&lt;a class="ext-link" href="https://github.com/symfony/HttpKernel/graphs/commit-activity"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Kernel activity&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/symfony/HttpKernel/graphs/code-frequency"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;line changes&lt;/a&gt;; &lt;a class="ext-link" href="https://github.com/symfony/HttpFoundation/graphs/commit-activity"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Foundation activity&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/symfony/HttpFoundation/graphs/code-frequency"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;line changes&lt;/a&gt;) but those are still a fair number of changes to backport constantly. Granted, most probably don't need any changes for 5.2 compatibility.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The Request component in Symfony will, I think, work on PHP 5.2.4, but we will likely need to grab a bigger part of Symfony than that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure what we'd need apart from Kernel and Foundation. The ClassLoader is just a standard SPL class loader really, and the rest is self-contained.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Edit: Just found drupal/org's research on Zend vs. Symfony from their decision-making on this: &lt;a class="ext-link" href="http://groups.drupal.org/node/167299"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://groups.drupal.org/node/167299&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a great link; thanks for that! I think that further confirms that Zend is dead-in-the-water as far as this is concerned; it's also very interlinked with their other stuff, while - as noted - Symfony components are very much standalone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22345 (Use different filter for the_title() and the_title_attribute()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 02:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22345#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22345#comment:1/1351824487927589</guid>
      <description>&lt;p&gt;
the_title_attribute() is designed to be the same as the_title(), with the exception of sanitizing it for an attribute (which includes, for example, stripping markup).
&lt;/p&gt;
&lt;p&gt;
It makes sense that they run the same underlying filters. If you don't want to affect an attribute, you should probably not use the_title_attribute().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22344 (Fatal error with asp_tags on) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Nov 2012 02:46:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22344#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22344#comment:2/1351824398127652</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree this is an issue. Seems like all of these will need to be &amp;lt;?php echo '&amp;lt;%'; ?&amp;gt; instead. It is times like these I really, really don't like PHP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22343 (Make some better theme preview test data) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Nov 2012 02:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22343#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22343#comment:1/1351822749543516</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22345 (Use different filter for the_title() and the_title_attribute()) created</title>
      
        <dc:creator>zourbuth</dc:creator>

      <pubDate>Fri, 02 Nov 2012 02:03:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22345</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22345/1351821782755646</guid>
      <description>&lt;p&gt;
Since &lt;strong&gt;the_title&lt;/strong&gt;() and &lt;strong&gt;the_title_attribute&lt;/strong&gt;() function use the same function &lt;strong&gt;get_the_title&lt;/strong&gt;() to retrieve the title, I think there is no way to add the_title filter only for the_title() function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22344 (Fatal error with asp_tags on) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Nov 2012 01:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22344#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22344#comment:1/1351821530682763</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22344 (Fatal error with asp_tags on) created</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 02 Nov 2012 01:44:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22344</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22344/1351820655172930</guid>
      <description>&lt;pre class="wiki"&gt;PHP Parse error:  syntax error, unexpected ')', expecting '&amp;amp;' or T_VARIABLE in /wp-includes/media.php on line 1453
&lt;/pre&gt;&lt;p&gt;
I upgraded to 3.5-beta2-22352 with the beta plugin, and got the "white screen of death" on one system, but not on another. Debugged and found this error. Uploaded a .user.ini file with the line asp_tags = Off to the root folder, and everything was back to normal.
&lt;/p&gt;
&lt;p&gt;
It seems media.php uses a script templating method with &amp;lt;% %&amp;gt; as placeholders. This is dangerous and will break sites.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18719 (YouTube Embedding Fails for https:// URLs) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 02 Nov 2012 01:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18719#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18719#comment:22/1351819759590170</guid>
      <description>&lt;p&gt;
That might be TinyMCE doing some magic tricks, separate from the oembed. The oembed may be improved in the future, but that's for a separate ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21390 (Upload/Insert media revamp) updated</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Fri, 02 Nov 2012 01:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21390#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21390#comment:39/1351819202743712</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22356" title="Media: Update the gallery &amp;#34;add images&amp;#34; state. see #21390.
"&gt;22356&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Update the gallery "add images" state. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21390" title="#21390: task (blessed): Upload/Insert media revamp (closed: fixed)"&gt;#21390&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [22356]: Media: Update the gallery "add images" state. see #21390. </title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Fri, 02 Nov 2012 01:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22356</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22356/1351819201673619</guid>
      <description>&lt;p&gt;
Media: Update the gallery "add images" state. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21390" title="#21390: task (blessed): Upload/Insert media revamp (closed: fixed)"&gt;#21390&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22343 (Make some better theme preview test data) created</title>
      
        <dc:creator>wycks</dc:creator>

      <pubDate>Fri, 02 Nov 2012 01:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22343</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22343/1351819186724122</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://i.imgur.com/Vdb8y.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://i.imgur.com/Vdb8y.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Surely something &lt;strong&gt;new&lt;/strong&gt; can be done here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19061 (.pinkynail image toggling is reversed for single file uploads) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Nov 2012 01:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19061#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19061#comment:3/1351818738009036</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19247" title="Uploader: fix progress bar JS and update the style (light blue bars), ..."&gt;[19247]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10142 (Add metadata support for taxonomy terms) updated</title>
      
        <dc:creator>aaemnnosttv</dc:creator>

      <pubDate>Fri, 02 Nov 2012 01:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10142#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10142#comment:84/1351818155128897</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21829 (Custom Field "Update" button failure) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Nov 2012 00:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21829#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21829#comment:41/1351814530802179</guid>
      <description>&lt;p&gt;
Updated &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21829/21829.34-branch.patch" title="Attachment '21829.34-branch.patch' in Ticket #21829"&gt;21829.34-branch.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21829/21829.34-branch.patch" title="Download"&gt;​&lt;/a&gt; to include the fix for link categories from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22340" title="#22340: defect (bug): Link Manager: cannot create a new category link via the Quick link in ... (closed: fixed)"&gt;#22340&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22340 (Link Manager: cannot create a new category link via the Quick link in ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Nov 2012 00:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22340#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22340#comment:1/1351814523938129</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Broken in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21205" title="Change a jQuery selector to work around a change in jQuery 1.7.2 ..."&gt;[21205]&lt;/a&gt;, fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21688" title="Fix the adding of link categories through the &amp;#34;Add Link&amp;#34; screen. props ..."&gt;[21688]&lt;/a&gt;, broken again in trunk with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21781" title="Fix adding and updating from the Custom Fields meta box. Broken in ..."&gt;[21781]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Added this fix to the refreshed patch for the 3.4 branch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21829" title="#21829: defect (bug): Custom Field &amp;#34;Update&amp;#34; button failure (closed: fixed)"&gt;#21829&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>