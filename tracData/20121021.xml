<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:49:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:5/1350863376487092</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks! But at the end... I think jQuery should load in the header as default... Because most of the sites do so
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22250.diff attached to Ticket #22250</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22250/22250.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22250/22250.diff/1350862865395449</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) created</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:40:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250/1350862822044656</guid>
      <description>&lt;p&gt;
About a year ago, Rarst released a plugin named Advanced Hooks API (&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/advanced-hooks-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/advanced-hooks-api/&lt;/a&gt;) that adds a number of (experimental) wrappers that allow one to hook more elaborate events without coding intermediary functions. One of these wrappers in particular (add_action_with_args) would save theme and plugin devs an annoying amount of work writing dummy functions to simply hook a callback that requires a few specific params.
&lt;/p&gt;
&lt;p&gt;
I pulled just that functionality out of his plugin, distilled it to it's simplest form, and added it in to plugin.php. I think this functionality has legs, and a number of others agree, but some are not convinced it has a home in core. I would LOVE to see it there, as I said it would eliminate a ton of unnecessary work, but I present it to you who are smarter than me to talk through why it should/shouldn't be.
&lt;/p&gt;
&lt;p&gt;
Here are some sample use-cases: &lt;a class="ext-link" href="https://gist.github.com/3928941"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/3928941&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22249 (Add ability to set or remove attributes on enqueued scripts and styles.) created</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22249</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22249/1350862153569188</guid>
      <description>&lt;p&gt;
I think it should be easier to customize the loading of scripts and styles (easier to customize the markup generated by the script/style system). Proposed solutions:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Solution 1:&lt;/strong&gt; Allow &lt;code&gt;wp_enqueue_script&lt;/code&gt;, &lt;code&gt;wp_enqueue_style&lt;/code&gt;, &lt;code&gt;wp_register_script&lt;/code&gt;, &lt;code&gt;wp_register_style&lt;/code&gt; to accept an array of attributes as the &lt;code&gt;$src&lt;/code&gt; parameter. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script( 'my-plugin', array(
    'src' =&amp;gt; 'http://example.com/js/app.js'
    'defer' =&amp;gt; ''
    'data-my-plugin' =&amp;gt; 'custom data attr value'
), array('jquery'), null, true );
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Solution 2:&lt;/strong&gt; Add a filter before the markup is generated that allows devs to filter the attributes while they are in array format. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('script_loader_attrs', function ($attrs, $handle) {
    unset ( $attrs['type'] );
    'my-plugin' === $handle and $attrs['data-my-plugin'] = 'plugin data';
    $attrs['src'] = remove_query_arg( $attrs['src'] );
    return $attrs;
}, 12, 2);
&lt;/pre&gt;&lt;p&gt;
In class.wp-scripts.php it might look something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attrs = (array) apply_filters('script_loader_attrs', $attrs, $handle);
&lt;/pre&gt;&lt;p&gt;
and/or:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attrs = (array) apply_filters("{$handle}_script_loader_attrs", $attrs );
&lt;/pre&gt;&lt;hr /&gt;
&lt;p&gt;
I imagine that solution &lt;strong&gt;2&lt;/strong&gt; would be easier to implement than &lt;strong&gt;1&lt;/strong&gt;, and &lt;strong&gt;2&lt;/strong&gt; allows for themes/plugins to modify scripts/styles w/o re-registering resources.
&lt;/p&gt;
&lt;p&gt;
The key feature of both solutions is the ability to modify the attrs while in array format. There are other ways that one could achieve the same results, but the array is &lt;strong&gt;by far the cleanest&lt;/strong&gt;. Dirty alternatives include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;preg_replace()&lt;/code&gt; on the markup after it is generated (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22245" title="#22245: feature request: Add Hook: &amp;#34;script_loader_tag&amp;#34; (closed: duplicate)"&gt;#22245&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Use output buffers and PHP's DOMElement interface
&lt;/li&gt;&lt;li&gt;Filter away the "print_scripts_array" and regenerate the markupmanually.)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13592 (script_loader_src and style_loader_tag filters) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:12:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13592#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13592#comment:6/1350861161292543</guid>
      <description>&lt;p&gt;
So what happened to the "script_loader_tag" filter? See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22245" title="#22245: feature request: Add Hook: &amp;#34;script_loader_tag&amp;#34; (closed: duplicate)"&gt;#22245&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245#comment:4/1350861099641885</guid>
      <description>&lt;p&gt;
@ocean90 There's no explanation in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13592" title="#13592: enhancement: script_loader_src and style_loader_tag filters (closed: fixed)"&gt;#13592&lt;/a&gt; as to why "script_loader_tag" was not added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:4/1350860876999690</guid>
      <description>&lt;p&gt;
@alexvorn2 It's no problem as long as they include the dependencies array when registering/enqueuing. If 'jquery' is registered in the footer and a plugin in the head properly lists 'jquery' as a dependency then 'jquery' will load in the head.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Sun, 21 Oct 2012 22:41:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:3/1350859261525270</guid>
      <description>&lt;p&gt;
what about the scripts that load in the header?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 21:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:17/1350856574750362</guid>
      <description>&lt;p&gt;
Or, we could just throw our hands in the air: add a 'script_loader_tag' and let plugins add whatever attributes they see fit: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13592" title="#13592: enhancement: script_loader_src and style_loader_tag filters (closed: fixed)"&gt;#13592&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22248 (Classic and Fresh admin styles are inconsistent) updated</title>
      
        <dc:creator>pas5027</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:59:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22248#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22248#comment:1/1350853178488959</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
replaced 4 spaces to tabs, updated order of border rules to be consistant across classic and colors themes
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22248.1.diff attached to Ticket #22248</title>
      
        <dc:creator>pas5027</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22248/22248.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22248/22248.1.diff/1350853093471513</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13592 (script_loader_src and style_loader_tag filters) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13592#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13592#comment:5/1350853048752842</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22248 (Classic and Fresh admin styles are inconsistent) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:55:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22248</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22248/1350852927074195</guid>
      <description>&lt;p&gt;
There are a few inconsistencies between the classic and fresh admin themes that need to be brought up to speed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #13592,​22245 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13592%2C22245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13592%2C22245/1350852497035897</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13592" title="#13592: enhancement: script_loader_src and style_loader_tag filters (closed: fixed)"&gt;#13592&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>22247.diff attached to Ticket #22247</title>
      
        <dc:creator>Joe Anzalone</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:47:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22247/22247.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22247/22247.diff/1350852430043104</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22247 (Ensure post ID evaluates to true before adding "Edit post" tab in admin bar) created</title>
      
        <dc:creator>Joe Anzalone</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22247</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22247/1350852327155317</guid>
      <description>&lt;p&gt;
This patch checks that a post has an ID set before adding an "Edit post" link in the admin bar on the front-end for individual post pages and static pages.
&lt;/p&gt;
&lt;p&gt;
This can be helpful for plugins that choose to create a "fake" page that does not exist in the database, and set their ID to "0."
&lt;/p&gt;
&lt;p&gt;
An example of such a fake page can be seen on my &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/on-the-fly-youtube-embeds/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;On The Fly YouTube Embeds&lt;/a&gt; plugin which borrows a lot of code from Scott Sherrill-Mix's blog post: &lt;a class="ext-link" href="http://scott.sherrillmix.com/blog/blogger/creating-a-better-fake-post-with-a-wordpress-plugin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Creating a (Better) Fake Post with a WordPress Plugin&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22246 (PHP Notice On _remove_theme_support() function) created</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:30:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22246</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22246/1350851420966014</guid>
      <description>&lt;p&gt;
Hi Guys , I just found this PHP Notice on _remove_theme_support() function , Tested On :
&lt;/p&gt;
&lt;p&gt;
1 - WordPress 3.5 Beta 2&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
2 - PHP 5.4
&lt;/p&gt;
&lt;p&gt;
To get this notice on just add child theme to TwentyTwelve and add this simple code on functions.php :
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action ( 'after_setup_theme', 'Nash_setup' , 11 );
function Nash_setup() {
    remove_theme_support ( 'custom-background' );
    remove_theme_support ( 'custom-header' );
} // end Nash_setup()
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245#comment:2/1350850590752680</guid>
      <description>&lt;pre class="wiki"&gt;add_filter( 'script_loader_tag', function ( $html, $handle ) {
    if ( 'example' !== $handle )
        return $html;
    return str_replace( '&amp;lt;script ', '&amp;lt;script async ', $html );
}, 12, 2);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:08:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245#comment:1/1350850100647390</guid>
      <description>&lt;p&gt;
Example use case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:2/1350849233620706</guid>
      <description>&lt;p&gt;
@scribu Yes that would be ideal. But even alone it'd still be effective for situations where the only scripts needing jQuery were non-default ones (from themes/plugins).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") created</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245/1350848949276659</guid>
      <description>&lt;p&gt;
There exists a filter for "style_loader_tag" in wp-includes/class.wp-styles.php. A corresponding filter "script_loader_tag" in wp-includes/class.wp-scripts.php would be very useful for customizing script loading.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:1/1350847874736674</guid>
      <description>&lt;p&gt;
This would be effective only if we make all the other scripts in Core that depend on jQuery also load in the footer by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7394 (Search: order results by relevance) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7394#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7394#comment:33/1350847716018206</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's pity. Our search has been pretty bad for a very long time, look at when this ticket was opened :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That can go both ways: if it's been broken for so long, then it's clear that users manage somehow, so waiting a few more months isn't the end of the world.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) created</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244/1350847553614249</guid>
      <description>&lt;p&gt;
jQuery is not needed on a page until just before the first script that depends on it. If scripts dependent on jQuery are registered properly via &lt;code&gt;wp_register_script()&lt;/code&gt; or &lt;code&gt;wp_enqueue_script()&lt;/code&gt;, then the script dependency system is smart enough to know where to load jQuery. Therefore jQuery should be registered in the footer by default (allowing the script dependency system to do its magic). This simple change can be made in wp-includes/script-loader.php in &lt;code&gt;wp_default_scripts()&lt;/code&gt; and will no doubt improve performance on lots of sites. There may be some other default scripts that would benefit from this change too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21963 (Consolidate post insertion APIs) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21963#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21963#comment:12/1350846625874586</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>21963.2.diff attached to Ticket #21963</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:09:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21963/21963.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21963/21963.2.diff/1350846595375651</guid>
      <description>&lt;p&gt;
Freshness for 21963.diff, applies cleanly to trunk now.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #7394 (Search: order results by relevance) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7394#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7394#comment:32/1350846541595674</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/7394#comment:31" title="Comment 31"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Split word cleaning (removal of short words, etc) into a separate patch. This should be considered separately. That probably means we can continue to use _search_terms_tidy() instead of _check_search_terms().
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It used to be &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21688" title="#21688: enhancement: Add sanity checks and improve performance when searching for posts (closed: duplicate)"&gt;#21688&lt;/a&gt; however sanity checks and removal of one letter terms and stopwords is needed for implementing sorting by relevance.
&lt;/p&gt;
&lt;p&gt;
If you mean separating the "stopwords" functionality in another function, it used to be that way in a previous patch. There might be a possibility to use stopwords somewhere else, so not merging them in &lt;code&gt;_check_search_terms()&lt;/code&gt; makes sense.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;_search_terms_tidy()&lt;/code&gt; was designed to be a callback for &lt;code&gt;array_filter()&lt;/code&gt; and has limitations.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There remain three distinct concerns:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Plugin compatibility: Does this have the potential to break plugins?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Not plugins that implement fulltext index on the posts table. Will look for other plugins that (perhaps) implement something similar.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Performance: This worked well on WP.com, but they use SSDs, query caching, and have mostly vanilla use cases (ties back into plugin compatibility). Does this cause problems under strain?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
The results from WP.com show no change to the load of MySQL whether it's on the same server or on a dedicated DB server with SSDs, etc. Also ran quite a bit of tests on my tests server and didn't see any MySQL performance problems.
&lt;/p&gt;
&lt;p&gt;
In most cases the ORDER BY would run several more LIKE on the selected rows. While at first look this seems slow, in reality it's very fast. Further the sorting uses only the whole search string if it's too specific (contains many search terms) and has some sensible "sanity limits".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="3"&gt;&lt;li&gt;Results: Does this result in bad search results on occasion by promoting the wrong things to the top? One example could include P2 auto titles. Yes, there is a filter, but if there are concerns that were raised by WP.com developers, I'd like to work them out here.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Did quite a bit of research while working on this. The sorting was modelled to mimic how the search engines work. This improvement concerns mostly the front-end searches when a visitor to the site uses our search form. The results we return should be similar to the results Google, Bing, etc. return for the site.
&lt;/p&gt;
&lt;p&gt;
It puts heavy emphasis on term matches in the title with full search string matches receiving the highest priority.
&lt;/p&gt;
&lt;p&gt;
In the particular case for P2s, the auto-generated title is the same as the first few words of the content and may not represent the post very well. For that case matches in the title are disabled but full search string matches in the content are still being used to improve the sorting.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Overall, not looking likely for 3.5. This is something that needs further review and needs to land early. Also, unit tests...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's pity. Our search has been pretty bad for a very long time, look at when this ticket was opened :)
&lt;/p&gt;
&lt;p&gt;
The proposed patch makes it many times better both for the site visitors and for the admin. I know the SQL may look scary at first but it's just a simple MySQL functionality. It's not more complicated that a join or a subquery.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22243 (Failure notice if can't write to uploads folder in new Media uploader) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22243#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22243#comment:1/1350845792405041</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>21870.2.diff attached to Ticket #21870</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:18:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21870/21870.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21870/21870.2.diff/1350843514417527</guid>
      <description>&lt;p&gt;
As per the previous talk, forking open the discussed can of worms and removing the error control operator from mysql_query.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19845 (Drag and drop files into the Visual Editor) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19845#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19845#comment:25/1350843173537901</guid>
      <description>&lt;p&gt;
Been thinking/testing different approaches for the last couple of weeks. This is a nice-to-have, "flashy" feature but when using it for a while there are few things that aren't very good:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Works only in Firefox, WebKit and IE10+. That excludes about 30% of the users. It is possible to make it work for single file in older IE and Opera but is too hacky: need to overlay the editor iframe with an &amp;lt;input type=file /&amp;gt; that is in a separate form on dragenter, then submit that form on change. Of course there will be no progress bar then.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;It is somewhat awkward to use. For the users to be able to drag files from the desktop to the browser window to the editor, they would need to resize the browser window to look for the files under it or to open another OS window containing the files that will overlay the browser. In both cases the users would "loose" their previous working area.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
When using the standard uploader that's not as bad since the only purpose there is uploading. When typing a post/using the editor this doesn't feel right.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;When a file is dragged to the editor iframe there is an indication (the caret is shown) of where the file would be dropped. However the caret position is actually not changed, so after dropping the file it is inserted at the previous caret location. Tried to find a workaround  but seems impossible.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In that terms I'm 50/50 on whether this should be in core or implemented by a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22243 (Failure notice if can't write to uploads folder in new Media uploader) created</title>
      
        <dc:creator>tw2113</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:12:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22243</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22243/1350843137601475</guid>
      <description>&lt;p&gt;
Currently there is no indication of failure to write to the uploads directory in the new Media uploader view Add/Edit Post. When the permissions are enough, the images will show up in the lightbox. However, when I don't have enough permissions to write to the folder, the images just disappear without any indication of why.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11515 (Admin needs standardized way of handling messages (notices) displayed ...) updated</title>
      
        <dc:creator>nvwd</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11515#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11515#comment:17/1350842934084175</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20258 (Add UI for gallery include/exclude) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20258#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20258#comment:29/1350842275000054</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20258#comment:28" title="Comment 28"&gt;cliffpaulick&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, 3.5's media uploader and gallery checkboxes are cool, but 3.5 doesn't include a "gallery creator" outside of a post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds like something outside of both this ticket and the work for 3.5, which is focused on the overlay workflow when editing a post. Not saying that it's not an idea for the future, but I don't know that they're really all that related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21809 (Edit galleries in the media modal) updated</title>
      
        <dc:creator>aesqe</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:36:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21809#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21809#comment:27/1350840987151333</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21605 (Fix TinyMCE statusbar styling) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:36:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21605#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21605#comment:9/1350840967528155</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21605#comment:8" title="Comment 8"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But, I'd rather just get rid of path...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We've had the path since adding TinyMCE. It is an "advanced" feature but also the only way to select the outer element when several blocks are nested. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;p&amp;gt;Some text&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The bug described in this ticket seems to be extremely rare. It happens only when several block are nested and each has multiple long-ish class names. I've triggered it while testing/working on the prototype code for the TinyMCE Views but never seen it in a normal post.
&lt;/p&gt;
&lt;p&gt;
Best way to fix this would be to do it with css, however it can only truncate the end of the string, not the beginning. Another option would be not to show the class names or to show only the first when there are several.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16567 (Can't create categories with different names but similar slugs on Edit ...) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16567#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16567#comment:14/1350840680930937</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16567#comment:13" title="Comment 13"&gt;technosailor&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16567#comment:12" title="Comment 12"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16567#comment:11" title="Comment 11"&gt;technosailor&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't agree that wp_insert_term should be where the checks are happening. It adds a potentially unneeded query. We should not be doing wp_insert_term if term_exists.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite the contrary, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16567/16567.2.diff" title="Attachment '16567.2.diff' in Ticket #16567"&gt;16567.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16567/16567.2.diff" title="Download"&gt;​&lt;/a&gt; prevents &lt;code&gt;term_exists()&lt;/code&gt; from being called twice if the term does not exist, since &lt;code&gt;wp_insert_term()&lt;/code&gt; calls it anyway.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then &lt;code&gt;wp_insert_term()&lt;/code&gt; shouldn't be calling it. We shouldn't be doing an insert if there is a collision as that adds a DB call.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Changing the functionality of wp_insert_term seems out of the scope of this ticket.
&lt;/p&gt;
&lt;p&gt;
16567.2.diff works for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20258 (Add UI for gallery include/exclude) updated</title>
      
        <dc:creator>cliffpaulick</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20258#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20258#comment:28/1350840456053702</guid>
      <description>&lt;p&gt;
Yes, 3.5's media uploader and gallery checkboxes are cool, but 3.5 doesn't include a "gallery creator" outside of a post. I added a comment on the ticket you linked to, expanding this thought.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21390 (Upload/Insert media revamp) updated</title>
      
        <dc:creator>cliffpaulick</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21390#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21390#comment:12/1350840427647360</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I really like 3.5's improved uploader/organizer, but I'd like to see a post-independent 'gallery manager' sort of tab under Media menu. This would serve for creating custom galleries and inserting them into any/multiple post(s). Additionally the same attachment ID (e.g. /wp-content/uploads/picture.jpg) could include the Media manager's default title, alt, and caption attributes or, within each gallery, these 3 attributes could be customized while still serving the same picture.jpg. It'd be good to detect which posts each gallery is inserted into as well (so you don't edit/delete a gallery that is still in use somewhere you didn't expect).
&lt;/p&gt;
&lt;p&gt;
Thanks for all your hard work. Hope my suggestions help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22242 (Automatically set the email for the trac account after logging in) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 15:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22242</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22242/1350834667977225</guid>
      <description>&lt;p&gt;
The trac installs use the credentials from wordpress.org.
&lt;/p&gt;
&lt;p&gt;
However, after you log in, you need to set your email address manually to get notifications from trac.
&lt;/p&gt;
&lt;p&gt;
I think we'd have a lot less tickets with 'reporter-feedback' hanging around if the email address was automatically populated after a user first logged into trac.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20258 (Add UI for gallery include/exclude) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sun, 21 Oct 2012 15:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20258#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20258#comment:27/1350832018345002</guid>
      <description>&lt;p&gt;
Thinking what's happening with media in 3.5 (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21390" title="#21390: task (blessed): Upload/Insert media revamp (closed: fixed)"&gt;#21390&lt;/a&gt;) takes care of the include part, and exclude may not be as relevant anymore.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22173 (media uploader closes when adding a featured image) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Oct 2012 11:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22173#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22173#comment:3/1350818501211990</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Oct 2012 10:20:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:2/1350814831239014</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21283" title="#21283: defect (bug): Keyboard focus in the theme customizer should be on left options panel (closed: fixed)"&gt;#21283&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21283 (Keyboard focus in the theme customizer should be on left options panel) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Oct 2012 10:20:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21283#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21283#comment:24/1350814828833613</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22237" title="#22237: enhancement: Add keyboard shortcuts for collapse/expand, panel-back, and close to ... (closed: fixed)"&gt;#22237&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22241 (inconsistence with transition_post_status with CPT) created</title>
      
        <dc:creator>thomask</dc:creator>

      <pubDate>Sun, 21 Oct 2012 10:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22241</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22241/1350813811686863</guid>
      <description>&lt;p&gt;
im playing with transition_post_status filter and it seems it returns different values for posts+pages and for custom post types - for posts and pages it hase those values:
new_status:inherit
old_status:new
&lt;/p&gt;
&lt;p&gt;
and the $post is the auto draft. Then this function is called twice, secondly for the saved post with new post status
&lt;/p&gt;
&lt;p&gt;
for CPT it returns the actual old status and new status and $post is the actual post and it is called just once
&lt;/p&gt;
&lt;p&gt;
actually I prefer the way it works for CPT as it actualy returns the old and new post status, what should be the proper function. But it seems, that the problem is somewhere deeper, e.g. that you are saving posts&amp;amp;pages twice, but not doing it for CPT
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20258 (Add UI for gallery include/exclude) updated</title>
      
        <dc:creator>cliffpaulick</dc:creator>

      <pubDate>Sun, 21 Oct 2012 07:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20258#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20258#comment:26/1350803446582580</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This functionality is exactly what I'm looking for. I hope it gets added. (following)
I think "galleries" could even be its own sub-menu item under Media (i.e. disconnected from any post). We could create galleries and then use the media button to pick which pre-created gallery we want to insert.
In the gallery manager sub-menu item, it could tell you which posts each gallery is added to so you know if you want to edit/delete it without doing something you regret.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22238 (HiDPI support for non-webkit browsers) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 04:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22238#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22238#comment:1/1350794449606180</guid>
      <description>&lt;p&gt;
I accidentally messed up the webkit line in the first patch, silly copy-paste error. Fixed in .2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22238.2.diff attached to Ticket #22238</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 04:38:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22238/22238.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22238/22238.2.diff/1350794331142060</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20778 (get_temp_dir should use the system tmp directory as first choice) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20778#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20778#comment:28/1350791915575425</guid>
      <description>&lt;p&gt;
This could have caused &lt;a class="ext-link" href="http://wordpress.org/support/topic/unable-to-update-2?replies=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/unable-to-update-2?replies=1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at the report, &lt;code&gt;'C:\WINDOWS\TEMP\/wordpress-latest.tmp'&lt;/code&gt; contains a &lt;strong&gt;\/&lt;/strong&gt; as a path delimiter, that condition seems to be causing the problem here.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>22240.diff attached to Ticket #22240</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22240/22240.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22240/22240.diff/1350791482664931</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22240 (HiDPI graphic missed for Menu dropdown) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:51:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22240</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22240/1350791469068012</guid>
      <description>&lt;p&gt;
As reported in: &lt;a class="ext-link" href="http://wordpress.org/support/topic/menu-not-retina"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/menu-not-retina&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While most all assets are using retina, if you attemp to edit a menu under appearance &amp;gt; menus and then click on the arrow to see more info about a menu item the arrow used is non retina
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Attached patch also prefixes the :hover variant of the link, I have no idea why it's not prefixed, but with such a generic class name, I thought it best to add it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22239 (wp_ob_end_flush_all() tries to destroy non-destroyable output buffers) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22239#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22239#comment:2/1350790099434488</guid>
      <description>&lt;p&gt;
One option is to just silence the PHP Notice to get the message out of developers faces.. (Ignore the extra &lt;code&gt;ob&lt;/code&gt; in the diff..)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22239.diff attached to Ticket #22239</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:27:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22239/22239.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22239/22239.diff/1350790048891306</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22239 (wp_ob_end_flush_all() tries to destroy non-destroyable output buffers) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22239#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22239#comment:1/1350789680341265</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22239 (wp_ob_end_flush_all() tries to destroy non-destroyable output buffers) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:20:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22239</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22239/1350789647535113</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_ob_end_flush_all()&lt;/code&gt; currently tries to flush &amp;amp; destroy every PHP Output buffer that is enabled on the current installation.
However, not every type of PHP Output buffer can be destroyed, which will cause a PHP Notice when attempts to do so are made.
An example of this is PHP extensions such as New Relic, or PHP output buffers created with the &lt;code&gt;$erase&lt;/code&gt; flag set to false in &lt;code&gt;ob_start()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
An example is when New Relic is installed on a host, also &lt;a class="ext-link" href="https://newrelic.com/docs/php/php-agent-faq#rum-obclean"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;see New Relics FAQ entry&lt;/a&gt; on the issue.
&lt;/p&gt;
&lt;pre class="wiki"&gt;( ! ) Notice: ob_end_flush(): failed to send buffer of New Relic auto-RUM (1) in ../trunk/wp-includes/functions.php on line 2641
Call Stack
#	Time	Memory	Function	Location
1	0.8510	4328360	shutdown_action_hook( )	../load.php:0
2	0.8510	4328440	do_action( )	../load.php:556
3	0.8510	4329856	call_user_func_array ( )	../plugin.php:406
4	0.8510	4329888	wp_ob_end_flush_all( )	../plugin.php:406
5	0.8511	4330064	ob_end_flush ( )	../functions.php:2641
&lt;/pre&gt;&lt;p&gt;
Somewhat similar to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18239" title="#18239: defect (bug): wp_ob_end_flush_all() hangs the output buffering, during plugin ... (new)"&gt;#18239&lt;/a&gt;
I'm not sure of what the ideal solution for this would be for WordPress, but wanted to record the issue being known.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>22238.diff attached to Ticket #22238</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22238/22238.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22238/22238.diff/1350788702126526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22238 (HiDPI support for non-webkit browsers) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22238</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22238/1350788662946869</guid>
      <description>&lt;p&gt;
As a follow on to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21019" title="#21019: task (blessed): Retina All the Things (closed: fixed)"&gt;#21019&lt;/a&gt;, we should reconsider support for non-webkit browsers for HiDPI displays.
Currently, we only use &lt;code&gt;-webkit-min-device-pixel-ratio&lt;/code&gt; in the media queries as per comments 80 through 87 in the previous ticket.
&lt;/p&gt;
&lt;p&gt;
The discussion centering around using only the webkit selector started 3 months ago, a time when only webkit properly supported HiDPI graphics.
Now we have Firefox as well as Opera which support it.
&lt;/p&gt;
&lt;p&gt;
Firefox 18 (End of year) will support it through &lt;code&gt;moz--min-device-pixel-ratio: 1.5&lt;/code&gt; CSS selector, and Opera (Desktop: 12.10 in beta, Mobile latest stable supports it) supports it via &lt;code&gt;-o-min-device-pixel-ratio: 3/2&lt;/code&gt; CSS selector.
&lt;/p&gt;
&lt;p&gt;
As we use vendor prefixes elsewhere (for example, rounded corners) we should also support the wide range of browsers vendor prefixes, as well as the standard fall back to the non-vendor prefix.
&lt;/p&gt;
&lt;p&gt;
Attached is a patch based on the above, and the (small) discussion on the previous ticket. I have only tested it on a Mac w/ non-HiDPI Screen &amp;amp; Opera / Chrome, and on Opera Mobile on a HiDPI screen. Both work as expected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:00:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:1/1350788405397845</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) created</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Sun, 21 Oct 2012 02:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237/1350788371833695</guid>
      <description>&lt;p&gt;
Can we add a keyboard shortcut to the customizer for collapsing/expanding the left panel?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22234 (Use access modifiers in classes, not the var keyword) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 23:57:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22234#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22234#comment:3/1350777436313564</guid>
      <description>&lt;p&gt;
Well, yeah, we should remove the &lt;code&gt;@access private&lt;/code&gt; for the properties that we can't make private. We just have to figure out which they are.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22234 (Use access modifiers in classes, not the var keyword) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 20 Oct 2012 23:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22234#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22234#comment:2/1350775577192069</guid>
      <description>&lt;p&gt;
This is just a conversation starter. Every property being public in every class in the codebase might actually be just fine, but then the PHPDocs are useless. &lt;code&gt;@access private&lt;/code&gt; on public properties and public functions accomplishes nothing. If it's supposed to say to a dev "don't use me" - let's enforce that and change / move / remove those functions at will. If it is being used to actually affect visibility, it doesn't. If it's being used to accurately explain visibility in generated docs, it doesn't.
&lt;/p&gt;
&lt;p&gt;
So are we trying to create documentation that is complete and accurate? We should, and let's do it with proper access modifiers AND proper PHPDocs, even if it requires changing them all to public.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22236 (edit.php: Apply when Bulk Actions selected forgets tag= filter) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Oct 2012 23:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22236#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22236#comment:2/1350774123084506</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22236 (edit.php: Apply when Bulk Actions selected forgets tag= filter) updated</title>
      
        <dc:creator>kw217</dc:creator>

      <pubDate>Sat, 20 Oct 2012 22:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22236#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22236#comment:1/1350773772115151</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22236 (edit.php: Apply when Bulk Actions selected forgets tag= filter) created</title>
      
        <dc:creator>kw217</dc:creator>

      <pubDate>Sat, 20 Oct 2012 22:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22236</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22236/1350773668710300</guid>
      <description>&lt;p&gt;
Using WordPress 3.4.2, go to Posts, and click on one of the tags on one of your posts. The URL now contains tag=&amp;lt;tag&amp;gt;, and the screen shows the first 20 posts with that tag.
&lt;/p&gt;
&lt;p&gt;
Now click the Apply button just next to the "Bulk Actions" drop-down at the top left.
&lt;/p&gt;
&lt;p&gt;
I expect this to reload the page but otherwise have no effect.
&lt;/p&gt;
&lt;p&gt;
Instead, it reloads the page without the tag=&amp;lt;tag&amp;gt; URL parameter, and shows the first 20 posts (irrespective of tag).
&lt;/p&gt;
&lt;p&gt;
This is surprising and confusing - it's easy to accidentally hit "Apply" without having chosen an action, but at first glance it looks like nothing has happened. The user can then go on to do a bulk action (e.g., add category) without realising the tag they previously had selected is now no longer selected.
&lt;/p&gt;
&lt;p&gt;
Note that filters (e.g., by category) that are set up using the Filter button *are* preserved when Bulk Actions / Apply is chosen - it's just tags that are lost.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22234 (Use access modifiers in classes, not the var keyword) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 22:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22234#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22234#comment:1/1350770930627153</guid>
      <description>&lt;p&gt;
Even if it was marked with &lt;code&gt;@access private&lt;/code&gt;, we can't uniformly make previously public properties into private ones.
&lt;/p&gt;
&lt;p&gt;
We have to evaluate the potential impact on third-party code on a case by case basis.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19796 (Multisite installs should work with WordPress in a subdirectory) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 21:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19796#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19796#comment:71/1350768370004421</guid>
      <description>&lt;p&gt;
Follow-up: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22235" title="#22235: defect (bug): Blog path included in base (closed: maybelater)"&gt;#22235&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22235 (Blog path included in base) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 21:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22235</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22235/1350768347659879</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19796" title="#19796: task (blessed): Multisite installs should work with WordPress in a subdirectory (closed: fixed)"&gt;#19796&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
My config:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('MULTISITE', true);
define('SUBDOMAIN_INSTALL', false);
$base = '/core/';
define('DOMAIN_CURRENT_SITE', 'wp.dev');
define('PATH_CURRENT_SITE', '/core/');
define('SITE_ID_CURRENT_SITE', 1);
define('BLOG_ID_CURRENT_SITE', 1);
&lt;/pre&gt;&lt;p&gt;
When I go to Network Admin -&amp;gt; Sites, the list of blogs looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/core/
/core/foo/
/core/bar/
&lt;/pre&gt;&lt;p&gt;
and then, if I go to edit &lt;code&gt;/core/bar/&lt;/code&gt;, I can change &lt;code&gt;/core/&lt;/code&gt; to something else, making that particular blog inaccessible.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>var-to-public.diff attached to Ticket #22234</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 20 Oct 2012 21:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22234/var-to-public.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22234/var-to-public.diff/1350768258453866</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22234 (Use access modifiers in classes, not the var keyword) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 20 Oct 2012 21:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22234</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22234/1350768219173367</guid>
      <description>&lt;p&gt;
The minimum required PHP version is 5.2.4. The &lt;code&gt;var&lt;/code&gt; keyword is a relic of PHP 4. Let us open our hymnals to php.net:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Note: The PHP 4 method of declaring a variable with the var keyword is still supported for compatibility reasons (as a synonym for the public keyword). In PHP 5 before 5.1.3, its usage would generate an E_STRICT warning.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PHP 5 has much better support for OO features like access modifiers in classes. WP also has a history of including PHPDoc blocks with code and using the &lt;code&gt;@access&lt;/code&gt; tag. However, the tag is meaningless if it doesn't match the supplied access modifier.
&lt;/p&gt;
&lt;p&gt;
PHPDoc blocks are present 1) for inline documentation, sure but mainly 2) to allow automatic generation of documentation when used with a command-line tool like phpDocumentor or (IMO, the far superior) ApiGen.
&lt;/p&gt;
&lt;p&gt;
If I specify the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * @access private
 */
var $prop;
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;$prop&lt;/code&gt; will appear in the documentation as &lt;code&gt;public&lt;/code&gt; because &lt;code&gt;var&lt;/code&gt; means &lt;code&gt;public&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I have modified class properties throughout the codebase to use access modifiers instead of var.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If no PHPDoc was present, I made the property public, which it already was.
&lt;/li&gt;&lt;li&gt;If the &lt;code&gt;@access&lt;/code&gt; tag was present, I used its value for the property.
&lt;/li&gt;&lt;li&gt;I then ran Unit Tests which produced some immediate fatal errors do to existing core code that was trying to access properties in a public way that had &lt;code&gt;@access&lt;/code&gt; set to private.
&lt;/li&gt;&lt;li&gt;I altered those properties to indeed be public and updated the PHPDoc
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22232 (Setting Transient Expiration to 0 Causes Transient To Never Expire) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 20 Oct 2012 19:34:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22232#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22232#comment:1/1350761680770880</guid>
      <description>invalid: &lt;p&gt;
What purpose would setting a transient that expires immediately have? Storing a non-expiring transient *does* have its purposes.
&lt;/p&gt;
&lt;p&gt;
This is the same behavior as caching backends: &lt;a class="ext-link" href="http://us1.php.net/manual/en/function.apc-store.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us1.php.net/manual/en/function.apc-store.php&lt;/a&gt;, &lt;a class="ext-link" href="http://www.php.net/manual/en/memcached.expiration.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.php.net/manual/en/memcached.expiration.php&lt;/a&gt;, &lt;a class="ext-link" href="http://www.php.net/manual/en/memcache.set.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.php.net/manual/en/memcache.set.php&lt;/a&gt;. For this kind of caching, 0 means "Store forever" (until deleted or forced out of cache) not "Don't store at all."
&lt;/p&gt;
&lt;p&gt;
Either way, changing this would break existing code.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18738 (Improving cron spawning and other non-blocking HTTP requests) updated</title>
      
        <dc:creator>mestovar</dc:creator>

      <pubDate>Sat, 20 Oct 2012 19:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18738#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18738#comment:15/1350760259039145</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18738#comment:14" title="Comment 14"&gt;kurtpayne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &lt;a class="ext-link" href="http://php.net/manual/en/function.curl-setopt.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;documentation&lt;/a&gt; comes with this caveat:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If libcurl is built to use the standard system name resolver, that portion of the connect will still use full-second resolution for timeouts with a minimum timeout allowed of one second.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's just the name resolver though, which shouldn't be an issue for the cron anyway.  Using the milliseconds option ends up being much more like the expected action, even if you combine it the the curl_multi.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Oct 2012 18:11:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:9/1350756679639317</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20712" title="#20712: defect (bug): Wrong data type returned from get_option for &amp;#34;page_on_front&amp;#34; after ... (closed: wontfix)"&gt;#20712&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22192" title="#22192: defect (bug): update_metadata() and update_option() strict checks can cause false ... (new)"&gt;#22192&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22230 (WP adds &lt;br /&gt; before &lt;select even where there is no line break in ...) updated</title>
      
        <dc:creator>chirael</dc:creator>

      <pubDate>Sat, 20 Oct 2012 18:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22230#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22230#comment:3/1350756504615704</guid>
      <description>&lt;p&gt;
Ok, I guess that's a reason, but I still consider it a bug. Why does WP make that decision for me? I'd really like to have my label be next to (on the same line as) my select box. If I edit something in HTML mode I don't see a good reason for WP to add in code that was not there in the first place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 18:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:8/1350756142182771</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 18:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:7/1350756089643314</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 18:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:6/1350756066061653</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed. It seems this check &lt;code&gt;if ( $newvalue === $oldvalue )&lt;/code&gt; isn't enough. PHP probably just compares the internal object ids, rather than the values.
&lt;/p&gt;
&lt;p&gt;
A possible solution would be to make the cloning recursive:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_object($newvalue) )
	$newvalue = clone $newvalue;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 16:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:5/1350751974028908</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>exz</dc:creator>

      <pubDate>Sat, 20 Oct 2012 16:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:4/1350751717954666</guid>
      <description>&lt;p&gt;
@scribu I have the memcache module installed but not APC. I verified it using a clean install of 3.4.3-alpha and 3.5-beta
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>exz</dc:creator>

      <pubDate>Sat, 20 Oct 2012 16:47:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:3/1350751679898857</guid>
      <description>&lt;p&gt;
Just realized that this could be tested without the need for multiple page loads. I created a unit test for it: &lt;a class="ext-link" href="https://gist.github.com/3923951"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/3923951&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ phpunit tests/option/option.php
Installing...
Running as single site... To run multisite, use -c multisite.xml
Not running ajax tests... To execute these, use --group ajax.
PHPUnit 3.6.11 by Sebastian Bergmann.
Configuration read from /Users/rickard/unit-test.svn.wordpress.org/trunk/phpunit.xml
...F
Time: 1 second, Memory: 42.00Mb
There was 1 failure:
1) Tests_Option_Option::test_multiple_calls
Failed asserting that false is true.
/Users/rickard/unit-test.svn.wordpress.org/trunk/tests/option/option.php:92
/usr/bin/phpunit:46
FAILURES!
Tests: 4, Assertions: 31, Failures: 1.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Oct 2012 16:38:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:2/1350751113776785</guid>
      <description>&lt;p&gt;
Confirmed without a persistent cache.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 20 Oct 2012 16:31:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233#comment:1/1350750708898939</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
So, you have a persistent cache enabled (Memcache, APC etc.), right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22233 (update_option() fails when value has nested objects) created</title>
      
        <dc:creator>exz</dc:creator>

      <pubDate>Sat, 20 Oct 2012 16:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22233</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22233/1350750548975537</guid>
      <description>&lt;p&gt;
This gist has an example of how this problem can be reproduced: &lt;a class="ext-link" href="https://gist.github.com/3923757"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/3923757&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you run the three functions in three separate page loads you will see that the foo attribute of &lt;code&gt;$b&lt;/code&gt; doesn't get saved. It seems to be some kind of cache problem.
&lt;/p&gt;
&lt;p&gt;
I've been able to reproduce this in 3.4.2, 3.4.3-alpha and 3.5-beta2
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22231 (Add action to provide additional options to the Custom Background page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Oct 2012 15:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22231#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22231#comment:8/1350745949493341</guid>
      <description>&lt;p&gt;
Makes sense for consistency. &lt;code&gt;custom_header_options&lt;/code&gt; was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15805" title="Add hook in custom header admin page. Props blepoxp. Fixes #15119"&gt;[15805]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22231 (Add action to provide additional options to the Custom Background page) updated</title>
      
        <dc:creator>thelukemcdonald</dc:creator>

      <pubDate>Sat, 20 Oct 2012 13:03:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22231#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22231#comment:7/1350738185683164</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>custom-background.diff attached to Ticket #22231</title>
      
        <dc:creator>thelukemcdonald</dc:creator>

      <pubDate>Sat, 20 Oct 2012 13:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22231/custom-background.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22231/custom-background.diff/1350738047171016</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22224 (E_STRICT errors in WP_Plugins_List_Table/WP_List_Table) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Oct 2012 11:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22224#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22224#comment:1/1350732877836767</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22231 (Add action to provide additional options to the Custom Background page) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Sat, 20 Oct 2012 11:31:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22231#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22231#comment:6/1350732711712631</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22231 (Add action to provide additional options to the Custom Background page) updated</title>
      
        <dc:creator>thelukemcdonald</dc:creator>

      <pubDate>Sat, 20 Oct 2012 11:23:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22231#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22231#comment:5/1350732201322341</guid>
      <description>&lt;p&gt;
Apologies, first time trying to figure this out. I'll give it another shot. If nothing else, the patch is minor and I'll submit the solution here, if that works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22231 (Add action to provide additional options to the Custom Background page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Oct 2012 11:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22231#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22231#comment:4/1350731970278461</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22231/custom-background.diff" title="Attachment 'custom-background.diff' in Ticket #22231"&gt;custom-background.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22231/custom-background.diff" title="Download"&gt;​&lt;/a&gt; doesn't look like a proper patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22231 (Add action to provide additional options to the Custom Background page) updated</title>
      
        <dc:creator>thelukemcdonald</dc:creator>

      <pubDate>Sat, 20 Oct 2012 11:18:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22231#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22231#comment:3/1350731908566107</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22231 (Add action to provide additional options to the Custom Background page) updated</title>
      
        <dc:creator>thelukemcdonald</dc:creator>

      <pubDate>Sat, 20 Oct 2012 11:16:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22231#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22231#comment:2/1350731783431033</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22231 (Add action to provide additional options to the Custom Background page) updated</title>
      
        <dc:creator>thelukemcdonald</dc:creator>

      <pubDate>Sat, 20 Oct 2012 11:14:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22231#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22231#comment:1/1350731675873065</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22230 (WP adds &lt;br /&gt; before &lt;select even where there is no line break in ...) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Sat, 20 Oct 2012 09:47:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22230#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22230#comment:2/1350726443646988</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This happens because &lt;code&gt;wpautop()&lt;/code&gt; treats &lt;code&gt;select&lt;/code&gt; as a block element.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
// Space things out a little
$allblocks = '(?:table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|select|option|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary)';
&lt;/pre&gt;&lt;p&gt;
Hm, &lt;code&gt;option&lt;/code&gt; too. No idea why.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6814 (Async media crunching) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Sat, 20 Oct 2012 05:57:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6814#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6814#comment:15/1350712628778095</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6814 (Async media crunching) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Sat, 20 Oct 2012 05:56:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6814#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6814#comment:14/1350712590175785</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's put this one in 3.6 early, it's silly that four years later we still haven't addressed this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22220 (XML-RPC wp.editPost clears post categories) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 20 Oct 2012 03:59:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22220#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22220#comment:6/1350705547957159</guid>
      <description>&lt;p&gt;
A switch to wp_update_post would be sufficient to fix XML-RPC.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #22232 (Setting Transient Expiration to 0 Causes Transient To Never Expire) created</title>
      
        <dc:creator>cgrymala</dc:creator>

      <pubDate>Sat, 20 Oct 2012 01:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22232</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22232/1350698363468449</guid>
      <description>&lt;p&gt;
I realize this may be by design, but the way the &lt;code&gt;set_transient()&lt;/code&gt; function handles expiration timeouts that are set to 0 is a little counter-intuitive.
&lt;/p&gt;
&lt;p&gt;
Logically, it seems like setting a transient's expiration to 0 would cause the transient to expire immediately (essentially, you wouldn't even set the transient). However, in reality, setting the expiration to 0 actually causes the transient to never expire (like a standard option, just with the _transient_ prefix on the option name). The biggest issue with the way it's currently handled is the fact that those transients also auto-load; so an unsuspecting developer could easily start to fill up the memory buffer with auto-loading transients that should logically have never been set.
&lt;/p&gt;
&lt;p&gt;
This issue may become even more important now that the concept of filtering a transient's expiration has been introduced (&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/21330"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/21330&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
I would propose simply exiting the function without storing the transient if the &lt;code&gt;$expiration&lt;/code&gt; parameter is empty.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>