<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>goto10</dc:creator>

      <pubDate>Mon, 27 Feb 2012 23:09:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:20/1330384183645667</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>divinethemes</dc:creator>

      <pubDate>Mon, 27 Feb 2012 23:03:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:19/1330383824013284</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17111 (Remove unnecessary copy-by-reference in do_action()) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 23:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17111#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17111#comment:9/1330383787559630</guid>
      <description>wontfix: &lt;p&gt;
Not worth the potential back-compat headaches.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Mon, 27 Feb 2012 23:02:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:18/1330383774731823</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't often profess my love for other men, but when I do, it's for nacin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16661 (Review use of apply_filters_ref_array() and do_action_ref_array()) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 23:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16661#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16661#comment:20/1330383706982449</guid>
      <description>wontfix: &lt;p&gt;
Seems this change can actually produce warnings with some plugins:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/18536#comment:70"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/ticket/18536#comment:70&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Best to leave it alone and just avoid introducing new calls to these functions from now on.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:73/1330383471662345</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18536.ref_array.patch attached to Ticket #18536</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18536/18536.ref_array.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18536/18536.ref_array.patch/1330383448577708</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:72/1330383132384702</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:71/1330383121395147</guid>
      <description>&lt;p&gt;
Darn, guess we'll have to change it back then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:70/1330382969786101</guid>
      <description>&lt;pre class="wiki"&gt;Warning: Parameter 2 to a_posts_request_cb() expected to be a reference, value given in /.../wp-includes/plugin.php on line 170
&lt;/pre&gt;&lt;p&gt;
Seeing that due to the change from apply_filters_ref_array() to apply_filters().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:17/1330382827845603</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17597 (register theme directory() not working for themes outside WP_CONTENT_DIR) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17597#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17597#comment:5/1330382346994228</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
register_theme_directory() is only supposed to work within WP_CONTENT_DIR.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm fine with that, but then we should make it clear and remove the bits from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12043" title="Restore the functionality of the theme_root filter. See #10467."&gt;[12043]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:16/1330382296051839</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17597 (register theme directory() not working for themes outside WP_CONTENT_DIR) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17597#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17597#comment:4/1330382268145992</guid>
      <description>&lt;p&gt;
register_theme_directory() is only supposed to work within WP_CONTENT_DIR. Supporting it outside of WP_CONTENT_DIR could happen I suppose, but definitely not before &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20103" title="#20103: defect (bug): Rewrite get_themes() and other enemies of sanity (closed: fixed)"&gt;#20103&lt;/a&gt; settles. Unfortunately the theme root API is a bit kludgy and only lightly used. (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20103" title="#20103: defect (bug): Rewrite get_themes() and other enemies of sanity (closed: fixed)"&gt;#20103&lt;/a&gt; includes a fix for a rather annoying bug, for example, to get_raw_theme_root().)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:15/1330381940980317</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:31:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:14/1330381910896848</guid>
      <description>&lt;p&gt;
I actually looked at the patch now. It implements ArrayAccess and everything!
&lt;/p&gt;
&lt;p&gt;
We can figure out the naming after the initial commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:31:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:13/1330381886269976</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:12/1330381424386369</guid>
      <description>&lt;p&gt;
So. Freaking. Awesome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17597 (register theme directory() not working for themes outside WP_CONTENT_DIR) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17597#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17597#comment:3/1330381383956274</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With the improvements in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20103" title="#20103: defect (bug): Rewrite get_themes() and other enemies of sanity (closed: fixed)"&gt;#20103&lt;/a&gt; we should try to address this issue too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:11/1330381032926913</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20103#comment:10" title="Comment 10"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could we take this opportunity to find better names for get_template() / get_stylesheet() and co.?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We could indeed! It was just not a priority during the construction. And, for my sanity, it was easiest to code it in the existing paradigm.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:13:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:10/1330380815882290</guid>
      <description>&lt;p&gt;
Could we take this opportunity to find better names for get_template() / get_stylesheet() and co.?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20103 (Rewrite get_themes() and other enemies of sanity) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:09:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20103#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20103#comment:9/1330380584176870</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20103/wp_theme.diff" title="Attachment 'wp_theme.diff' in Ticket #20103"&gt;wp_theme.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20103/wp_theme.diff" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/p&gt;
&lt;h1 id="IntroducingtheWP_Themeclass"&gt;Introducing the WP_Theme class&lt;/h1&gt;
&lt;p&gt;
As the ticket promises, WP_Theme replaces get_themes() and other enemies of sanity. Each theme is its own object, decorated on construction and packed with 21 main public methods, four public static methods, and a few internal helpers. Full support for multiple theme roots and directories of themes within a theme root. The handling for broken-ness and odd situations is smoother than get_themes().
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;array wp_get_themes( $args = array() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To fetch a array of WP_Theme objects, call wp_get_themes(). wp_get_themes( $args ) takes three arguments that filter the results: errors, allowed, and blog_id.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;errors&lt;/strong&gt; (Default: FALSE) - Filters themes based on whether they have errors. True returns only themes with errors, False only themes without errors, Null if all themes should be returned.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;allowed&lt;/strong&gt; (Default: NULL) - Filters themes based on whether they are allowed on the site or network. (Multisite only.) Valid options are 'network' (allowed on the network), 'site' (allowed on the site specified by the blog_id argument), true (allowed at either level), false (not allowed).
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;blog_id&lt;/strong&gt; (Default: current) - Controls which site should be checked for the allowed filter. Only works, of course, in multisite.
&lt;/li&gt;&lt;/ul&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;WP_Theme wp_get_theme( $stylesheet = null, $theme_root = null );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To fetch a single theme, call wp_get_theme(). This will return a single WP_Theme object for the requested theme.
&lt;/p&gt;
&lt;p&gt;
It takes two argumements: $stylesheet and $theme_root. If $stylesheet is omitted, the current stylesheet (via get_stylesheet()) will be used. If the $theme_root is omitted, get_raw_theme_root($stylesheet) will be used. Thus, to get the current theme, you may call wp_get_theme() with no arguments.
&lt;/p&gt;
&lt;p&gt;
wp_get_theme() replaces get_theme(). get_theme() previously used get_current_theme() to get the name-keyed theme array from get_themes(). Not only are we no longer juggling arrays keyed by the theme name, we're not even processing every theme into memory to get a single WP_Theme object. Nice.
&lt;/p&gt;
&lt;h2 id="HandlingErrors"&gt;Handling Errors&lt;/h2&gt;
&lt;p&gt;
Currently, search_theme_directories() and get_themes() will build a separate array of broken themes, $wp_broken_themes. This array is then returned by get_broken_themes().
&lt;/p&gt;
&lt;p&gt;
With WP_Theme, errors like no template, invalid parent themes, or unreadable stylesheets can be nicely caught. Errors are populated into an errors property, accessible via WP_Theme-&amp;gt;errors(). It is either null or no errors, or a WP_Error object. wp_get_themes( array( 'errors' =&amp;gt; true ) ) enables one to loop through and pull out error messages and codes from a WP_Error object. In some cases, the current theme could 'error' but it still works, and we have access to what went wrong.
&lt;/p&gt;
&lt;h2 id="NetworkSupport"&gt;Network Support&lt;/h2&gt;
&lt;p&gt;
WP_Theme encapsulates the logic for allowed themes on a network, with static methods to fetch all allowed themes on a network, themes allowed at the site level, and a merge of both lists (all themes allowed for a single site).
&lt;/p&gt;
&lt;p&gt;
Each theme object then has a simple is_allowed( $check = 'both', $blog_id = 0 ) method to allow for checking whether it is allowed.
&lt;/p&gt;
&lt;p&gt;
The okay-named function get_site_allowed_themes() and the terribly named function wpmu_get_blog_allowedthemes() are both deprecated in favor of static class methods.
&lt;/p&gt;
&lt;h2 id="OutputtingHeaders"&gt;Outputting Headers&lt;/h2&gt;
&lt;p&gt;
What started me on WP_Theme was that get_themes() could not be internationalized in any sane way (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15858" title="#15858: defect (bug): Twenty Ten i18n - translated strings not visible (closed: fixed)"&gt;#15858&lt;/a&gt;). The data usually came out of get_theme_data() already cleaned and even marked up (such as with wptexturize), making translation difficult or impossible. Since the data was keyed by name, changing that value would break quite a bit. As get_themes() already stored a lot of data in memory (and blows up memcached on WP.com, as they try to store it persistently), adding more keys didn't make sense.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;mixed WP_Theme-&amp;gt;get( $header )
mixed WP_Theme-&amp;gt;display( $header, $markup = true, $translate = true )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
WP_Theme has two main method for gathering header data: get() and display(). Once you call get(), the data has already been sanitized, either by strip_tags(), kses, or esc_url, depending on the header. (Tags are returned as an array.) By calling display(), the data is translated, and then marked up. (Even Tags â€” the array is translated for known tags.) The textdomain is automatically loaded if necessary.
&lt;/p&gt;
&lt;p&gt;
display() returns data. It does not echo it. It is formatting the data for display, and would roughly be analogous to get_bloginfo( 'name', 'display' ).
&lt;/p&gt;
&lt;p&gt;
get('Author') returns Andrew Nacin. display('Author') marks that up with &amp;lt;a&amp;gt; tags and a link to &lt;a class="ext-link" href="http://nacin.com"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://nacin.com&lt;/a&gt; (being AuthorURI).
&lt;/p&gt;
&lt;p&gt;
display() also allows you to decline markup and translation with additional arguments, but these are mainly used for backwards compatibility or to allow fields to be searched through without Author HTML and the like.
&lt;/p&gt;
&lt;p&gt;
Private methods sanitize_header(), translate_header(), and markup_header() support get() and display() in their endeavors.
&lt;/p&gt;
&lt;h2 id="Helpers"&gt;Helpers&lt;/h2&gt;
&lt;p&gt;
WP_Theme has a number of public methods that corresponds to the global function acting on the active theme. These include:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;bool   WP_Theme-&amp;gt;is_child_theme()
string WP_Theme-&amp;gt;get_stylesheet()
string WP_Theme-&amp;gt;get_template()
string WP_Theme-&amp;gt;get_stylesheet_directory()
string WP_Theme-&amp;gt;get_template_directory()
string WP_Theme-&amp;gt;get_stylesheet_directory_uri()
string WP_Theme-&amp;gt;get_template_directory_uri()
string WP_Theme-&amp;gt;get_theme_root()
string WP_Theme-&amp;gt;get_theme_root_uri()
bool   WP_Theme-&amp;gt;load_textdomain()
array  WP_Theme-&amp;gt;get_page_templates()
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
In some cases (notably, get_page_templates()), the global function now wraps the method.
&lt;/p&gt;
&lt;h2 id="Screenshots"&gt;Screenshots&lt;/h2&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;string function get_screenshot( $uri = 'relative' )
int    function get_screenshot_count()
array  function get_screenshots()
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
3.4 means multiple screenshots. WP_Theme has you covered. Three public methods provide the screenshot URL (absolute URL, or relative to the stylesheet directory), the total count of screenshots, and an array of each screenshot filename.
&lt;/p&gt;
&lt;h2 id="TemplateandStylesheetFiles"&gt;Template and Stylesheet Files&lt;/h2&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;array WP_Theme-&amp;gt;get_files( $type = null )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
get_themes() stored the template and stylesheet files in the array, which resulted in longer processing times and, especially since absolute paths were added in 2.9, an explosion in memory usage.
&lt;/p&gt;
&lt;p&gt;
WP_Theme handles traversing the PHP and CSS files theme directories &lt;em&gt;on demand&lt;/em&gt;. As these are only used in the theme editor (and only for the current theme), this is a pretty huge performance and memory boost.
&lt;/p&gt;
&lt;h2 id="FullBackwardsCompatibility"&gt;Full Backwards Compatibility&lt;/h2&gt;
&lt;p&gt;
WP_Theme is 100% backwards compatible. Because it implements ArrayAccess, you can take a theme object and look for keys like 'Template Files', 'Stylesheet', and 'Version' â€” just as they were returned by get_themes(). WP_Theme also includes a magic getter, handling all properties that were returned by current_theme_info() (which returned stdClass in 3.3). This enables us to pass a fully decorated WP_Theme object as an existing action argument, without plugins choking because they expected an array or an older object.
&lt;/p&gt;
&lt;p&gt;
Indeed, get_themes() now returns an array of WP_Theme objects, because it can. get_theme() returns a WP_Theme object, as does current_theme_info(). (All are deprecated, as is get_broken_themes().)
&lt;/p&gt;
&lt;p&gt;
If you don't believe me on backwards compatibility, head over to the Theme Editor, which passes around theme names like they're crack. This file is the only area that hasn't been updated to rely on WP_Theme; it still uses get_themes() and the array it returns for each theme. Everything works.
&lt;/p&gt;
&lt;h2 id="TheParentTheme"&gt;The Parent Theme&lt;/h2&gt;
&lt;p&gt;
A reference to a WP_Theme object for a parent theme is stored in the parent property, and accessible with the parent() method. Want a theme's parent name? $theme-&amp;gt;parent() &amp;amp;&amp;amp; $theme-&amp;gt;parent()-&amp;gt;display('Name').
&lt;/p&gt;
&lt;h2 id="CachingandPerformance"&gt;Caching and Performance&lt;/h2&gt;
&lt;p&gt;
Okay, so, this is sweet. After profiling get_themes() and WP_Theme with Xdebug and KCacheGrind, a few functions have been sped up, in some cases pretty significantly. This includes search_theme_directories() and theme searching, which was a drag for no real reason. Searching is now improved significantly, and is implemented as a class method to allow for better speeds. (Now that things are "ready," I hope to go back and look for further improvements.)
&lt;/p&gt;
&lt;p&gt;
Once sorting was fixed, two things stood out as weighing down processing the most: Filesystem reads, and sanitization of headers. With WP_Theme, both are non-persistently cached, internally, to ensure serious speed. No style.css is ever read twice, and no header is ever sanitized twice. Same goes for identifying screenshots and PHP/CSS files â€” everything gets cached.
&lt;/p&gt;
&lt;p&gt;
Non-persistence is a must for themes because someone might make an FTP change then refresh the page. BUT, that doesn't mean a particular installation shouldn't be able to opt into persistence.
&lt;/p&gt;
&lt;p&gt;
When the themes cache bucket is persistent (there's a filter), WP_Theme gets smart about it. To prevent thousands of cache sets to update the headers cache, it sanitizes every header once the first one is requested and adds it to cache. Additionally, search_theme_directories() is cached.
&lt;/p&gt;
&lt;p&gt;
With persistent caching, it is possible to hit themes.php, and even do a search, and avoid a single filesystem or kses operation. The 150-something themes in the WP.com themes repository sings in this situation.
&lt;/p&gt;
&lt;h2 id="WhatsNext"&gt;What's Next?&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Commit this bad boy.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;If object cache drop-ins had a wp_cache_get_non_persistent_groups() function, we could scrap that filter and make it much cleaner. (It's a rough implementation and could use some tweaks anyway.)
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Some of the filesystem functions â€” specifically, the underlying scandir() static method and get_files() â€” don't quite have their arguments or loops ironed out yet. Once the theme editor is converted over, those things should come into place nicely. Code review appreciated.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_theme.diff attached to Ticket #20103</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20103/wp_theme.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20103/wp_theme.diff/1330380567166059</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Mon, 27 Feb 2012 22:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:16/1330380387239458</guid>
      <description>&lt;p&gt;
Before anything, I'd like to note that this is a first pass and certain portions are underdeveloped or unfinished. Please take everything with a grain of salt.
&lt;/p&gt;
&lt;p&gt;
Andrew, I hope this addresses a few of your questions.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Why use a class for WP_Customize?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The WP_Customize class does not just include customize-controls.php. It also handles correctly previewing a theme (in both the admin and front-end), registering and maintaining sections and settings, and properly switching the theme and saving settings.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Why is this in wp-includes?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
To preview a theme setting, we need to be able to override it on the front end; the code has to run there. On top of that, it would be fairly easy to alter the WP_Customize class to run completely independent of the admin (if we removed the final keyword, that is).
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What's going on in customize-base.js?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
There is some underlying sugar there for several reasons. The most prominent is not fully operational yet, which is that there will be an option for the preview to apply changes without completely refreshing the page. This option will be facilitated by postMessage and synchronized values. Instead of writing code to individually watch, bind and synchronize each input, the sugar provides a system to keep all of them in sync with only a few lines of code.
&lt;/p&gt;
&lt;p&gt;
It's important to note that this is JS-only UI. One of the main goals here is to make it easy for plugins and themes to add to the customize controls and preview without having to unbind large portions of core code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Feb 2012 21:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:94/1330377606956928</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:93" title="Comment 93"&gt;TomAuger&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are you suggesting we only allow upload of 16 x 16 or 32 x 32 sized images, and don't allow for crop or resize?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not exactly. Best probably would be to expect properly sized images. If the user uploads something above 32x32, it can be cropped and resized automatically and saved as .png (and .ico if possible). We need to allow uploading of favicons and properly include/link them, not make a tool for creating tham :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can see your arguments for this approach. However, all the images (photographic or otherwise) that I have used during the testing have turned out remarkably well...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, many would turn well but many would fail too. It would be better if the user knows what the image looks like before uploading.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't mind the idea of adding a "help" icon that would provide tips, or some contextual help on the General settings page...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I meant a tab in the contextual help, probably with a short sentence under the "Upload" button that will send the user there. We won't need to add a lot of text, only 1-2 sentences explaining that favicons are very small images and should be generated by software or on particular websites.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe that for the 80% we give them the ability to upload anything.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, but also tell them what a favicon is and how they can make a good looking one.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And for the 20%, let's make sure that if we do get an icon in 16x16 or 32x32, or if it's already in ico format, it doesn't get interpolated or otherwise mutilated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree. If an .ico image is uploaded or if the image is already 32x32 we shouldn't touch it at all (don't think we can touch .ico in GD anyways).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20000 (We have alot of tickets) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:55:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20000#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20000#comment:8/1330372557037336</guid>
      <description>fixed: &lt;p&gt;
I think so, yes.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #20000 (We have alot of tickets) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20000#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20000#comment:7/1330372251882191</guid>
      <description>&lt;p&gt;
Fixed with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20000" title="Pinking shears 6-20000"&gt;[20000]&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [20000]: Pinking shears 6-20000</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:46:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/20000</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/20000/1330372012407662</guid>
      <description>&lt;p&gt;
Pinking shears 6-20000
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20109 (Valid htaccess rule causes 404 after upgrade to 3.3.1) updated</title>
      
        <dc:creator>ronnieg</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20109#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20109#comment:2/1330371749391731</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20109#comment:1" title="Comment 1"&gt;duck_&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
The rewrite bypass rules above were in the middle of .htaccess, before the WP index.php rules. Because all of the rules in the file refered to pages, not posts, the rules were all working, and are still working, converting incoming old urls to new page urls prior to hitting the WP index.php rules.
&lt;/p&gt;
&lt;p&gt;
The behavior I was seeing was really bizarre, because the good and intended content is definitely being rendered, not an empty page and not the standard or custom 404 page. For the purpose of demonstrating this, I am putting just the areas rule above back into the .htaccess file of my 3.3.1 development environment, with no other url specific rules. So to see this behavior in action, go to: &lt;a class="ext-link" href="http://dev1.denverhomevalue.com/areas/denver-central-communities.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://dev1.denverhomevalue.com/areas/denver-central-communities.html&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
You will see the full and correct content for that page, but with a 404 header response. You should see the same kind of behavior on all pages under the "Metro Areas" menu category, but normal 200 responses to everything else in the other menu categories.
&lt;/p&gt;
&lt;p&gt;
Really, regardless of what earlier release this affects, which my own experience and testing shows was not an issue in the production/stable version of 3.2.1 I was on, 3.3 actually renders proper content, while improperly returning a 404 header, and that to me is the root issue, regardless of whether the WP index.php rewrite rules are going to be hit or not. Essentially, if content is successfully rendered, as my dev1 site proves is happening, then 200 should be the response. Only if content cannot be successfully rendered should it invoke a 404 response, and that should also trigger the standard or custom 404 action for the site.
&lt;/p&gt;
&lt;p&gt;
The complete .htaccess currently on the above dev site follows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
&amp;lt;IfModule mod_rewrite.c&amp;gt;
########## Begin - Rewrite rules to block out some common exploits
## This attempts to block the most common type of exploit `attempts`
#
# Block out any script trying to set a mosConfig value through the URL
RewriteCond %{QUERY_STRING} mosConfig_[a-zA-Z_]{1,21}(=|\%3D) [OR]
# Block out any script trying to base64_encode crap to send via URL
RewriteCond %{QUERY_STRING} base64_encode.*\(.*\) [OR]
# Block out any script that includes a &amp;lt;script&amp;gt; tag in URL
RewriteCond %{QUERY_STRING} (\&amp;lt;|%3C).*script.*(\&amp;gt;|%3E) [NC,OR]
# Block out any script trying to set a PHP GLOBALS variable via URL
RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
# Block out any script trying to modify a _REQUEST variable via URL
RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2})
# Send all blocked request to homepage with 403 Forbidden error!
RewriteRule ^(.*)$ index.php [F,L]
RewriteRule ^areas(.*) - [L]
# BEGIN WordPress
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
&amp;lt;/IfModule&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20128 (Some 404 errors when having corrupted URLS!) closed</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20128#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20128#comment:3/1330371218715865</guid>
      <description>worksforme: &lt;p&gt;
Unless you're going to be the person who writes the code o fix this, you shouldn't be assigning it to yourself. The 'owned by' means thats who's owning the work to fix it.
&lt;/p&gt;
&lt;p&gt;
This works as expected for me, out of the box, on a vanilla WP site.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When added to the end of article eg. ?p=adasdasdas or ?p=2312312
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
?p= whatever is what's used for ugly permalinks, so if you're making up your own plugin to mess with that, I can see issues. I think you've got a theme or plugin issue going on, and should post for support in the forums.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:25:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:53/1330370727182948</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18311#comment:52" title="Comment 52"&gt;sushkov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding &lt;code&gt;ob_start()&lt;/code&gt;, I would leave it for later. To be honest, I don't see any reason why buffers should be avoided...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;ob_start()&lt;/code&gt; is "evil" :) We've had problems with it in the past, seems some hosts run custom handlers that do all sorts of things with the buffers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20003 (Removing a featured image breaks the ability to set a featured image) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:23:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20003#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20003#comment:8/1330370584082764</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19999" title="Pass post id to get_upload_iframe_src() instead of relying on a ..."&gt;[19999]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Pass post id to get_upload_iframe_src() instead of relying on a global. Props tott. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20003" title="#20003: defect (bug): Removing a featured image breaks the ability to set a featured image (closed: fixed)"&gt;#20003&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19999]: Pass post id to get_upload_iframe_src() instead of relying on a ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19999</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19999/1330370583251806</guid>
      <description>&lt;p&gt;
Pass post id to get_upload_iframe_src() instead of relying on a global. Props tott. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20003" title="#20003: defect (bug): Removing a featured image breaks the ability to set a featured image (closed: fixed)"&gt;#20003&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:22:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:93/1330370537947749</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:92" title="Comment 92"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The problem is that at such small sizes (16 x 16) most images don't look good. It doesn't matter if they are resized in PHP or by the browser on display.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you suggesting we only allow upload of 16 x 16 or 32 x 32 sized images, and don't allow for crop or resize?
&lt;/p&gt;
&lt;p&gt;
I can see your arguments for this approach. However, all the images (photographic or otherwise) that I have used during the testing have turned out remarkably well. The most common things people will use would be their company logo, or a photo of themselves (ie: mugshot). Both of these would render quite decently with the antialias + interpolation settings that are currently in place in the resizing process.
&lt;/p&gt;
&lt;p&gt;
I don't mind the idea of adding a "help" icon that would provide tips, or some contextual help on the General settings page that talks about good favicons, but it seems to me that it's out of scope for us to include training about how to make your site look good inline or onboard. Otherwise one could argue that we get into a slippery slope where we're now advising on content, so should we also provide tips on how to make a good masthead or background image, or write a good post title?
&lt;/p&gt;
&lt;p&gt;
I believe that for the 80% we give them the ability to upload anything. Worst case scenario, they have a custom ugly favicon instead of the default ugly favicon; more likely they will have a mediocre custom favicon of their face, or their kid, or their logo. If they're smart, they'll take the text out of their logo and just use the icon.
&lt;/p&gt;
&lt;p&gt;
And for the 20%, let's make sure that if we do get an icon in 16x16 or 32x32, or if it's already in ico format, it doesn't get interpolated or otherwise mutilated. So designers can do it themselves with their Photoshop ICO plugin, or some online service.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Feb 2012 19:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:92/1330369669696374</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:85" title="Comment 85"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Doing some research, it looks like ImageMagick supports creating ICO files. We should probably just use Imagick if it exists, and fallback to PNG-only if it does not...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1. Also not sure if there should be any support for image manipulation after uploading. The problem is that at such small sizes (16 x 16) most images don't look good. It doesn't matter if they are resized in PHP or by the browser on display.
&lt;/p&gt;
&lt;p&gt;
So an "unaware" user will not be able to add a decent looking favicon by uploading an arbitrary image. Imho it would be much better to include some help text about favicons in general and the requirement for using .ico format image for best browser compatibility. There are many ways a user can generate decent looking .ico file, including online image editing websites that handle exactly that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 18:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:91/1330367935702371</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:89" title="Comment 89"&gt;nacin&lt;/a&gt;:
You snuck yourself in there before my patch was up, so you'll see that the ico2_3.php &lt;em&gt;is&lt;/em&gt; included (and works fine). At this point we have a working (if somewhat blunt) favicon solution. What's next?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 18:37:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:90/1330367826631057</guid>
      <description>&lt;p&gt;
Okay, I'll need some guidance as to what to work on next, shooting for that 29th freeze. Not sure what jorbin is working on for the freeze, but I don't want to get into any duplication of effort. I'm feeling good about where we're at, functionality wise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>trac-16434-04.patch attached to Ticket #16434</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16434/trac-16434-04.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16434/trac-16434-04.patch/1330365433251118</guid>
      <description>&lt;p&gt;
Included ico2_3.php, "remove" functionality, and refactoring of get_favicon_thumbnail_img() to get_favicon_img()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:48:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:89/1330364913726223</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:88" title="Comment 88"&gt;TomAuger&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would we consider releasing the next version with a &lt;em&gt;default&lt;/em&gt; WordPress favicon in place (possibly in the root directory) in .png and .ico format? A fallback for when you have not defined one yourself in Settings &amp;gt; General? This would also help with a lot of 404's that servers are getting.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, a few reasons: One, it is difficult to then go ahead and remove that file (otherwise, some browsers will still read it). Two, there's really no reason for a default WordPress favicon on every WP.org site out there. Three, it only works for root-level sites. Four, we already intercept root-level /favicon.ico requests early and return a zero-length image/vnd.microsoft.com response, so 404s are not going to end up being logged if external rewrite rules are in place to map everything to index.php. Some hosts have simply placed favicon.ico files in root directories to even prevent WordPress from loading in these cases, but I don't think that's our responsibility beyond what we already do.
&lt;/p&gt;
&lt;p&gt;
I agree that supporting ICO should be the goal. Let's just not catch ourselves up over it. Still need to build a working feature. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:88/1330364600387965</guid>
      <description>&lt;p&gt;
Would we consider releasing the next version with a &lt;em&gt;default&lt;/em&gt; WordPress favicon in place (possibly in the root directory) in .png and .ico format? A fallback for when you have not defined one yourself in Settings &amp;gt; General? This would also help with a lot of 404's that servers are getting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:33:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:87/1330364002064841</guid>
      <description>&lt;p&gt;
The only problem with only supporting PNG is that the entire Internet Explorer userbase would be alienated. This doesn't seem like the "WordPress Way" to me - rolling out a feature that just won't work for a popular browser.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:29:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:86/1330363797935884</guid>
      <description>&lt;p&gt;
I think our efforts are best spent aimed at getting the PNG upload process polished and squared away. If we can generate ICO files at a later point, woo, but that is not necessary for version 1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:27:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:85/1330363654652286</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not that familiar with licensing, so my question is maybe more about that - is it okay to modify the source code of that library? What is the downside of doing that?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From a licensing perspective, yes. From a maintenance perspective, we try not to. And when we do, we carefully consider why, and even then, we try to float the patch upstream.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So you don't think it would be a problem to refactor that library / ie: alter the source code? (it could use some rehabilitation IMHO)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This library has seen better days. I would not be comfortable including it in core in its current state, unless it receives an audit, at the very least.
&lt;/p&gt;
&lt;p&gt;
Doing some research, it looks like ImageMagick supports creating ICO files. We should probably just use Imagick if it exists, and fallback to PNG-only if it does not. Here's some stuff on php.net &lt;a class="ext-link" href="http://www.php.net/manual/en/imagick.flattenimages.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;on ICO to PNG&lt;/a&gt;, for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20128 (Some 404 errors when having corrupted URLS!) updated</title>
      
        <dc:creator>grabbou</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20128#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20128#comment:2/1330363569170517</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20128 (Some 404 errors when having corrupted URLS!) updated</title>
      
        <dc:creator>grabbou</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20128#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20128#comment:1/1330363551215054</guid>
      <description>&lt;p&gt;
&lt;strong&gt;The problem is that these corrupted links are being indexed in minor search engines like google or yahoo&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:20:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:84/1330363218333804</guid>
      <description>&lt;p&gt;
The Filesystem API doesn't fit here. If we can't take an uploaded PNG and write out ICO, we use the PNG. This is the uploads directory â€” If we can upload the PNG, we can likely write the ICO to the same place. (The library *could* use an is_writeable() check, and/or some sort of error handling or suppression on the fopen(), but we can let it slide during testing.)
&lt;/p&gt;
&lt;p&gt;
The Filesystem API is only designed for critical tasks. Updates, installs. Things like uploads are not critical and therefore avoid the filesystem API. It's also why permissions are going to be more lax on the uploads directory in many cases, because we need to be able to write files here in a normal process, rather than asking for your FTP credentials. (Not even sure how that'd work anyway.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20128 (Some 404 errors when having corrupted URLS!) created</title>
      
        <dc:creator>grabbou</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20128/1330363113054376</guid>
      <description>&lt;p&gt;
Hi.
&lt;/p&gt;
&lt;p&gt;
I don't know where these urls are being genereated but look:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;?paged=[random string/numbers]
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://blog.seo-profi.pl/?paged=dascas"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://blog.seo-profi.pl/?paged=dascas&lt;/a&gt;
&lt;a class="ext-link" href="http://blog.seo-profi.pl/?paged=2123312312"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://blog.seo-profi.pl/?paged=2123312312&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/news/?paged=dalsdkalsdk"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?paged=dalsdkalsdk&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
shows index.php instead of 404.php -&amp;gt; generating multpile DC content which is not good for my seo sites.
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;When added to the end of article eg. ?p=adasdasdas or ?p=2312312
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://blog.seo-profi.pl/wywiad-z-kasparem-szymanskim-guglarzem-luty-2012/?p=dasdaspdapspd"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://blog.seo-profi.pl/wywiad-z-kasparem-szymanskim-guglarzem-luty-2012/?p=dasdaspdapspd&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
it redirects me (301) to entire article (which is good) but works for me only after installing 'platinum seo pack'
&lt;/p&gt;
&lt;p&gt;
Unfortunatelly, when added to page permalink, situation from point 1 happens.
&lt;/p&gt;
&lt;p&gt;
Look what is in google :
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.google.pl/search?q=site%3Ahttp%3A%2F%2Fchaudesonline.com%2F&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:pl:official&amp;amp;client=firefox-a#q=site:http://chaudesonline.com/&amp;amp;hl=pl&amp;amp;client=firefox-a&amp;amp;hs=buO&amp;amp;rls=org.mozilla:pl:official&amp;amp;prmd=imvns&amp;amp;ei=lqpLT6bHDISZOrytyOMF&amp;amp;start=80&amp;amp;sa=N&amp;amp;fp=1&amp;amp;biw=1280&amp;amp;bih=888&amp;amp;cad=b&amp;amp;bav=on.2,or.r_gc.r_pw.r_cp.,cf.osb"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.google.pl/search?q=site%3Ahttp%3A%2F%2Fchaudesonline.com%2F&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:pl:official&amp;amp;client=firefox-a#q=site:http://chaudesonline.com/&amp;amp;hl=pl&amp;amp;client=firefox-a&amp;amp;hs=buO&amp;amp;rls=org.mozilla:pl:official&amp;amp;prmd=imvns&amp;amp;ei=lqpLT6bHDISZOrytyOMF&amp;amp;start=80&amp;amp;sa=N&amp;amp;fp=1&amp;amp;biw=1280&amp;amp;bih=888&amp;amp;cad=b&amp;amp;bav=on.2,or.r_gc.r_pw.r_cp.,cf.osb&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, adding 301 redirect to Home Page in files 404.php, archive.php, index.php helps a bit, but it is not a proper fix.
&lt;/p&gt;
&lt;p&gt;
Any ideas what is going on?
&lt;/p&gt;
&lt;p&gt;
I don't know what is generating these urls! Try adding these to your blogs!
&lt;/p&gt;
&lt;p&gt;
blog.wordpress.org have the same problem!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Mon, 27 Feb 2012 17:01:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:83/1330362069191498</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:82" title="Comment 82"&gt;TomAuger&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:81" title="Comment 81"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 to integrating the WordPress Filesystem API into the library.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So you don't think it would be a problem to refactor that library / ie: alter the source code? (it could use some rehabilitation IMHO)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A problem in what sense: license, or implementation? If it's GPLv2, then license isn't an issue; we can modify it however we want. If it's ease of implementation, I don't know. Probably not something I have the chops for. Groking the Filesystem API is on my list of things to do, but it probably won't happen in time for the 3.4 release.
&lt;/p&gt;
&lt;p&gt;
I just think that, 1) as a matter of principle of using core APIs were possible, and 2) as a matter of not introducing server configuration issues for end users, using the Filesystem API is the right approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 16:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:82/1330361868491640</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:81" title="Comment 81"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 to integrating the WordPress Filesystem API into the library.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So you don't think it would be a problem to refactor that library / ie: alter the source code? (it could use some rehabilitation IMHO)
&lt;/p&gt;
&lt;p&gt;
I'm not that familiar with licensing, so my question is maybe more about that - is it okay to modify the source code of that library? What is the downside of doing that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Mon, 27 Feb 2012 16:52:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:81/1330361551087958</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:80" title="Comment 80"&gt;TomAuger&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
ImageICO library works great as advertised. Only concern is that it uses fopen() and fwrite() to create the local file, and I wonder whether this could be a problem.
&lt;/p&gt;
&lt;p&gt;
If this &lt;em&gt;is&lt;/em&gt; a concern, then there are two strategies:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;edit/change the library to use more WP core methods
&lt;/li&gt;&lt;li&gt;capture the ICO on stdout and save it that way.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Any thoughts? I could use some guidance on the best practice here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 to integrating the WordPress Filesystem API into the library.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 16:50:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:80/1330361449860594</guid>
      <description>&lt;p&gt;
ImageICO library works great as advertised. Only concern is that it uses fopen() and fwrite() to create the local file, and I wonder whether this could be a problem.
&lt;/p&gt;
&lt;p&gt;
If this &lt;em&gt;is&lt;/em&gt; a concern, then there are two strategies:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;edit/change the library to use more WP core methods
&lt;/li&gt;&lt;li&gt;capture the ICO on stdout and save it that way.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Any thoughts? I could use some guidance on the best practice here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>pluggable.php.5.diff attached to Ticket #18926</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 16:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.5.diff/1330360130028868</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_mail_failed&lt;/code&gt; action hook
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 16:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:15/1330359489765326</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18926#comment:14" title="Comment 14"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
First of all, the action should be called 'wp_mail_failed', to be consistent with 'wp_loaded' and others.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I second this, good thinking.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 16:10:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:14/1330359049681003</guid>
      <description>&lt;p&gt;
First of all, the action should be called 'wp_mail_failed', to be consistent with 'wp_loaded' and others.
&lt;/p&gt;
&lt;p&gt;
Most emails are sent during a POST action, which is usually followed by a redirect, so I don't see the point in calling trigger_error().
&lt;/p&gt;
&lt;p&gt;
Even if we were to call trigger_error(), it should be through a callback hooked into 'wp_mail_failed', so that it's easy for plugins to disable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 16:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:13/1330358726985977</guid>
      <description>&lt;p&gt;
error_log() is probably plugin territory, but trigger_error() for E_WARNING might not be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>mattii</dc:creator>

      <pubDate>Mon, 27 Feb 2012 16:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:68/1330358481953929</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:12/1330358360812819</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18926#comment:9" title="Comment 9"&gt;kurtpayne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should always log mail errors under &lt;code&gt;WP_DEBUG&lt;/code&gt;, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Plugin territory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>npetetin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:11/1330357618853695</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18926#comment:8" title="Comment 8"&gt;soulseekah&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How about putting in all the original &lt;code&gt; $to, $subject, $message, $headers = '', $attachments = array() &lt;/code&gt; set of data, that is implementation independent, isn't it? Any disadvantages?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looks pretty good to me, best implementation with all relevant data.
&lt;/p&gt;
&lt;p&gt;
+1 for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18926/" title="Attachments of Ticket #18926"&gt;pluggable.php.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18926/" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:10/1330357081396223</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18926#comment:9" title="Comment 9"&gt;kurtpayne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should always log mail errors under &lt;code&gt;WP_DEBUG&lt;/code&gt;, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Might be useful, although WordPress doesn't seem to log errors too much, only a couple of "third-party" classes (wpdb, simplePIE, POP3, etc.) contain error log writes; can't see much logging going on in the core itself, except deprecated functions firing errors off.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>pluggable.php.4.diff attached to Ticket #18926</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.4.diff/1330356794774332</guid>
      <description>&lt;p&gt;
action hook, WP_Error contains additional data, WP_DEBUG
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>pluggable.php.3.diff attached to Ticket #18926</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:26:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.3.diff/1330356415209088</guid>
      <description>&lt;p&gt;
action hook, WP_Error contains additional data
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:9/1330356288198653</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18926#comment:8" title="Comment 8"&gt;soulseekah&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How about putting in all the original &lt;code&gt; $to, $subject, $message, $headers = '', $attachments = array() &lt;/code&gt; set of data, that is implementation independent, isn't it? Any disadvantages?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like this, and the &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.diff" title="Attachment 'pluggable.php.diff' in Ticket #18926"&gt;pluggable.php.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18926/pluggable.php.diff" title="Download"&gt;â€‹&lt;/a&gt; approach.
&lt;/p&gt;
&lt;p&gt;
I think we should always log mail errors under &lt;code&gt;WP_DEBUG&lt;/code&gt;, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:8/1330355907626592</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18926#comment:7" title="Comment 7"&gt;npetetin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Good concern and good answer. However, passing the phpMailer object allows to give more context and retrieve its attributes (from, to, subject, message, etc.) Could passing a less typed set of these attributes (associative array?) in addition be the best compromise?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The inner implementation may change in the future, PHPMailer could be switched for something completely different. But we could use the third optional &lt;code&gt; $data &lt;/code&gt; parameter of the &lt;code&gt; WP_Error &lt;/code&gt; to pass along the relevant data, might be useful indeed.
&lt;/p&gt;
&lt;p&gt;
How about putting in all the original &lt;code&gt; $to, $subject, $message, $headers = '', $attachments = array() &lt;/code&gt; set of data, that is implementation independent, isn't it? Any disadvantages?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18926.2.diff attached to Ticket #18926</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18926/18926.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18926/18926.2.diff/1330355881143466</guid>
      <description>&lt;p&gt;
Log mail errors when WP_DEBUG is enabled
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:79/1330355550714247</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:77" title="Comment 77"&gt;brandondove&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just uploaded version 2.3 of the ImageICO php library that has been re-released under the GPLv2 license. As always, you can check the details at jpexs website: &lt;a class="ext-link" href="http://www.jpexs.com/php.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.jpexs.com/php.html&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is great. Thanks for championing this. We need to make sure that if we do end up using this library, it's acknowledged in the credits along with the other libs that are used. Might be nice to do a blog post about the new favicon feature and credit the library author.
&lt;/p&gt;
&lt;p&gt;
Before we go too far, I'll try rolling it in to the next patch and let's see if it does what we need it to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>npetetin</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:7/1330355053689487</guid>
      <description>&lt;p&gt;
Good concern and good answer. However, passing the phpMailer object allows to give more context and retrieve its attributes (from, to, subject, message, etc.) Could passing a less typed set of these attributes (associative array?) in addition be the best compromise?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>TomAuger</dc:creator>

      <pubDate>Mon, 27 Feb 2012 15:01:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:78/1330354907896594</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16434#comment:76" title="Comment 76"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nitpick: Why is that function called get_favicon_thumbnail_img()? Shouldn't it be just get_favicon_img()?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep. Will do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Feb 2012 14:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:6/1330353798744980</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.diff" title="Attachment 'pluggable.php.diff' in Ticket #18926"&gt;pluggable.php.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18926/pluggable.php.diff" title="Download"&gt;â€‹&lt;/a&gt; looks like the best approach to me. Most of the time, you can't do anything but log the error anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Mon, 27 Feb 2012 14:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:52/1330352497741597</guid>
      <description>&lt;p&gt;
Hey @azaozz could you take a look at line 144 in &lt;code&gt;wpeditimage/editor_plugin_src.js' in the context of &lt;/code&gt;From URL` tab (I'm asking because you already did some changes there).
Thanks.
&lt;/p&gt;
&lt;p&gt;
Regarding &lt;code&gt;ob_start()&lt;/code&gt;, I would leave it for later. To be honest, I don't see any reason why buffers should be avoided...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18311_qtags_ui.3.diff attached to Ticket #18311</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Mon, 27 Feb 2012 14:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18311/18311_qtags_ui.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18311/18311_qtags_ui.3.diff/1330351957107485</guid>
      <description>&lt;p&gt;
Tweaked for usage in &lt;code&gt;From URL&lt;/code&gt; and &lt;code&gt;Media-&amp;gt;Library&lt;/code&gt; tabs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2012 13:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:15/1330351071256168</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19910/19910.replace-link.patch" title="Attachment '19910.replace-link.patch' in Ticket #19910"&gt;19910.replace-link.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19910/19910.replace-link.patch" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Removes thickbox enqueue
&lt;ul&gt;&lt;li&gt;Fixes an issue with theme.js, it doesn't require thickbox (see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15656" title="Feature filter visuals.  First pass. see #14936"&gt;r15656&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Uses data attributes to pass template/stylesheet value
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19910.replace-link.patch attached to Ticket #19910</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2012 13:44:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19910/19910.replace-link.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19910/19910.replace-link.patch/1330350295790876</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20114 (Posts and Pages w. private visibility don't show up in existing content) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 12:12:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20114#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20114#comment:3/1330344723340557</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20114 (Posts and Pages w. private visibility don't show up in existing content) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 12:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20114#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20114#comment:2/1330344580543066</guid>
      <description>&lt;p&gt;
Remember that links to private content that a visitor has no access to will result in a 404. &lt;a class="ext-link" href="http://codex.wordpress.org/Content_Visibility#Private_Content"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://codex.wordpress.org/Content_Visibility#Private_Content&lt;/a&gt;
This is especially true for crawlers, you will get 404 even though your content exists for you.
&lt;/p&gt;
&lt;p&gt;
For possible non-core-based solutions to this refer to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/11427/how-to-301-private-posts-rather-than-404"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.stackexchange.com/questions/11427/how-to-301-private-posts-rather-than-404&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/9017/how-do-i-display-content-to-users-who-are-not-logged-in-instead-of-404-on-privat"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.stackexchange.com/questions/9017/how-do-i-display-content-to-users-who-are-not-logged-in-instead-of-404-on-privat&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The attached diff shows private posts in the lists. Patch will not work on 3.3.1, since many things have been moved around in that area.
&lt;/p&gt;
&lt;p&gt;
JS would require proper localization for the word "Private" if this enhancement/defect is considered. If not, use &lt;a class="ext-link" href="http://www.w3schools.com/html/html_links.asp"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;HTML links&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20114.diff attached to Ticket #20114</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 11:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20114/20114.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20114/20114.diff/1330343974824631</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18926 (Provide with the ability to monitor emailing failures) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 10:49:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18926#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18926#comment:5/1330339755017954</guid>
      <description>&lt;p&gt;
I have been thinking a lot about the issue of getting error messages from &lt;code&gt; wp_mail &lt;/code&gt; lately and stumbled upon this ticket today, decided to explore the problem-solution space a bit with a small and mostly obvious article.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codeseekah.com/2012/02/27/getting-error-feedback-from-wp_mail/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://codeseekah.com/2012/02/27/getting-error-feedback-from-wp_mail/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm attaching two diffs that that pass a WP_Error object, instead of the exception as the internal implementation may change in the future. One using a filter, another using an action. Both are not too comfortable to use, but we can probably work something out from there + decide on a better hook name, probably specific to &lt;code&gt; wp_mail &lt;/code&gt;, again, in case internal implementation changes.
&lt;/p&gt;
&lt;p&gt;
Probably missing something, ready to discuss further.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>pluggable.php.2.diff attached to Ticket #18926</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 10:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.2.diff/1330339707406865</guid>
      <description>&lt;p&gt;
using a filter with WP_Error
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>pluggable.php.diff attached to Ticket #18926</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Mon, 27 Feb 2012 10:47:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18926/pluggable.php.diff/1330339628972166</guid>
      <description>&lt;p&gt;
using action and WP_Error
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #6492 (Guids No Longer Have Permalink Format) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 27 Feb 2012 10:28:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6492#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6492#comment:69/1330338485855957</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19528 (HTML editor link quicktag not working in IE9) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 27 Feb 2012 08:23:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19528#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19528#comment:2/1330331012148446</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tracked this down to the following code in &lt;code&gt;wplink.dev.js&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( typeof textarea.selectionStart !== 'undefined' ) {
	start       = textarea.selectionStart;
	end         = textarea.selectionEnd;
	selection   = textarea.value.substring( start, end );
&lt;/pre&gt;&lt;p&gt;
This was originally designed to bypass IE which didn't support &lt;code&gt;selectionStart&lt;/code&gt;/&lt;code&gt;selectionEnd&lt;/code&gt;. However IE9 does. Problem is it sets both attributes to 0 when the textarea loses focus, which is what causes the behaviour described above.
&lt;/p&gt;
&lt;p&gt;
Attached a patch that fixes this by storing the selection information &lt;strong&gt;before&lt;/strong&gt; the textarea loses focus. This seems to me a better approach generally, as from what I can see the HTML5 spec doesn't explicitly say what should happen to selection data when focus is lost, so IE9 is not necessarily wrong in how it handles it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19528.diff attached to Ticket #19528</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 27 Feb 2012 08:17:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19528/19528.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19528/19528.diff/1330330652422641</guid>
      <description>&lt;p&gt;
Store selection information before textarea loses focus
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13429 (Updating Link URL on image within Admin with Gallery) updated</title>
      
        <dc:creator>daveslc</dc:creator>

      <pubDate>Mon, 27 Feb 2012 08:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13429#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13429#comment:42/1330330396224869</guid>
      <description>&lt;p&gt;
The bug appears when you insert an image and add an external link.
&lt;/p&gt;
&lt;p&gt;
The link is 'saved' to the editor, but then reverts when 'Update' is clicked.
&lt;/p&gt;
&lt;p&gt;
The workaround is to remove: rel="attachment wp-att-999" from the &amp;lt;a href ="link to external" rel="attachment wp-att-999"&amp;gt;.
Hence, the bug is probably being caused by rel="attachment wp-att-999 being improperly inserted in the &amp;lt;a href&amp;gt; tag when trying to link to an externalI (non-image attachment) URL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13429 (Updating Link URL on image within Admin with Gallery) updated</title>
      
        <dc:creator>daveslc</dc:creator>

      <pubDate>Mon, 27 Feb 2012 08:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13429#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13429#comment:41/1330330093696423</guid>
      <description></description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13429 (Updating Link URL on image within Admin with Gallery) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Mon, 27 Feb 2012 07:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13429#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13429#comment:40/1330329515974664</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version number indicates when the bug was initially introduced/reported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13429 (Updating Link URL on image within Admin with Gallery) updated</title>
      
        <dc:creator>daveslc</dc:creator>

      <pubDate>Mon, 27 Feb 2012 07:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13429#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13429#comment:39/1330328710155338</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13429 (Updating Link URL on image within Admin with Gallery) updated</title>
      
        <dc:creator>daveslc</dc:creator>

      <pubDate>Mon, 27 Feb 2012 07:39:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13429#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13429#comment:38/1330328351551565</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
When is this going to be addressed? This is still an issue in 3.3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20125 (Escape output in settings_errors) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 27 Feb 2012 06:37:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20125#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20125#comment:2/1330324673078414</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20125" title="#20125: enhancement: Escape output in settings_errors (closed: worksforme)"&gt;tollmanz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My patch tries to allow common, reasonable tags to be output. I use "wp_kses_data", which will only allow tags defined in the $allowedtags variable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Generally WordPress does not restrict plugins in this manner - IMO that's what makes the plugin API so powerful. I think it's the responsibility of plugin authors to make sure their code doesn't break things.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20060 (wp_redirect() doesn't exit) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Mon, 27 Feb 2012 05:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20060#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20060#comment:11/1330321595321426</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>20060.diff attached to Ticket #20060</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Mon, 27 Feb 2012 05:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20060/20060.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20060/20060.diff/1330321541758551</guid>
      <description>&lt;p&gt;
wp_redirect_and_exit with a hook for testability
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20125 (Escape output in settings_errors) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Mon, 27 Feb 2012 05:10:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20125#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20125#comment:1/1330319433058697</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here's the way I'm reading this code / documentation:  &lt;code&gt;add_settings_error&lt;/code&gt; is expecting &lt;code&gt;$message&lt;/code&gt; to contain pre-sanitized data and to be formatted exactly as the theme developer intends.
&lt;/p&gt;
&lt;p&gt;
The docs say this:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @param string $message The formatted message text to display to the user (will be shown inside styled &amp;lt;div&amp;gt; and &amp;lt;p&amp;gt;)
&lt;/pre&gt;&lt;p&gt;
I would argue that any user data being passed through this function should already be sanitized.
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_settings_error( 'zdt-setting', '1023', 'The value: ' . wp_kses_data( $val ) . ' is not allowed' );
&lt;/pre&gt;&lt;p&gt;
Otherwise WordPress should dump this data out directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18850 (hidden admin page) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 27 Feb 2012 02:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18850#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18850#comment:4/1330311446090692</guid>
      <description>&lt;p&gt;
+1 to this. It would allow plugins to make Welcome/Credits pages similar to WordPress core, without needing to pollute the admin menu.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16458 (image_resize() treats all resized images resulting in JPEG as having ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 27 Feb 2012 02:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16458#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16458#comment:8/1330310074363686</guid>
      <description>&lt;p&gt;
Having some issues with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16458/16458.diff" title="Attachment '16458.diff' in Ticket #16458"&gt;16458.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16458/16458.diff" title="Download"&gt;â€‹&lt;/a&gt; on 3.4-alpha-19998, Twenty Eleven, default media settings.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Uploading &lt;code&gt;Untitled.jpg&lt;/code&gt; (1000x1000) results in 6 files:
&lt;pre class="wiki"&gt;Untitled.jpg
Untitled-1000x288.jpg
Untitled-150x150.jpg
Untitled-300x300.jpg
Untitled1-1000x288.jpg
Untitled1-300x300.jpg
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Two of them are the same, so there should be only four. Apparently &lt;code&gt;image_resize()&lt;/code&gt; can be called multiple times with the same parameters.
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;Uploading &lt;code&gt;Untitled.jpeg&lt;/code&gt; then results in 4 files:
&lt;pre class="wiki"&gt;Untitled.jpeg
Untitled-1000x288.jpg
Untitled-150x150.jpg
Untitled-300x300.jpg
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Three of them overwrite the intermediate sizes of the previous image. This creates orphaned DB records when either image is deleted.
&lt;/p&gt;
&lt;p&gt;
Without the patch, issue 2 still happens, but issue 1 doesn't.
&lt;/p&gt;
&lt;p&gt;
We can probably just preserve &lt;code&gt;.jpeg&lt;/code&gt; extension (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16458/16458.2.diff" title="Attachment '16458.2.diff' in Ticket #16458"&gt;16458.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16458/16458.2.diff" title="Download"&gt;â€‹&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16458.2.diff attached to Ticket #16458</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 27 Feb 2012 02:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16458/16458.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16458/16458.2.diff/1330309802468564</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15694 (Shortcode I/O Intolerant of "]", "&lt;", Quotes, etc.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Feb 2012 01:08:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15694#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15694#comment:5/1330304881474814</guid>
      <description>&lt;p&gt;
The shortcodes work similarly to HTML with &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; being the equivalent of &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;. In that terms shortcodes cannot contain square brackets the same way HTML tags cannot contain "less than" and "greater than" chars. If they must be used, they need to be encoded/replaced with entities.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Feb 2012 00:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:14/1330303171106564</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19910#comment:11" title="Comment 11"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes it can. And in fact, it does, due to how the preview iframe works. There is no actual harm to placing JS in wp-includes over wp-admin. The rule of thumb I have used is that if it is a library of sorts, or decoupled nicely from the admin, or something that could be employed on the frontend (like pointers), it should go into wp-includes. The only things that should go into wp-admin is code intrinsically tied to the admin interface.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, in general there's no harm. I was talking about the php and css code too, not only the JS. Imho it doesn't make sense all these files to be in wp-includes as they all are only used when the user is in the admin and are useless on the front-end.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is not another framework here, nor is there a whole lot of complexity.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not exactly. The JS is build as a framework on top of jQuery with the actual functions that "do the work" being several levels "deep". Don't see a point in having JS classes for a few jQuery based single-use lines of JS.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For the JS files, no. They are loaded in different places. customize-loader.js handles the ability to load the customizer. customize-controls gets loaded in the frame that handles the controls. customize-preview gets loaded in the preview iframe. customize-base is a shared base class of both customize-preview and customize-controls. As they are nicely decoupled, they should remain separate.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Generally loading one larger JS file is better than segmenting it into several small files as after the first load the browsers keep all of it in memory cache. The same is true for the css. However when using JS concatenation the file that is loaded would probably be already different so the browsers would have to load it again.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For the PHP files, no. Individual classes belong in separate files. The fourth file, customize-controls.php, is a special file that is included to handle the controls after WP is hijacked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure it's a good idea to use OOP structures to output HTML in a non-OOP app. There is only one screen so there is only one "instance" of the HTML. What's the point of building specific OOP structure for only this part of the code that is used only once? But that discussion is not for here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>dynamic_sidebar-filter.diff attached to Ticket #20127</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Mon, 27 Feb 2012 00:06:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20127/dynamic_sidebar-filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20127/dynamic_sidebar-filter.diff/1330301177896579</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20127 (Add filter in dynamic_sidebar() to modify sidebar index) created</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Mon, 27 Feb 2012 00:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20127/1330301166864493</guid>
      <description>&lt;p&gt;
Use case: changing sidebars depending on the page/post/etc loaded through a plugin. Nothing too complex, just no way to do it. There is a filter dynamic_sidebar_params but that isn't called until later on in the function after the widgets have been collected for that sidebar.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18750 (specify post ID for is_page_template) updated</title>
      
        <dc:creator>billerickson</dc:creator>

      <pubDate>Mon, 27 Feb 2012 00:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18750#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18750#comment:20/1330300983925541</guid>
      <description>&lt;p&gt;
How about get_page_template_slug() ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 26 Feb 2012 23:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:13/1330300502379374</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19910#comment:10" title="Comment 10"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You mean wp-includes? Also the preview iframe is more or less front end.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, sry, meant wp-includes. No, a preview of the front-end only makes sense when the user is in the admin. So it's logical for the code to be in wp-admin.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... You mean postMessage?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, I meant customize-base.js. It is build as a JS framework which may be useful if the previews were a stand-alone JS application but don't make sense in the current (WP admin only) scope.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16458 (image_resize() treats all resized images resulting in JPEG as having ...) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Sun, 26 Feb 2012 23:36:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16458#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16458#comment:7/1330299401609074</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Test case:  Upload "uploaded_image.jpg" and "uploaded_image.jpeg"
&lt;/p&gt;
&lt;p&gt;
Default behavior results in:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp-content/uploads/2012/02/uploaded_image-150x150.jpg
wp-content/uploads/2012/02/uploaded_image.jpeg
wp-content/uploads/2012/02/uploaded_image.jpg
&lt;/pre&gt;&lt;p&gt;
The resized image names ("....-WIDTHxHEIGHT.jpg") stomp on each other.
&lt;/p&gt;
&lt;p&gt;
With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16458/16458.diff" title="Attachment '16458.diff' in Ticket #16458"&gt;16458.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16458/16458.diff" title="Download"&gt;â€‹&lt;/a&gt;, results are:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp-content/uploads/2012/02/uploaded_image-150x150.jpg
wp-content/uploads/2012/02/uploaded_image.jpeg
wp-content/uploads/2012/02/uploaded_image.jpg
wp-content/uploads/2012/02/uploaded_image1-150x150.jpg
&lt;/pre&gt;&lt;p&gt;
The resized image name only gets a counter inserted if the file already exists.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 26 Feb 2012 23:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:51/1330298843127970</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18311#comment:47" title="Comment 47"&gt;sushkov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hmm, in &lt;code&gt;wp-admin/media.php&lt;/code&gt; yes, already done.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We should avoid using a buffer there. I know there's a "circular dependency" between media.php and wp_editor() in there but we should be able to work around it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In tinyMCE popup, sure, but it would require loading half of WordPress, and even more changes across codebase, so I'm not sure it's worth that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not half, all of the admin as it would require wp-admin/includes/media.php. Not sure it's worth it either as it will make that popup (a lot) slower.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A month ago I would never believe this ticket would require that many modifications...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nothing we can't handle :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 26 Feb 2012 23:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:50/1330297991242745</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18311#comment:44" title="Comment 44"&gt;sushkov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...tricky stuff because &lt;code&gt;ed.translate()&lt;/code&gt; replaces existing document.body with a new one, and old elements bindings die.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, unfortunately that's the way TinyMCE translates the iframe body in its popups. The way around it is to bind events after the translation is done.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18311#comment:46" title="Comment 46"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is it possible to use wp_editor() (HTML editor only)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Currently there are five places where captions can be edited and only two use roughly the same code:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Media-&amp;gt;Library screen (single image properties),
&lt;/li&gt;&lt;li&gt;"Media" tab in the uploader popup (single image properties),
&lt;/li&gt;&lt;li&gt;"From URL" tab in the uploader popup,
&lt;/li&gt;&lt;li&gt;"Edit Image" popup in TinyMCE,
&lt;/li&gt;&lt;li&gt;Editing directly in the visual editor.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We can use wp_editor() in the first three as they are generated from PHP. The "Edit Image" popup in TinyMCE is all JS based, so Quicktags must be loaded directly there.
&lt;/p&gt;
&lt;p&gt;
However the question here is mostly UX: by far the best place to edit captions is directly in the visual editor. It is WYSIWYG and the user has access to more tools (other inline tags, remove formatting, etc.).
&lt;/p&gt;
&lt;p&gt;
Was thinking we can add third button that pops up when clicking on an image in the visual editor. Currently when users want to add a caption while composing a post they must:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Open the "Edit Image" popup,
&lt;/li&gt;&lt;li&gt;Add some text in the caption field,
&lt;/li&gt;&lt;li&gt;Click Update/close the popup,
&lt;/li&gt;&lt;li&gt;Edit the text they added in step 2 and add HTML elements to it.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The new button would add (and remove?) the caption elements around the image directly without the need to open the "Edit Image" popup, i.e. the users would start directly at step 4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17571 (bad double quote replacement  in wp_texturize) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Sun, 26 Feb 2012 23:04:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17571#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17571#comment:12/1330297472332871</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20042 (Move AtomServer class to class-atomserver.php) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Sun, 26 Feb 2012 23:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20042#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20042#comment:3/1330297241326311</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11895 (Allow more specific image size editing) updated</title>
      
        <dc:creator>gvenk</dc:creator>

      <pubDate>Sun, 26 Feb 2012 22:46:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11895#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11895#comment:13/1330296385255360</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20126 (get_file_data() is obtuse) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Feb 2012 22:36:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20126#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20126#comment:1/1330295812717571</guid>
      <description>&lt;p&gt;
In fairness, array_combine() was not available in PHP4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20126.diff attached to Ticket #20126</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 26 Feb 2012 22:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20126/20126.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20126/20126.diff/1330294778468740</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20126 (get_file_data() is obtuse) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 26 Feb 2012 22:19:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20126/1330294750585619</guid>
      <description>&lt;p&gt;
get_file_data() employs two odd-looking constructs. This is to make keys equal the values:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$extra_headers = array_flip( $extra_headers );
foreach( $extra_headers as $key=&amp;gt;$value ) {
	$extra_headers[$key] = $key;
}
&lt;/pre&gt;&lt;p&gt;
A single array_combine() will clean this up.
&lt;/p&gt;
&lt;p&gt;
Later, it uses ${$field}, followed by a &lt;code&gt;return compact( array_keys( ) )&lt;/code&gt;, rather than simply building the output array in the format for which it is returned.
&lt;/p&gt;
&lt;p&gt;
Attached is a simple patch that shortens the function while making it easier to understand, and introduces some small performance gains.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>19816.3.2.diff attached to Ticket #19816</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 26 Feb 2012 22:15:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19816/19816.3.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19816/19816.3.2.diff/1330294522767892</guid>
      <description>&lt;p&gt;
Fixed whitespace issue on expansion of details div, clearing of details on window resize, caching of $(this), whitespace for coding standards. [edit: trailing space removal]
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19816 (Theme details should be able to include multiple screenshots) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 26 Feb 2012 21:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19816#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19816#comment:13/1330291366399095</guid>
      <description>&lt;p&gt;
Added &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19816/19816.3.2.diff" title="Attachment '19816.3.2.diff' in Ticket #19816"&gt;19816.3.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19816/19816.3.2.diff" title="Download"&gt;â€‹&lt;/a&gt;.
Fixed whitespace issue on expansion of details div, clearing of details on window resize, caching of $(this), whitespace for coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19816.3.diff attached to Ticket #19816</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 26 Feb 2012 21:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19816/19816.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19816/19816.3.diff/1330291174322375</guid>
      <description>&lt;p&gt;
Fixed Whitespace issue on expansion, clearing of details on resize, caching of $(this), code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4539 (Abbreviated year followed by punctuation or markup doesn't texturize) updated</title>
      
        <dc:creator>xibe</dc:creator>

      <pubDate>Sun, 26 Feb 2012 20:05:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4539#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4539#comment:52/1330286753040384</guid>
      <description>&lt;p&gt;
Tiny patch for those situation where a quote ends with digits.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>formatting-01.patch attached to Ticket #4539</title>
      
        <dc:creator>xibe</dc:creator>

      <pubDate>Sun, 26 Feb 2012 20:05:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4539/formatting-01.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4539/formatting-01.patch/1330286705166475</guid>
      <description>&lt;p&gt;
"like" 42" patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19616 (Color Picker consistency) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Sun, 26 Feb 2012 20:01:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19616#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19616#comment:10/1330286487517780</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 26 Feb 2012 19:59:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:12/1330286366136933</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19910#comment:9" title="Comment 9"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With the customizer some functions aren't necessary anymore.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;preview_theme()
&lt;/li&gt;&lt;li&gt;_preview_theme_template_filter()
&lt;/li&gt;&lt;li&gt;_preview_theme_stylesheet_filter()
&lt;/li&gt;&lt;li&gt;preview_theme_ob_filter()
&lt;/li&gt;&lt;li&gt;preview_theme_ob_filter_callback()
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
We should probably leave these alone. While you've found no one referencing most of these functions directly, I would not be surprised if many of them are relying on ?template= &amp;amp;stylesheet= for their own particular needs. It's one of those under-the-hood pieces that we probably shouldn't break.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 26 Feb 2012 19:56:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:11/1330286180538637</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19910#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some initial thoughts about &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19995" title="Introduce new theme customizer to replace theme preview. Rough first ..."&gt;[19995]&lt;/a&gt;:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I handled the merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19995" title="Introduce new theme customizer to replace theme preview. Rough first ..."&gt;[19995]&lt;/a&gt; into core (koopersmith advised, then committed), so I can speak to these decisions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This code can't run on the front-end, wouldn't it be better to be in wp-admin, not in wp-content.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes it can. And in fact, it does, due to how the preview iframe works. There is no actual harm to placing JS in wp-includes over wp-admin. The rule of thumb I have used is that if it is a library of sorts, or decoupled nicely from the admin, or something that could be employed on the frontend (like pointers), it should go into wp-includes. The only things that should go into wp-admin is code intrinsically tied to the admin interface.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why do we need another JS framework on top of jQuery to handle this? It only makes the code harder to read/understand, brings a lot of complexity and a lot of unneeded features (for example how many instances of the classes and subclasses would we need to show a preview?).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is not another framework here, nor is there a whole lot of complexity. (I was able to understand what was going on.) I cover the breakdown of JS files.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wouldn't it be better to reduce the number of files? As far as I see customize-loader can be added to an existing JS file and customize-base, customize-controls and customize-preview can be merged into one file. Same with the four new php files and two css files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For the JS files, no. They are loaded in different places. customize-loader.js handles the ability to load the customizer. customize-controls gets loaded in the frame that handles the controls. customize-preview gets loaded in the preview iframe. customize-base is a shared base class of both customize-preview and customize-controls. As they are nicely decoupled, they should remain separate.
&lt;/p&gt;
&lt;p&gt;
For the PHP files, no. Individual classes belong in separate files. The fourth file, customize-controls.php, is a special file that is included to handle the controls after WP is hijacked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18438 (Create a new term in XMLRPC) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 26 Feb 2012 18:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18438#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18438#comment:22/1330281155848939</guid>
      <description>&lt;p&gt;
Refreshed patch with following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Tweaked caps on &lt;code&gt;wp.getTaxonomy&lt;/code&gt; and &lt;code&gt;wp.getTaxonomies&lt;/code&gt; per previous comment.
&lt;/li&gt;&lt;li&gt;Added optional &lt;code&gt;filter&lt;/code&gt; parameter to &lt;code&gt;wp.getTerms&lt;/code&gt; to support more scenarios, including &lt;code&gt;hide_empty=0&lt;/code&gt; and &lt;code&gt;search&lt;/code&gt; (in lieu of a separate &lt;code&gt;wp.suggestTerm&lt;/code&gt; method).
&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;get_object_vars&lt;/code&gt; to convert term object to array.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>taxes.combo.5.patch attached to Ticket #18438</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 26 Feb 2012 18:30:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18438/taxes.combo.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18438/taxes.combo.5.patch/1330281039025590</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>20125.diff attached to Ticket #20125</title>
      
        <dc:creator>tollmanz</dc:creator>

      <pubDate>Sun, 26 Feb 2012 17:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20125/20125.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20125/20125.diff/1330277224466515</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20125 (Escape output in settings_errors) created</title>
      
        <dc:creator>tollmanz</dc:creator>

      <pubDate>Sun, 26 Feb 2012 17:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20125/1330277186770865</guid>
      <description>&lt;p&gt;
&lt;strong&gt;The Problem&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The "settings_errors" function does not escape data when outputting it from the $settings_errors variable, which either comes from the $wp_settings_errors global variable or the "settings_errors" transient. This data is not escaped at any point during retrieval or output. Additionally, the data is not sanitized or validated when adding it via "add_settings_error".
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Test Case&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
In the validation callback function for a setting, adding a settings error with HTML can badly break output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_settings_error( 'zdt-setting', '1023', 'An error occurred&amp;lt;/div&amp;gt;' );
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Solution&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Escape the $type, $code, and $message variables on output.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Possible Issues&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The $message variable is output wrapped in a 'p' and 'strong' tag. My patch tries to allow common, reasonable tags to be output. I use "wp_kses_data", which will only allow tags defined in the $allowedtags variable. Should a plugin or theme author need another element printed out, it will be stripped; however, there still is the potential that it could cause issues for plugins that were previously able to place anything in the $message variable. With that said, most other tags would lead to invalid HTML and probably shouldn't be allowed in this context anyway.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>dates_and_featured_image.patch attached to Ticket #18429</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 26 Feb 2012 16:58:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18429/dates_and_featured_image.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18429/dates_and_featured_image.patch/1330275524051628</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18429 (Create custom post types via XMLRPC) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 26 Feb 2012 16:58:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18429#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18429#comment:60/1330275511114010</guid>
      <description>&lt;p&gt;
Added support for a &lt;code&gt;featured_image&lt;/code&gt; field which sets the &lt;code&gt;_thumbnail_id&lt;/code&gt; meta field in a safe way. See tests in &lt;a class="ext-link" href="https://unit-tests.trac.wordpress.org//intertrac/changeset%3A555" title="changeset:555 in WordPress Unit Tests Trac (old)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;[UT555]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It differs from the patch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15098" title="#15098: enhancement: Can't add post with featured image using only XML-RPC (closed: fixed)"&gt;#15098&lt;/a&gt; in that it only returns the attachment ID. If a client needs more information (such as URL or caption), it should use &lt;code&gt;wp.getMediaItem&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [555]: XMLRPC: Add tests for 'featured_image' field support in wp.getPost, ...</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 26 Feb 2012 16:58:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/555/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/555/tests/1330275492034612</guid>
      <description>&lt;p&gt;
XMLRPC: Add tests for 'featured_image' field support in wp.getPost, wp.newPost and wp.editPost. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18429" title="#18429: task (blessed): Create custom post types via XMLRPC (closed: fixed)"&gt;#18429&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>convert_date.patch attached to Ticket #18429</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 26 Feb 2012 15:56:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18429/convert_date.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18429/convert_date.patch/1330271779198086</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18429 (Create custom post types via XMLRPC) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 26 Feb 2012 15:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18429#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18429#comment:59/1330271764993433</guid>
      <description>&lt;p&gt;
While writing tests (&lt;a class="ext-link" href="https://unit-tests.trac.wordpress.org//intertrac/changeset%3A554" title="changeset:554 in WordPress Unit Tests Trac (old)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;[UT554]&lt;/a&gt;) for &lt;code&gt;wp.getPost&lt;/code&gt;, I encountered the date issues from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19733" title="#19733: defect (bug): XML-RPC returns invalid dates if the date is zero (closed: fixed)"&gt;#19733&lt;/a&gt;. I created a new helper method to fix this for the new &lt;code&gt;wp.*&lt;/code&gt; post methods.
&lt;/p&gt;
&lt;p&gt;
This helper method could be used by the legacy methods without side effects, but I left that out of the patch for now pending feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [554]: XMLRPC: First pass test cases for wp.getPost</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 26 Feb 2012 15:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/554/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/554/tests/1330271065817654</guid>
      <description>&lt;p&gt;
XMLRPC: First pass test cases for wp.getPost
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20123 ("Approve" should not be a bulk action when viewing spam comments) updated</title>
      
        <dc:creator>russellwwest</dc:creator>

      <pubDate>Sun, 26 Feb 2012 14:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20123#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20123#comment:3/1330267056549153</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-comments-list-table.php.diff attached to Ticket #20123</title>
      
        <dc:creator>russellwwest</dc:creator>

      <pubDate>Sun, 26 Feb 2012 14:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20123/class-wp-comments-list-table.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20123/class-wp-comments-list-table.php.diff/1330267011146331</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20123 ("Approve" should not be a bulk action when viewing spam comments) updated</title>
      
        <dc:creator>russellwwest</dc:creator>

      <pubDate>Sun, 26 Feb 2012 14:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20123#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20123#comment:2/1330266499189344</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5791 (End the Escape Madness in wp-settings.php) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 26 Feb 2012 14:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5791#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5791#comment:9/1330265286684447</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18322" title="#18322: defect (bug): The Road to Magic Quotes Sanity (new)"&gt;#18322&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10360" title="#10360: defect (bug): $_REQUEST's slashes may differ from $_GET/$_POST (closed: fixed)"&gt;#10360&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5791" title="#5791: enhancement: End the Escape Madness in wp-settings.php (closed: maybelater)"&gt;#5791&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18322 (The Road to Magic Quotes Sanity) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 26 Feb 2012 14:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18322#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18322#comment:14/1330265147604387</guid>
      <description>&lt;p&gt;
About a new API, I'd like to give some pointers: Probably it's feasibly to create a request object which abstracts and encapsulates the request properly:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$request = WP_Request::createFromGlobals();
&lt;/pre&gt;&lt;p&gt;
The key point here is that you don't have static GET::/POST::/WHATEVER:: functions (e.g. replacing &lt;code&gt;$_GET&lt;/code&gt; with &lt;code&gt;GET::get()&lt;/code&gt;). That's more or less only offering a new interface for the same thing. Instead encapsulate what varies and offer a real interface in form of an instance. If you need a global access to it, put it in a global variable as it's common within Worpdress.
&lt;/p&gt;
&lt;p&gt;
That's then one point instead of (additional) global (static class) functions.
&lt;/p&gt;
&lt;p&gt;
I suggest to take a look into the &lt;a class="ext-link" href="http://api.symfony.com/2.0/Symfony/Component/HttpFoundation/Request.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;API of the Symfony2 Request&lt;/a&gt;, the &lt;a class="ext-link" href="https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/Request.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;sourcecode&lt;/a&gt; or &lt;a class="ext-link" href="http://symfony.com/doc/2.0/book/http_fundamentals.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;the docs&lt;/a&gt; for some inspiration.
&lt;/p&gt;
&lt;p&gt;
The current dependency of wordpress is &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_SERVER&lt;/code&gt;, &lt;code&gt;$_COOKIE&lt;/code&gt; and &lt;code&gt;$_REQUEST&lt;/code&gt; afaik. So the request class must not be equally evolved as the Symfony2 Request.
&lt;/p&gt;
&lt;p&gt;
The key point is to start moving away from the (super)global dependencies. Then you can change things easier over time including the slashes domain.
&lt;/p&gt;
&lt;p&gt;
You want to change that, the root problem aren't the quotes technically, but to decide whether they are in or not globally. If we remove the many superglobals by encapsulating them, the problem of the superglobal depency is gone, it's easy to set policy. And you're even able to test the application as the request can be injected. That will become crucial if you want to change the processing of slashes for input data.
&lt;/p&gt;
&lt;p&gt;
And take care: Every level of indirection comes with a price, take it lightly.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For the status quo, I think it's a good idea to go through the functions and find out if the data that is processed by these functions is native/raw, slash-encoded or undefined (often called &lt;em&gt;maybe&lt;/em&gt;). One way could be to add a docblock tag that documents it so you can run a simple static code-analysis over all files afterwards to index functions used and to get a better impression.
&lt;/p&gt;
&lt;p&gt;
The parts that are &lt;em&gt;maybe&lt;/em&gt; are a smell then, that the usage of the function is not clear.
&lt;/p&gt;
&lt;p&gt;
Render a dependency tree of all functions that are calling a &lt;em&gt;maybe&lt;/em&gt; function and it would be more visible how &lt;em&gt;maybe&lt;/em&gt; affects the codebase and how large the problem is.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17018" title="#17018: defect (bug): Password Email contains wrong Password (closed: fixed)"&gt;#17018&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12402" title="#12402: defect (bug): make addslashes_gpc() use addslashes() fix to use real_escape, rather ... (closed: fixed)"&gt;#12402&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10360" title="#10360: defect (bug): $_REQUEST's slashes may differ from $_GET/$_POST (closed: fixed)"&gt;#10360&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5791" title="#5791: enhancement: End the Escape Madness in wp-settings.php (closed: maybelater)"&gt;#5791&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 26 Feb 2012 13:22:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:10/1330262527845175</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19910#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some initial thoughts about &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19995" title="Introduce new theme customizer to replace theme preview. Rough first ..."&gt;[19995]&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This code can't run on the front-end, wouldn't it be better to be in wp-admin, not in wp-content.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
You mean wp-includes? Also the preview iframe is more or less front end.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wouldn't it be better to reduce the number of files?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For the beginning I think it's fine, we still can combine them later, if needed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why do we need another JS framework on top of jQuery to handle this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You mean postMessage?
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
"jQuery on front end" â€“ we should keep &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/19979" title="#19979: enhancement: Load jQuery on the front end for logged-in users (assigned)"&gt;#19979&lt;/a&gt; in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 26 Feb 2012 13:15:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:9/1330262122724798</guid>
      <description>&lt;p&gt;
With the customizer some functions aren't necessary anymore.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;preview_theme()
&lt;/li&gt;&lt;li&gt;_preview_theme_template_filter()
&lt;/li&gt;&lt;li&gt;_preview_theme_stylesheet_filter()
&lt;/li&gt;&lt;li&gt;preview_theme_ob_filter()
&lt;/li&gt;&lt;li&gt;preview_theme_ob_filter_callback()
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What should we do we with these?
&lt;/p&gt;
&lt;p&gt;
I did a quick search through the plugin repo and there is only one plugin, which is using &lt;code&gt;preview_theme_ob_filter&lt;/code&gt; directly:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ ack 'preview_theme' --type=php
ktai-style/inc/theme.php
530:public static function preview_theme() {
550:	ob_start( 'preview_theme_ob_filter' );
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/ktai-style/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/extend/plugins/ktai-style/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18311_qtags_ui.2.diff attached to Ticket #18311</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Sun, 26 Feb 2012 13:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18311/18311_qtags_ui.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18311/18311_qtags_ui.2.diff/1330261631964839</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Sun, 26 Feb 2012 12:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:49/1330260770318880</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18311_qtags_ui.diff attached to Ticket #18311</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Sun, 26 Feb 2012 12:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18311/18311_qtags_ui.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18311/18311_qtags_ui.diff/1330260600851737</guid>
      <description>&lt;p&gt;
Cleaned up a bit, added comments, fixed quotes compatiblity
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20124 (Smilies Fail Combinations) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Sun, 26 Feb 2012 12:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20124#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20124#comment:5/1330259874818209</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Manual keywords generally aren't necessary. &lt;a class="ext-link" href="http://codex.wordpress.org/Reporting_Bugs#Trac_Keywords"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Explanation.&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16434 (Give site admin ability to upload favicon in Settings, General) updated</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Sun, 26 Feb 2012 06:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16434#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16434#comment:77/1330237372494756</guid>
      <description>&lt;p&gt;
Just uploaded version 2.3 of the ImageICO php library that has been re-released under the GPLv2 license. As always, you can check the details at jpexs website: &lt;a class="ext-link" href="http://www.jpexs.com/php.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.jpexs.com/php.html&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ico2_3.php attached to Ticket #16434</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Sun, 26 Feb 2012 06:15:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16434/ico2_3.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16434/ico2_3.php/1330236914419208</guid>
      <description>&lt;p&gt;
GPLv2 version of ImageICO php lib
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15694 (Shortcode I/O Intolerant of "]", "&lt;", Quotes, etc.) updated</title>
      
        <dc:creator>hidgw</dc:creator>

      <pubDate>Sun, 26 Feb 2012 04:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15694#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15694#comment:4/1330231889671243</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>hidgw</dc:creator>

      <pubDate>Sun, 26 Feb 2012 04:46:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:48/1330231583526042</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15956 (Remove user link should be red) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 26 Feb 2012 04:40:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15956#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15956#comment:5/1330231242888192</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15956#comment:4" title="Comment 4"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's a destructive operation, but it doesn't delete the user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From a consistency standpoint, it should only be red if it completely deletes something just as in Menus we have &lt;em&gt;Delete Menu&lt;/em&gt;. You're removing access for a user but not deleting the account and that's why it shouldn't be red. My 2Â¢.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20123 ("Approve" should not be a bulk action when viewing spam comments) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sun, 26 Feb 2012 04:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20123#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20123#comment:1/1330230972292623</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20123" title="#20123: defect (bug): &amp;#34;Approve&amp;#34; should not be a bulk action when viewing spam comments (closed: fixed)"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No word on whether it works. Probably does. It should be removed for consistency, given that Restore simply returns it to the queue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not always - the result of hitting "Not Spam" depends on what the comment status was before it was marked as spam (using &lt;code&gt;_wp_trash_meta_status&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
This means that doing a bulk action of "Not Spam" can cause those comments to end up in different places (approved or pending). Maybe that's why the "Approve" action is also there? (On reflection, this doesn't make too much sense to me. I do think it's counter-intuitive that the result of hitting "Not Spam" is variable.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Sun, 26 Feb 2012 03:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:47/1330227981239886</guid>
      <description>&lt;p&gt;
Hmm, in &lt;code&gt;wp-admin/media.php&lt;/code&gt; yes, already done.
&lt;/p&gt;
&lt;p&gt;
In tinyMCE popup, sure, but it would require loading half of WordPress, and even more changes across codebase, so I'm not sure it's worth that.
&lt;/p&gt;
&lt;p&gt;
A month ago I would never believe this ticket would require that many modifications. Right now the diff requires some more cleanup. But a nice working patch will be ready for upcoming meetup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17302 (Add get_previous_post_link(), get_next_post_link(), and ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 26 Feb 2012 02:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17302#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17302#comment:9/1330223773591959</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
OK here. Jaquith?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 26 Feb 2012 02:09:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:46/1330222152152179</guid>
      <description>&lt;p&gt;
Is it possible to use wp_editor() (HTML editor only)? We implemented it on edit-comments.php and it turned out well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Sun, 26 Feb 2012 01:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:45/1330221563021541</guid>
      <description>&lt;p&gt;
A fast preview:
&lt;a style="padding:0; border:none" href="http://i.imgur.com/2ZbGw.png"&gt;&lt;img src="http://i.imgur.com/2ZbGw.png" alt="http://i.imgur.com/2ZbGw.png" crossorigin="anonymous" title="http://i.imgur.com/2ZbGw.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Sun, 26 Feb 2012 01:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:44/1330221464545322</guid>
      <description>&lt;p&gt;
UI/UX in wpeditimage.html is tricky stuff because &lt;code&gt;ed.translate()&lt;/code&gt; replaces existing document.body with a new one, and old elements bindings die.
&lt;/p&gt;
&lt;p&gt;
To get over it, I moved wysiwyg outside the components that require translation, after those are parsed, wysiwyg hides initial textarea, and updates its value in the background.
&lt;/p&gt;
&lt;p&gt;
Looking back, I think we can just instantiate wysiwyg with the textarea name, since all this stuff depends on js and name attributes are irrelevant.
&lt;/p&gt;
&lt;p&gt;
As for now, &lt;code&gt;wpImage.enableWysiwyg()&lt;/code&gt; doesn't convert double-quotes into single-quotes, so using this from tinyMCE might srip formatting. Will take a look later.
&lt;/p&gt;
&lt;p&gt;
Files are not minified.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18750 (specify post ID for is_page_template) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 26 Feb 2012 01:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18750#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18750#comment:19/1330220264625759</guid>
      <description>&lt;p&gt;
Though in fairness, it's not the name we're getting back, it's the slug. The name is different.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18750 (specify post ID for is_page_template) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 26 Feb 2012 01:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18750#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18750#comment:18/1330220245879801</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good to me as well. I'll get it in next week.
&lt;/p&gt;
&lt;p&gt;
Let's keep thinking about the function name, though. Here's what's been suggested here:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;get_the_page_template()
&lt;/li&gt;&lt;li&gt;wp_get_page_template()
&lt;/li&gt;&lt;li&gt;get_custom_page_template()
&lt;/li&gt;&lt;li&gt;get_custom_page_template_name()
&lt;/li&gt;&lt;li&gt;get_page_template_for_post() (even though it is for pages)
&lt;/li&gt;&lt;li&gt;get_page_template_name()
&lt;/li&gt;&lt;li&gt;possible_new_function()
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I like get_page_template_name(), myself. "Custom" doesn't have much of a place here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20124 (Smilies Fail Combinations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 26 Feb 2012 01:02:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20124#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20124#comment:4/1330218147105412</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20124 (Smilies Fail Combinations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 26 Feb 2012 01:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20124#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20124#comment:3/1330218007180837</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.php.3.diff attached to Ticket #20124</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 26 Feb 2012 00:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20124/functions.php.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20124/functions.php.3.diff/1330217906662373</guid>
      <description>&lt;p&gt;
all groups expect trailing space, but don't consume them
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>functions.php.2.diff attached to Ticket #20124</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 26 Feb 2012 00:52:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20124/functions.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20124/functions.php.2.diff/1330217579923385</guid>
      <description>&lt;p&gt;
last group expecting trailing space, but not consuming it
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>functions.php.diff attached to Ticket #20124</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 26 Feb 2012 00:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20124/functions.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20124/functions.php.diff/1330217515213918</guid>
      <description>&lt;p&gt;
not expecting trailing spaces at all
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20124 (Smilies Fail Combinations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 26 Feb 2012 00:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20124#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20124#comment:2/1330217482378525</guid>
      <description>&lt;p&gt;
This is the regular expression that is matched against the content:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/(?:\s|^);(?:\-\)|\))|(?:\s|^)\:(?:\||x|wink\:|twisted\:|smile\:|shock\:|sad\:|roll\:|razz\:|oops\:|o|neutral\:|mrgreen\:|mad\:|lol\:|idea\:|grin\:|evil\:|eek\:|cry\:|cool\:|arrow\:|P|D|\?\?\?\:|\?\:|\?|\-\||\-x|\-o|\-P|\-D|\-\?|\-\)|\-\(|\)|\(|\!\:)|(?:\s|^)8(?:O|\-O|\-\)|\))(?:\s|$)/m
&lt;/pre&gt;&lt;p&gt;
This can be simplified visually to
&lt;/p&gt;
&lt;pre class="wiki"&gt;(?:\s|^);(...variants...)
or
(?:\s|^):(...variants...)
or
(?:\s|^)8(...variants...)(?:\s|$)
&lt;/pre&gt;&lt;p&gt;
The problem has been pinpointed to the last &lt;code&gt; (?:\s|$) &lt;/code&gt; clause. This is attached to "8"-type smilies and consumes the single trailing whitespace following it, meaning that anything that comes afterwards matching any of the groups, does not match &lt;code&gt; ^ &lt;/code&gt; and the whitespace would have already been consumed by the previous group.
&lt;/p&gt;
&lt;p&gt;
One solution would be to remove the trailing-space-muncher.
&lt;/p&gt;
&lt;pre class="wiki"&gt;(?:\s|^);(...variants...)
or
(?:\s|^):(...variants...)
or
(?:\s|^)8(...variants...)
&lt;/pre&gt;&lt;p&gt;
The &lt;code&gt; (?:\s|$) &lt;/code&gt; clause never helped any of the ":" and ";" type smilies to be parsed only when surrounded by whitespace (&lt;code&gt; :)text &lt;/code&gt; will result in a parsed smilie, not no space after bracket, should this be parsed or not?) Noticed that the &lt;code&gt; 8) &lt;/code&gt; smilie is gone in the trunk due to it breaking regular text.
&lt;/p&gt;
&lt;p&gt;
Another solution would be to use lookaheads to test for trailing spaces, these do not consume the spaces themselves.
&lt;/p&gt;
&lt;pre class="wiki"&gt;((?:\s|^);(...variants...)(?=\s|$))
or
((?:\s|^):(...variants...)(?=\s|$))
or
((?:\s|^)8(...variants...)(?=\s|$))
&lt;/pre&gt;&lt;p&gt;
This solves &lt;code&gt; :)text &lt;/code&gt;, if it is a problem.
&lt;/p&gt;
&lt;pre class="wiki"&gt;(?:\s|^);(...variants...)
or
(?:\s|^):(...variants...)
or
(?:\s|^)8(...variants...)(?=\s|$)
&lt;/pre&gt;&lt;p&gt;
Appears to be valid as well, only "8"-type smilies will expect tailing whitespace, but will not affect expected front-whitespace, fixing the combinations bug.
&lt;/p&gt;
&lt;p&gt;
I'm probably missing something but attached are very simple diffs then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17302 (Add get_previous_post_link(), get_next_post_link(), and ...) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Sun, 26 Feb 2012 00:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17302#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17302#comment:8/1330216362338849</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any reason we can't get this in for 3.4 before freeze? Don't really see any issues with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 26 Feb 2012 00:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910#comment:8/1330214970216918</guid>
      <description>&lt;p&gt;
Some initial thoughts about &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19995" title="Introduce new theme customizer to replace theme preview. Rough first ..."&gt;[19995]&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This code can't run on the front-end, wouldn't it be better to be in wp-admin, not in wp-content.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Why do we need another JS framework on top of jQuery to handle this? It only makes the code harder to read/understand, brings a lot of complexity and a lot of unneeded features (for example how many instances of the classes and subclasses would we need to show a preview?).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Wouldn't it be better to reduce the number of files? As far as I see customize-loader can be added to an existing JS file and customize-base, customize-controls and customize-preview can be merged into one file. Same with the four new php files and two css files.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>