<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #8972 ("limit" option in get_pages function) closed</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 27 Jan 2009 23:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8972#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8972#comment:1/1233097868000000</guid>
      <description>duplicate: &lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4531" title="#4531: enhancement: Add limit parameter to get_pages (closed: fixed)"&gt;#4531&lt;/a&gt;        Add limit parameter to get_pages
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [10447]: Optimize maybe_create_table(). Props jamescollins. fixes #8977</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10447</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10447/1233095721415806</guid>
      <description>&lt;p&gt;
Optimize maybe_create_table(). Props jamescollins. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8977" title="#8977: defect (bug): Database schema upgrades can be inefficient with lots of database ... (closed: fixed)"&gt;#8977&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8977 (Database schema upgrades can be inefficient with lots of database ...) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8977#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8977#comment:1/1233095721000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10447" title="Optimize maybe_create_table(). Props jamescollins. fixes #8977"&gt;[10447]&lt;/a&gt;) Optimize maybe_create_table(). Props jamescollins. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8977" title="#8977: defect (bug): Database schema upgrades can be inefficient with lots of database ... (closed: fixed)"&gt;#8977&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:25/1233095589000000</guid>
      <description>&lt;p&gt;
Some casual testing against a posts table with 26k rows doesn't show much difference between SQL_CALC_FOUND_ROWS and COUNT for me, even when paging way back into the archives.  SQL_CALC_FOUND_ROWS + FOUND ROWS is probably a little faster, on average.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>maybe_create_table.diff attached to Ticket #8977</title>
      
        <dc:creator>jamescollins</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:26:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8977/maybe_create_table.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8977/maybe_create_table.diff/1233095161000000</guid>
      <description>&lt;p&gt;
Patch against &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10446" title="Force the index only for 0 OR 1 queries. see #7415"&gt;r10446&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8977 (Database schema upgrades can be inefficient with lots of database ...) created</title>
      
        <dc:creator>jamescollins</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:25:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8977/1233095133000000</guid>
      <description>&lt;p&gt;
The &lt;code&gt;maybe_create_table()&lt;/code&gt; function in &lt;code&gt;wp-admin/includes/upgrade.php&lt;/code&gt; performs a &lt;code&gt;SHOW TABLES&lt;/code&gt; query (which returns every table in the database) then loops over all of these to see if a the specified table exists.
&lt;/p&gt;
&lt;p&gt;
WPMU was recently modified to optimise this, and donncha has suggested that this fix be implemented in WP as well.
&lt;/p&gt;
&lt;p&gt;
(See &lt;a class="ext-link" href="http://trac.mu.wordpress.org/ticket/833"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;WPMU Trac Ticket #833&lt;/a&gt; for more information)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8976 (making "preview changes" more user-friendly) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8976#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8976#comment:3/1233094805000000</guid>
      <description>&lt;p&gt;
To clarify what's needed: we don't need any new functionality at all. The problem is just that once a post is published there is just one button to see the post "preview" and its not clear what will happen when you push it.
&lt;/p&gt;
&lt;p&gt;
Currently if you make a change then click preview (without saving) it will show you the post with your changes but will not save it yet. This is what Element is looking for. However it would also be sane to think that that button will link directly to the live version of a post, or that you'd have to save before seeing changes.
&lt;/p&gt;
&lt;p&gt;
The best solution IMHO would be to have two buttons visible after publishing:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
View Post
Preview Changes
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This would not only make it clear that changes can be previewed before updating the post, but it would also provide a convenient link to the live version of a post for comparison (currently you need to go to your actual blog and find the post to see the live version).
&lt;/p&gt;
&lt;p&gt;
Alternately the label on the 'preview' button could just be changed to "Preview Changes" instead of preview. That would be the smallest possible amount of work (though my feeling is there might as well also be the view post button cause there's empty space and it woudl make the distinction super clear)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8976 (making "preview changes" more user-friendly) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:16:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8976#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8976#comment:2/1233094572000000</guid>
      <description>&lt;p&gt;
Clicking the Preview button forces an autosave and shows that content in the preview.  It already previews changes.  Are we suggesting changing the Preview button to say "Preview Changes"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8976 (making "preview changes" more user-friendly) updated</title>
      
        <dc:creator>jdingman</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8976#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8976#comment:1/1233094273000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A response from westi,
&lt;/p&gt;
&lt;p&gt;
"&amp;lt;westi&amp;gt; sounds good ... even better if it comes with a patch ;-)"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8976 (making "preview changes" more user-friendly) created</title>
      
        <dc:creator>jdingman</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:09:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8976/1233094199000000</guid>
      <description>&lt;p&gt;
Currently, there is a way to "preview changes" on a post, but it's not very use-friendly at all.
&lt;/p&gt;
&lt;p&gt;
Situation:  A post is written and already published, so you have the option to "update post," but there is no clear way to "preview changes" that you've made.
&lt;/p&gt;
&lt;p&gt;
You can currently view the changes you've made the post without updating public by letting it auto-save, then clicking "preview," but that's not obvious or clear to the average user (or myself).
&lt;/p&gt;
&lt;p&gt;
What I'm suggesting is adding a link or a button that displays "preview changes" so users can easily see what the changes will look like before the post is updated public.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3316 (Protected post password is plain text in cookie) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 27 Jan 2009 22:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3316#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3316#comment:7/1233094101000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
When this ticket was originally opened, it would have been a nightmare to patch as the cookie was checked in the theme itself:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	if (!empty($post-&amp;gt;post_password)) { // if there's a password
		if ($_COOKIE['wp-postpass_' . COOKIEHASH] != $post-&amp;gt;post_password) {  // and it doesn't match the cookie
			?&amp;gt;
			&amp;lt;p class="nocomments"&amp;gt;This post is password protected. Enter the password to view comments.&amp;lt;/p&amp;gt;
			&amp;lt;?php
			return;
		}
	}
&lt;/pre&gt;&lt;p&gt;
Now however we have the &lt;code&gt;post_password_required()&lt;/code&gt; function which handles the cookie checking and could be updated to check against a hashed cookie.
&lt;/p&gt;
&lt;p&gt;
The problem is that relatively few themes have probably updated to make use of that function. They are all likely still using the old direct check code. That means that &lt;strong&gt;all pre-WP 2.7 themes would have to be updated or would otherwise break&lt;/strong&gt;. This is kinda unacceptable for such a relatively minor security improvement.
&lt;/p&gt;
&lt;p&gt;
Recommend reclosing as wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 27 Jan 2009 21:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:24/1233093268000000</guid>
      <description>&lt;pre class="wiki"&gt;SELECT * FROM wp_comments WHERE comment_post_ID = 1643 AND comment_approved = '1' ORDER BY comment_date
&lt;/pre&gt;&lt;p&gt;
That's the comment query that single post pages use when there is not a logged in user.  It uses filesort.  Ordering by comment_date_gmt and adding a comment_post_ID,comment_approved,comment_date_gmt key gets rid of filesort.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8702 (HTTP API Updates) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 27 Jan 2009 21:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8702#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8702#comment:13/1233092867000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8702#comment:12" title="Comment 12"&gt;sivel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Okay...here is the new version of this patch.
&lt;/p&gt;
&lt;p&gt;
Changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Added blacklisting of transports if url is https
&lt;/li&gt;&lt;li&gt;Added filter https_local_ssl_verify (used in spawn_cron) so that users can override ssl verification for their site if using an untrusted ssl cert.  This insures that cron can still work on an untrusted ssl cert without removing ssl verification for external urls.
&lt;/li&gt;&lt;li&gt;Added filter https_ssl_verify so that users can override ssl verification for all https calls
&lt;/li&gt;&lt;li&gt;Added new default argument 'sslverify' which defaults to true
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I have not done much testing on this so any help testing would be appreciated.
&lt;/p&gt;
&lt;p&gt;
This patch fits into the current trunk revision 10446.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for the updated patch.
&lt;/p&gt;
&lt;p&gt;
As I have said before I much prefer to be secure out of the box but give people the flexibility to go unsecure if they want.
&lt;/p&gt;
&lt;p&gt;
It is good to see an easy option to enable cron to work with a unsigned cert to allow people to self-cert to get https while still having a safe route to getting SSl working.
&lt;/p&gt;
&lt;p&gt;
It would be good to see some testing on this and get it into trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Tue, 27 Jan 2009 21:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:23/1233092319000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/7415#comment:21" title="Comment 21"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Err.. silly pasting. This even:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT COUNT($distinct $wpdb-&amp;gt;posts.ID) FROM $wpdb-&amp;gt;posts $join WHERE 1=1 $where $groupby
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
posts.ID is an autoinc, so it's always unique.  $distinct is superfluous.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8708 (Remove paging information from Atom comment feed ids) closed</title>
      
        <dc:creator>GregMulhauser</dc:creator>

      <pubDate>Tue, 27 Jan 2009 19:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8708#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8708#comment:7/1233085250000000</guid>
      <description>fixed: &lt;p&gt;
Whooops -- sorry, my confused brain at work (or not at work, as the case may be)!
&lt;/p&gt;
&lt;p&gt;
Duh: Atom feeds have IDs...AND they have links. Fixing one doesn't mean breaking the other.
&lt;/p&gt;
&lt;p&gt;
Apologies again!
&lt;/p&gt;
&lt;p&gt;
All the best,
Greg
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>ssh2.dash_and_shell.patch attached to Ticket #8210</title>
      
        <dc:creator>t.baboon</dc:creator>

      <pubDate>Tue, 27 Jan 2009 19:35:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8210/ssh2.dash_and_shell.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8210/ssh2.dash_and_shell.patch/1233084917000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8210 (SSH2 Filesystem transport; Multiple issues) updated</title>
      
        <dc:creator>t.baboon</dc:creator>

      <pubDate>Tue, 27 Jan 2009 19:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8210#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8210#comment:6/1233084888000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My attached patch seems to fix problems &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; above (dashes in the beginning of filenames and special characters in filenames causing the potential execution of shell commands), while not addressing problem &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt; (moving to "ssh2.sftp://"). It uses escapeshellarg() on all paths and adds the string "./" in front of all relative paths or filenames (ones that don't start with a slash), which should fix &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I've not tested it extensively, so some testing assistance would be appreciated.
&lt;/p&gt;
&lt;p&gt;
-- t.baboon
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>canonical.diff attached to Ticket #8975</title>
      
        <dc:creator>wnorris</dc:creator>

      <pubDate>Tue, 27 Jan 2009 19:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8975/canonical.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8975/canonical.diff/1233084305000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8975 (redirect_canonical returns too early when redirect_url cannot be determined) created</title>
      
        <dc:creator>wnorris</dc:creator>

      <pubDate>Tue, 27 Jan 2009 19:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8975/1233084295000000</guid>
      <description>&lt;p&gt;
redirect_canoncial() returns if the value of $redirect_url is false, before calling the 'redirect_canonical' filter.  This prevents plugins from being able to provide a proper redirect URL in the event that WordPress is unable to.  The second check AFTER the hook is called should continue to check if $redirect_url is false, but the one BEFORE the hook should not.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3316 (Protected post password is plain text in cookie) updated</title>
      
        <dc:creator>raxitsheth</dc:creator>

      <pubDate>Tue, 27 Jan 2009 19:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3316#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3316#comment:6/1233083277000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just re-opening the ticket.
&lt;/p&gt;
&lt;p&gt;
Password protected post are normally post which are "Not for public". Storing the password in plaintext on user browser is clearly  a dumb idea !
&lt;/p&gt;
&lt;p&gt;
Even other sites can not access cookie, a simple proxy/man in middle attack/network sniffer can read the password.
&lt;/p&gt;
&lt;p&gt;
-Raxit Sheth
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3316 (Protected post password is plain text in cookie) reopened</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Tue, 27 Jan 2009 19:06:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3316#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3316#comment:5/1233083186000000</guid>
      <description>&lt;p&gt;
The cost of hashing it is so low that it would be stupid not to do it.
&lt;/p&gt;
&lt;p&gt;
The gain isn't much, but hashing it is worth it even for saving one poor man, who put his e-mail password there and had his cookies stolen due to an XSS (a common thing these days).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 27 Jan 2009 19:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:22/1233082820000000</guid>
      <description>&lt;p&gt;
$wpdb-&amp;gt;posts.* might even be useful in some cases, in case someone retrieves extra fields with one or more left joins on $wpdb-&amp;gt;postmeta.
&lt;/p&gt;
&lt;p&gt;
alternatively, we'd need:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$count_fields = apply_filters('count_fields', "$wpdb-&amp;gt;posts.ID");
&lt;/pre&gt;&lt;p&gt;
or something like that... in order to retrieve the correct number of posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 27 Jan 2009 18:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:21/1233082655000000</guid>
      <description>&lt;p&gt;
Err.. silly pasting. This even:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT COUNT($distinct $wpdb-&amp;gt;posts.ID) FROM $wpdb-&amp;gt;posts $join WHERE 1=1 $where $groupby
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 27 Jan 2009 18:56:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:20/1233082567000000</guid>
      <description>&lt;p&gt;
the count query you just posted is erroneous. it should be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT $distinct $fields FROM $wpdb-&amp;gt;posts $join WHERE 1=1 $where $groupby
&lt;/pre&gt;&lt;p&gt;
Adding to this, a $having clause would be a bonus. ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 27 Jan 2009 18:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:19/1233082143000000</guid>
      <description>&lt;p&gt;
Patch eliminates found rows for the big query in WP_Query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>no_found_rows.diff attached to Ticket #7415</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 27 Jan 2009 18:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/7415/no_found_rows.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/7415/no_found_rows.diff/1233082087000000</guid>
      <description>&lt;p&gt;
Eliminate FOUND_ROWS for post query.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Wordpress-permalinks2.png attached to Ticket #8974</title>
      
        <dc:creator>ruslany</dc:creator>

      <pubDate>Tue, 27 Jan 2009 18:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8974/Wordpress-permalinks2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8974/Wordpress-permalinks2.png/1233080634000000</guid>
      <description>&lt;p&gt;
Permalinks with IIS URL Rewriting
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8974 (WordPress permalinks settings page should work with IIS 7.0 URL ...) created</title>
      
        <dc:creator>ruslany</dc:creator>

      <pubDate>Tue, 27 Jan 2009 18:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8974/1233080595000000</guid>
      <description>&lt;p&gt;
WordPress is able to determine if it is running on Apache and then it offers "Pretty Permalink" options and also auto-generates mod_rewrite rules necessary to support pretty permalinks. However, when WordPress is running on IIS then WordPress always uses "Almost pretty permalinks" with index.php in the URL.
&lt;/p&gt;
&lt;p&gt;
Now, that IIS has a built-in support for URL rewriting, it would be benefitical for WordPress users if WordPress offered "Pretty Permalinks" option when running on IIS 7.0 with url rewriter installed. Also WordPress can auto-generate IIS rewrite rules necessary to support "Pretty Permalinks". This capability will greatly simplify the permalink configuration task for users who host WordPress on IIS.
&lt;/p&gt;
&lt;p&gt;
I already have a patch ready for this enhancement. See attached file for an example how it works.
&lt;/p&gt;
&lt;p&gt;
If you decide to accept this enhancement feel free to assign bug to me to provide the patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8973 (Function get_page_of_comment() returns incorrect page numbers) updated</title>
      
        <dc:creator>GregMulhauser</dc:creator>

      <pubDate>Tue, 27 Jan 2009 18:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8973#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8973#comment:1/1233080439000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8708 (Remove paging information from Atom comment feed ids) reopened</title>
      
        <dc:creator>GregMulhauser</dc:creator>

      <pubDate>Tue, 27 Jan 2009 18:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8708#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8708#comment:6/1233079848000000</guid>
      <description>&lt;p&gt;
Hi folks,
&lt;/p&gt;
&lt;p&gt;
I'm not convinced that this 'bug' is necessarily a bug, or that this 'fix' is necessarily a fix...
&lt;/p&gt;
&lt;p&gt;
I understand that in principle, IDs should never change -- but changing *URIs* are a logical consequence of allowing users to choose 1) comment pagination, and 2) ascending date order to display comments. (URIs do not change if comments are displayed in descending date order and with a constant value for comments per page.) Unfortunately, IDs constructed without page numbers make for broken URIs for all comments except those which happen to live at the post's permalink. In alexforrow's example, the URI only works because we are on comment page 1; if we were on other pages, the URI would be broken.
&lt;/p&gt;
&lt;p&gt;
When submitting the bug report, alexforrow mentioned that including page numbers "could break things if the the page number were to change". But if "break things" means "break the way in which IDs can pass for URIs", then the fix only serves to trade future potential breaks for present guaranteed breaks for users with paging enabled.
&lt;/p&gt;
&lt;p&gt;
I'm guessing that many users would be more unhappy to find that their Atom feeds include broken links than to find that they may break comment URIs if they choose pagination combined with ascending date order.
&lt;/p&gt;
&lt;p&gt;
I'm happy to be told I'm all wrong about this, but it just seemed to me there was more afoot than whether including paging information was a good idea or a bad idea...
&lt;/p&gt;
&lt;p&gt;
All the best,
Greg
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #8804 (Cannot unset string offsets) updated</title>
      
        <dc:creator>futuramachina</dc:creator>

      <pubDate>Tue, 27 Jan 2009 17:27:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8804#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8804#comment:8/1233077274000000</guid>
      <description>&lt;p&gt;
I've used a .htaccess workaround to fix the magic quotes issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8973 (Function get_page_of_comment() returns incorrect page numbers) created</title>
      
        <dc:creator>GregMulhauser</dc:creator>

      <pubDate>Tue, 27 Jan 2009 16:54:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8973/1233075280000000</guid>
      <description>&lt;p&gt;
The function get_page_of_comment(), defined in /wp-includes/comment.php for WordPress 2.7, returns wildly incorrect results in cases where the database includes spam trackbacks or pingbacks. The reason is that the DB query on line 595 does not include "comment_approved = 1" and therefore incorrectly counts unapproved trackback and pingback spam (not to mention non-spam comments in moderation). As far as I can tell from browsing my DB, although spam comments have their comment_type changed to 'spam' in the database, trackbacks and pingbacks still retain their original comment_type.
&lt;/p&gt;
&lt;p&gt;
As a newbie to the WordPress Trac, I'm afraid I don't know how to provide a diff, but the full correct query is as follows:
&lt;/p&gt;
&lt;p&gt;
$oldercoms = $wpdb-&amp;gt;get_var( $wpdb-&amp;gt;prepare( "SELECT COUNT(comment_ID) FROM $wpdb-&amp;gt;comments WHERE comment_approved = 1 AND comment_post_ID = %d AND comment_parent = 0 AND comment_date_gmt &amp;lt; '%s'" . $comtypewhere, $comment-&amp;gt;comment_post_ID, $comment-&amp;gt;comment_date_gmt ) );
&lt;/p&gt;
&lt;p&gt;
The upshot is that without the above fix, comment URLs in several places (e.g., RSS feeds) may point to non-existent pages.
&lt;/p&gt;
&lt;p&gt;
All the best,
Greg
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8702 (HTTP API Updates) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Tue, 27 Jan 2009 16:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8702#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8702#comment:12/1233073597000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Okay...here is the new version of this patch.
&lt;/p&gt;
&lt;p&gt;
Changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Added blacklisting of transports if url is https
&lt;/li&gt;&lt;li&gt;Added filter https_local_ssl_verify (used in spawn_cron) so that users can override ssl verification for their site if using an untrusted ssl cert.  This insures that cron can still work on an untrusted ssl cert without removing ssl verification for external urls.
&lt;/li&gt;&lt;li&gt;Added filter https_ssl_verify so that users can override ssl verification for all https calls
&lt;/li&gt;&lt;li&gt;Added new default argument 'sslverify' which defaults to true
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I have not done much testing on this so any help testing would be appreciated.
&lt;/p&gt;
&lt;p&gt;
This patch fits into the current trunk revision 10446.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8972 ("limit" option in get_pages function) created</title>
      
        <dc:creator>tiosolid</dc:creator>

      <pubDate>Tue, 27 Jan 2009 16:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8972/1233072899000000</guid>
      <description>&lt;p&gt;
Requesting a way to limit the output from the get_pages function using limit=NumberOfPages.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8675 (Allow filtering of login message to allow for custom messages to be ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 27 Jan 2009 15:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8675#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8675#comment:1/1233071564000000</guid>
      <description>&lt;p&gt;
I was just about to create the exact patch, but I found this ticket.  Let's get this into 2.8, please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8260 (A false linking to dashboard in the sidebar after upgrade) updated</title>
      
        <dc:creator>utele</dc:creator>

      <pubDate>Tue, 27 Jan 2009 15:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8260#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8260#comment:9/1233070042000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8260#comment:7" title="Comment 7"&gt;utele&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Therefore, I tried your solution with the index.php in all directories, where only a index.php for safety reasons exist I changed the index.php to an index.html.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unfortunately, it did not help. I've still no content in the dashboard except the menu...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the meantime I figured out, that these are two problems which don't effect each other.
The index.html helps to get the right page.
&lt;/p&gt;
&lt;p&gt;
No content in the dashboard had nothing to do with that instead the problem was an additional function was not closed before starting to work with the content. Repairing the function and also avoid for the future that its not closed before starting everything else, worked for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8971 (Invalid value for @cols in default theme comments.php textarea element?) created</title>
      
        <dc:creator>sampablokuper</dc:creator>

      <pubDate>Tue, 27 Jan 2009 14:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8971/1233067402000000</guid>
      <description>&lt;p&gt;
In the default theme, comments.php has a textarea element thus:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;textarea name="comment" id="comment" cols="100%" rows="10" tabindex="4"&amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/pre&gt;&lt;p&gt;
If I'm not mistaken, the cols attribute should be a number (not a percentage), according to, e.g., &lt;a class="ext-link" href="http://www.w3.org/TR/html401/interact/forms.html#h-17.7"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.w3.org/TR/html401/interact/forms.html#h-17.7&lt;/a&gt; and &lt;a class="ext-link" href="http://www.velocityreviews.com/forums/t153587-html-forms-and-liquid-designs.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.velocityreviews.com/forums/t153587-html-forms-and-liquid-designs.html&lt;/a&gt; and
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8968 (Spam comments should produce 'awaiting moderation' feedback) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 27 Jan 2009 13:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8968#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8968#comment:2/1233062830000000</guid>
      <description>&lt;p&gt;
"Awaiting moderation" is the wrong message for a spammed comment, because unlike comments that actually make it to the moderation queue, a spammed comment is much less likely to get approved.  It's going to be lost among thousands of spammy comments.  Don't give the commenter false hope.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8970 (wp_redirect() ignores status parameter?) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 27 Jan 2009 10:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8970#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8970#comment:1/1233053214000000</guid>
      <description>invalid: &lt;p&gt;
nevermind, I'm blind. :D
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8970 (wp_redirect() ignores status parameter?) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 27 Jan 2009 10:43:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8970/1233053035000000</guid>
      <description>&lt;p&gt;
if you use wp_redirect($location, 301), it doesn't send the following, does it?
&lt;/p&gt;
&lt;pre class="wiki"&gt;header('HTTP/1.1 301 Moved Permanently');
header('Status: 301 Moved Permanently');
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8969 (Replace tmpfile() function with tempnam()) created</title>
      
        <dc:creator>madmuffin</dc:creator>

      <pubDate>Tue, 27 Jan 2009 09:29:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8969</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8969/1233048542000000</guid>
      <description>&lt;p&gt;
I noticed that Wordpress is using the tmpfile() function which does not regard the upload_tmp_dir value. It would be better to use tempnam() instead, to which the tmp-path can be passed.
&lt;/p&gt;
&lt;p&gt;
these 3 files on my system make use of the tmpfile function:
&lt;/p&gt;
&lt;pre class="wiki"&gt;info.php
wp-admin/includes/class-wp-filesystem-ftpext.php
wp-includes/js/tinymce/plugins/spellchecker/classes/PSpellShell.php
&lt;/pre&gt;&lt;p&gt;
I am a shared host and normally customers have their own tmp folder but tmpfile always writes to /tmp/ on *nix systems, so I have to give wordpress users more permissions than usual.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8968 (Spam comments should produce 'awaiting moderation' feedback) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 27 Jan 2009 07:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8968#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8968#comment:1/1233041423000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The enclosed patch does this, and produces the awaiting moderation message with themes that call wp_list_comments().
&lt;/p&gt;
&lt;p&gt;
Themes that use their own comments code will produce slightly different (but not necessarily bad) behaviour: the author will see the comment posted normally without the 'awaiting moderation' message.  No one else sees it of course.  Themes can adjust their code to the new behaviour by changing their $comment-&amp;gt;comment_approved conditional to check for != '1' instead of == '0':
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ($comment-&amp;gt;comment_approved != '1')
    _e("\t\t\t\t\t&amp;lt;span class='unapproved'&amp;gt;Your comment is awaiting moderation.&amp;lt;/span&amp;gt;\n", 'sandbox')
&lt;/pre&gt;&lt;p&gt;
Please note that this needs further testing, and no doubt theme developers will want to discuss it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>spam-awaiting-moderation-r10466.patch attached to Ticket #8968</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 27 Jan 2009 07:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8968/spam-awaiting-moderation-r10466.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8968/spam-awaiting-moderation-r10466.patch/1233040942000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8968 (Spam comments should produce 'awaiting moderation' feedback) created</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 27 Jan 2009 07:19:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8968</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8968/1233040751000000</guid>
      <description>&lt;p&gt;
Normally, after a user posts a comment, they'll see their comment appear - either as a live comment, or with the message 'Your comment is awaiting moderation'.
&lt;/p&gt;
&lt;p&gt;
However if a spam filtering plugin catches the comment as spam, no comment is shown.  This gives feedback to human spammers, because they can easily distinguish between comments that pass the filter and those that are blocked.
&lt;/p&gt;
&lt;p&gt;
This could easily be avoided by producing the same 'awaiting moderation' feedback in both cases.  Obscurity aside, it's an accurate description for spam comments, since they are indeed held for moderation (just in a special queue).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 23:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:9/1233010845000000</guid>
      <description>&lt;p&gt;
Fixed for qTranslate v2.2.2 and patch available at &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/changeset/89547/qtranslate"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://plugins.trac.wordpress.org/changeset/89547/qtranslate&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8064 (Show when future posts miss schedule) reopened</title>
      
        <dc:creator>murky</dc:creator>

      <pubDate>Mon, 26 Jan 2009 22:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8064#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8064#comment:3/1233009947000000</guid>
      <description>&lt;p&gt;
Whilst this is a better behaviour, it seems like a bug to me.
&lt;/p&gt;
&lt;p&gt;
Surely, if WP can recognise that a post has missed the scheduled posting time, it should simply post it as soon as the problem has cleared.
&lt;/p&gt;
&lt;p&gt;
I.e.
&lt;/p&gt;
&lt;p&gt;
I couldn't post THEN, but the database is available and I see it is overdue.... I'll post now instead.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 26 Jan 2009 22:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:18/1233009291000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10446" title="Force the index only for 0 OR 1 queries. see #7415"&gt;[10446]&lt;/a&gt;) Force the index only for 0 OR 1 queries. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7415" title="#7415: defect (bug): &amp;#34;using filesort&amp;#34; in default install (closed: fixed)"&gt;#7415&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [10446]: Force the index only for 0 OR 1 queries. see #7415</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 26 Jan 2009 22:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10446/1233009290648558</guid>
      <description>&lt;p&gt;
Force the index only for 0 OR 1 queries. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7415" title="#7415: defect (bug): &amp;#34;using filesort&amp;#34; in default install (closed: fixed)"&gt;#7415&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [10445]: Switch to using the ID when calling get_avatar internally to support ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 26 Jan 2009 22:03:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10445/1233007420289713</guid>
      <description>&lt;p&gt;
Switch to using the ID when calling get_avatar internally to support caching plugins. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8940" title="#8940: defect (bug): Use ID instead of email for get_avatar() in user_row() - makes more ... (closed: fixed)"&gt;#8940&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8940 (Use ID instead of email for get_avatar() in user_row() - makes more ...) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 26 Jan 2009 22:03:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8940#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8940#comment:1/1233007420000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10445" title="Switch to using the ID when calling get_avatar internally to support ..."&gt;[10445]&lt;/a&gt;) Switch to using the ID when calling get_avatar internally to support caching plugins. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8940" title="#8940: defect (bug): Use ID instead of email for get_avatar() in user_row() - makes more ... (closed: fixed)"&gt;#8940&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8957 (100% CPU, unresponsive javascript when leaving admin "Edit Posts" and ...) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 26 Jan 2009 21:58:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8957#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8957#comment:17/1233007134000000</guid>
      <description>&lt;p&gt;
Why not try the new Live Event API in jQuery 1.3?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8967 (Calendar link title attributes do not pass XHTML validation if titles ...) created</title>
      
        <dc:creator>room34</dc:creator>

      <pubDate>Mon, 26 Jan 2009 21:39:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8967</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8967/1233005961000000</guid>
      <description>&lt;p&gt;
Title attributes in links generated by the get_calendar() function do not pass XHTML validation if the title contains HTML (for example, em tags for italicized words).
&lt;/p&gt;
&lt;p&gt;
Problem can be resolved by applying htmlentities() function to $ak_titles_for_day[$day] string on line 1072 (in WP 2.7) of general-template.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8957 (100% CPU, unresponsive javascript when leaving admin "Edit Posts" and ...) updated</title>
      
        <dc:creator>_timk</dc:creator>

      <pubDate>Mon, 26 Jan 2009 20:16:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8957#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8957#comment:16/1233000991000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8957#comment:14" title="Comment 14"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Don't see an easy fix or workaround for this. Perhaps can have categories added the same way as tags, by typing the name and using suggest. Could probably have the top 30 or 50 saved in the db as serialized list for fast loading and add a field that would use the suggest functionality for the rest. Could be a bit confusing for the user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not much of a hardcore javascript hacker, but perhaps a parent element could catch events bubbling up from the category checkboxes?  Then there would be just one handler to unbind when the page is unloaded.
&lt;/p&gt;
&lt;p&gt;
Thanks for considering this issue, BTW.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8181 (css-related bug found in media.php) updated</title>
      
        <dc:creator>LHLDevAdmin</dc:creator>

      <pubDate>Mon, 26 Jan 2009 20:01:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8181#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8181#comment:6/1233000097000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8181#comment:5" title="Comment 5"&gt;mrmist&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this not done by design?  I mean yes it does seem syntactically broken, but isn't that inline style stuff only pushed if a plugin has specifically overriden it?
&lt;/p&gt;
&lt;p&gt;
I guess it could all be punted to a dynamically-generaed stylesheet, though that might be really complicated to achieve.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure whether I'm reading sarcasm or frustration, so I'll assume the latter.
&lt;/p&gt;
&lt;p&gt;
I'm not sure of the technical definition of 'plugin,' by which you operate, but one would think the image gallery option within WordPress is part of the software.   Therefore, one should not present 3rd-party plugin excuses as arguments against doing something  correctly.  If I wanted software that selectively adheres to web-compliance standards, then I'd buy a Microsoft product.
&lt;/p&gt;
&lt;p&gt;
Undoubtedly, a dynamically-generated style sheet would be complicated to achieve, and I'm not suggesting you try it.  However, examples abound where master and theme-based style sheets working together successfully within the application.  In those examples (MS SharePoint comes to mind), the master style sheet is not dynamically generated; rather, they are deployed with the software and re-deployed with each software version update.
&lt;/p&gt;
&lt;p&gt;
With a master style sheet, which sets above the themes sub-directory within the site structure, you could include all styles associated with your plugin (meaning those deployed with the software).  This style sheet, like all other software-related files within WordPress, can be overwritten with each version update.
&lt;/p&gt;
&lt;p&gt;
As long as WordPress uses class tags to call the styles, I can (where needed) write code (at the theme level) to override the master styles.  Under the current deployment scenario, I'm forced either (a) to accept sloppy coding or (b) to modify the software after every WordPress update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8962 (get_shortcode_regex probrem) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Mon, 26 Jan 2009 19:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8962#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8962#comment:3/1232997362000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8966 (Cant install any addons) closed</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Mon, 26 Jan 2009 19:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8966#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8966#comment:3/1232997279000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8966 (Cant install any addons) updated</title>
      
        <dc:creator>bryan226</dc:creator>

      <pubDate>Mon, 26 Jan 2009 19:03:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8966#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8966#comment:2/1232996601000000</guid>
      <description>&lt;p&gt;
ahw reinstall worked thx.
&lt;/p&gt;
&lt;p&gt;
thanks,
&lt;/p&gt;
&lt;p&gt;
bryan
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8966 (Cant install any addons) updated</title>
      
        <dc:creator>bi0xid</dc:creator>

      <pubDate>Mon, 26 Jan 2009 15:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8966#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8966#comment:1/1232984854000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This line says it's trying to destroy stored credentials.
&lt;/p&gt;
&lt;p&gt;
It happened before? Have you reinstalled? Have you changed your hosting?
&lt;/p&gt;
&lt;p&gt;
It's strange. It's like php doesn't have permissions to do that. Have you tried reinstalling wp-admin?
&lt;/p&gt;
&lt;p&gt;
BTW, it appears it only happens to you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8966 (Cant install any addons) created</title>
      
        <dc:creator>bryan226</dc:creator>

      <pubDate>Mon, 26 Jan 2009 15:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8966/1232984141000000</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
every-time that I'm trying to install an addon for Wordpress I get this error:
&lt;/p&gt;
&lt;p&gt;
Fatal error: Cannot unset string offsets in /www/htdocs/w00967f9/main/wp-admin/includes/file.php on line 682
&lt;/p&gt;
&lt;p&gt;
help pllz&lt;sup&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;p&gt;
thanks,
&lt;/p&gt;
&lt;p&gt;
bryan
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8960 (Post edit form is missing enctype field) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 26 Jan 2009 14:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8960#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8960#comment:4/1232981225000000</guid>
      <description>&lt;p&gt;
Personally, I use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !function_exists('ob_multipart_entry_form') ) :
#
# ob_multipart_entry_form_callback()
#
function ob_multipart_entry_form_callback($buffer)
{
	$buffer = str_replace(
		'&amp;lt;form name="post"',
		'&amp;lt;form enctype="multipart/form-data" name="post"',
		$buffer
		);
	return $buffer;
} # ob_multipart_entry_form_callback()
#
# ob_multipart_entry_form()
#
function ob_multipart_entry_form()
{
	if ( $GLOBALS['editing'] )
	{
		ob_start('ob_multipart_entry_form_callback');
	}
} # ob_multipart_entry_form()
add_action('admin_head', 'ob_multipart_entry_form');
#
# add_file_max_size()
#
function add_file_max_size()
{
	$bytes = apply_filters( 'import_upload_size_limit', wp_max_upload_size() );
	echo  "\n" . '&amp;lt;input type="hidden" name="MAX_FILE_SIZE" value="' . $bytes .'" /&amp;gt;' . "\n";
}
add_action('edit_form_advanced', 'add_file_max_size');
add_action('edit_page_form', 'add_file_max_size');
endif;
&lt;/pre&gt;&lt;p&gt;
(that being said, I fully agree that this form tag should be pluginable.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8960 (Post edit form is missing enctype field) updated</title>
      
        <dc:creator>chrisnorthwood</dc:creator>

      <pubDate>Mon, 26 Jan 2009 14:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8960#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8960#comment:3/1232980976000000</guid>
      <description>&lt;p&gt;
Sorry if I'm being dumb, but I'm fairly new to plugin development - could you be more specific?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [10444]: Remove events from categories chechboxes in quick edit to speed up ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 14:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10444/1232979819082116</guid>
      <description>&lt;p&gt;
Remove events from categories chechboxes in quick edit to speed up page unload, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8957" title="#8957: defect (bug): 100% CPU, unresponsive javascript when leaving admin &amp;#34;Edit Posts&amp;#34; and ... (closed: fixed)"&gt;#8957&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8957 (100% CPU, unresponsive javascript when leaving admin "Edit Posts" and ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 14:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8957#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8957#comment:15/1232979819000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10444" title="Remove events from categories chechboxes in quick edit to speed up ..."&gt;[10444]&lt;/a&gt;) Remove events from categories chechboxes in quick edit to speed up page unload, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8957" title="#8957: defect (bug): 100% CPU, unresponsive javascript when leaving admin &amp;#34;Edit Posts&amp;#34; and ... (closed: fixed)"&gt;#8957&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8957 (100% CPU, unresponsive javascript when leaving admin "Edit Posts" and ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 14:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8957#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8957#comment:14/1232979581000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8957#comment:10" title="Comment 10"&gt;_timk&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... but the delay comes back if you use the Quick Edit function on the Edit Posts page, then navigate away.  I'd imagine events are being attached to the category checkboxes for something to do with the edit form, and then they have to be unbound on unload.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's right. When using quick edit there's a keydown event that would save the changes on pressing Enter. Will try removing it from the categories checkboxes. Also jQuery seem to keep all form elements in it's cache (can be seen in Firebug) and since each category has a checkbox, having thousands would slow it down considerably.
&lt;/p&gt;
&lt;p&gt;
Don't see an easy fix or workaround for this. Perhaps can have categories added the same way as tags, by typing the name and using suggest. Could probably have the top 30 or 50 saved in the db as serialized list for fast loading and add a field that would use the suggest functionality for the rest. Could be a bit confusing for the user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [10443]: Load the minified versions of the scripts by default, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 13:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10443</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10443/1232976284465205</guid>
      <description>&lt;p&gt;
Load the minified versions of the scripts by default, define('SCRIPT_DEBUG', true); can be used to load the development versions
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #8884,â€‹8628 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 12:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=8884%2C8628</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=8884%2C8628/1232974751000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10442" title="Improvements to the script loader: allows plugins to queue scripts for ..."&gt;[10442]&lt;/a&gt;) Improvements to the script loader: allows plugins to queue scripts for the front end head and footer, adds hooks for server side caching of compressed scripts, adds support for ENFORCE_GZIP constant (deflate is used by default since it's faster), see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8628" title="#8628: enhancement: Extend class WP_Scripts to support concatenating, compressing and ... (closed: fixed)"&gt;#8628&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8884" title="#8884: defect (bug): Bug In wp_enqueue_script() In Footer (closed: fixed)"&gt;#8884&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [10442]: Improvements to the script loader: allows plugins to queue scripts for ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 12:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10442</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10442/1232974750706550</guid>
      <description>&lt;p&gt;
Improvements to the script loader: allows plugins to queue scripts for the front end head and footer, adds hooks for server side caching of compressed scripts, adds support for ENFORCE_GZIP constant (deflate is used by default since it's faster), see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8628" title="#8628: enhancement: Extend class WP_Scripts to support concatenating, compressing and ... (closed: fixed)"&gt;#8628&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8884" title="#8884: defect (bug): Bug In wp_enqueue_script() In Footer (closed: fixed)"&gt;#8884&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [10441]: Fix non-critical bug in suggest.js and prepare it for minifying </title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 12:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10441/1232971767500389</guid>
      <description>&lt;p&gt;
Fix non-critical bug in suggest.js and prepare it for minifying
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:8/1232963712000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) closed</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:7/1232963269000000</guid>
      <description>wontfix: &lt;p&gt;
qTranslate appears to be the culprit.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [10440]: jQuery 1.3.1</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10440/1232962433465716</guid>
      <description>&lt;p&gt;
jQuery 1.3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:6/1232962156000000</guid>
      <description>&lt;p&gt;
Curiouser and curiouser...  When I stubbed in
&lt;/p&gt;
&lt;pre class="wiki"&gt;//debug
error_log('ruri:'.$_SERVER['REQUEST_URI']);
&lt;/pre&gt;&lt;p&gt;
the output was
&lt;/p&gt;
&lt;pre class="wiki"&gt;[26-Jan-2009 02:26:42] ruri:/&amp;amp;a=a%3D%2F
&lt;/pre&gt;&lt;p&gt;
So who's messing with mah superglobals?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:21:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:5/1232961705000000</guid>
      <description>&lt;p&gt;
Okay, I think that second line is a result of the "&lt;em&gt; protect against chained redirects".  Now I just need to figure out why the hell that trailing slash is being urlescaped when the client hits /&amp;amp;a=a%3D/
&lt;/em&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:4/1232961282000000</guid>
      <description>&lt;p&gt;
This is interesting.  I stubbed in a logging command directly above the line "&lt;em&gt; trailing slashes" in canonical.php.
&lt;/em&gt;&lt;/p&gt;
&lt;pre class="wiki"&gt;//debug
error_log('rpath:'.$redirect['path']);
	// trailing slashes
&lt;/pre&gt;&lt;p&gt;
It should write one line to the log for my eyes only.  But look at the output for a single hit to /&amp;amp;a=a=
&lt;/p&gt;
&lt;pre class="wiki"&gt;[26-Jan-2009 02:09:33] rpath:/&amp;amp;a=a%3D
[26-Jan-2009 02:09:33] rpath:/&amp;amp;a=a%3D/
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:3/1232960933000000</guid>
      <description>&lt;p&gt;
yes, yes, yes! this would be sooooo much better than needing to re-open each plugin file each time an extra field gets added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8963 (More languages in spellchecker) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8963#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8963#comment:2/1232960837000000</guid>
      <description>invalid: &lt;p&gt;
There's a setting in TinyMCE and a filter in WordPress &lt;code&gt;"mce_spellchecker_languages"&lt;/code&gt; to set which languages are displayed in the spellchecker button. The line you see in the plugin is the default. Of course the selected languages would also have to be supported by the back-end (GoogleSpell, PSpell, Aspell etc.).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8962 (get_shortcode_regex probrem) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8962#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8962#comment:2/1232960594000000</guid>
      <description>duplicate</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8960 (Post edit form is missing enctype field) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8960#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8960#comment:2/1232960466000000</guid>
      <description>&lt;p&gt;
You can use an output buffer to set it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) updated</title>
      
        <dc:creator>GamerZ</dc:creator>

      <pubDate>Mon, 26 Jan 2009 09:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:3/1232960435000000</guid>
      <description>&lt;p&gt;
I can't seem to reproduce this, my site loads fine with the query string
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8441 (New Widget API based on MultiWidget Class) updated</title>
      
        <dc:creator>GamerZ</dc:creator>

      <pubDate>Mon, 26 Jan 2009 08:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8441#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8441#comment:4/1232960262000000</guid>
      <description>&lt;p&gt;
Nice, hope this will make it into WP2.8
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8958 (Optimize rewrite rule generation) updated</title>
      
        <dc:creator>matthijs</dc:creator>

      <pubDate>Mon, 26 Jan 2009 07:39:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8958#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8958#comment:7/1232955592000000</guid>
      <description>&lt;p&gt;
So then the conclusion would be that not all attachments should get the status of 'inherit'? It seems like the current situation doesn't scale at all. I wouldn't call a website with a few hundred posts/attachments big.
&lt;/p&gt;
&lt;p&gt;
Or are there other solutions?
&lt;/p&gt;
&lt;p&gt;
Why is it necessary to have rewrite rules for all media files? Wouldn't it make more sense to just :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;upload media to folders
&lt;/li&gt;&lt;li&gt;link to them
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I thought the whole point of the htaccess rewrite rules in wordpress is "unless the file exists, channel the request through index".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 05:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:2/1232948439000000</guid>
      <description>&lt;pre class="wiki"&gt;http://blogyul.miqrogroove.com/&amp;amp;a=a=
http://blogyul.miqrogroove.com/&amp;amp;a=a%3D/
http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F/
http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F%2F/
http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F%2F%2F/
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 05:39:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965#comment:1/1232948377000000</guid>
      <description>&lt;p&gt;
Example Location header output
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://blogyul.miqrogroove.com/&amp;amp;a=a%3D/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://blogyul.miqrogroove.com/&amp;amp;a=a%3D/&lt;/a&gt;
&lt;a class="ext-link" href="http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F/&lt;/a&gt;
&lt;a class="ext-link" href="http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F%2F/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F%2F/&lt;/a&gt;
&lt;a class="ext-link" href="http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F%2F%2F/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://blogyul.miqrogroove.com/&amp;amp;a=a%3D%2F%2F%2F/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Mon, 26 Jan 2009 05:39:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:2/1232948355000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Another idea is that perhaps it would be best to only allow the plugin to specify the header, e.g. "New Plugin Header", and the array key for get_plugin_data would be auto-generated from that, e.g. &lt;code&gt;$plugin_data['NewPluginHeader]&lt;/code&gt;.  Might make it more difficult for two plugins using this from interfering with each other.  I'm not sure how this would best work though.  Perhaps the key should just be the unaltered Plugin header, e.g. &lt;code&gt;$plugin_data['New Plugin Header']&lt;/code&gt; ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8965 (Infinite Redirection in Bogus Namespace) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 26 Jan 2009 05:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8965/1232947576000000</guid>
      <description>&lt;p&gt;
On my WordPress blog, anyone who hits a path like /&amp;amp;a=a= will get locked into an infinite namespace.  :(
&lt;/p&gt;
&lt;p&gt;
On wordpress.com, what I get is, "If you're reading this, you should visit automattic.com/jobs and apply to join the fun, mention this header."  :o
&lt;/p&gt;
&lt;p&gt;
Should I attach my resume?  &lt;sup&gt;_&lt;/sup&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Mon, 26 Jan 2009 05:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:1/1232947340000000</guid>
      <description>&lt;p&gt;
Just a note:  I am aware of the similar patch at &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/4048"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://trac.wordpress.org/ticket/4048&lt;/a&gt; , but the protests against that one seem to mainly have been the potential to "hack" other plugin by changing their headers.  So again, this patch is explicitly designed to only allow you to add a new header to be returned, not to alter existing ones in any way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>get_plugin_data_filter.diff attached to Ticket #8964</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Mon, 26 Jan 2009 05:17:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8964/get_plugin_data_filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8964/get_plugin_data_filter.diff/1232947075000000</guid>
      <description>&lt;p&gt;
adds filter to get_plugin_data() so you can add new headers to search for
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) created</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Mon, 26 Jan 2009 05:16:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964/1232947018000000</guid>
      <description>&lt;p&gt;
It would be nice for plugin authors if we could add headers to what is searched for in get_plugin_data.  The attached patch integrates this as a straightforward filter.
&lt;/p&gt;
&lt;p&gt;
For example, an author might add a header that states the minimum WP version, or perhaps a URL for version checking.  With this filter he could just drop that info into an easily accessed plugin header instead of hard-coding it somewhere further down.  (Beyond simple location, this much simplifies certain processes, such as a plugin with which other plugins can make themselves compatible.)
&lt;/p&gt;
&lt;p&gt;
The attached patch modifies get_plugin_data().  Default output is identical to existing, but you can now do the following filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function filter_plugin_data_headers( $extra_params, $plugin_file ) {
	if ( __FILE__ == $plugin_file ) {
		$extra_params['NewHeader'] = 'New Plugin Header';
	}
	return $extra_params;
}
add_filter( 'plugin_data_headers', 'filter_plugin_data_headers', 10, 2 );
&lt;/pre&gt;&lt;p&gt;
In the above, the plugin could have:
&lt;/p&gt;
&lt;pre class="wiki"&gt;New Plugin Header: just testing
&lt;/pre&gt;&lt;p&gt;
and get_plugin_data() would return "just testing" as &lt;code&gt;$plugin_data['NewHeader']&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
NOTE: This is explicitly written so that a plugin can *not* overwrite existing standard headers.  That is, it is not possible to overwrite the Name, Description, etc. of another plugin, as that might pose the risk for mischief.  You can only use this to add a new header, which will be returned as part of the get_plugin_data array.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [10439]: Make the top and bottom comment actions dropdowns match ("Approve" was ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 26 Jan 2009 03:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10439/1232939671342288</guid>
      <description>&lt;p&gt;
Make the top and bottom comment actions dropdowns match ("Approve" was not appearing on bottom one). for 2.7
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [10438]: Make the top and bottom comment actions dropdowns match ("Approve" was ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 26 Jan 2009 03:14:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10438/1232939644693049</guid>
      <description>&lt;p&gt;
Make the top and bottom comment actions dropdowns match ("Approve" was not appearing on bottom one). for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8732 (Empty Alt Text in wp_get_attachment_image()) updated</title>
      
        <dc:creator>Sam_a</dc:creator>

      <pubDate>Mon, 26 Jan 2009 02:46:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8732#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8732#comment:9/1232937998000000</guid>
      <description>&lt;p&gt;
Updated patch &lt;em&gt;wp_get_attachment_image_alt.diff&lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Outputs double-quoted attributes &lt;code&gt;&amp;lt;img alt="" ... /&amp;gt;&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Moved filter hook documentation to function header
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_get_attachment_image_alt.diff attached to Ticket #8732</title>
      
        <dc:creator>Sam_a</dc:creator>

      <pubDate>Mon, 26 Jan 2009 02:41:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8732/wp_get_attachment_image_alt.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8732/wp_get_attachment_image_alt.diff/1232937678000000</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Adds ALT and TITLE attributes to img output; adds general filter hook for most attributes
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8737 (Button to Publish Posts Scheduled for Later Immediately) updated</title>
      
        <dc:creator>minusonebit</dc:creator>

      <pubDate>Mon, 26 Jan 2009 01:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8737#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8737#comment:5/1232932749000000</guid>
      <description>&lt;p&gt;
My ping list is ~15 sites and they all respond quickly. Who knows if that's it or not. You may be onto something, still poor implementation on WPs part if a slow ping site is enough to foil the entire process. It should be smart enough to time out and go to the next ping site on the list if a response is not forthcoming quick enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8737 (Button to Publish Posts Scheduled for Later Immediately) updated</title>
      
        <dc:creator>minusonebit</dc:creator>

      <pubDate>Mon, 26 Jan 2009 01:16:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8737#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8737#comment:4/1232932561000000</guid>
      <description>&lt;p&gt;
Does not look fixed in 8923 to me, it looks like they are still arguing about it. As I stated above, this feature request should be implemented regardless of if the bug is fixed now, later or never. There is no reason for posts scheduled for later publication to be trapped in that queue. The EU should always have an escape.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8946 (Redirection after commenting leads to an empty page [not confirmed]) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 26 Jan 2009 00:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8946#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8946#comment:1/1232929477000000</guid>
      <description>&lt;p&gt;
I've got something similar happening on my host..
&lt;/p&gt;
&lt;p&gt;
Not sure whats causing it, But for example, Paged comments at 100 (Never reaches that anyway), Upon posting ~40th items it redirects me to comment-page-2.. Even though the links on the main page point to page 1.. It could simply be that its not building the comment-tree correctly on the redirect links (cache problem maybe since the comments just been added?), But i'm not sure, I've been meaning to investigate it!
&lt;/p&gt;
&lt;p&gt;
I'll have to take a closer look at some point..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>