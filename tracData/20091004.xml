<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10903 (Plugin editor removes valid backslashes) created</title>
      
        <dc:creator>takayukister</dc:creator>

      <pubDate>Sun, 04 Oct 2009 20:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10903/1254687525000000</guid>
      <description>&lt;p&gt;
After updating a file in the "Plugins" &amp;gt; "Editor" menu, all backslashes in the source file disappear. For example, a "\n" will be replaced with just a "n" and newlines have no meaning. I tested this on the latest trunk revision 11995.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10902 (Display problem with exclude option in wp_list_pages) created</title>
      
        <dc:creator>toutantic</dc:creator>

      <pubDate>Sun, 04 Oct 2009 19:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10902/1254685538000000</guid>
      <description>&lt;p&gt;
Create pages A,B,C and D, A parent of B, B of C and C of D
&lt;/p&gt;
&lt;pre class="wiki"&gt;A
-B
--C
---D
&lt;/pre&gt;&lt;p&gt;
call in a template
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php wp_list_pages("exclude=6"); ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
(6 is the ID of page B)
&lt;/p&gt;
&lt;p&gt;
I get this display:
&lt;/p&gt;
&lt;pre class="wiki"&gt;* A
* C
* D
&lt;/pre&gt;&lt;p&gt;
when I expect:
&lt;/p&gt;
&lt;pre class="wiki"&gt;* A
* C
-* D
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10901 (wp.getPages gives different results if Blog pages show at most is ...) updated</title>
      
        <dc:creator>jb6262</dc:creator>

      <pubDate>Sun, 04 Oct 2009 18:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10901#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10901#comment:1/1254682190000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10901 (wp.getPages gives different results if Blog pages show at most is ...) created</title>
      
        <dc:creator>jb6262</dc:creator>

      <pubDate>Sun, 04 Oct 2009 18:49:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10901/1254682165000000</guid>
      <description>&lt;p&gt;
This comes up as a result of testing and working with the iPhone app.  The ticket on the iPhone app is here: &lt;a class="ext-link" href="https://iphone.trac.wordpress.org/ticket/162"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://iphone.trac.wordpress.org/ticket/162&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Briefly, output from the wp.getPages call appears to be different if the "Blog pages show at most" setting is changed to 1.  This was tested and verified on a bare-bones wordpress.com blog.
&lt;/p&gt;
&lt;p&gt;
In that case, the wp.getPages call appears to only return one page, regardless of the number of pages in the blog.
&lt;/p&gt;
&lt;p&gt;
For convenience, the last post in the iPhone app ticket is included below.  It includes a test to show this problem occuring outside of the iPhone app using an HTTP Client tool.
&lt;/p&gt;
&lt;p&gt;
========
&lt;/p&gt;
&lt;p&gt;
Resolving as "invalid" because the problem appears to be on the WP server itself. Naturally this should be added as a bug on the WP side, which I will do right after finishing this ticket.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce this proof...
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Change Settings&amp;gt;Reading&amp;gt;Blog pages show at most to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
2 Using an HTTP Client, submit a wp.getPages post to the blog's rpc endpoint thus. (Obviously you'll need to your username, password and blog id number)
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;Note that only one page comes back
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Change the setting on the Blog to 10 and try again
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="5"&gt;&lt;li&gt;Note that 10 pages now come back.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
==========
&lt;/p&gt;
&lt;p&gt;
To find this data for your blog(s), put the following line in XMLRPCEncoder.m : -encode just before the return statement at the end of the method. Put a breakpoint on that line, then compile the app, and delete and re-add your blog. Continue through the breakpoint several times (one for each different method call to the WP Server) and you will get the wp.getPages call on the 6th or 7th try.
&lt;/p&gt;
&lt;p&gt;
The NSLog line will output the XML being used to build the XMLRPC request... You can then use copy/paste that into an HTTP client tool to test.
&lt;/p&gt;
&lt;p&gt;
NSLog(@"buffer:: %@", buffer);
&lt;/p&gt;
&lt;p&gt;
Post XML:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;methodCall&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;methodName&amp;gt;wp.getPages&amp;lt;/methodName&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;params&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;string&amp;gt;YourBlogIDNumber&amp;lt;/string&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;string&amp;gt;YourUserName&amp;lt;/string&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;string&amp;gt;YourPassword&amp;lt;/string&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/params&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/methodCall&amp;gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>general-template.php.diff attached to Ticket #10900</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 04 Oct 2009 16:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10900/general-template.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10900/general-template.php.diff/1254672716000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10900 (Consistent filters for single_*_title()) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 04 Oct 2009 16:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10900</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10900/1254672675000000</guid>
      <description>&lt;p&gt;
In WP 2.9-rare, single_tag_title() doesn't have strip_tags() applied to it, while single_cat_title() and single_post_title() do.
&lt;/p&gt;
&lt;p&gt;
Additionally, single_post_title() also has wptexturize() applied.
&lt;/p&gt;
&lt;p&gt;
This should be fixed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>alanjohndix</dc:creator>

      <pubDate>Sun, 04 Oct 2009 14:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:39/1254665053000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I missed this thread and submitted a separate bug report with a patch &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/10490"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/ticket/10490&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The patch seems to cover all the cases discussed.
&lt;/p&gt;
&lt;p&gt;
A core problem is the back reference "\2" in the regular expression which which changes its meaning when used in a different context by wpautop.
&lt;/p&gt;
&lt;p&gt;
I also describe it in a short blog as I couldn't work out how to get some things to format in the comment box.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.alandix.com/blog/2009/07/26/fix-for-wordpress-shortcode-bug/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.alandix.com/blog/2009/07/26/fix-for-wordpress-shortcode-bug/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10899 (FTP password doesn't work if it contains an apostrophe) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 04 Oct 2009 12:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10899#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10899#comment:1/1254658193000000</guid>
      <description>duplicate: &lt;p&gt;
See: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11808" title="Strip slashes from POST data in request_filesystem_credentials(), ..."&gt;[11808]&lt;/a&gt; Strip slashes from POST data in request_filesystem_credentials(), props dd32, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10567" title="#10567: defect (bug): Automatic update FTP Username Bug (closed: fixed)"&gt;#10567&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10899 (FTP password doesn't work if it contains an apostrophe) created</title>
      
        <dc:creator>ChadCloman</dc:creator>

      <pubDate>Sun, 04 Oct 2009 11:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10899/1254657255000000</guid>
      <description>&lt;p&gt;
When automatically updating a plugin, I was asked for my FTP credentials. The FTP login always failed. I tried multiple times to get it to work, on multiple occasions.
&lt;/p&gt;
&lt;p&gt;
My password happened to include an apostrophe. I changed the password so that it no longer had the apostrophe. Then when I re-tried the FTP update, it worked.
&lt;/p&gt;
&lt;p&gt;
Note that it's not only the plugin update FTP that didn't work. There were other occasions where the WP admin pages asked for FTP credentials, and none of them worked with the apostrophe.
&lt;/p&gt;
&lt;p&gt;
I haven't looked through the code, but I'm assuming there's a generic input function that escapes special characters like apostrophes, and that this is why it didn't work.
&lt;/p&gt;
&lt;p&gt;
WordPress 2.8.4, Windows XP, Firefox 3.5.3
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10891 (Internal support for conditional scripts (same as existing conditional ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 04 Oct 2009 10:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10891#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10891#comment:1/1254651826000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 04 Oct 2009 09:24:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:13/1254648262000000</guid>
      <description>&lt;p&gt;
Yes, there are better ways to handle uploading (perhaps not as simple).
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10518#comment:11" title="Comment 11"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I ask, because I know for a fact that this doesn't:
...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;    jQuery(':text').attr('type', 'hidden');
&lt;/pre&gt;&lt;p&gt;
Yeah, there's no point in trying to set a text field to hidden and the otherway round with js. There's no real difference between &lt;code&gt;type="text" style="display: none"&lt;/code&gt; and &lt;code&gt;type="hidden"&lt;/code&gt; from form functionality point of view except that you can show/hide the text field later with js.
&lt;/p&gt;
&lt;p&gt;
As far as I can see changing the enctype with js works since it's checked when the form is submitted not when the page is loading.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6837 (New hook to replace the admin color scheme chooser in user-edit.php) updated</title>
      
        <dc:creator>Jick</dc:creator>

      <pubDate>Sun, 04 Oct 2009 09:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6837#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6837#comment:8/1254648207000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:12/1254646074000000</guid>
      <description>&lt;p&gt;
Adding to this I don't think this is a very desirable thing to do. As DD32 suggests, it'll be bait for plugin authors to not deal with uploads asynchronously.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:11/1254645995000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10518#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is very easy to change all forms to this at the moment too:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('admin_print_footer_scripts', 'my_form_type', 20);
function my_form_type(){ ?&amp;gt;
    jQuery('form').attr('enctype', 'multipart/form-data');
&amp;lt;?php
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
are you sure that works? I ask, because I know for a fact that this doesn't:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('admin_print_footer_scripts', 'my_form_type', 20);
function my_form_type() { ?&amp;gt;
    &amp;lt;script&amp;gt;
    jQuery(':text').attr('type', 'hidden');
    &amp;lt;/script&amp;gt;
&amp;lt;?php
}
&lt;/pre&gt;&lt;p&gt;
when you try it, Safari spits out an error along the lines of "Can't modify this attribute"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2699 (Make option_name index unique) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:43:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2699#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2699#comment:30/1254645794000000</guid>
      <description>&lt;p&gt;
UNIQUE autoloaded_options (autoload, option_name) makes sense, yeah.
&lt;/p&gt;
&lt;p&gt;
D.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10720 (pre_option_gmt_offset is never applied) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:07:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10720#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10720#comment:3/1254643635000000</guid>
      <description>&lt;p&gt;
Ohhh, meta programming. Excellent :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2699 (Make option_name index unique) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:05:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2699#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2699#comment:29/1254643518000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/2699#comment:27" title="Comment 27"&gt;johnjosephbachir&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the most common query on that table by far is this (found in functions.php around line 347):
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually I forgot about preloading autoloaded options (functions.php around line 423):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; option_name&lt;span class="p"&gt;,&lt;/span&gt; option_value &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;wpdb&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;options&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; autoload &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'yes'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, adding an index to cover that:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;option_id&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;UNIQUE&lt;/span&gt; option_name &lt;span class="p"&gt;(&lt;/span&gt;option_name&lt;span class="p"&gt;,&lt;/span&gt; option_value &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;UNIQUE&lt;/span&gt; autoloaded_options &lt;span class="p"&gt;(&lt;/span&gt;autoload&lt;span class="p"&gt;,&lt;/span&gt; option_name&lt;span class="p"&gt;,&lt;/span&gt; option_value &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Note that each of the indexes is needed to cover each of the mentioned queries, because the order of the columns is crucial.
&lt;/p&gt;
&lt;p&gt;
Actually, now I'm realizing that there isn't an index on autoload at all, which is kind of wild, because that means that query results in a tablescan on the options table. Since that table rarely gets big, MySQL's own on-the-fly optimizations must be sufficient (I certainly have never seen that query in a slow query log).
&lt;/p&gt;
&lt;p&gt;
Or maybe there aren't a lot of options with the autoload flag set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2699 (Make option_name index unique) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Sun, 04 Oct 2009 07:56:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2699#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2699#comment:28/1254642961000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2699 (Make option_name index unique) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Sun, 04 Oct 2009 07:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2699#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2699#comment:27/1254642954000000</guid>
      <description>&lt;p&gt;
Hey folks -- cool to see my ticket resurrected after 3 years :-)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/2699#comment:25" title="Comment 25"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some WPMU installs use InnoDB for the options table.  Having a varchar as the primary key isn't the best for InnoDB since it prefers small, sequential primary keys.  Should we make option_id primary and option_name unique?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's true -- it's a pretty bad idea to make an innodb primary key non-numeric or non-sequential, and here we are doing both.
&lt;/p&gt;
&lt;p&gt;
Having a primary key on option_id, and then a separate unique key covering whatever columns we like, will provide the same performance benefits, with a slight increase in disk space used by that table and its indexes (but maybe not compared to what we had before-- I'd have to think a little harder to be sure). At any rate, it's a good design.
&lt;/p&gt;
&lt;p&gt;
in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11883" title="Make option_name the primary key for the options table. Props ..."&gt;r11883&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;option_name&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;KEY&lt;/span&gt; option_id &lt;span class="p"&gt;(&lt;/span&gt;option_id&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Best for InnoDB (and probably best or equivalent in myisam as well:)
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;option_id&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;UNIQUE&lt;/span&gt; option_name &lt;span class="p"&gt;(&lt;/span&gt;option_name&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And while we're at it, having the unique key cover all of the columns in popular queries would allow for innodb to not have to go back to the primary data store to get the info, and only stay in the index, cutting down on a spindle access or two, per query.
&lt;/p&gt;
&lt;p&gt;
Because the most common query on that table by far is this (found in functions.php around line 347):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; option_value &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;wpdb&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;options&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; option_name &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'$setting'&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
We could get a big performance win with this index:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;option_id&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;UNIQUE&lt;/span&gt; option_name &lt;span class="p"&gt;(&lt;/span&gt;option_name&lt;span class="p"&gt;,&lt;/span&gt; option_value &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And that's what I recommend as the least obtrusive optimization. (assuming we do still want to enforce uniqueness of option_name at the DBMS layer-- otherwise just make it a straight &lt;code&gt;INDEX&lt;/code&gt;)
&lt;/p&gt;
&lt;p&gt;
Now, something to consider is that
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;option_id is currently a &lt;code&gt;bigint&lt;/code&gt;, which means it is 8 bytes. This restricts the number of rows in that table to (wait for itâ€¦) &lt;strong&gt;18,446,744,073,709,551,615&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;the bigger the column on which a primary key is made, the worse the performance (both for space and time complexity), &lt;em&gt;especially&lt;/em&gt; if it is bigger than 4 bytes (&lt;code&gt;int&lt;/code&gt;).
&lt;/li&gt;&lt;li&gt;so, assuming that we are okay with that table holding only the number of rows allowed by &lt;code&gt;int&lt;/code&gt; (4,294,967,295 -- yes, that's 4.3 billion), it would be beneficial to make option_id an &lt;code&gt;int&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
But-- that's the case with all the tables in the system that won't need to hold more than 4.2 billion entries. I can make a separate ticket for that if you guys think that's an idea that should be discussed further.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 04 Oct 2009 00:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:10/1254615616000000</guid>
      <description>&lt;p&gt;
It is very easy to change all forms to this at the moment too:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('admin_print_footer_scripts', 'my_form_type', 20);
function my_form_type(){ ?&amp;gt;
    jQuery('form').attr('enctype', 'multipart/form-data');
&amp;lt;?php
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 23:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:9/1254613604000000</guid>
      <description>&lt;p&gt;
Hm, That is true.. However, It should have minimal impact, It wouldn't affect autosaves.
&lt;/p&gt;
&lt;p&gt;
Perhaps a better option would just to add a action into the form tag so that plugins which absolutely need to add file uploaders to forms can do so?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 03 Oct 2009 23:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:8/1254613362000000</guid>
      <description>&lt;p&gt;
Adding that would switch the way form data is sent by the browser, it turns it into a multipart MIME data stream (similar to an email with attachments).
&lt;/p&gt;
&lt;p&gt;
From RFC2388 &lt;a class="ext-link" href="http://www.ietf.org/rfc/rfc2388.txt"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.ietf.org/rfc/rfc2388.txt&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;The multipart/form-data encoding has a high overhead and performance
impact if there are many fields with short values. However, in
practice, for the forms in use, for example, in HTML (in 1998), the average
overhead is not significant.
&lt;/pre&gt;&lt;p&gt;
Not sure now much that would affect WordPress but seems many of our forms have "many fields with short values".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10882 (Add default data to get_*_meta()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 03 Oct 2009 23:15:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10882#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10882#comment:8/1254611712000000</guid>
      <description>&lt;p&gt;
See:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wpdevel.wordpress.com/2009/09/26/image-editor/comment-page-1/#comment-3400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wpdevel.wordpress.com/2009/09/26/image-editor/comment-page-1/#comment-3400&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10898 (direct theme install error is not reported) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10898#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10898#comment:3/1254610568000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10898 (direct theme install error is not reported) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10898#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10898#comment:2/1254610560000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
In this case, the original failure turned out to be related to file ownership in the wp-admin directory. Regardless, the failure should yield a helpful error message so the sysadmin can fix it, not just pretend that nothing went wrong and move on to ftp as if that was the only way to install a theme
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only way to "fix" that is to change the way the server is setup and to use suPHP/SuExec, The first port of call is to write directly to the files &lt;em&gt;if it is safe to do so&lt;/em&gt;, If the files are owned by a different user than the current process (group settings are ignored for other reasons) then this method cannot be used, And WordPress switches to using the FTP methods.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it kept giving me a "failed to connect to ftp server" message and prompting me for ftp credentials
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then that means your FTP server was rejecting your login, It could be due to you selecting SSL when the server doesn't support SSL, or similar.. All WordPress knows is  your ftp server has said no. Can you check your server logs (If you've got access to them) to see why the server rejected your credentials? (Or if it even connected?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10895 (theme upload / delete fails due to update.php / themes.php ownerhip) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10895#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10895#comment:1/1254610359000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unfortunately both of those resources you've refered to do NOT make reference to the upgrade/install process.
&lt;/p&gt;
&lt;p&gt;
you should NOT have to change the ownership of the files, or the permission levels. WordPress does NOT access the files directly.
&lt;/p&gt;
&lt;p&gt;
WordPress uses FTP to modify the files (Unless WordPress is in a suPHP/SuExec environment, Or you've messed with ownership/permissions), It'd be much appreciated if you'd report the original error you came up against.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10898 (direct theme install error is not reported) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10898#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10898#comment:1/1254609787000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you please give an example of your install environment in order to duplicate the issue?
&lt;/p&gt;
&lt;p&gt;
ie. files were owned by apache:apache instead of user:user and caused XYZ to happen. On a server running Linux w/ ProFTPD and PHP 5.3
&lt;/p&gt;
&lt;p&gt;
Also, Does this differ from your other report &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10895" title="#10895: defect (bug): theme upload / delete fails due to update.php / themes.php ownerhip (closed: worksforme)"&gt;#10895&lt;/a&gt;, or is it likely these were down to the same issue on your end?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10898 (direct theme install error is not reported) created</title>
      
        <dc:creator>foresto</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:35:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10898</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10898/1254609352000000</guid>
      <description>&lt;p&gt;
I just spent a few hours banging my head against a wordpress 2.8.4 installation which was mysteriously failing to accept a theme upload through the web UI.  Instead of accepting the upload, it kept giving me a "failed to connect to ftp server" message and prompting me for ftp credentials.  This was odd, because other installations simply accepted my upload and installed it.
&lt;/p&gt;
&lt;p&gt;
After some experimentation, here's what seems to be going on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Wordpress tries accepting my theme file and installing it directly (from within the web server process).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;If that fails, Wordpress falls back to installing via ftp.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Problem: It never tells me the cause of the original failure, or even that there was a failure in the first place!
&lt;/p&gt;
&lt;p&gt;
In this case, the original failure turned out to be related to file ownership in the wp-admin directory.  Regardless, the failure should yield a helpful error message so the sysadmin can fix it, not just pretend that nothing went wrong and move on to ftp as if that was the only way to install a theme.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10897 (tag="rel" should not be used in the tag cloud, since those tags do not ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:58:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10897#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10897#comment:1/1254607131000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10897 (tag="rel" should not be used in the tag cloud, since those tags do not ...) created</title>
      
        <dc:creator>DanielStutzbach</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10897/1254606820000000</guid>
      <description>&lt;p&gt;
Links to tags tags that describe the current page can be marked with rel="tag", to give search engines an extra clue about what the current page is about.  The tags in the tag cloud should not be marked with rel="tag", since they do not necessarily describe the current page (effectively diluting the usefulness of the information).
&lt;/p&gt;
&lt;p&gt;
Quoting the HTML 5 spec:
&lt;a class="ext-link" href="http://www.w3.org/TR/html5/history.html#link-type-tag"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.w3.org/TR/html5/history.html#link-type-tag&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
"Since it indicates that the tag applies to the current document, it would be inappropriate to use this keyword in the markup of a tag cloud, which lists the popular tag across a set of pages"
&lt;/p&gt;
&lt;p&gt;
Also see the older microformat spec:
&lt;a class="ext-link" href="http://microformats.org/wiki/rel-tag"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://microformats.org/wiki/rel-tag&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Removing the rel="tag" from the tag cloud is a straightforward two-line change in wp_generate_tag_cloud() in category-template.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10896 (preg_replace with eval modifier used in _fix_attachment_links) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10896#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10896#comment:3/1254606363000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could you create a patch file for that.
&lt;/p&gt;
&lt;p&gt;
Instructions can be found from here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://markjaquith.wordpress.com/2005/11/02/my-wordpress-toolbox/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://markjaquith.wordpress.com/2005/11/02/my-wordpress-toolbox/&lt;/a&gt;
&lt;a class="ext-link" href="http://blog.ftwr.co.uk/archives/2005/11/03/windows-wordpress-toolbox/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://blog.ftwr.co.uk/archives/2005/11/03/windows-wordpress-toolbox/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10896 (preg_replace with eval modifier used in _fix_attachment_links) updated</title>
      
        <dc:creator>BenBE1987</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10896#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10896#comment:2/1254606119000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10896 (preg_replace with eval modifier used in _fix_attachment_links) updated</title>
      
        <dc:creator>BenBE1987</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:41:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10896#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10896#comment:1/1254606062000000</guid>
      <description>&lt;p&gt;
Patched locally for me as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;//
// Private
//
global $_fix_attachment_link_id;
function _fix_attachment_links_replaceCB($match) {
        global $_fix_attachment_link_id;
        return stripslashes( 'href='.$m[1] ).get_attachment_link( $_fix_attachment_link_id ).stripslashes( $m[1] );
}
/**
 * Replace hrefs of attachment anchors with up-to-date permalinks.
 *
 * @since unknown
 * @access private
 *
 * @param unknown_type $post_ID
 * @return unknown
 */
function _fix_attachment_links( $post_ID ) {
        global $_fix_attachment_link_id;
        $post = &amp;amp; get_post( $post_ID, ARRAY_A );
        $search = "#&amp;lt;a[^&amp;gt;]+rel=('|\")[^'\"]*attachment[^&amp;gt;]*&amp;gt;#ie";
        // See if we have any rel="attachment" links
        if ( 0 == preg_match_all( $search, $post['post_content'], $anchor_matches, PREG_PATTERN_ORDER ) )
                return;
        $i = 0;
        $search = "#[\s]+rel=(\"|')(.*?)wp-att-(\d+)\\1#i";
        foreach ( $anchor_matches[0] as $anchor ) {
                if ( 0 == preg_match( $search, $anchor, $id_matches ) )
                        continue;
                $id = (int) $id_matches[3];
                // While we have the attachment ID, let's adopt any orphans.
                $attachment = &amp;amp; get_post( $id, ARRAY_A );
                if ( ! empty( $attachment) &amp;amp;&amp;amp; ! is_object( get_post( $attachment['post_parent'] ) ) ) {
                        $attachment['post_parent'] = $post_ID;
                        // Escape data pulled from DB.
                        $attachment = add_magic_quotes( $attachment);
                        wp_update_post( $attachment);
                }
                $post_search[$i] = $anchor;
                $_fix_attachment_link_id = $id;
                $post_replace[$i] = preg_replace_callback( "#href=(\"|')[^'\"]*\\1#", '_fix_attachment_links_replaceCB', $anchor );
                ++$i;
        }
        $post['post_content'] = str_replace( $post_search, $post_replace, $post['post_content'] );
        // Escape data pulled from DB.
        $post = add_magic_quotes( $post);
        return wp_update_post( $post);
}
&lt;/pre&gt;&lt;p&gt;
Not sure if this fully works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10893 (get_site_option should activate the same filters as the mu version) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:40:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10893#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10893#comment:3/1254606032000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11995" title="Make the (add|get|update)_site_option functions run the same filters ..."&gt;[11995]&lt;/a&gt;) Make the (add|get|update)_site_option functions run the same filters in WP as they do in mu. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10893" title="#10893: defect (bug): get_site_option should activate the same filters as the mu version (closed: fixed)"&gt;#10893&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11995]: Make the (add|get|update)_site_option functions run the same filters ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11995/1254606027508377</guid>
      <description>&lt;p&gt;
Make the (add|get|update)_site_option functions run the same filters in WP as they do in mu. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10893" title="#10893: defect (bug): get_site_option should activate the same filters as the mu version (closed: fixed)"&gt;#10893&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8689 (WordPress must not use preg_replace with /e) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8689#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8689#comment:17/1254605343000000</guid>
      <description>&lt;p&gt;
I have created &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10896" title="#10896: defect (bug): preg_replace with eval modifier used in _fix_attachment_links (closed: fixed)"&gt;#10896&lt;/a&gt; to track this issue - patches welcome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10896 (preg_replace with eval modifier used in _fix_attachment_links) created</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:28:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10896</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10896/1254605321000000</guid>
      <description>&lt;p&gt;
Reported by BenBE1987 on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8689" title="#8689: defect (bug): WordPress must not use preg_replace with /e (closed: fixed)"&gt;#8689&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		$post_search[$i] = $anchor;
		$post_replace[$i] = preg_replace( "#href=(\"|')[^'\"]*\\1#e", "stripslashes( 'href=\\1' ).get_attachment_link( $id ).stripslashes( '\\1' )", $anchor );
		++$i;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8689 (WordPress must not use preg_replace with /e) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8689#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8689#comment:16/1254605147000000</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8689#comment:15" title="Comment 15"&gt;BenBE1987&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress 2.8.4 violates this again in /wp-admin/includes/post.php around line 6800 in function _fix_attachment_links().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please don't re-open tickets fixed in old releases but instead create a new ticket for the issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10893 (get_site_option should activate the same filters as the mu version) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 03 Oct 2009 19:21:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10893#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10893#comment:2/1254597691000000</guid>
      <description>&lt;p&gt;
Yes, thanks,
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10895 (theme upload / delete fails due to update.php / themes.php ownerhip) created</title>
      
        <dc:creator>foresto</dc:creator>

      <pubDate>Sat, 03 Oct 2009 19:00:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10895</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10895/1254596418000000</guid>
      <description>&lt;p&gt;
Wordpress 2.8.4 theme uploads through the admin UI are failing due to a file ownership issue, even when file ownership and permissions are set exactly as recommended in the Wordpress docs:
&lt;/p&gt;
&lt;p&gt;
"All files should be owned by your user account on your web server, and should be writable by your username. Any file that needs write access from WordPress should be group-owned by the user account used by the webserver."
"For core WordPress files, all should be writable only by your user account."
&lt;a class="ext-link" href="http://codex.wordpress.org/Changing_File_Permissions"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://codex.wordpress.org/Changing_File_Permissions&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/docs/en/handbook/2.7/#sysadmin.permissions"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/docs/en/handbook/2.7/#sysadmin.permissions&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I had the ownerships and permissions set exactly as recommended by the wordpress web site, yet uploading a theme still failed.  It also failed when I gave the wordpress/apache process full permissions on *every* file and directory in the whole installation.  It finally worked when I changed the ownership of "wp-admin/update.php" to be that of the apache user.  Mind you, wordpress already had full rights to that file; changing the ownership didn't give it any more abilities than it already had.
&lt;/p&gt;
&lt;p&gt;
It seems wordpress is arbitrarily failing because it thinks update.php should be owned by the apache user, even though that goes contrary to wordpress.org recommendations and standard unix security practices.
&lt;/p&gt;
&lt;p&gt;
There is a similar problem deleting a theme when "wp-admin/themes.php" is not owned by the apache user.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8400 (Plugin upgrade not possible without being script owner) updated</title>
      
        <dc:creator>foresto</dc:creator>

      <pubDate>Sat, 03 Oct 2009 18:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8400#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8400#comment:3/1254595200000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8689 (WordPress must not use preg_replace with /e) reopened</title>
      
        <dc:creator>BenBE1987</dc:creator>

      <pubDate>Sat, 03 Oct 2009 18:29:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8689#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8689#comment:15/1254594583000000</guid>
      <description>&lt;p&gt;
WordPress 2.8.4 violates this again in /wp-admin/includes/post.php around line 6800 in function _fix_attachment_links().
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>10886.2.diff attached to Ticket #10886</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:44:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10886/10886.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10886/10886.2.diff/1254591872000000</guid>
      <description>&lt;p&gt;
Adds $query_vars to the filter so that you can use that information to determine how you should return.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10889 (filesystem's put_content() methods have inconsistent arguments -- ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10889#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10889#comment:6/1254591774000000</guid>
      <description>&lt;p&gt;
this one needs a patch no matter what:
&lt;/p&gt;
&lt;p&gt;
Warning: ftp_chdir() expects exactly 2 parameters, 1 given in /home/yourau5c/public_html/wp-admin/includes/class-wp-filesystem-ftpext.php on line 137
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10894 (Categories are not working for me in wordpress 2.8.4) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10894#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10894#comment:1/1254591362000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
did you disable all plugins and switch to the default theme?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:27:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:12/1254590841000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10886#comment:11" title="Comment 11"&gt;sivel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry, I should have also stated that this is the result when running the filter using a plugin or in a themes functions.php without context to what is actually being called/loaded.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think if someone does this in a theme/plugin without checking the context then they deserve to be eaten by those dragons :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10892 (msql query fails when running set names utf8) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10892#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10892#comment:1/1254590755000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This code already does return 0 rows affected in this case.
&lt;/p&gt;
&lt;p&gt;
I cannot reproduce your bug can you provide more information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:11/1254590711000000</guid>
      <description>&lt;p&gt;
Sorry, I should have also stated that this is the result when running the filter using a plugin or in a themes functions.php without context to what is actually being called/loaded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:10/1254590339000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch as it stands now causes the admin to say there are the correct number of posts/pages/attachments but "hides" them from view in the edit lists.  I'm not saying this is bad or good.  Just wondering what everyone else has to say about it.  Should it be up to the developer to make sure they only filter for the front end by checking if is_admin() is true?  Or do we want to assume that we always want to be able to see this in the admin?  Or should we add a second filter for the admin?  So we would have run_wp_main_front and run_wp_main_admin or something like that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10893 (get_site_option should activate the same filters as the mu version) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:18:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10893#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10893#comment:1/1254590312000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
How is that?
&lt;/p&gt;
&lt;p&gt;
Does this give you the same behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>site-option-mu-filters.diff attached to Ticket #10893</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:17:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10893/site-option-mu-filters.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10893/site-option-mu-filters.diff/1254590278000000</guid>
      <description>&lt;p&gt;
Patch for the filters
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10894 (Categories are not working for me in wordpress 2.8.4) created</title>
      
        <dc:creator>jamesserver</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:13:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10894</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10894/1254590000000000</guid>
      <description>&lt;p&gt;
Categories can be created and are added to the database, but they do not show up under the admin section and cannot be edited. I have this issue with an IIS and apache webserver, both of which are using the same SQL database. I have a 2.8.3 install of wordpress that is not having this issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:42:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:9/1254573760000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10886#comment:8" title="Comment 8"&gt;sivel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd like to have the filter pass $query_vars also so that the $query_vars could be used as a way to determine if you should return false or not.  I don't have a current use for this, but I see a possibility of it being helpful.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
That sounds very sensible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10893 (get_site_option should activate the same filters as the mu version) created</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:34:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10893</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10893/1254573241000000</guid>
      <description>&lt;p&gt;
No much point in having the same function names if they behave differently.
&lt;/p&gt;
&lt;p&gt;
Namely, call the pre_site_option_${key} filter before getting the option and site_option_${key} to filter the return value.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:31:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:7/1254573117000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm supportive of this, Pretty sure it has no negitive side effects, but has the benefit of allowing easier file uploads from within meta boxes among others..
&lt;/p&gt;
&lt;p&gt;
The only downside is letting some plugin authors mearly rely upon a form post to upload their items, instead of allowing it to happen asynchronously.
&lt;/p&gt;
&lt;p&gt;
Currently some plugins are using iframes as a way around this..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:25:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:6/1254572700000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't want to learn how to mess with SVN and generate patches, please shot me ;).
&lt;/p&gt;
&lt;p&gt;
All I'm asking is that in every place there is a form it will have an enctype='multipart/form-data' attribute. Yes for all of the tens of places in the code, but having that for the post and page editing forms and tag and category editing will be nice enough for a start.
&lt;/p&gt;
&lt;p&gt;
This is a zero risk change even if you misspell it .... Hope that my request is better explained now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10727.3.patch attached to Ticket #10727</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10727/10727.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10727/10727.3.patch/1254572639000000</guid>
      <description>&lt;p&gt;
Updated for compability reasons
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10727 (Update phpass to version 0.2 (check /dev/urandom before accessing it)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:17:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10727#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10727#comment:8/1254572245000000</guid>
      <description>&lt;p&gt;
Yeah I read that as well in the manual. I will update the patch and propose the changes upstream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10727 (Update phpass to version 0.2 (check /dev/urandom before accessing it)) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10727#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10727#comment:7/1254571686000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
$this-&amp;gt;random_state = microtime() . (function_exists('getmypid') ? getmypid() : &lt;em&gt;) . uniqid(rand(), TRUE);
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMO, the usage of getmypid() should be removed entirely, Its not a reliable source of crypto-safe random data.. This is due to Process ID's having weak entropy..
&lt;/p&gt;
&lt;p&gt;
To quote the PHP Manual even: "Process IDs are not unique, thus they are a weak entropy source. We recommend against relying on pids in security-dependent contexts."
&lt;/p&gt;
&lt;p&gt;
I'd support removal of the getmypid() branch all together, and rely upon uniqid(rand(), TRUE) instead, as its going to be actually random.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 11:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:8/1254571100000000</guid>
      <description>&lt;p&gt;
I'd like to have the filter pass $query_vars also so that the $query_vars could be used as a way to determine if you should return false or not.  I don't have a current use for this, but I see a possibility of it being helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10727 (Update phpass to version 0.2 (check /dev/urandom before accessing it)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 03 Oct 2009 11:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10727#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10727#comment:6/1254570205000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10892 (msql query fails when running set names utf8) created</title>
      
        <dc:creator>digininja</dc:creator>

      <pubDate>Sat, 03 Oct 2009 10:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10892/1254565752000000</guid>
      <description>&lt;p&gt;
There is code on line 367 of wordpress/wp-includes/wp-db.php which does a db query of SET NAMES 'utf8'. The code in query can't handle this correctly as it expects it to return a number of rows which it doesn't so the line
&lt;/p&gt;
&lt;p&gt;
while ($i &amp;lt; @mysql_num_fields($this-&amp;gt;result)) {
&lt;/p&gt;
&lt;p&gt;
in the query function fails.
&lt;/p&gt;
&lt;p&gt;
The easy fix for this is to add
&lt;/p&gt;
&lt;p&gt;
} elseif ( preg_match("/&lt;sup&gt;&lt;br /&gt;s*(set) /i",$query) ) {
&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return 0;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
as part of the if statement around line 700.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10784 (Press This fixes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 03 Oct 2009 07:14:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10784#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10784#comment:7/1254554088000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11994" title="Press This fixes, props noel, see #10784"&gt;[11994]&lt;/a&gt;) Press This fixes, props noel, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10784" title="#10784: task (blessed): Press This fixes (closed: fixed)"&gt;#10784&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11994]: Press This fixes, props noel, see #10784</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 03 Oct 2009 07:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11994/1254554084028684</guid>
      <description>&lt;p&gt;
Press This fixes, props noel, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10784" title="#10784: task (blessed): Press This fixes (closed: fixed)"&gt;#10784&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>press-this-10-3-09.patch attached to Ticket #10784</title>
      
        <dc:creator>noel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 07:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10784/press-this-10-3-09.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10784/press-this-10-3-09.patch/1254553602000000</guid>
      <description>&lt;p&gt;
Fixes some image url scrapping issues, removes redundant post tags label
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 04:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:5/1254544536000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
then the GUID for a particular post/object is no longer a globally unique as it remains present on the original site A.com (assuming the post/object isn't deleted).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're thinking in terms of URL's.
&lt;/p&gt;
&lt;p&gt;
The URL is not unique, But the content contained within IS unique, a post on Possums is a post on possums no matter if its on Site A or site B, as long as the content remains constant. Editing the content should be regarded the same, Its not a new document, Its the same document, however, edited.
&lt;/p&gt;
&lt;p&gt;
Exporting from SiteA to SiteB and retaining SiteA would not really be a valid use-case in my opinion for pro-guid change, as the content should not exist in multipl locations.. one should redirect to the other.
&lt;/p&gt;
&lt;p&gt;
the only real time i can think of that changing the guid should be acceptable, would be moving from private-access site to a public-access site (ie. localhost  or dev.site to site.com), That can be done by manually modifying the export however if its wanted.. (find/replace in your favourite file editor)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 03 Oct 2009 04:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:4/1254543924000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10857#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A Guid is a "Globally Unique ID", Which shouldn't change when the location of the content has changed. As such, Moving between servers shouldnt change the GUID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is an interesting issue. If content is exported from A.com and imported into B.com and the GUIDs are unaltered, then the GUID for a particular post/object is no longer a globally unique as it remains present on the original site A.com (assuming the post/object isn't deleted).
&lt;/p&gt;
&lt;p&gt;
If each GUID was changed to reflect the fact the content was now on B.com (as this ticket originally suggested) then the GUIDs would remain globally unique.
&lt;/p&gt;
&lt;p&gt;
I think the OP might have a point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>script-conditionals.diff attached to Ticket #10891</title>
      
        <dc:creator>jdub</dc:creator>

      <pubDate>Sat, 03 Oct 2009 02:18:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10891/script-conditionals.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10891/script-conditionals.diff/1254536283000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10891 (Internal support for conditional scripts (same as existing conditional ...) created</title>
      
        <dc:creator>jdub</dc:creator>

      <pubDate>Sat, 03 Oct 2009 02:17:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10891</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10891/1254536274000000</guid>
      <description>&lt;p&gt;
Although it's not exposed through the wp_enqueue_style API, you can add a conditional to the queued style (by twiddling $wp_styles) and WP_Styles::do_item will do the right thing. This is used within core to provide CSS to poopy browsers ("lt IE 7").
&lt;/p&gt;
&lt;p&gt;
This patch adds similar internal-only support for script conditionals to WP_Scripts::do_item.
&lt;/p&gt;
&lt;p&gt;
It might be nice to expose this in the wp_enqueue_* API at some point, but for now this will do. :-)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10885 (Custom post types show up in search) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 01:09:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10885#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10885#comment:8/1254532195000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Patch adds get_post_types().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looks good to me :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should it return a list of post type names or objects?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Originally i thought Objects, But, The function name really suggests it merely returns an array of matching post_types.. But thats just my 2c.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>