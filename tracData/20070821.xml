<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #4794 (xml-rpc should identify encoding) created</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Tue, 21 Aug 2007 21:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4794</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4794/1187731037000000</guid>
      <description>&lt;p&gt;
WordPress provides users with a preference to identify the text encoding of the blog's content. But this encoding format is not used to identify the content expectations for (most) XML documents generated by xmlrpc.php.
&lt;/p&gt;
&lt;p&gt;
Notice that when RSD support was added, the developer who wrote that code *did* include the blog's encoding in the document header. But for all other XML documents generated (i.e. replies to XML-RPC queries, the encoding is omitted.
&lt;/p&gt;
&lt;p&gt;
When the encoding is omitted, as I understand it, the presumed encoding is UTF8. In my limited experience with customers running non-UTF8 blogs, they tend to use ISO-8859-1 encoding. When they use this encoding and also take advantage of some of the accented characters in that set, such as 0xE9 or 0xc9, the resulting document is illegal XML because it contains characters that are not part of the presumed UTF8 set.
&lt;/p&gt;
&lt;p&gt;
This failure to identify properly the encoding of XML documents can lead blog clients to fail to parse the XML, and therefore cause the XML-RPC to more or less completely fail for a certain class of users.
&lt;/p&gt;
&lt;p&gt;
I propose that xmlrpc.php be modified such that every XML document it generates for the purposes of exposing blog content, be identified as being of the encoding specified by the user in Options -&amp;gt; Reading.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4793 (Setting the headers manually can break mail encoding in pluggable.php) updated</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Tue, 21 Aug 2007 21:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4793#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4793#comment:3/1187730033000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
-1 to the "attached" patch as is, because it kills the "wp_mail_from" filter.
&lt;/p&gt;
&lt;p&gt;
And I agree with westi that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4296" title="#4296: defect (bug): wp_mail removes the Content-Type (closed: fixed)"&gt;#4296&lt;/a&gt; relates, so I think backporting those changes from trunk to 2.2.x is a better solution, if we want to fix this in the 2.2.x branch as well. I've attached a patch with those changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>4793.diff attached to Ticket #4793</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4793/4793.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4793/4793.diff/1187729638000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4788 (wp_loginout() / ampersand in URL) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:47:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4788#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4788#comment:4/1187729223000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Try looking for bare &lt;code&gt;&amp;amp;&lt;/code&gt; within &lt;code&gt;&amp;lt;a href="[here]"&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4788 (wp_loginout() / ampersand in URL) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4788#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4788#comment:3/1187729058000000</guid>
      <description>&lt;p&gt;
tmountjr, &lt;code&gt;&amp;amp;&lt;/code&gt; should only be converted to &lt;code&gt;&amp;amp;amp;&lt;/code&gt; in XHTML contexts.  Redirects cannot accept &lt;code&gt;&amp;amp;amp;&lt;/code&gt; and neither can querystring-accepting WP functions.
&lt;/p&gt;
&lt;p&gt;
So, this needs to be fixed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;_e('&amp;lt;a href="foo.php?test=blah&amp;amp;foo=bar"&amp;gt;foo&amp;lt;/a&amp;gt;');
&lt;/pre&gt;&lt;p&gt;
But not this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_redirect('http://foo.com/?test=foo&amp;amp;bar=foo');
&lt;/pre&gt;&lt;p&gt;
And not this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts('foo=bar&amp;amp;bar=foo');
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4735 (OK/Cancel dialogs should have choices specific to the situation) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4735#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4735#comment:12/1187728962000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4735#comment:11" title="Comment 11"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Westi, you're confusing two different things.  This ticket is talking about modal JS "OK/Cancel" dialogs, not the "Yes/No" HTML dialog you get when you omit a nonce where one is required.
&lt;/p&gt;
&lt;p&gt;
JS AYS is &lt;strong&gt;not&lt;/strong&gt; a security measure.  Nonces are the security measure, and those remain regardless of JS AYS.  JS AYS only serves as an errant click prevention device.  "Undo" functionality can completely replace JS AYS dialogs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
OK.
&lt;/p&gt;
&lt;p&gt;
I guess lack of sleep at the time of my comment got me a little confused :-&amp;gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4793 (Setting the headers manually can break mail encoding in pluggable.php) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:41:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4793#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4793#comment:2/1187728870000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Setting version based on debian bug report
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4793 (Setting the headers manually can break mail encoding in pluggable.php) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4793#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4793#comment:1/1187728850000000</guid>
      <description>&lt;p&gt;
As far as I can tell this is fixed on trunk.
&lt;/p&gt;
&lt;p&gt;
I believe &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4296" title="#4296: defect (bug): wp_mail removes the Content-Type (closed: fixed)"&gt;#4296&lt;/a&gt; relates
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4735 (OK/Cancel dialogs should have choices specific to the situation) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4735#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4735#comment:11/1187728645000000</guid>
      <description>&lt;p&gt;
Westi, you're confusing two different things.  This ticket is talking about modal JS "OK/Cancel" dialogs, not the "Yes/No" HTML dialog you get when you omit a nonce where one is required.
&lt;/p&gt;
&lt;p&gt;
JS AYS is &lt;strong&gt;not&lt;/strong&gt; a security measure.  Nonces are the security measure, and those remain regardless of JS AYS.  JS AYS only serves as an errant click prevention device.  "Undo" functionality can completely replace JS AYS dialogs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4793 (Setting the headers manually can break mail encoding in pluggable.php) created</title>
      
        <dc:creator>hendry</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4793</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4793/1187728406000000</guid>
      <description>&lt;p&gt;
I have a user who says that the way pluggable.php is currently manually crafting the the mail headers can break for his setup.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=436872"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=436872&lt;/a&gt;
&lt;a class="ext-link" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=5;filename=wordpress.mail.patch;att=1;bug=436872"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=5;filename=wordpress.mail.patch;att=1;bug=436872&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4781 (update_option destroys value / faulty trim) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4781#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4781#comment:2/1187728170000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is likely legacy code.  I have no problem axing it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4792 (the_search_query needs a way to return instead of echo the search query) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 20:28:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4792#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4792#comment:1/1187728087000000</guid>
      <description>&lt;p&gt;
We usually do separate functions for get and display.  get_the_search_query().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>search-query.diff attached to Ticket #4792</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Tue, 21 Aug 2007 19:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4792/search-query.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4792/search-query.diff/1187725537000000</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4792 (the_search_query needs a way to return instead of echo the search query) created</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Tue, 21 Aug 2007 19:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4792</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4792/1187725503000000</guid>
      <description>&lt;p&gt;
summary says it all.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4318 (wp-mail.php not functioning) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Tue, 21 Aug 2007 19:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4318#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4318#comment:10/1187725458000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4318#comment:9" title="Comment 9"&gt;dmd&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's absolutely no reason why this patch can't be applied for 2.2.3.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
dmd, the milestone process isn't formalized well. Often things get committed to trunk, tested, and then committed to the maintenance branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [5912]: Some tag api additions from andy.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5912/1187721585526725</guid>
      <description>&lt;p&gt;
Some tag api additions from andy.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4318 (wp-mail.php not functioning) updated</title>
      
        <dc:creator>dmd</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4318#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4318#comment:9/1187721485000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There's absolutely no reason why this patch can't be applied for 2.2.3.
&lt;/p&gt;
&lt;p&gt;
1) This is core functionality which used to work, and got broken.
&lt;/p&gt;
&lt;p&gt;
2) The patch changes only one file, wp-mail.php - a file which currently has NO functionality due to this defect.
&lt;/p&gt;
&lt;p&gt;
3) wp-mail.php is used by no part of wordpress other than this functionality. The only possible effect of applying this patch is a change to this functionality - either it will start working again, or it won't. It can't break anything else.
&lt;/p&gt;
&lt;p&gt;
4) It does, in fact, cause wp-mail to start working again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4694 (Comments RSS2 needs a hook to add extra channel data) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4694#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4694#comment:4/1187721160000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5911" title="commentsrss2_head action from joostdevalk. fixes #4694"&gt;[5911]&lt;/a&gt;) commentsrss2_head action from joostdevalk. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4694" title="#4694: enhancement: Comments RSS2 needs a hook to add extra channel data (closed: fixed)"&gt;#4694&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [5911]: commentsrss2_head action from joostdevalk. fixes #4694</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5911/1187721159844381</guid>
      <description>&lt;p&gt;
commentsrss2_head action from joostdevalk. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4694" title="#4694: enhancement: Comments RSS2 needs a hook to add extra channel data (closed: fixed)"&gt;#4694&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4654 (permalink_single_rss needs a filter) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4654#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4654#comment:12/1187720866000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5910" title="Deprecate permalink_single_rss().  Add the_permalink_rss() with ..."&gt;[5910]&lt;/a&gt;) Deprecate permalink_single_rss().  Add the_permalink_rss() with accompanying filter. Props joostdevalk and Otto42. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4654" title="#4654: defect (bug): permalink_single_rss needs a filter (closed: fixed)"&gt;#4654&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [5910]: Deprecate permalink_single_rss().  Add the_permalink_rss() with ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:27:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5910/1187720865954424</guid>
      <description>&lt;p&gt;
Deprecate permalink_single_rss().  Add the_permalink_rss() with accompanying filter. Props joostdevalk and Otto42. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4654" title="#4654: defect (bug): permalink_single_rss needs a filter (closed: fixed)"&gt;#4654&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4788 (wp_loginout() / ampersand in URL) updated</title>
      
        <dc:creator>tmountjr</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:26:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4788#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4788#comment:2/1187720785000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4791 (Remove dead code from widgets) created</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4791</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4791/1187720393000000</guid>
      <description>&lt;p&gt;
Patch removes a conditional statement that can never be true:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( $wp_db_version &amp;lt; 3582 ) {&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3807 (Admin Functions Denying Access with "You don't have permission to do that") updated</title>
      
        <dc:creator>basvd</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:19:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3807#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3807#comment:10/1187720347000000</guid>
      <description>&lt;p&gt;
The fix is now available &lt;a class="ext-link" href="http://sparepencil.com/code/ajax-referer-fix/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;as a plugin&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4790 (Tracback should 301 redirect instead of 302) updated</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:15:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4790#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4790#comment:1/1187720119000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The commit bit was a bit too early perhaps :P
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>trackback-redirect.diff attached to Ticket #4790</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:12:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4790/trackback-redirect.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4790/trackback-redirect.diff/1187719942000000</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4790 (Tracback should 301 redirect instead of 302) created</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:12:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4790</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4790/1187719929000000</guid>
      <description>&lt;p&gt;
If someone opens a trackback url without actually sending a trackback, he is redirected to the original post. That redirect is a 302 redirect. This causes all kinds of issues as links to the trackback URL are included in many themes by default, search engines follow these links and search engines can't really handle the 302 redirect well.
&lt;/p&gt;
&lt;p&gt;
Since opening a trackback URL with a normal browser is never meant to give you anything, it's quite safe to make the 302 into a 301 redirect.
&lt;/p&gt;
&lt;p&gt;
I have tested this fix and have found it to work perfectly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4048 (some hooks for the plugin management system) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Tue, 21 Aug 2007 18:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4048#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4048#comment:1/1187719884000000</guid>
      <description>&lt;p&gt;
before_activate_$plugin.action.diff, have you tested this to make sure it works?
&lt;/p&gt;
&lt;p&gt;
It appears as if you are depending on register globals or globals for the $can_activate.
&lt;/p&gt;
&lt;p&gt;
My guess is that it should be a filter
&lt;/p&gt;
&lt;pre class="wiki"&gt;$can_activate = apply_filters('before_activate'.$plugin, true);
&lt;/pre&gt;&lt;p&gt;
This would be most useful for checking dependencies before the fact. Would have been quite useful in some previous projects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tags-patch.diff attached to Ticket #4736</title>
      
        <dc:creator>bloertscher</dc:creator>

      <pubDate>Tue, 21 Aug 2007 16:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4736/tags-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4736/tags-patch.diff/1187713669000000</guid>
      <description>&lt;p&gt;
This patch adds all of the functions that are currently in the plugin.  It is a good start as there are probably other functions that should also be created.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3824 (Transition the Admin Area over to using jQuery) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 21 Aug 2007 16:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3824#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3824#comment:26/1187712710000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3824 (Transition the Admin Area over to using jQuery) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 21 Aug 2007 16:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3824#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3824#comment:25/1187712694000000</guid>
      <description>&lt;p&gt;
I've added a patch, jquery_admin_widgets.diff, which converts the admin widgets area to jQuery.
&lt;/p&gt;
&lt;p&gt;
There were a couple of places in the old code where Javascript was doing the work of CSS (basically just clearing some floats), so I took that out and used CSS instead.
&lt;/p&gt;
&lt;p&gt;
Also in the old code was some dead code in which someone had apparently thought about making the dropzone lists all expand equally, but then didn't implement it (a line in resetDroppableHeights() gets the greatest number of widgets that any dropzone has, but never uses that info).  I went ahead and made the dropzones expand equally vertically, because 1) someone seemingly meant to do this before and didn't 2) it looks better 3) under the old system if you had a really tall dropzone and a short dropzone, you had to go through shenanigans to drag a widget from the palette to the short dropzone.
&lt;/p&gt;
&lt;p&gt;
I've tested it successfully with the following browsers:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Firefox 2.0.0.6 in Windows and Linux&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
IE 6 &amp;amp; IE 7&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Safari 3.0.3 for Windows&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Opera 9.23 for Windows&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Konqueror 3.5.6&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>jquery_admin_widgets.diff attached to Ticket #3824</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 21 Aug 2007 15:54:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3824/jquery_admin_widgets.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3824/jquery_admin_widgets.diff/1187711670000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) updated</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Tue, 21 Aug 2007 15:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784#comment:8/1187711569000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4784#comment:6" title="Comment 6"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Double quotes are required in XHTML Strict, while Transitional allows either single or double quotes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you point me to a place where that's specified?
&lt;/p&gt;
&lt;p&gt;
I've searched the specs, but as far as I can tell XML (and XHTML) allow both ' and " to encapsulate attribute values. Also, my personal blog is XHTML 1.0 Strict according to the W3 validator and it uses ' for some attribute encapsulation.
&lt;/p&gt;
&lt;p&gt;
Personally I favor readable PHP sourcecode over consistent HTML. Both are machine-readable formats which aren't meant to really be read by humans anyway, but it's the PHP code I have to read and edit as a developer.
&lt;/p&gt;
&lt;p&gt;
I'd opt for a wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4789 (Write Post title doesn't escape HTML tags) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Tue, 21 Aug 2007 15:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4789#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4789#comment:1/1187710060000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Fix&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
"Curse of the &lt;code&gt;&amp;amp;lt;&lt;/code&gt;p&lt;code&gt;&amp;amp;gt;&lt;/code&gt;"
&lt;/p&gt;
&lt;p&gt;
Perhaps a setting, where it allows you to place HTML in the title if you want and escape it if you don't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4786 (Recent Entries widget caches Private Post titles) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Tue, 21 Aug 2007 15:21:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4786#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4786#comment:1/1187709686000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Tue, 21 Aug 2007 15:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784#comment:7/1187708699000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4784#comment:2" title="Comment 2"&gt;DD32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but what is with the space ("tab"?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To indent the &amp;lt;meta&amp;gt; tag in the &amp;lt;head&amp;gt; to the same level as the rest of the Meta tags. (To "beutify" it)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well then is a bit tricky b/c that is theme to theme whether they are indented. The default is not, but many are.
&lt;/p&gt;
&lt;p&gt;
Aside, a tab in that context you would want to put \t .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4767 (Autosave causes spurious entries in Audit Trail plugin) closed</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Tue, 21 Aug 2007 14:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4767#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4767#comment:2/1187707700000000</guid>
      <description>invalid: &lt;p&gt;
Closing as invalid, as John Godley "urbangiraffe.com" author of audit-trail was able to work around this without any changes to core.
&lt;/p&gt;
&lt;p&gt;
"I changed the plugin not to take note of saves that are happening when DOING_AJAX is set.  This should take care of the spurious entries.  The latest version is now 1.0.5, available from &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://&lt;/a&gt;
urbangiraffe.com/plugins/audit-trail/ "
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4789 (Write Post title doesn't escape HTML tags) created</title>
      
        <dc:creator>hje1555</dc:creator>

      <pubDate>Tue, 21 Aug 2007 14:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4789</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4789/1187706030000000</guid>
      <description>&lt;p&gt;
I was writing a new post and I used the title "Curse of the &amp;lt;p&amp;gt;". When saving the post, it appears under Your Drafts but the &amp;lt;p&amp;gt; has not been escaped, so the browser renders a line break.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3807 (Admin Functions Denying Access with "You don't have permission to do that") updated</title>
      
        <dc:creator>basvd</dc:creator>

      <pubDate>Tue, 21 Aug 2007 14:19:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3807#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3807#comment:9/1187705997000000</guid>
      <description>&lt;p&gt;
I agree. I will try to provide a safe fix using a plugin soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4788 (wp_loginout() / ampersand in URL) updated</title>
      
        <dc:creator>tmountjr</dc:creator>

      <pubDate>Tue, 21 Aug 2007 14:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4788#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4788#comment:1/1187705513000000</guid>
      <description>&lt;p&gt;
Seems like there's a bunch of these things in the code - couple dozen, maybe? My regular expressions aren't all that good, but the clunky thing I put together caught a lot of them. I'll tweak the search this afternoon and see if there's anything else I missed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Tue, 21 Aug 2007 13:32:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784#comment:6/1187703158000000</guid>
      <description>&lt;p&gt;
Double quotes are required in XHTML Strict, while Transitional allows either single or double quotes.
&lt;/p&gt;
&lt;p&gt;
So I support changing single quote output to double quotes anywhere in the core code, since some themes may try to implement Strict.
&lt;/p&gt;
&lt;p&gt;
The indentation is unnecessary though, and should be removed. Extra spaces that do nothing should not be there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4759 (Blank index.php in wp-content subdirs) updated</title>
      
        <dc:creator>Ozh</dc:creator>

      <pubDate>Tue, 21 Aug 2007 12:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4759#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4759#comment:4/1187699762000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry for the mess, the previous reply &amp;amp; patch was incomplete. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4787" title="#4787: defect (bug): PHP files in wp-content/plugins unconditionnaly take over their ... (closed: wontfix)"&gt;#4787&lt;/a&gt; for a more complete problem analysis &amp;amp; patch. Ticket changed to be just a blank index.php proposal, as an easy and trivial "security" enhancement
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4787 (PHP files in wp-content/plugins unconditionnaly take over their ...) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 21 Aug 2007 12:34:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4787#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4787#comment:1/1187699696000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If this is a feature (allow a plugin to take over a Dashboard page), which might be cool after all, then before letting it doing so, we need to check that the file is an activated plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That can be accomplished via hooks at present(in 2.2+ at least), ie, to take over the plugins.php page:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('load-plugins.php', 'override_plugins_page');
function override_plugins_page($arg = ''){
	global $wpdb,$menu,$submenu;
	include('my-plugins-file.php');
	exit; //To prevent the default plugins.php file running.
}
&lt;/pre&gt;&lt;p&gt;
Given it can be done via a hook, i dont see the need to manually override via a file in wp-content/plugins/, It may be a route which some plugins presently do, but most plugins that have mutliple files place their files within a single folder in the plugins directory to keep everything clean and organised, I only see plugins with multiple files wanting to take the route of replacing admin pages completely(Due to the complexity they would generally be)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4788 (wp_loginout() / ampersand in URL) created</title>
      
        <dc:creator>raptorNL</dc:creator>

      <pubDate>Tue, 21 Aug 2007 12:25:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4788</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4788/1187699138000000</guid>
      <description>&lt;p&gt;
The &lt;strong&gt;wp_loginout()&lt;/strong&gt; function does not escape ampersands with the proper entity in the &lt;strong&gt;Logout&lt;/strong&gt; url, failing the code to pass W3C (X)HTML validation.
&lt;/p&gt;
&lt;p&gt;
For instance, on my local test blog, it generates the following:
&lt;code&gt;&amp;lt;a href="http://localhost/wp/wp-login.php?action=logout&amp;amp;redirect_to=%2Fhome%2F"&amp;gt;Logout&amp;lt;/a&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The ampersand between &lt;strong&gt;action=logout&lt;/strong&gt; and &lt;strong&gt;redirect_to=%2Fhome%2F&lt;/strong&gt; should be escaped with &lt;strong&gt;&amp;amp;amp;&lt;/strong&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4787 (PHP files in wp-content/plugins unconditionnaly take over their ...) created</title>
      
        <dc:creator>Ozh</dc:creator>

      <pubDate>Tue, 21 Aug 2007 12:23:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4787</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4787/1187698985000000</guid>
      <description>&lt;h2 id="Problem"&gt;Problem&lt;/h2&gt;
&lt;p&gt;
Putting in &lt;em&gt;wp-content/plugins&lt;/em&gt; a file that has the same name as a file in &lt;em&gt;wp-admin/&lt;/em&gt; (for instance &lt;em&gt;index.php&lt;/em&gt; as an attempt to hide the plugins directory content, or &lt;em&gt;themes.php&lt;/em&gt; or whatever) overrides the original Dashboard page.
&lt;/p&gt;
&lt;p&gt;
If this is a feature (allow a plugin to take over a Dashboard page), which might be cool after all, then before letting it doing so, we need to check that the file is an activated plugin.
&lt;/p&gt;
&lt;h2 id="Proposal"&gt;Proposal&lt;/h2&gt;
&lt;p&gt;
&lt;strong&gt;1)&lt;/strong&gt; 2 new functions to be included in &lt;em&gt;wp-admin/includes/plugin.php&lt;/em&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Checks if a file is (seems to be) a plugin (Ozh)
 *
 * @param string $plugin_file The filename of plugin (full path)
 * @return boolean
 */
function is_pluginfile($plugin_file) {
	if ( !is_readable( $plugin_file ) || substr($plugin_file, -4) != '.php' )
		return false;
	$plugin_data = get_plugin_data( $plugin_file );
	if ( empty ( $plugin_data['Name'] ) )
		return false;
	return true;
}
/**
 * Checks if a plugin is activated (Ozh)
 *
 * Checks first if the file is (seems to be) a plugin
 * @param string $plugin_file The filename of plugin (full path, or relative path to plugins dir as stored in options table under 'plugins_activated')
 * @return boolean
 */
function is_activatedplugin($plugin_file) {
	if ( get_option('active_plugins') ) {
		$current_plugins = get_option('active_plugins');
	} else {
		return false;
	}
	$plugin_root = ABSPATH . PLUGINDIR;
	// $plugin_file can be a full or relative filename path, so sanitize it and make it always relative
	$plugin_file = plugin_basename($plugin_file);
	if ( is_pluginfile($plugin_root .'/'. $plugin_file) &amp;amp;&amp;amp; in_array($plugin_file, $current_plugins) ) {
		return true;
	} else {
		return false;
	}
}
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;2)&lt;/strong&gt; Modification of &lt;em&gt;wp-admin/menu-header.php&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Replace every &lt;em&gt;file_exists&lt;/em&gt; with &lt;em&gt;is_activatedplugin&lt;/em&gt;&lt;br /&gt;
(sorry, no svn or patch on this computer)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) updated</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Tue, 21 Aug 2007 11:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784#comment:5/1187697360000000</guid>
      <description>&lt;p&gt;
Stevie, single quotes in attributes are perfectly legal markup. Run it through a validator and you'll see.
&lt;/p&gt;
&lt;p&gt;
The reason single quotes are used is so that there aren't tons of backslashes in the PHP code. It makes it look prettier.
&lt;/p&gt;
&lt;p&gt;
(Code is poetry.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) updated</title>
      
        <dc:creator>Stevie212</dc:creator>

      <pubDate>Tue, 21 Aug 2007 10:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784#comment:4/1187693083000000</guid>
      <description>&lt;p&gt;
Also the &amp;lt;link rel='archives'&amp;gt; does this as well, this should be changed also.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;link rel='archives' title='August 2007' href='&lt;a class="ext-link" href="http://localhost/wp"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://localhost/wp&lt;/a&gt;' /&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Should be:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;link rel="archives" title="August 2007" href="&lt;a class="ext-link" href="http://localhost/wp"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://localhost/wp&lt;/a&gt;" /&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Although I find this an irrelevant issue, I'd assume it has benefits?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) updated</title>
      
        <dc:creator>Stevie212</dc:creator>

      <pubDate>Tue, 21 Aug 2007 10:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784#comment:3/1187692827000000</guid>
      <description>&lt;p&gt;
Well many generated HTML tags in WP aren't "beautiful" as in they don't use quote marks, instead they use another method, however I have noticed that if I modify the meta tag to use the quote marks, it throws an error some unknown reason, so I presume Matt uses an alternative method to prevent errors.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;meta name='robots' content='noindex,nofollow' /&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Should be
&lt;/p&gt;
&lt;p&gt;
&amp;lt;meta name="robots" content="noindex,nofollow" /&amp;gt;
&lt;/p&gt;
&lt;p&gt;
However I'm not sure theres a solution to this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4786 (Recent Entries widget caches Private Post titles) created</title>
      
        <dc:creator>lybica</dc:creator>

      <pubDate>Tue, 21 Aug 2007 07:16:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4786</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4786/1187680591000000</guid>
      <description>&lt;p&gt;
Recent Entries widget uses wp_cache_*() functions if ENABLE_CACHE is set.&lt;br /&gt;
However, if a user with the capability to 'read_private_posts' is logged in and triggered wp_cache_add(), private posts (only titles, though) are also cached and displayed to the public/unregistered viewers for the lifetime of the cache, effectively bypassing the is_user_logged_in() and current_user_can() in WP_Query::get_posts().
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 21 Aug 2007 04:12:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784#comment:2/1187669558000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
but what is with the space ("tab"?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To indent the &amp;lt;meta&amp;gt; tag in the &amp;lt;head&amp;gt; to the same level as the rest of the Meta tags. (To "beutify" it)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Tue, 21 Aug 2007 04:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784#comment:1/1187669253000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
hakre, looks ok, but what is with the space ("tab"?) at the front? I actually find it distracting b/c it is "non-standard".
&lt;/p&gt;
&lt;p&gt;
Also, the WP convention seems to mostly be to use string.string for concatenation, ie no spaces -- makes it just that much easier to quickly see it isn't a sentence.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4785 (wp_nonce_url and &amp;amp;) created</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 21 Aug 2007 02:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4785</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4785/1187662454000000</guid>
      <description>&lt;p&gt;
I've noticed several places through the sourcecode where &amp;amp;amp; is used within urls to make them XHTML compatible i assume.
However, after just noncing my urls for a plugin, i've noticed that &amp;amp;amp; doesnt seem to work correctly in a link, yet is used by WP in places, eg:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$activate_link = wp_nonce_url("themes.php?action=activate&amp;amp;amp;template=$template&amp;amp;amp;stylesheet=$stylesheet", 'switch-theme_' . $template);
&lt;/pre&gt;&lt;p&gt;
results in this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;themes.php?action=activate&amp;amp;#038;amp&amp;amp;#038;template=TEST_TEMPLATE&amp;amp;#038;stylesheet=TEST_SHEET&amp;amp;#038;_wpnonce=d1abcfcd17
&lt;/pre&gt;&lt;p&gt;
Which is then interpated as this: (At least in Opera)
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://localhost/themes.php?action=activate&amp;amp;amp&amp;amp;template=TEST_TEMPLATE&amp;amp;stylesheet=TEST_SHEET&amp;amp;_wpnonce=d1abcfcd17
&lt;/pre&gt;&lt;p&gt;
notice this: ?action=activate&lt;strong&gt;&amp;amp;amp&amp;amp;&lt;/strong&gt;template
&lt;/p&gt;
&lt;p&gt;
Is it expected behaviour that wp_nonce_url should only accept a string line "page.php?a=b&amp;amp;c=d", or should it also be supporting "page.php?a=b&amp;amp;amp;c=d"(Which it currently mucks up)
&lt;/p&gt;
&lt;p&gt;
the problem seems to be how add_query_arg() adds arguements, It ignores the fact that &amp;amp;amp; is a arguement seperator, instead, it reads &amp;amp;amp as one values, and then reconises the ; as the seperator for the next value, then when it gets run through wp_specialchars() we end up with &amp;amp; being replaced with &amp;amp;#038;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4784 (robot meta tag needs beautification) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 21 Aug 2007 01:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4784/1187660758000000</guid>
      <description>&lt;p&gt;
Fixed a &lt;em&gt;wrong&lt;/em&gt; indent and made this look like real xhtml by applying double-quotification.
&lt;/p&gt;
&lt;p&gt;
Diff against current CSV added, tested in my own live version and looks better then before.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4699 (Custom Permalinks Containing Categories Are Broken for Attachments) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 21 Aug 2007 01:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4699#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4699#comment:3/1187658638000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4699#comment:2" title="Comment 2"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
what about comparing from left to right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thats not really a great fix, what if i used this as my permalink structure:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
/archives/%postname%/%category%/ &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ok its Unlikely someone would use that structure, but it shows that a left to right compare is just as useless &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we're forcing ALL post slugs to be unique, then to simplify it i'd agree that if %post_id% or %postname% is available(In that order) then it should ignore any other post-selectors in the url.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4699 (Custom Permalinks Containing Categories Are Broken for Attachments) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 21 Aug 2007 00:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4699#comment:2/1187657865000000</guid>
      <description>&lt;p&gt;
what about comparing from left to right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [5909]: i18n fix from momo360modena and nbachiyski. fixes #4523</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 00:35:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5909/1187656555630845</guid>
      <description>&lt;p&gt;
i18n fix from momo360modena and nbachiyski. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4523" title="#4523: defect (bug): Fix internationalization -- Edit mass comments (closed: fixed)"&gt;#4523&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4523 (Fix internationalization -- Edit mass comments) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 00:35:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4523#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4523#comment:7/1187656555000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5909" title="i18n fix from momo360modena and nbachiyski. fixes #4523"&gt;[5909]&lt;/a&gt;) i18n fix from momo360modena and nbachiyski. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4523" title="#4523: defect (bug): Fix internationalization -- Edit mass comments (closed: fixed)"&gt;#4523&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4776 (Three or more categories with the same slug cause DB errors when upgrading) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 00:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4776#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4776#comment:2/1187655107000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5908" title="Really make slugs unique during upgrade. fixes #4776"&gt;[5908]&lt;/a&gt;) Really make slugs unique during upgrade. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4776" title="#4776: defect (bug): Three or more categories with the same slug cause DB errors when upgrading (closed: fixed)"&gt;#4776&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [5908]: Really make slugs unique during upgrade. fixes #4776</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 21 Aug 2007 00:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5908/1187655106725578</guid>
      <description>&lt;p&gt;
Really make slugs unique during upgrade. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4776" title="#4776: defect (bug): Three or more categories with the same slug cause DB errors when upgrading (closed: fixed)"&gt;#4776&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [5907]: wp_reset_query() from mdawaffe. fixes #4741</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Aug 2007 22:55:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5907/1187650543108778</guid>
      <description>&lt;p&gt;
wp_reset_query() from mdawaffe. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4741" title="#4741: defect (bug): Multiple $wp_query objects mess a lot of things up (closed: fixed)"&gt;#4741&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4741 (Multiple $wp_query objects mess a lot of things up) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Aug 2007 22:55:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4741#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4741#comment:3/1187650543000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5907" title="wp_reset_query() from mdawaffe. fixes #4741"&gt;[5907]&lt;/a&gt;) wp_reset_query() from mdawaffe. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4741" title="#4741: defect (bug): Multiple $wp_query objects mess a lot of things up (closed: fixed)"&gt;#4741&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4546 (Sanitizing sanitization and filter invocation) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Aug 2007 22:50:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4546#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4546#comment:4/1187650207000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5906" title="bookmark sanitizer funcs and default filter cleanup. see #4546"&gt;[5906]&lt;/a&gt;) bookmark sanitizer funcs and default filter cleanup. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4546" title="#4546: defect (bug): Sanitizing sanitization and filter invocation (closed: fixed)"&gt;#4546&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [5906]: bookmark sanitizer funcs and default filter cleanup. see #4546</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Aug 2007 22:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5906/1187650204956522</guid>
      <description>&lt;p&gt;
bookmark sanitizer funcs and default filter cleanup. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4546" title="#4546: defect (bug): Sanitizing sanitization and filter invocation (closed: fixed)"&gt;#4546&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>query.php.patch attached to Ticket #4783</title>
      
        <dc:creator>joost538</dc:creator>

      <pubDate>Mon, 20 Aug 2007 22:39:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4783/query.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4783/query.php.patch/1187649599000000</guid>
      <description>&lt;p&gt;
patch for WP_Query in wp-includes/query.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4783 (patch for wp_query to allow post_parent) created</title>
      
        <dc:creator>joost538</dc:creator>

      <pubDate>Mon, 20 Aug 2007 22:39:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4783</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4783/1187649577000000</guid>
      <description>&lt;p&gt;
I have patched WP_Query to allow the 'post_parent' query parameter.
&lt;/p&gt;
&lt;p&gt;
This is helpful in building custom queries that should allow subpages of a page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3398 (import data from Geeklog) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Mon, 20 Aug 2007 21:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3398#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3398#comment:10/1187644739000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4782 (spawn_cron() doesn't properly consider the port of the cron.php file) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Mon, 20 Aug 2007 21:11:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4782#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4782#comment:1/1187644317000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4780 ($table_prefix should not be encoded in table_names.) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Mon, 20 Aug 2007 19:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4780#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4780#comment:1/1187639873000000</guid>
      <description>&lt;p&gt;
No, I believe these are necessary in case you have two or more independent blogs sharing one users table with the use of the CUSTOM_USER_TABLE and CUSTOM_USER_META_TABLE defines. While the user_roles in the options table may not need the table prefix, I think that you would not necessarily want a shared userbase to inherit capabilities and such across the usermeta table. Also, the draft ID's would break if it was shared across two tables.
&lt;/p&gt;
&lt;p&gt;
Suggest marking this as invalid. It's plugin territory. Also, you should not really be changing the $table_prefix to begin with, there's virtually no point in doing so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [5905]: mt_allow_pings fix. Props Joseph Scott and Allan Odgaard. fixes #4770 ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Aug 2007 18:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5905/1187633926177775</guid>
      <description>&lt;p&gt;
mt_allow_pings fix. Props Joseph Scott and Allan Odgaard. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4770" title="#4770: defect (bug): Fix mt_allow_pings in metaWeblog.newPost (XML-RPC) (closed: fixed)"&gt;#4770&lt;/a&gt; for 2.2
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4770 (Fix mt_allow_pings in metaWeblog.newPost (XML-RPC)) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Aug 2007 18:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4770#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4770#comment:6/1187633926000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5905" title="mt_allow_pings fix. Props Joseph Scott and Allan Odgaard. fixes #4770 ..."&gt;[5905]&lt;/a&gt;) mt_allow_pings fix. Props Joseph Scott and Allan Odgaard. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4770" title="#4770: defect (bug): Fix mt_allow_pings in metaWeblog.newPost (XML-RPC) (closed: fixed)"&gt;#4770&lt;/a&gt; for 2.2
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4782 (spawn_cron() doesn't properly consider the port of the cron.php file) created</title>
      
        <dc:creator>bchecketts</dc:creator>

      <pubDate>Mon, 20 Aug 2007 18:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4782</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4782/1187633361000000</guid>
      <description>&lt;p&gt;
I ran into a problem today where a user would submit a new post in Wordpress, and it would cause the web server to lock up. Restarting the web server would start Apache properly, and would serve static content fine until the user requested another page from Wordpress where it would lock up again.
&lt;/p&gt;
&lt;p&gt;
The configuration is a little odd, so it probably doesn't happen to many users. In order for it to occur, you have to have the "Wordpress Address" setting as a URL starting with 'https', and then write your post using a non-https URL. I tracked this down to a problem with the cron function built into wordpress. Specifically this bit of code in the spawn_cron() function in includes/cron.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;$cron_url = get_option( 'siteurl' ) . '/wp-cron.php';
        $parts = parse_url( $cron_url );
        if ($parts['scheme'] == 'https') {
                // support for SSL was added in 4.3.0
                if (version_compare(phpversion(), '4.3.0', '&amp;gt;=') &amp;amp;&amp;amp; function_exists('openssl_open')) {
                        $argyle = @fsockopen('ssl://' . $parts['host'], $_SERVER['SERVER_PORT'], $errno, $errstr, 0.01);
                } else {
                        return false;
                }
        } else {
                $argyle = @ fsockopen( $parts['host'], $_SERVER['SERVER_PORT'], $errno, $errstr, 0.01 );
        }
        if ( $argyle )
                fputs( $argyle,
                          "GET {$parts['path']}?check=" . wp_hash('187425') . " HTTP/1.0\r\n"
                        . "Host: {$_SERVER['HTTP_HOST']}\r\n\r\n"
                );
&lt;/pre&gt;&lt;p&gt;
The line that says:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$argyle = @fsockopen('ssl://' . $parts['host'], $_SERVER['SERVER_PORT'], $errno, $errstr, 0.01);
&lt;/pre&gt;&lt;p&gt;
Assumes that you are hitting the current page on the same server/port as that returned by get_option( 'siteurl' ). Since the user was hitting the non-https version of the site, that would cause this code in the spawn_cron() function to connect to port 80 and try to establish an SSL connection. Wordpress would get that request as "\x80|\x01\x03\x01", and issue it the home page, which would, in-turn, re-run the cron function again. That sub-request would redo the same thing over, and that would continue until Apache ran out of connections. At that point it would try to request the page again, and would wait endlessly for a connection to open up, and never would.
&lt;/p&gt;
&lt;p&gt;
So, to solve, I added a couple lines and made a couple changes like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[root@server wp-includes]# diff cron.php cron.php.original
90,91c90
90,91c90
&amp;lt;                       $port = isset($parts['port']) ? $parts['port'] : 443;
&amp;lt;                       $argyle = @fsockopen('ssl://' . $parts['host'], $port, $errno, $errstr, 0.01);
---
&amp;gt;                       $argyle = @fsockopen('ssl://' . $parts['host'], $_SERVER['SERVER_PORT'], $errno, $errstr, 0.01);
96,97c95
&amp;lt;               $port = isset($parts['port']) ? $parts['port'] : 80;
&amp;lt;               $argyle = @ fsockopen( $parts['host'], $port, $errno, $errstr, 0.01 );
---
&amp;gt;               $argyle = @ fsockopen( $parts['host'], $_SERVER['SERVER_PORT'], $errno, $errstr, 0.01 );
&lt;/pre&gt;&lt;p&gt;
That makes it consider the port of the url returned by get_option( 'siteurl' ), instead of using the port you are currently connected on. It defaults to port 443 if the url begins with https, and port 80 if not.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4778 (Change enums to varchar) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Aug 2007 17:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4778#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4778#comment:3/1187630470000000</guid>
      <description>&lt;p&gt;
Another motivator is to make our SQL more portable.  enums aren't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4767 (Autosave causes spurious entries in Audit Trail plugin) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Mon, 20 Aug 2007 16:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4767#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4767#comment:1/1187628353000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
JacquesChester
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4768 (Make comment moderation buttons more intuitive) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Mon, 20 Aug 2007 16:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4768#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4768#comment:2/1187627789000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
novasource, patches are appreciated ;-) As I think I have commented on a couple of your tickets before sometimes recording the bug doesn't get it closer to being fixed. This sort of bugs are a great opportunity for you to demonstrate "shipping is better than thnking"
&lt;/p&gt;
&lt;p&gt;
It is also essential that you identify related bugs, even if the relationship seems very loose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4267 (wp_list_pages using a 'the_title' on all entries) updated</title>
      
        <dc:creator>coppit</dc:creator>

      <pubDate>Mon, 20 Aug 2007 16:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4267#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4267#comment:6/1187626542000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding myself to this bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4770 (Fix mt_allow_pings in metaWeblog.newPost (XML-RPC)) reopened</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 20 Aug 2007 16:03:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4770#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4770#comment:5/1187625832000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #4735 (OK/Cancel dialogs should have choices specific to the situation) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Mon, 20 Aug 2007 15:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4735#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4735#comment:10/1187625372000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4735#comment:8" title="Comment 8"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would be wary or replacing the nonce checks and AYS with a straight undo functionality.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Seems your comment is also (maybe most relevant in) &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;. AYS are a bad experience, but as you describe there are many security considerations for a undo implementation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4781 (update_option destroys value / faulty trim) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 20 Aug 2007 15:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4781#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4781#comment:1/1187624878000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>4781.diff attached to Ticket #4781</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 20 Aug 2007 15:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4781/4781.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4781/4781.diff/1187624852000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4781 (update_option destroys value / faulty trim) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 20 Aug 2007 15:45:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4781</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4781/1187624718000000</guid>
      <description>&lt;p&gt;
When using wordpress option function "update_option" and the value of the option is a string containing trailing spaces (wether in front or at the end), these spaces will be removed. This can destroy the option value since spaces are chars like any other chars in a string. The option value then is saved crippeled into the option system and each time the value is requested again trailing spaces are missing.
&lt;/p&gt;
&lt;p&gt;
The defect is inside the update_option() function on line 281 in functions.php. In line 289 the option value type is checked to be a string and if it is a string, the string value will be trimmed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_string($newvalue) )
		$newvalue = trim($newvalue);
&lt;/pre&gt;&lt;p&gt;
It is totally unclear why this happens, the sourcecode isn't documented in any way. I applied a diff against the current SVN that removes these two lines of faulty code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4777 (Include Summer of Code's Podcasting Support With WordPress) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Mon, 20 Aug 2007 15:24:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4777#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4777#comment:7/1187623489000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4777" title="#4777: enhancement: Include Summer of Code's Podcasting Support With WordPress (closed: wontfix)"&gt;cavemonkey50&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Personally, I feel this should be distributed as a plugin with WordPress since not everyone will
take advantage of it. I know Matt mentioned at one point over the summer he would like to see this
included in core. What do you think?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think Matt has consistently expressed that he would like to see better podcasting support in WordPress. I don't know enough about podcasting to know what that looks like, but likely it means providing infrastructure in core to make your plugin and others work more smoothly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4759 (Blank index.php in wp-content subdirs) updated</title>
      
        <dc:creator>Ozh</dc:creator>

      <pubDate>Mon, 20 Aug 2007 15:15:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4759#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4759#comment:3/1187622952000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As of now there is a bug (feature?) making the Dashboard default page display the content of any 'index.php' that might exist in /wp-content/plugins/
I think this is a bug because index.php might not be a plugin
&lt;/p&gt;
&lt;p&gt;
Here is a proposal for a fix of this behavior (sorry, I have nothing like svn or patch on the machine I'm on right now).
&lt;/p&gt;
&lt;p&gt;
1) A new function (in wp-admin/includes/plugins.php would be appropriate)
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Checks if a file is (seems to be) a plugin - Ozh
 * @param	string	$plugin_file	full path to a file
 * @return 	boolean
 */
function is_pluginfile($plugin_file) {
	if ( !is_readable( $plugin_file ) or substr($plugin_file, -4) != '.php' )
		return false;
	$plugin_data = get_plugin_data( $plugin_file );
	if ( empty ( $plugin_data['Name'] ) )
		return false;
	return true;
}
&lt;/pre&gt;&lt;p&gt;
2) Changes to /wp-admin/menu-header.php
&lt;/p&gt;
&lt;p&gt;
Replace every &lt;em&gt;file_exists&lt;/em&gt; with &lt;em&gt;is_pluginfile&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
3) If this patch is accepted, function get_plugins() from /wp-admin/includes/plugins.php could use is_pluginfile() as well with an improved test on line 73:
&lt;/p&gt;
&lt;pre class="wiki"&gt;line 73 -- 		if ( !is_readable( "$plugin_root/$plugin_file" ) )
line 73 ++ 		if ( !is_pluginfile( "$plugin_root/$plugin_file" ) )
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4780 ($table_prefix should not be encoded in table_names.) created</title>
      
        <dc:creator>docwhat</dc:creator>

      <pubDate>Mon, 20 Aug 2007 15:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4780</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4780/1187622514000000</guid>
      <description>&lt;p&gt;
Currently, the following columns have the $table_prefix within their name:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
table_prefix_options.table_prefix_user_roles
table_prefix_usermeta.table_prefix_capabilities
table_prefix_usermeta.table_prefix_user_level
table_prefix_usermeta.table_prefix_autosave_draft_ids
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Where 'table_prefix_' is the $table_prefx.
&lt;/p&gt;
&lt;p&gt;
Using the $table_prefix this way causes needless headaches(1) and
makes the database schema more brittle than it needs to be.
&lt;/p&gt;
&lt;p&gt;
Making this change will allow changing the $table_prefix to be trivial.
&lt;/p&gt;
&lt;p&gt;
Ciao!
&lt;/p&gt;
&lt;p&gt;
(1)
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.eligeotravez.net/2007/04/17/changing-table-prefix-for-wordpress/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.eligeotravez.net/2007/04/17/changing-table-prefix-for-wordpress/&lt;/a&gt;
&lt;a class="ext-link" href="http://markjaquith.wordpress.com/2006/03/28/wordpress-error-you-do-not-have-sufficient-permissions-to-access-this-page/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://markjaquith.wordpress.com/2006/03/28/wordpress-error-you-do-not-have-sufficient-permissions-to-access-this-page/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4778 (Change enums to varchar) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Mon, 20 Aug 2007 14:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4778#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4778#comment:2/1187621814000000</guid>
      <description>&lt;p&gt;
-1
&lt;/p&gt;
&lt;p&gt;
This is a really bad idea. The whole point of using an enum is to have a fixed set of values that are valid ones. They are stored as integers internally and make things somewhat speedier, since WordPress selects posts based on post_status more or less constantly. Changing it to a varchar would create a not-insignificant performance loss.
&lt;/p&gt;
&lt;p&gt;
If a plugin is making such a radical change as to require its own special post_status values, then it should be able to take the time to alter the table to allow that status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4665 (Optimize get_posts query) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Mon, 20 Aug 2007 14:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4665#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4665#comment:8/1187621399000000</guid>
      <description>&lt;p&gt;
matt: No, still not seeing it. You're joining to terms and to postmeta. Unless you have duplicated terms or postmeta info, you're not going to get the same post twice in that query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4779 (Proposal for HTTP POST and REQUEST API) created</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 20 Aug 2007 13:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4779</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4779/1187615740000000</guid>
      <description>&lt;p&gt;
Given that some hosts are paranoid, it would be a good idea to have a failover for fsockopen and/or fopen.
&lt;/p&gt;
&lt;p&gt;
Given some of my tests and passed experience there are three ways to attempt a HTTP call that works on both PHP 4.3+ and PHP 5 and a few more ways added to just PHP 5.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Curl (if extension loaded)
&lt;/li&gt;&lt;li&gt;Fopen (if ini_settings allows for this. however, PHP 4 and PHP 5 has an extra ini setting for allowing fopen and closing include(_once)/require(_once)
&lt;/li&gt;&lt;li&gt;Sockets (fsockopen) (second prefer for PHP 4)
&lt;/li&gt;&lt;li&gt;Streams (prefer for PHP 5 and PHP 4)
&lt;/li&gt;&lt;li&gt;HTTP (PHP 5.2) (if exists, and if anyone knows how to use it, then use this for PHP 5.2)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If none of these work, then just spit out some error saying the hosts sucks or something.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What about Snoopy?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Snoopy supports two of the five, so either expand upon Snoopy, do proper testing and use it instead or just basically hack a few working functions up.
&lt;/p&gt;
&lt;p&gt;
I would choose to hack a few functions up, given that it would be probably easier to add the remaining three to Snoopy. There should still be a function or two for which can be refactored later to use Snoopy.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Something about Tuesday&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Matt said something about Tuesday, but I'm unsure how quickly I can get this API out by myself... Actually, I kid, should only take about 3 hours, tops. Except for HTTP as I have no idea how to work for it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4778 (Change enums to varchar) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 20 Aug 2007 11:54:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4778#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4778#comment:1/1187610891000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
This is a really good idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4735 (OK/Cancel dialogs should have choices specific to the situation) updated</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Mon, 20 Aug 2007 09:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4735#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4735#comment:9/1187600794000000</guid>
      <description>&lt;p&gt;
Hey -- that undo is a good idea. We could, say, use WP-Cron to purge posts/drafts that have been 'deleted' for over 6 hours, with the opportunity to cancel the deletion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1476 (WordPress Update Notification) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 20 Aug 2007 07:10:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1476#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1476#comment:47/1187593826000000</guid>
      <description>&lt;p&gt;
I got the better styling so I'm closing out this ticket.
&lt;/p&gt;
&lt;p&gt;
For the HTTP opening issues, right now it's the same way we do it in other places in WP, but I'm very very open to making this smarter, though to get in for 2.3 it needs to happen before Tuesday.
&lt;/p&gt;
&lt;p&gt;
Basically there are 4-5 places in WP and also in Akismet that make a remote HTTP call, not to mention we bundle the Snoopy class. Pretty much everywhere we do the fopen thing I did here, but I'd be fine with normalizing all those one-offs into a utility function, but it'd only be really useful if it did the open failover stuff mentioned above. I'm sure it will help some, but we still need a documentation aspect because most of the times I've run into it it's been a firewall issue not php config.
&lt;/p&gt;
&lt;p&gt;
If you're interested in that, go ahead and open a new ticket for it. I'll be happy to test it in the environment I have access to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4777 (Include Summer of Code's Podcasting Support With WordPress) updated</title>
      
        <dc:creator>cavemonkey50</dc:creator>

      <pubDate>Mon, 20 Aug 2007 07:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4777#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4777#comment:6/1187593805000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4777#comment:5" title="Comment 5"&gt;seek3r&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Actually podpress does this with the podcast feed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, when did that change occur? The version I was testing back in April/May did not work for me and all the people I talked to while gathering ideas claimed podPress didn't do this. I found that quite odd since I would think that would be feature number two to next to iTunes support. Glad to hear podPress supports that.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is largely due to the additional blog player features and other such features. As the feature set grew, I did have memory issues to tackle, but have done so.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I remember you mentioning that at WordCamp. If I recall correctly, you said you're going to be working to clean up podPress and make it more manageable. That's good to hear and I'm sure will be appreciated.
&lt;/p&gt;
&lt;p&gt;
I hope my previous statements didn't come as harsh. I believe both podPress and my plugin have their uses and can still coexist. For example, if you need to do more complex podcasting such as keeping track of downloads or offering a paid subscription feed, podPress is the choice. But, I also feel there needs to be a simpler solution for those who don't want all the extra features.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [5904]: Better styling for update notice, fixes #1476</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 20 Aug 2007 07:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5904/1187593275678091</guid>
      <description>&lt;p&gt;
Better styling for update notice, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1476" title="#1476: enhancement: WordPress Update Notification (closed: fixed)"&gt;#1476&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #1476 (WordPress Update Notification) closed</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 20 Aug 2007 07:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1476#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1476#comment:46/1187593275000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5904" title="Better styling for update notice, fixes #1476"&gt;[5904]&lt;/a&gt;) Better styling for update notice, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1476" title="#1476: enhancement: WordPress Update Notification (closed: fixed)"&gt;#1476&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [5903]: Change IPs to link to local search instead of cryptic ARIN info</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 20 Aug 2007 07:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5903/1187593229904927</guid>
      <description>&lt;p&gt;
Change IPs to link to local search instead of cryptic ARIN info
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4777 (Include Summer of Code's Podcasting Support With WordPress) updated</title>
      
        <dc:creator>seek3r</dc:creator>

      <pubDate>Mon, 20 Aug 2007 06:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4777#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4777#comment:5/1187591090000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4777#comment:2" title="Comment 2"&gt;cavemonkey50&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, quite a few. The feeds created by this are true podcasting feeds in that they contain x podcasts, not x posts with podcast information attached. Also, podPress does not allow separate feeds for different formats. This does.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually podpress does this with the podcast feed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Finally, like I mentioned above, I strived to keep with the WordPress UI. If you look at the interface on my write up, it's clean and concise. podPress' UI is confusing and does not fit with WordPress. Same goes for coding. If you look on podPress' page, he's battling memory overload issues on many servers. When I coded this, I tried to keep code down to a minimum. The whole plugin is only 857 lines of code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is largely due to the additional blog player features and other such features. As the feature set grew, I did have memory issues to tackle, but have done so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4778 (Change enums to varchar) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Aug 2007 05:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4778</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4778/1187588637000000</guid>
      <description>&lt;p&gt;
Drop enums from the schema in favor of the more portable and flexible varchar.  I think we can just change all occurrences of enum in schema.php to varchar(20).  This will allow plugins to add new post status values, for example, without having to do an alter table to change the enum.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4777 (Include Summer of Code's Podcasting Support With WordPress) updated</title>
      
        <dc:creator>cavemonkey50</dc:creator>

      <pubDate>Mon, 20 Aug 2007 04:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4777#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4777#comment:4/1187582847000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4777#comment:3" title="Comment 3"&gt;cpoteet&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ron,
&lt;/p&gt;
&lt;p&gt;
I was in your demo team, and it did look quite promising but I'm not quite sure if it should be shipped in the core.  It seems to be a perfect plugin, but I don't know if podcasting is something that would be used on the level of widgets, tinymce, etc.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Point taken, but look at &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;the top WordPress.org plugins&lt;/a&gt;. podPress is currently number 3, roughly showing podcasting is the third most requested plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4777 (Include Summer of Code's Podcasting Support With WordPress) updated</title>
      
        <dc:creator>cpoteet</dc:creator>

      <pubDate>Mon, 20 Aug 2007 03:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4777#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4777#comment:3/1187582021000000</guid>
      <description>&lt;p&gt;
Ron,
&lt;/p&gt;
&lt;p&gt;
I was in your demo team, and it did look quite promising but I'm not quite sure if it should be shipped in the core.  It seems to be a perfect plugin, but I don't know if podcasting is something that would be used on the level of widgets, tinymce, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4777 (Include Summer of Code's Podcasting Support With WordPress) updated</title>
      
        <dc:creator>cavemonkey50</dc:creator>

      <pubDate>Mon, 20 Aug 2007 03:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4777#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4777#comment:2/1187581477000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4777#comment:1" title="Comment 1"&gt;Enric&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are there unique features to this that Podpress doesn't have:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.mightyseek.com/podpress/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.mightyseek.com/podpress/&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
-- Enric
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, quite a few. The feeds created by this are true podcasting feeds in that they contain x podcasts, not x posts with podcast information attached. Also, podPress does not allow separate feeds for different formats. This does.
&lt;/p&gt;
&lt;p&gt;
Finally, like I mentioned above, I strived to keep with the WordPress UI. If you look at the interface on my write up, it's clean and concise. podPress' UI is confusing and does not fit with WordPress. Same goes for coding. If you look on podPress' page, he's battling memory overload issues on many servers. When I coded this, I tried to keep code down to a minimum. The whole plugin is only 857 lines of code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4777 (Include Summer of Code's Podcasting Support With WordPress) updated</title>
      
        <dc:creator>Enric</dc:creator>

      <pubDate>Mon, 20 Aug 2007 02:26:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4777#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4777#comment:1/1187576795000000</guid>
      <description>&lt;p&gt;
Are there unique features to this that Podpress doesn't have:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.mightyseek.com/podpress/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.mightyseek.com/podpress/&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
-- Enric
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4777 (Include Summer of Code's Podcasting Support With WordPress) created</title>
      
        <dc:creator>cavemonkey50</dc:creator>

      <pubDate>Mon, 20 Aug 2007 01:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4777</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4777/1187573862000000</guid>
      <description>&lt;p&gt;
Based on the recommendation of few people, I am proposing my Summer of Code project be included with WordPress. For those of you unfamiliar with my project, I recently &lt;a class="ext-link" href="http://cavemonkey50.com/2007/08/wordpress-podcasting-support-is-complete/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;wrote a concluding write up on my site&lt;/a&gt;. The actual source code can be viewed at the &lt;a class="ext-link" href="http://wordpress-soc-2007.googlecode.com/svn/trunk/cavemonkey50/WordPress'"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Summer of Code repository&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I feel podcasting is an addition worth distributing with WordPress due to the sheer number of WordPress podcasters. From my research during the summer, WordPress appears to be second in podcast blogging software next to Drupal. Having only basic enclosure support and no iTunes support currently is a major downside to running a podcast with WordPress. If WordPress would have some enhanced support for podcasts, it could easily become the go to choice for podcasters.
&lt;/p&gt;
&lt;p&gt;
If you looked over my work this summer, my number one goal with my project was to fit in with WordPress. My project takes advantage of WordPress 2.3's new taxonomy system, thus requiring no extra database overhead. In addition to that, I designed the interface to fit in with current UI and be as minimalist as possible. Therefore, I feel my project could easily be distributed with WordPress.
&lt;/p&gt;
&lt;p&gt;
I understand this is a major suggestion, so I'm looking for feedback from everyone. Do you feel better podcasting support should be included with WordPress? If so, how should it be distributed?
&lt;/p&gt;
&lt;p&gt;
Personally, I feel this should be distributed as a plugin with WordPress since not everyone will take advantage of it. I know Matt mentioned at one point over the summer he would like to see this included in core. What do you think?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>