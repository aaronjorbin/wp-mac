<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10539 (Comments Pagination Links disappear if you separate comments from pings) updated</title>
      
        <dc:creator>aldolat</dc:creator>

      <pubDate>Mon, 03 Aug 2009 23:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10539#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10539#comment:1/1249343362000000</guid>
      <description>&lt;p&gt;
You may also try to copy
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="navigation"&amp;gt;
	&amp;lt;?php previous_comments_link() ?&amp;gt;
	&amp;lt;?php next_comments_link() ?&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
before AND after this piece of code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;ol class="commentlist"&amp;gt;
&amp;lt;?php wp_list_comments('type=pings'); ?&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/pre&gt;&lt;p&gt;
You'll see that only the first copy will display the links correctly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10538 (XMLRPC: File Upload missing Base64 Decode) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Mon, 03 Aug 2009 23:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10538#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10538#comment:2/1249342622000000</guid>
      <description>&lt;p&gt;
amatheson: I suspect you're not wrapping the base64 data in a &amp;lt;base64&amp;gt; tag as required. The decoding happens at a lower level than xmlrp.php. You have to wrap the bits data in &amp;lt;base64&amp;gt;
&lt;/p&gt;
&lt;p&gt;
This came up recently in an almost identical bug. I guess the documentation could make a point of underlining this base64 tag requirement.
&lt;/p&gt;
&lt;p&gt;
Daniel
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10539 (Comments Pagination Links disappear if you separate comments from pings) created</title>
      
        <dc:creator>aldolat</dc:creator>

      <pubDate>Mon, 03 Aug 2009 23:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10539</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10539/1249341331000000</guid>
      <description>&lt;p&gt;
If you try to separate the comments from pings (trackback and pinkbacks), the links to comments pagination (Previous and Next Comments) disappear if they are located &lt;strong&gt;after&lt;/strong&gt; the call to wp_list_comments('type=pings') function.
For example, after this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;ol class="commentlist"&amp;gt;
&amp;lt;?php wp_list_comments('type=comment');?&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/pre&gt;&lt;p&gt;
paste:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;ol class="commentlist"&amp;gt;
&amp;lt;?php wp_list_comments('type=pings'); ?&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Now, you should not see the links to Previous and Next comments.
&lt;/p&gt;
&lt;p&gt;
Instead, you should continue to see the links located before the wp_list_comments.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10290 (Images uploaded via WLW do not add to Gallery) updated</title>
      
        <dc:creator>ioni</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:59:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10290#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10290#comment:9/1249340343000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Next verion, maybe?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:8/1249339904000000</guid>
      <description>&lt;p&gt;
Reverseable Shortcodes is by mdawaffe as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>reverseable-shortcodes.tar.gz attached to Ticket #10337</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10337/reverseable-shortcodes.tar.gz</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10337/reverseable-shortcodes.tar.gz/1249339882000000</guid>
      <description>&lt;p&gt;
Reversable shortcodes allowing non-unfiltered_html user to paste certain embed HTMLs and have it be stored in DB as a shortcode
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>oembed.php attached to Ticket #10337</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10337/oembed.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10337/oembed.php/1249339660000000</guid>
      <description>&lt;p&gt;
Shortcode-based oEmbed proof-of-concept plugin by mdawaffe
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:42:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:7/1249339368000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was a widely requested feature in the 2.9 feature poll:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/development/2009/07/2-9-vote-results/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/development/2009/07/2-9-vote-results/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since I've spent so much of my life &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/vipers-video-quicktags/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dealing with embeds&lt;/a&gt;, Jane asked me take a look at implementing easier embeds.
&lt;/p&gt;
&lt;p&gt;
I've been thinking about it over the past week or two and I'm currently of the opinion that implementing an &lt;a class="ext-link" href="http://oembed.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;oEmbed&lt;/a&gt; client with some manually coded fallbacks for popular sites that don't support oEmbed yet would be the way to go.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;My Current Brainstorm&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
New UI element is added, perhaps a new media button called like External Embed or something. I dunno, UI's aren't my strong suit.
&lt;/p&gt;
&lt;p&gt;
The user is prompted for the URL to the object (video, image, etc.).
&lt;/p&gt;
&lt;p&gt;
WordPress then...
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Connects to the URL looking in the head for a discovery &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; to their oEmbed provider.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;If not found, it checks the URL against an internal (filterable) list of oEmbed providers. This is meant for sites that support oEmbed but that don't have discovery links.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;If still not found, then it checks the URL against and internal sudo-oEmbed provider. Similar &lt;a class="ext-link" href="http://oohembed.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://oohembed.com/&lt;/a&gt; but it'd be internal rather than relying on a third party service. This is meant for popular sites that we want to support but that don't support oEmbed themselves (for example YouTube).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
mdawaffe and I have been discussing this and the only real concern seems to be malicious HTML getting in from the provider (say hidden tracking codes, advertising, etc.) However this would still happen if the user was to just copy/paste in the code themselves.
&lt;/p&gt;
&lt;p&gt;
There's also the decision about whether to do this with shortcodes or not.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The before method&lt;/strong&gt; consists of the oEmbed result HTML being inserted directly into the post contents. The user can then see the HTML and remove/edit anything they want, if they desire. The drawback is if the provider updates their embed code, it's not updated on the blog. Although this can be a pro if the update consists of malicious HTML. The other problem is it's harder to change things like width/height as it's often defined multiple times.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The after (shortcode) method&lt;/strong&gt; consists of a shortcode being inserted into the post rather than the HTML. The oEmbed request is made on post display (and probably cached for performance purposes). This is future proof and probably easier on the user, but the user has no control over the HTML. This does allow &lt;code&gt;unfiltered_html&lt;/code&gt; lacking users (i.e. WPMU) to embed though, which is both a pro and con.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Lack Of Customization&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Another problem with oEmbed is the lack of customization. For example, you couldn't easily set a default color for Vimeo embeds.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;TL;DR&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I am thinking about using oEmbed for making for easy embeds, but I am concerned about possible security issues, lack of customization, and so forth. As such, I am looking for feedback and ideas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10526 (oEmbed provider) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 21:39:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10526#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10526#comment:1/1249335590000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just for clarification for everyone: he's talking about a provider, not a consumer.
&lt;/p&gt;
&lt;p&gt;
Example: link to one of your WordPress posts on another site and the content of the post could be read and embedded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10538 (XMLRPC: File Upload missing Base64 Decode) updated</title>
      
        <dc:creator>amatheson</dc:creator>

      <pubDate>Mon, 03 Aug 2009 20:19:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10538#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10538#comment:1/1249330789000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>xmlrpc.php.diff attached to Ticket #10538</title>
      
        <dc:creator>amatheson</dc:creator>

      <pubDate>Mon, 03 Aug 2009 20:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10538/xmlrpc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10538/xmlrpc.php.diff/1249329906000000</guid>
      <description>&lt;p&gt;
Diff of xmlrpc.php (v2.8.3)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10538 (XMLRPC: File Upload missing Base64 Decode) created</title>
      
        <dc:creator>amatheson</dc:creator>

      <pubDate>Mon, 03 Aug 2009 20:04:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10538</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10538/1249329881000000</guid>
      <description>&lt;p&gt;
I was using the upload XML RPC function to mass import images from a previous blog and found that all the files uploaded were being stored incorrectly. Looking into it, I discovered that although the documentation says that the 'bits' argument is a base64 value (&lt;a class="ext-link" href="http://codex.wordpress.org/XML-RPC_wp#wp.uploadFile"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/XML-RPC_wp#wp.uploadFile&lt;/a&gt;) but that the mw_newMediaObject() function does not decode the 'bits' value.  I've attached a diff that I've produced against the 2.8.3 version of xmlrpc.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 17:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:13/1249322332000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4021#comment:11" title="Comment 11"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Checkboxes then -- toggle each role.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah.. Thats the ovbious solution, But still doesn't look pretty to me.
&lt;/p&gt;
&lt;p&gt;
Is the 'read' capability used to be able to see posts/etc? I've not tested it, just spotted it a few times?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All roles have the &lt;code&gt;read&lt;/code&gt; cap, yes. It allows reading of content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) reopened</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Mon, 03 Aug 2009 15:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:50/1249314929000000</guid>
      <description>&lt;p&gt;
Reading through this, I'm not sure why there was all this patching, none of which solved the original problem.
&lt;/p&gt;
&lt;p&gt;
To solve the actual original problem: Can we detect when the post_content changed and only generate a ping event when it has actually changed (and not some other field has been altered)?
&lt;/p&gt;
&lt;p&gt;
This keeps the real-time aspect (which is indeed critical, IMO), while solving the original problem of not forcing pings when the content remains unaltered.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [11770]: 2.8.3</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 03 Aug 2009 15:26:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11770/1249313203474749</guid>
      <description>&lt;p&gt;
2.8.3
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Milestone 2.8.3 completed</title>
      

      <pubDate>Mon, 03 Aug 2009 15:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/2.8.3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/2.8.3/1249313199000000</guid>
      <description></description>
      <category>milestone</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Mon, 03 Aug 2009 15:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:12/1249312970000000</guid>
      <description>&lt;p&gt;
Theres a lot of plugins dealing with private "content" and imho it would be better to encourage developing/merging into a canonical plugin rather than putting a limited feature set directly into core. ( thats if canonical plugins happens like Matt talked about in State of the Word - SF ) Once the canonical plugin is matured it may go into core.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/private-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/private-wordpress/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/private-wp-2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/private-wp-2/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/user-access-manager/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/user-access-manager/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/accessqontrol/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/accessqontrol/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wp-sentry/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wp-sentry/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/private-files/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/private-files/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wpnamedusers/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wpnamedusers/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/social-privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/social-privacy/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/private-wp/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/private-wp/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/privatepost/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/privatepost/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wp-ucanhide/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wp-ucanhide/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/privateplus/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/privateplus/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7103 (Post Template) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Mon, 03 Aug 2009 13:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7103#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7103#comment:9/1249304785000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/7103#comment:5" title="Comment 5"&gt;janeforshort&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I second the idea of doing this as a plugin, which would also give us an idea of how many people would find it useful (enough for core).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If in core it will be popular cause theme developers will pick up on it.
&lt;/p&gt;
&lt;p&gt;
There are several plugin solutions available, and this should be a nice candidate as a canonical plugin imho. ( Matt talking about connecting plugin devs to make canonical plugins at WC SF. )
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/custom-post-template/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/custom-post-template/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/single-post-template/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/single-post-template/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Mon, 03 Aug 2009 12:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:12/1249303519000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10012 (No custom taxonomy import, nor export) updated</title>
      
        <dc:creator>tntc1978</dc:creator>

      <pubDate>Mon, 03 Aug 2009 10:35:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10012#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10012#comment:3/1249295754000000</guid>
      <description>&lt;p&gt;
With use-cases &lt;a class="ext-link" href="http://justintadlock.com/archives/2009/06/04/using-custom-taxonomies-to-create-a-movie-database"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;like these&lt;/a&gt;, it seems that this feature should be essential in an export and import.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Mon, 03 Aug 2009 10:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:9/1249295313000000</guid>
      <description>&lt;p&gt;
my environment
Apache 1.3.37
PHP 5.2.5
MySQL 5.1.22-rc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 03 Aug 2009 10:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:4/1249293790000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Dont know why this happened
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You changed the component, So the owner changed. Dont worry about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Mon, 03 Aug 2009 10:01:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:3/1249293665000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10528#comment:1" title="Comment 1"&gt;JohnMyr&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Dont know why this happened, certainly not an intention by me: &lt;strong&gt;owner  markjaquith deleted&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 03 Aug 2009 09:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:11/1249292989000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Checkboxes then -- toggle each role.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah.. Thats the ovbious solution, But still doesn't look pretty to me.
&lt;/p&gt;
&lt;p&gt;
Is the 'read' capability used to be able to see posts/etc? I've not tested it, just spotted it a few times?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 08:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:10/1249289804000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4021#comment:9" title="Comment 9"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One of the things i see wrong with the Roles option, Is that it would mean the user would have to select all the roles that they want to see the content, Ie. Admins &amp;amp; Editors, which will probably end up coming down to a "It should know if i select Editors, that obviously i intended Administrators to see it as well.."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Checkboxes then -- toggle each role.
&lt;/p&gt;
&lt;p&gt;
The drawback of all or nothing (i.e. registered users only) is that it doesn't work on open registration blogs or blogs with lots of untrusted users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10367 (Assert the existence of ABSPATH in wp-settings.php) reopened</title>
      
        <dc:creator>wet</dc:creator>

      <pubDate>Mon, 03 Aug 2009 05:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10367#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10367#comment:4/1249276899000000</guid>
      <description>&lt;p&gt;
In the light of the &lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/11769"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;current&lt;/a&gt; &lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/11766"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;CYA&lt;/a&gt; &lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/11761#file10"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;swoop&lt;/a&gt;, would this patch be eventually reconsidered for commit?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [11769]: Stop direct loading of files in wp-admin that should only be included, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 03 Aug 2009 00:07:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11769/1249258061421222</guid>
      <description>&lt;p&gt;
Stop direct loading of files in wp-admin that should only be included, for 2.8
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11768]: Stop direct loading of files in wp-admin that should only be included, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 03 Aug 2009 00:04:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11768/1249257885286413</guid>
      <description>&lt;p&gt;
Stop direct loading of files in wp-admin that should only be included, for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10537 (Top Level Categories) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 23:51:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10537#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10537#comment:1/1249257094000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You can change the /category/ prefix to something else on the Permalinks page, However you cannot remove it entrely.
&lt;/p&gt;
&lt;p&gt;
One of the major reasons (ok, the only reason) is the complexity of which that using %category% without a prefix causes in permalinks, WordPress has to list every single category in its rewrite rules, which on some blogs, can end up  with thousands of rules..
&lt;/p&gt;
&lt;p&gt;
If someone wishes to use it like you're asking for, I personally believe it should be handled by a plugin, and not by core, as its not really a very efficient way of handling requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 23:47:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:9/1249256856000000</guid>
      <description>&lt;p&gt;
One of the things i see wrong with the Roles option, Is that it would mean the user would have to select all the roles that they want to see the content, Ie. Admins &amp;amp; Editors, which will probably end up coming down to a "It should know if i select Editors, that obviously i intended Administrators to see it as well.."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11767]: Bump</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Aug 2009 23:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11767/1249255137273913</guid>
      <description>&lt;p&gt;
Bump
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11766]: Add some CYA cap checks.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Aug 2009 23:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11766/1249254714728810</guid>
      <description>&lt;p&gt;
Add some CYA cap checks.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 02 Aug 2009 19:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:8/1249242429000000</guid>
      <description>&lt;p&gt;
Only allowing certain roles or only allowing logged in users to read the blog rather than specific users would be the best solution for the core IMO. Certain users works awesome for WPMU, but not so much for regular WP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Sun, 02 Aug 2009 16:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:8/1249231915000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Sun, 02 Aug 2009 16:35:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:7/1249230917000000</guid>
      <description>&lt;p&gt;
that code block was modified (added) in :
Rev 8199 Fix date() warning on Windows. Props ozh. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7186" title="#7186: defect (bug): Win32 / fresh install : date_i18n() outputs error (closed: fixed)"&gt;#7186&lt;/a&gt;
Rev 8742 date_i18n() fixes. Props nbachiyski. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8153" title="#8153: defect (bug): Use localized dates on General Options page (closed: fixed)"&gt;#8153&lt;/a&gt;
Rev 9616 Use localized dates on General Options page. Props nbachiyski. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8153" title="#8153: defect (bug): Use localized dates on General Options page (closed: fixed)"&gt;#8153&lt;/a&gt;
Rev 9742 date_i18n() fixes. Props nbachiyski. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8153" title="#8153: defect (bug): Use localized dates on General Options page (closed: fixed)"&gt;#8153&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It is necessary, but
Only when you use 5.1.0-
I think that you have to use that codes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.php.2.diff attached to Ticket #10332</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Sun, 02 Aug 2009 16:28:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10332/functions.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10332/functions.php.2.diff/1249230498000000</guid>
      <description>&lt;p&gt;
use version_compare
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10537 (Top Level Categories) created</title>
      
        <dc:creator>php4ever</dc:creator>

      <pubDate>Sun, 02 Aug 2009 15:54:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10537</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10537/1249228441000000</guid>
      <description>&lt;p&gt;
Its been asked for in many places, maybe in 2.9 the /category/ in the url could have a feature like /%categoryname%/ as a setting. so it would show the actual category name instead of just /category/
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wordpress-patch.diff attached to Ticket #10536</title>
      
        <dc:creator>AaronAsAChimp</dc:creator>

      <pubDate>Sun, 02 Aug 2009 14:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10536/wordpress-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10536/wordpress-patch.diff/1249223617000000</guid>
      <description>&lt;p&gt;
check if the result is valid for passing to mysql_fetch_field(), etc.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10536 (errors surfacing when using set_error_handler) created</title>
      
        <dc:creator>AaronAsAChimp</dc:creator>

      <pubDate>Sun, 02 Aug 2009 14:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10536</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10536/1249223551000000</guid>
      <description>&lt;p&gt;
So, I've been getting some strange errors surfacing while developing a plugin.  Three errors along the lines of "mysql_free_result(): supplied argument is not a valid MySQL result resource."
&lt;/p&gt;
&lt;p&gt;
They seem to be normally suppressed, but surface when using set_error_handler(), and only when trying to create a table. It appears that in "wp-includes/wp-db.php" that the result of the query isn't being checked before being passed to the MySQL functions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 02 Aug 2009 14:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:7/1249222122000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:6/1249221201000000</guid>
      <description>&lt;p&gt;
Tested 10535.2.diff and this works in my use case(s) where current code doesn't. Tested with and without the spl_object_hash function.
&lt;/p&gt;
&lt;p&gt;
Thanks DD32 and Hakre.
&lt;/p&gt;
&lt;p&gt;
In brief my use case in code is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class Some_Class {
	// Blah blah
	function widget($args, $instance) {
		// Blah blah
		// This is the first time anyone has hooked posts_fields in this app
		add_filter( 'posts_fields', array( &amp;amp; $this, 'posts_fields' ) );
		$r = new WP_Query( $query_args );
		// Blah blah
		// This is the remove_filter call which doesn't work with the current code
		remove_filter( 'posts_fields', array( &amp;amp; $this, 'posts_fields' ) );
	}
	// Blah blah
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:7/1249220208000000</guid>
      <description>&lt;p&gt;
In my opinion, This should be left to plugin territory.
&lt;/p&gt;
&lt;p&gt;
The simple reason is, That this fits in well with a Role management screen, Ie. Only users of a certain role can do something.
&lt;/p&gt;
&lt;p&gt;
Theres a new Role Management plugin coming up as well: &lt;a class="ext-link" href="http://justintadlock.com/archives/2009/07/22/developing-a-user-management-plugin"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://justintadlock.com/archives/2009/07/22/developing-a-user-management-plugin&lt;/a&gt; Looking at that, It seems the Content Permissions component would be what people would be after.
&lt;/p&gt;
&lt;p&gt;
The only other option would be a &lt;em&gt;Only allow logged in users to view content&lt;/em&gt;, ie. non-users would have to login before they can view content, I think this is a better solution than a per-user selection for core, Simply for the fact that its a common thing to want to close a WordPress install off completely during development, significant changes, or mearly needing to shut off access to content for awhile..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10535.2.diff attached to Ticket #10535</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10535/10535.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10535/10535.2.diff/1249219569000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:5/1249219491000000</guid>
      <description>&lt;p&gt;
On the other hand, Hakre's solution also works on PHP 5.2+ at least, And the overhead of either is incredibly tiny..
&lt;/p&gt;
&lt;p&gt;
Mine's just fixing the current function, hakre's is replacing the current function with spl_ or uniqid (Which is the same as using the current static var basically.. just doesnt have the current bug of 0)
&lt;/p&gt;
&lt;p&gt;
I'd like to see spl_object_hash() used.. But its not being used correctly in hakre's patch, Theres no reason to store it.
&lt;/p&gt;
&lt;p&gt;
If the hash function was to be used, i'd do it like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	} else if (is_object($function[0]) ) { // Object Class Calling
		if ( function_exists('spl_object_hash') )
			return spl_object_hash($function[0]) . $function[1];
		$obj_idx = get_class($function[0]).$function[1];
		if ( !isset($function[0]-&amp;gt;wp_filter_id) ) {
&lt;/pre&gt;&lt;p&gt;
Theres no need to store the wp_filter_id in that case, its completely redundant, as it'll return the exact same string the next time its called.
&lt;/p&gt;
&lt;p&gt;
See my 2nd patch for incluson of spl_object_hash (And no, for those interested, the extra function_exists() call adds minimal overhead, about 0.000005 over 10,000 iterations for me..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:05:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:4/1249218338000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:04:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:3/1249218291000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 10535.diff added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Main change is lines 685-7, the rest are just WordPress Coding Standard cleanups.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Testing code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;include 'wp-load.php';
class Foo {	function test() { echo 'TEST'; } }
class Baz extends Foo { }
$a = new Foo();
$b = new Foo();
$c = new Baz();
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$b, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$c, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$b, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$c, 'test'), 10) );
do_action('test');
&lt;/pre&gt;&lt;p&gt;
Output before:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'Footest0' (length=8)
string 'Footest0' (length=8)
string 'Baztest0' (length=8)
string 'Footest3' (length=8)
string 'Footest4' (length=8)
string 'Baztest5' (length=8)
&lt;/pre&gt;&lt;p&gt;
Notice that the FIRST calling will return 0, not 3, 4 or 5?
&lt;/p&gt;
&lt;p&gt;
Testing it again:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
&lt;/pre&gt;&lt;p&gt;
output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'Footest0' (length=8)
string 'Footest3' (length=8)
string 'Footest3' (length=8)
&lt;/pre&gt;&lt;p&gt;
So its just the first calling which is failing.
&lt;/p&gt;
&lt;p&gt;
After my patch, Here's the output of the first test case:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'Footest3' (length=8)
string 'Footest4' (length=8)
string 'Baztest5' (length=8)
string 'Footest3' (length=8)
string 'Footest4' (length=8)
string 'Baztest5' (length=8)
&lt;/pre&gt;&lt;p&gt;
Which is now correct, $a = 3, $b = 4, $c = 5 each time, Whereas before, All would be 0 first call, and 3/4/5 2nd and every call after..
&lt;/p&gt;
&lt;p&gt;
Lets test filter/action adding/removing.
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'test', array(&amp;amp;$a, 'test') );
remove_action( 'test', array(&amp;amp;$a, 'test') );
do_action('test');
&lt;/pre&gt;&lt;p&gt;
Before:
&lt;/p&gt;
&lt;pre class="wiki"&gt;TEST
&lt;/pre&gt;&lt;p&gt;
Seems the filter hasnt been removed (As expected, since its ID differs)
&lt;/p&gt;
&lt;p&gt;
After patch:
&lt;/p&gt;
&lt;pre class="wiki"&gt;NULL OUTPUT
&lt;/pre&gt;&lt;p&gt;
No output, Therefor, Action was removed.
&lt;/p&gt;
&lt;p&gt;
Sorry for the long post, But thats the method i've used to test, 99% sure this has no negitive side effects, It works with multiple instances of objects, as  well as different objects, Functions and Static calling isnt touched.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10535.diff attached to Ticket #10535</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10535/10535.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10535/10535.diff/1249217746000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:2/1249217745000000</guid>
      <description>&lt;p&gt;
correct credits are:
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m6cac0d84"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/m6cac0d84&lt;/a&gt; (simonwheatley)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:1/1249217700000000</guid>
      <description>&lt;p&gt;
that's by design, because it should generate a new id each time. anyway the current implementation might have it's design flaws and there might be possibility to improve it. irc suggestions were:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m6cac0d84"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/m6cac0d84&lt;/a&gt; (&lt;a class="ext-link" href="http://wordpress.pastebin.com/m34bad8d7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/m34bad8d7&lt;/a&gt;)
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m34bad8d7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/m34bad8d7&lt;/a&gt; (DD32)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") reopened</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:40:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:6/1249216815000000</guid>
      <description>&lt;p&gt;
Re-opening as have been getting a lot of requests for this functionality, and Matt supported the idea of including it at this point. Would like to see discussion of whether it should be in core or remain plugin territory.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) created</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535/1249215738000000</guid>
      <description>&lt;p&gt;
Ref &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8723" title="#8723: defect (bug): Instances of same class that call variable hook first generate same ... (closed: fixed)"&gt;#8723&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The first time _wp_filter_build_unique_id is used to generate an ID the ID returned is different to the second time it is called. This presents a problem if the first ID is used when adding a filter which then needs to be removed later in the app flow... as the IDs don't match the filter is unremovable.
&lt;/p&gt;
&lt;p&gt;
One workaround proposed is to set a wp_filter_id property before add the filter, and this will cause _wp_filter_build_unique_id to bypass the problem code and effectively forces the "unique" ID which is generated... this workaround feels unpoetic. ;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10293 (Error conditions of WPDB unparseable by Code) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 11:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10293#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10293#comment:3/1249213899000000</guid>
      <description>&lt;p&gt;
Any opinions from anyone on this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 09:57:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527#comment:6/1249207030000000</guid>
      <description>&lt;p&gt;
Another Idea is to have an additional function called &lt;em&gt;load_plug_textdomain_once()&lt;/em&gt; and &lt;em&gt;load_textdomain_once()&lt;/em&gt;. But that would help to keep the existing function signatures untouched but it would mean more code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7376 (Allow merging of similarly named text domains) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 09:53:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7376#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7376#comment:4/1249206831000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10286" title="#10286: defect (bug): load_textdomain: Incorrect PHPDoc and possibly unwanted merging behaviour (closed: fixed)"&gt;#10286&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10527" title="#10527: enhancement: load_textdomain() merges even if not needed. (closed: fixed)"&gt;#10527&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10286 (load_textdomain: Incorrect PHPDoc and possibly unwanted merging behaviour) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 09:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10286#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10286#comment:7/1249206770000000</guid>
      <description>&lt;p&gt;
Regarding the merging Feature, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7376" title="#7376: enhancement: Allow merging of similarly named text domains (closed: fixed)"&gt;#7376&lt;/a&gt; for implementation details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6840 (Stale enclosures are not removed if post is edited.) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6840#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6840#comment:19/1249203365000000</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #6840 (Stale enclosures are not removed if post is edited.) updated</title>
      
        <dc:creator>windyweather</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6840#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6840#comment:18/1249203073000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry... this is the old bug. I see that the new one is &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10511" title="#10511: defect (bug): Enclosure Custom Fields are automatically deleted (reopened)"&gt;#10511&lt;/a&gt;. Sorry.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6840 (Stale enclosures are not removed if post is edited.) reopened</title>
      
        <dc:creator>windyweather</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6840#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6840#comment:17/1249202863000000</guid>
      <description>&lt;p&gt;
I'm still seeing this problem in 2.8.2. Unless the last function performed is "Add Custom Field", for something like Slippery 1, the custom field disappears. Each time the post is updated, the custom field disappears. I have set the default theme and disabled all plugins and the custom fields still disappear. I'm going to reopen based on this behavior.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:24:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:71/1249201447000000</guid>
      <description>&lt;p&gt;
Attached edit-pages.diff which fixes a few notices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>edit-pages.diff attached to Ticket #4529</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4529/edit-pages.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4529/edit-pages.diff/1249201378000000</guid>
      <description>&lt;p&gt;
Fix for notices in edit-pages
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:19:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527#comment:5/1249201168000000</guid>
      <description>&lt;p&gt;
Updated the patch. Defaults to true now for &lt;em&gt;load_textdomain()&lt;/em&gt;. Fixed the typo in comments as well as taking care of line-length in the docblock comments and stricter writing according to the wordpress coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10527-netbeans.patch attached to Ticket #10527</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10527/10527-netbeans.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10527/10527-netbeans.patch/1249200968000000</guid>
      <description>&lt;p&gt;
Test of a netbeans diff export on the same changes.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>10527.2.patch attached to Ticket #10527</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:15:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10527/10527.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10527/10527.2.patch/1249200924000000</guid>
      <description>&lt;p&gt;
Updated Patch reflecting defaults and further comment improvements
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [11765]: More cap checks, for 2.8</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 02 Aug 2009 02:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11765/1249179883613942</guid>
      <description>&lt;p&gt;
More cap checks, for 2.8
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11764]: More cap checks, for trunk</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 02 Aug 2009 02:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11764/1249179834093784</guid>
      <description>&lt;p&gt;
More cap checks, for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>