<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #47594 (Add nbsp symbol codes to convert throught sanitize_title) updated</title>
      
        <dc:creator>adhitya03</dc:creator>

      <pubDate>Sun, 21 Jul 2019 23:49:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47594#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47594#comment:4/1563752981393489</guid>
      <description>&lt;p&gt;
Hi,I wanna make a patch for this but I need clarify something so I don't get it wrong.&lt;br /&gt;
In this case, do mean "Default filters needs to be supplemented nbsp" is to sanitize all kind of Unicode characters of SPACE to be its HTML Entity "&amp;amp;nbsp" ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47750 ('x' changes to Multiplication sign when it's between numbers in Post Title) created</title>
      
        <dc:creator>dibbyo456</dc:creator>

      <pubDate>Sun, 21 Jul 2019 21:52:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47750</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47750/1563745950551324</guid>
      <description>&lt;p&gt;
When you create post with title &lt;strong&gt;1080x2340&lt;/strong&gt; or &lt;strong&gt;'400x500'&lt;/strong&gt;, WordPress changes the '&lt;strong&gt;x&lt;/strong&gt;' to Multiplication sign (&amp;amp;#215;) while output.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How to reproduce:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
1) Create a post with Title '&lt;strong&gt;400x500&lt;/strong&gt;' (Remember you need to put the 'x' between numbers without any spaces just like the example I gave).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
2) Now open the post in browser you would able to the see 'x' is transformed to multiplication sign (&amp;amp;#215;)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
=====&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Pictures for better understanding.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://s.put.re/kKiXHksC.png"&gt;&lt;img src="https://s.put.re/kKiXHksC.png" alt="https://s.put.re/kKiXHksC.png" crossorigin="anonymous" title="https://s.put.re/kKiXHksC.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://s.put.re/pyvRQw9q.png"&gt;&lt;img src="https://s.put.re/pyvRQw9q.png" alt="https://s.put.re/pyvRQw9q.png" crossorigin="anonymous" title="https://s.put.re/pyvRQw9q.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://s.put.re/kWD7W9gQ.png"&gt;&lt;img src="https://s.put.re/kWD7W9gQ.png" alt="https://s.put.re/kWD7W9gQ.png" crossorigin="anonymous" title="https://s.put.re/kWD7W9gQ.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38744 (Can't login with email address that contains an apostrophe) updated</title>
      
        <dc:creator>adhitya03</dc:creator>

      <pubDate>Sun, 21 Jul 2019 20:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38744#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38744#comment:13/1563742758812627</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47268 (Vimeo videos not working on Chrome) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sun, 21 Jul 2019 20:13:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47268#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47268#comment:8/1563740003224196</guid>
      <description>&lt;p&gt;
Hi @luciantucker &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The video located at &lt;a class="ext-link" href="https://lucian.humspace.ucla.edu/wp/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://lucian.humspace.ucla.edu/wp/&lt;/a&gt;&lt;br /&gt;
works fine on my side when I click on the "play" button. I'm using Chrome 75.0.3770.142 / Mac OS 10.12.6.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47747 (Strange Edit Box Only On Site) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sun, 21 Jul 2019 20:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47747#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47747#comment:1/1563739682887758</guid>
      <description>invalid: &lt;p&gt;
Welcome to WordPress Core Trac, @garypjackson &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
WordPress Core Trac is dedicated to WordPress Development, not support. You can use &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support&lt;/a&gt; for general support. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In this particular case, you should rather use your theme support forum because it's probably related to your theme.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I can't see any "edit" link on your website and I can't access your Admin dashboard.&lt;br /&gt;
I guess you're talking of the "Edit" link displayed for logged in users.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Closing as &lt;code&gt;invalid&lt;/code&gt;. Feel free to reopen it if needed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers,&lt;br /&gt;
Jb&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>zhenmue</dc:creator>

      <pubDate>Sun, 21 Jul 2019 19:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:74/1563736650589829</guid>
      <description>&lt;p&gt;
Using the Build 6 of LSWS, haven't seen this issue again since the update, almost 48 hours free issues.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39338#comment:73" title="Comment 73"&gt;mortezafarsiabi&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
i de active lite speed cash and it was good for hours its running again &lt;br /&gt;
nobody find any solution?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Read comment 70.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47749 (Build tools: remove all old files when cleaning) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Jul 2019 19:01:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47749#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47749#comment:1/1563735687882281</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 47749.diff: fix the &lt;code&gt;clean&lt;/code&gt; task to clean old files from both /build and /src.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The patch also contains some unrelated WPCS fixes in Gruntfile.js.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47749.diff attached to Ticket #47749</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Jul 2019 18:58:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47749/47749.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47749/47749.diff/1563735538828302</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47749 (Build tools: remove all old files when cleaning) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Jul 2019 18:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47749</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47749/1563735385733701</guid>
      <description>&lt;p&gt;
Currently running &lt;code&gt;clean&lt;/code&gt; doesn't delete all old files. It either cleans only &lt;code&gt;/build&lt;/code&gt; or only the inline files in &lt;code&gt;/src&lt;/code&gt;. This can get confusing when switching the building location.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The presence of the build files in &lt;code&gt;/src&lt;/code&gt; can also cause some problems when doing &lt;code&gt;grunt precommit&lt;/code&gt; or building to &lt;code&gt;/build&lt;/code&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47078" title="#47078: defect (bug): Building may fail to generate *-rtl.css files in wp-includes/css (closed: fixed)"&gt;#47078&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47748 (Getting "jetpack_tracks_get_identity is deprecated" error in wp-includes) updated</title>
      
        <dc:creator>mozdzanowski</dc:creator>

      <pubDate>Sun, 21 Jul 2019 17:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47748#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47748#comment:2/1563729948236743</guid>
      <description>&lt;p&gt;
@TimothyBlynJacobs &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ah got it. Thanks for clarifying, and those links to the WC issues.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47748 (Getting "jetpack_tracks_get_identity is deprecated" error in wp-includes) closed</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 21 Jul 2019 17:22:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47748#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47748#comment:1/1563729747480048</guid>
      <description>invalid: &lt;p&gt;
Hi @mozdzanowski!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While the error references &lt;code&gt;wp-includes&lt;/code&gt;, this is actually an issue in WooCommerce: &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/24067"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues/24067&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/Automattic/woocommerce-services/issues/1633"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/woocommerce-services/issues/1633&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/pull/24050"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/pull/24050&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason for the &lt;code&gt;wp-includes&lt;/code&gt; reference is because WooCommerce is using the &lt;code&gt;_deprecated_function&lt;/code&gt; API which triggers an error from WordPress Core code. This can give a bit of a misleading error message.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #47748 (Getting "jetpack_tracks_get_identity is deprecated" error in wp-includes) created</title>
      
        <dc:creator>mozdzanowski</dc:creator>

      <pubDate>Sun, 21 Jul 2019 17:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47748</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47748/1563729173437162</guid>
      <description>&lt;p&gt;
Not exactly sure if this is the place for this particular issue, but I'm having a problem with WooCommerce services(shipping calculator) that I believe are powered by Jetpack, so I understand this could be related.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The error is the following:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: jetpack_tracks_get_identity is deprecated since version jetpack-7.5! Use Automattic\Jetpack\Tracking-&amp;gt;tracks_get_identity instead. in /HIDDEN/wp-includes/functions.php on line 4435
&lt;/pre&gt;&lt;p&gt;
Seems like an issue between core WP and Jetpack, more on the core side, eg. problem is located in wp-includes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm on a phone posting this at the moment so I haven't been able to check or update a fix. Thought I'd bring it to attention. Need to get a fix.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47747 (Strange Edit Box Only On Site) created</title>
      
        <dc:creator>garypjackson</dc:creator>

      <pubDate>Sun, 21 Jul 2019 15:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47747</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47747/1563724291718772</guid>
      <description>&lt;p&gt;
I'm using Opera browser on Windows 10 &lt;br /&gt;
WordPress 5.2.2 running Surplus Concert theme&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When in customising mode the site, which as you'll see is in it's infancy is fine, but the actual online site so to speak has a pink "edit" button bottom left of the image which will allow anyone into my wordpress dashboard etc.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The site is www.my-generation.org.uk &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47587 (Parent Page dropdown is missing in Page Attributes on Pages - WP 5.2.2) reopened</title>
      
        <dc:creator>aparker48</dc:creator>

      <pubDate>Sun, 21 Jul 2019 14:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47587#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47587#comment:6/1563718622077109</guid>
      <description>&lt;p&gt;
Sorry, but this is happening to me also with WP 5.2.2 and I have over 107 pages on the site and have used Health Check.  When I turn on Health Check the parent pages drop-down magically appears on my editor pages. I can turn on ALL my plugins and as long as I have Health Check running, the Parent Page selection is available from the editor.  Turn off Health Check and Parent Page selection disappears and it is back to publishing the page and going out to the page listings to use quick edit to set the parent.  There is a problem in there somewhere, but I cannot find it.  Please investigate this again and report any workarounds or fixes.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>mortezafarsiabi</dc:creator>

      <pubDate>Sun, 21 Jul 2019 11:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:73/1563707367787554</guid>
      <description>&lt;p&gt;
i de active lite speed cash and it was good for hours its running again &lt;br /&gt;
nobody find any solution?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47559 (Subtitle tracks use English as default (hardcoded) in track element ...) updated</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Sun, 21 Jul 2019 10:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47559#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47559#comment:5/1563704263420399</guid>
      <description>&lt;p&gt;
Hi @afercia, &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Great to hear this issue is considered for 5.3. What's the next step in making this happen? Is there already a plan for fixing the UI/UX for the subtitles? Or is this something we need to discuss? &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>jacobcolton</dc:creator>

      <pubDate>Sun, 21 Jul 2019 07:40:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:72/1563694809492954</guid>
      <description>&lt;p&gt;
Has anyone tried 5.3.8 build 6, does it work?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47746 (PHP 7.4 compatibility fix / implode argument order) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 21 Jul 2019 07:21:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47746#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47746#comment:3/1563693689789356</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47746#comment:2" title="Comment 2"&gt;johnbillion&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The changes to Requests and Simplepie need to be made upstream to their respective repos.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The other two changes look good.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Pull requests to both upstream repos have already been opened (see links above), but neither is very actively maintained.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;Requests&lt;/code&gt; dependency in Core is at the latest version - &lt;code&gt;1.7&lt;/code&gt; -, but that version was released in October 2016 (!!!).&lt;br /&gt;
Ref: &lt;a class="ext-link" href="https://github.com/rmccue/Requests/releases"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/rmccue/Requests/releases&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;Requests&lt;/code&gt; repo has had no commits since December 2017 and only a few, mostly DevOps related ones since the last release.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;SimplePie&lt;/code&gt; dependency in Core is at version &lt;code&gt;1.3.1&lt;/code&gt; - which was released in October 2012 😰, while the current version is &lt;code&gt;1.5.2&lt;/code&gt; released in August 2018.&lt;br /&gt;
Ref: &lt;a class="ext-link" href="https://github.com/simplepie/simplepie/releases"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/simplepie/simplepie/releases&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And while the &lt;code&gt;SimplePie&lt;/code&gt; repo has actually had some commits this year (February), the version used in WP Core is pretty far behind the latest release.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, yes, while I agree that the fixes should primarily be made upstream, I don't think WP should be throwing deprecation notices when run on PHP 7.4 while we are waiting for&lt;br /&gt;
1) new releases from upstream and&lt;br /&gt;
2) the existing WP Core versions of those libraries to be updated.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47746 (PHP 7.4 compatibility fix / implode argument order) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 21 Jul 2019 06:56:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47746#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47746#comment:2/1563692217660771</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The changes to Requests and Simplepie need to be made upstream to their respective repos.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The other two changes look good.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47746 (PHP 7.4 compatibility fix / implode argument order) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 21 Jul 2019 06:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47746#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47746#comment:1/1563690353442849</guid>
      <description>&lt;p&gt;
FYI: I have reviewed &lt;strong&gt;ALL&lt;/strong&gt; function calls to &lt;code&gt;implode()&lt;/code&gt; and &lt;code&gt;join()&lt;/code&gt; to get at this patch. Based on the current &lt;code&gt;trunk&lt;/code&gt;, there are no remaining issues.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47746-fix-implode-argument-order.patch attached to Ticket #47746</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 21 Jul 2019 06:24:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47746/47746-fix-implode-argument-order.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47746/47746-fix-implode-argument-order.patch/1563690262926206</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47746 (PHP 7.4 compatibility fix / implode argument order) created</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 21 Jul 2019 06:22:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47746</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47746/1563690162447206</guid>
      <description>&lt;p&gt;
&lt;code&gt;implode()&lt;/code&gt; takes two parameters, &lt;code&gt;$glue&lt;/code&gt; and &lt;code&gt;$pieces&lt;/code&gt;.&lt;br /&gt;
For historical reasons, &lt;code&gt;implode()&lt;/code&gt; accepted these parameters in either order, though it was recommended to use the documented argument order of &lt;code&gt;implode( $glue, $pieces )&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP 7.4 is slated to deprecate the tolerance for passing the parameters for &lt;code&gt;implode()&lt;/code&gt; in reverse order.&lt;br /&gt;
PHP 8.0 is expected to remove the tolerance for this completely.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Refs:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wiki.php.net/rfc/deprecations_php_7_4#implode_parameter_order_mix"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wiki.php.net/rfc/deprecations_php_7_4#implode_parameter_order_mix&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://php.net/manual/en/function.implode.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://php.net/manual/en/function.implode.php&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Related:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/rmccue/Requests/pull/346"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/rmccue/Requests/pull/346&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/simplepie/simplepie/pull/617"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/simplepie/simplepie/pull/617&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note: &lt;code&gt;join()&lt;/code&gt; is an alias of &lt;code&gt;implode()&lt;/code&gt;. It is generally considered best practice to use the canonical function rather than an alias, however, that is outside the scope of this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>mortezafarsiabi</dc:creator>

      <pubDate>Sun, 21 Jul 2019 05:16:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:71/1563686170296192</guid>
      <description>&lt;p&gt;
i have this issue &lt;br /&gt;
its abouts litespeed cash plugin, de active it till new update&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47745 (get_term will send back term_id as string if $filter = 'edit'. Use of ...) created</title>
      
        <dc:creator>majemedia</dc:creator>

      <pubDate>Sun, 21 Jul 2019 00:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47745</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47745/1563669385490725</guid>
      <description>&lt;p&gt;
The file "edit-tag-form.php" contains multiple hooks that pass $tag as an argument.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Within each of these hooks the $tag-&amp;gt;term_id type is &lt;code&gt;string&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
using this as a test against a vanilla 5.2.2 &amp;amp; trunk site (theme: twentynineteen, plugins: none... not even akismet and hello).&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;add_action( 'edit_category_form_fields', 'test_category_term_id_type' );
function test_category_term_id_type( $tag ) {
        error_log( gettype( $tag-&amp;gt;term_id ) );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;[21-Jul-2019 00:04:41 UTC] string&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$tag&lt;/code&gt; is set in &lt;code&gt;term.php&lt;/code&gt; using &lt;code&gt;get_term&lt;/code&gt; using the filter &lt;code&gt;'edit'&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
within the &lt;code&gt;get_term()&lt;/code&gt; method &lt;code&gt;$_term&lt;/code&gt; is filtered by &lt;code&gt;edit&lt;/code&gt; which then utilizes &lt;code&gt;sanitize_term()&lt;/code&gt; which passes the term object through &lt;code&gt;sanitize_term_field&lt;/code&gt; which uses &lt;code&gt;$context='edit'&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Within sanitize_term_field if &lt;code&gt;$context='edit'&lt;/code&gt; the field is passed through &lt;code&gt;esc_attr()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;esc_attr()&lt;/code&gt; immediately casts the value sent to it to &lt;code&gt;(string)&lt;/code&gt; and then returns it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Other places where &lt;code&gt;edit&lt;/code&gt; is used as a filter in core for &lt;code&gt;get_term&lt;/code&gt;: &lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;class-wp-terms-list-table.php | column_name()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;taxonomy.php | get_category_to_edit()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Chrome_75_With_and_Without_Edits.jpg attached to Ticket #47744</title>
      
        <dc:creator>billybidley</dc:creator>

      <pubDate>Sat, 20 Jul 2019 20:49:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47744/Chrome_75_With_and_Without_Edits.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47744/Chrome_75_With_and_Without_Edits.jpg/1563655786679138</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Safari_10.1_With_Edits.jpg attached to Ticket #47744</title>
      
        <dc:creator>billybidley</dc:creator>

      <pubDate>Sat, 20 Jul 2019 20:49:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47744/Safari_10.1_With_Edits.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47744/Safari_10.1_With_Edits.jpg/1563655778299908</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Safari_10.1_Without_Edits.jpg attached to Ticket #47744</title>
      
        <dc:creator>billybidley</dc:creator>

      <pubDate>Sat, 20 Jul 2019 20:49:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47744/Safari_10.1_Without_Edits.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47744/Safari_10.1_Without_Edits.jpg/1563655767412856</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47744 (WordPress default galleries do not display properly on Safari 10.1 and ...) created</title>
      
        <dc:creator>billybidley</dc:creator>

      <pubDate>Sat, 20 Jul 2019 20:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47744</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47744/1563655687555473</guid>
      <description>&lt;p&gt;
The following thread details the problem: &lt;a class="ext-link" href="https://stackoverflow.com/questions/33636796/chrome-safari-not-filling-100-height-of-flex-parent"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://stackoverflow.com/questions/33636796/chrome-safari-not-filling-100-height-of-flex-parent&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Images are nested inside a flex container. The child elements have a height of 100% which does not work on these older browsers such as Safari 10.1. This is because the parent element does not have a set height. So the child element doesn't know what 100% height is. The correct way to do it is to remove the 100% height from everything and use flex throughout the elements.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;.wp-block-gallery .blocks-gallery-image, .wp-block-gallery .blocks-gallery-item {
		flex-direction: row;
	}
.wp-block-gallery .blocks-gallery-image figure, .wp-block-gallery .blocks-gallery-item figure {
		height: auto;
		align-items: stretch;
	}
.wp-block-gallery.is-cropped .blocks-gallery-image a, .wp-block-gallery.is-cropped .blocks-gallery-image img, .wp-block-gallery.is-cropped .blocks-gallery-item a, .wp-block-gallery.is-cropped .blocks-gallery-item img {
		height: auto;
		display: flex;
	}
.wp-block-gallery .blocks-gallery-image figcaption, .wp-block-gallery .blocks-gallery-item figcaption {
		left: 0;
	}
&lt;/pre&gt;&lt;p&gt;
The above CSS fixes the issue and should replace the current CSS.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47742 (sorting by date incorrect) updated</title>
      
        <dc:creator>lamaan</dc:creator>

      <pubDate>Sat, 20 Jul 2019 20:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47742#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47742#comment:3/1563654886147690</guid>
      <description>&lt;p&gt;
The UI says last modified before each date in the results. This should for consistency's sake say last published if that is what it is sorting by. I have a large number of privately published pages, this is at least a miscommunication of what it is sorting by.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46387 (Undefined index notice in wp-includes/l10n.php on line 950) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 20 Jul 2019 19:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46387#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46387#comment:8/1563649535334099</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46336" title="#46336: defect (bug): Support custom WP_PLUGIN_URL in load_script_textdomain() (closed: fixed)"&gt;#46336&lt;/a&gt; includes a fix for this as well.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46336 (Support custom WP_PLUGIN_URL in load_script_textdomain()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 20 Jul 2019 19:04:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46336#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46336#comment:1/1563649488799353</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/46336/46336.patch" title="Attachment '46336.patch' in Ticket #46336"&gt;46336.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/46336/46336.patch" title="Download"&gt;​&lt;/a&gt; also includes a fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46387" title="#46387: defect (bug): Undefined index notice in wp-includes/l10n.php on line 950 (closed: fixed)"&gt;#46387&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>46336.patch attached to Ticket #46336</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 20 Jul 2019 19:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/46336/46336.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/46336/46336.patch/1563649426097594</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47678 (Modernize/simplify current_user_can()) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 19:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47678#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47678#comment:31/1563649375866379</guid>
      <description>&lt;p&gt;
Ok, so I've now also reviewed all uses of &lt;code&gt;call_user_func_array()&lt;/code&gt; within WP Core and have uploaded the relevant patches.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
These are - as far as I'm concerned - the last patches for this ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Passing build which includes all non-committed patches: &lt;a class="ext-link" href="https://travis-ci.org/jrfnl/wordpress-develop/builds/561468904"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/jrfnl/wordpress-develop/builds/561468904&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To explain what I've done and the choices I've made - and more importantly, why a lot of function calls to &lt;code&gt;call_user_func_array()&lt;/code&gt; have &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; been changed, there are a couple of things one needs to know.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="a1.Spreadoperatorversusassociativearrays"&gt;1. Spread operator versus associative arrays&lt;/h2&gt;
&lt;p&gt;
The spread operator when used for unpacking an array to individual arguments in a function call &lt;em&gt;only works with numerically indexed arrays&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To explain this in code:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;call_user_func_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If &lt;code&gt;$args&lt;/code&gt; is &lt;em&gt;always&lt;/em&gt; a numerically indexed array, this can be replaced by:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If &lt;code&gt;$args&lt;/code&gt; is &lt;em&gt;could potentially be an associative array&lt;/em&gt;, this would need to be replaced by:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nb"&gt;array_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Now while &lt;code&gt;$callable( ...array_values( $args ) )&lt;/code&gt; would still potentially be faster than &lt;code&gt;call_user_func_array( $callable, $args )&lt;/code&gt;, the benefits are so small that it is rarely worth replacing these.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Conclusion: If there is any doubt over whether or not &lt;code&gt;$args&lt;/code&gt; &lt;em&gt;could&lt;/em&gt; be an associative array, the code should be left as is.&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There is one exception to this: if the &lt;code&gt;$args&lt;/code&gt; array was being created using an &lt;code&gt;array_merge()&lt;/code&gt;, then using &lt;code&gt;array_values()&lt;/code&gt; in combination with the spread operator is most definitely faster, so in a few instances those &lt;em&gt;have&lt;/em&gt; been replaced.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="a2.PHPcross-versioncompatibilityfordynamiccallstocallables."&gt;2. PHP cross-version compatibility for dynamic calls to callables.&lt;/h2&gt;
&lt;p&gt;
A callable can be defined in a number of different ways:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// Type 1: Simple callback
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'my_callback_function'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Type 2: Static class method call
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'MyClass'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'myCallbackMethod'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Type 3: Object method call
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'myCallbackMethod'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Type 4: Static class method call (As of PHP 5.2.3)
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'MyClass::myCallbackMethod'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Type 5: Relative static class method call (As of PHP 5.3.0)
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'parent::who'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Type 6: Objects implementing __invoke can be used as callables (since PHP 5.3)
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$param&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Type 7: Closures
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Source: &lt;a class="ext-link" href="https://www.php.net/manual/en/language.types.callable.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.php.net/manual/en/language.types.callable.php&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;is_callable()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; for all of the above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, in that case, you'd think it'd be safe to call each of these dynamically, wouldn't you ?&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// Replace call to `call_user_func( $callback, $param );`
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$param&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Replace call to `call_user_func_array( $callback, $params );`
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$params&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Unfortunately, that is not the case. It will work in 5 out of the 7 cases, but:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;callbacks to static methods declared as per Type 4 will &lt;strong&gt;fail&lt;/strong&gt; with a fatal error &lt;code&gt;Call to undefined function MyClass::myCallbackMethod()&lt;/code&gt; in PHP 5.6, though they will work fine in PHP 7 and above.
&lt;/li&gt;&lt;li&gt;callbacks to static methods declared as per Type 5 will &lt;strong&gt;fail&lt;/strong&gt; with a (catchable) fatal error &lt;code&gt;Call to undefined method MyClass::parent::myCallbackMethod&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See: &lt;a class="ext-link" href="https://3v4l.org/C28tc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/C28tc&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Conclusion: While the callback declarations of type 4 and type 5 are quite rare, for any call to &lt;code&gt;call_user_func_array()&lt;/code&gt; where the &lt;code&gt;$callback&lt;/code&gt; is user/plugin/theme defined, the function call to &lt;code&gt;call_user_func_array()&lt;/code&gt; should not be changed to a dynamic function call.&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="a3.call_user_func_arrayvscall_user_funcvsdynamicfunctioncalls"&gt;3. &lt;code&gt;call_user_func_array()&lt;/code&gt; vs &lt;code&gt;call_user_func()&lt;/code&gt; vs dynamic function calls&lt;/h2&gt;
&lt;p&gt;
As a rule of thumb for function call performance:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A direct function call - &lt;code&gt;function_call()&lt;/code&gt; - would be 1.
&lt;/li&gt;&lt;li&gt;A dynamic function call - &lt;code&gt;$function()&lt;/code&gt; - takes ~1.5x as long.
&lt;/li&gt;&lt;li&gt;A call via &lt;code&gt;call_user_func()&lt;/code&gt; takes ~2x as long.
&lt;/li&gt;&lt;li&gt;And a call via &lt;code&gt;call_user_func_array()&lt;/code&gt; takes ~3x as long.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
While point 2 explains why not all calls to &lt;code&gt;call_user_func_array()&lt;/code&gt; can be replaced by dynamic functions, here I will try to explain why they also can't all be replaced by calls to &lt;code&gt;call_user_func()&lt;/code&gt; in combination with the spread operator.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The short of it, is that &lt;code&gt;call_user_func()&lt;/code&gt; will always pass by value, while a dynamic function call and a call via &lt;code&gt;call_user_func_array()&lt;/code&gt; passes the variables and keeps references intact.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In code:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// This function expects to always be passed a variable by reference, not a plain value.
&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;my_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$param&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="nv"&gt;$callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'my_callback'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//my_callback( true ); // Fatal error: passing a value when reference is expected.
&lt;/span&gt;&lt;span class="nx"&gt;my_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK
&lt;/span&gt;&lt;span class="nx"&gt;my_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK
&lt;/span&gt;&lt;span class="nx"&gt;my_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK
&lt;/span&gt;
&lt;span class="c1"&gt;//$callback( true ); // Fatal error: passing a value when reference is expected.
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK
&lt;/span&gt;&lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK
&lt;/span&gt;
&lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// PHP 7.1+: Warning: Parameter 1 to my_callback() expected to be a reference, value given
&lt;/span&gt;&lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// PHP 7.1+: Warning: Parameter 1 to my_callback() expected to be a reference, value given
&lt;/span&gt;&lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// PHP 5.6+: Warning: Parameter 1 to my_callback() expected to be a reference, value given
&lt;/span&gt;&lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// PHP 7.0+: Warning: Parameter 1 to my_callback() expected to be a reference, value given
&lt;/span&gt;
&lt;span class="nb"&gt;call_user_func_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// PHP 7.0+: Warning: Parameter 1 to my_callback() expected to be a reference, value given
&lt;/span&gt;&lt;span class="nb"&gt;call_user_func_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// PHP 7.0+: Warning: Parameter 1 to my_callback() expected to be a reference, value given
&lt;/span&gt;&lt;span class="nb"&gt;call_user_func_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$b&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// PHP 5.6: Warning: Parameter 1 to my_callback() expected to be a reference, value given
&lt;/span&gt;&lt;span class="nb"&gt;call_user_func_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK
&lt;/span&gt;&lt;span class="nb"&gt;call_user_func_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// OK
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Here's the code on 3v4l to have a play with: &lt;a class="ext-link" href="https://3v4l.org/AfX8n"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/AfX8n&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This means that, even though &lt;code&gt;call_user_func()&lt;/code&gt; in combination with the spread operator performs better than &lt;code&gt;call_user_func_array()&lt;/code&gt;, it cannot always be used as a replacement if the function being called expects a variable passed by reference instead of a plain value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While to be fair, using reference is a &lt;em&gt;not a good idea™&lt;/em&gt; and should be avoided in most cases, we cannot ignore existing uses and while it would be better - over time - for those to be changed, until that time, we need to account for them.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This, in effect, means that, for instance &lt;code&gt;WP_Hooks::apply_filters()&lt;/code&gt; can not be simplified further as - even within WP Core -, there are filter functions which expect to receive the &lt;code&gt;$value&lt;/code&gt; to be filtered by reference.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Conclusion: When the &lt;code&gt;$callback&lt;/code&gt; is user/plugin/theme defined and it is not known whether or not it expects parameters by reference, calls to &lt;code&gt;call_user_func_array()&lt;/code&gt; can only safely be changed to dynamic function calls, not to a call to &lt;code&gt;call_user_func()&lt;/code&gt; in combination with the spread operator.&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Now, in case anyone is thinking "hang on, but I seem to remember that call-time pass by reference was deprecated/removed" ... ?&lt;br /&gt;
Yes, it is. Call-time pass by reference was deprecated in PHP 5.3 and removed in PHP 5.4, but is something different than what I'm talking about here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In code:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;my_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$param&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-- This is still fine and is what I'm talking about above.
&lt;/span&gt;
&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;my_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;- This has been deprecated/removed in PHP 5.3/5.4.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, the change to &lt;code&gt;do_action()&lt;/code&gt; as mentioned in &lt;a href="https://core.trac.wordpress.org/ticket/47678#comment:30"&gt;https://core.trac.wordpress.org/ticket/47678#comment:30&lt;/a&gt; is still perfectly valid.&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="Thepatches"&gt;The patches&lt;/h2&gt;
&lt;p&gt;
Having said the above, I've erred on the side of caution and &lt;strong&gt;only&lt;/strong&gt; made those changes which in my estimation were safe to make.&lt;br /&gt;
This includes not having made significant changes to functions using an arbitrary &lt;code&gt;$callback&lt;/code&gt; &lt;em&gt;even when those functions are never called with a type 4 or 5 callback from within WP or (confirmed by searches) from any plugin or theme&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;All of the patches for this ticket which have already been committed, are "safe" from the above described issues.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Of the existing, non-committed patches, there were two which could have run into point 2 of the above explanation. I have replaced these with new versions of those patches.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
All the new patches, of course, comply with the above conclusions.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Additionalnotes"&gt;Additional notes&lt;/h2&gt;
&lt;h3 id="Somepatchesdontaddaspreadoperator"&gt;Some patches don't add a spread operator&lt;/h3&gt;
&lt;p&gt;
A number of patches don't add the spread operator, but do remove the call to &lt;code&gt;call_user_func_array()&lt;/code&gt;. In none of these cases, the call to &lt;code&gt;call_user_func_array()&lt;/code&gt; was necessary in the first place, so I've just gotten rid of them.&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
P.S.: sometimes I hate PHP.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47678-select-unit-tests.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-select-unit-tests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-select-unit-tests.patch/1563648264614401</guid>
      <description>&lt;p&gt;
Simplify &amp;amp; modernize select unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-more-select-functions-in-wp-includes-deprecated.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:44:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-more-select-functions-in-wp-includes-deprecated.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-more-select-functions-in-wp-includes-deprecated.patch/1563648250549470</guid>
      <description>&lt;p&gt;
Simplify &amp;amp; modernize functions in wp-includes/deprecated.php &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt;  While these functions are deprecated, they can still get a minor performance boost in case they are being called.  For these functions I've verified that they &lt;strong&gt;are&lt;/strong&gt; still being called by &amp;gt; 1000 plugins, so IMO boosting their performance a little is warranted.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-__call.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-__call.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-__call.patch/1563648225463913</guid>
      <description>&lt;p&gt;
Simplify &amp;amp; modernize *::&lt;span class="underline"&gt;call()  The callback in these functions is always checked against a limited list of valid callbacks and those are not problematic, so these can be safely changed to dynamic function calls.
&lt;/span&gt;&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-Walker-display_element.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-Walker-display_element.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-Walker-display_element.patch/1563648205650762</guid>
      <description>&lt;p&gt;
Simplify Walker::display_element()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-wp_specialchars.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:42:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_specialchars.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_specialchars.patch/1563648177887887</guid>
      <description>&lt;p&gt;
Simplify wp_specialchars()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-WP_Customize_Widgets-get_widget_control.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:42:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Customize_Widgets-get_widget_control.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Customize_Widgets-get_widget_control.patch/1563648157370062</guid>
      <description>&lt;p&gt;
Simplify WP_Customize_Widgets::get_widget_control()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-wp_cron.php.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_cron.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_cron.php.patch/1563648133918786</guid>
      <description>&lt;p&gt;
Simplify wp_cron.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-WP_Rewrite-add_endpoint.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:41:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Rewrite-add_endpoint.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Rewrite-add_endpoint.patch/1563648108785743</guid>
      <description>&lt;p&gt;
WP_Rewrite::add_endpoint(): Remove redundant call to &lt;code&gt;func_get_arg()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-WP_Admin_Bar-add_node.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Admin_Bar-add_node.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Admin_Bar-add_node.patch/1563648093368551</guid>
      <description>&lt;p&gt;
WP_Admin_Bar::add_node(): Remove redundant calls to &lt;code&gt;func_get_arg()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-WP_Hook-apply_filters.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Hook-apply_filters.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Hook-apply_filters.patch/1563648077037140</guid>
      <description>&lt;p&gt;
Minor simplification of WP_Hook::apply_filters()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-wp_list_widgets-and-associated-unit-tests.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:40:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_list_widgets-and-associated-unit-tests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_list_widgets-and-associated-unit-tests.patch/1563648057615282</guid>
      <description>&lt;p&gt;
Modernize wp_list_widgets() and associated unit tests  ... and improve the readability of the code.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-wp_terms_checklist.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:40:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_terms_checklist.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_terms_checklist.patch/1563648038527564</guid>
      <description>&lt;p&gt;
Simplify wp_terms_checklist()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-wp_ajax_menu_get_metabox.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_ajax_menu_get_metabox.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_ajax_menu_get_metabox.patch/1563648014276556</guid>
      <description>&lt;p&gt;
Simplify wp_ajax_menu_get_metabox()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-walk_page_tree.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-walk_page_tree.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-walk_page_tree.patch/1563647996903918</guid>
      <description>&lt;p&gt;
Simplify walk_page_tree()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-walk_nav_menu_tree.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-walk_nav_menu_tree.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-walk_nav_menu_tree.patch/1563647983881386</guid>
      <description>&lt;p&gt;
Simplify walk_nav_menu_tree()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-WP_Customize_Manager-import_theme_starter_.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Customize_Manager-import_theme_starter_.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Customize_Manager-import_theme_starter_.patch/1563647965189742</guid>
      <description>&lt;p&gt;
Modernize WP_Customize_Manager::import_theme_starter_content()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-WP_Customize_-check_capabilities.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Customize_-check_capabilities.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-WP_Customize_-check_capabilities.patch/1563647941647228</guid>
      <description>&lt;p&gt;
Simplify &amp;amp; modernize WP_Customize_*::check_capabilities()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-map_meta_cap-part-2.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-map_meta_cap-part-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-map_meta_cap-part-2.patch/1563647919557721</guid>
      <description>&lt;p&gt;
Use spread operator in map_meta_cap() &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47743 (autosave locks db and is slow) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47743#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47743#comment:1/1563647555086937</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47743 (autosave locks db and is slow) created</title>
      
        <dc:creator>lamaan</dc:creator>

      <pubDate>Sat, 20 Jul 2019 18:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47743</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47743/1563645647022289</guid>
      <description>&lt;p&gt;
If I have 2 tabs open editing pages, they have apparently got synchronised autosaves. These seem to compete for the db connection resulting in delays and occasional failures to autosave. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As a suggested way to fix this, you should consider only autosave queuing in the server side. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Another annoyance in autosave is that it prevents a normal save. If autosave is in progress I should be able to queue up a proper save to happen immediately after the autosave. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35416 (List children pages of another (in dashboard)) updated</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Sat, 20 Jul 2019 16:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35416#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35416#comment:8/1563640478393050</guid>
      <description>&lt;p&gt;
one thing is to review if it's good to be added in &lt;code&gt;public_query_vars&lt;/code&gt; or should be hardcoded into wp-query.php file itself.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35416-2.diff attached to Ticket #35416</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Sat, 20 Jul 2019 16:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35416/35416-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35416/35416-2.diff/1563640196778297</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>patch_for_page_sort_parent.diff attached to Ticket #35416</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Sat, 20 Jul 2019 16:22:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35416/patch_for_page_sort_parent.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35416/patch_for_page_sort_parent.diff/1563639735200886</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35416 (List children pages of another (in dashboard)) updated</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Sat, 20 Jul 2019 16:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35416#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35416#comment:7/1563639603574646</guid>
      <description>&lt;p&gt;
I am re-posting from this &lt;a href="https://core.trac.wordpress.org/ticket/47739"&gt;another topic&lt;/a&gt; (which was closed as duplicate for this topic), so I am attaching my patch here (@shital-patel seems you copied my attached patch, thanks, but I have modified it again as Sergey suggested in that topic), and I am also adding screenshots:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here screenshot - &lt;br /&gt;
left side is original, clicking on the parent slug makes the table sorted (as on the right screenshot)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/FFfosWn.png"&gt;&lt;img src="https://i.imgur.com/FFfosWn.png" alt="https://i.imgur.com/FFfosWn.png" crossorigin="anonymous" title="https://i.imgur.com/FFfosWn.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The attached patch is just my approximation, but I doubt that it will need some modification or revision, because I've added "post_parent" in public_query_vars&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35416.diff attached to Ticket #35416</title>
      
        <dc:creator>Shital Patel</dc:creator>

      <pubDate>Sat, 20 Jul 2019 15:59:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35416/35416.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35416/35416.diff/1563638365535893</guid>
      <description>&lt;p&gt;
Sorting Pages by parent
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39415 (Adding sms to list of allowed protocol) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Jul 2019 15:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39415#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39415#comment:5/1563636209216311</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39415,​46579 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Jul 2019 15:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39415%2C46579</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39415%2C46579/1563636144109019</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket, we're already tracking this enhancement in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39415" title="#39415: enhancement: Adding sms to list of allowed protocol (closed: fixed)"&gt;#39415&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #47651 (Provide required PHP version for plugins with minimum PHP requirement) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 20 Jul 2019 14:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47651#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47651#comment:24/1563631585305775</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Additionally, this patch is incomplete as the same issue occurs on &lt;code&gt;plugins.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47651 (Provide required PHP version for plugins with minimum PHP requirement) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 20 Jul 2019 14:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47651#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47651#comment:23/1563631396203707</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47651#comment:21" title="Comment 21"&gt;garrett-eclipse&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks @afragen&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I understand your preference there but am leaning more with @joyously as I'm hoping to get that information more readily available at a glance. Personally, when I first encountered the PHP requirement on a plugin I was so used to going to the Updates screen checking the all plugins box and hitting update that I overlooked one wasn't checked/updated as the updating screen only lists the plugins being updated I didn't realize one wasn't being done. It was only a bit later when I noticed the update icon+number was still there that I went back to find the issue.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm hoping a more prominent notice there will catch users eyes so they're aware of the issue and don't simply skip past it as I did.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@garrett-eclipse nothing in this ticket would prevent exactly what you did above. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The plugin won’t update and the general reason is displayed in a message. Unless you change the user’s behavior of clicking &lt;em&gt;Select All&lt;/em&gt;. This will continue to happen and the user will then look closer at the display and actually read the message.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The difference is that I don’t see this ticket as an improvement. I see it as cluttering the user’s screen with extraneous information that they can find elsewhere with a single click.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47651 (Provide required PHP version for plugins with minimum PHP requirement) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 20 Jul 2019 13:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47651#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47651#comment:22/1563630902006808</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47651#comment:20" title="Comment 20"&gt;joyously&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@afragen The other ticket was about something else. You are making the same arguments for this ticket as the other ticket. Well, the other one is done and we are living with it, and now think that it needs improvement.&lt;br /&gt;
This ticket is about the &lt;strong&gt;fact&lt;/strong&gt; that it is not helpful to have to click on the Details to see the important information of the version number needed. It's about making the interface easier for the user, to see at a glance why some plugins cannot be updated.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I’m making the same arguments as the same arguments apply.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What exactly are the &lt;strong&gt;facts&lt;/strong&gt;? Currently all I’ve seen is opinion - yours, mine, Garret’s, and Justin’s.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I appreciate that we all wish to improve WP but my opinion here is that displaying multiple different pieces of the same information (minimum PHP version) will be more confusing to the user than their ability to use the &lt;em&gt;View Details&lt;/em&gt; link.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thus far all we’ve been doing is going back and forth with our opinions. Can you point to significant evidence/data A/B testing to show an actual issue? How many issues directly relating to this are in the forums? Is that a significant number?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@joyously I’m waiting for the facts.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41155 (WordPress 4.8 Admin Sidebar Sub Menu Navigation Issue) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 20 Jul 2019 11:07:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41155#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41155#comment:13/1563620875434825</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by worldweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1563620873005800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42201 (Admin Sidebar Text length Issue) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 20 Jul 2019 11:07:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42201#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42201#comment:24/1563620875383547</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by worldweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1563620873005800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39625 (Give an error message when a non-image is uploaded for featured image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 20 Jul 2019 11:07:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39625#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39625#comment:12/1563620875330128</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by worldweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1563620873005800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47678-wp_iframe.2.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 03:33:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_iframe.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_iframe.2.patch/1563593591622527</guid>
      <description>&lt;p&gt;
Ignore/remove
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #46227 (Add Rel-Feed Link to Header) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 20 Jul 2019 03:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46227#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46227#comment:16/1563593551714341</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Your statement is correct. However, I only scoped this ticket to adding the link for rel-feed when the front page of the site is not the posts page, as this adds a defined benefit we don't have now...allowing for feed discovery in a not unpopular case.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Suggesting the second issue...adding it to rel-alternate situations, should be a separate ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47678-wp_iframe.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 03:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_iframe.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_iframe.patch/1563593528606179</guid>
      <description>&lt;p&gt;
Simplify &amp;amp; modernize wp_iframe()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47678-wp_dashboard_cached_rss_widget.patch attached to Ticket #47678</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 20 Jul 2019 03:27:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_dashboard_cached_rss_widget.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47678/47678-wp_dashboard_cached_rss_widget.patch/1563593248640965</guid>
      <description>&lt;p&gt;
Simplify &amp;amp; modernize wp_dashboard_cached_rss_widget()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47644 (Improve wording for PHP update warning in Site Health) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Jul 2019 02:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47644#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47644#comment:17/1563589167021214</guid>
      <description>&lt;p&gt;
What's the reason for changing "build and maintain WordPress" to "power WordPress"? Maybe it's just me, but the former seems a bit easier to read and translate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47718 (Verification of new admin email address can be bypassed via options.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Jul 2019 02:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47718#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47718#comment:6/1563588662623950</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46227 (Add Rel-Feed Link to Header) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 20 Jul 2019 00:13:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46227#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46227#comment:15/1563581619216772</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello All, Thank you for the patches to date on this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I took a moment to read through the reference material (&lt;a class="ext-link" href="https://blog.whatwg.org/feed-autodiscovery"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://blog.whatwg.org/feed-autodiscovery&lt;/a&gt;) and feel we're going in the wrong direction here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The 'feed' relationship is to indicate that the reference document is a syndication feed NOT a page.&lt;br /&gt;
"we have introduced a new feed relationship which indicates that the referenced document is a syndication feed. This now allows you to link to several different feeds containing different content which are not necessarily alternate versions of the page."&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In WP feed &amp;lt;link&amp;gt;'s are introduced in several places with the &lt;code&gt;alternate&lt;/code&gt; relationship attribute in many cases the issue with them is that they aren't 'necessarily alternate representations of the page' which is where the &lt;code&gt;feed&lt;/code&gt; relationship comes in as it 'allows you to link to several different feeds containing different content which are not necessarily alternate versions of the page.'&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"The feed keyword can also be used in combination with alternate to say that it is specifically the feed for the current document."&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So to my understanding the existing feed &amp;lt;link&amp;gt;s should be updated to use 'rel="feed"' with the exception of the blog page itself which should use 'rel="feed alternate"' as the feed is actually an &lt;code&gt;alternate&lt;/code&gt; representation of the page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The existing locations which should be looked at;&lt;br /&gt;
Ones I feel should just be 'rel="feed"' unless they reside on the blog page;&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Blog RSS - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom-comments.php#L57"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom-comments.php#L57&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Feed Link - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/general-template.php#L2835"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/general-template.php#L2835&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Comment Feed Link - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/general-template.php#L2846"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/general-template.php#L2846&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Multi-Feed Link - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/general-template.php#L2932"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/general-template.php#L2932&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Ones I feel should be 'rel="feed alternate"';&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Comment Feed - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom-comments.php#L49"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom-comments.php#L49&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Search Feed - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom-comments.php#L53"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom-comments.php#L53&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Comment Link - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom-comments.php#L91"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom-comments.php#L91&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Atom Feed Link - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom.php#L35"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom.php#L35&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Atom Feed Link - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom.php#L67"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/feed-atom.php#L67&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In no way am I a RSS/Atom Guru so would love some insight from a more experienced dev, @dshanske any thoughts?&lt;br /&gt;
*I very well may be wrong in which case sorry for the scare.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As well this is an enhancement and not a bug so shouldn't be on a minor milestone as it's not a reversion introduced in 5.2 so moving into 5.3 for further discussion.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I apologize to those who already submitted a patch as I had done, I should have delved deeper initially.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
*Note: All quoted text comes from the reference material - &lt;a class="ext-link" href="https://blog.whatwg.org/feed-autodiscovery"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://blog.whatwg.org/feed-autodiscovery&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>