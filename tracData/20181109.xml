<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #45315 (Canonical redirection should compare URLs taking encoding into account) updated</title>
      
        <dc:creator>straussd</dc:creator>

      <pubDate>Fri, 09 Nov 2018 21:12:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45315#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45315#comment:1/1541797975134284</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I created &lt;a class="ext-link" href="https://github.com/davidstrauss/wp-rebuild-url/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a workaround&lt;/a&gt; that's possible to prepend to &lt;code&gt;wp-config.php&lt;/code&gt; or use with &lt;code&gt;php.ini&lt;/code&gt; prepend functionality. It reprocesses the query string to produce one with equivalent meaning (after decoding) but meeting the expectations of the canonical URL component.
&lt;/p&gt;
&lt;p&gt;
The re-encoding method in the workaround should also have no false positives (in the sense of causing the canonical redirection logic to not redirect when it should).
&lt;/p&gt;
&lt;p&gt;
Dropping severity to "minor" given the workaround.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45322 (Editing a draft post with wp.editPost causes its published date to be set) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 09 Nov 2018 20:22:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45322#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45322#comment:4/1541794954505412</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45322 (Editing a draft post with wp.editPost causes its published date to be set) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Fri, 09 Nov 2018 20:17:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45322#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45322#comment:3/1541794665617513</guid>
      <description>&lt;p&gt;
I am going to work on unit tests to attach along with the code patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45322 (Editing a draft post with wp.editPost causes its published date to be set) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 20:04:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45322#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45322#comment:2/1541793887517335</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by redsweater. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1541793883033800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45322 (Editing a draft post with wp.editPost causes its published date to be set) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 20:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45322#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45322#comment:1/1541793818185975</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #mobile by redsweater. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/mobile/p1541793817016500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fix-wp-editpost-draft-dates.patch attached to Ticket #45322</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Fri, 09 Nov 2018 20:01:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/45322/fix-wp-editpost-draft-dates.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/45322/fix-wp-editpost-draft-dates.patch/1541793695226159</guid>
      <description>&lt;p&gt;
Patch to fix the described the bug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #45322 (Editing a draft post with wp.editPost causes its published date to be set) created</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Fri, 09 Nov 2018 20:01:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45322</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45322/1541793664327688</guid>
      <description>&lt;p&gt;
This bug exhibits the exact same behavior as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16985" title="#16985: defect (bug): XML-RPC endpoint set the datetime when saving a Draft (closed: fixed)"&gt;#16985&lt;/a&gt; did for the MetaWeblog-based API before wp.editPost came along. When wp.editPost was implemented, evidently a regression occurred causing the buggy behavior to rear its head again.
&lt;/p&gt;
&lt;p&gt;
The practical effect of this bug is that a draft post submitted by an API client, and then edited by an API client, will have its publish date "locked in time" to the original submission time. So for example if you start a draft post on May 1, and edit it for two weeks before publishing on May 15, the published post will have a publish date of May 1.
&lt;/p&gt;
&lt;p&gt;
To reproduce using the WordPress XMLRPC API:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new draft status post using wp.newPost, omitting dates from the submitted post. This results in a post that has a post_date_gmt that is zeroed out, reflecting the fact it should receive the current time when the post is changed from Draft to Publish.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Edit that draft post using wp.editPost, again omitting any dates.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Expected result: the draft post should still have zeroed out publish date (post_date_gmt).
&lt;/p&gt;
&lt;p&gt;
Actual result: the post now has a post_date_gmt value matching the original post_date value that was created when the draft was submitted.
&lt;/p&gt;
&lt;p&gt;
The bug appears to be rooted in the wp.editPost implementation in class-wp-xmlrpc-server.php. Because this method uses the existing post struct from the database as a baseline of all submitted content, the post_date value ends up being set on the struct that is passed to _insert_post. But _insert_post makes assumptions about client intent based on the presence of or absence of values on that struct. So in this case the post_date value on the struct is interpreted as being a client-asserted publish date for the post.
&lt;/p&gt;
&lt;p&gt;
I'm attaching a patch with a possible fix, which is to make a point of unsetting the post_date value on the struct whenever the post_date value is missing from the content_struct provided by the API client.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45318 (Security problem: Login Oracle) reopened</title>
      
        <dc:creator>d0rkpress</dc:creator>

      <pubDate>Fri, 09 Nov 2018 18:54:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45318#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45318#comment:7/1541789658144917</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The fact that WordPress usernames practically are public means that changing the login messages are futile at this point.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As said this is a bad idea from the security standpoint. It has been 12 years ago as the first bug was file in this matter. And IMO it's not futile. Start with something. Then move on. I have to confess that I knew the other places before, not this one. Mostly because peers and customers of mine are having additional measures in place anyway at the login.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead of sarcasms, start arguing why WordPress should migrate to regarding usernames as secrets, in addition to the passwords.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Forgive my sarcasm but to me it is that obvious that the whole world seems to know this is not any good -- except Wordpress who refuse to acknowledge this. Others in this thread were not even considering this and just closing it without consideration. So thanks for getting back to me.
&lt;/p&gt;
&lt;p&gt;
The most important argument is above in pure technical means  -- forget for now about  the other places which allows user name enumeration, let's do a step by step approach.
&lt;/p&gt;
&lt;p&gt;
Again I am try to outline this time more easily what I filed initially. This is the classical approach....
&lt;/p&gt;
&lt;p&gt;
Suppose I am am attacker. I have a laaarge dictionary of potential user names. I also have a dictionary of passwords. If I feed them to my favorite tool both user name and password need to match for being successful. That is quite a challenge.
&lt;/p&gt;
&lt;p&gt;
The step by step approach which I can do at wordpress logins is way better for me. I just feed first my fav tool with user names and grep for the string "is incorrect". Let's say after 7200 tries I am successful. If I can submit 4 requests per second and the server answers in the same time it I have the first username in 7200/4=1800 seconds, equals 30 minutes.
&lt;/p&gt;
&lt;p&gt;
Next step is to find a password. I have this cool dictionary with passwords. Now I use the username and feed the list of passwords into my tool. Let's say I need 7200 tries here to guess the user name.
&lt;/p&gt;
&lt;p&gt;
Thus I needed in total 30min + 30min = 1 hour to guess a user name.
&lt;/p&gt;
&lt;p&gt;
A scenario where there's no leakage of the existence of the username would make my life way more hard, it would be really discouraging: The math would be ~7200x7200 tries = 51840000 tries . If I manage to get 4 request back from the server that would be 12960000 seconds equals 3600 hours equals 150 days.
&lt;/p&gt;
&lt;p&gt;
So bottom line is a security decision between 1 hour or 150 days for one hacked account in this simple white board scenario. Or to put it the other way round in 150 days in a two step approach I would be guessing 150x24x3600 = 12,960,000 accounts -- mathematically.
&lt;/p&gt;
&lt;p&gt;
This is the reason why no web application tells nowadays anymore whether the user exists or not. Frontends try also to avoid mail addresses as the username if possible as they can be retrieved in the underground for very little money. Pros use anti-automation measures (captchas, deliberate delays, throttling or any other security control) on AuthN functions as this and session management is THE CORE of any web application (&lt;a class="ext-link" href="https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
A server of mine (Google lists 128k links) has a quarter of its traffic to /wp-login.php or /wp-admin from random IPs. I barely see traffic e.g. trying to find a Typo3 backend or Drupal probes. Can't tell what the WP traffic is about. I do not have wordpress but the mere fact that there are so many probes to an authentication frontend probably means that criminals are actively looking for it in order to do something with it which is  not good probably.
&lt;/p&gt;
&lt;p&gt;
As said, I know from my professional experience that there are other places where usernames can be enumerated. But please start with this obvious one and then I would recommend seriously start closing the others. Don't take them as an excuse for this one. There is no real reason for this one.
&lt;/p&gt;
&lt;p&gt;
And please put this on the agenda for internal discussion.
&lt;/p&gt;
&lt;p&gt;
I am reopening.
Thanks!
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #45321 (List view scrolls to the top when opening a specific post/page/feedback) created</title>
      
        <dc:creator>kevindelsh</dc:creator>

      <pubDate>Fri, 09 Nov 2018 18:21:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45321</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45321/1541787687516054</guid>
      <description>&lt;p&gt;
This bug is related to &lt;strong&gt;WordPress.com back-end&lt;/strong&gt; (e.g. &lt;a class="ext-link" href="https://wordpress.com/types/feedback/example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.com/types/feedback/example.com&lt;/a&gt; or &lt;a class="ext-link" href="https://wordpress.com/posts/example.org"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.com/posts/example.org&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Test environment:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Browser: Google Chrome 70.0.3538.77 (Official Build) (64-bit)
&lt;/li&gt;&lt;li&gt;OS: Windows 10 Pro
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;How to reproduce:&lt;br /&gt;&lt;/strong&gt;
1- Navigate to &lt;a class="ext-link" href="https://wordpress.com/posts/example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.com/posts/example.com&lt;/a&gt;&lt;br /&gt;
2- Scroll down a little bit so that the upper part of the content is out of view.&lt;br /&gt;
3- Click on a post to open it.&lt;br /&gt;
4- Close the post by clicking the "Close" button at the top left corner.&lt;br /&gt;
5- You will see that the list of posts has scrolled up all the way to the very top.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One could argue that this is "normal" behavior but the UI also hijacks Chrome's normal behavior. If you click on the browser's back button instead of clicking the Close button you will also see the very top of the page.
&lt;/p&gt;
&lt;p&gt;
In addition, a "Close" button, implies that this is some sort of a window or overlay that will close and leave you with your list of posts in the exact way you had it in the first place.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35874 (XMLRPC: Draft posts are published immediately when changed to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 18:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35874#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35874#comment:32/1541786858744049</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #mobile by redsweater. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/mobile/p1541786857014900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16985 (XML-RPC endpoint set the datetime when saving a Draft) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 17:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16985#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16985#comment:30/1541784956579426</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #mobile by redsweater. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/mobile/p1541784955011100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45318 (Security problem: Login Oracle) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 09 Nov 2018 17:29:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45318#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45318#comment:6/1541784588718760</guid>
      <description>&lt;p&gt;
The fact that WordPress usernames practically are public means that changing the login messages are futile at this point.
&lt;/p&gt;
&lt;p&gt;
Instead of sarcasms, start arguing why WordPress should migrate to regarding usernames as secrets, in addition to the passwords.
&lt;/p&gt;
&lt;p&gt;
The current behaviour is that the database row ´user_nicename´, which is used as slug (URL component) in author archives are constructed from the username (&lt;code&gt;user_login&lt;/code&gt;) itself. Also usernames cannot be changed. (But all of this can and are changed by plugins.) Include: How could this change and why should we bother?
&lt;/p&gt;
&lt;p&gt;
Example pro argument: If a weak password is guessed then it's even easier to get in if the username is detectable.
&lt;/p&gt;
&lt;p&gt;
Example contra arguments: When passwords are leaked both username and password will be leaked anyway; requiring https is better; and extra character in the password is better; and so on.
&lt;/p&gt;
&lt;p&gt;
Please respect that the matter has been discussed many times before. Include whatever new facts that was not known when the matter was discussed last time. Be constructive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45320 (Allow preloading the translations in `load_script_textdomain`) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45320#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45320#comment:1/1541782341480684</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45320 (Allow preloading the translations in `load_script_textdomain`) created</title>
      
        <dc:creator>strategio</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45320</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45320/1541782111560502</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Problem:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Now that we can translate strings on the JS side and with the introduction of &lt;code&gt;wp_set_script_translations&lt;/code&gt;, we have no way to override the translations coming from the JSON files.
&lt;/p&gt;
&lt;p&gt;
We need a filter allowing to delegate the process of loading the translations.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggestion:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Ideally, we could have a filter inside &lt;code&gt;load_script_textdomain&lt;/code&gt; where we could provide our own set of translations (as a JED object).
&lt;/p&gt;
&lt;p&gt;
Here's an idea:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;load_script_textdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wp_scripts&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$json_translations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'pre_load_script_textdomain'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$json_translations&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$json_translations&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;//...
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;strong&gt;Why we need it:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
In WPML, we store the string translations in the DB and we offer the user the ability to add/edit translations. Apart overwriting the JSON files (which could be an option, but would also introduce other issues), we have no way to provide our own translations to the JS script.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45073 (Upgrading to 5.0 and handling the Gutenberg plugin) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45073#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45073#comment:42/1541781964121524</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1541781962591900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45178 (5.0 About Page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45178#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45178#comment:9/1541781964064578</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1541781962591900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>wingo5315</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:45:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:15/1541781901065815</guid>
      <description>&lt;p&gt;
Put it in the release notes somewhere. Preferably at the top.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:14/1541780856721696</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by joedolson. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1541780855566500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45319 (get_theme_mod() declaration of return type) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45319#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45319#comment:1/1541780478727730</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>theme.patch attached to Ticket #45319</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:20:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/45319/theme.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/45319/theme.patch/1541780451115269</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #45319 (get_theme_mod() declaration of return type) created</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45319</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45319/1541780065087489</guid>
      <description>&lt;p&gt;
As of WP 4.9.8 &lt;code&gt;get_theme_mod()&lt;/code&gt; declares &lt;code&gt;@return string&lt;/code&gt;. If you query for navigation menu locations using &lt;code&gt;get_theme_mod('nav_menu_locations')&lt;/code&gt; you get back an array. Modern IDEs (like PhpStorm) complain if you start to modify this array because they expect a string. The return value should be changed to &lt;code&gt;mixed&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45318 (Security problem: Login Oracle) updated</title>
      
        <dc:creator>d0rkpress</dc:creator>

      <pubDate>Fri, 09 Nov 2018 16:11:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45318#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45318#comment:5/1541779915185510</guid>
      <description>&lt;p&gt;
Oh, jeez... The first bug filed on this is twelve years old and you're still doing the same -- security-wise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43936 (Settings: Warn when open registration and new user default is privileged) updated</title>
      
        <dc:creator>roytanck</dc:creator>

      <pubDate>Fri, 09 Nov 2018 15:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43936#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43936#comment:8/1541778977599944</guid>
      <description>&lt;p&gt;
We've seen a couple of plugin vulnerabilities recently that allowed attackers to set these options, even while unauthenticated.
&lt;/p&gt;
&lt;p&gt;
The obvious attack vector was to enable registration and set the default role to admin. This was not done through the admin settings page, but through manipulated URLs.
&lt;/p&gt;
&lt;p&gt;
Besides not offering the option in the dropdown, I think core should also not add the user if this combination of settings exists.
&lt;/p&gt;
&lt;p&gt;
Personally, I can think of no use case that would require this combination of settings. It's essentially "please take my site".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45318 (Security problem: Login Oracle) updated</title>
      
        <dc:creator>d0rkpress</dc:creator>

      <pubDate>Fri, 09 Nov 2018 15:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45318#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45318#comment:4/1541778304201258</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress takes security and user experience very seriously, no matter what year it is.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
by closing it that fast (within 10 minutes) I heavily doubt the former
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #45318,​3708 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Nov 2018 15:36:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=45318%2C3708</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=45318%2C3708/1541777766593276</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/45318" title="#45318: defect (bug): Security problem: Login Oracle (closed: duplicate)"&gt;#45318&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #9334 (Explicitly define CSS button foreground colors in modal dialog boxes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 15:28:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9334#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9334#comment:3/1541777319940847</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1541777318486400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45318 (Security problem: Login Oracle) updated</title>
      
        <dc:creator>d0rkpress</dc:creator>

      <pubDate>Fri, 09 Nov 2018 15:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45318#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45318#comment:2/1541777187368409</guid>
      <description>&lt;p&gt;
Thanks .
&lt;/p&gt;
&lt;p&gt;
If you're interested in making Wordpress more secure you should follow security best practices and arrive in 2018. I am doing pentests for an eternity and everybody since a long time gets slapped (not literally) who does not meet such a basic security requirement. It's to my statistics reaaaally seldom the past years I see such a login message.
&lt;/p&gt;
&lt;p&gt;
To cite the link from Half-Elf:
&lt;/p&gt;
&lt;p&gt;
"WordPress is not alone in thinking your username isn’t a secret. Drupal also thinks disclosure of usernames/id is not a security risk. "
&lt;/p&gt;
&lt;p&gt;
What a -- sorry -- stupid excuse. Only because my neighbor does something which sounds for an average person absurd, I should give up thinking and just do the same?? Please use your own intelligence and don't rely on others.
&lt;/p&gt;
&lt;p&gt;
"In fact, Google doesn’t think your ID is a secret"
&lt;/p&gt;
&lt;p&gt;
Yes but
A) They have not really choice as their services are bound to the e-mail address. You do!
B) Go ahead and try to brute force a login at Google. You won't be able to do so. Google (as Twitter and others) have arrived in 2018 and do a great job of fraud detection or anti-automation measures on authentication functions. Out of the box Wordpress doesn't come with those things.
C) For Google services it's even a no-brainer to switch on MFA. For Wordpress out of the box I do not even have a choice.
&lt;/p&gt;
&lt;p&gt;
So, please stop this nonsense comparisons.
&lt;/p&gt;
&lt;p&gt;
"user friendliness wins here.". As said, it's 2018. People use browsers which store usernames or have external password management systems which could include usernames. There is no advantage to signal those things with a verbose error message like this to an average user. There might be one to people starting using the computer a year ago but if that is the audience where you adjust your security posture to: good luck!
&lt;/p&gt;
&lt;p&gt;
WRT HackerOne: This is a bug which doesn't fall in the categories HackerOne is accepting. But it is a security bug, so the only choice to me was posting it here. (This is a general question which you might want to address)
&lt;/p&gt;
&lt;p&gt;
The question to me boils down whether you are willing to take security seriously in 2018 or not and stick to what was labeled as user friendly 15 years ago.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11581 (Add category description to wp_list_bookmarks()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 15:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11581#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11581#comment:6/1541776983934205</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1541776982481400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10545 (_publish_post_hook (adding to postmeta existing hooks)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Nov 2018 15:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10545#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10545#comment:7/1541776983889821</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1541776982481400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45093 (Dashboard links don't always have discernible text) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 09 Nov 2018 14:49:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45093#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45093#comment:5/1541774994186413</guid>
      <description>invalid: &lt;p&gt;
This seems something added by a plugin. No reporter feedback. Going to close this ticket, please do feel free to reopen if I'm missing something.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #45096 (Dashboard accessibility: Landmarks don't always have a unique role or ...) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 09 Nov 2018 14:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45096#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45096#comment:7/1541774876761543</guid>
      <description>invalid: &lt;p&gt;
This seems something added by a plugin. No reporter feedback in a week. Going to close this ticket, please do feel free to reopen if I'm missing something.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #45102 (Accessibility Issue: id attribute value must be unique) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 09 Nov 2018 14:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45102#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45102#comment:6/1541774786546079</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Pending clarification why a css class attribute and an id attribute with the same value are an accessibility issue, e.g.:
&lt;code&gt;class="post-38007 ..." id="post-38007"&lt;/code&gt;
To my knowledge, this is not an issue. Proposing to close this ticket but please do feel free to report additional feedback if I'm missing something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45292 (wp_targeted_link_rel "corrupts" the customized changeset JSON when ...) updated</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Fri, 09 Nov 2018 14:17:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45292#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45292#comment:3/1541773061250251</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/45292#comment:2" title="Comment 2"&gt;peterwilsoncc&lt;/a&gt;: @peterwilsoncc thanks for taking care of it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45318 (Security problem: Login Oracle) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Nov 2018 14:05:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45318#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45318#comment:1/1541772348817508</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @d0rkpress, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
Just noting this has been previously reported a few times, most recently in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40667" title="#40667: enhancement: Password reset screen allows validity (or otherwise) of the provided email (closed: invalid)"&gt;#40667&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As stated in the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-disclosures-of-usernames-or-user-ids-not-a-security-issue"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;handbook article&lt;/a&gt; you've linked to, we don't consider usernames (and by extension, the existence of accounts) to be private. A similar thing can be achieved just by browsing the &lt;code&gt;/author/{slug}&lt;/code&gt; views.
&lt;/p&gt;
&lt;p&gt;
We need to balance user friendliness with information disclosure and as &lt;a class="ext-link" href="https://halfelf.org/2014/username-secret/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;usernames are not considered private information&lt;/a&gt;, user friendliness wins here.
&lt;/p&gt;
&lt;p&gt;
Please don't ignore the warning that Trac displays when creating security tickets. If you believe you've found a vulnerability, please &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#where-do-i-report-security-issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;disclose it to us privately&lt;/a&gt;, &lt;a class="ext-link" href="https://hackerone.com/wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;via HackerOne&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3708" title="#3708: defect (bug): wp_login is too &amp;#34;friendly&amp;#34; -- Information disclosure (closed: wontfix)"&gt;#3708&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4290" title="#4290: defect (bug): Username information leak on wp-login.php (closed: wontfix)"&gt;#4290&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5301" title="#5301: defect (bug): WordPress can &amp;#34;leak&amp;#34; if a username is valid (closed: wontfix)"&gt;#5301&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12129" title="#12129: enhancement: Generic login failure message (closed: wontfix)"&gt;#12129&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22421" title="#22421: enhancement: Make more security for users by hidding existed usernames in wp-login.php (closed: duplicate)"&gt;#22421&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27125" title="#27125: enhancement: Neutral Errormessage in Login (closed: duplicate)"&gt;#27125&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31787" title="#31787: defect (bug): Password Reset Form Improved Error Messages (closed: duplicate)"&gt;#31787&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40667" title="#40667: enhancement: Password reset screen allows validity (or otherwise) of the provided email (closed: invalid)"&gt;#40667&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot_20181109_121724.png attached to Ticket #45318</title>
      
        <dc:creator>d0rkpress</dc:creator>

      <pubDate>Fri, 09 Nov 2018 12:02:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/45318/Screenshot_20181109_121724.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/45318/Screenshot_20181109_121724.png/1541764933049536</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screenshot_20181109_123431.png attached to Ticket #45318</title>
      
        <dc:creator>d0rkpress</dc:creator>

      <pubDate>Fri, 09 Nov 2018 12:01:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/45318/Screenshot_20181109_123431.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/45318/Screenshot_20181109_123431.png/1541764908034518</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #45318 (Security problem: Login Oracle) created</title>
      
        <dc:creator>d0rkpress</dc:creator>

      <pubDate>Fri, 09 Nov 2018 12:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45318</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45318/1541764845733680</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
when logging in to WordPress one can tell from the error message whether the user account exists or not. It's either "ERROR: The password you entered for the username &amp;lt;USERNAME&amp;gt; is incorrect" or "ERROR: Invalid username".
&lt;/p&gt;
&lt;p&gt;
This is basically missing the 101 security requirement of a login, see &lt;a class="ext-link" href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Incorrect_Response_Examples"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Incorrect_Response_Examples&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Yes, I read that: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-disclosures-of-usernames-or-user-ids-not-a-security-issue"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-disclosures-of-usernames-or-user-ids-not-a-security-issue&lt;/a&gt; . But it in 2018 it is time to change this. You need just to look into any logfile of any webserver you will find lots of probes for the WordPress login.
&lt;/p&gt;
&lt;p&gt;
The threat is that it is minimizing for an attacker considerably the effort by a 2 x square root factor. Let's say in 1000 user accounts I have one hit on a web site, for a password guess I have another 1 in 1000 hits. Without a login oracle I would need 1000^2 tries to get a hold of a login. With this oracle I need 1000 + 10000 tries. One million requests vs. 2000 makes a huge difference.
&lt;/p&gt;
&lt;p&gt;
Please
&lt;/p&gt;
&lt;p&gt;
Thanks, Dirk (OWASP guy, Pentester, Consultant, IT Security &amp;gt;20yrs professional experience)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45263 (The posts page is editable in the block editor) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 11:36:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45263#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45263#comment:4/1541763374953817</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43883" title="Tests: Fix tests broken in PHP 5.x after [43879].
See #45290.
"&gt;[43883]&lt;/a&gt; accidentally included the fix for this. 🙂
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45317 (Trash or trash, that is the question) created</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 09 Nov 2018 10:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45317</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45317/1541760862962847</guid>
      <description>&lt;p&gt;
We usually have a big Trash (written capitalized), but not here:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;CORE:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
moved to the &lt;strong&gt;trash&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Whether to bypass &lt;strong&gt;trash&lt;/strong&gt; and force deletion.
&lt;/p&gt;
&lt;p&gt;
Move to &lt;strong&gt;trash&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;CORE/ADMIN:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The currently selected Privacy Policy page is in the trash. Please create or select a new Privacy Policy page or &amp;lt;a href="%s"&amp;gt;restore the current page&amp;lt;/a&amp;gt;.
&lt;/p&gt;
&lt;p&gt;
%s media file restored from the &lt;strong&gt;trash&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
%s media file moved to the &lt;strong&gt;trash&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
You can also edit or move multiple posts to the &lt;strong&gt;trash&lt;/strong&gt; at once. Select the posts you want to act on using the checkboxes, then select the action you want to take from the Bulk Actions menu and click Apply.
&lt;/p&gt;
&lt;p&gt;
Media file restored from the &lt;strong&gt;trash&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Media file moved to the &lt;strong&gt;trash&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
When a comment contains any of these words in its content, name, URL, email, or IP address, it will be put in the &lt;strong&gt;trash&lt;/strong&gt;. One word or IP address per line. It will match inside words, so &amp;amp;#8220;press&amp;amp;#8221; will match &amp;amp;#8220;WordPress&amp;amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
Comment by %s moved to the &lt;strong&gt;trash&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Let me know if we want to trash the trash
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45316 (parse_blocks returns an empty object in 'attrs' when there are no ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Nov 2018 10:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45316#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45316#comment:1/1541759691751560</guid>
      <description>&lt;p&gt;
Looks like there‘s an open PR for this: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/11434"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/11434&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45316 (parse_blocks returns an empty object in 'attrs' when there are no ...) created</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 09 Nov 2018 10:19:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45316</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45316/1541758762684681</guid>
      <description>&lt;p&gt;
According to the inline documentation of &lt;code&gt;WP_Block_Parser&lt;/code&gt;, &lt;code&gt;parse_blocks&lt;/code&gt; should return &lt;em&gt;arrays not objects, all attributes are arrays&lt;/em&gt;. See &lt;a href="https://core.trac.wordpress.org/browser/branches/5.0/src/wp-includes/class-wp-block-parser.php#L124"&gt;https://core.trac.wordpress.org/browser/branches/5.0/src/wp-includes/class-wp-block-parser.php#L124&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Parsing
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
returns
&lt;/p&gt;
&lt;pre class="wiki"&gt;Array
(
    [0] =&amp;gt; Array
        (
            [blockName] =&amp;gt; core/paragraph
            [attrs] =&amp;gt; stdClass Object
                (
                )
            [innerBlocks] =&amp;gt; Array
                (
                )
            [innerHTML] =&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
        )
)
&lt;/pre&gt;&lt;p&gt;
If the block has no attribute, &lt;code&gt;[attrs]&lt;/code&gt; is an empty object while, according to the documentation, we would expect an empty array.
&lt;/p&gt;
&lt;p&gt;
In other cases, when the block includes attributes or when parsing a free form text, &lt;code&gt;[attrs]&lt;/code&gt; is, as expected, an array.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45290 (The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 09:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45290#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45290#comment:21/1541756610463909</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43883" title="Tests: Fix tests broken in PHP 5.x after [43879].
See #45290.
"&gt;43883&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Fix tests broken in PHP 5.x after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43879" title="Formatting: Ensure `wpautop()` isn't run on content generated from ..."&gt;[43879]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45290" title="#45290: defect (bug): The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ... (reopened)"&gt;#45290&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43883]: Tests: Fix tests broken in PHP 5.x after [43879].  See #45290.  </title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 09:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43883</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43883/1541756609399762</guid>
      <description>&lt;p&gt;
Tests: Fix tests broken in PHP 5.x after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43879" title="Formatting: Ensure `wpautop()` isn't run on content generated from ..."&gt;[43879]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45290" title="#45290: defect (bug): The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ... (reopened)"&gt;#45290&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #45283 (Meta Boxes: Add an action for plugins to print hidden inputs in the ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 09:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45283#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45283#comment:8/1541754376818629</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45283 (Meta Boxes: Add an action for plugins to print hidden inputs in the ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 09:05:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45283#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45283#comment:7/1541754348451603</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43882" title="Meta Boxes: Add the `block_editor_meta_box_hidden_fields` action.
 ..."&gt;43882&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Meta Boxes: Add the &lt;code&gt;block_editor_meta_box_hidden_fields&lt;/code&gt; action.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Lacking an appropriate action in the classic editor, plugins that add meta boxes have historically hooked into various actions in order to add hidden input fields.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This change also adds backwards compatibility for two of the most common: &lt;code&gt;edit_form_after_title&lt;/code&gt;, and &lt;code&gt;edit_form_advanced&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pento, danielbachhuber.&lt;br /&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/45283" title="#45283: defect (bug): Meta Boxes: Add an action for plugins to print hidden inputs in the ... (assigned)"&gt;#45283&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43882]: Meta Boxes: Add the `block_editor_meta_box_hidden_fields` action.  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 09:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43882</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43882/1541754347398323</guid>
      <description>&lt;p&gt;
Meta Boxes: Add the &lt;code&gt;block_editor_meta_box_hidden_fields&lt;/code&gt; action.
&lt;/p&gt;
&lt;p&gt;
Lacking an appropriate action in the classic editor, plugins that add meta boxes have historically hooked into various actions in order to add hidden input fields.
&lt;/p&gt;
&lt;p&gt;
This change also adds backwards compatibility for two of the most common: &lt;code&gt;edit_form_after_title&lt;/code&gt;, and &lt;code&gt;edit_form_advanced&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props pento, danielbachhuber.
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/45283" title="#45283: defect (bug): Meta Boxes: Add an action for plugins to print hidden inputs in the ... (assigned)"&gt;#45283&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #45312 (parse_blocks return non-existing empty blocks) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 09 Nov 2018 09:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45312#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45312#comment:2/1541754327317156</guid>
      <description>&lt;p&gt;
The editor does not let me save
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!-- wp:core/paragraph --&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:core/paragraph --&amp;gt;&amp;lt;!-- wp:core/paragraph --&amp;gt;
&amp;lt;p&amp;gt;Second paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:core/paragraph --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
It automatically changes it back to
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;Second paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I am not sure that this is intentional. But it's indeed probably a consequence of how the free form text is parsed as
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;Free form text&amp;lt;/p&amp;gt;
&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;Second paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
is parsed in
&lt;/p&gt;
&lt;pre class="wiki"&gt;Array
(
    [0] =&amp;gt; Array
        (
            [blockName] =&amp;gt; core/paragraph
            [attrs] =&amp;gt; stdClass Object
                (
                )
            [innerBlocks] =&amp;gt; Array
                (
                )
            [innerHTML] =&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
        )
    [1] =&amp;gt; Array
        (
            [blockName] =&amp;gt;
            [attrs] =&amp;gt; Array
                (
                )
            [innerBlocks] =&amp;gt; Array
                (
                )
            [innerHTML] =&amp;gt;
&amp;lt;p&amp;gt;Free form text&amp;lt;/p&amp;gt;
        )
    [2] =&amp;gt; Array
        (
            [blockName] =&amp;gt; core/paragraph
            [attrs] =&amp;gt; stdClass Object
                (
                )
            [innerBlocks] =&amp;gt; Array
                (
                )
            [innerHTML] =&amp;gt;
&amp;lt;p&amp;gt;Second paragraph&amp;lt;/p&amp;gt;
        )
)
&lt;/pre&gt;&lt;p&gt;
Maybe not a big deal, but it surprised me having all these empty blocks in the array returned.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45290 (The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45290#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45290#comment:20/1541753751441904</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43881" title="Tests: Fix a failing test after [43879].
See #45290.
"&gt;43881&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Fix a failing test after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43879" title="Formatting: Ensure `wpautop()` isn't run on content generated from ..."&gt;[43879]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45290" title="#45290: defect (bug): The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ... (reopened)"&gt;#45290&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43881]: Tests: Fix a failing test after [43879].  See #45290.  </title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:55:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43881</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43881/1541753750391584</guid>
      <description>&lt;p&gt;
Tests: Fix a failing test after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43879" title="Formatting: Ensure `wpautop()` isn't run on content generated from ..."&gt;[43879]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45290" title="#45290: defect (bug): The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ... (reopened)"&gt;#45290&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42735 (Add missing periods to some (error) messages) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42735#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42735#comment:4/1541753273543930</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42735 (Add missing periods to some (error) messages) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42735#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42735#comment:3/1541753232589806</guid>
      <description>&lt;p&gt;
and another:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;%s comment permanently deleted&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45284 (Meta Boxes: Prevent the meta box form from being submitted when ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45284#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45284#comment:2/1541752353909753</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45284 (Meta Boxes: Prevent the meta box form from being submitted when ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45284#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45284#comment:1/1541752340979968</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43880" title="Block Editor: Prevent the meta box form from being accidentally ..."&gt;43880&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Block Editor: Prevent the meta box form from being accidentally submitted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Meta boxes are loaded inside a wrapper form, that the block editor submits as part of the saving process. It shouldn't be submitted manually.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/45284" title="#45284: defect (bug): Meta Boxes: Prevent the meta box form from being submitted when ... (assigned)"&gt;#45284&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43880]: Block Editor: Prevent the meta box form from being accidentally ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43880</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43880/1541752339886647</guid>
      <description>&lt;p&gt;
Block Editor: Prevent the meta box form from being accidentally submitted.
&lt;/p&gt;
&lt;p&gt;
Meta boxes are loaded inside a wrapper form, that the block editor submits as part of the saving process. It shouldn't be submitted manually.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/45284" title="#45284: defect (bug): Meta Boxes: Prevent the meta box form from being submitted when ... (assigned)"&gt;#45284&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #45290 (The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ...) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:29:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45290#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45290#comment:19/1541752165331971</guid>
      <description>&lt;p&gt;
Reopening for &lt;code&gt;trunk&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #45290 (The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ...) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:28:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45290#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45290#comment:18/1541752121663653</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43879" title="Formatting: Ensure `wpautop()` isn't run on content generated from ..."&gt;43879&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Formatting: Ensure &lt;code&gt;wpautop()&lt;/code&gt; isn't run on content generated from blocks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As &lt;code&gt;do_blocks()&lt;/code&gt; is run before &lt;code&gt;wpautop()&lt;/code&gt; in &lt;code&gt;the_content&lt;/code&gt; filter, we can remove in a Just In Time fashion, before that filter is run.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;code&gt;wpautop()&lt;/code&gt;s original priority has passed, we can re-add it in a Just Too Late fashion, to ensure it's available if &lt;code&gt;the_content&lt;/code&gt; filter is run multiple times on a page load.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pento, nerrad.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45290" title="#45290: defect (bug): The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ... (reopened)"&gt;#45290&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43879]: Formatting: Ensure `wpautop()` isn't run on content generated from ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Nov 2018 08:28:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43879/1541752120637051</guid>
      <description>&lt;p&gt;
Formatting: Ensure &lt;code&gt;wpautop()&lt;/code&gt; isn't run on content generated from blocks.
&lt;/p&gt;
&lt;p&gt;
As &lt;code&gt;do_blocks()&lt;/code&gt; is run before &lt;code&gt;wpautop()&lt;/code&gt; in &lt;code&gt;the_content&lt;/code&gt; filter, we can remove in a Just In Time fashion, before that filter is run.
&lt;/p&gt;
&lt;p&gt;
After &lt;code&gt;wpautop()&lt;/code&gt;s original priority has passed, we can re-add it in a Just Too Late fashion, to ensure it's available if &lt;code&gt;the_content&lt;/code&gt; filter is run multiple times on a page load.
&lt;/p&gt;
&lt;p&gt;
Props pento, nerrad.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45290" title="#45290: defect (bug): The equivalent of `gutenberg_wpautop` from Gutenberg plugin is missing ... (reopened)"&gt;#45290&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #45167 (Bundled Themes: Bump version numbers and update changelogs for 5.0 release) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 09 Nov 2018 06:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45167#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45167#comment:15/1541745604547313</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/45167#comment:13" title="Comment 13"&gt;laurelfulford&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks so much @maedahbatool and @mrahmadawais for catching that, and your patches!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Happy to help and contribute. 🐨
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/45167/45167.5.patch" title="Attachment '45167.5.patch' in Ticket #45167"&gt;45167.5.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/45167/45167.5.patch" title="Download"&gt;​&lt;/a&gt; contains the exact same changes as &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/45167/45167.4.patch" title="Attachment '45167.4.patch' in Ticket #45167"&gt;45167.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/45167/45167.4.patch" title="Download"&gt;​&lt;/a&gt;. The updates in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/45167/45167.4.patch" title="Attachment '45167.4.patch' in Ticket #45167"&gt;45167.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/45167/45167.4.patch" title="Download"&gt;​&lt;/a&gt; look good, but for some reason the patch itself makes it look like entire readme files in a couple of the themes have changed. That doesn't actually happen when you apply the patch; I made the new one just to prevent confusion once we're ready to commit. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Strange. I saw that too, but there were no changes. Must be prettier rewriting the entire file for formatting sake or SVN.
&lt;/p&gt;
&lt;p&gt;
Peace! ✌️
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45167 (Bundled Themes: Bump version numbers and update changelogs for 5.0 release) updated</title>
      
        <dc:creator>maedahbatool</dc:creator>

      <pubDate>Fri, 09 Nov 2018 06:12:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45167#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45167#comment:14/1541743962718053</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/45167#comment:13" title="Comment 13"&gt;laurelfulford&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks so much @maedahbatool and @mrahmadawais for catching that, and your patches!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks a ton. 💯
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/45167/45167.5.patch" title="Attachment '45167.5.patch' in Ticket #45167"&gt;45167.5.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/45167/45167.5.patch" title="Download"&gt;​&lt;/a&gt; contains the exact same changes as &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/45167/45167.4.patch" title="Attachment '45167.4.patch' in Ticket #45167"&gt;45167.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/45167/45167.4.patch" title="Download"&gt;​&lt;/a&gt;. The updates in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/45167/45167.4.patch" title="Attachment '45167.4.patch' in Ticket #45167"&gt;45167.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/45167/45167.4.patch" title="Download"&gt;​&lt;/a&gt; look good, but for some reason the patch itself makes it look like entire readme files in a couple of the themes have changed. That doesn't actually happen when you apply the patch; I made the new one just to prevent confusion once we're ready to commit. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Awesome! Makes sense. Looking forward to the final commit. ✌️
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39451,​45314 batch updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 09 Nov 2018 02:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39451%2C45314</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39451%2C45314/1541731479795578</guid>
      <description>duplicate: &lt;p&gt;
Hi @angelocarosio, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
As you noted, this issue has been previously reported. I would recommend posting your findings and any suggested changes to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39451" title="#39451: defect (bug): Javascript error when link_manager_enabled ( WP_Widget_Links) and ... (new)"&gt;#39451&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #45312 (parse_blocks return non-existing empty blocks) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 09 Nov 2018 00:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45312#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45312#comment:1/1541724492817945</guid>
      <description>&lt;p&gt;
@Chouby I think this could be intentional, keeping the "freeform blocks" in between blocks.
&lt;/p&gt;
&lt;p&gt;
Now there's a &lt;code&gt;core&lt;/code&gt; namespace, so one could also test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!-- wp:core/paragraph --&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:core/paragraph --&amp;gt;
&amp;lt;!-- wp:core/paragraph --&amp;gt;
&amp;lt;p&amp;gt;Second paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:core/paragraph --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
yielding the same result, with an extra freeform block from new lines.
&lt;/p&gt;
&lt;p&gt;
It seems we could remove these new-lines-only freeform blocks, by checking if the trimmed sub-string of the document is non-empty, in the &lt;code&gt;WP_Block_Parser_Block::add_block_from_stack()&lt;/code&gt;, before adding the freeform block to the output.
&lt;/p&gt;
&lt;p&gt;
But then the &lt;code&gt;WP_Test_Block_Render::test_do_blocks_removes_comments()&lt;/code&gt; will fail, because two new lines are being removed.
&lt;/p&gt;
&lt;p&gt;
So at first glance these freeform blocks seems to be an important part of the block parsing and block rendering.
&lt;/p&gt;
&lt;p&gt;
We can remove the freeform block with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!-- wp:core/paragraph --&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:core/paragraph --&amp;gt;&amp;lt;!-- wp:core/paragraph --&amp;gt;
&amp;lt;p&amp;gt;Second paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:core/paragraph --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I hope I'm reviewing it correctly :-)
&lt;/p&gt;
&lt;p&gt;
Maybe you see it differently @Chouby ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45315 (Canonical redirection should compare URLs taking encoding into account) created</title>
      
        <dc:creator>straussd</dc:creator>

      <pubDate>Fri, 09 Nov 2018 00:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45315</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45315/1541724288860018</guid>
      <description>&lt;p&gt;
We're encountering redirect loops because the URL comparison logic does not take encoding fully into account.
&lt;/p&gt;
&lt;p&gt;
If a layer of the stack (in our case, Varnish) re-encodes query parameters either in the "Location" header of a redirect or in a URL prior to it reaching WordPress, WordPress will issue a redirect to its preferred encoding, causing a loop as it attempts to "fix" the encoding choice that another layer repeatedly makes. Such URL rewrites (with re-encoding) may happen if the proxy is configured to sort incoming query parameters (to improve cache hit rates) or otherwise manipulate them. These are fairly common uses for a reverse proxy.
&lt;/p&gt;
&lt;p&gt;
As noted in the source code, hex encodings are not case-sensitive. The RFC also states that encoding ":" and "@" is optional in query string elements. (PHP always encodes them given the lack of context in rawurlencode.) A proxy may make different choices than WordPress, but it should not cause WordPress to start a redirect loop.
&lt;/p&gt;
&lt;p&gt;
One possible solution is to decode entities before comparing the requested URL with the redirect URL.
&lt;/p&gt;
&lt;p&gt;
For example, in wp-includes/canonical.php around line 490, this change fixes the issue:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$redirect_url&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;rawurldecode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$redirect_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;rawurldecode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$requested_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Technically, this change could cause some false positives where URLs match when one contains a reserved character in the same position as an encoded one in the other URL. This is an unlikely problem for canonical URL redirects, but I wanted to acknowledge the limitation.
&lt;/p&gt;
&lt;p&gt;
If such false positives aren't acceptable, then I would suggest comparing the individual query string parts one by one, decoding each for its own comparison.
&lt;/p&gt;
&lt;p&gt;
Presumably, similar bugs exist for encodings of the path, but I haven't investigated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45292 (wp_targeted_link_rel "corrupts" the customized changeset JSON when ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Nov 2018 21:20:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45292#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45292#comment:2/1541712008346862</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6177 (Remove Un-needed Sub-Menu edit comment link.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Nov 2018 21:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6177#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6177#comment:5/1541711995886424</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mor10. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1541711994913800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45292 (wp_targeted_link_rel "corrupts" the customized changeset JSON when ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Nov 2018 21:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45292#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45292#comment:1/1541711484492859</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for logging this and including some proposed solutions.
&lt;/p&gt;
&lt;p&gt;
I've moved this on to the 5.0 milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43187 (Add pre-save filter to make target="_blank" always secure) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Nov 2018 21:08:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43187#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43187#comment:46/1541711335522969</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43187#comment:45" title="Comment 45"&gt;nikeo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've opened a ticket about it : &lt;a href="https://core.trac.wordpress.org/ticket/45292"&gt;https://core.trac.wordpress.org/ticket/45292&lt;/a&gt;. I think that the problem should be addressed before releasing WP 5.0, because it can potentially impact many websites.
&lt;/p&gt;
&lt;p&gt;
Are you already aware of the issue and is there any plan to fix it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd missed &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/45292" title="#45292: defect (bug): wp_targeted_link_rel &amp;#34;corrupts&amp;#34; the customized changeset JSON when ... (new)"&gt;#45292&lt;/a&gt; but am following it now and will continue the discussion there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16020 (Upload custom avatar for user in Dashboard) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Nov 2018 20:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16020#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16020#comment:63/1541710315883750</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by selrond. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1541710313895200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41000 (Stop saying "Happy blogging") updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Nov 2018 20:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41000#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41000#comment:7/1541710018730481</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>post regex fix -- multiple widget copies.png attached to Ticket #45314</title>
      
        <dc:creator>angelocarosio</dc:creator>

      <pubDate>Thu, 08 Nov 2018 19:01:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/45314/post%20regex%20fix%20--%20multiple%20widget%20copies.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/45314/post%20regex%20fix%20--%20multiple%20widget%20copies.png/1541703718213189</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>js error.png attached to Ticket #45314</title>
      
        <dc:creator>angelocarosio</dc:creator>

      <pubDate>Thu, 08 Nov 2018 19:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/45314/js%20error.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/45314/js%20error.png/1541703712421067</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>markup causing error.png attached to Ticket #45314</title>
      
        <dc:creator>angelocarosio</dc:creator>

      <pubDate>Thu, 08 Nov 2018 19:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/45314/markup%20causing%20error.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/45314/markup%20causing%20error.png/1541703706085267</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #45314 (Links widget breaks live preview in customizer) created</title>
      
        <dc:creator>angelocarosio</dc:creator>

      <pubDate>Thu, 08 Nov 2018 19:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45314</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45314/1541703676059203</guid>
      <description>&lt;p&gt;
I saw a few other tickets on this from a while ago but it doesn't seem like an actual fix has ever made it into core. I did some digging on this to maybe point in the right direction, there are basically 2 issues:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The regex on line 51 of class-wp-widget-links.php is replacing the live preview IDs that are injected into the widget containers inside the customizer. As it currently is, adding any links widget breaks the edit shortcuts and live preview ability for all other widgets in the widget area.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;While I was able to basically fix &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; by filtering some widget args, there is still another issue. When the widget is set to show multiple categories, each category gets its own widget container markup (line 56 and 57). This breaks the 1:1 relationship between the widget and its container that the customizer is expecting, so even if &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; is fixed, changing options around causes multiple copies of the widget to be inserted inside the customizer. Wrapping everything in an additional div and giving that the widget markup seems to fix this problem, but that's obviously not a fix I can make.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Turning off 'customize_selective_refresh' =&amp;gt; true, in the widget options obviously also fixes this, and I think most people would be happier with a working links widget even if selective refresh isn't supported, considering this is technically a depreciated feature.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45311 (Block editor incompatible meta boxes are skipped instead of reverting ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Nov 2018 18:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45311#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45311#comment:1/1541700158106653</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45066 (Replace wp-a11y.js with @wordpress/a11y package) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Nov 2018 17:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45066#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45066#comment:4/1541699077561621</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Before it gets committed it'd be good to fix the indentation in &lt;code&gt;update-core.php&lt;/code&gt; and update the patch for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43877" title="Script Loader: Ensure default packages are registered when loaded via ..."&gt;[43877]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45066 (Replace wp-a11y.js with @wordpress/a11y package) updated</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Thu, 08 Nov 2018 17:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45066#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45066#comment:3/1541698880577540</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Signing off for commit. @gziolo, @herregroen or @atimmer. Feel free.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Nov 2018 17:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:13/1541698196153877</guid>
      <description>&lt;p&gt;
I'd like to add a short consideration: we're all here to serve the WordPress users to the best of our ability. In any open source project, I'd expect the highest openness and transparency towards users. I don't see the notice proposed here as something that can diminish the work made on Gutenberg and its goals. Instead, I see it as a great example of responsibility and transparency.
&lt;/p&gt;
&lt;p&gt;
We're working on it to make it better for everyone. Right now, we're not fully there, yet. The community who has closely followed the project is already informed, and the leads and contributors of the project have already acknowledged (to different degrees) accessibility in Gutenberg is not ideal yet. I don't see a good reason to not inform the wider audience of users in a proper way.
&lt;/p&gt;
&lt;p&gt;
On &lt;a class="ext-link" href="https://make.wordpress.org/core/2018/11/07/classic-editor-plugin-support-window/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2018/11/07/classic-editor-plugin-support-window/&lt;/a&gt; I also read that:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the Classic Editor plugin is central in this transition, we are considering including it with upgrades to WordPress 5.0. New WordPress installs would still add it manually, and we’ve included it in the Featured Plugins list to increase visibility. If you have thoughts on this idea, please leave a comment.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If that happens, it could definitely help. At that point, maybe it would be enough to have a notice pointing users to the plugins screen. Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Nov 2018 17:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:12/1541697206633403</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
For instance: do you recommend it for high contrast or zoom text users? Or just screenreader users?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As pointed out &lt;a class="ext-link" href="https://make.wordpress.org/accessibility/2018/10/29/report-on-the-accessibility-status-of-gutenberg/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;in the accessibility team report&lt;/a&gt;, the recommendation to keep using the Classic Editor relates to (quoting): "anybody who has a need for assistive technology".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Nov 2018 17:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:11/1541696980409281</guid>
      <description>&lt;p&gt;
Also related:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Upgrading to 5.0 and handling the Gutenberg plugin&lt;/strong&gt; &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45073" title="#45073: defect (bug): Upgrading to 5.0 and handling the Gutenberg plugin (reopened)"&gt;#45073&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #502 (strings containing variables cannot be internationalized) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Nov 2018 16:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/502#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/502#comment:3/1541694997492377</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by kjell. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1541694996370900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>lonelyvegan</dc:creator>

      <pubDate>Thu, 08 Nov 2018 16:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:10/1541694073868649</guid>
      <description>&lt;p&gt;
I would be happy to propose that if the text were cut down. When I presented the text, as-is, to the other release leads for 5.0 I was told there weren't plans to include this text at all, but especially nothing that verbose.
&lt;/p&gt;
&lt;p&gt;
I think there's limited space and the messaging should be concise. Ultimately I think an addendum to the section on the Classic Editor like:
&lt;/p&gt;
&lt;p&gt;
"Users of assistive technology who experience usability issues with Gutenberg should use the Classic Editor."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 08 Nov 2018 16:17:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:9/1541693854280894</guid>
      <description>&lt;p&gt;
Can this be part of the Welcome screen for 5.0?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>lonelyvegan</dc:creator>

      <pubDate>Thu, 08 Nov 2018 16:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:8/1541693512199670</guid>
      <description>&lt;p&gt;
The bottom of that mockup includes a reference to the Classic Editor. It's possible a brief note regarding Accessibility could go there, but I would want to make clear who we recommend the Classic Editor to there. For instance: do you recommend it for high contrast or zoom text users? Or just screenreader users? A specific call-out could work. 🤔
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45270 (5.0 Upgrade – add an information message for Assistive Technologies users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Nov 2018 16:04:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45270#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45270#comment:7/1541693047105567</guid>
      <description>&lt;p&gt;
For reference, the Trac ticket for the Welcome page (also known as "About" page) with mockups etc. is &lt;a href="https://core.trac.wordpress.org/ticket/45178"&gt;https://core.trac.wordpress.org/ticket/45178&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4795 (Plugins Update Notification) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Nov 2018 16:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4795#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4795#comment:7/1541692997282507</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #docs by chrisvanpatten. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/docs/p1541692996524700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45313 (Multisite site deletion email contains misleading language about user ...) created</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 08 Nov 2018 15:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45313</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45313/1541691310387379</guid>
      <description>&lt;p&gt;
In Multisite, you can initiate the deletion of a site via wp-admin/ms-delete-site.php. This triggers an email &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.8/src/wp-admin/ms-delete-site.php?marks=58#L43"&gt;https://core.trac.wordpress.org/browser/tags/4.9.8/src/wp-admin/ms-delete-site.php?marks=58#L43&lt;/a&gt; that contains the line:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(But remember your current site and username are gone forever.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
But the delete link does not, in fact, delete users or usernames. See &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.8/src/wp-admin/ms-delete-site.php?marks=20#L18"&gt;https://core.trac.wordpress.org/browser/tags/4.9.8/src/wp-admin/ms-delete-site.php?marks=20#L18&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This language dates from the MU merge in 3.0. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12603" title="Add mu only (inactive) files"&gt;[12603]&lt;/a&gt;. I imagine it was linked to the original conception of WPMU that each user account would correspond to a specific site on the network, a legacy concept that plagues us elsewhere. See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/17904" title="#17904: defect (bug): Multisite has more restrictions on user login character set (assigned)"&gt;#17904&lt;/a&gt;, especially &lt;a href="https://core.trac.wordpress.org/ticket/17904#comment:14"&gt;https://core.trac.wordpress.org/ticket/17904#comment:14&lt;/a&gt; and subsequent comments.
&lt;/p&gt;
&lt;p&gt;
This entire block of text could probably reuse a rethink, since the intended use of Multisite has changed considerably since 2010. I'd suggest changing the email text to something like (using &lt;code&gt;wpmu_welcome_notification()&lt;/code&gt; as a template):
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$content = __( "Howdy ###USERNAME###,
You recently clicked the 'Delete Site' link on your site and filled in a
form on that page.
If you really want to delete your site, click the link below. Please note
that the URL ###SITE_URL### will be unavailable for further use, even after
the site is deleted.
You will not be asked to confirm again, so only click this link if you are absolutely certain that you'd like to delete your site:
###URL_DELETE###
-- The Team @ ###SITE_NAME###" );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45178 (5.0 About Page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Nov 2018 15:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45178#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45178#comment:8/1541690749961099</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1541690748438900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45271 (Can't enqueue WordPress 5.0 builtin reactjs) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Nov 2018 14:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45271#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45271#comment:16/1541688008061503</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45309 (Incorrect @since in doc comments of class-wp-block-parser.php) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Thu, 08 Nov 2018 13:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45309#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45309#comment:2/1541684056607369</guid>
      <description>&lt;p&gt;
Ah sorry. I missed that. However the file structure doesn't help to identify that it's part of an external package.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43187 (Add pre-save filter to make target="_blank" always secure) updated</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Thu, 08 Nov 2018 13:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43187#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43187#comment:45/1541683696056117</guid>
      <description>&lt;p&gt;
Hi @notnownikki @peterwilsoncc , filtering &lt;code&gt;content_save_pre&lt;/code&gt; with &lt;code&gt;wp_targeted_link_rel&lt;/code&gt; breaks the publishing of the customize changeset, because it &lt;em&gt;corrupts&lt;/em&gt; the JSON of the customized data. It makes it impossible to save customizations.
&lt;/p&gt;
&lt;p&gt;
I've opened a ticket about it : &lt;a href="https://core.trac.wordpress.org/ticket/45292"&gt;https://core.trac.wordpress.org/ticket/45292&lt;/a&gt;. I think that the problem should be addressed before releasing WP 5.0, because it can potentially impact many websites.
&lt;/p&gt;
&lt;p&gt;
Are you already aware of the issue and is there any plan to fix it?
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45312 (parse_blocks return non-existing empty blocks) created</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Thu, 08 Nov 2018 13:18:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45312</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45312/1541683131724937</guid>
      <description>&lt;p&gt;
Create a new post with 2 paragraphs. I created them in visual mode, but here is the content of the code mode:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&amp;lt;!-- wp:paragraph --&amp;gt;
&amp;lt;p&amp;gt;Second paragraph&amp;lt;/p&amp;gt;
&amp;lt;!-- /wp:paragraph --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
When I apply &lt;code&gt;parse_blocks()&lt;/code&gt; on this content, the function returns 3 blocks. It inserts an empty non existing block between the 2 existing paragraph blocks. Here the output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Array
(
    [0] =&amp;gt; Array
        (
            [blockName] =&amp;gt; core/paragraph
            [attrs] =&amp;gt; stdClass Object
                (
                )
            [innerBlocks] =&amp;gt; Array
                (
                )
            [innerHTML] =&amp;gt;
&amp;lt;p&amp;gt;First paragraph&amp;lt;/p&amp;gt;
        )
    [1] =&amp;gt; Array
        (
            [blockName] =&amp;gt;
            [attrs] =&amp;gt; Array
                (
                )
            [innerBlocks] =&amp;gt; Array
                (
                )
            [innerHTML] =&amp;gt;
        )
    [2] =&amp;gt; Array
        (
            [blockName] =&amp;gt; core/paragraph
            [attrs] =&amp;gt; stdClass Object
                (
                )
            [innerBlocks] =&amp;gt; Array
                (
                )
            [innerHTML] =&amp;gt;
&amp;lt;p&amp;gt;Second paragraph&amp;lt;/p&amp;gt;
        )
)
&lt;/pre&gt;&lt;p&gt;
This is the smallest test case I could create. But if you have n blocks, the function returns something like 2n-1 blocks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45311 (Block editor incompatible meta boxes are skipped instead of reverting ...) created</title>
      
        <dc:creator>littler.chicken</dc:creator>

      <pubDate>Thu, 08 Nov 2018 13:16:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45311</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45311/1541682981635735</guid>
      <description>&lt;p&gt;
I have a custom meta box for which the &lt;code&gt;__block_editor_compatible_meta_box&lt;/code&gt; flag is set to &lt;code&gt;false&lt;/code&gt;, as it includes an instance of &lt;code&gt;wp_editor&lt;/code&gt;, which did not work with the block editor for a while (although this appears to be resolved).
&lt;/p&gt;
&lt;p&gt;
I'm experiencing different results with the flag set this way:
&lt;/p&gt;
&lt;p&gt;
In trunk (5.1-alpha, which I think is currently the same as 4.9.8), with Gutenberg active, WordPress (correctly) reverts to the classic editor.
&lt;/p&gt;
&lt;p&gt;
In 5.0-beta3-43878 (and yesterday's build), without Gutenberg active, the block editor loads and the meta box is silently skipped altogether.
&lt;/p&gt;
&lt;p&gt;
In 5.0-beta3-43878 with Gutenberg active, the classic editor does attempt to load, but results in a white screen with this error message in the console:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Uncaught TypeError: Cannot read property 'then' of undefined
    at post.php?post=77&amp;amp;action=edit&amp;amp;classic-editor:2024
(anonymous) @ post.php?post=77&amp;amp;action=edit&amp;amp;classic-editor:2024
&lt;/pre&gt;&lt;p&gt;
which appears to be specifically referring to an error in this script:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script type='text/javascript'&amp;gt;
	window._wpLoadBlockEditor.then( function () {
	wp.data.dispatch( 'core/edit-post' ).setAvailableMetaBoxesPerLocation( {"side": [/*(block editor compatible boxes)*/],"normal": [/*(block editor compatible boxes)*/],"advanced": [/*(block editor compatible boxes)*/]});});
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
My understanding of the meta box compatibility flags &lt;a class="ext-link" href="https://make.wordpress.org/core/2018/11/07/meta-box-compatibility-flags/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2018/11/07/meta-box-compatibility-flags/&lt;/a&gt; is that setting &lt;code&gt;__block_editor_compatible_meta_box&lt;/code&gt; to false should force a fallback to the classic editor, even without Gutenberg installed, regardless of whether the &lt;code&gt;__back_compat_meta_box&lt;/code&gt; flag is set at all. (Note: setting both to false still results in the block editor loading without the custom metabox showing in the current beta.)
Working locally with &lt;code&gt;WP_DEBUG&lt;/code&gt; set to true on both sites and Gutenberg 4.2.0.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>pcarvalho</dc:creator>

      <pubDate>Thu, 08 Nov 2018 12:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:139</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:139/1541678990071484</guid>
      <description>&lt;p&gt;
congratulations to WordPress!
&lt;/p&gt;
&lt;p&gt;
Around this date, 11 years ago, PHP 5.2 was released! And almost 7 years ago it was deprecated.
&lt;/p&gt;
&lt;p&gt;
After that, we had PHP 5.3 (unsupported), 5.4 (unsupported), 5.5 (unsupported), 5.6 ( december 2018).
Nowadays, we had PHP 7.0, 7.1, 7.2, and in a month or so, we'll have PHP 7.3!
&lt;/p&gt;
&lt;p&gt;
so, keep up the hard work of supporting unsafe and unsupported PHP versions
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45310 (Outdated jQuery) updated</title>
      
        <dc:creator>consultingroupitaly</dc:creator>

      <pubDate>Thu, 08 Nov 2018 11:36:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45310#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45310#comment:2/1541676968720289</guid>
      <description>&lt;p&gt;
Is the fix of the vulnerability backported to jQuery v1.12.4?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45161 (Set translations for Gutenberg scripts.) reopened</title>
      
        <dc:creator>herregroen</dc:creator>

      <pubDate>Thu, 08 Nov 2018 11:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45161#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45161#comment:8/1541676904650287</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #45161 (Set translations for Gutenberg scripts.) closed</title>
      
        <dc:creator>herregroen</dc:creator>

      <pubDate>Thu, 08 Nov 2018 11:33:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45161#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45161#comment:7/1541676827127240</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43878" title="I18N: Set translations for all WordPress packages scripts.
Calls ..."&gt;43878&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Set translations for all WordPress packages scripts.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Calls &lt;code&gt;wp_set_script_translations&lt;/code&gt; for all packages scripts that have translations. Also correctly sets the domain on the translations.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props omarreiss, pento, ocean90.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45161" title="#45161: defect (bug): Set translations for Gutenberg scripts. (reopened)"&gt;#45161&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43878]: I18N: Set translations for all WordPress packages scripts.  Calls ...</title>
      
        <dc:creator>herregroen</dc:creator>

      <pubDate>Thu, 08 Nov 2018 11:33:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43878</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43878/1541676826043847</guid>
      <description>&lt;p&gt;
I18N: Set translations for all WordPress packages scripts.
&lt;/p&gt;
&lt;p&gt;
Calls &lt;code&gt;wp_set_script_translations&lt;/code&gt; for all packages scripts that have translations. Also correctly sets the domain on the translations.
&lt;/p&gt;
&lt;p&gt;
Props omarreiss, pento, ocean90.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/45161" title="#45161: defect (bug): Set translations for Gutenberg scripts. (reopened)"&gt;#45161&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>45161.2.diff attached to Ticket #45161</title>
      
        <dc:creator>herregroen</dc:creator>

      <pubDate>Thu, 08 Nov 2018 11:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/45161/45161.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/45161/45161.2.diff/1541676264233264</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #37110,​45310 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Nov 2018 11:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37110%2C45310</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37110%2C45310/1541675586562132</guid>
      <description>duplicate: &lt;p&gt;
Hello to WordPress Trac and thanks for opening this ticket!
&lt;/p&gt;
&lt;p&gt;
This has been previously reported a few times, most recently in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/45015" title="#45015: enhancement: Update of jQuery-version (1.12.4)? (closed: duplicate)"&gt;#45015&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
That task is probably best covered by ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37110" title="#37110: task (blessed): Update to jQuery 3.* (new)"&gt;#37110&lt;/a&gt; though, which is about upgrading jQuery.
&lt;/p&gt;
&lt;p&gt;
Note that we're currently still on 1.12 mainly because of browser support.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #45310 (Outdated jQuery) created</title>
      
        <dc:creator>ale5000</dc:creator>

      <pubDate>Thu, 08 Nov 2018 11:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45310</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45310/1541675254539269</guid>
      <description>&lt;p&gt;
WordPress 4.9.8 use jQuery v1.12.4, see here: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/js/jquery/jquery.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/js/jquery/jquery.js&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A vulnerability is present in this version of jQuery, see here: &lt;a class="ext-link" href="https://snyk.io/vuln/npm:jquery?lh=1.12.4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://snyk.io/vuln/npm:jquery?lh=1.12.4&lt;/a&gt;
Detected also in Audits of Google Chrome developer tools.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45309 (Incorrect @since in doc comments of class-wp-block-parser.php) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Nov 2018 10:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45309#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45309#comment:1/1541672821620013</guid>
      <description>invalid: &lt;p&gt;
&lt;code&gt;WP_Block_Parser&lt;/code&gt; is part of an &lt;a class="ext-link" href="https://www.npmjs.com/package/@wordpress/block-serialization-default-parser"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;external package&lt;/a&gt; as mentioned in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/45109#comment:8" title="Comment 8 for #45109: task (blessed): Introduce editor block related functions (assigned)"&gt;ticket:45109:8&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #45309 (Incorrect @since in doc comments of class-wp-block-parser.php) created</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Thu, 08 Nov 2018 10:15:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45309</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45309/1541672144724056</guid>
      <description>&lt;p&gt;
I noticed that block comments in &lt;code&gt;class-wp-block-parser.php&lt;/code&gt; are all referring to Gutenberg versions instead of WordPress 5.0.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #45271 (Can't enqueue WordPress 5.0 builtin reactjs) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Nov 2018 09:23:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45271#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45271#comment:15/1541668991858684</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43877" title="Script Loader: Ensure default packages are registered when loaded via ..."&gt;43877&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Script Loader: Ensure default packages are registered when loaded via load-scripts.php.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props CantoThemes, ocean90.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/45271" title="#45271: defect (bug): Can't enqueue WordPress 5.0 builtin reactjs (new)"&gt;#45271&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43877]: Script Loader: Ensure default packages are registered when loaded via ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Nov 2018 09:23:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43877</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43877/1541668990799450</guid>
      <description>&lt;p&gt;
Script Loader: Ensure default packages are registered when loaded via load-scripts.php.
&lt;/p&gt;
&lt;p&gt;
Props CantoThemes, ocean90.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/45271" title="#45271: defect (bug): Can't enqueue WordPress 5.0 builtin reactjs (new)"&gt;#45271&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #45157 (Upgrading from 4.9.9 to 5.0-alpha-43815 with Gutenberg plugin ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Nov 2018 04:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45157#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45157#comment:24/1541650944173881</guid>
      <description>&lt;p&gt;
Yup, auto-updates have rolled out, as can be seen in yesterday's &lt;a class="ext-link" href="https://wordpress.org/plugins/gutenberg/advanced/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ludicrous spike in downloads&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>smartyp</dc:creator>

      <pubDate>Thu, 08 Nov 2018 01:26:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:11/1541640380212783</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44229#comment:10" title="Comment 10"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It can break in edge cases like intranets and country blocking, and it ties a fairly important piece of the core to some external provider, which can break or go down or just change out from underneath us.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
But doesn't having the fallback (and/or an override option) mitigate all of this?
&lt;/p&gt;
&lt;p&gt;
Seems like an awesome win to me (in terms of stated objectives) for the vast majority of WP powered sites. Leaving it to plugins doesn't achieve the big potential gains.
&lt;/p&gt;
&lt;p&gt;
And core has previously relied on Google for Fonts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>