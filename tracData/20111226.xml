<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #19549 (Please remove X-Mailer from class-phpmailer) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 23:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19549#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19549#comment:4/1324940868010569</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19549#comment:3" title="Comment 3"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;wp_mail&lt;/code&gt; filter doesn't help, since that only lets me alter the arguments that WordPress passed in.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;phpmailer_init&lt;/code&gt; action does not let me alter the raw message produced by PHPMailer; it only lets me set some values in the &lt;code&gt;$phpmailer&lt;/code&gt; object.
&lt;/p&gt;
&lt;p&gt;
I guess I could just do &lt;code&gt;$phpmailer-&amp;gt;Version = "0.0.0"&lt;/code&gt; in that action to obfuscate it, but it doesn't let me do what I actually want to do: completely omit the "X-Mailer" and "X-Priority" headers.
&lt;/p&gt;
&lt;p&gt;
If there was a hook inside of &lt;code&gt;Send()&lt;/code&gt; that let me alter &lt;code&gt;$header&lt;/code&gt; before &lt;code&gt;SendmailSend&lt;/code&gt;, &lt;code&gt;SmtpSend&lt;/code&gt; or &lt;code&gt;MailSend&lt;/code&gt; were called, that would let me do what I want.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 23:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:11/1324940771576871</guid>
      <description>&lt;p&gt;
To disable wptexturize() globally now use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'do_texturize', '__return_false' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>patch-wptexturize.patch attached to Ticket #19550</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 23:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19550/patch-wptexturize.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19550/patch-wptexturize.patch/1324940584960198</guid>
      <description>&lt;p&gt;
Add 'do_texturize' filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:10/1324939229799225</guid>
      <description>&lt;p&gt;
Sure, that'd work for me...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:9/1324939076796334</guid>
      <description>&lt;p&gt;
Good point.
&lt;/p&gt;
&lt;p&gt;
What if we extend just the function?
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wptexturize($text) {
	$do_texturize = apply_filters( 'do_texturize', TRUE, $text );
	if ( ! $do_texturize )
		return $text;
	global $wp_cockneyreplace;
&lt;/pre&gt;&lt;p&gt;
Then you could disable wptexturize() case by case. More context for the filter would be better, of course …
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15657 (wp_strip_all_tags causes paragraphs to run together) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:35:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15657#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15657#comment:6/1324938902950904</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15657#comment:4" title="Comment 4"&gt;trepmal&lt;/a&gt;:
Right you are, I think this is a better version (compress incoming whitespace, don't leave beginning- and end-of-line spaces when emitting newlines):
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_strip_all_tags_patched($string, $remove_breaks = false) {
	$string = preg_replace('/[\r\n\t ]+/', ' ', $string);
	$string = preg_replace( '@&amp;lt;(script|style)[^&amp;gt;]*?&amp;gt;.*?&amp;lt;/\\1&amp;gt;@si', '', $string );
	$string = preg_replace( '@ *&amp;lt;/?\s*(P|UL|OL|DL|BLOCKQUOTE)\b[^&amp;gt;]*?&amp;gt; *@si', "\n\n", $string );
	$string = preg_replace( '@ *&amp;lt;(BR|DIV|LI|DT|DD|TR|TD|H\d)\b[^&amp;gt;]*?&amp;gt; *@si', "\n", $string );
	$string = preg_replace( "@\n\n\n+@si", "\n\n", $string );
	$string = strip_tags( $string );
	if ( $remove_breaks )
		$string = preg_replace('/[\r\n\t ]+/', ' ', $string);
	return trim( $string );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:25:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:12/1324938334879858</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Currently we do this for IE8 &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/template.php#L1652"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/template.php#L1652&lt;/a&gt;. Can add IE9 and perhaps 10 when it comes out. IE7 is still loading ie.css which seems the sensible thing to do until we drop support for it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah this ticket is talking about for the front-end, not backend.
&lt;/p&gt;
&lt;p&gt;
Here's what TwentyEleven does to get the IE class using conditional templates, it's fully caching-compliant too and doesn't require extra stylesheets: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-content/themes/twentyeleven/header.php#L11"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-content/themes/twentyeleven/header.php#L11&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:22:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:6/1324938151473511</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:8/1324937276915251</guid>
      <description>&lt;p&gt;
The problem isn't just direct calls to wptexturize, it's things like this that occur in other plugins that are *also* trying to get around the effects of wptexturize, for example, Otto's Simple Facebook Connect does:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	remove_filter( 'the_content', 'wptexturize' );
	$text = apply_filters('the_content', $text);
	add_filter( 'the_content', 'wptexturize' );
&lt;/pre&gt;&lt;p&gt;
If wptexturize was a pluggable function that I could turn into a no-op, it wouldn't matter to me that random plugins re-add it to the_content filter because they think I want it there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:11/1324935183128889</guid>
      <description>&lt;p&gt;
@azaozz - I was referring to the very beginning of the ticket as body_class() is required for themes submitted in WPORG. Therefore, for easier and standardized compatibility, my idea was extending body_class() (or now, creating html_class() for example) that could be a requirement that helps browser compatibility settings.
&lt;/p&gt;
&lt;p&gt;
However, as I see I'm still going to use filters for this, thanks for the heads up guys.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19541 (wp_admin_bar_new_content_menu does not respect menu_position) updated</title>
      
        <dc:creator>tar.gz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19541#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19541#comment:3/1324935150166740</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:10/1324935023351652</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:7" title="Comment 7"&gt;nofearinc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From what I see this is used for thickbox iframes and is already part of the core. Still doesn't make any sense to add it to the html or body tag by default?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is used everywhere in the admin except when showing specific error pages like errors while installing, etc. where we don't have access to all code (and don't queue styles). I'm not sure what you mean by "Still doesn't make any sense to add it to the html or body tag by default?" :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:9/1324934461550324</guid>
      <description>&lt;p&gt;
I did indeed. Just brainstorming on latest comments by azaozz and getting updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:8/1324934355038890</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:7" title="Comment 7"&gt;nofearinc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From what I see this is used for thickbox iframes and is already part of the core. Still doesn't make any sense to add it to the html or body tag by default?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The thickbox is part of the admin, which is never cached.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This could save several conditional checks in the header calls and external files as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You didn't read toscho's comment, did you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:5/1324934226520862</guid>
      <description>&lt;p&gt;
19666.patch adds an onBeforeSetContent handler to TinyMCE that converts newlines to BRs inside PREs just before content is added to the editor. You can see how this fixes the behavior in &lt;a class="ext-link" href="http://fiddle.tinymce.com/cAaaab"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this fiddle&lt;/a&gt;. wp-admin/js/editor.js removes these before POSTing or switching editors, so I think this should not add side-effects.
&lt;/p&gt;
&lt;p&gt;
BTW I was able to fix this during switching in editor.js, but this still did not cover the case of when the Visual editor is initialized on page load. The tinyMCE event handler covers both cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:7/1324933862286400</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
From what I see this is used for thickbox iframes and is already part of the core. Still doesn't make any sense to add it to the html or body tag by default?
&lt;/p&gt;
&lt;p&gt;
This could save several conditional checks in the header calls and external files as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19666.patch attached to Ticket #19666</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19666/19666.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19666/19666.patch/1324933759397217</guid>
      <description>&lt;p&gt;
patch for issue 19666: /wp-includes/class-wp-editor.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15098 (Can't add post with featured image using only XML-RPC) updated</title>
      
        <dc:creator>trusktr</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15098#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15098#comment:11/1324933089375846</guid>
      <description>&lt;p&gt;
I can't wait for featured images via the android app. :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:6/1324933046563259</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Currently we do this for IE8 &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/template.php#L1652"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/template.php#L1652&lt;/a&gt;. Can add IE9 and perhaps 10 when it comes out. IE7 is still loading ie.css which seems the sensible thing to do until we drop support for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19671 (Only retrieve categories list if post type supports categories) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19671#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19671#comment:1/1324931064402239</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>category-template.diff attached to Ticket #19671</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:02:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19671/category-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19671/category-template.diff/1324929776879287</guid>
      <description>&lt;p&gt;
attempt to fetch categories if categories applicable for post type
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19671 (Only retrieve categories list if post type supports categories) created</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19671</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19671/1324929744070756</guid>
      <description>&lt;p&gt;
The &lt;code&gt;get_the_category_list&lt;/code&gt; function attempts to pull a list of categories before it checks if a category relationship applies to the current &lt;code&gt;post_type&lt;/code&gt;. Attached patch moves the category retrieval down a few lines: after we've determined a category relationship could exist.
&lt;/p&gt;
&lt;h3 id="Before"&gt;Before&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Fetch and assign all categories to a variable
&lt;/li&gt;&lt;li&gt;Test if post type uses categories
&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="After"&gt;After&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Test if post type uses categories
&lt;/li&gt;&lt;li&gt;Fetch and assign all categories to a variable
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Saves fetch time and filtering for post types without a category relationship.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 19:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:5/1324926455158834</guid>
      <description>wontfix: &lt;p&gt;
Yes, I haven't thought about caching. Plugins like WP Super Cache simply couldn't work, since the page would have to be generated dynamically for each user.
&lt;/p&gt;
&lt;p&gt;
So, this is not something we should include in Core, especially since it's possible to do with a filter.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14877 (Ability to create exclusive custom taxonomies) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Mon, 26 Dec 2011 17:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14877#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14877#comment:18/1324921466118010</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 17:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:4/1324921059384948</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:3" title="Comment 3"&gt;nofearinc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
conditional are standard for including scripts, but including files with 3-10 lines of CSS styling might be an overhead in my opinion (using combine scripts could be a solution here).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Don’t include separate CSS files, &lt;a class="ext-link" href="http://toscho.de/2010/wordpress-internet-explorer-ohne-css-hacks-ansprechen/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;add class names to the HTML element&lt;/a&gt; and use separate &lt;em&gt;selectors&lt;/em&gt; in your stylesheet. Content-Negotiation is tricky. Getting it right with local caches and remote proxy servers is more work than most people imagine. Avoid it whenever possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18179 (WP_Meta_Box) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Mon, 26 Dec 2011 17:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18179#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18179#comment:48/1324920594251540</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 17:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:3/1324919102438940</guid>
      <description>&lt;p&gt;
I don't really mind checking for the user agent string. There are different tools and plugins checking for compatibility etc that represent themselves for other browsers - so why should it be wrong this way?
&lt;/p&gt;
&lt;p&gt;
@toscho - haven't thought about this - conditional are standard for including scripts, but including files with 3-10 lines of CSS styling might be an overhead in my opinion (using combine scripts could be a solution here).
&lt;/p&gt;
&lt;p&gt;
I don't see any difference between setting the ID in html tag or placing it in the body. Probably I lack seniority in caching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 16:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:2/1324918790423060</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This would interfere with caching plugins. Check for features, not for UA strings. Conditional comments are the way to go, as @scribu suggested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 26 Dec 2011 15:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:4/1324912159936331</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://www.tinymce.com/develop/bugtracker_view.php?id=4918"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TinyMCE bug filed&lt;/a&gt;. As I noted there, this behavior might be due to the improvements in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16394" title="Remove invalid parent paragraph when pasting in the visual editor or ..."&gt;[16394]&lt;/a&gt;. Namely, if the JS version of wpautop was incorrectly converting PRE newlines to BRs before switching to the Visual editor, these BRs were working around the TinyMCE bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19670.patch attached to Ticket #19670</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 15:08:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19670/19670.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19670/19670.patch/1324912138291714</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19670 (Two notices on wp-signup.php) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 15:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19670</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19670/1324912115085224</guid>
      <description>&lt;ol&gt;&lt;li&gt;Go to wp-signup.php.
&lt;/li&gt;&lt;li&gt;Select "Just a username, please", but leave "Username" and "Email Address" fields blank.
&lt;/li&gt;&lt;li&gt;See the notices:
&lt;pre class="wiki"&gt;Notice: Undefined offset: 0 in wp-includes/ms-functions.php on line 442
Notice: Undefined index: blog in wp-signup.php on line 260
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The patch also simplifies checkboxes logic a bit.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 14:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:3/1324911013482980</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 26 Dec 2011 14:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:2/1324909309169136</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This does not appear to be a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15367" title="#15367: defect (bug): WordPress strips multiple line breaks inside of &amp;lt;pre&amp;gt; tags (closed: fixed)"&gt;#15367&lt;/a&gt;, but it is rather caused by a new TinyMCE bug you can &lt;a class="ext-link" href="http://fiddle.tinymce.com/89aaab"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;see in this fiddle&lt;/a&gt;. I walked through editor.dev.js in a debugger to verify it's handling the markup correctly.
&lt;/p&gt;
&lt;p&gt;
I'm reporting it to TinyMCE now, but I think this will certainly cause problems for up-to-date WP users in the meantime.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>mcgaritydotme</dc:creator>

      <pubDate>Mon, 26 Dec 2011 13:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:4/1324907061629305</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 13:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:1/1324906173309611</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Such a browser class would depend on the user agent string, which is not always accurate.
&lt;/p&gt;
&lt;p&gt;
If you want to target IE versions, a more reliable method is employed in the Twentyeleven theme, using conditional comments:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3/wp-content/themes/twentyeleven/header.php#L12"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.3/wp-content/themes/twentyeleven/header.php#L12&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) created</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 13:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669/1324904559778620</guid>
      <description>&lt;p&gt;
I didn't find this request with the search so apologies if it has already been discussed here.
&lt;/p&gt;
&lt;p&gt;
My request is for adding browser class to the body_class function. I think it would be useful core functionality and I have used this one via external scripts. No extra ie8.css and ie9.css files would be needed and several CSS declarations could be listed separated with commas in the main css files. One great idea as &lt;a class="ext-link" href="http://www.nathanrice.net/blog/browser-detection-and-the-body_class-function/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;listed in this blog&lt;/a&gt; is what I recall.
&lt;/p&gt;
&lt;p&gt;
Browsed through the body_class function and down there but haven't found any resolution in the repository.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17301 (Keep the connection open when doing upgrades or long-running operations) updated</title>
      
        <dc:creator>hubertnguyen</dc:creator>

      <pubDate>Mon, 26 Dec 2011 12:48:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17301#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17301#comment:3/1324903695763246</guid>
      <description>&lt;p&gt;
Small note: the "Smush.it bulk" process does it really well. I tried on RackSpace Cloudsites, and it never times out, I left the process run for more than 45mn. Hope that Wordpress Core and plug-in update will never time out in the near future :)
&lt;/p&gt;
&lt;p&gt;
/wp-admin/upload.php?page=wp-smushit-bulk
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19659 (using %tags% in permalinks doesn't work) updated</title>
      
        <dc:creator>hubertnguyen</dc:creator>

      <pubDate>Mon, 26 Dec 2011 12:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19659#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19659#comment:4/1324903442932486</guid>
      <description>&lt;p&gt;
dd32 - I'll do that next time. I didn't think that I should edit it without being 100% sure first. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19668.after.png attached to Ticket #19668</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19668/19668.after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19668/19668.after.png/1324899478194234</guid>
      <description>&lt;p&gt;
With 19668.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19668.patch attached to Ticket #19668</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19668/19668.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19668/19668.patch/1324899462937553</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>19668.wp33.png attached to Ticket #19668</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19668/19668.wp33.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19668/19668.wp33.png/1324899453680124</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>19668.wp32.png attached to Ticket #19668</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19668/19668.wp32.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19668/19668.wp32.png/1324899445109410</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19668 ("Remember Me" checkbox is slightly off in Opera and Chrome) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19668</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19668/1324899436418157</guid>
      <description>&lt;p&gt;
See the screenshots. Introduced during CSS merge, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18959" title="Bottom out checkboxes and radio buttons (seems to line them up nicely ..."&gt;[18959]&lt;/a&gt; in particular.
&lt;/p&gt;
&lt;p&gt;
The patch makes the checkbox look consistent in Firefox 9, Chrome 16, Opera 11.60, IE 8.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18740" title="#18740: defect (bug): Login form looks janky (closed: fixed)"&gt;#18740&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19319" title="#19319: defect (bug): Restore line height for &amp;#34;Log In&amp;#34; button (closed: fixed)"&gt;#19319&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:20/1324884728207123</guid>
      <description>&lt;p&gt;
19627-patch1.diff is an example of the latter. It allows a theme to register that it is optimized to be used with a static front page template by appending the following line to the theme's style.css file:
&lt;/p&gt;
&lt;p&gt;
Front Page: static
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19627-patch1.diff attached to Ticket #19627</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19627/19627-patch1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19627/19627-patch1.diff/1324884692192218</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19659 (using %tags% in permalinks doesn't work) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19659#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19659#comment:3/1324883777728667</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The codex would let one think otherwise:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The codex is a wiki, anyone can add/edit/update the documentation there :)
&lt;/p&gt;
&lt;p&gt;
I've removed the reference to %tag% from there though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19659 (using %tags% in permalinks doesn't work) updated</title>
      
        <dc:creator>hubertnguyen</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19659#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19659#comment:2/1324883527544139</guid>
      <description>&lt;p&gt;
dd32, thanks for confirming. The codex would let one think otherwise:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Using_Permalinks"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Using_Permalinks&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
"You can use these tags to customize your "Pretty" or "Almost Pretty" permalinks. A few hints:"
&lt;/p&gt;
&lt;p&gt;
%tag%
A sanitized version of the tag name (tag slug field on New/Edit Tag panel).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15367 (WordPress strips multiple line breaks inside of &lt;pre&gt; tags) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:09:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15367#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15367#comment:13/1324883397870996</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19666" title="#19666: defect (bug): Switching from HTML to Visual editor removes some line breaks inside PRE (closed: fixed)"&gt;#19666&lt;/a&gt; as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:1/1324883331296546</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15367" title="#15367: defect (bug): WordPress strips multiple line breaks inside of &amp;lt;pre&amp;gt; tags (closed: fixed)"&gt;#15367&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:22/1324882832506563</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
What if we create a _wp_revision_template meta value that is only used and updated by previews?
&lt;/p&gt;
&lt;p&gt;
If it's tied to the post instead of the revision we could only have one per-post, solving the duplicates issue. I'm assuming it's unlikely people would need to store the template per revision or per-preview.
&lt;/p&gt;
&lt;p&gt;
This fixes the need to have meta on revisions, but does open the door for adding excess meta to posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19667 (Allow for wp-config.php to be multiple levels up (for sub-directory ...) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 06:56:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19667#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19667#comment:2/1324882616695986</guid>
      <description>duplicate: &lt;p&gt;
This has been suggested before: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12988" title="#12988: enhancement: Modify wp-load.php to search for wp-config.php 2 directories higher (closed: wontfix)"&gt;#12988&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11895 (Allow more specific image size editing) updated</title>
      
        <dc:creator>goto10</dc:creator>

      <pubDate>Mon, 26 Dec 2011 06:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11895#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11895#comment:10/1324882200408606</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 05:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:19/1324877124008643</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Should it perhaps display a select box with a list of pages to choose from or simply give a notice that the theme is recommended to be used with a static home page and give a link to the reading settings page (similar to how a theme supporting widgets gives a link to configure them)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19667 (Allow for wp-config.php to be multiple levels up (for sub-directory ...) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 05:01:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19667#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19667#comment:1/1324875669303485</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19667 (Allow for wp-config.php to be multiple levels up (for sub-directory ...) created</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 04:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19667</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19667/1324875326233683</guid>
      <description>&lt;p&gt;
Currently, you can leave wp-config.php in the standard installation directory of WordPress or move it up one level. At work, we generally install WordPress in root and move wp-config.php up one level (out of the servers content directory) for security purposes. It would be nice if we could do this with sub-directory installs as well (e.g. install in /wordpress and put wp-config.php in /../ [2 levels up]).
&lt;/p&gt;
&lt;p&gt;
Perhaps we could use some sort of recursive directory search that starts in the WordPress install directory and continues going up levels until it finds a wp-config.php file (if one exists). There should, of course, be some cut off level to stop searching at. I think that one level above the document root would be sufficient.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>anointed</dc:creator>

      <pubDate>Mon, 26 Dec 2011 02:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:18/1324867834839332</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) created</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Sun, 25 Dec 2011 21:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666/1324848899445436</guid>
      <description>&lt;p&gt;
All line breaks inside PRE elements used to transmit correctly when switching editor mode from HTML to Visual. Around WP3.1 or so, line breaks started to be removed if they happened to be inside an inline element. The common use case is a single CODE element in a PRE element:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;Line 1
Line 2
Line 3&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The above markup used to be handled correctly when switching between editor modes in either direction, but now the line breaks are converted to spaces when switching from HTML to Visual mode.
&lt;/p&gt;
&lt;p&gt;
Many users have posts with a single CODE inside PRE, as it's semantically correct for source code, and is the convention required to support some syntax highlighters like Chili.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19665 (Plugin installer beaks https URLs) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Dec 2011 18:52:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19665#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19665#comment:1/1324839146469120</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Links in plugin descriptions go through &lt;code&gt;links_add_base_url().&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The problem is that &lt;code&gt;_links_add_base()&lt;/code&gt; only checks for &lt;code&gt;http&lt;/code&gt;:&lt;br /&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3/wp-includes/formatting.php#L2815"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.3/wp-includes/formatting.php#L2815&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19665.patch attached to Ticket #19665</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Dec 2011 18:45:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19665/19665.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19665/19665.patch/1324838711305363</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>paulschreiber</dc:creator>

      <pubDate>Sun, 25 Dec 2011 18:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:17/1324836634383992</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I keep getting bit by this and end up patching individual plugins (Raw HTML Pro, Advanced Custom Fields, More Fields, Post Page Association, etc.) They end up generating bad paths to CSS and JS — the &amp;lt;link&amp;gt; and &amp;lt;script&amp;gt; tags have the filesystem path embedded in them.
&lt;/p&gt;
&lt;p&gt;
It would be nice if WordPress' plugins_url() did the right thing out of the box.
&lt;/p&gt;
&lt;p&gt;
There are other complaints about symlinked plugins:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/13550"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/13550&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/16199"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/16199&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I urged you to seriously consider fixing this for 3.3.x or 3.4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19643 (Allow array for $extra_fields in request_filesystem_credentials) updated</title>
      
        <dc:creator>griffinjt</dc:creator>

      <pubDate>Sun, 25 Dec 2011 17:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19643#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19643#comment:8/1324835760506678</guid>
      <description>&lt;p&gt;
Ok,cool. No worries!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18261 (WYSIWYG toolbar 'indent button' produces invalid markup) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 25 Dec 2011 17:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18261#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18261#comment:20/1324834060647263</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19631" title="Editor: fix invalid nested lists, fix tabbing - Tab goes to ..."&gt;[19631]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: fix invalid nested lists, fix tabbing - Tab goes to Publish/Update, Shift + Tab goes back to Title, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18261" title="#18261: defect (bug): WYSIWYG toolbar 'indent button' produces invalid markup (closed: fixed)"&gt;#18261&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19631]: Editor: fix invalid nested lists, fix tabbing - Tab goes to ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 25 Dec 2011 17:27:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19631</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19631/1324834059850965</guid>
      <description>&lt;p&gt;
Editor: fix invalid nested lists, fix tabbing - Tab goes to Publish/Update, Shift + Tab goes back to Title, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18261" title="#18261: defect (bug): WYSIWYG toolbar 'indent button' produces invalid markup (closed: fixed)"&gt;#18261&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19665 (Plugin installer beaks https URLs) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 25 Dec 2011 15:57:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19665</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19665/1324828632772539</guid>
      <description>&lt;p&gt;
From plugin installer search for plugin which has https link(s) in its readme.txt (e.g. AntiVirus). When you show details for such plugin, all https links will be broken - they will be prefixed by link to plugin's page in repository. I am not sure if API returns such links, or this prefix is added on WP side.
&lt;/p&gt;
&lt;p&gt;
These link(s) are displayed correctly on wordpress.org plugin's page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12104 ('moderate_comments' capability by itself should grant the user the ...) updated</title>
      
        <dc:creator>linuxologos</dc:creator>

      <pubDate>Sun, 25 Dec 2011 10:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12104#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12104#comment:15/1324810140322820</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/12104/12104.patch" title="Attachment '12104.patch' in Ticket #12104"&gt;12104.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/12104/12104.patch" title="Download"&gt;​&lt;/a&gt; should allow a user/role with moderate_comments + edit_posts capabilities to access the Comments screen and moderate all comments. I think this is the most minimalistic and backwards compatible approach.
&lt;/p&gt;
&lt;p&gt;
The only discussion this could raise, which I can think of, is whether such a user/role should have his comments checked upon submission or not (see: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3/wp-includes/comment.php#L641"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.3/wp-includes/comment.php#L641&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12104.patch attached to Ticket #12104</title>
      
        <dc:creator>linuxologos</dc:creator>

      <pubDate>Sun, 25 Dec 2011 10:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12104/12104.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12104/12104.patch/1324808302564629</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16528 (delete_users cap should distinguish roles) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 25 Dec 2011 03:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16528#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16528#comment:5/1324783026244582</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>