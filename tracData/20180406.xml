<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 06 Apr 2018 23:32:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:10/1523057558132466</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43558#comment:4" title="Comment 4"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Copying in @GaryJ's &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:98" title="#23912: enhancement: Add Composer package description (new)"&gt;ticket:23912#comment:98&lt;/a&gt; for further context:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &lt;code&gt;.travis.yml&lt;/code&gt; files shows PHPUnit can be used at version 4, 5 or 6, depending on the PHP version available - and that's great, but get it down in a &lt;code&gt;composer.json&lt;/code&gt;, and a &lt;code&gt;composer install&lt;/code&gt; means that the switch statement can be dropped, and developers working locally can get the right version too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A note for anyone who tries to tackle this: The concept of conditional dependencies does not exist in Composer, which is why this logic is in &lt;code&gt;.travis.yml&lt;/code&gt; and why (AFAIK) we can't add PHPUnit as a Composer dependency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43546 (Add to the privacy tools UX a means to export personal data by ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 06 Apr 2018 23:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43546#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43546#comment:6/1523057527513540</guid>
      <description>&lt;p&gt;
@melchoyce thank you, thank you, thank you. @mikejolley and I will get this rolled into our little side repo and then return here with a patch pronto
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42807 (Add filter to modfiy wp.api versionString) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 06 Apr 2018 23:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42807#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42807#comment:13/1523057063892664</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43707 (Why Using Un-nacessory file(JS &amp; CSS)) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 06 Apr 2018 23:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43707#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43707#comment:2/1523056734649572</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37392 (Multisite "Sites" screen: Add links to filter websites by status) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 06 Apr 2018 23:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37392#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37392#comment:21/1523055740018348</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
all should probably not be part of the $slug_to_label array, as it's not a status and its link should have a different structure (it shouldn't do ?status=all, but instead should not add any status query arg). See how &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-posts-list-table.php#L323"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-posts-list-table.php#L323&lt;/a&gt; does that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I hear you that there shouldn't be a link with &lt;code&gt;?status=all&lt;/code&gt;, so I made an adjustment that avoids that, but I do prefer how having &lt;code&gt;all&lt;/code&gt; be in the array is avoids quite a bit of repeated code. If you still prefer not having &lt;code&gt;all&lt;/code&gt; in the array, I can make another patch that does that.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
here are a number of missing blank lines there
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure where there should be blank lines. I double-checked the WP coding standards and don't see anything about where there should be blank lines. Could you point me to some documentation or help me see where blank lines are needed?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
some parts are incorrectly indented.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I double-checked that it's using real tabs instead of spaces for indentation and don't see where the indentation is wrong, sorry!
&lt;/p&gt;
&lt;p&gt;
I hope this is a bit better though
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37392.5.patch attached to Ticket #37392</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 06 Apr 2018 22:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37392/37392.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37392/37392.5.patch/1523055287459791</guid>
      <description>&lt;p&gt;
Patch uploaded in response to &lt;a href="https://core.trac.wordpress.org/ticket/37392#comment:16"&gt;https://core.trac.wordpress.org/ticket/37392#comment:16&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42807 (Add filter to modfiy wp.api versionString) closed</title>
      
        <dc:creator>mkaz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 22:29:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42807#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42807#comment:12/1523053798547780</guid>
      <description>maybelater: &lt;p&gt;
I'm solving this issue in a different way which doesn't require this change, I'll close out this ticket.
&lt;/p&gt;
&lt;p&gt;
I still think a filter to be able to modify the version string would be useful, but understand it could be a bit dangerous.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10653 (Update comment_author when display_name changes) updated</title>
      
        <dc:creator>matjack1</dc:creator>

      <pubDate>Fri, 06 Apr 2018 22:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10653#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10653#comment:20/1523052055238468</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10653 (Update comment_author when display_name changes) updated</title>
      
        <dc:creator>matjack1</dc:creator>

      <pubDate>Fri, 06 Apr 2018 22:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10653#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10653#comment:19/1523052017951178</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've just added a patch working on WP 5.0.0 with the missing tests.
&lt;/p&gt;
&lt;p&gt;
I've written the tests first on the current function and then updated with the one in the patch. This showed a different behaviour that I've now fixed, but please let me know if you agree with my refactoring.
&lt;/p&gt;
&lt;p&gt;
Plus I was wondering if we should pass the &lt;code&gt;$before_alias&lt;/code&gt; and &lt;code&gt;$after_alias&lt;/code&gt; also in the &lt;code&gt;comment_author&lt;/code&gt; function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10653.diff attached to Ticket #10653</title>
      
        <dc:creator>matjack1</dc:creator>

      <pubDate>Fri, 06 Apr 2018 21:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10653/10653.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10653/10653.diff/1523051833234129</guid>
      <description>&lt;p&gt;
Added unit tests and fixed different behaviour from current one
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Fri, 06 Apr 2018 21:38:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:45/1523050706298506</guid>
      <description>&lt;p&gt;
So today I was chatting about this ticket with some colleagues and one of them said the following:
&lt;/p&gt;
&lt;p&gt;
What if for one of my old WordPress sites, the URL was myname.com and I went to WordPress.org under GDPR Right To Be Forgotten asking them to delete their entire record of me?
&lt;/p&gt;
&lt;p&gt;
Thoughts on this?
&lt;/p&gt;
&lt;p&gt;
Further, this user would be entitled to download a copy or his or her data, too.
&lt;/p&gt;
&lt;p&gt;
In this light - some more info would be helpful:
&lt;/p&gt;
&lt;p&gt;
1) who controls the data?
2) where is the data stored?
3) who has access to the data?
4) when is the data destroyed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Fri, 06 Apr 2018 21:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:88/1523050459977132</guid>
      <description>&lt;p&gt;
Just making note of this pull request I've added to the gutenberg project: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/6051"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/6051&lt;/a&gt; (and the corresponding issue: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/6015"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/6015&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
I think it provides a good path forward for handling getting the subset of strings needed for any js files loaded on the fly.
&lt;/p&gt;
&lt;p&gt;
I'm still uncertain how the php part of this piece will go but at a minimum it would require:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;An api for registering a json map file that provides a map of js "chunk" to strings in that chunk (or maybe that would be auto-detected from a standard "map" file name).
&lt;/li&gt;&lt;li&gt;An api for plugins to register scripts to that map (either an additional arg on &lt;code&gt;wp_register_script&lt;/code&gt; or &lt;code&gt;wp_enqueue_script&lt;/code&gt; or as I suggested in the issue a standalone method &lt;code&gt;wp_register_script_i18($script_handle, $chunk_name, $domain)&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;On printing enqueued scripts, &lt;code&gt;WP_Scripts&lt;/code&gt; would grab the list of registered "i18n chunks" and using that grab the strings from $translations to pass to &lt;code&gt;wpi18n.setLocale&lt;/code&gt; (assuming the wpi18n package is what lands in core).
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>nickwuk</dc:creator>

      <pubDate>Fri, 06 Apr 2018 21:06:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:4/1523048812000820</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43715" title="#43715: enhancement: Add Privacy Policy link to bundled theme footers (closed: fixed)"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Great idea. However does the popup notification not need to give granular information about and control over the different classes of cookies like the OneTrust or CookieBot notifications? Also to provide a facility to revoke consent as well as accepting, and to record the user's id and date of acceptance for each class(and maybe even the Privacy Policy version)?
&lt;/p&gt;
&lt;p&gt;
I'm NOT a lawyer, I'm just interested in following WP developments with regards GDPR.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 06 Apr 2018 20:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:3/1523047555837376</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1523047553000392"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 06 Apr 2018 20:42:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:2/1523047339109970</guid>
      <description>&lt;p&gt;
+100 - i especially like the idea of automatically linking the privacy policy page if one exists - now that we have that as a dedicated option
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 06 Apr 2018 20:39:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:1/1523047192510516</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) created</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 06 Apr 2018 20:39:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715/1523047164050353</guid>
      <description>&lt;p&gt;
We are probably all using some kind of plugin that throws a little notification ( popup box / bar you name it ) in our front-end to inform visitors about having Cookies &amp;amp; a Privacy Policy page / Terms &amp;amp; Conditions and anything else you can probably have for users that is mandatory to read.
&lt;/p&gt;
&lt;p&gt;
At least it's mandatory in the EU for quite some time now as well pre-GDPR.
&lt;/p&gt;
&lt;p&gt;
One fine example is the &lt;a class="ext-link" href="https://wordpress.org/plugins/uk-cookie-consent/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/uk-cookie-consent/&lt;/a&gt; ( I just use that but there are plenty others as well in the repo ).
&lt;/p&gt;
&lt;p&gt;
I'd say it's time to bundle something like this with core just to be 100%  sure that it will keep everybody on the 'safe' side:
&lt;/p&gt;
&lt;p&gt;
Since we are helping the website owners create their Privacy Policy page and also help them include all information needed / possible about the cookies etc that they will be using, why not throw a notification as well in the front end that users could customize with some simple css ?
&lt;/p&gt;
&lt;p&gt;
My thinking is this to be more precise:
&lt;/p&gt;
&lt;p&gt;
If you have selected a Privacy Policy page from the new Tools that we are adding + that page gets a 'published' status, the popup is going to be automatically enabled in the front end for you as well pointing  to that page. This way there's no way of 'forgetting' it and the users are automatically informed.
&lt;/p&gt;
&lt;p&gt;
Of course there can be an option to disable it if the Admin wants to use any other plugin or create any custom notification etc.
&lt;/p&gt;
&lt;p&gt;
What do you think, can we go for this as well since it won't be intrusive in any way if Admins can easily 'disable' it ? I'd personally prefer to have it built in corewise than depend on a plugin.
&lt;/p&gt;
&lt;p&gt;
If you want a full scope of this it should be something like this (fairly simple):
&lt;/p&gt;
&lt;p&gt;
Title: Privacy Policy
Text: Read about the privacy policy and the cookies we use.
Button: I Accept.
&lt;/p&gt;
&lt;p&gt;
When clicking the button 1 extra cookie drops that the user has accepted so it won't popup again. We could also provide a UX in the admin so the site owner can select what the title/text/button  would write ofc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43714 (remove_menu_page(): E_WARNING: Invalid argument supplied for foreach()) created</title>
      
        <dc:creator>conner_bw</dc:creator>

      <pubDate>Fri, 06 Apr 2018 20:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43714</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43714/1523046939468068</guid>
      <description>&lt;p&gt;
&lt;code&gt;remove_menu_page()&lt;/code&gt; sometimes logs: E_WARNING: Invalid argument supplied for foreach()
&lt;/p&gt;
&lt;p&gt;
Problematic code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
function remove_menu_page( $menu_slug ) {
  global $menu;
  foreach ( $menu as $i =&amp;gt; $item ) {
  // ...
&lt;/pre&gt;&lt;p&gt;
URL        /wp/wp-admin/admin-ajax.php
HTTP referrer        &lt;a class="ext-link" href="https://_SOME_SITE_/wp/wp-admin/network/users.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://_SOME_SITE_/wp/wp-admin/network/users.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Stack trace
&lt;/p&gt;
&lt;pre class="wiki"&gt;/vendor/soberwp/intervention/src/Module/RemoveMenuItems.php (121)
/web/wp/wp-includes/class-wp-hook.php (286)
/web/wp/wp-includes/class-wp-hook.php (310)
/web/wp/wp-includes/plugin.php (453)
/web/wp/wp-admin/admin-ajax.php (44)
&lt;/pre&gt;&lt;p&gt;
Offending line:
&lt;a class="ext-link" href="https://github.com/soberwp/intervention/blob/7d69c58b32fce29aad08e4ff9c9de43963122610/src/Module/RemoveMenuItems.php#L121"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/soberwp/intervention/blob/7d69c58b32fce29aad08e4ff9c9de43963122610/src/Module/RemoveMenuItems.php#L121&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Possible reason: &lt;code&gt;global $menu&lt;/code&gt; not defined?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 06 Apr 2018 19:54:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:74/1523044488467434</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
One other question here: how does the autosave actually get applied to the post?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When the post edit screen loads, if an autosave is present and belongs to the current user and is newer than and different from the current save, a notice is displayed at the top of the screen informing the user that a newer autosave is available, with a link to "View the autosave".
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cl.ly/3K0g2U3I293i/Image%202018-04-06%20at%203.51.16%20PM.png"&gt;&lt;img src="https://cl.ly/3K0g2U3I293i/Image%202018-04-06%20at%203.51.16%20PM.png" alt="https://cl.ly/3K0g2U3I293i/Image%202018-04-06%20at%203.51.16%20PM.png" crossorigin="anonymous" title="https://cl.ly/3K0g2U3I293i/Image%202018-04-06%20at%203.51.16%20PM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Clicking the link takes the user into the revisions interface, viewing the autosave. Clicking 'Restore This Autosave' restores this autosave as the post content.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cl.ly/1e2C260J2x3L/Image%202018-04-06%20at%203.51.58%20PM.png"&gt;&lt;img src="https://cl.ly/1e2C260J2x3L/Image%202018-04-06%20at%203.51.58%20PM.png" alt="https://cl.ly/1e2C260J2x3L/Image%202018-04-06%20at%203.51.58%20PM.png" crossorigin="anonymous" title="https://cl.ly/1e2C260J2x3L/Image%202018-04-06%20at%203.51.58%20PM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Aside: if the author's autosave is older than the currently saved post when the post edit screen loads, it is deleted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40436.docs.diff attached to Ticket #40436</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 06 Apr 2018 19:16:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40436/40436.docs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40436/40436.docs.diff/1523042204440916</guid>
      <description>&lt;p&gt;
Add missing documentation for 'sort' parameter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #37110,​43694 batch updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 06 Apr 2018 19:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37110%2C43694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37110%2C43694/1523041841931992</guid>
      <description>duplicate: &lt;p&gt;
Hi @joellisenby thanks for the report. This is a concern, and we are already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37110" title="#37110: task (blessed): Update to jQuery 3.* (new)"&gt;#37110&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 19:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:27/1523041794372887</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42964" title="Privacy: fixes and updates for the method to confirm user requests by ..."&gt;42964&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: fixes and updates for the method to confirm user requests by email.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improve function and variable names.
&lt;/li&gt;&lt;li&gt;Allow extra data to be passed with the request.
&lt;/li&gt;&lt;li&gt;Make the option/user meta names more consistent.
&lt;/li&gt;&lt;li&gt;Adds an inline comment explaining use of hash.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props mikejolley.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;#43443&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42964]: Privacy: fixes and updates for the method to confirm user requests by ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 19:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42964</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42964/1523041793898047</guid>
      <description>&lt;p&gt;
Privacy: fixes and updates for the method to confirm user requests by email.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improve function and variable names.
&lt;/li&gt;&lt;li&gt;Allow extra data to be passed with the request.
&lt;/li&gt;&lt;li&gt;Make the option/user meta names more consistent.
&lt;/li&gt;&lt;li&gt;Adds an inline comment explaining use of hash.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props mikejolley.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;#43443&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43708 (Since the latest release 4.9.5 I can't see my images in my media library) updated</title>
      
        <dc:creator>chrissy59</dc:creator>

      <pubDate>Fri, 06 Apr 2018 18:41:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43708#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43708#comment:2/1523040075665806</guid>
      <description>&lt;p&gt;
If I can't debug this via the support forum (I am trying now - see: &lt;a class="ext-link" href="https://wordpress.org/support/topic/media-library-63/?view=all#post-10154002"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/media-library-63/?view=all#post-10154002&lt;/a&gt;) can I get back to you for help?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #40436,​43705 batch updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 06 Apr 2018 18:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40436%2C43705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40436%2C43705/1523039830663310</guid>
      <description>duplicate: &lt;p&gt;
Hey, welcome back to Trac! There is not need to open duplicate tickets just because old ones seem abandoned :) feel free to star it, and continue (bump) the discussion there.
&lt;/p&gt;
&lt;p&gt;
Closing as duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40436" title="#40436: defect (bug): Custom taxonomy terms order lost under wp-admin/post.php edit action ... (new)"&gt;#40436&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #40436 (Custom taxonomy terms order lost under wp-admin/post.php edit action ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 06 Apr 2018 18:35:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40436#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40436#comment:1/1523039723461023</guid>
      <description>&lt;p&gt;
Duplicate &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43705" title="#43705: defect (bug): Respect custom taxonomy term order on admin edit page when show_ui and ... (closed: duplicate)"&gt;#43705&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 06 Apr 2018 18:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:8/1523039701927553</guid>
      <description>&lt;p&gt;
That's a very good point. A site owner is ultimately responsible for what their authors do. I still think allowing admins to limit what embeds are rendered is appropriate step.
&lt;/p&gt;
&lt;p&gt;
A separate ticket perhaps for adding a writing setting that disallows/strips 3rd party script, iframe and img tags from posts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43706 (Email with link to change admin email does not include proposed new ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 06 Apr 2018 18:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43706#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43706#comment:2/1523039661673726</guid>
      <description>&lt;p&gt;
Hey, @sshanky! Welcome to Trac :)
&lt;/p&gt;
&lt;p&gt;
The email you mention does contain the "proposed new email address".
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$email_text = __(
		'Howdy ###USERNAME###,
You recently requested to have the administration email address on
your site changed.
If this is correct, please click on the following link to change it:
###ADMIN_URL###
You can safely ignore and delete this email if you do not want to
take this action.
This email has been sent to ###EMAIL###
Regards,
All at ###SITENAME###
###SITEURL###'
	);
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;###EMAIL###&lt;/code&gt; is, in fact, the proposed new email.
&lt;/p&gt;
&lt;p&gt;
Quoting the help block in the User Edit screen:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you change this we will send you an email at your new address to confirm it. The new address will not become active until confirmed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What appears to be happening, is your old administrator registered as a regular user, and is trying to change his email to the address you're receiving the notification on. Would this make sense?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43708 (Since the latest release 4.9.5 I can't see my images in my media library) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 06 Apr 2018 18:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43708#comment:1/1523038893890853</guid>
      <description>&lt;p&gt;
Hi, @chrissy59! Welcome to Trac. This bug tracker is used for WordPress core bugs. It seems that your issue stems from a faulty configuration, rather than core itself. I would suggest heading over to the Support Forums &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A swarm of friendly volunteers will be glad to help you debug the issue and resolve it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 17:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:7/1523037359952842</guid>
      <description>&lt;p&gt;
Thinking more about this: if an author "hotlinks" an image from another site, that site will still get the visitor's IP, browser UA, etc. Not sure how that affects the privacy policy...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 17:38:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:6/1523036282466218</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Enforcing what can be embedded seems like good idea for sites with multiple authors and editors. This can be the beginning of a "content creation policy". However it's not as easy: editors can simply paste the embed code copied from source sites as they can post &lt;code&gt;unfiltered_html&lt;/code&gt;. In addition to the above list of oEmbed providers, content can also be embedded form any WordPress site.
&lt;/p&gt;
&lt;p&gt;
To do this right we'll need more stringent HTML filtering capabilities, and start filtering the HTML for admins and editors too (more specifically &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;). This is a big change that needs to be weighted from all possible angles.
&lt;/p&gt;
&lt;p&gt;
For GDPR compliance purposes it would probably be enough to explain to the site owners that the privacy policy should cover all possible embeds. That's the case for existing content too, it won't be enough to just block embeds from some oEmbed providers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43621 (Introduce `add_action_once` and `add_filter_once` sugar.) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 06 Apr 2018 17:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43621#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43621#comment:5/1523034749284068</guid>
      <description>&lt;p&gt;
@vortfu Thanks for looking at this. Indeed, the bug stems from the fact that adding a callback with the same name is not possible. &lt;code&gt;_wp_filter_build_unique_id&lt;/code&gt; returns the same ID for it, so &lt;code&gt;_remove_filter_once&lt;/code&gt; is not actually added a second time.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
could be re-implemented as an anonymous func
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PHP 5.2 does not support anonymous functions, unfortunately. Thus the crazy hacking :) (and bugs).
&lt;/p&gt;
&lt;p&gt;
43621.2.diff contains both the 43621.wp_hook.diff patch and fixes on 43621.once.diff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43621.2.diff attached to Ticket #43621</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 06 Apr 2018 17:12:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43621/43621.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43621/43621.2.diff/1523034737827656</guid>
      <description>&lt;p&gt;
Refresh
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20578 (Allow users to delete a plugin without uninstalling) updated</title>
      
        <dc:creator>alexsanford1</dc:creator>

      <pubDate>Fri, 06 Apr 2018 17:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20578#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20578#comment:49/1523034482600768</guid>
      <description>&lt;p&gt;
Given the upcoming enforceability of the GDPR, it is very important for plugins to give site owners the ability to delete all of the plugin's data in a safe way that is not prone to accidental deletion.
&lt;/p&gt;
&lt;p&gt;
With that in mind, I think the proposed solution here (adding a checkbox to the dialog) provides a great balance between data deletion requirements and safety (so users don't delete data accidentally when trying to fix an issue with their installation, for example).
&lt;/p&gt;
&lt;p&gt;
There are workarounds that plugin authors can use currently, but this should really be functionality provided by core (see some discussion for one specific plugin here: &lt;a class="ext-link" href="https://github.com/Automattic/sensei/issues/2116"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/sensei/issues/2116&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Any chance this could get some attention soon?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 06 Apr 2018 17:05:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:5/1523034342296352</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry @swissspidy - our edits collided :P
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 06 Apr 2018 17:04:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:4/1523034291906889</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Idea: maybe it could go on the Tools &amp;gt; Privacy page we added recently with the privacy policy page setting
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 06 Apr 2018 17:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:3/1523034230487071</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 06 Apr 2018 16:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:2/1523032172098596</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by allendav. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1523032169000397"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 06 Apr 2018 16:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:1/1523032155190791</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) created</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 06 Apr 2018 16:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713/1523032113578755</guid>
      <description>&lt;p&gt;
Builds on protecting our users from tracking that was introduced in &lt;a href="https://core.trac.wordpress.org/ticket/41784"&gt;https://core.trac.wordpress.org/ticket/41784&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Embedded iframes allow 3rd parties to collect user's IP addresses and User Agents, to store and retrieve cookies on their browsers, to embed additional third party tracking, and monitor their interaction with that embedded content, including correlating your interaction with the content with their account with that service, if they are logged in to that service.
&lt;/p&gt;
&lt;p&gt;
That means, especially when EU residents are visitors, that all that needs to be disclosed in the site's privacy policy.
&lt;/p&gt;
&lt;p&gt;
To further improve site's users privacy, and give site owners more control over how their user's privacy is impacted (and how many 3rd party services they would need to disclose in their site's privacy policy) we should allow administrators to disable any/all embeds on their site.
&lt;/p&gt;
&lt;p&gt;
This UI could live alongside the privacy page setting controls recently added to core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 15:52:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:73/1523029951988484</guid>
      <description>&lt;p&gt;
Looking at 43316.13.diff, it introduces quite a few inconsistencies. It kind of treats autosaves as different post_type, but still keeps them as revisions. It also moves all auto-saving logic to the client and requires the client to manipulate the data to be able to save. There are also few regressions when comparing with the current logic.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The client cannot do &lt;code&gt;autoSavePost( postContent )&lt;/code&gt; the same way it does &lt;code&gt;savePost( postContent )&lt;/code&gt;. There are quite a few differences in the data. This is a departure from the post saving logic that may be seen as a regression.
&lt;ul&gt;&lt;li&gt;It has to set &lt;code&gt;parent&lt;/code&gt; to be the same as post_ID. That's somewhat weird as an item cannot be a parent of itself :) That's even worse for pages where there may be an actual &lt;code&gt;post_parent&lt;/code&gt; which will have to be overwritten with the post_ID...
&lt;/li&gt;&lt;li&gt;Actually a client cannot do &lt;code&gt;autoSavePost( postContent )&lt;/code&gt;. It will have to check whether an autosave exists (an extra trip to the server), then manipulate the post data to match the endpoint requirements. It seems the client will have to always do two requests to be able to auto-save.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Autosaves on draft posts are explicitly forbidden. This is a regression. It means that:
&lt;ul&gt;&lt;li&gt;We will not be able to ever do server-side post locking, as we will loose any data a second client tries to autosave.
&lt;/li&gt;&lt;li&gt;When two clients try to edit the same draft, they will automatically stomp on each other's changes (without knowing) and there will be no server backup. That's not acceptable imho.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
There also seem to be few bugs (and typos) in update_item() and update_item_permissions_check() but before looking at them I'd like to look at the proposed functionality from a clien't point of view.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The difference between saving and auto-saving is quite large.
&lt;/li&gt;&lt;li&gt;Auto-saving seems needlessly complex and that's not warranted.
&lt;/li&gt;&lt;li&gt;The server logic is completely overridden/ignored and the (untrusted) client has access to making some low-level decision which seems to be a regression.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43711 (Let's create a standard development setup for WordPress core.) updated</title>
      
        <dc:creator>youknowriad</dc:creator>

      <pubDate>Fri, 06 Apr 2018 14:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43711#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43711#comment:1/1523026418991949</guid>
      <description>&lt;p&gt;
Thanks for opening this issue
&lt;/p&gt;
&lt;p&gt;
Two things that I think are important to address as part of this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ideally, the integration and e2e tests (even unit tests since PHP unit tests require a full setup) should use the same environment
&lt;/li&gt;&lt;li&gt;A dev environment even if it's hidden behind magical scripts should stay simple. When bugs happen developers of any level should be able to understand, debug and tweak how the environment works.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I admit having a preference for docker setups because it's light compared to a real Virtual Machine.
I think the current docker setup is Gutenberg has grown to be slightly more complex to what I want it to be. (two many scripts calling each other), I believe we can achieve the same goals using a simple docker-compose file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8973 (Function get_page_of_comment() returns incorrect page numbers) updated</title>
      
        <dc:creator>matjack1</dc:creator>

      <pubDate>Fri, 06 Apr 2018 14:52:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8973#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8973#comment:26/1523026358419195</guid>
      <description>&lt;p&gt;
Not sure if helpful, but I've run this patch on Travis: &lt;a class="ext-link" href="https://travis-ci.org/matjack1/wordpress-develop/builds/363134316"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/matjack1/wordpress-develop/builds/363134316&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe it's a bit easier for you to check.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43712 (Improve the user experience when a fatal error or uncaught exception occurs) created</title>
      
        <dc:creator>David_Rothstein</dc:creator>

      <pubDate>Fri, 06 Apr 2018 14:43:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43712</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43712/1523025823932531</guid>
      <description>&lt;p&gt;
If a WordPress page request dies with a catchable fatal error or uncaught exception, WordPress just falls back on PHP's default error handling behavior.  What this typically means is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The page HTML gets cut off at a random point (wherever the error occurred), so the page looks broken but with no indication to the user that anything went wrong.
&lt;/li&gt;&lt;li&gt;The request returns with a 200 status (which can result in the broken page being cached in all sorts of places).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Proposed improvement:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use set_error_handler() and set_exception_handler() early in the WordPress bootstrap process to give a better experience by default.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For comparison, the way Drupal handles this is that it &lt;a class="ext-link" href="https://api.drupal.org/api/drupal/includes%21theme.inc/function/theme_render_template/7.x"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;buffers all output from the theme&lt;/a&gt; (only actually printing it much later on in the page request).  That way, if a fatal error or exception does occur, no output has been sent yet, so it can always &lt;a class="ext-link" href="https://api.drupal.org/api/drupal/includes%21errors.inc/function/_drupal_log_error/7.x"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;set a "500 Service unavailable" header and display a maintenance page instead&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
There are pros and cons to that approach, but in any case, I'm not sure that WordPress could be changed to use it in a backwards-compatible way.
&lt;/p&gt;
&lt;p&gt;
However, what does seem possible to me is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The error handler could check headers_sent() to see if output was already sent.
&lt;/li&gt;&lt;li&gt;If no output was sent yet, just call wp_die() to display a standard error page with a 500 error.
&lt;/li&gt;&lt;li&gt;If output already was sent, maybe at least try to print some kind of HTML before dying so the user can see that something is broken which wasn't their fault.  I'm thinking something like an "Oops - something went wrong and the page didn't finish loading" message, ideally themed as a simple floating bar at the bottom of the browser window.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8973 (Function get_page_of_comment() returns incorrect page numbers) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 06 Apr 2018 14:32:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8973#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8973#comment:25/1523025131488293</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43711 (Let's create a standard development setup for WordPress core.) created</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Fri, 06 Apr 2018 14:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43711</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43711/1523024910626241</guid>
      <description>&lt;p&gt;
&lt;sup&gt;This ticket was triggered by previous discussion in &lt;a href="https://core.trac.wordpress.org/ticket/43055"&gt;https://core.trac.wordpress.org/ticket/43055&lt;/a&gt;&lt;/sup&gt;
The current default for developing WordPress core seems to be VVV. While VVV is doing a great job in making it easier to run WordPress locally, I think we could do better, especially for WordPress core.
&lt;/p&gt;
&lt;p&gt;
With this ticket I would like to set a goal for improvement and discuss ways to achieve it.
&lt;/p&gt;
&lt;h2 id="Thegoal:asimpletwo-stepprocessforsettingupaWordPresscoredevelopmentenvironment"&gt;The goal: a simple, two-step process for setting up a WordPress core development environment&lt;/h2&gt;
&lt;p&gt;
The simplest development setup workflow I can think of consists just of two simple steps:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;Download and boot&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
That's how simple it should (eventually) be. WordPress should now be running on some local address and every developer should be able to dive in the code and make changes.
&lt;/p&gt;
&lt;h2 id="Integratingwatchandbuildbehavior"&gt;Integrating watch and build behavior&lt;/h2&gt;
&lt;p&gt;
As we plan to &lt;a href="https://core.trac.wordpress.org/ticket/43055"&gt;introduce a build step to the development workflow&lt;/a&gt;, it becomes more important that building is not an afterthought but something that is integrated into the development workflow.
&lt;/p&gt;
&lt;p&gt;
The desirable state is one in which we just boot and can trust all changes are processed to whatever's being served in the browser.
&lt;/p&gt;
&lt;p&gt;
This unfortunately is not the case at the moment. If we want to do better, we need a more unified approach.
&lt;/p&gt;
&lt;h2 id="Requirements"&gt;Requirements&lt;/h2&gt;
&lt;p&gt;
We need something that is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the easiest possible development workflow: just download and boot.
&lt;/li&gt;&lt;li&gt;fast: reduce build and boot times to a minimum.
&lt;/li&gt;&lt;li&gt;reliable: it should just work.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@pento noted that eventually he'd like this thing to be configurable and installable through a GUI in order to reduce the barrier of entry for new contributors to the absolute minimum.
&lt;/p&gt;
&lt;h2 id="Possiblesolutions"&gt;Possible solutions&lt;/h2&gt;
&lt;h3 id="Dockerinstallscript"&gt;Docker install script&lt;/h3&gt;
&lt;p&gt;
@pento built automated development environment setup scripts for Gutenberg based on Docker.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The Gutenberg setup script walks the user through setting up their development environment. It would obviously need to be written to work on Windows, too, before it was a valid option for Core. That will be fun. 🙂
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are a few benefits to using a Docker based environment.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's fast
&lt;/li&gt;&lt;li&gt;It's composable
&lt;/li&gt;&lt;li&gt;It only requires Docker
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Aside: If we get good and well maintained Docker images for WordPress, this could also benefit the web hosting community, will make WordPress more optimized for cloud native hosting infrastructures, could also help optimize WordPress unit testing in container based CI solutions like Travis etc.
&lt;/p&gt;
&lt;h3 id="VVVinstallscript"&gt;VVV install script&lt;/h3&gt;
&lt;p&gt;
@TJNowell noted similar advantages might also be achieved with VVV
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see no reason the docker call in the GB script couldn't be a git clone ... cd vvv.. vagrant up --provision
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Of course VVV and the community behind it include a great deal of experience with regard to the intricacies of creating the development environment for WordPress.
&lt;/p&gt;
&lt;p&gt;
If we can make it easy, fast and reliable enough, that might just be what we need!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33468 (Add image caption hook) updated</title>
      
        <dc:creator>xma</dc:creator>

      <pubDate>Fri, 06 Apr 2018 14:04:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33468#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33468#comment:6/1523023471408467</guid>
      <description>&lt;p&gt;
Hi to all, actualy there is a &lt;code&gt;img_caption_shortcode&lt;/code&gt;, trought that we can change all attribute passed to &lt;code&gt;caption&lt;/code&gt; or &lt;code&gt;wp-caption&lt;/code&gt; shortcode, also caption attribute that define caption text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:72/1523022141378461</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:69" title="Comment 69"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hm, &lt;code&gt;wp_save_post_revision()&lt;/code&gt; doesn't wipe autosave revisions. It has some logic to keep a max number of revisions if they are limited by a plugin. The default is &lt;code&gt;-1&lt;/code&gt; (unlimited). Also note that this logic specifically bypasses (keeps) autosave revisions, even when they are over the max.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, you're right, I'd misread the code there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The code that &lt;em&gt;actually&lt;/em&gt; does this is in &lt;code&gt;edit-form-advanced.php&lt;/code&gt; when the editor checks for autosaves. I guess this adds an extra step to the process too:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User opens the editor
&lt;ul&gt;&lt;li&gt;Editor checks current autosaves: &lt;code&gt;GET /wp/v2/posts/{id}/revisions?revision_type=autosave&lt;/code&gt;
&lt;ul&gt;&lt;li&gt;If any autosaves exist newer than the last save, display restore button
&lt;/li&gt;&lt;li&gt;If any other autosaves exist, delete them
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Editor creates a new autosave: &lt;code&gt;POST /wp/v2/posts/{id}/revisions?revision_type=autosave&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Hm, no. The code in &lt;code&gt;edit-form-advanced.php&lt;/code&gt; repeats the same logic as in &lt;code&gt;wp_create_post_autosave()&lt;/code&gt; &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/post.php#L1687"&gt;https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/post.php#L1687&lt;/a&gt;. It deletes the latest autosave only when the autosaved "fields" match the latest post. It also doesn't look for previous autosave revisions by other authors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8973 (Function get_page_of_comment() returns incorrect page numbers) updated</title>
      
        <dc:creator>matjack1</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8973#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8973#comment:24/1523021993564684</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've managed to reproduce the error by publishing a number of unapproved comments higher than comments pagination and then an approved comment.
&lt;/p&gt;
&lt;p&gt;
For example in the following screenshot I'm on the second page of comments just because of unapproved comments:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/8973/Screenshot%20from%202018-04-06%2015-34-19.png"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/8973/Screenshot%20from%202018-04-06%2015-34-19.png" alt="https://core.trac.wordpress.org/raw-attachment/ticket/8973/Screenshot%20from%202018-04-06%2015-34-19.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/8973/Screenshot%20from%202018-04-06%2015-34-19.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In this case if I'm the author of the unapproved comments the links in the "Recent comments" section were wrong.
&lt;/p&gt;
&lt;p&gt;
The attached patch is fixing this issue and removing some duplication in the file. I don't know if you like the code like this or if I should extract the added template lines in a separate function. I'm happy to update the patch if you think that's better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot from 2018-04-06 15-34-19.png attached to Ticket #8973</title>
      
        <dc:creator>matjack1</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:36:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8973/Screenshot%20from%202018-04-06%2015-34-19.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8973/Screenshot%20from%202018-04-06%2015-34-19.png/1523021782952123</guid>
      <description>&lt;p&gt;
How to replicate the bug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>8973.2.diff attached to Ticket #8973</title>
      
        <dc:creator>matjack1</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8973/8973.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8973/8973.2.diff/1523021530039410</guid>
      <description>&lt;p&gt;
Updated patch for WP 5.0 and added functionality in templates
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43710 (WordPress isn't reading the sticky_posts option) updated</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43710#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43710#comment:2/1523020838344292</guid>
      <description>&lt;p&gt;
Pst! My guess would be that you first of all try with a default theme, like twentysixteen...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43710 (WordPress isn't reading the sticky_posts option) closed</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:19:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43710#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43710#comment:1/1523020777857031</guid>
      <description>invalid: &lt;p&gt;
Hi rfischmann,
This trac is for more or less confirmed bugs in WordPress core.
In your case, it's still too early to say exactly what went wrong. You need to do som troubleshooting first, and best place for that would be &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'll mark this ticket as invalid. If, after troubleshooting, you find that there actually is a bug in WP core, then you can reopen it.
&lt;/p&gt;
&lt;p&gt;
Good luck!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:17:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:71/1523020668857529</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:67" title="Comment 67"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, I'm not sure why this was added to the API. IMHO we shouldn't be removing the functionality of the audit trail. This changes the purpose and functionality of revisions quite a bit...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was way back in &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/pull/1110"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/pull/1110&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It does check the delete cap on revisions, so I'd make the argument this should be handled in the capability system instead. This is a conversation for another day though :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The more I think about this, the worse it looks...
&lt;/p&gt;
&lt;p&gt;
Yes, deleting revisions checks the &lt;code&gt;delete_post&lt;/code&gt; cap, however this is still not adequate. Nobody should be able to circumvent the audit trail, not even admins. This is a safety/security feature. I see this as a blocking regression in the API. The only way this should be possible is from a plugin (same as now for non-API).
&lt;/p&gt;
&lt;p&gt;
If you don't want to remove the delete revision endpoint, we probably can require a &lt;code&gt;delete_revisions&lt;/code&gt; capability that will not be mapped to any existing role and will always return false, i.e. a plugin will have to specifically assign that capability to a role.
&lt;/p&gt;
&lt;p&gt;
Created &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43709" title="#43709: defect (bug): Fix or remove the &amp;#34;delete revision&amp;#34; endpoint (assigned)"&gt;#43709&lt;/a&gt; as a follow-up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43710 (WordPress isn't reading the sticky_posts option) created</title>
      
        <dc:creator>rfischmann</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43710</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43710/1523020001183064</guid>
      <description>&lt;p&gt;
I've ran into this bug twice now. I try to set a post as sticky from WordPress' editor, but after saving nothing happens. It ignores the setting and reverts back to non-sticky.
&lt;/p&gt;
&lt;p&gt;
However, I dug into MySQL and found out the post's ID is indeed set as sticky inside wp_options. So I'm not sure what's going on here.
&lt;/p&gt;
&lt;p&gt;
Any way to debug this? First time I'm opening a bug report here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43709 (Fix or remove the "delete revision" endpoint) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 13:04:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43709#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43709#comment:1/1523019890824947</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a regression. Currently revisions can only be deleted (outside the API) from a plugin. Thinking we should keep it that way. The "audit trail" functionality is not that necessary for smaller sites with one or two users but is rather critical for larger sites that have many authors and editors.
&lt;/p&gt;
&lt;p&gt;
Also see &lt;a href="https://core.trac.wordpress.org/ticket/43316#comment:71"&gt;https://core.trac.wordpress.org/ticket/43316#comment:71&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43709 (Fix or remove the "delete revision" endpoint) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 12:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43709</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43709/1523019532332481</guid>
      <description>&lt;p&gt;
Allowing the client to delete revisions breaks the "audit trail" functionality. This is not allowed in WordPress and shouldn't be allowed through the API.
&lt;/p&gt;
&lt;p&gt;
Ideally the delete revision endpoint should be removed. Alternatively it can require a specific permission which should be &lt;code&gt;false&lt;/code&gt; by default for all user roles.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43707 (Why Using Un-nacessory file(JS &amp; CSS)) closed</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Fri, 06 Apr 2018 12:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43707#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43707#comment:1/1523018085049358</guid>
      <description>invalid: &lt;p&gt;
WordPress is a framework, which contains certain functionality as a common service to plugins and themes, so that there won't be any needed for each plugin and/or theme to include this functionality inside their own code structure. See, for example, &lt;a class="ext-link" href="https://codex.wordpress.org/Javascript_Reference"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Javascript_Reference&lt;/a&gt; for more detailed information about this.
&lt;/p&gt;
&lt;p&gt;
Further, bear in mind that one important design principle for WordPress is &lt;strong&gt;backward compatibility&lt;/strong&gt;. If a function was available for plugin developers in previous WordPress releases, then it will in almost all cases remain being available. If it has been moved to the collection of deprecated functions, then warnings will be visible during debugging, but in most situations the functions will still continue to work. The idea around this is that upgrading to the latest WordPress release should in virtually all cases be a smooth process. A downside of this is that you have to keep some deprecated code in the package.
&lt;/p&gt;
&lt;p&gt;
For a more detailed reply, please indicate what specific files you think are not needed.
&lt;/p&gt;
&lt;p&gt;
I don't understand your second question at all. But I have a feeling that a better place for that topic would be in the support forums at &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Your proposed dashboard design looks like the result of using WordPress as a framework for a web application. That is a perfectly valid way of using WordPress, but the task oriented view you're implying in your proposal has really no bearing at all for a plain WordPress installation. ("Tasks" is not available as a content type in a basic WordPress install.)
&lt;/p&gt;
&lt;p&gt;
I'll close this ticket as invalid, since it contains no clear bug description or suggestion.
You may reopen the ticket if I misunderstood you.
&lt;/p&gt;
&lt;p&gt;
However, in general, try to have only one main topic in each ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Attachment for WP.org ticket.docx attached to Ticket #43708</title>
      
        <dc:creator>chrissy59</dc:creator>

      <pubDate>Fri, 06 Apr 2018 12:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43708/Attachment%20for%20WP.org%20ticket.docx</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43708/Attachment%20for%20WP.org%20ticket.docx/1523017517722668</guid>
      <description>&lt;p&gt;
Screenshots of media library &amp;amp; file manager
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43708 (Since the latest release 4.9.5 I can't see my images in my media library) created</title>
      
        <dc:creator>chrissy59</dc:creator>

      <pubDate>Fri, 06 Apr 2018 12:21:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43708</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43708/1523017286095922</guid>
      <description>&lt;p&gt;
I can no longer see images uploaded in previous months in my media library?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Team Leader Dashboard.png attached to Ticket #43707</title>
      
        <dc:creator>mohitchandila</dc:creator>

      <pubDate>Fri, 06 Apr 2018 11:29:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43707/Team%20Leader%20Dashboard.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43707/Team%20Leader%20Dashboard.png/1523014179485129</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43707 (Why Using Un-nacessory file(JS &amp; CSS)) created</title>
      
        <dc:creator>mohitchandila</dc:creator>

      <pubDate>Fri, 06 Apr 2018 11:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43707</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43707/1523014161915484</guid>
      <description>&lt;p&gt;
Hello Sir/Madam,
&lt;/p&gt;
&lt;p&gt;
I have request you please remove the un-usable js and css file, so these file creating a problem our custom code, they conflict our custom websites, so there no using file so please remove the un-usable file, i request you again.
&lt;/p&gt;
&lt;p&gt;
One more suggestion, i have create a new user particular email address but i have can't understand who is login current time of my wordpress.
&lt;/p&gt;
&lt;p&gt;
Redesign the dashboard as like attached screenshot.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://goo.gl/mLBk28"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://goo.gl/mLBk28&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks
Mohit
Wordpress Developer
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 11:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:27/1523012637765674</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:26" title="Comment 26"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was wondering about the current &lt;code&gt;0.0.0.0&lt;/code&gt; output for an IPv6 address.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, can change that to &lt;code&gt;::&lt;/code&gt; although (afaik) IPv4 and IPv6 addresses are fully interchangeable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43638 (Introducing 'sanitize_post' filter) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 06 Apr 2018 11:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43638#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43638#comment:2/1523012602486103</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43517 (Adding support of default category term for custom taxonomies) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 06 Apr 2018 10:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43517#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43517#comment:6/1523011503628104</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43516" title="#43516: enhancement: Allowing default category to be applied to all CPT associated to ... (reviewing)"&gt;#43516&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43516 (Allowing default category to be applied to all CPT associated to ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 06 Apr 2018 10:44:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43516#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43516#comment:3/1523011482286507</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43517" title="#43517: enhancement: Adding support of default category term for custom taxonomies (reviewing)"&gt;#43517&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43516 (Allowing default category to be applied to all CPT associated to ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 06 Apr 2018 10:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43516#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43516#comment:2/1523011091049233</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43517 (Adding support of default category term for custom taxonomies) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 06 Apr 2018 10:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43517#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43517#comment:5/1523010926697783</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 06 Apr 2018 10:23:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:26/1523010180142004</guid>
      <description>&lt;p&gt;
I was wondering about the current &lt;code&gt;0.0.0.0&lt;/code&gt; output for an IPv6 address.
&lt;/p&gt;
&lt;p&gt;
For example:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_privacy_anonymize_ip( '2001:db8:a0b:12f0::1' )&lt;/code&gt; now outputs &lt;code&gt;'0.0.0.0'&lt;/code&gt; when &lt;code&gt;inet_ntop()&lt;/code&gt; or &lt;code&gt;inet_pton()&lt;/code&gt; are not available.
&lt;/p&gt;
&lt;p&gt;
The unspecified address for IPv6 is &lt;code&gt;0:0:0:0:0:0:0:0&lt;/code&gt; or &lt;code&gt;::&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Would &lt;code&gt;::&lt;/code&gt; be expected in the above example?
&lt;/p&gt;
&lt;p&gt;
Some other suggestions for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43545/43545.3.diff" title="Attachment '43545.3.diff' in Ticket #43545"&gt;43545.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43545/43545.3.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Make the tests aware of missing &lt;code&gt;inet_ntop()&lt;/code&gt;/&lt;code&gt;inet_pton()&lt;/code&gt; functions, with e.g.
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! function_exists( 'inet_ntop' ) ) {
	$this-&amp;gt;markTestSkipped( 'inet_ntop extension not available.' );
}
if ( ! function_exists( 'inet_pton' ) ) {
	$this-&amp;gt;markTestSkipped( 'inet_pton extension not available.' );
}
&lt;/pre&gt;&lt;p&gt;
or modify the expected value explicitly like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if( function_exists( 'inet_ntop' ) &amp;amp;&amp;amp; function_exists( 'inet_pton' ) ) {
    $expected = '...';
} else {
    $expected = '0.0.0.0';
}
&lt;/pre&gt;&lt;p&gt;
Adjustments according to the &lt;em&gt;Coding Standard&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
Should we use data providers here instead of for loops?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21676 (Pass a variable to get_template_part()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 06 Apr 2018 10:22:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21676#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21676#comment:65/1523010133998539</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32651 (get_adjacent_post() doesn't return posts with the same date) updated</title>
      
        <dc:creator>willybahuaud</dc:creator>

      <pubDate>Fri, 06 Apr 2018 10:02:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32651#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32651#comment:7/1523008967564787</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32651#comment:6" title="Comment 6"&gt;julianoe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi all ! What's the status on this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The last patch by @wonderboymusic seem ok. Waiting approval to be merged on core :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32651 (get_adjacent_post() doesn't return posts with the same date) updated</title>
      
        <dc:creator>julianoe</dc:creator>

      <pubDate>Fri, 06 Apr 2018 09:45:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32651#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32651#comment:6/1523007949280721</guid>
      <description>&lt;p&gt;
Hi all ! What's the status on this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 09:38:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:25/1523007528298879</guid>
      <description>&lt;p&gt;
In 43545.3.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fix output from &lt;code&gt;wp_privacy_anonymize_ip()&lt;/code&gt; when &lt;code&gt;inet_pton()&lt;/code&gt; or &lt;code&gt;inet_ntop()&lt;/code&gt; don't exist.
&lt;/li&gt;&lt;li&gt;Make &lt;code&gt;wp_privacy_anonymize_data()&lt;/code&gt; return an empty string when &lt;code&gt;$type&lt;/code&gt; is not passed.
&lt;/li&gt;&lt;li&gt;Change the anonymous site address to &lt;code&gt;site.invalid&lt;/code&gt;. That way nobody ever can mistake it for a "real site" as it will always return an error when trying to reach it.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43545.3.diff attached to Ticket #43545</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 09:34:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43545/43545.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43545/43545.3.diff/1523007281580141</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 06 Apr 2018 07:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:24/1523001205738646</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:22" title="Comment 22"&gt;allendav&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
43545.diff looks good. There is one place where it may fail to anonymize an IPv6 address, if &lt;code&gt;! function_exists( 'inet_pton' )&lt;/code&gt;. I'll fix that.
&lt;/p&gt;
&lt;p&gt;
Was also thinking we can reuse the "extracted" function in WP_Community_Events: &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-admin/includes/class-wp-community-events.php#L210"&gt;https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-admin/includes/class-wp-community-events.php#L210&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...modified the domains to example.com and the time stamp to a more appropriate default
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure if that's better. Thinking that it should be changed to something that can never be used. The example.com is an actual website, it belongs to "somebody". However the .test domain will never ever exist.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) closed</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Fri, 06 Apr 2018 07:46:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499#comment:7/1523000775072921</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42963" title="Docs: Improve JSDoc for `wp-admin/js/tags-box.js`.
Props ..."&gt;42963&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve JSDoc for &lt;code&gt;wp-admin/js/tags-box.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props carolinegeven, andizer, ireneyoast, herregroen, jjcomack.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43499" title="#43499: defect (bug): Document src/wp-admin/js/tags-box.js (closed: fixed)"&gt;#43499&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42963]: Docs: Improve JSDoc for `wp-admin/js/tags-box.js`.  Props ...</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Fri, 06 Apr 2018 07:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42963/1523000774590308</guid>
      <description>&lt;p&gt;
Docs: Improve JSDoc for &lt;code&gt;wp-admin/js/tags-box.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props carolinegeven, andizer, ireneyoast, herregroen, jjcomack.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43499" title="#43499: defect (bug): Document src/wp-admin/js/tags-box.js (closed: fixed)"&gt;#43499&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 06 Apr 2018 06:24:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:70/1522995842454983</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43316/43316.13.diff" title="Attachment '43316.13.diff' in Ticket #43316"&gt;43316.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43316/43316.13.diff" title="Download"&gt;​&lt;/a&gt; adapts &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43316/43316.12.diff" title="Attachment '43316.12.diff' in Ticket #43316"&gt;43316.12.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43316/43316.12.diff" title="Download"&gt;​&lt;/a&gt; but uses the existing revisions endpoint instead. This implements almost all of the proposal, minus the autosave "commit" process; I'll update once checking per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:69" title="Comment 69"&gt;69&lt;/a&gt;. This is a first pass, and probably needs some work still, but does work in local testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43316.13.diff attached to Ticket #43316</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 06 Apr 2018 06:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.13.diff/1522995471364766</guid>
      <description>&lt;p&gt;
Build autosaves into existing revision endpoint
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 06 Apr 2018 05:48:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:69/1522993735229891</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:67" title="Comment 67"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hm, &lt;code&gt;wp_save_post_revision()&lt;/code&gt; doesn't wipe autosave revisions. It has some logic to keep a max number of revisions if they are limited by a plugin. The default is &lt;code&gt;-1&lt;/code&gt; (unlimited). Also note that this logic specifically bypasses (keeps) autosave revisions, even when they are over the max.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, you're right, I'd misread the code there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The code that &lt;em&gt;actually&lt;/em&gt; does this is in &lt;code&gt;edit-form-advanced.php&lt;/code&gt; when the editor checks for autosaves. I guess this adds an extra step to the process too:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User opens the editor
&lt;ul&gt;&lt;li&gt;Editor checks current autosaves: &lt;code&gt;GET /wp/v2/posts/{id}/revisions?revision_type=autosave&lt;/code&gt;
&lt;ul&gt;&lt;li&gt;If any autosaves exist newer than the last save, display restore button
&lt;/li&gt;&lt;li&gt;If any other autosaves exist, delete them
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Editor creates a new autosave: &lt;code&gt;POST /wp/v2/posts/{id}/revisions?revision_type=autosave&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 06 Apr 2018 05:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:85/1522992946058148</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41191/41191.8.diff" title="Attachment '41191.8.diff' in Ticket #41191"&gt;41191.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41191/41191.8.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Change the widget header to match the style of the other widgets.
&lt;/li&gt;&lt;li&gt;Reword the notice, props @benhuberman.
&lt;/li&gt;&lt;li&gt;Make the button open in a new tab.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've also asked @benhuberman to edit the &lt;a class="ext-link" href="https://wordpress.org/support/upgrade-php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;upgrade page&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@karmatosed: Here's a screenshot of the latest widget:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/41191/PHP%20Notice%20on%20Desktop.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/41191/PHP%20Notice%20on%20Desktop.png" crossorigin="anonymous" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It doesn't have any special behaviour on smaller screens, so I've only included the one screenshot. 🙂
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 06 Apr 2018 05:29:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:68/1522992566182657</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:65" title="Comment 65"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the part: "User hits save: &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt;" would be an actual save, i.e. &lt;code&gt;POST /wp/v2/posts/{id}&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was thinking this would be a cleaner way of the client actually "committing" the autosaved changes. It avoids the problem where an update to a somewhat-unrelated resource (the post) affects a bunch of others (all the autosaves). This is the current behaviour though: &lt;code&gt;wp_save_post_revision()&lt;/code&gt; is called by &lt;code&gt;wp_insert_post()&lt;/code&gt;, and it wipes out all the autosaves.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, &lt;code&gt;wp_save_post_revision()&lt;/code&gt; doesn't wipe autosave revisions. It has some logic to keep a max number of revisions if they are limited by a plugin. The default is &lt;code&gt;-1&lt;/code&gt; (unlimited). Also note that this logic specifically bypasses (keeps) autosave revisions, even when they are over the max.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One other question here: how does the autosave actually get applied to the post?
&lt;/p&gt;
&lt;p&gt;
From what I'm understanding here, it seems like it doesn't ever get applied/committed. Rather, the editor just runs a real save with the full content, which doesn't touch the autosave process at all. When the user makes another change after that, the editor then starts autosaving stuff again. Is that accurate?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>PHP Notice on Desktop.png attached to Ticket #41191</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 06 Apr 2018 05:25:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41191/PHP%20Notice%20on%20Desktop.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41191/PHP%20Notice%20on%20Desktop.png/1522992304361832</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>41191.8.diff attached to Ticket #41191</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 06 Apr 2018 05:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41191/41191.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41191/41191.8.diff/1522992144072706</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>Nikschavan</dc:creator>

      <pubDate>Fri, 06 Apr 2018 05:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:4/1522991797958513</guid>
      <description>&lt;p&gt;
Seems this was the main commit for adding this to WordPress.org - &lt;a class="ext-link" href="https://meta.trac.wordpress.org/changeset/6677"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/changeset/6677&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>maxfein</dc:creator>

      <pubDate>Fri, 06 Apr 2018 05:09:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:45/1522991392985783</guid>
      <description>&lt;p&gt;
for multisites|multinetworks it'd be &lt;em&gt;very&lt;/em&gt; nice to have relevant information supplied automatically to subsite admins about what data is touched/held/etc by the network (eg. wp_users and wp_usermeta and a statement from network that its needed and protected - idk what all else); also, a way for network admins to add additional info as needed (eg. perhaps network handles SMTP setup for subsites to send through).
&lt;/p&gt;
&lt;p&gt;
further, ability of network admins to provide subsite admins additional guidance re. privacy page process generally (eg. ability to filter content of &lt;a href="https://core.trac.wordpress.org/ticket/43435#comment:37"&gt;proposed heads-up mssg&lt;/a&gt;, or even just insert additional, like a support link or such) would be sweet.
&lt;/p&gt;
&lt;p&gt;
seems like many kinds of networks would stand to benefit from tools to help network admins deal effectively with privacy/gdpr: small biz w/ several locations, WPaaS, education/institution and large orgs generally, etc.
&lt;/p&gt;
&lt;p&gt;
apologies; not a coder at this lvl, only have my 2cents to offer here as a network admin... will try to find some other part of gdpr effort to pitch in on.
&lt;/p&gt;
&lt;p&gt;
and, re. security by design, will be great to have &lt;a href="https://core.trac.wordpress.org/ticket/28521#comment:11"&gt;#28521&lt;/a&gt; :)
&lt;/p&gt;
&lt;p&gt;
thanks for the awesomeness.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43605 (Add HTTP/1.0 emulation to apiRequest()) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 06 Apr 2018 03:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43605#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43605#comment:1/1522987075307620</guid>
      <description>&lt;p&gt;
It looks like modsec has some interesting rules that block form encoded strings, but don't block JSON encoded strings. So, we should send things as JSON.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/5971"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/5971&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 06 Apr 2018 03:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:67/1522986233976539</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:65" title="Comment 65"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No, currently the auto-draft is created right before the user loads the Add New (post) screen. This is done so we have a post_ID for the brand new post and covers cases where the user may upload files or add tags, categories, post meta, etc. before they actually start writing the post (we need a post_ID to "attach" the meta). I'm not sure how that works through the API at the moment, or if it is possible at all. (That has nothing to do with auto-saving as there is nothing in the post to save yet.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
OK, so I guess the first logical step in the workflow is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User starts editing post, editor creates an autosave: &lt;code&gt;POST /wp/v2/posts/{id}/autosaves&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, I'm not sure why this was added to the API. IMHO we shouldn't be removing the functionality of the audit trail. This changes the purpose and functionality of revisions quite a bit...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was way back in &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/pull/1110"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/pull/1110&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It does check the delete cap on revisions, so I'd make the argument this should be handled in the capability system instead. This is a conversation for another day though :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The proposed autosave process I'm talking about here would allow this, but in a very controlled way. Each change would still get a revision, but clients would now have the ability to temporarily persist changes while the user is still working on them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So basically you want to move the server auto-saving logic to the client. Not sure this is a good idea. The client can store "persistent backup data" by itself, for example in browser storage. This has nothing to do with server auto-saving. This is how autosaves work at the moment for non-API. There are server autosaves and client (in browser storage) autosaves.
&lt;/p&gt;
&lt;p&gt;
Once the client decides to push a server auto-save, the logic for it should be on the server.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The reason we want the server involved is for cross-client purposes though: switching from web to mobile, restoring autosaves by others, etc. The only thing that really requires is storing the content of the autosave on the server.
&lt;/p&gt;
&lt;p&gt;
Now that I'm more familiar with the code, it doesn't seem like there's a huge amount of special casing anyway, so there's not really any complex logic that needs implementing on the client. Basically, just "if this post is a draft and I'm the post author, save directly, otherwise use autosaves".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is mainly needed for post locking (not implemented through the API yet). It prevents data loss when more than one client tries to edit the same post. It also keeps the audit trail more consistent.
&lt;/p&gt;
&lt;p&gt;
[...]
&lt;/p&gt;
&lt;p&gt;
Perhaps but there are some edge cases like when there are several autosaves authored by different users that have edited the post at different times. Then it can get really messy :) Thinking that restoring/overwriting a post from a revision should always be user-controlled.
&lt;/p&gt;
&lt;p&gt;
The current logic is that the post author is "the boss" and other users that edit the post leave audit trail with their changes. This is essential for larger sites that have many authors and many editors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, my proposal is that we treat the post author the same in this sense, which would improve the audit trail I think. The question I don't have an answer for is whether this makes the UX or data harder to deal with.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hm, &lt;code&gt;wp_save_post_revision()&lt;/code&gt; doesn't wipe autosave revisions. It has some logic to keep a max number of revisions if they are limited by a plugin. The default is &lt;code&gt;-1&lt;/code&gt; (unlimited). Also note that this logic specifically bypasses (keeps) autosave revisions, even when they are over the max.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, you're right, I'd misread the code there.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the post is not an "unrelated resource" in this case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"Unrelated resource" in the sense of REST resources, not in the sense of WordPress resources; that is, one URL affects another.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43703 (Edit Category screen - Error shown in green and admin notice not ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 06 Apr 2018 01:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43703#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43703#comment:2/1522979144807797</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 06 Apr 2018 01:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:57/1522978999850188</guid>
      <description>&lt;p&gt;
I commented a little on &lt;a class="ext-link" href="https://github.com/Varying-Vagrant-Vagrants/VVV/issues/1447#issuecomment-378846868"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;VVV repo&lt;/a&gt;, but to reply to your comments here, too:
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43055#comment:56" title="Comment 56"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not if you run it on the host machine. Part of the opposition of VVV to auto running &lt;code&gt;grunt watch&lt;/code&gt; is that not every user is interested in developing core, yet an instance is installed out of the box. Running grunt watch in the provisioner would add overhead to every VVV users installs unless they disabled the core dev sites and imo that's an unreasonable ask.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
VVV is a wonderful general purpose tool, if Core's development environment were to use something else at the base, that isn't a slight on VVV: it's simply a case of Core being able to create a tool that's focussed on it's use cases.
&lt;/p&gt;
&lt;p&gt;
With the watch command as the example, I absolutely wouldn't ask you or anyone on the VVV team to impose that overhead on the wider VVV user base.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the goal being that you could copy it off a USB drive and run it, and it would step through every stage of setting up an environment: &lt;a class="ext-link" href="https://github.com/tomjn/vvv-cd-installer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tomjn/vvv-cd-installer&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That tool is pretty cool, and certainly something we'd want to make available to all WordPress contributors. A nice GUI to walk through the setup process (both offline at contributor days, as well as online) is a million times better than running a bunch of shell commands.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As an aside, if we're moving more to webpack, should we not make use of npm scripts so that we maintain the same commands regardless of the tools behind the scenes? &lt;code&gt;npm run watch&lt;/code&gt; &lt;code&gt;npm run build&lt;/code&gt; etc
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yah, we'd definitely move everything to npm scripts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43706 (Email with link to change admin email does not include proposed new ...) updated</title>
      
        <dc:creator>sshanky</dc:creator>

      <pubDate>Fri, 06 Apr 2018 00:05:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43706#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43706#comment:1/1522973115240217</guid>
      <description>&lt;p&gt;
I just rehosted a site for a client, and am now receiving emails from the site stating I've recently requested to have the administration email changed. I didn't request it, and I've deleted the account the former admin could have used to log in. I've also changed all other passwords, and the host has changed.
&lt;/p&gt;
&lt;p&gt;
This is the second time this has happened. The first time, I tried clicking the link to see if it would tell me the proposed new email that was requested, but instead it just authorized the change. And I couldn't change it back, because the confirmation email went to the new, unauthorized email. So I changed it directly in the database and now know better than to click the link.
&lt;/p&gt;
&lt;p&gt;
I am trying to figure out how these emails are being generated...any ideas? Email I'm receiving is below.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43546 (Add to the privacy tools UX a means to export personal data by ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43546#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43546#comment:5/1522972631567065</guid>
      <description>&lt;p&gt;
Worked with @allendav, @mikejolley, and @karmatosed on the export screen. &lt;a class="missing attachment"&gt;Data Export screen.png&lt;/a&gt; shows what the Personal Data Export screen should look like, while &lt;a class="missing attachment"&gt;data button flow.png&lt;/a&gt; and &lt;a class="missing attachment"&gt;data flow.png&lt;/a&gt; go into specific flows around the downloading and emailing of data exports.
&lt;/p&gt;
&lt;p&gt;
Let me know if y'all have any questions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43706 (Email with link to change admin email does not include proposed new ...) created</title>
      
        <dc:creator>sshanky</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43706</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43706/1522972582027513</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39112" title="#39112: defect (bug): Email address change notification doesn't include the new email address (closed: fixed)"&gt;#39112&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This can be precarious -- I've received this note twice since locking out the previous administrator (not sure how he is attempting to change the address yet) and there's no way to determine who is requesting the admin email change. The email with the link to change the admin email follows.
&lt;/p&gt;
&lt;p&gt;
Howdy [name],
&lt;/p&gt;
&lt;p&gt;
You recently requested to have the administration email address on
your site changed.
&lt;/p&gt;
&lt;p&gt;
If this is correct, please click on the following link to change it:
&lt;a class="ext-link" href="https://siteurl.com/wp-admin/options.php?adminhash=[hash"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://siteurl.com/wp-admin/options.php?adminhash=[hash&lt;/a&gt;]
&lt;/p&gt;
&lt;p&gt;
You can safely ignore and delete this email if you do not want to
take this action.
&lt;/p&gt;
&lt;p&gt;
This email has been sent to [current admin email]
&lt;/p&gt;
&lt;p&gt;
Regards,
All at sitename
&lt;a class="ext-link" href="http://siteurl.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://siteurl.com&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Download data flow.png attached to Ticket #43546</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/Download%20data%20flow.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/Download%20data%20flow.png/1522972516928062</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Email data button flow.png attached to Ticket #43546</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:55:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/Email%20data%20button%20flow.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/Email%20data%20button%20flow.png/1522972504017344</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Personal Data Export screen.png attached to Ticket #43546</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/Personal%20Data%20Export%20screen.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/Personal%20Data%20Export%20screen.png/1522972466891694</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:3/1522972223151301</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43700#comment:2" title="Comment 2"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How has this been implemented on WordPress.org?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've not looked at it personally but the code is here: &lt;a class="ext-link" href="https://meta.trac.wordpress.org/browser/sites/trunk/wordpress.org/public_html/wp-content/themes/pub/wporg-login"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/browser/sites/trunk/wordpress.org/public_html/wp-content/themes/pub/wporg-login&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:6/1522969667006922</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43602#comment:4" title="Comment 4"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43602#comment:3" title="Comment 3"&gt;allendav&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
We discussed this a bit more on Slack.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;user contacts admin to request erasure of their data (can be by email, phone call, postal mail, etc)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
For registered users it makes sense to have a button on the Profile screen that would trigger the verification email.
&lt;/p&gt;
&lt;p&gt;
For commenters (no-priv users) we may need to add some minimal UI to be able to trigger the verification email themselves from the front-end. Alternatively can leave these requests to be made through the site's contact form or other method.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could we make a non-admin UX a ticket separate from the admin UX please? It will be a fair bit of work itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39318.4.patch attached to Ticket #39318</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Thu, 05 Apr 2018 21:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39318/39318.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39318/39318.4.patch/1522964052658333</guid>
      <description>&lt;p&gt;
Fix indentation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39318.3.patch attached to Ticket #39318</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Thu, 05 Apr 2018 21:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39318/39318.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39318/39318.3.patch/1522963602890729</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39318 (Assign a theme when creating a site (Multisite)) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Thu, 05 Apr 2018 21:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39318#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39318#comment:8/1522963581743402</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @flixos90,
&lt;/p&gt;
&lt;p&gt;
Thank you for your review.
&lt;/p&gt;
&lt;p&gt;
I have updated my patch to fit your suggestions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43310 (Generic "HTTP Error" when uploading PDFs via Media area) updated</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Thu, 05 Apr 2018 21:21:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43310#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43310#comment:8/1522963277429039</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding some additional observations: This apparently centers around the thumbnail creation (GD module)... or lack there of.
&lt;/p&gt;
&lt;p&gt;
Ironically, I found this thread (for a plugin) that may shed some light on this issue:
&lt;a class="ext-link" href="https://wordpress.org/support/topic/pdf-thumbnails-not-generated-php7-0/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/pdf-thumbnails-not-generated-php7-0/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I do have the test environment set up for additional testing, so if one of the devs (@johnbillion, perhaps?) needs access, see my comment above. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 20:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:23/1522958975115004</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by allendav. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522958973000210"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 20:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:22/1522958831297559</guid>
      <description>&lt;p&gt;
@azaozz - I added IPV4 and IPV6 anonymization and unit tests for the lot. I also modified the domains to example.com and the time stamp to a more appropriate default
&lt;/p&gt;
&lt;p&gt;
To run the unit tests, run
&lt;/p&gt;
&lt;p&gt;
phpunit tests/phpunit/tests/functions/anonymization.php
&lt;/p&gt;
&lt;p&gt;
Please let me know if adding a unit test file will be a no-no for a minor release and i can add these somewhere else
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43545.diff attached to Ticket #43545</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 20:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43545/43545.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43545/43545.diff/1522958617874243</guid>
      <description>&lt;p&gt;
Adds IPV4 and IPV6 anonymization functions and unit tests for everything
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24672 (Remove final from WP_Post class) updated</title>
      
        <dc:creator>Andy Schmidt</dc:creator>

      <pubDate>Thu, 05 Apr 2018 19:05:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24672#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24672#comment:26/1522955153840251</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24672#comment:21" title="Comment 21"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
when a plugin adds a method that returns unescaped data and handles the escaping later and later core adds a method with the same name where it is returned escaped
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds more like "name spacing" issue? That same potential exists if a plug-in creates a regular function in the root name space and later WordPress adding a function by that same name?
&lt;/p&gt;
&lt;p&gt;
If developers add methods or properties, it is their responsibility to choose member names for which there is a reasonable expectation that they are highly unique to avoid future name clashes.
&lt;/p&gt;
&lt;p&gt;
And as far as escaping - I've come across filters/hooks in WordPress that expressly instruct developers that the return value should be escaped. So the potential of someone not reading carefully (or copying imperfect code samples somewhere) and NOT escaping the return values is also not specific to the ability to extending the WP_Post class?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43705 (Respect custom taxonomy term order on admin edit page when show_ui and ...) updated</title>
      
        <dc:creator>seanleavey</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:44:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43705#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43705#comment:1/1522953878648581</guid>
      <description>&lt;p&gt;
It should be added that using the &lt;code&gt;get_the_terms&lt;/code&gt; filter in &lt;code&gt;get_the_terms&lt;/code&gt; in &lt;code&gt;wp-includes/category-template.php&lt;/code&gt; does not allow this behaviour to be added via a plugin (without completely requerying the terms), because the filter does not supply the &lt;code&gt;term_order&lt;/code&gt; column from the &lt;code&gt;term_relationships&lt;/code&gt; database table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24672 (Remove final from WP_Post class) updated</title>
      
        <dc:creator>Andy Schmidt</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24672#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24672#comment:25/1522953874773182</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24672#comment:22" title="Comment 22"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Beyond that if two plugins subclass a &lt;code&gt;WP_Post&lt;/code&gt; and both plugins want to use in the same context — such as in a theme template page — only one of them can win.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not certain that I understand your concern (but that might be due to my lack of experience).
&lt;/p&gt;
&lt;p&gt;
The possibility of an ill-behaved plug-in interfering with another plug-in already exists today with the "posts_pre_query" hook, and always does so in many other hooks.
&lt;/p&gt;
&lt;p&gt;
Specifically, if the first plug-in decides it needs to populate the $posts array with WP_Post instances - and the next plug-in simply assumes to be the "only one" and  DISCARDS the existing array and returns a hard-coded "null", or substitutes its own array - then it doesn't matter if the so discarded post instances had been created by the native WP_Post class or any subclass thereof?
&lt;/p&gt;
&lt;p&gt;
Being able to properly sub-class WP_Post does not alter the potential of a conflict?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;That said&lt;/strong&gt;, I am more and more concerned about my prior advocacy for this.  It only works to subclass WP_Post when there can be only one, e.g. that the code is in the theme or specific to a site.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If at any given time a plug-in or theme decides to hook into "posts_pre_query" and conditionally instantiate its own WP_Post subclass to emulate external data as "posts", or to handle a certain Custom-Post-Type, then it would do so after narrowly defining the case in which this occurs.
&lt;/p&gt;
&lt;p&gt;
That wouldn't prevent a different plug-in to equally focus on its particular type of posts before creating its specialized WP_Post subclass.
&lt;/p&gt;
&lt;p&gt;
Once the different instances have been created by their respective plug-ins, the only thing that matters is that they will be recognized as "instance of" WP_Post throughout the subsequent core code. This way method calls and property references by the core will continue to function throughout the subsequent code like as if they were instances of the native WP_Post class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43705 (Respect custom taxonomy term order on admin edit page when show_ui and ...) created</title>
      
        <dc:creator>seanleavey</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:40:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43705/1522953616326712</guid>
      <description>&lt;p&gt;
This is identical to the report in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40436" title="#40436: defect (bug): Custom taxonomy terms order lost under wp-admin/post.php edit action ... (new)"&gt;#40436&lt;/a&gt;, but that has been awaiting review for 12 months and might have fallen under the radar due to being set to version 4.7. The issue is still present in 4.9.5. The order of terms is not respected on e.g. the admin post list. It displays alphabetically even when &lt;code&gt;sort&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;register_taxonomy&lt;/code&gt; (in addition to &lt;code&gt;show_ui&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; to make it show on the post list).
&lt;/p&gt;
&lt;p&gt;
The order is not respected because the call to &lt;code&gt;wp_get_object_terms&lt;/code&gt; via &lt;code&gt;column_default&lt;/code&gt; in &lt;code&gt;WP_Posts_List_Table&lt;/code&gt; does not supply an &lt;code&gt;$args&lt;/code&gt; array telling it how to sort. WordPress should probably supply this array with the &lt;code&gt;order_by&lt;/code&gt; key set if the taxonomy's &lt;code&gt;sort&lt;/code&gt; attribute is &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43704 (pre_option_{$option} filter is case sensitive although options are not.) created</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:38:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43704</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43704/1522953524168035</guid>
      <description>&lt;p&gt;
I noticed the filter "pre_option_{$option}" for myOption wouldn't filter get_option('MYOption') for example, yet get_option(name) and MySql in general does not seem to care what case the option is. Perhaps it should also do pre_option_(strtolower($option)) when necessary?
&lt;/p&gt;
&lt;p&gt;
Was there a reason this particular filter is case-sensitive?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:19:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:102/1522952362306684</guid>
      <description>&lt;p&gt;
Thanks @chrislema. I really like the concept. I think you're right to include some more information and clarify the whole process. Let me take this concept and try out a couple ideas!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43703 (Edit Category screen - Error shown in green and admin notice not ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43703#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43703#comment:1/1522951026762841</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43703/43703.diff" title="Attachment '43703.diff' in Ticket #43703"&gt;43703.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43703/43703.diff" title="Download"&gt;​&lt;/a&gt; is a suggested patch that:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;let's the admin notice have the &lt;code&gt;error&lt;/code&gt; class (displayed as red) if the &lt;code&gt;$msg&lt;/code&gt; index is 5 (for not updated), else the &lt;code&gt;updated&lt;/code&gt; class (displayed as green).
&lt;/li&gt;&lt;li&gt;adds the &lt;code&gt;notice is-dismissible&lt;/code&gt; classes to the admin notice.
&lt;/li&gt;&lt;li&gt;escapes the message output.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43703.diff attached to Ticket #43703</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43703/43703.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43703/43703.diff/1522950612859605</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>error-red.jpg attached to Ticket #43703</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43703/error-red.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43703/error-red.jpg/1522950211504334</guid>
      <description>&lt;p&gt;
Here's the error shown in red, as expected
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>error-green.jpg attached to Ticket #43703</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43703/error-green.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43703/error-green.jpg/1522950159967714</guid>
      <description>&lt;p&gt;
The update error is currently shown in green.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>dismissible.jpg attached to Ticket #43703</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:41:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43703/dismissible.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43703/dismissible.jpg/1522950115552343</guid>
      <description>&lt;p&gt;
Dismissible admin notice
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43703 (Edit Category screen - Error shown in green and admin notice not ...) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43703</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43703/1522949962874689</guid>
      <description>&lt;p&gt;
When we edit a category, on the &lt;em&gt;Edit Category&lt;/em&gt; screen, then there are two things that need adjustments:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The &lt;code&gt;"Category updated."&lt;/code&gt; admin notice is currently not dismissible.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;"Category not updated."&lt;/code&gt; admin notice is currently shown in green (not red).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
To replicate part 2, one can e.g. disable JS and update the term without a name.
&lt;/p&gt;
&lt;p&gt;
Example location:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/wp-admin/term.php?taxonomy=category&amp;amp;tag_ID=123
&lt;/pre&gt;&lt;p&gt;
The corresponding part that displays the message for categories, tags and other terms:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/edit-tag-form.php#L73-L82"&gt;https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/edit-tag-form.php#L73-L82&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:21/1522949609923120</guid>
      <description>&lt;p&gt;
Instead of example.test, could we use example.com or example.org per &lt;a class="ext-link" href="https://www.iana.org/domains/reserved"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.iana.org/domains/reserved&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:84/1522949601751828</guid>
      <description>&lt;p&gt;
In order to get you design feedback could we have a little video or screenshot of the latest patch please to allow all designers, even those that don't run patches to see? Also can we have screens of all the states, for example closed and open actions.
&lt;/p&gt;
&lt;p&gt;
Once we have those, we can ensure you get feedback from the team. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:83/1522949238970850</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by boemedia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1522949237000141"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:18:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:26/1522948730372920</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:25" title="Comment 25"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:24" title="Comment 24"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
43443.4.diff looks good, but weren't you preparing another (larger) patch on gh together with @allendav?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The larger patch (on gh at &lt;a class="ext-link" href="https://github.com/allendav/wp-privacy-requests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/allendav/wp-privacy-requests&lt;/a&gt; ) is the next layer up - which uses this patch to do its work. This patch can land by itself. See the README.md on that repo in particular - it prompts you to install 43443.4.diff in order to work with the repo.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43702 (Default Posts &amp; Pages screen when there is no content) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43702#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43702#comment:1/1522946490986169</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot 2018-04-06 00.28.29.png attached to Ticket #43702</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43702/Screenshot%202018-04-06%2000.28.29.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43702/Screenshot%202018-04-06%2000.28.29.png/1522946228020099</guid>
      <description>&lt;p&gt;
Enhanced Default Interface
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screenshot 2018-04-06 00.28.05.png attached to Ticket #43702</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:36:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43702/Screenshot%202018-04-06%2000.28.05.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43702/Screenshot%202018-04-06%2000.28.05.png/1522946207459280</guid>
      <description>&lt;p&gt;
Current Default Interface
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>woocommerce-add-new-product.png attached to Ticket #43702</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43702/woocommerce-add-new-product.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43702/woocommerce-add-new-product.png/1522946141707824</guid>
      <description>&lt;p&gt;
WooCommerce Default Product
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43702 (Default Posts &amp; Pages screen when there is no content) created</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43702</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43702/1522946104462803</guid>
      <description>&lt;p&gt;
The default screen people see when they first visit the Posts, Pages, etc., dashboard sections is quite uninspiring.
&lt;/p&gt;
&lt;p&gt;
Taking a cue from WooCommerce's default product screen (screenshot included), we can enhance the default Posts &amp;amp; Pages screens to make it a bit more welcoming to new users.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:29/1522946056357694</guid>
      <description>&lt;p&gt;
Announce it on the Make Themes blog with plenty of advanced notice.  Within the next week is fine.  This is set for a 5.0 milestone.  That's plenty of time for theme authors to get on board.  If a theme looks a little off, WordPress.org has a built-in forum and ratings system for users to communicate with theme authors.
&lt;/p&gt;
&lt;p&gt;
But, for the love of all that is holy, please don't add any extra styles (inline or otherwise) that I have to disable in my themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0001-Make-the-read_private-cap-accessible-over-the-REST-A.patch attached to Ticket #43701</title>
      
        <dc:creator>twoelevenjay</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43701/0001-Make-the-read_private-cap-accessible-over-the-REST-A.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43701/0001-Make-the-read_private-cap-accessible-over-the-REST-A.patch/1522945206882075</guid>
      <description>&lt;p&gt;
Amends /wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php line 2286 to allow reading of private post types when current user caps only allow reading the private post type but not editing it.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43701 (Make the "read_private” cap accessible over the REST API) updated</title>
      
        <dc:creator>twoelevenjay</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43701#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43701#comment:1/1522944906224533</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:2/1522944847815089</guid>
      <description>&lt;p&gt;
How has this been implemented on WordPress.org?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43701 (Make the "read_private” cap accessible over the REST API) created</title>
      
        <dc:creator>twoelevenjay</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:02:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43701</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43701/1522944141241094</guid>
      <description>&lt;p&gt;
When it comes to the "private" status of a post type, WordPress has a separate capability for editing post types and reading private post types. It so happens that default user roles and capabilities do not include one user who can only read a private post type without also having the ability to edit the post type.
&lt;/p&gt;
&lt;p&gt;
When adding the "status" parameter to a rest route, the &lt;code&gt;WP_REST_Posts_Controller&lt;/code&gt; checks to see if the current user can edit the private post type. If s user role is set to view a private post type but not edit the post type then a rest route intended to return a private post type on GET for read only purposes will fail.
&lt;/p&gt;
&lt;p&gt;
I propose amending &lt;code&gt;/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php&lt;/code&gt; line &lt;code&gt;2286&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Changing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( current_user_can( $post_type_obj-&amp;gt;cap-&amp;gt;edit_posts ) ) {
&lt;/pre&gt;&lt;p&gt;
to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( current_user_can( $post_type_obj-&amp;gt;cap-&amp;gt;edit_posts ) || current_user_can( $post_type_obj-&amp;gt;cap-&amp;gt;read_private_posts ) ) {
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43685 (wp post meta missing options) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:33:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43685#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43685#comment:2/1522942428364903</guid>
      <description>&lt;p&gt;
By the way, you probably want &lt;code&gt;wp post meta get 203 _thumbnail_id&lt;/code&gt; which will give you just the meta field value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:1/1522941320966496</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700/1522941292233813</guid>
      <description>&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41692" title="I18N: Allow the login screen language to be specified via a `wp_lang` ..."&gt;[41692]&lt;/a&gt; it's possible to control the language of the login screen using the &lt;code&gt;wp_lang&lt;/code&gt; query variable (eg. &lt;code&gt;wp-login.php?wp_lang=it_IT&lt;/code&gt;). This is a hidden feature that's only used by the interim login modal.
&lt;/p&gt;
&lt;p&gt;
A language switcher should be introduced on the login screen that makes use of this so users can use the login screen, the password reset screens, and the registration screen in their own language. The behaviour would be the same as the language choosers that are used elsewhere in core, for example on the General Settings screen and on the Multisite registration screens.
&lt;/p&gt;
&lt;p&gt;
One thing that needs to be considered is how the language persists between screens, how to persist POSTed values such as &lt;code&gt;redirect_to&lt;/code&gt;, and whether it should persist in user meta once the user successfully logs in. Suggestions welcome.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43699 (if i remove image from a post &gt;  wp-json return it again as a media) updated</title>
      
        <dc:creator>adalenv</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:04:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43699#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43699#comment:1/1522940688220146</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43699 (if i remove image from a post &gt;  wp-json return it again as a media) created</title>
      
        <dc:creator>adalenv</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43699/1522940660296346</guid>
      <description>&lt;p&gt;
i got this response from
&lt;/p&gt;
&lt;p&gt;
wp-json/wp/v2/media?parent=7 but i have deleted image from post and from media:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[
    {
        "id": 19,
        "date": "2018-04-04T09:16:41",
        "date_gmt": "2018-04-04T09:16:41",
        "guid": {
            "rendered": "http://example.com/wp-content/uploads/2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png"
        },
        "modified": "2018-04-04T09:16:41",
        "modified_gmt": "2018-04-04T09:16:41",
        "slug": "a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646",
        "status": "inherit",
        "type": "attachment",
        "link": "http://example.com/2018/04/04/lorem-ipsum-dolor-sit-amet-consectetur-adipisicing-elit-minus-dicta-ad-explicabo-ipsa-repellat-atque-dolore-voluptatibus-doloribus-a-molestias/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646/",
        "title": {
            "rendered": "a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646"
        },
        "author": 1,
        "comment_status": "open",
        "ping_status": "closed",
        "template": "",
        "meta": [],
        "description": {
            "rendered": "&amp;lt;p class=\"attachment\"&amp;gt;&amp;lt;a href='http://example.com/wp-content/uploads/2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png'&amp;gt;&amp;lt;img width=\"75\" height=\"17\" src=\"http://example.com/wp-content/uploads/2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png\" class=\"attachment-medium size-medium\" alt=\"\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;\n"
        },
        "caption": {
            "rendered": ""
        },
        "alt_text": "",
        "media_type": "image",
        "mime_type": "image/png",
        "media_details": {
            "width": 75,
            "height": 17,
            "file": "2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png",
            "sizes": {},
            "image_meta": {
                "aperture": "0",
                "credit": "",
                "camera": "",
                "caption": "",
                "created_timestamp": "0",
                "copyright": "",
                "focal_length": "0",
                "iso": "0",
                "shutter_speed": "0",
                "title": "",
                "orientation": "0",
                "keywords": []
            }
        },
        "post": 17,
        "source_url": "http://example.com/wp-content/uploads/2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png",
        "_links": {
            "self": [
                {
                    "href": "http://example.com/wp-json/wp/v2/media/19"
                }
            ],
            "collection": [
                {
                    "href": "http://example.com/wp-json/wp/v2/media"
                }
            ],
            "about": [
                {
                    "href": "http://example.com/wp-json/wp/v2/types/attachment"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "http://example.com/wp-json/wp/v2/users/1"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "http://example.com/wp-json/wp/v2/comments?post=19"
                }
            ]
        }
    }
]
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38332 ("Cheating" message insults; needs changing) updated</title>
      
        <dc:creator>sevensoutbill</dc:creator>

      <pubDate>Thu, 05 Apr 2018 14:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38332#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38332#comment:52/1522938675867316</guid>
      <description>&lt;p&gt;
Hi John. Will do. Thanks for setting me straight.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38332#comment:51" title="Comment 51"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@sevensoutbill Please keep your comments constructive, otherwise you waste your own time and that of others.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 05 Apr 2018 14:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:44/1522938325450985</guid>
      <description>&lt;p&gt;
Of interest:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/anonymous-wordpress-plugin-updates/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/anonymous-wordpress-plugin-updates/&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/5066"&gt;https://core.trac.wordpress.org/ticket/5066&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As a random thought - a centralised database of all WP plugin/theme installs in the world is presumably quite interesting to quite a lot of people, from script kiddies right up to nation states.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 05 Apr 2018 14:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:43/1522937341176697</guid>
      <description>&lt;p&gt;
@DavidAnderson I tend to agree. I think its pretty clear that as a package this telemetry is personal data as defined by the GDPR - but it is necessary to make the distinction, because we are building a system here.
&lt;/p&gt;
&lt;p&gt;
I guess I should explain a bit what I am thinking: maybe an option, in WordPress might say "this is a personal website | business website". A business website - this never applies. Go for your life. Collect and store away... well, actually, not in my view (I say why not be transparent about this anyway, regardless of the legal case?!).
&lt;/p&gt;
&lt;p&gt;
A personal website - that is when the IP and URL etc become... well problematic. By problematic, I think, yes its personal data. So we'd need to know where its being stored, and by whom, etc etc.
&lt;/p&gt;
&lt;p&gt;
But probably, regardless of which framework we are applying, I'd like to know this anyway. It should not be a mystery.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38332 ("Cheating" message insults; needs changing) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38332#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38332#comment:51/1522936445083417</guid>
      <description>&lt;p&gt;
@sevensoutbill Please keep your comments constructive, otherwise you waste your own time and that of others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:42/1522936354369091</guid>
      <description>&lt;p&gt;
@robscott Is there really still an open question that a large number of website URLs will be classified by the GDPR as PII? The GDPR text says:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
‘personal data’ means any information relating to an identified or identifiable natural person (‘data subject’); an identifiable natural person is one who can be identified, directly or indirectly
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see any ambiguity there. They've written "directly or indirectly" to clarify that it doesn't matter what means are being used to perform the identification (i.e. we can't say "ah, but we'd have to manually browse their website to read their 'About' page to do it, and that's hard to automate") - they've covered that. They don't specify particular types of data - once *any* of the data can lead to identification, *all* the data is then PII ("any information relating to [a person]").
&lt;/p&gt;
&lt;p&gt;
But on your major point - I'm very interested in that too. How does wordpress.org storing (assuming I've understood rightly) your number of users, and site URL, and various other things, and explicitly linking those to your site URL, and storing it all, without anonymization, do anything for security, given that the security updates mechanism in WP is pull (polling) based and has no facility at all for push-based? (The 'automatic' updates on core and sometimes on plugins are still pull/polling based).
&lt;/p&gt;
&lt;p&gt;
The GDPR is explicitly designed to force granularity - it's not a by-product, it's one of their core aims. If you get piece of data A as something necessary for purpose X, then you can't process it for purpose Y - that needs separate/sufficient justification before your allowed to touch it, even if it's stored on your servers and you got it legitimately for purpose X. On my understanding of the WP updates mechanism (code which on the client side I've studied and interacted with at some length), the site URL is never used in the updates response at all. And things like the number of registered users certainly make zero difference to the returned results. So things of that sort surely need explicit opt-in, even if other things are deemed essential to the normal operation of WP (on which I don't have a specific opinion).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42678 (Add documentation for custom-header.js) updated</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42678#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42678#comment:5/1522935583058392</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42962" title="Docs: Fix JS Docs for `custom-header.js`.
Amends [42385].
Props ..."&gt;42962&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Fix JS Docs for &lt;code&gt;custom-header.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Amends &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42385" title="Docs: Improve JS Docs for `custom-header.js`.
The `custom-header.js` ..."&gt;[42385]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props herregroen.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42678" title="#42678: enhancement: Add documentation for custom-header.js (closed: fixed)"&gt;#42678&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42962]: Docs: Fix JS Docs for `custom-header.js`.  Amends [42385].  Props ...</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42962/1522935582588053</guid>
      <description>&lt;p&gt;
Docs: Fix JS Docs for &lt;code&gt;custom-header.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Amends &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42385" title="Docs: Improve JS Docs for `custom-header.js`.
The `custom-header.js` ..."&gt;[42385]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props herregroen.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42678" title="#42678: enhancement: Add documentation for custom-header.js (closed: fixed)"&gt;#42678&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:56/1522935396235328</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is particular important, as grunt watch has awful performance in any environment that uses a VM and shared folders.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not if you run it on the host machine. Part of the opposition of VVV to auto running &lt;code&gt;grunt watch&lt;/code&gt; is that not every user is interested in developing core, yet an instance is installed out of the box. Running grunt watch in the provisioner would add overhead to every VVV users installs unless they disabled the core dev sites and imo that's an unreasonable ask.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Automated development environment setup scripts. The Gutenberg setup script walks the user through setting up their development environment. It would obviously need to be written to work on Windows, too, before it was a valid option for Core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I began work on a VVV tool to do this automatically once Vagrant/VirtualBox were installed:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/tomjn/vvv-cd-installer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tomjn/vvv-cd-installer&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
the goal being that you could copy it off a USB drive and run it, and it would step through every stage of setting up an environment: &lt;a class="ext-link" href="https://github.com/tomjn/vvv-cd-installer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tomjn/vvv-cd-installer&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But I see no reason the docker call in the GB script couldn't be a &lt;code&gt;git clone ... cd vvv.. vagrant up --provision&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
As an aside, if we're moving more to webpack, should we not make use of npm scripts so that we maintain the same commands regardless of the tools behind the scenes? &lt;code&gt;npm run watch&lt;/code&gt; &lt;code&gt;npm run build&lt;/code&gt; etc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:41/1522935162403005</guid>
      <description>&lt;p&gt;
Here is what is stored: &lt;a class="ext-link" href="https://github.com/gdpr-compliance/info/blob/master/Synched-info.md"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/gdpr-compliance/info/blob/master/Synched-info.md&lt;/a&gt; @DavidAnderson - I think you and I are asking the same thing... why? Why is it being stored?
&lt;/p&gt;
&lt;p&gt;
From a GDPR conversation in Slack, yesterday, I am given to understand the answer to this question is "security".
&lt;/p&gt;
&lt;p&gt;
Some clarification on that would be helpful.
&lt;/p&gt;
&lt;p&gt;
Further - regarding data storage, who (data controller) and where (outside the EU?) is this data stored would appear to be very important under GDPR.
&lt;/p&gt;
&lt;p&gt;
But only - only - if this is Personal Data. Which is the root question.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:30:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:40/1522935050689547</guid>
      <description>&lt;p&gt;
I've looked at the list of tickets tagged for GDPR, but don't see one concerning the right to download all PII held by the WP Foundation. Based on &lt;a href="https://core.trac.wordpress.org/ticket/43492#comment:23"&gt;https://core.trac.wordpress.org/ticket/43492#comment:23&lt;/a&gt;, it appears that there is PII being stored (at least in the cases of stored website URLs that can be visited to identify a specific person whom the website belongs to). What will be the mechanism for site owners to be able to exercise the GDPR's mandated right to download that PII? Does a new ticket need to be created to track that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:23:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:39/1522934636435771</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The IP / domain is needed to actually... well do the WordPress update!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not the case - updates are pulled, not pushed. wordpress.org doesn't need to know or care about which site is asking the question about update availability for specified plugins, in order to advise on that availability. For the URL/domain, you can verify that by editing the updates check routine in WP core to send fake info. For the IP, you can verify it by connecting a site behind a firewall that does not allow incoming connections (e.g. a localhost site) - updates still work.
&lt;/p&gt;
&lt;p&gt;
BTW - back in &lt;a href="https://core.trac.wordpress.org/ticket/43492#comment:23"&gt;https://core.trac.wordpress.org/ticket/43492#comment:23&lt;/a&gt; some things are marked as "not stored". Presumably that means that the other things are currently stored? So, wordpress.org have a database that records things like what plugins, and many users, every WP site in the world (that makes updates checks) has, indexed by site URL? Or are some of the things not marked as "not stored" in fact, not stored?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40428 (Introduce best practices to hide CSS generated content from assistive ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:23:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40428#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40428#comment:11/1522934612554670</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1522934610000210"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:55/1522934364889028</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
@omarreiss has done an amazing job keeping the patch up to date, lets not burden him further.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely, lets move forward with this! I mentioned the CSS idea this late on the ticket because thats when I thought of it and certainly don't want to block this work! Lets discuss further in chats or another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38332 ("Cheating" message insults; needs changing) updated</title>
      
        <dc:creator>sevensoutbill</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38332#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38332#comment:50/1522934321936491</guid>
      <description>&lt;p&gt;
Wow, this is a ticket? What a waste of time. People find an response from an automated script, insulting? Haha. Thanks, but I'll be writing my own error messages that actually help make using WordPress fun.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2018-04-05 14_57_00-Edytuj wpis ‹ Nolife Style — WordPress.jpg attached to Ticket #43642</title>
      
        <dc:creator>marcinmichno</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43642/2018-04-05%2014_57_00-Edytuj%20wpis%20%E2%80%B9%20Nolife%20Style%20%E2%80%94%20WordPress.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43642/2018-04-05%2014_57_00-Edytuj%20wpis%20%E2%80%B9%20Nolife%20Style%20%E2%80%94%20WordPress.jpg/1522933379564628</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43642 (Gallery titles and labels erasing) updated</title>
      
        <dc:creator>marcinmichno</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43642#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43642#comment:3/1522933355902882</guid>
      <description>&lt;p&gt;
Hello @antpb
Desired goal is to create gallery without any titles and labels.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:8/1522933038891858</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;43632.diff&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add a musical note ASCII character
&lt;/li&gt;&lt;li&gt;Add a screen-reader-text to help to understand what is this text
&lt;/li&gt;&lt;li&gt;Add some paddings to the musical quote from Hello Dolly (see screenshots above)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Cheers,
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43632.diff attached to Ticket #43632</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43632/43632.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43632/43632.diff/1522932887190827</guid>
      <description>&lt;p&gt;
Add a musical note, screen-reader-text and some padding to the musical quote from Hello Dolly
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43632diff-nice-behaviour.png attached to Ticket #43632</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43632/43632diff-nice-behaviour.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43632/43632diff-nice-behaviour.png/1522932862510879</guid>
      <description>&lt;p&gt;
43632.diff full correction including paddings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43632diff-bad-behaviour.png attached to Ticket #43632</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43632/43632diff-bad-behaviour.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43632/43632diff-bad-behaviour.png/1522932829344951</guid>
      <description>&lt;p&gt;
In 43632.diff, I noticed there is a missing padding left (or right, depends on rtl/ltr) on widget admin screen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43698 (4.9.5 broke site behind load balancer, forwards to localhost) updated</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43698#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43698#comment:3/1522931299031375</guid>
      <description>&lt;p&gt;
spoke too soon, all kinds of badly formatted page if connecting to load balancer, despite ssl insecure content fixer. Reverted to 4.9.4 and undid changes and problem went away.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40020 (Customizer fails to load in Safari due to X-Origin Header mismatch) updated</title>
      
        <dc:creator>Oclair</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:06:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40020#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40020#comment:7/1522929984342840</guid>
      <description>&lt;p&gt;
Hey all, so from my understanding using CSP with nginx (an appropriate security measure to undertake) breaks customizer for safari (in my case Safari 11.1).  This creates an incentive to make wordpress installs insecure.
&lt;/p&gt;
&lt;p&gt;
Closing this ticket sends the wrong message to everyone.
&lt;/p&gt;
&lt;p&gt;
I am a server admin and am affected by this bug, CSP is very important, please make sure features do not break security.
&lt;/p&gt;
&lt;p&gt;
thanks for your contributions to opensource!
OC
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43698 (4.9.5 broke site behind load balancer, forwards to localhost) updated</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Thu, 05 Apr 2018 11:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43698#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43698#comment:2/1522926225730276</guid>
      <description>&lt;p&gt;
I was able to work around this and update by changing my wp-config directives to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('WP_SITEURL', 'https://' . $_SERVER['SERVER_NAME']);
define('WP_HOME', 'https://' . $_SERVER['SERVER_NAME']);
&lt;/pre&gt;&lt;p&gt;
And also adding a param to my nginx conf to properly account for variable server names:
&lt;/p&gt;
&lt;pre class="wiki"&gt;fastcgi_param SERVER_NAME $host;
&lt;/pre&gt;&lt;p&gt;
without both of the above, my particular setup would not work properly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42937 (Success Message should display on insertion of new category in ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:47:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42937#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42937#comment:10/1522925247871629</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>42937.4.diff attached to Ticket #42937</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42937/42937.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42937/42937.4.diff/1522924847153045</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:39:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:15/1522924778092968</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522924775000300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1658 ("Submitting draft for review" model) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:25:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1658#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1658#comment:10/1522923950522777</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by mindmantra. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1522923948000118"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:25/1522922766449900</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:24" title="Comment 24"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
43443.4.diff looks good, but weren't you preparing another (larger) patch on gh together with @allendav?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27399 (Filter the HTML output of wp_get_attachment_image) updated</title>
      
        <dc:creator>thomas.mery</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27399#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27399#comment:28/1522922727587018</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
any chance to see this merged before 5.0 ?
&lt;/p&gt;
&lt;p&gt;
as it seems to be the case for others (I gather) this would be very convenient to have a one fit all lazy load solution that filters images html outputs
&lt;/p&gt;
&lt;p&gt;
rather than having to have a separate solution targeting &lt;code&gt;attributes&lt;/code&gt; via the &lt;code&gt;wp_get_attachment_image_attributes&lt;/code&gt; hook
&lt;/p&gt;
&lt;p&gt;
which won't allow the addition of a &lt;code&gt;noscript&lt;/code&gt; version of an image in any case
&lt;/p&gt;
&lt;p&gt;
and as for the name of the requested filter would it make sense to name it &lt;code&gt;attachment_image_html&lt;/code&gt; so that one immediately gets a sense on what he/she is filtering and as has been hinted at before match the &lt;code&gt;post_thumbnail_html&lt;/code&gt; format?
&lt;/p&gt;
&lt;p&gt;
thanks for any feedback on this
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:24/1522922371203315</guid>
      <description>&lt;p&gt;
@azaozz Anything left to do on this before it can be considered for merge?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43698 (4.9.5 broke site behind load balancer, forwards to localhost) updated</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:45:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43698#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43698#comment:1/1522921517768972</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:45:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:20/1522921507319382</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:19" title="Comment 19"&gt;pputzer&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Have you got any source for this? I know of no such ruling and have not been able to find any German article that mentions it. All German articles on the topic of IP anonymization seem talk about killing the last octet (or using Google's standard &lt;code&gt;_anonymizeIp()&lt;/code&gt; function).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Somebody mentioned this few weeks ago in Slack (I think) but can't find anything more about it either. Thinking we can consider this as "not real unless proven otherwise" :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43698 (4.9.5 broke site behind load balancer, forwards to localhost) created</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43698</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43698/1522921243176403</guid>
      <description>&lt;p&gt;
I have 2 wordpress web servers behind a load balancer. When updating from 4.9.4 to 4.9.5, these sites broke if accessed from the main domain (but continue to be accessible if I use their alternate addresses which is obvi not possible for our end users). Instead of the site loading by going to the main domain &lt;a class="ext-link" href="https://example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://example.com&lt;/a&gt;, everyone who accesses the domain is instead directed to &lt;a class="ext-link" href="https://localhost"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://localhost&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As I said, if someone accessed &lt;a class="ext-link" href="https://wp1.example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wp1.example.com&lt;/a&gt; or &lt;a class="ext-link" href="https://wp2.example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wp2.example.com&lt;/a&gt; (the direct addresses), the sites work. For now, I have reverted to 4.9.4 which fixes the problem, but I would like to figure out a long term fix. Any suggestions?
&lt;/p&gt;
&lt;p&gt;
FYI inside my wp-config files I am using these directives:
&lt;/p&gt;
&lt;p&gt;
define('WP_SITEURL', '&lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;' . $_SERVER&lt;a class="missing wiki"&gt;HTTP_HOST?&lt;/a&gt;);
define('WP_HOME', '&lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;' . $_SERVER&lt;a class="missing wiki"&gt;HTTP_HOST?&lt;/a&gt;);
&lt;/p&gt;
&lt;p&gt;
Which I need in place to be able to address the machines directly as well as having them work with the main domain via the load balancer.
&lt;/p&gt;
&lt;p&gt;
I think I found the changeset responsible for this behaviour (&lt;a href="https://core.trac.wordpress.org/changeset/42894"&gt;https://core.trac.wordpress.org/changeset/42894&lt;/a&gt;) but still have no workable fix.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43697 (Add theme update counter in admin theme menu item) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43697#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43697#comment:1/1522920160061873</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43697.patch attached to Ticket #43697</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43697/43697.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43697/43697.patch/1522920132665537</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>theme-update.png attached to Ticket #43697</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:21:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43697/theme-update.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43697/theme-update.png/1522920110317627</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43697 (Add theme update counter in admin theme menu item) created</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43697/1522920072068036</guid>
      <description>&lt;p&gt;
Add theme update counter in admin theme menu item as we show for plugin menu item.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:16:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:19/1522916209251796</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:14" title="Comment 14"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could maybe create a Ip_zero, and a IP_partially...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually think there was a court ruling in Germany requiring anonymized IPs to be cut to only the first two octets, i.e. 192.168.0.0. This makes them really useless for any purpose :(
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Have you got any source for this? I know of no such ruling and have not been able to find any German article that mentions it. All German articles on the topic of IP anonymization seem talk about killing the last octet (or using Google's standard &lt;code&gt;_anonymizeIp()&lt;/code&gt; function).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43696 (Can't save updates in version 4.9.5) closed</title>
      
        <dc:creator>David Turnbull</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:12:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43696#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43696#comment:1/1522915930775606</guid>
      <description>invalid: &lt;p&gt;
Bizarre, this issue has now resolved itself?!?  Is it possible this could have been caused by the hosting?
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:06:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:54/1522915600309710</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1522915598000113"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:53/1522915453216891</guid>
      <description>&lt;p&gt;
Here's a brief outline of what I'm currently thinking for this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There are a handful of bugs that I'm still running into, @omarreiss has the list, and is working through them.
&lt;/li&gt;&lt;li&gt;We still need to maintain the &lt;code&gt;build&lt;/code&gt; folder, as the place where the built version of WordPress lands. The build process also modifies PHP files, so we wouldn't be able to use the &lt;code&gt;src&lt;/code&gt; folder as the place where &lt;code&gt;wordpress.zip&lt;/code&gt; is created from.
&lt;/li&gt;&lt;li&gt;I'm okay with moving CSS around, &lt;em&gt;if&lt;/em&gt; there's an argument for it to be moved. Moving the JavaScript makes sense, particularly with our JS development practices moving to a modern, modular style. I'm not sure that the same argument applies to CSS, though. Either way, I think there needs to be a larger discussion on that, adding it onto this ticket will just hold it up longer. @omarreiss has done an amazing job keeping the patch up to date, lets not burden him further. 🙂 This ticket is going to require several follow up tickets, so a discussion of how we manage CSS files can quite easily fit into there.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
On the topic of follow ups! Taken by itself, this change makes developing for WordPress harder. Moving to a compiled methodology for &lt;em&gt;all&lt;/em&gt; contributions is a big shift for WordPress, and this change doesn't have the polish we need to be presenting to encourage new contributors. So, while I'm fine with this reorganisation landing in &lt;code&gt;trunk&lt;/code&gt;, there are several other changes that I think will be necessary.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Better, opinionated dev environment documentation. We currently offer a variety of options, but don't really give people a "if you're not sure, do this" document. Rather than encouraging contributors to choose a tool (particular non-technical contributors who have no way to evaluate those tools), we should be doing it for them. Decisions, not options. 😉 This is particular important, as &lt;code&gt;grunt watch&lt;/code&gt; has awful performance in any environment that uses a VM and shared folders. Choosing the wrong development environment can give a terrible experience.
&lt;/li&gt;&lt;li&gt;Automated development environment setup scripts. The &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/master/bin/setup-local-env.sh"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Gutenberg setup script&lt;/a&gt; walks the user through setting up their development environment. It would obviously need to be written to work on Windows, too, before it was a valid option for Core. That will be fun. 🙂
&lt;/li&gt;&lt;li&gt;Modernising build tools. We currently use a little bit of webpack, and a whole lot of Grunt. This reorg adds a little more webpack usage, and Gutenberg will add a whole lot more. I believe we can standardise everything on webpack, reducing the number of tools we rely on.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So, while &lt;code&gt;trunk&lt;/code&gt; will be a little harder to work with after this change lands, the aim is to rapidly iterate on the experience, so we ultimately end up with a simpler, friendlier, more modern development environment that welcomes a wider range of contributors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43696 (Can't save updates in version 4.9.5) created</title>
      
        <dc:creator>David Turnbull</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43696/1522915206579472</guid>
      <description>&lt;p&gt;
I have two separate websites that have both just been updated to wordpress 4.9.5 and I have an issue whereby on both sites I can no longer make updates to pages, products or posts.  On clicking Update nothing is saved and the posts page is displayed (website-url/wp-admin/edit.php).  I have disabled all plugins and used the strorefront theme, but the problem persists.  Please advise.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>cezariuszmarek</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:45/1522914792242507</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42814#comment:44" title="Comment 44"&gt;qbaf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Upgraded today to 4.9.5 and no changes
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Update 4.9.5 fixed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43201" title="#43201: defect (bug): PHP Warning:  count(): Parameter must be an array or an object that ... (closed: fixed)"&gt;#43201&lt;/a&gt;, not this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39734 (Add ability to define file path of "wp-tests-config.php") updated</title>
      
        <dc:creator>clarinetlord</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:47:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39734#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39734#comment:7/1522914439939960</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39734#comment:6" title="Comment 6"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Hey @johnbillion, any chance we could get this into 5.0?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43558.2.diff attached to Ticket #43558</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43558/43558.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43558/43558.2.diff/1522912543637903</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:9/1522912525519997</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42961" title="Build Tools: Update the description in package.json and composer.json. ..."&gt;42961&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: Update the description in package.json and composer.json.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The description now matches the tagline on the front page of WordPress.org.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ocean90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42961]: Build Tools: Update the description in package.json and composer.json. ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42961</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42961/1522912525063501</guid>
      <description>&lt;p&gt;
Build Tools: Update the description in package.json and composer.json.
&lt;/p&gt;
&lt;p&gt;
The description now matches the tagline on the front page of WordPress.org.
&lt;/p&gt;
&lt;p&gt;
Props ocean90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:8/1522912137127129</guid>
      <description>&lt;p&gt;
Minor, but can we update the description to match the new tagline on w.org?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress is open source software you can use to create a beautiful website, blog, or app.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:7/1522912049998251</guid>
      <description>&lt;p&gt;
@netweb: could you open a new ticket for:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixing the coding standards issues that &lt;code&gt;compose run-script format&lt;/code&gt; finds.
&lt;/li&gt;&lt;li&gt;Adding a &lt;code&gt;grunt precommit&lt;/code&gt; task to run the &lt;code&gt;format&lt;/code&gt; script.
&lt;/li&gt;&lt;li&gt;Adding a new Travis job that checks that running the &lt;code&gt;format&lt;/code&gt; script doesn't change anything.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:6/1522911849428372</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42960" title="Build Tools: Add a composer.json for development environments.
This ..."&gt;42960&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: Add a composer.json for development environments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This allows Core developers to more easily run coding standards checks on PHP code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props netweb.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42960]: Build Tools: Add a composer.json for development environments.  This ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42960</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42960/1522911848971897</guid>
      <description>&lt;p&gt;
Build Tools: Add a composer.json for development environments.
&lt;/p&gt;
&lt;p&gt;
This allows Core developers to more easily run coding standards checks on PHP code.
&lt;/p&gt;
&lt;p&gt;
Props netweb.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43695 ($depth and $args are switched when using custom callback in ...) created</title>
      
        <dc:creator>vincurekf</dc:creator>

      <pubDate>Thu, 05 Apr 2018 05:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43695/1522907731605345</guid>
      <description>&lt;p&gt;
For the custom function I am using the [latest function from walker](&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-comment.php#L343"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-comment.php#L343&lt;/a&gt;) as a base.
&lt;/p&gt;
&lt;p&gt;
When you use custom callback in comments.php template:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// comments.php
&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'comment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'format'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'html5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'style'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ol'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'short_ping'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// Use our custom callback if it's available
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'custom_render_comment'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'format'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'custom'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'callback'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'custom_render_comment'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;wp_list_comments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The arguments that get passed to custom_render_comment function are switched:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// custom_render_comment.php
&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;custom_render_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$depth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/*
var_dump($depth):
array(15) { ["walker"]=&amp;gt; NULL ["max_depth"]=&amp;gt; string(1) "5" ["style"]=&amp;gt; string(2) "ol" ["callback"]=&amp;gt; string(21) "faeiv2_render_comment" ["end-callback"]=&amp;gt; NULL ["type"]=&amp;gt; string(7) "comment" ["page"]=&amp;gt; int(0) ["per_page"]=&amp;gt; int(0) ["avatar_size"]=&amp;gt; int(32) ["reverse_top_level"]=&amp;gt; bool(false) ["reverse_children"]=&amp;gt; string(0) "" ["format"]=&amp;gt; string(6) "faeiv2" ["short_ping"]=&amp;gt; bool(true) ["echo"]=&amp;gt; bool(true) ["has_children"]=&amp;gt; bool(true) }
}
var_dump($args):
int(1)
*/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The result is this error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: array_merge(): Argument #1 is not an array in [...]/wp-content/themes/mytheme/inc/render-comment.php on line 56
&lt;/pre&gt;&lt;p&gt;
I haven't found any mention of switching arguments in the WordPressCodex.
&lt;/p&gt;
&lt;p&gt;
The fix is easy, just switch those variables, but I think it should be addressed somewhere in the documentation.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 04:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:28/1522902640701445</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by rabmalin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1522902638000192"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Thu, 05 Apr 2018 04:26:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:27/1522902382655584</guid>
      <description>&lt;p&gt;
I understand that this checkbox is important but lets try to avoid breaking themes. We are not talking about few default themes only, we are talking about thousands of themes. And, unfortunately we are breaking themes in the minor release of WordPress. Like everyone, expectation is that there wont be any breaking changes in the minor release and I believe that is the philosophy of releases of WordPress also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>