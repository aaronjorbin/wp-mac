<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10765 (Bigger HTTP downloads with curl class run out of memory) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Fri, 11 Sep 2009 18:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10765#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10765#comment:5/1252694766000000</guid>
      <description>&lt;p&gt;
Well, I think that was there for before the specific solution for cURL was found. It was assumed that it was similar to the other transports, in that the headers and body would be together and need to be split. This was not the case, and the code was either there in order to go back with the old way, in case the "correct" way didn't pan out.
&lt;/p&gt;
&lt;p&gt;
Once it was discovered that the correct way was in fact so, the variable was forgotten. It should be removed. As for optimizing the code base for cURL, that is probably not going to be possible, unless someone clever comes along.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11919]: Add btt.php and jkw.php to list of files to remove during upgrade.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 18:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11919/1252692767150425</guid>
      <description>&lt;p&gt;
Add btt.php and jkw.php to list of files to remove during upgrade.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11918]: Add btt.php and jkw.php to list of files to remove during upgrade.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 18:12:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11918/1252692730056389</guid>
      <description>&lt;p&gt;
Add btt.php and jkw.php to list of files to remove during upgrade.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11917]: Retire Jerome's keywords  importer</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 17:55:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11917</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11917/1252691735033564</guid>
      <description>&lt;p&gt;
Retire Jerome's keywords  importer
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11916]: Retire Jerome's keywords  importer</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 17:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11916</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11916/1252691718539738</guid>
      <description>&lt;p&gt;
Retire Jerome's keywords  importer
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11915]: Retire BunnyTags importer</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 17:53:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11915/1252691619988803</guid>
      <description>&lt;p&gt;
Retire BunnyTags importer
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11914]: Retire BunnyTags importer</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 17:53:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11914/1252691594549461</guid>
      <description>&lt;p&gt;
Retire BunnyTags importer
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10437 (Taxonomy metabox doesn't respect show_ui parameter) updated</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Fri, 11 Sep 2009 15:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10437#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10437#comment:3/1252684262000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I probably should have created a different ticket for this since the problem I was actually trying to solve was hiding the slug metabox for custom post_types.  However, when searching before submitting, I found that the same patch would fix this issue and added it here.  This should allow custom taxonomies to be hidden during editing while filling other needs of hiding meta_boxes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>hidden_meta_boxes.patch attached to Ticket #10437</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Fri, 11 Sep 2009 15:44:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10437/hidden_meta_boxes.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10437/hidden_meta_boxes.patch/1252683863000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2659 (Comment meta) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 11 Sep 2009 15:04:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2659#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2659#comment:47/1252681474000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch with additional hooks for inserting and deleting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment_meta.diff attached to Ticket #2659</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 11 Sep 2009 15:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2659/comment_meta.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2659/comment_meta.diff/1252681425000000</guid>
      <description>&lt;p&gt;
Patch for 2.9 (uses common api for posts and comments)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10692 (Do not allow unfiltered uploads for admins by default) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 13:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10692#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10692#comment:9/1252676642000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11913" title="Add missing break. Props snakefoot. fixes #10692 for 2.8"&gt;[11913]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11913]: Add missing break. Props snakefoot. fixes #10692 for 2.8</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 13:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11913/1252676609383130</guid>
      <description>&lt;p&gt;
Add missing break. Props snakefoot. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10692" title="#10692: defect (bug): Do not allow unfiltered uploads for admins by default (closed: fixed)"&gt;#10692&lt;/a&gt; for 2.8
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10692 (Do not allow unfiltered uploads for admins by default) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 13:42:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10692#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10692#comment:8/1252676539000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11912" title="Add missing break. Props snakefoot. fixes #10692"&gt;[11912]&lt;/a&gt;) Add missing break. Props snakefoot. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10692" title="#10692: defect (bug): Do not allow unfiltered uploads for admins by default (closed: fixed)"&gt;#10692&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11912]: Add missing break. Props snakefoot. fixes #10692</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 13:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11912/1252676535178511</guid>
      <description>&lt;p&gt;
Add missing break. Props snakefoot. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10692" title="#10692: defect (bug): Do not allow unfiltered uploads for admins by default (closed: fixed)"&gt;#10692&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10692 (Do not allow unfiltered uploads for admins by default) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 11 Sep 2009 13:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10692#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10692#comment:7/1252676499000000</guid>
      <description>&lt;p&gt;
It happens to work without the break since an imaginary cap is inserted, but the break should be there.  Well-spotted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10754 (Allow to disable autosaves) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 11 Sep 2009 08:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10754#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10754#comment:4/1252658649000000</guid>
      <description>&lt;p&gt;
To quote westi:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Where are you seeing revisions appear?
&lt;/p&gt;
&lt;p&gt;
With revisions disabled there will still possibly be an autosave revision for each post as this is a separate feature.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10754 (Allow to disable autosaves) updated</title>
      
        <dc:creator>ashfame</dc:creator>

      <pubDate>Fri, 11 Sep 2009 08:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10754#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10754#comment:3/1252658203000000</guid>
      <description>&lt;p&gt;
I already have
&lt;/p&gt;
&lt;pre class="wiki"&gt;    define('WP_POST_REVISIONS', false );
&lt;/pre&gt;&lt;p&gt;
before the line
&lt;/p&gt;
&lt;pre class="wiki"&gt;    require_once(ABSPATH . 'wp-settings.php');
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10765 (Bigger HTTP downloads with curl class run out of memory) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 11 Sep 2009 06:49:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10765#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10765#comment:4/1252651761000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
well that "temporary" variable in that case is even not needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I meant more in general of the handling, I think i've seen one or 2 locations where a copy is returned in some form whilst a temporary variable is left about elsewhere.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it would make sense to use temporary files in suche cases instead of using the memory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True, Except that most of hte HTTP methods can only return a full item, rather than blocks of it, it'd mean duplicating the code.. As for unziping, I cant remember, but i have a feeling it may only use a string.. Not entirely sure, I know i've done it a LOT more efficient in another project i'm working on in terms of memory usage, havnt gotten around to considering porting any useable changes back to WP yet though..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10765 (Bigger HTTP downloads with curl class run out of memory) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 11 Sep 2009 06:22:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10765#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10765#comment:3/1252650121000000</guid>
      <description>&lt;p&gt;
well that "temporary" variable in that case is even not needed. so instead of setting it and in the next command unset it I just did not set it in my patch.
&lt;/p&gt;
&lt;p&gt;
it would make sense to use temporary files in suche cases instead of using the memory.
&lt;/p&gt;
&lt;p&gt;
normally I would prefer streams for that but that does not work with wordpress php system requirements and therefore this can be only an additional feature for those who are 5.2+ or a full implementation of a tempfile based download &amp;amp; zip extraction module could be helpfull. isn't there any way with curl to handle that better, so getting the data in chunks rather then at once?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10753 (Introduce pre-defined styles that are available in the editor) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Fri, 11 Sep 2009 03:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10753#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10753#comment:12/1252641501000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10753#comment:11" title="Comment 11"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can support this, but *ONLY* for inline style="whatever" elements. The strong example is indeed a terrible one, because I'd have to oppose that. Strong is a meaningful tag. Same with em and others along those lines.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with you. This is where I'd really like to see content aware styling. If a word, sentence fragment, phrase, or incomplete sentence are highlighted, the appropriate strong tag could be applied. If more than a sentence is highlighted, a strong tag would not be appropriate and a class name should be inserted into the paragraph, or two paragraphs should be surrounded by another block element containing a class name.
&lt;/p&gt;
&lt;p&gt;
I've seen editors try emphasize complete paragraphs using bold tags just to distinguish the paragraph from the rest of the content. While technically there's nothing really wrong with this, it semantically deprecates the usage of the strong tag. This in turn could hurt the SEO used on a website.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For the specific case of text-align, we can use the existing aligncenter, alignleft, alignright styles that are required in themes, however I expect this will still cause breakage. Those are more generally applied to image blocks, not to paragraphs, for example.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Conversely, using inline style for every single paragraph just to right align or justify paragraphs adds incremental but unnecessary bulk to a document's size. Updating the theme will also cause presentation problems down the line due to this frequent inline style. It goes the against the principle of separating content from presentation.
&lt;/p&gt;
&lt;p&gt;
My personal thought about aligning images is that they should be surrounded by divs and followed by paragraphs for captions.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="image"&amp;gt;
	&amp;lt;img src="image.jpg" alt="alternative text" /&amp;gt;
	&amp;lt;p class="caption"&amp;gt;This caption describes the image&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
New styles like wp-textleft and wp-textright and such would work, and including them via wp_head would be acceptable in my view, if:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;All the styles were new names,
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
All these new class names must have semantic meaning as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;All the styles started with a prefix like wp- (this should be the case anyway, going forward)
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
This is debatable. As long as the styles are semantic, I think adding the wp- prefix is trivial.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="3"&gt;&lt;li&gt;The styling applied to them in the CSS was absolutely minimalistic. Nothing extra that could be applied to any specific theme. wp-textright must be text-align:right and nothing more than that.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes, minimalism is definitely preferred as default. However, I think building a system that allows you to easily modify both the HTML and CSS of this new function would make this even more valuable.
&lt;/p&gt;
&lt;p&gt;
For instance, to right-align a paragraph, the corresponding TinyMCE button might insert this code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;&amp;lt;span class="paragraph-right"&amp;gt;This is a paragraph.&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I'd like the ability to override both the CSS class name and HTML so that it would come up like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p class="secondary"&amp;gt;This is a paragraph.&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This promotes minimalistic , extensible and modular markup, as well as flexibility. Most people could easily adapt to the default markup and style and make it work for him or her, but this will provide the flexibility that both designers and editors often need.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="4"&gt;&lt;li&gt;Overriding these must be as simple as using !important in the theme's CSS file. If a theme has to do a remove_action to get rid of them, then that's too much to expect.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
If we offer the ability to turn on this new functionality but turn off the CSS insertion, designers could then just copy and paste the CSS code into their own files. Less links and scripts equals faster rendering times.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then I could give this a tentative +1. But I'd have to see the implementation to look for flaws. Adding CSS files into themes from the core code is fraught with peril.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see this as being fraught with peril at all. By allowing people to choose this new functionality with TinyMCE, we promote extensibility and flexibility. This new function for TinyMCE would only add one new CSS file with default styles into a designers theme. And as proposed, this would start out as an optional feature that could be turned on in the Settings panel.
&lt;/p&gt;
&lt;p&gt;
I'm excited this is getting a lot of attention so far, but I hope to see it generate a lot more attention in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6035 (Category to Tag Converter leaves posts without categories) updated</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Fri, 11 Sep 2009 03:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6035#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6035#comment:12/1252641023000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry I disappeared for a while there. Your patch is missing a semicolon on the last echo in the set_default_category function, and a few line numbers have shifted around in the latest release. Otherwise it works beautifully in my test scenarios.
&lt;/p&gt;
&lt;p&gt;
I'm not sure under what circumstances the default term_id and term_taxonomy_id wouldn't be the same...?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10769 (Add option to set role for reading private posts and pages) created</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Fri, 11 Sep 2009 02:39:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10769/1252636748000000</guid>
      <description>&lt;p&gt;
I recently set up some private pages and was flabbergasted to discover that, in order for my logged-in subscribers to be able to read the pages, I'd have to promote them all to editors. I quickly found out how to change that capability by adding a few lines to my functions.php file, but private posts/pages would be more useful if administrators could check a box for this setting rather than mucking with the capabilities by hand.
&lt;/p&gt;
&lt;p&gt;
In short, there ought to be an option under Reading: minimum role for accessing private content.
&lt;/p&gt;
&lt;p&gt;
(Related to this: once users are logged in and are allowed to read private pages, they should be able to see those pages in page lists -- &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6939" title="#6939: enhancement: wp_list_pages() should also lists private pages if the user has ... (closed: duplicate)"&gt;#6939&lt;/a&gt;.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #6939 (wp_list_pages() should also lists private pages if the user has ...) updated</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Fri, 11 Sep 2009 02:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6939#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6939#comment:7/1252636423000000</guid>
      <description>&lt;p&gt;
Respectfully disagreeing; private pages absolutely do belong in this menu. Where else would they go? Most sites have a single navigation menu. It makes sense to include the private pages there when needed rather than requiring a separate menu for them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10768 (Apply selected template to visual editor) created</title>
      
        <dc:creator>prometh</dc:creator>

      <pubDate>Thu, 10 Sep 2009 23:23:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10768/1252624991000000</guid>
      <description>&lt;p&gt;
If the selected template could be applied to the visual editor, it'd be great for clients who can't think outside the box. This could increase WordPress' popularity, as more people would use it for their customers.
&lt;/p&gt;
&lt;p&gt;
Kinda like this:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.joomlafckeditor.com/categoryblog/129-how-to-customise-the-article-template-in-the-editor"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.joomlafckeditor.com/categoryblog/129-how-to-customise-the-article-template-in-the-editor&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10764 (XML- RPC, blogger_editPost, Publish Status not working) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 10 Sep 2009 22:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10764#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10764#comment:3/1252622743000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This brings up the question of keeping the blogger.* methods up to date with the changes/updates/improvements that have been done with metaWeblog.* methods.  I'm inclined to say no and direct people to using the metaWeblog.* methods instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10692 (Do not allow unfiltered uploads for admins by default) reopened</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Thu, 10 Sep 2009 22:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10692#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10692#comment:6/1252622024000000</guid>
      <description>&lt;p&gt;
Are you not missing a break in the case statement in the 2.8 patch ?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10765 (Bigger HTTP downloads with curl class run out of memory) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 10 Sep 2009 22:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10765#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10765#comment:2/1252621214000000</guid>
      <description>&lt;p&gt;
we can possibly unset() any temporary variables once they're no longer needed, Would that free up some memory on such loads?
&lt;/p&gt;
&lt;p&gt;
(Remember, Once the 7MB zip is read into memory, Its then extracted into memory as well, So there goes  another 16MB(or whatever it expands to))
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 10 Sep 2009 22:15:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:9/1252620912000000</guid>
      <description>&lt;p&gt;
First run in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11911" title="Image editing (first run). Includes code by stephanreiter, see #10528"&gt;[11911]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This is far from ready, still need to separate the image meta in at least 3 different rows and implement some way to delete unneeded backup images. Also have to add support for ImageMagick when GD rotate is not available and auto-rotation of the uploaded image when EXIF orientation is set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11911]: Image editing (first run). Includes code by stephanreiter, see #10528</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 10 Sep 2009 22:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11911/1252620453651462</guid>
      <description>&lt;p&gt;
Image editing (first run). Includes code by stephanreiter, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10528" title="#10528: task (blessed): Media rotating, cropping, resizing etc in 2.9. (closed: fixed)"&gt;#10528&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4365 (Deleting a category scales poorly) updated</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Thu, 10 Sep 2009 21:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4365#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4365#comment:15/1252617196000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10767 (stripslashes_deep does not gracefully handle objects) created</title>
      
        <dc:creator>sowsinsk</dc:creator>

      <pubDate>Thu, 10 Sep 2009 20:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10767/1252614424000000</guid>
      <description>&lt;p&gt;
The stripslashes_deep() function  in formatting.php will throw a catchable fatal error if it encounters an object. This is because the function always call stripslashes() on the given argument unless the argument is an array. However, if you pass an array to stripslashes_deep(), and one of the elements of the array is an object, it will throw the fatal error.
&lt;/p&gt;
&lt;p&gt;
I realize that this function is not normally called on object values, however I have had this problem when stripslashes_deep is called on the result of a get_comment($id, ARRAY_A) call. This is because that call to get_comment returns an array that, depending on if the wp cache is used to return a comment object that's already been retrieved and perhaps has additional object data embedded in the array, might have object data in it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [11910]: Post by Email plugins might want to use there own POP3 class so move ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 10 Sep 2009 20:05:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11910/1252613124116327</guid>
      <description>&lt;p&gt;
Post by Email plugins might want to use there own POP3 class so move the action earlier.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10633 (Omit closing PHP tag at the end of a file when using include() or require()) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 10 Sep 2009 19:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10633#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10633#comment:8/1252611011000000</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10633#comment:5" title="Comment 5"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10633#comment:4" title="Comment 4"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see the need for this except possible on user-editable files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do you want to say that good coding practices are actually not counting?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is not good coding practice IMHO.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #7968 (Use "wp_die" template message instead of plain message when Atom is ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 10 Sep 2009 19:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7968#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7968#comment:12/1252610599000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That is exactly the spec I read - and it is very vague.
&lt;/p&gt;
&lt;p&gt;
I also read a lot more information on this - an error response format was discussed at committee stage but did not progress further.
&lt;/p&gt;
&lt;p&gt;
What we have now is better than html for an APP client to use - ideally a well formed parse-able XML response seems the best route for an even friendlier client response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10764 (XML- RPC, blogger_editPost, Publish Status not working) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Thu, 10 Sep 2009 19:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10764#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10764#comment:2/1252609960000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10764 (XML- RPC, blogger_editPost, Publish Status not working) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Thu, 10 Sep 2009 19:12:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10764#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10764#comment:1/1252609953000000</guid>
      <description>&lt;p&gt;
I agree there appears to be a problem with the blogger_editPost method.
&lt;/p&gt;
&lt;p&gt;
Something like what bobby_drk suggested sounds like a good fix, but you should be careful to add the proposed line a bit earlier, before the first line that tests against post_status
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( ('publish' == $post_status) &amp;amp;&amp;amp; !current_user_can('publish_posts') )
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I suspect this has not generally caused problems because very, very few clients probably use the blogger_editPost method. bobby_drk, if you can help it I would recommend not using it, and instead using the metaweblog variant. That will get things working for you instantly without having to wait for the patch to go through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10766 (Comment search is broken) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 10 Sep 2009 19:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10766/1252609668000000</guid>
      <description>&lt;p&gt;
The search box on the comments page in the admin area is currently broken on trunk. It always returns no results. Using PHP5 and MySQL 5.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10753 (Introduce pre-defined styles that are available in the editor) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 10 Sep 2009 17:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10753#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10753#comment:11/1252604832000000</guid>
      <description>&lt;p&gt;
I can support this, but *ONLY* for inline style="whatever" elements. The strong example is indeed a terrible one, because I'd have to oppose that. Strong is a meaningful tag. Same with em and others along those lines.
&lt;/p&gt;
&lt;p&gt;
For the specific case of text-align, we can use the existing aligncenter, alignleft, alignright styles that are required in themes, however I expect this will still cause breakage. Those are more generally applied to image blocks, not to paragraphs, for example.
&lt;/p&gt;
&lt;p&gt;
New styles like wp-textleft and wp-textright and such would work, and including them via wp_head would be acceptable in my view, if:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;All the styles were new names,
&lt;/li&gt;&lt;li&gt;All the styles started with a prefix like wp- (this should be the case anyway, going forward)
&lt;/li&gt;&lt;li&gt;The styling applied to them in the CSS was absolutely minimalistic. Nothing extra that could be applied to any specific theme. wp-textright must be text-align:right and nothing more than that.
&lt;/li&gt;&lt;li&gt;Overriding these must be as simple as using !important in the theme's CSS file. If a theme has to do a remove_action to get rid of them, then that's too much to expect.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Then I could give this a tentative +1. But I'd have to see the implementation to look for flaws. Adding CSS files into themes from the core code is fraught with peril.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10765 (Bigger HTTP downloads with curl class run out of memory) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 17:35:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10765#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10765#comment:1/1252604148000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch removes the code that isn't used anyway and is at least a conadidate to consume as much memory as the file surplus.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10692" title="First pass of HTTP Proxy support.  See #4011 props jacobsantos."&gt;[10692]&lt;/a&gt; westi  2009.03.04 08:28:39 First pass of HTTP Proxy support.  See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4011" title="#4011: task (blessed): add global proxy support in options (closed: fixed)"&gt;#4011&lt;/a&gt; props jacobsantos.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>10765.patch attached to Ticket #10765</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 17:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10765/10765.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10765/10765.patch/1252603945000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10765 (Bigger HTTP downloads with curl class run out of memory) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 17:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10765/1252603880000000</guid>
      <description>&lt;p&gt;
With a memory limit of 64M downloading a 7MB zip file consumes so much memory that the 64M limit is triggered.
&lt;/p&gt;
&lt;p&gt;
It's wp-includes/http.php on line 13333 in trunk. the whole reponse is not only loaded into the memory, it's splitted in parts then (that means at least doubled).
&lt;/p&gt;
&lt;p&gt;
That means: 7MB in curl memory + 7MB in the return value + 7MB in the explode functions return. So at least three times the download filessize (if not even more).
&lt;/p&gt;
&lt;p&gt;
The exploded $part variable isn't used any longer. Looks like some code has been forgotten there.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10750 (Add more actions around add/delete/update DB ops) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 10 Sep 2009 14:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10750#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10750#comment:5/1252594055000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11909" title="More add/delete/update actions. Props Demitrious Kelly. see #10750"&gt;[11909]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11909]: More add/delete/update actions. Props Demitrious Kelly. see #10750</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 10 Sep 2009 14:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11909/1252593825010053</guid>
      <description>&lt;p&gt;
More add/delete/update actions. Props Demitrious Kelly. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10750" title="#10750: enhancement: Add more actions around add/delete/update DB ops (closed: fixed)"&gt;#10750&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10743 (WP rewrite rule bug with &amp; in url path) updated</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Thu, 10 Sep 2009 14:30:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10743#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10743#comment:8/1252593027000000</guid>
      <description>&lt;p&gt;
And although it's not a core thing, we might also want to try things out with donncha's wp-super-cache.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10743 (WP rewrite rule bug with &amp; in url path) updated</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Thu, 10 Sep 2009 14:28:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10743#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10743#comment:7/1252592884000000</guid>
      <description>&lt;p&gt;
As far as having the fix in the query handler: there are up and down sides to that, but it'd be just as valid a solution, and if nothing else, it'd be easier to control, and for upgrades, since a .htaccess solution (as provided in patch) would have the downside of people having to physically go to the permalinks settings page and re-saving their configs (unless handled in the upgrade, which unless I'm mistaken, isn;t a best practice).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10743 (WP rewrite rule bug with &amp; in url path) updated</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Thu, 10 Sep 2009 14:24:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10743#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10743#comment:6/1252592696000000</guid>
      <description>&lt;ul&gt;&lt;li&gt;instances without mod_rewrite: in my test, the problem did not affect these
&lt;/li&gt;&lt;li&gt;query_string: indeed, that is the source of the issue. I tried other ways, such a suggested fix for MediaWiki (&lt;a class="ext-link" href="http://www.mediawiki.org/wiki/Manual:Short_URL/Ampersand_solution"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mediawiki.org/wiki/Manual:Short_URL/Ampersand_solution&lt;/a&gt;), but the above is what worked best, again, in my tests.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10759 (Bug: wp_register_style does not allow stylesheets with parameters) updated</title>
      
        <dc:creator>mark8barnes</dc:creator>

      <pubDate>Thu, 10 Sep 2009 13:45:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10759#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10759#comment:3/1252590322000000</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9243" title="#9243: defect (bug): wp_enqueue_script shouldn't convert source URL ampersands to character ... (closed: invalid)"&gt;#9243&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6453 (Thickbox images not loaded in best way) updated</title>
      
        <dc:creator>xavivars</dc:creator>

      <pubDate>Thu, 10 Sep 2009 11:58:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6453#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6453#comment:7/1252583887000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is an annoying bug, because we can't use Thickbox in our themes...
&lt;/p&gt;
&lt;p&gt;
I hope it is fixed soon ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9798 (TinyMCE Spellchecker not working behind firewall (google spellcheck)) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 10 Sep 2009 11:32:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9798#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9798#comment:37/1252582363000000</guid>
      <description>&lt;p&gt;
when this is fixed can we make sure that the spellchacker can be called when not logged in so we can use TinyMCE in themes etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8423 (Support Imagemagick) closed</title>
      
        <dc:creator>duncanmc</dc:creator>

      <pubDate>Thu, 10 Sep 2009 11:06:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8423#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8423#comment:4/1252580780000000</guid>
      <description>wontfix: &lt;p&gt;
I saw that my ticket is irrelevant.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10753 (Introduce pre-defined styles that are available in the editor) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 10 Sep 2009 10:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10753#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10753#comment:10/1252579096000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10753#comment:8" title="Comment 8"&gt;micasuh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
scribu - Where is this new thread called "Inline styles and TinyMCE"? I couldn't find it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here it is: &lt;a class="ext-link" href="http://lists.automattic.com/pipermail/wp-hackers/2009-September/027500.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://lists.automattic.com/pipermail/wp-hackers/2009-September/027500.html&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;This is my proposed solution:
Instead of relying on each theme developer, make a 'default.css' file and add
it through 'wp_head'.
- fixes the inline styles in TinyMCE
- potentially fixes inline styles generated by [gallery]
- themers can disable it if they wish
&lt;/pre&gt;&lt;p&gt;
People seem to like it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4968 (make_url_footnote() function not used) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 10 Sep 2009 08:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4968#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4968#comment:10/1252571830000000</guid>
      <description>&lt;p&gt;
Close, but not quite. The deprecated function should still operate as it currently does (i.e. keep all the existing code of the function), but just add in the logger function (including the third parameter) and move it to the new file. See the other functions in &lt;code&gt;deprecated.php&lt;/code&gt; as an example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4968 (make_url_footnote() function not used) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 08:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4968#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4968#comment:9/1252570288000000</guid>
      <description>&lt;p&gt;
Cross-Referencing another deprecated patch: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4915" title="#4915: enhancement: Deprecate get_alloptions() (closed: fixed)"&gt;#4915&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4915 (Deprecate get_alloptions()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 08:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4915#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4915#comment:8/1252570264000000</guid>
      <description>&lt;p&gt;
Cross-Referencing another deprecated patch: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4968" title="#4968: defect (bug): make_url_footnote() function not used (closed: fixed)"&gt;#4968&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10763 (Abstract function for authorization check in admin pages) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 10 Sep 2009 08:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10763#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10763#comment:7/1252569878000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
How about this invocation then?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would work.
&lt;/p&gt;
&lt;p&gt;
Whilst i dont like repeating code.. The auth checks are simple if statements, It makes it obvious as to what happens. "If not current user can perform manage_options, then die with message BlahBlahBlah". I'd favour leaving them be for the simple  fact of readable code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4337 (Blog by Email: No content is assumed) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 10 Sep 2009 08:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4337#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4337#comment:30/1252569706000000</guid>
      <description>&lt;p&gt;
I'd assume its still current, nothing has changed around here.
&lt;/p&gt;
&lt;p&gt;
Test case: Send an email to WordPress through as many mail servers as you can until you  find one that fails.
&lt;/p&gt;
&lt;p&gt;
Include a full email (including headers) received by WordPress which fails. Until that happens, Its going to be hit-and-miss sorting it out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4915 (Deprecate get_alloptions()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 08:00:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4915#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4915#comment:7/1252569625000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
wp_load_alloptions() is not a 100% suitable replacement so it's not suggested. No occurences wihtin the codebase. The named plugin is not for 2.8 / 2.9 therefore no prolems to patch any longer. If this gets commited early, the plugin author - if still interested - can then update against the latest version before 2.9 will be released.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>4915.patch attached to Ticket #4915</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4915/4915.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4915/4915.patch/1252569504000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4965 (Blog by Email: any images and attachments in your email are not being ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4965#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4965#comment:7/1252569338000000</guid>
      <description>&lt;p&gt;
Pretty sure this is still current, and Defect it would be, It would be assumed that a gallery should be inserted automatically at the end of the post (as happened in the past i think) in the event that there isnt a gallery in the post and there are attached images.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10633 (Omit closing PHP tag at the end of a file when using include() or require()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10633#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10633#comment:7/1252569128000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10633#comment:6" title="Comment 6"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You're kidding, right? Having "?&amp;gt;" is no proof of a fully uploaded file, that argument sounds not very serious to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To a technical user yes. But to a non-PHPer, No. Quite often people will ask why wp-config.php doesnt have it, as they think it means its not fully there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then put a comment in there. This would also help in terms to signal a propper end. And having this documented in the coding styles can help as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Whitespace immediately following a ?&amp;gt; is ignored by PHP and not rendered, However, Multiple new lines are not ignored (Single is fine, multiple is not).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From php.net, the official documentation: "so unwanted whitespace will not occur at the end of files, and you will still be able to add headers to the response later." Its written as an argument to &lt;em&gt;not&lt;/em&gt; use ?&amp;gt; at the end, so I think it will be much safter to do according the official documentation then to isolated tests. So I suggest to stick with the official recommendation to remove it for includes / requires.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10633 (Omit closing PHP tag at the end of a file when using include() or require()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:45:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10633#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10633#comment:6/1252568728000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
You're kidding, right? Having "?&amp;gt;" is no proof of a fully uploaded file, that argument sounds not very serious to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To a technical user yes. But to a non-PHPer, No. Quite often people will ask why wp-config.php doesnt have it, as they think it means its not fully there.
&lt;/p&gt;
&lt;p&gt;
Semantics are not always for the programming language.
&lt;/p&gt;
&lt;p&gt;
Whitespace immediately following a ?&amp;gt; is ignored by PHP and not rendered, However, Multiple new lines are not ignored (Single is fine, multiple is not).
&lt;/p&gt;
&lt;p&gt;
Wontfix pending dev-feedback
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9377 (Theme API mangles theme descriptions) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:42:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9377#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9377#comment:3/1252568579000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4353 (Users with edit_posts capability can see everyone's comments, IPs, and ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4353#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4353#comment:17/1252568405000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10763 (Abstract function for authorization check in admin pages) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:39:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10763#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10763#comment:6/1252568377000000</guid>
      <description>&lt;p&gt;
The reason I ask is, if it's the former, I would like to adopt my patch to your vision, and if it's the latter, then this will help me provide more helpful patches in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5831 (Inline help for "UTF-8 is recommended" needs replacing) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5831#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5831#comment:10/1252568291000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>4968.2.patch attached to Ticket #4968</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4968/4968.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4968/4968.2.patch/1252567970000000</guid>
      <description>&lt;p&gt;
no more deprecated function calls in the_content_rss() plus better docblock comments.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4968 (make_url_footnote() function not used) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4968#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4968#comment:8/1252567417000000</guid>
      <description>&lt;p&gt;
This is patched now and moved to deprecated. The existing function call can/should stay in then? If not, I'm just doing another patch by removing the calls from source and upload it in some minutes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>4968.patch attached to Ticket #4968</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 10 Sep 2009 07:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4968/4968.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4968/4968.patch/1252567342000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Thu, 10 Sep 2009 05:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:37/1252562050000000</guid>
      <description>&lt;p&gt;
New patch.  I've abstracted the header-fetching to a separate function which is used by both plugins and themes.  So, yes, this patch adds both an extra_plugin_headers hook and an extra_theme_headers hook.
&lt;/p&gt;
&lt;p&gt;
Basically, you can make a wrapper function that:
&lt;/p&gt;
&lt;p&gt;
1) defines an array of the headers to be searched for
2) passes it to get_file_data() along with the file
3) optionally, passes a $context string that automatically instantiates an extra_$context_headers hook.
&lt;/p&gt;
&lt;p&gt;
This also allows plugins to use this function to search for similarly styled headers in different types of files.  Makes it easy for a plugin to fetch data relating to custom config files or such that apply to itself. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wptrac_8964_patch4.diff attached to Ticket #8964</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Thu, 10 Sep 2009 05:45:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8964/wptrac_8964_patch4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8964/wptrac_8964_patch4.diff/1252561528000000</guid>
      <description>&lt;p&gt;
Adds hooks to both plugins and themes, new function get_file_data()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10753 (Introduce pre-defined styles that are available in the editor) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Thu, 10 Sep 2009 03:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10753#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10753#comment:9/1252553663000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Insert TinyMCE CSS with predefined, best practices styles (i.e. &lt;strong&gt;class="strong"&lt;/strong&gt; functions similarly to strong tag).
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;class="strong"&lt;/strong&gt; is a terrible example, admittedly. It needs a more semantic name that will work for elements that don't just need a typical bold. I just couldn't think of anything else off the top of my head. My apologies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4968 (make_url_footnote() function not used) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 10 Sep 2009 03:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4968#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4968#comment:7/1252552976000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4968#comment:6" title="Comment 6"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is a function set on the deprecated list?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's moved to &lt;code&gt;deprecated.php&lt;/code&gt; and a function call is added inside of it that logs the call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10753 (Introduce pre-defined styles that are available in the editor) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Thu, 10 Sep 2009 03:16:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10753#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10753#comment:8/1252552587000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10753#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes it's a large change that would take months for the themes to adopt and for the users to update their themes. Perhaps the proper place for such discussion is wp-hackers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While it could take months for theme developers to catch on and support the idea, I think the implementation of this idea should not take long. Starting out, this could easily be an optional switch that exists in Settings&amp;gt;Writing. Provide a checkbox which, when enabled, would do two things:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Switch functionality of TinyMCE from inline styles to modular HTML and class name attributes. Modular HTML means that if designer wants to use divs instead of spans, he'll have that option.
&lt;/li&gt;&lt;li&gt;Insert TinyMCE CSS with predefined, best practices styles (i.e. class="strong" functions similarly to strong tag).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Assuming theme developers adopt this in mass, this optional feature could become permanent feature down the road. At present, when this functionality becomes available, it would only become functional when activated through the Settings menu option.
&lt;/p&gt;
&lt;p&gt;
scribu - Where is this new thread called "Inline styles and TinyMCE"? I couldn't find it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10760 ("Change Permalinks" button shows up when page is on front) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 10 Sep 2009 01:22:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10760#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10760#comment:2/1252545726000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10760 ("Change Permalinks" button shows up when page is on front) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 10 Sep 2009 01:21:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10760#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10760#comment:1/1252545666000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11908" title="Don't show &amp;#34;Change Permalinks&amp;#34; button when editing the page set as ..."&gt;[11908]&lt;/a&gt;) Don't show "Change Permalinks" button when editing the page set as "Front page", props simonwheatley, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10760" title="#10760: defect (bug): &amp;#34;Change Permalinks&amp;#34; button shows up when page is on front (closed: fixed)"&gt;#10760&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11908]: Don't show "Change Permalinks" button when editing the page set as ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 10 Sep 2009 01:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11908/1252545663826295</guid>
      <description>&lt;p&gt;
Don't show "Change Permalinks" button when editing the page set as "Front page", props simonwheatley, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10760" title="#10760: defect (bug): &amp;#34;Change Permalinks&amp;#34; button shows up when page is on front (closed: fixed)"&gt;#10760&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10764 (XML- RPC, blogger_editPost, Publish Status not working) created</title>
      
        <dc:creator>bobby_drk</dc:creator>

      <pubDate>Thu, 10 Sep 2009 00:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10764/1252544289000000</guid>
      <description>&lt;p&gt;
In the blogger_editPost function in xmlrpc.php is not working properly.  Currently you cannot change publish status.  It looks like we are missing a line of code.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
$post_status = ($publish) ? 'publish' : 'draft';
&lt;/pre&gt;&lt;p&gt;
When I inserted this line into the function before the
&lt;/p&gt;
&lt;pre class="wiki"&gt;$postdata = compact('ID', 'post_content', 'post_title', 'post_category', 'post_status', 'post_excerpt');
&lt;/pre&gt;&lt;p&gt;
I was able to gain control of the publish status.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10753 (Introduce pre-defined styles that are available in the editor) updated</title>
      
        <dc:creator>ev3rywh3re</dc:creator>

      <pubDate>Thu, 10 Sep 2009 00:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10753#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10753#comment:7/1252542538000000</guid>
      <description>&lt;p&gt;
Before something like this sets some design precedents in stone, I would like to suggest that some sort of CSS coding standards are established.
&lt;/p&gt;
&lt;p&gt;
I know it seems silly, but most CSS element names in WordPress are named fairly arbitrarily and there really isn't a guide like &lt;a class="ext-link" href="http://codex.wordpress.org/WordPress_Coding_Standards"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/WordPress_Coding_Standards&lt;/a&gt; related to HTML or CSS.
&lt;/p&gt;
&lt;p&gt;
This is probably more important for the Admin UI, but if CSS starts being predefined for the objects WordPress spits out then some coding standard should thought about.
&lt;/p&gt;
&lt;p&gt;
For example: Once upon a time the underscore could not be used and dashes were mostly used in class and id names. Now that the underscore is more widely supported, it is being used make elements more readable. I have no preference, but .alignright could be made more readable as .align-right.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>