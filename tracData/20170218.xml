<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #38571 (Customizer preview blocked by content security policy) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38571#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38571#comment:7/1487461102021116</guid>
      <description>&lt;p&gt;
@westonruter The iframe call to the customizer has the following response headers that might be relevant:
&lt;/p&gt;
&lt;pre class="wiki"&gt;content-security-policy:"frame-ancestors http://xn--hellthere-37a.dev"
x-frame-options:"ALLOW-FROM http://xn--hellthere-37a.dev/wp-admin/customize.php"
&lt;/pre&gt;&lt;p&gt;
The initial pageload (to load the entire customizer) has the following response header:
&lt;/p&gt;
&lt;pre class="wiki"&gt;x-frame-options:"SAMEORIGIN"
&lt;/pre&gt;&lt;p&gt;
Please let me know if you need any additional information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:36/1487461078659731</guid>
      <description>&lt;p&gt;
I agree with releasing incrementally, starting small. I did want to make sure to articulate how I see the problem space and provide definitions for the various aspects of what could be considered a revision in the customizer, with an eye toward what an eventual iteration could ultimately encompass.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37712 (Opacity not applied to admin menu icon when it selected) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:28:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37712#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37712#comment:3/1487460529813462</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36574 (Redesign term pages) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36574#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36574#comment:12/1487460295336515</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39835" title="#39835: enhancement: Category slug could be auto-generated with ability to update manually (new)"&gt;#39835&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Moving this to Future Release for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:7/1487460171412595</guid>
      <description>&lt;p&gt;
See also &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/37923" title="#37923: feature request: Introduce shared wp_blogmeta database table for multisite installation (reopened)"&gt;#37923&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Imagine that global &lt;code&gt;wp_blogmeta&lt;/code&gt; table, and this feature being saved there, with a &lt;code&gt;db_version&lt;/code&gt; &lt;code&gt;meta_key&lt;/code&gt; and that same numeric value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37430 (Add Plugins: Improve the error messages displaying) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37430#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37430#comment:9/1487460106467748</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@m1tk00 Finally got around to review your patch as requested. Sorry for the delay!
&lt;/p&gt;
&lt;p&gt;
Instead of moving around &lt;code&gt;&amp;lt;hr class="wp-header-end"&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;div class="inline error"&amp;gt;&lt;/code&gt; can be used so the notice doesn't get relocated underneath the page title. I fixed this in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37430/37430.diff" title="Attachment '37430.diff' in Ticket #37430"&gt;37430.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37430/37430.diff" title="Download"&gt;​&lt;/a&gt; and made a few optimizations here and there to further unify the error message.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Plugin error message:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/MetCCm-Da1.png"&gt;&lt;img src="https://cldup.com/MetCCm-Da1.png" alt="https://cldup.com/MetCCm-Da1.png" crossorigin="anonymous" title="https://cldup.com/MetCCm-Da1.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Theme error message:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/yiYyebmOlC.png"&gt;&lt;img src="https://cldup.com/yiYyebmOlC.png" alt="https://cldup.com/yiYyebmOlC.png" crossorigin="anonymous" title="https://cldup.com/yiYyebmOlC.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
No plugin found:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/Ze4QLM8j6q.png"&gt;&lt;img src="https://cldup.com/Ze4QLM8j6q.png" alt="https://cldup.com/Ze4QLM8j6q.png" crossorigin="anonymous" title="https://cldup.com/Ze4QLM8j6q.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
No theme found:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/4meq64u6Bn.png"&gt;&lt;img src="https://cldup.com/4meq64u6Bn.png" alt="https://cldup.com/4meq64u6Bn.png" crossorigin="anonymous" title="https://cldup.com/4meq64u6Bn.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37430.diff attached to Ticket #37430</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37430/37430.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37430/37430.diff/1487459889676630</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38571 (Customizer preview blocked by content security policy) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38571#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38571#comment:6/1487459627845980</guid>
      <description>&lt;p&gt;
@khromov please provide more details. Are you returning a CSP response header?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38571 (Customizer preview blocked by content security policy) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Sat, 18 Feb 2017 23:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38571#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38571#comment:5/1487459151034976</guid>
      <description>&lt;p&gt;
I think this needs to be reopened, just came across the issue using VVV / OSX 10.12.2 / Firefox 51.0.1 / Twenty Seventeen theme, fresh install.
&lt;/p&gt;
&lt;p&gt;
The site was under a .dev domain. The site has an IDN (Example: xn--hellthere-37a.dev )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35569 (Avatar should update when email is changed) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35569#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35569#comment:3/1487457507911226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35569/35569.diff" title="Attachment '35569.diff' in Ticket #35569"&gt;35569.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35569/35569.diff" title="Download"&gt;​&lt;/a&gt; is a proof-of-concept using a JS implementation of md5 to change the avatar on the fly.
&lt;/p&gt;
&lt;p&gt;
Using the REST API to get the result of &lt;code&gt;get_avatar()&lt;/code&gt; seemed a bit overkill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35569.diff attached to Ticket #35569</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35569/35569.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35569/35569.diff/1487457425316967</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39913 (Customize: Disable auto-trashing of published changesets in ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39913/1487456948472493</guid>
      <description>&lt;p&gt;
When changesets were introduced in 4.7 (via &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30937" title="#30937: feature request: Add Customizer state persistence in changesets (formerly “transactions”) (closed: fixed)"&gt;#30937&lt;/a&gt;), we decided by default to auto-trash a &lt;code&gt;customize_changeset&lt;/code&gt; post upon publishing. The reason for this is that there was no UI for changesets and there would be no way to clean up old revisions from the UI, meaning the posts would just be added indefinitely. However, with revisions being planned for 4.8 being planned for in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/31089" title="#31089: enhancement: Customize: Add revisions for changesets (new)"&gt;#31089&lt;/a&gt; and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/21666" title="#21666: feature request: Customizer reset/undo/revert (assigned)"&gt;#21666&lt;/a&gt;, it would perhaps be beneficial to disable the auto-trashing behavior so that once revisions support &lt;em&gt;is&lt;/em&gt; added the revision history won't be empty.
&lt;/p&gt;
&lt;p&gt;
Nevertheless, even with changesets not being auto-trashed, there would still be &lt;a href="https://core.trac.wordpress.org/ticket/21666#comment:33"&gt;challenges&lt;/a&gt; with reverting to a previously-published changeset:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;h2 id="ChallengesofRevertingtoaPreviously-publishedChangeset"&gt;Challenges of Reverting to a Previously-published Changeset&lt;/h2&gt;
&lt;p&gt;
Reverting to a revision of a changeset is easier than reverting to a previously-published changeset. When reverting to a revision of the current changeset, all this means basically is to reset the settings to match the state of the changeset at that revision. However, reverting to a previously-published changeset is more complicated/interesting. Take this changelog:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;January 1st: User changes site title to “Foo”.
&lt;/li&gt;&lt;li&gt;January 2nd: User changes site tagline.
&lt;/li&gt;&lt;li&gt;January 3rd: User changes site title to “Bar”.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Now, if the user clicks the changeset revision for January 1st, my assumption is that this will restore the site title of “Foo”. However, will it also include a revert of the change made to the tagline on January 2nd? Each changeset only contains the settings that were modified, so as it stands right now we would not know what to revert the tagline to since it's previous value is not captured. Whenever a changeset is about to be published, we could capture the current value for each setting prior to saving. This would allow us to roll back all of the changes made to the site between two published changesets. The process would involve walking over the previous changesets to gather up a list of the previous values and merge them and apply them to the current changeset for previewing.
&lt;/p&gt;
&lt;p&gt;
Complication: What about when a user makes a change to the tagline &lt;em&gt;outside&lt;/em&gt; of the customizer? In that case the tagline would not be referenced in any changeset, and reverting to the changeset on the 1st would only rollback the site title. Would this be expected behavior?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:19:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:54/1487456357803268</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
@celloexpressions in the case here for when zooming out further than 50% are additional media queries needed to ensure the pane remains the same relative width?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once this is addressed I think it's good to commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38263 (Color picker: add a hue-only mode) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:15:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38263#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38263#comment:23/1487456149866615</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39681" title="#39681: feature request: Add RGBA to Customizer color picker (new)"&gt;#39681&lt;/a&gt; (Add RGBA to Customizer color picker)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39681 (Add RGBA to Customizer color picker) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 22:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39681#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39681#comment:2/1487456105754705</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The code from @braad I think is a good polyfill extension to add alpha support, however I think for the core merge we really should be extending the core color picker in the same way that was done for adding hue slider support in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38263" title="#38263: enhancement: Color picker: add a hue-only mode (closed: fixed)"&gt;#38263&lt;/a&gt; and made a part of Iris itself.
&lt;/p&gt;
&lt;p&gt;
@braad would you be interested in forking Automattic/Iris to extend it to add hue support, open a PR, and then create a core patch to incorporate your work into the &lt;code&gt;wpColorPicker&lt;/code&gt; and the customizer Color control that uses it as was done for hue? This way, even if @mattwieve doesn't have time to merge it upstream, at least it would still be part of Iris although a fork.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:6/1487453550582786</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1487453547002736"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) reopened</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:31:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:5/1487453511704021</guid>
      <description>&lt;p&gt;
I think a better way forward for blog_versions table is to not create it on new WordPress installs. Then put a checks in place for the one place in core that writes to the table to check if the table exists before writing to it. This also means that if you have an existing site that you want to get rid of this table, then you can manually delete it.
&lt;/p&gt;
&lt;p&gt;
This is a nice solution as it is backwards compatible but also means you can removed blog_versions if you want as well.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:53/1487453431304237</guid>
      <description>&lt;p&gt;
Yeah, I was able to preview by making my browser wider off-screen, I just couldn't get a good feel for how it would look in action on a wider monitor. Unfortunately the zooming doesn't really give a good preview either. Regardless, I think it's a good quick-win.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:52/1487452836760880</guid>
      <description>&lt;p&gt;
@melchoyce I think it can be easily simulated by zooming out your browser. Compare zooming out to 25% with and without the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-without-patch.mov" title="Attachment 'zoom-out-to-25-percent-without-patch.mov' in Ticket #32296"&gt;zoom-out-to-25-percent-without-patch.mov&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32296/zoom-out-to-25-percent-without-patch.mov" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-with-patch.mov" title="Attachment 'zoom-out-to-25-percent-with-patch.mov' in Ticket #32296"&gt;zoom-out-to-25-percent-with-patch.mov&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32296/zoom-out-to-25-percent-with-patch.mov" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Notice how when the patch is applied (and at least to 50% zoom) the sidebar has the same relative width to the screen.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions in the case here for when zooming out further than 50% are additional media queries needed to ensure the pane remains the same relative width?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>zoom-out-to-25-percent-with-patch.mov attached to Ticket #32296</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-with-patch.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-with-patch.mov/1487452571910698</guid>
      <description>&lt;p&gt;
Zooming out with patch applied
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>zoom-out-to-25-percent-without-patch.mov attached to Ticket #32296</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-without-patch.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32296/zoom-out-to-25-percent-without-patch.mov/1487452554960582</guid>
      <description>&lt;p&gt;
Zooming out without patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39907 (Add "Remove all widgets" button for themes with multiple widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 21:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39907#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39907#comment:1/1487451919007393</guid>
      <description>&lt;p&gt;
@karmatosed so you're thinking of something that appears next to the current Reorder link and Add Widget button?
&lt;/p&gt;
&lt;p&gt;
Aside, here is a JS snippet for clearing out a widget area:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;emptyWidgetArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;sidebarId&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;targetSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inactiveSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;widgetIds&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;targetSidebarSetting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sidebars_widgets['&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;sidebarId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;']'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;inactiveSidebarSetting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sidebars_widgets[wp_inactive_widgets]'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// Grab existing widget IDs from sidebar.
&lt;/span&gt;        &lt;span class="nx"&gt;widgetIds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;targetSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;// Clear out sidebar of widgets.
&lt;/span&gt;        &lt;span class="nx"&gt;targetSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// Append removed widget IDs to the inactive sidebar.
&lt;/span&gt;        &lt;span class="nx"&gt;inactiveSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;inactiveSidebarSetting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;widgetIds&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:55:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:60/1487451349152957</guid>
      <description>&lt;p&gt;
The visual separation makes sense but should probably go further to feel more intentional - these are actual widgets with data, not available widget types that can be instantiated. Maybe even matching the style of widgets in a sidebar, as the admin screen does?
&lt;/p&gt;
&lt;p&gt;
I've always envisioned an inactive widgets section at the bottom of the available items panel that accordion-expands; that may not easily integrate with the search, though. There is a nice simplicity about including them with new widgets.
&lt;/p&gt;
&lt;p&gt;
I'd also keep &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39910" title="#39910: enhancement: Customizer: Add ability to drag &amp;amp; drop widgets and menu items (new)"&gt;#39910&lt;/a&gt; separate from this - no need to tie that into this even though it's related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39910 (Customizer: Add ability to drag &amp; drop widgets and menu items) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39910#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39910#comment:2/1487451201451239</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm personally not a fan of drag and drop, but I know that it works well for some people. The visual styling of the current available widgets doesn't really suggest draggability, so that may need to be adjusted if this change is made. Or, it could be a hidden enhancement, with click-to-add remaining the primary interaction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:3/1487450848497067</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think it's because the &lt;code&gt;wpeditimage&lt;/code&gt; TinyMCE plugin uses &lt;code&gt;tinymce.dom.DOMUtils.setAttribs&lt;/code&gt; which just recursively calls &lt;code&gt;tinymce.dom.DOMUtils.setAttrib&lt;/code&gt; which accepts 3 params, and about the &lt;code&gt;value&lt;/code&gt; one:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Value to set on the attribute - if this value is falsy like null, 0 or "" it will remove the attribute instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So when &lt;code&gt;wp.media&lt;/code&gt; passes an empty alt attribute, TinyMCE just strips it out. It makes sense to remove empty HTML attributes, with the notable exception of the &lt;code&gt;alt&lt;/code&gt; attribute. While WordPress should ensure this doesn't happen and try to find a way to re-add the empty alt attribute when appropriate, maybe this should be reported upstream too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:149/1487450287030159</guid>
      <description>&lt;p&gt;
@melchoyce @karmatosed @folletto please take a look at &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/216"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/216&lt;/a&gt;. Do any of you see blockers for moving this back into trunk to facilitate testing? Are there any other obvious bugs to fix before committing (keeping within this design)?
&lt;/p&gt;
&lt;p&gt;
I'd like to put out a call for testing and feedback on Make/Design once it's back where people can test via the beta tester plugin. In many ways this can serve as an initial UI prototype for browsing themes, and we can start exploring new designs and approaches from there, building on the technical base that this ticket provides.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:27/1487448544825517</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39696#comment:25" title="Comment 25"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On a related note, it would be great if in addition to indicating a embed subsetting if we could use a similar construct to indicate that resources should be embedded recursively along a specified tree. For example, if I wanted to get the recent posts along with their comments embedded and the embedded comments' own authors also embedded a third level down, maybe I could do so with a request like:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/wp/v2/posts?_embed[]=comments/author&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I understand this is maybe encroaching on GraphQL territory, but just wanted to mention recursive embedding as the flip side of being able to limit embedding. This is also encroaching on batch requests as well I suppose.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not totally sold on this, like you said this sort of thing feels like a better fit for a full-fledged query language, rather than a stopgap measure for one specific case.
&lt;/p&gt;
&lt;p&gt;
Another potential drawback of this approach is if there is a way to embed a very large number of objects in a single request.  We would need to limit this somehow, otherwise we would be providing a convenient way to take up a bunch of server resources with a single request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 20:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:26/1487448378436333</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39696#comment:23" title="Comment 23"&gt;rheinardkorf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe I've now addressed your feedback from the previous patch. Let me know if there is anything else you'd like me to do here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
After looking at this again, I think we can improve the approach further.  Instead of adding a new &lt;code&gt;$request&lt;/code&gt; parameter, let's change the &lt;code&gt;$embed&lt;/code&gt; parameter to &lt;code&gt;response_to_data&lt;/code&gt; as follows:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="gd"&gt;- @param bool $embed Whether links should be embedded.
&lt;/span&gt;&lt;span class="gi"&gt;+ @param bool|array $embed Which links to embed (none, all, or a specific list).
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, we'll need to compute the value of this parameter (either &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or an array) before calling &lt;code&gt;response_to_data&lt;/code&gt;, and then pass it down to &lt;code&gt;embed_links&lt;/code&gt; (with a default value of &lt;code&gt;true&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
This should be a cleaner and more backwards-compatible way of making the change here.
&lt;/p&gt;
&lt;p&gt;
We can also make some further improvements to the test cases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Split up into multiple test methods
&lt;/li&gt;&lt;li&gt;Set parameters using &lt;code&gt;$request-&amp;gt;set_query_param&lt;/code&gt;, &lt;code&gt;$request-&amp;gt;set_json_param&lt;/code&gt; etc., for all cases I listed in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39696#comment:8" title="Comment 8"&gt;comment:8&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Potentially use a &lt;a class="ext-link" href="https://phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHPUnit data provider&lt;/a&gt; to get rid of boilerplate in the tests
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm also happy to handle any of these further improvements later.
&lt;/p&gt;
&lt;p&gt;
Finally, you had asked about getting this change into 4.7.3.  For this release we are targeting fixes with potential backwards-compatibility implications, as these need to be made sooner rather than later.  Since this is a pretty clean enhancement, and it's not quite ready yet, I think we can hold off until 4.8 or a potential 4.7.4.
&lt;/p&gt;
&lt;p&gt;
If you need this functionality in the meantime, then I would recommend creating a plugin.  Here is a &lt;a class="ext-link" href="https://gist.github.com/joehoyle/12e37c293adf2bb0ea1b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;potential starting point&lt;/a&gt; for such a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:52:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:16/1487447557520722</guid>
      <description>&lt;p&gt;
@dhanendran I'd prefer to test the actual response coming from the API endpoint, as in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39466/39466.2.diff" title="Attachment '39466.2.diff' in Ticket #39466"&gt;39466.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39466/39466.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think this is good to go for 4.7.3.  I'll wait a couple more days before committing to give others a chance to review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39466.2.diff attached to Ticket #39466</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39466/39466.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39466/39466.2.diff/1487447480112428</guid>
      <description>&lt;p&gt;
Improved unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:7/1487446224602812</guid>
      <description>&lt;p&gt;
Added first pass for moving the repeated logic into a function for a major release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39875-major.diff attached to Ticket #39875</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875-major.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875-major.diff/1487446194675382</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #39005,​39264 batch updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39005%2C39264</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39005%2C39264/1487446164702021</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40077" title="REST API: Skip generating the client test fixtures in multisite mode.
 ..."&gt;40077&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Skip generating the client test fixtures in multisite mode.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are a couple of changes to the generated API schemas between single-site and multisite mode - for example, the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt; settings are not present in the settings endpoint (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39005" title="#39005: defect (bug): REST API: Site URL setting should not be present on multisite installations (closed: fixed)"&gt;#39005&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To avoid unexpected changes to the &lt;code&gt;wp-api-generated.js&lt;/code&gt; fixture file, skip generating the client test fixtures when running the test suite in multisite mode.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40077]: REST API: Skip generating the client test fixtures in multisite mode.  ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40077/1487446164214484</guid>
      <description>&lt;p&gt;
REST API: Skip generating the client test fixtures in multisite mode.
&lt;/p&gt;
&lt;p&gt;
There are a couple of changes to the generated API schemas between single-site and multisite mode - for example, the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt; settings are not present in the settings endpoint (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39005" title="#39005: defect (bug): REST API: Site URL setting should not be present on multisite installations (closed: fixed)"&gt;#39005&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
To avoid unexpected changes to the &lt;code&gt;wp-api-generated.js&lt;/code&gt; fixture file, skip generating the client test fixtures when running the test suite in multisite mode.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:21:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:11/1487445689709797</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39256/39256.4.diff" title="Attachment '39256.4.diff' in Ticket #39256"&gt;39256.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39256/39256.4.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Deprecate &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt;; add and use a new function (&lt;code&gt;rest_parse_date_with_utc&lt;/code&gt;) instead.
&lt;/li&gt;&lt;li&gt;Add tests for creating and updating comments as well as posts.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39256.4.diff attached to Ticket #39256</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 19:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39256/39256.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39256/39256.4.diff/1487445626982726</guid>
      <description>&lt;p&gt;
Deprecate &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt;; add tests for comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38707 (Customizer: Additional CSS highlight, revisions, selection, per-page, ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 18:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38707#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38707#comment:12/1487444356495787</guid>
      <description>&lt;p&gt;
As &lt;a href="https://core.trac.wordpress.org/ticket/12423#comment:42"&gt;noted&lt;/a&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;, there is an &lt;code&gt;inputStyle&lt;/code&gt; for CodeMirror that is better for accessibility. Here is a CSS demo forked from @iseulde and @afercia: &lt;a class="ext-link" href="http://codepen.io/westonruter/pen/Graepj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codepen.io/westonruter/pen/Graepj&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like the main thing missing in this pen is CSS autocomplete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 18:56:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:45/1487444188120532</guid>
      <description>&lt;p&gt;
Some seemingly great results on using the accessible version of CodeMirror: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1487436288004630"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-editor/p1487436288004630&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>sami.keijonen</dc:creator>

      <pubDate>Sat, 18 Feb 2017 17:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:2/1487440200868860</guid>
      <description>&lt;p&gt;
I confirm this and can reproduce in WP 4.7.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 18 Feb 2017 17:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:1/1487439142097961</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1487439140002440"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 18 Feb 2017 17:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912/1487438163172145</guid>
      <description>&lt;p&gt;
When an image has a decorative purpose, it's extremely important for accessibility that the image has an empty alt attribute &lt;code&gt;alt=""&lt;/code&gt;. In absence of an empty alt attribute, assistive technologies won't assume the image is just decorative and will try to read out "something". In most of the cases they read out the image file path or part of it, i.e. the filename.
&lt;/p&gt;
&lt;p&gt;
Turns out, when editing the details of an image inside a post, empty alt attributes get stripped out when updating the details.
&lt;/p&gt;
&lt;p&gt;
Seems to me this is not specific to 4.7 but happens also in some of the previous versions, under different conditions. Worth reminding the alt attribute fallback to the title was recently removed, and this is one of the reasons for the different behaviour across different versions.
&lt;/p&gt;
&lt;p&gt;
To reproduce in WordPress 4.7:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;edit a post
&lt;/li&gt;&lt;li&gt;insert an image with an empty alt attribute
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The markup inserted in the post will be something like this:
&lt;code&gt;&amp;lt;img class="alignnone size-full wp-image-3020" src="http://.../wp-content/uploads/2017/01/image.jpg" alt="" width="1200" height="800" /&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;then click on the image and click on the "Edit" pencil icon in the inline image toolbar
&lt;/li&gt;&lt;li&gt;the "Image Details" modal opens
&lt;/li&gt;&lt;li&gt;change some image property, for example set the alignment to "right"
&lt;/li&gt;&lt;li&gt;click the "Update" button in the modal
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The updated markup in the post will be:
&lt;code&gt;&amp;lt;img class="alignright wp-image-3020 size-full" src="http://.../wp-content/uploads/2017/01/image.jpg" width="1200" height="800" /&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
To reproduce in WordPress 4.6 and 4.5:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;repeat all the steps above but make sure that also the "Title" of the image is empty. When both the title and the alt text fields are empty, the empty &lt;code&gt;alt=""&lt;/code&gt; gets stripped out
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
WordPress 4.4:
Seems to me the empty alt attribute is always preserved, which is the correct behaviour.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25143 (Appending registered query vars to home URL sets is_home to true when ...) updated</title>
      
        <dc:creator>gongwan33</dc:creator>

      <pubDate>Sat, 18 Feb 2017 16:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25143#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25143#comment:35/1487435601193720</guid>
      <description>&lt;p&gt;
I have encountered the same problem in 4.7.2. Haven't the patch been included in the new WordPress version yet?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Sat, 18 Feb 2017 15:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827#comment:7/1487431429262843</guid>
      <description>&lt;p&gt;
I didn't get far with this one before my schedule got crazy, so anyone else who wants to take a stab is more than welcome to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 18 Feb 2017 13:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:11/1487424281788108</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39561#comment:10" title="Comment 10"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@adamsilverstein what about the unit tests for this change?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point! I will work on adding a version of the &lt;a class="ext-link" href="https://github.com/WP-API/client-js/pull/152/files#diff-b684ac33d2f20b5c4f780c70adb9382dR16"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;test for this&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39911 (Menu logged in) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 18 Feb 2017 12:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39911#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39911#comment:2/1487419836629845</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39911 (Menu logged in) closed</title>
      
        <dc:creator>McCage</dc:creator>

      <pubDate>Sat, 18 Feb 2017 12:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39911#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39911#comment:1/1487419375546894</guid>
      <description>invalid: &lt;p&gt;
Sorry, I was wrong. Disappearance of the possibility to choose menu items to be displayed for logged in users only came from the deactivation of the Na Menu Roles Plug-in.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39911 (Menu logged in) created</title>
      
        <dc:creator>McCage</dc:creator>

      <pubDate>Sat, 18 Feb 2017 11:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39911/1487415944358940</guid>
      <description>&lt;p&gt;
Since 4.7.2. menu items lost the possibility to choose to be displayed for logge in users only. This causes privacy problems.
I do use BuddyPress on: ruilkringdelftwestland.nl
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sat, 18 Feb 2017 10:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:10/1487412444849627</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think inline documentation for these features would be good.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Selective Refresh JavaScript Events
&lt;/li&gt;&lt;li&gt;Notifications
&lt;/li&gt;&lt;li&gt;Client-side Validation
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/themes/customize-api/tools-for-improved-user-experience/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/customize-api/tools-for-improved-user-experience/&lt;/a&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/themes/customize-api/the-customizer-javascript-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/customize-api/the-customizer-javascript-api/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 18 Feb 2017 09:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:59/1487411231182096</guid>
      <description>&lt;p&gt;
@folletto I'm wondering if the inactive widgets could somehow be styled to indicate that. It may be something that needs testing to see. Visually the only hitch I am getting is 'why are these split out'. Maybe that's ok as the user doesn't need to know the reason just that they are different?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 18 Feb 2017 09:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:101/1487410984393561</guid>
      <description>&lt;p&gt;
@westonruter that's great! Once the issues are resolved that would be awesome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 06:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:100/1487399504351871</guid>
      <description>&lt;p&gt;
@karmatosed it's straightforward to make it into a plugin, as I've done in this gist: &lt;a class="ext-link" href="https://gist.github.com/westonruter/854aba61243ef08a2e3a2a0e721930dc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/westonruter/854aba61243ef08a2e3a2a0e721930dc&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
We could add it as a ZIP here for users to install on their sites, &lt;strong&gt;except&lt;/strong&gt; before we do that it seems that there is an issue with the selected media not appearing in the control once selected. I'm seeing this at least on the widgets admin screen.
&lt;/p&gt;
&lt;p&gt;
@gonom9 Could you continue to iterate on the Gist plugin I made out of your patch? Also, eventually the patch will need to define the scripts and styles inside of &lt;code&gt;script-loader.php&lt;/code&gt; and so the way that the plugin uses &lt;code&gt;wp_default_scripts&lt;/code&gt; and &lt;code&gt;wp_default_styles&lt;/code&gt; for registering is an anticipation of that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39390 (Update to 4.7 broke front-end stylings) updated</title>
      
        <dc:creator>yogaman5020</dc:creator>

      <pubDate>Sat, 18 Feb 2017 03:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39390#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39390#comment:4/1487389296962140</guid>
      <description>&lt;p&gt;
Hi Folks,
&lt;/p&gt;
&lt;p&gt;
I rebuilt the theme that was involved with the problem I first reported.  The issue is now resolved. The theme works fine on WordPress 4.7.2.  You can close out this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:58/1487382801908121</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27404#comment:55" title="Comment 55"&gt;folletto&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The second line of the widget instead of showing the details shows when they were removed, thus giving a simple indication of how old a widget is.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The “used until” is not really something we'd have data for. When a widget is moved to the Inactive Sidebar there is no good way to store the date for when it was removed (this would change with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35669" title="#35669: enhancement: Store widgets in a custom post type instead of options (new)"&gt;#35669&lt;/a&gt;). In the case of previewing a theme switch, it may be possible to obtain the name of the sidebar that the widget was previously assigned to and that may be useful to display in this space.
&lt;/p&gt;
&lt;p&gt;
Another question: Maybe I use widgets more than most, but I often find I have at least dozen inactive widgets on sites. If these always appear above the list of available widgets to add from scratch, would it not be somewhat overbearing to see them all listed out? Should they perhaps be collapsed into an expandable section, that once expands reveals all of the inactive widgets? When collapsed it could indicate a count of the number of inactive widgets you have. I suppose this is similar to what @rramo012 developed, but all of the inactive widgets would be grouped together instead of appearing under their respective widget types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:39:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:57/1487381980941919</guid>
      <description>&lt;p&gt;
In &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39910" title="#39910: enhancement: Customizer: Add ability to drag &amp;amp; drop widgets and menu items (new)"&gt;#39910&lt;/a&gt; it is proposed that available widgets should be able to be dragged over into the sidebar instead of always only appending the widget to the end of the sidebar. If this is 👍🏻 then it would make a lot of sense for restoring inactive widgets to a sidebar: they should also be draggable.
&lt;/p&gt;
&lt;p&gt;
If so, should that be part of implementing @folletto's design? I suppose it wouldn't have much real design impacts other than being able to drag an inactive widget in addition to being able to click on one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:10/1487381871060852</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39256/39256.3.diff" title="Attachment '39256.3.diff' in Ticket #39256"&gt;39256.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39256/39256.3.diff" title="Download"&gt;​&lt;/a&gt; addresses the &lt;strong&gt;second&lt;/strong&gt; issue in the original report (allows updating the date of a draft).
&lt;/p&gt;
&lt;p&gt;
From &lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/wp_update_post#Scheduling_posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/wp_update_post#Scheduling_posts&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you are trying to use &lt;code&gt;wp_update_post()&lt;/code&gt; to schedule an existing draft, it will not work unless you pass &lt;code&gt;$my_post-&amp;gt;edit_date = true&lt;/code&gt;.  WordPress will ignore the &lt;code&gt;post_date&lt;/code&gt; when updating drafts unless &lt;code&gt;edit_date&lt;/code&gt; is true.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I believe this is close to commit-ready.  I plan to commit next week, in particular please give feedback on the approach needed to change the signature and behavior of &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39910 (Customizer: Add ability to drag &amp; drop widgets and menu items) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39910#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39910#comment:1/1487381808786452</guid>
      <description>&lt;p&gt;
@lukecavanagh in other words, you're proposing that you should be able to drag an available widget from the panel over to the sidebar and have it created in the spot that you drop it? This would address the complaint about widgets always being added to the end of the list.
&lt;/p&gt;
&lt;p&gt;
This should also be considered for restoring inactive widgets in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/27404" title="#27404: feature request: Widget Customizer: Allow adding inactive widgets to widget areas (assigned)"&gt;#27404&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:19/1487381734192043</guid>
      <description>&lt;p&gt;
@MatheusGimenez also, I think that &lt;code&gt;absint&lt;/code&gt; shouldn't be used, per &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38203" title="#38203: defect (bug): Remove `absint` on object IDs in `delete_metadata`, etc (new)"&gt;#38203&lt;/a&gt;. So maybe this to ensure it is not a negative value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$page_for_posts = max( 0, (int) get_option( 'page_for_posts', 0 ) );
&lt;/pre&gt;&lt;p&gt;
Additionally, instead of saying “warning” and “advise” the error message would need to be more forceful because saving would actually be blocked if they make the two the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39256.3.diff attached to Ticket #39256</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:35:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39256/39256.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39256/39256.3.diff/1487381706970110</guid>
      <description>&lt;p&gt;
Allow updating the date of a draft post
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:31:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:9/1487381515015294</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39256#comment:5" title="Comment 5"&gt;aduth&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &lt;code&gt;$has_timezone&lt;/code&gt; regular expression could incorrectly match e.g. &lt;code&gt;+99:99&lt;/code&gt; ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am not super worried about this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... and does not match a valid &lt;code&gt;-0500&lt;/code&gt; (omitting &lt;code&gt;:&lt;/code&gt; permitted). More accurate option might be &lt;code&gt;#(Z|[+-]([0-1]\d|2[0-4])(:?[0-5]\d)?)$#&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The regex is based on the &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api.php#L769"&gt;existing regex&lt;/a&gt; in &lt;code&gt;rest_parse_date&lt;/code&gt;.  I'd prefer to preserve the existing behavior for now, and address this in a separate ticket.
&lt;/p&gt;
&lt;p&gt;
Note that REST API date parsing is more strict than ISO8601 in other ways as well:  we require dashes in between year, month, and day, and colons in between hour, minute, and second, whereas the standard does not.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;rest_get_date_with_gmt&lt;/code&gt; had previously been the only function to call &lt;code&gt;rest_parse_date&lt;/code&gt; with a second parameter. Since it no longer does, should we remove that argument altogether?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was hoping to get more feedback on this specific point by now, but we may need to deprecate &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt; and replace it with a new function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:18/1487381117328214</guid>
      <description>&lt;p&gt;
@MatheusGimenez it looks like your patch has additional unrelated media changes?
&lt;/p&gt;
&lt;p&gt;
Also, is it handling the case where the user changes both the &lt;code&gt;page_for_posts&lt;/code&gt; and the &lt;code&gt;page_on_front&lt;/code&gt; in the same session? To handle this case, you should make sure you get the dirty value if it exists for the setting you want to check compare with. For example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;  $page_for_posts = absint( get_option( 'page_for_posts', 0 ) );
&lt;span class="gi"&gt;+ $page_for_posts = $this-&amp;gt;get_setting( 'page_for_posts' )-&amp;gt;post_value( $page_for_posts );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When you pass a value into the &lt;code&gt;post_value&lt;/code&gt; method then it is used as the default if there was no dirty post value (in the current changeset) or it is invalid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39904 (Error message - Non-existent changeset UUID) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:18:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39904#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39904#comment:3/1487380711824990</guid>
      <description>&lt;p&gt;
@IsabelDM Also make sure that your &lt;code&gt;siteurl&lt;/code&gt; and &lt;code&gt;home&lt;/code&gt; options match, or else use the workaround plugin &lt;a href="https://core.trac.wordpress.org/ticket/39128#comment:43"&gt;mentioned&lt;/a&gt; on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39128" title="#39128: defect (bug): Customize: Preview fails to load when domain mapping in use ... (assigned)"&gt;#39128&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:32/1487380482199403</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:31/1487380465769266</guid>
      <description>&lt;p&gt;
The &lt;code&gt;dropdown-pages&lt;/code&gt; control type actually _should_ be included among the types that have content template, and the list of pages that appears in the &lt;code&gt;select&lt;/code&gt; field should be fetched via the REST API and populate it dynamically. See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39908" title="#39908: enhancement: Make the page and category widget exclusions use a drop down not ID (new)"&gt;#39908&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39908 (Make the page and category widget exclusions use a drop down not ID) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39908#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39908#comment:3/1487380368022673</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While the exclusion &lt;em&gt;could&lt;/em&gt; be implemented via a multi-select field (&lt;code&gt;select[multiple]&lt;/code&gt;) if there are hundreds or thousands of pages then this doesn't scale. Nevertheless, the same problem exists for the &lt;code&gt;dropdown-pages&lt;/code&gt; control in core currently. So it would be better than nothing! (And it could surely be implemented before we can get an accessible equivalent to Select2 into core.)
&lt;/p&gt;
&lt;p&gt;
The list of pages populating the select should be sourced from the REST API once the widget control is expanded as opposed to being exported with the control up front when the customizer is loaded. The same should be done for the &lt;code&gt;dropdown-pages&lt;/code&gt; widget. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30738" title="#30738: task (blessed): JS content templates for base WP_Customize_Control (closed: fixed)"&gt;#30738&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:4/1487379840831163</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@melchoyce Question: How would a user abandon the changes? How would they clear out the draft? Should there be another option in the dropdown to revert/reset/trash the changeset?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 18 Feb 2017 01:03:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:3/1487379827279453</guid>
      <description>&lt;p&gt;
In terms of how to implement drafting as proposed here technically, this is what I have in mind:
&lt;/p&gt;
&lt;p&gt;
After you hit Save Draft, and then leave the customizer, if you come back to click Customize and go straight to &lt;code&gt;customize.php&lt;/code&gt; you would get the previous drafted changes restored. Currently each time a user starts customization a new changeset is spun up into existence with a unique UUID. So potentially instead of creating a new UUID, we could instead first query the changesets to see if there is a draft and instead use it instead. This behavior should be customizable by plugins (e.g. Customize Snapshots) so that concurrent non-linear drafts of changes could be made. But in core, only one draft would normally exist at a time, for the initial iteration.
&lt;/p&gt;
&lt;p&gt;
When you start a new customization session from scratch, as you make changes those changes currently get autosaved into the &lt;code&gt;auto-draft&lt;/code&gt; changeset periodically so that if you navigate away from the customizer you can get the changes restored. (Also this allows you to share the URL with another user so they can preview and make additional changes on top of what you have done.) Still, when you try to leave the customizer it still presents you with the AYS dialog since there is no UI to return to that changeset, which is what introducing a Draft button will address, as will restoring the last drafted changeset to the customizer the next time someone starts a session.
&lt;/p&gt;
&lt;p&gt;
The moment that someone hits Save Draft this should cause the AYS dialog to be removed and it should stop the autosave behavior which writes new changes directly on top of the changeset, since it is now a &lt;code&gt;draft&lt;/code&gt; and not an &lt;code&gt;auto-draft&lt;/code&gt;. Subsequent changes should be autosaved into &lt;em&gt;a new autosave revision&lt;/em&gt; of the changeset instead of writing onto the changeset post itself. A subsequent change should also cause the &lt;code&gt;onbeforeunload&lt;/code&gt; AYS dialog to be restored, until which the user hits Save Draft again which should result in the changes being written on top of the changeset post directly (and if &lt;code&gt;revisions&lt;/code&gt; support is enabled for &lt;code&gt;customize_changeset&lt;/code&gt; posts, this should cause a new normal revision to be made).
&lt;/p&gt;
&lt;p&gt;
If the user has made changes to a Draft and leaves the customizer ignoring the AYS dialog, a user could be notified that there are autosave changes that &lt;em&gt;are&lt;/em&gt; saved in the changeset's autosave revision (as noted in the ticket description) which could then be restored be merging them on top of the saved changeset (and then either reloading the customizer or dynamically populating up the customizer settings in JS, assuming that the UI will dynamically respond to create corresponding sections and controls in response to settings being spun into existence), as noted above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36130 (Custom Taxonomy Edit Redirected to Homepage) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 18 Feb 2017 00:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36130#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36130#comment:2/1487378436256550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 18 Feb 2017 00:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:10/1487377847283140</guid>
      <description>&lt;p&gt;
@adamsilverstein what about the unit tests for this change?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:99/1487370165269650</guid>
      <description>&lt;p&gt;
@gonom9 how easy is it to get this bundled to run some user tests? Ideally if it could be in a plugin format (no clue if asking impossible here). @melchoyce also looping you in for when you feel it's ready for that, totally only want to test when it's worth doing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:2/1487370037736609</guid>
      <description>&lt;p&gt;
First up, really like that this is happening. It's something that will have a lot of user impact and benefit.
&lt;/p&gt;
&lt;p&gt;
I think it could be good to prototype both ways and explore them as they are different enough for that.
&lt;/p&gt;
&lt;p&gt;
I do wonder about the non-popover approach though. I'm possibly feeling it's a little not as natural as the popover - it feels less of an existing pattern in WordPress. In saying that, it's not a bad idea to explore new things.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39908 (Make the page and category widget exclusions use a drop down not ID) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39908#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39908#comment:2/1487370020552668</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This could be made more user friendly by using a drop down.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
...especially since IDs aren't usually exposed anywhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:6/1487369925426525</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Most recent patch uses the approach [hammered out in this week's Media meeting (&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487364216001228"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-media/p1487364216001228&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Borrowed some code from &lt;code&gt;wp_save_image()&lt;/code&gt;. For the minor release, there will be some code duplication. I am going to whip up a different patch moving the repeated code into a function for the next major release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39875.diff attached to Ticket #39875</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:14:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875.diff/1487369697120853</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39672 (REST API: Backbone URLs don't work correctly without pretty permalinks) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39672#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39672#comment:2/1487368942276061</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@rmccue can you verify this is an issue, in my testing the client works correctly without pretty permalinks. Any steps to reproduce?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29660 (Functions in wp_includes/query.php assume non-null return value from ...) updated</title>
      
        <dc:creator>sterlo</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29660#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29660#comment:24/1487368886422034</guid>
      <description>&lt;p&gt;
Confirming this is a thing.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice:  Trying to get property of non-object in /var/www/html/wp-includes/class-wp-query.php on line 3516
Notice:  Trying to get property of non-object in /var/www/html/wp-includes/class-wp-query.php on line 3518
Notice:  Trying to get property of non-object in /var/www/html/wp-includes/class-wp-query.php on line 3520
&lt;/pre&gt;&lt;p&gt;
How I'm getting it to generate:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'pre_get_posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;\WP_Query&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_tax&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_category&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_category&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'blog'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'orderby'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ASC'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
That's rather simple, shouldn't be running into trouble with something like this.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Is it a taxonomy? Yes.
&lt;/li&gt;&lt;li&gt;Is it a category? Yes.
&lt;/li&gt;&lt;li&gt;Is it THIS (blog) Category? *project explodes*.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Would be nice to fix this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39612 ((Resolve) Error due to Backbone.History being started again) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:59:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39612#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39612#comment:11/1487368778036860</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40076" title="JavaScript: when starting Backbone history, stop if previously ..."&gt;40076&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
JavaScript: when starting Backbone history, stop if previously started.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prevent a potential error condition if Backbone history is started by a plugin or theme before core tries to start it. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props tfrommen.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39612" title="#39612: enhancement: (Resolve) Error due to Backbone.History being started again (closed: fixed)"&gt;#39612&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40076]: JavaScript: when starting Backbone history, stop if previously ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:59:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40076/1487368777555055</guid>
      <description>&lt;p&gt;
JavaScript: when starting Backbone history, stop if previously started.
&lt;/p&gt;
&lt;p&gt;
Prevent a potential error condition if Backbone history is started by a plugin or theme before core tries to start it.
&lt;/p&gt;
&lt;p&gt;
Props tfrommen.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39612" title="#39612: enhancement: (Resolve) Error due to Backbone.History being started again (closed: fixed)"&gt;#39612&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:104/1487368572462513</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:101" title="Comment 101"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If an upload doesn't match the &lt;code&gt;$mime_to_ext&lt;/code&gt; list, it is outside the purview of that particular challenge and should be passed down the chain to &lt;code&gt;finfo&lt;/code&gt; and eventually &lt;code&gt;upload_mimes&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tend to agree that we should revalidate anything that misses the &lt;code&gt;wp_get_image_mimes()&lt;/code&gt; check, rather than blocking them at that point. I've thought about combining all validation for all mimes into a single place, rather than different paths for images vs other files, but my early testing showed that doing so would increase memory/time for image uploads. Still, might be worth attempting, but in the mean time using the &lt;code&gt;finfo_file()&lt;/code&gt; check as a fallback for any file that isn't validated at that point is probably the best option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39559 (REST API JavaScript client: ensure base initialize method called when ...) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39559#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39559#comment:4/1487367617431667</guid>
      <description>fixed: &lt;p&gt;
The one line fix in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39559/39559.diff" title="Attachment '39559.diff' in Ticket #39559"&gt;39559.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39559/39559.diff" title="Download"&gt;​&lt;/a&gt; was also included in the fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;, which was merged in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;[40074]&lt;/a&gt;, resolving this issue. Closing.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:36:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:5/1487367380835308</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39382 (Skipping term cache cleaning when cache invalidation is suspended) updated</title>
      
        <dc:creator>zachop</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39382#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39382#comment:3/1487367201367090</guid>
      <description>&lt;p&gt;
Hi @boonebgorges,
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When you refer to a "term cache" that is "persistent", I assume you mean the term hierarchy that WP stores in wp_options. Is that correct?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that is correct.
&lt;/p&gt;
&lt;p&gt;
By "persistent" I refer to any data stored across requests (e.g. in the database, or a dedicated backend such as Memcache), in a way which is transparent to the developer (as opposed to options or transients, for example, where the storage is explicitly requested for).
&lt;/p&gt;
&lt;p&gt;
I agree with you that a way to clear all cached data would be an elegant solution, while at the same time keeping the caching internals invisible to the developer. A wrapper for that purpose sounds good to me.
&lt;/p&gt;
&lt;p&gt;
I also believe that it is equally important for the documentation of &lt;code&gt;wp_cache_flush()&lt;/code&gt; to be updated as soon as possible, in order to state clearly that not all data is actually flushed. The way the various caches now work, it is possible (e.g. during imports with cache addition/invalidation suspended) to be left with stale data in the database, without means of clearing it - since &lt;code&gt;wp_cache_flush()&lt;/code&gt; won't do so. This, as you pointed out, cancels the invisibility of the caching operations to the developer.
&lt;/p&gt;
&lt;p&gt;
Please let me know if there's any way that I could contribute to this issue. I would be more than happy to do so, although I would need some guidance on how to start :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39774 (php 7.1 media uploader bug) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39774#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39774#comment:10/1487366632682900</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40075" title="Media: In `wp_unique_filename()`, use explicit type casting when ..."&gt;40075&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: In &lt;code&gt;wp_unique_filename()&lt;/code&gt;, use explicit type casting when incrementing &lt;code&gt;$number&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This prevents the "non-numeric value encountered" warning in PHP 7.1, caused by trying to increment an empty string on the first loop iteration.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props drrobotnik for initial patch.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40039" title="Media: In `wp_unique_filename()`, use explicit type casting when ..."&gt;[40039]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39774" title="#39774: defect (bug): php 7.1 media uploader bug (closed: fixed)"&gt;#39774&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40075]: Media: In `wp_unique_filename()`, use explicit type casting when ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40075/1487366632193396</guid>
      <description>&lt;p&gt;
Media: In &lt;code&gt;wp_unique_filename()&lt;/code&gt;, use explicit type casting when incrementing &lt;code&gt;$number&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This prevents the "non-numeric value encountered" warning in PHP 7.1, caused by trying to increment an empty string on the first loop iteration.
&lt;/p&gt;
&lt;p&gt;
Props drrobotnik for initial patch.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40039" title="Media: In `wp_unique_filename()`, use explicit type casting when ..."&gt;[40039]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39774" title="#39774: defect (bug): php 7.1 media uploader bug (closed: fixed)"&gt;#39774&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>39875.patch attached to Ticket #39875</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:14:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875.patch/1487366064908981</guid>
      <description>&lt;p&gt;
Special case pdf preview to avoid overwriting exising JPEGs.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) reopened</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:9/1487364959359570</guid>
      <description>&lt;p&gt;
Reopening for 4.7.3 consideration.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:8/1487364837539645</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;40074&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: JavaScript client - improve route discovery for custom namespaces.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fix parsing of custom namespace routes. Transform class names, removing dashes and capitalizing each word/route part so a route path of &lt;code&gt;widgets/recent-posts&lt;/code&gt; becomes a collection with the name &lt;code&gt;WidgetsRecentPosts&lt;/code&gt;. Correct parent route part when routes are longer than expected, reversing parse direction.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter, jazbek.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40074]: REST API: JavaScript client - improve route discovery for custom ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40074/1487364837047724</guid>
      <description>&lt;p&gt;
REST API: JavaScript client - improve route discovery for custom namespaces.
&lt;/p&gt;
&lt;p&gt;
Fix parsing of custom namespace routes. Transform class names, removing dashes and capitalizing each word/route part so a route path of &lt;code&gt;widgets/recent-posts&lt;/code&gt; becomes a collection with the name &lt;code&gt;WidgetsRecentPosts&lt;/code&gt;. Correct parent route part when routes are longer than expected, reversing parse direction.
&lt;/p&gt;
&lt;p&gt;
Props westonruter, jazbek.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39618 (Insert PDF Thumbnail into Editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39618#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39618#comment:7/1487364728002420</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487364725001251"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36130 (Custom Taxonomy Edit Redirected to Homepage) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36130#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36130#comment:1/1487364470533818</guid>
      <description>&lt;p&gt;
Hi @espreson,
&lt;/p&gt;
&lt;p&gt;
If this issue is still occurring, could you provide code samples or other instructions for replicating it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:4/1487364217605903</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487364215001227"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Customizer Wide.png attached to Ticket #32296</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:42:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32296/Customizer%20Wide.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32296/Customizer%20Wide.png/1487364171065311</guid>
      <description>&lt;p&gt;
Customizer Wide 1920 x 1080
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:34:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:7/1487363682057208</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:6/1487363660368883</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39561/39561.2.diff" title="Attachment '39561.2.diff' in Ticket #39561"&gt;39561.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39561/39561.2.diff" title="Download"&gt;​&lt;/a&gt; is a slight cleanup of the code and doc blocks. This code got some testing by the original reporter and others via the plugin, this is ready to commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39561.2.diff attached to Ticket #39561</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:32:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39561/39561.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39561/39561.2.diff/1487363526668322</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:26:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:31/1487363216385496</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487363214001202"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:103/1487363199955287</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487363197001200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:24:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:20/1487363059860232</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487363057001196"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:31/1487362879118759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487362876001186"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39774 (php 7.1 media uploader bug) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39774#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39774#comment:9/1487362780088953</guid>
      <description>&lt;p&gt;
I like the idea of fixing this in 4.7.3.  Patch/commit looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:3/1487362594336825</guid>
      <description>&lt;p&gt;
Temporary fix for all POST type ajax actions:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;wp_doing_ajax&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_ajax_'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'check_session_token_ajax'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_ajax_nopriv_'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'check_session_token_ajax'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;check_session_token_ajax&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_user_logged_in&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;wp_get_session_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;wp_set_current_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;wp_clear_auth_cookie&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39774 (php 7.1 media uploader bug) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39774#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39774#comment:8/1487362526786171</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487362523001174"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:15:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:4/1487362511430537</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding to 4.7.x milestone to bring to the forefront for discussion.
&lt;/p&gt;
&lt;p&gt;
If it looks like this is either not a thing that will change, or the change is too big for a minor, we can always re-milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:3/1487362386476935</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487362384001166"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:30/1487362309305064</guid>
      <description>&lt;p&gt;
I identified some &lt;code&gt;.tmp&lt;/code&gt; files being left over while reviewing, and tracked it down.
&lt;/p&gt;
&lt;p&gt;
Have a question -- @sanchothefat, do you think it's necessary to test all 8 rotations you've uploaded, or to help keep tests lean, do you think it's sufficient to pick one rotation, and use that?
&lt;/p&gt;
&lt;p&gt;
I'm tending towards the latter, but wanted to check with you before moving forward in that direction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Customizer Add Widget.png attached to Ticket #39910</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:38:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39910/Customizer%20Add%20Widget.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39910/Customizer%20Add%20Widget.png/1487360316251706</guid>
      <description>&lt;p&gt;
Customizer Add Widget
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39910 (Customizer: Add ability to drag &amp; drop widgets and menu items) created</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39910/1487360299522702</guid>
      <description>&lt;p&gt;
Currently when you add a new widget in the Customizer, the available widgets will show, but you can not drag and drop any of the those widgets, rather you have to select the widget then, that widget will be added in. Drag and drop does work on widgets that already exist or where just added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39382 (Skipping term cache cleaning when cache invalidation is suspended) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39382#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39382#comment:2/1487360138323621</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @zachop - Sorry for the delayed response - I missed this ticket when it first came in. Thanks for the detailed report, and welcome to WP Trac!
&lt;/p&gt;
&lt;p&gt;
When you refer to a "term cache" that is "persistent", I assume you mean the term hierarchy that WP stores in &lt;code&gt;wp_options&lt;/code&gt;. Is that correct? If so, I disagree that it should be treated differently from the "object cache" with respect to suspended invalidation. For one thing, the &lt;code&gt;{$taxonomy}_hierarchy&lt;/code&gt; and &lt;code&gt;{$taxonomy}_children&lt;/code&gt; caches, like term caches fetched by &lt;code&gt;wp_cache_get()&lt;/code&gt;, are not meant to be directly accessed by the developer. From the point of view of the user who's calling &lt;code&gt;get_terms()&lt;/code&gt; or &lt;code&gt;get_term()&lt;/code&gt; or whatever, the cache implementation is totally invisible. Moreover, the distinction between "persistent" caches and the object cache largely disappears when running a persistent object cache backend like Memcache. For these reasons, I think it's correct that &lt;code&gt;wp_suspend_cache_invalidation()&lt;/code&gt; - which *is* developer-facing - would affect both types of caching mechanisms in the same way.
&lt;/p&gt;
&lt;p&gt;
For these reasons, I agree with you that it's confusing for a function like &lt;code&gt;wp_cache_flush()&lt;/code&gt; not to clear *all* caches. If the distinction between &lt;code&gt;wp_options&lt;/code&gt;-based caching and proper object caching is supposed to be invisible to the developer, then &lt;code&gt;wp_cache_flush()&lt;/code&gt; ought to clear both kinds of cache. I think it's worth investigating whether we can come up with a comprehensive list of places in WP where we use the database as a poor-man's-cache, and then to think about whether we can come up with a way of clearing all of these caches with a single method. (This might require something like an internal registry of database-cache keys.) It's probably impractical to modify &lt;code&gt;wp_cache_flush()&lt;/code&gt; to handle this kind of invalidation, because cache drop-ins redefine this function, and we don't have control over them. But we could probably have a new wrapper - maybe something like &lt;code&gt;wp_flush_all_caches()&lt;/code&gt; - that would wrap &lt;code&gt;wp_cache_flush()&lt;/code&gt; and all db caches.
&lt;/p&gt;
&lt;p&gt;
What do you (and others) think about this idea?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:44/1487359796717984</guid>
      <description>&lt;p&gt;
Hi Andrea,
&lt;/p&gt;
&lt;p&gt;
Thank you for the links to some existing viewpoints in favour of no special treatment. It may have been more efficient to summarise the arguments and support those arguments with links. For the sake of brevity, I'll take one of the more recent posts and respond to each of the writer's arguments in turn.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
78.4% of respondents were very comfortable or somewhat comfortable with letting a web site know they are using a screen reader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In my opinion, it should have been the other way around.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So those opposed to special treatment for screen reader users are more anxious about the issue than the people on behalf of whom they are advocating. I salute Marco's frankness.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It would take away the one place where we as blind people can be relatively undetected without our white cane or guide dog screaming at everybody around us that we’re blind or visually impaired, and therefore giving others a chance to treat us like true equals.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That a screen reader user interacted with a website comment section or even an admin interface via screen reader is not then printed beside their name on the author's bio or in the comments section. So for everyone except the screen reader's browser, that person is an equal. While it would be diabolical to print &lt;code&gt;submitted via screen reader&lt;/code&gt; beside every comment of screen reader users, that is not what we are talking about. We are talking about &lt;strong&gt;giving screen reader users an enhanced interface for their interaction with web publishing&lt;/strong&gt;. It's perfectly possible for screen reader users to give a different user agent and get a standard interface at any point.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Second, this is just a modern form of the text-only alternative web sites of the 1990s when screen readers were still learning to stumble around graphical user interfaces, let alone the web, and those text-only alternatives were a necessary evil to get anything done in most cases. In the early 2000s, as screen readers became better and browsers more modern, those faded away.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually those text version only content rich version of websites are back again. This time they are called AMP. We as web developers and publishers have failed so badly by overbuilding, over monetising and over tracking our and our client websites that even Google has given up on content parsing/separation and is insisting on a separate version with the content.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The current worst of the bad examples is the “accessible alternative” of the Audible.com web site. For one, its feature set is limited, and second, it constantly throws you back to the standard web presence, when doing searches, for example, and other totally screwed user experience snafoos. Or is there anyone out there who is actually wanting to tell me they enjoy this and find it even remotely useful? And to add insult to injury, the stuff that is currently a bit tricky on the standard web site can easily be fixed by some WAI-ARIA markup and some consistent keyboard navigation JavaScript.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In our case, we are not talking about building out the public facing side of the website with enhanced interface and tools. We are talking about the admin and content creation side. It's pretty clear that the ideal content creation tool for a sighted person will look and work differently than the ideal content creation tool for a visually impaired person. Each are using different ways to perceive and manipulate that content.
&lt;/p&gt;
&lt;p&gt;
To say otherwise is to suggest that when using a screwdriver one use a hammer or the inverse. Or that everyone playing a racket sport should use a tennis rackets, regardless if you're hitting a tennis ball, a badminton birdie or a squash ball.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And the old arguments still apply: Alternative versions of web sites tend to get out of date, no longer being maintained, and creating and maintaining them is more expensive than properly applying markup and learning the web accessibility skill properly once.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, we are talking about the admin side and talking about adding a full-fledged and globally rolled out and maintained enhanced content editing interface for screen readers. I see far less chance of those users getting short shrift in a custom interface, globally available across WordPress than if we compromise the visual content editing tool on their behalf. That seems the worst of both worlds:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;a second rate code editor for sighted people
&lt;/li&gt;&lt;li&gt;no enhanced code editor for the visually impaired
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Everyone should get the best tool for their work. Heck, over on the new editor thread we are dealing with issues of writing vs layout. There probably need to be separate editing interfaces for each of those activities or both modes will have to accept a seriously compromised experience. This is &lt;strong&gt;not&lt;/strong&gt; about inconsideration to people with disabilities but about making their  &lt;strong&gt;lives better&lt;/strong&gt; and their &lt;strong&gt;work easier&lt;/strong&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Third, there are &lt;strong&gt;security implications&lt;/strong&gt;. Ever since I started working for Mozilla in 2007, there have been repetitive inquiries about exposing whether a screen reader is running with the browser, and if so, also granting access to the accessibility APIs to content JavaScript to manipulate what screen readers read to the user. Either of these would give web sites knowledge or exposure of operating system bits that, in every other case, would be considered unacceptable. You wouldn’t want to give web site JavaScript access to your file system, which type of keyboard you’re using, what brand your processor is, or if your machine still has a floppy drive or not, would you? Accessibility APIs hook into all kinds of channels to expose all the needed information to assistive technologies. Granting a web site access to these APIs would open a level of access to a computer that is just unacceptable, and unnecessary, for a web site to have.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a more delicate question. We must find a way to provide a secure experience for the code editor for both screen readers and non-screen readers. The security argument is equally relevant with a single code editor or multiple code editors (sighted and screen reader).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Aural style sheets never gained acceptance because the expected gain was just not there, and the desire to have equal access to the same content as everybody else was much stronger. More recent requests all are just the same thing in different disguise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again we are not talking about the front end of a website where a screen reader user would have reason to fear his or her needs being neglected. We are talking about a controlled admin interface where the screen reader user will be an equally privileged visitor with a uniform interface across websites.
&lt;/p&gt;
&lt;p&gt;
Responsive design while it envisions a single code base for a website indeed includes device specific hacks within that single interface (bigger buttons for touch devices for example). Enhancing a responsive interface to create a better flow for screen reader users makes a certain amount of sense but again that is a front end issue and not what we are talking about here which is back end publishing tools.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[I hope] W3C will provide enough incentive for web authors not to abuse the querying mechanisms described, and that this will only be used by very well-informed sites where the developers provide actual value. The privacy examples in that document look at least promising. Let’s hope it all holds up until this becomes a standard one day. I, for one, will strongly discourage web developers who ask me from using this unless I am personally convinced they know what they’re doing. And yes, like with Location sharing, I will personally be very restrictive about allowing sites access to that particular information if I’m asked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, we are talking about a content creation tool in the admin area of a website. As WordPress core developers, we could do much to discourage tracking of which users are using what (not adding any hooks for tracking for example, requiring modifying core to track which as we all know is a huge maintenance burden and something most casually evil publishers will be either technically incapable or too lazy to implement).
&lt;/p&gt;
&lt;p&gt;
For the screen reader users who are truly wary of tracking we could still leave the plain text option available which works equally well or poorly for non-screen reader users and screen reader users.
&lt;/p&gt;
&lt;p&gt;
I respect and agree with a principle of equality for all people regardless of sensory perception or any disability. Yet I cannot not buy into the argument of creating a worst of two worlds solutions for both screen reader users and non-screen reader users to make sure that neither side has a tool best suited for his/her use. On the contrary I see an opportunity for WordPress to &lt;strong&gt;forge a bold path forward&lt;/strong&gt; with &lt;strong&gt;improved tools for screen reader users&lt;/strong&gt; baked into the &lt;strong&gt;core editing product&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
As there isn't a single best way (due to browser capabilities, specifically the best way of handling &lt;code&gt;contentEditable&lt;/code&gt;) to build a code editor for screen reader users and non-screen reader users, we should also be talking here about what the best code editor for screen reader users is and not just about what the best code editor for non-screen reader users is. And after we do, we should figure how to integrate each code editor equally and seamlessly.
&lt;/p&gt;
&lt;p&gt;
That is what we as a community can do to better the editing experience and publishing opportunities for screen reader users.
&lt;/p&gt;
&lt;p&gt;
Anything else means starting from scratch, building from the ground up, losing a year or two of development and still in the end having to divide the capabilities even if it's nominally under a single code umbrella instead of two. Where possible stand on the shoulders of giants. In this case, two are at our disposition for non-screen reader users: CodeMirror and Ace Code Editor.
&lt;/p&gt;
&lt;p&gt;
Who can tell us which are the &lt;strong&gt;giants of code editing in the screen reader world&lt;/strong&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39908 (Make the page and category widget exclusions use a drop down not ID) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39908#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39908#comment:1/1487359449325610</guid>
      <description>&lt;p&gt;
@karmatosed coincidentally a prototype for this was implemented in &lt;a class="ext-link" href="https://wordpress.org/plugins/js-widgets/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;JS Widgets&lt;/a&gt; when &lt;a class="ext-link" href="https://wordpress.org/plugins/customize-object-selector/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Object Selector&lt;/a&gt; is also active. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39908/pages-widget-in-js-widgets-and-customize-object-selector.mov" title="Attachment 'pages-widget-in-js-widgets-and-customize-object-selector.mov' in Ticket #39908"&gt;pages-widget-in-js-widgets-and-customize-object-selector.mov&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39908/pages-widget-in-js-widgets-and-customize-object-selector.mov" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33148 (Categories are missing in admin category list when child category ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33148#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33148#comment:8/1487359361251972</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I guess I'm not totally opposed to making a change in the way we display terms in the admin in order to account for this sort of data-integrity issue, as long as the changes are fairly lightweight and targeted. Showing orphaned terms but highlighting them in red seems like a good first step. It's probably also a good idea to show them only to users who have the taxonomy's &lt;code&gt;edit_terms&lt;/code&gt; cap, since only these users will be able to fix the problem. We should only be doing this in the admin list table, so a modification like what's suggested in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33148/taxonomy.diff" title="Attachment 'taxonomy.diff' in Ticket #33148"&gt;taxonomy.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33148/taxonomy.diff" title="Download"&gt;​&lt;/a&gt; is probably too broad.
&lt;/p&gt;
&lt;p&gt;
We definitely should *not* do any automatic modification of content in the database. When a term is orphaned, there are multiple ways to "solve" the the problem, and WP can't know which one the admin wants.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>pages-widget-in-js-widgets-and-customize-object-selector.mov attached to Ticket #39908</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:22:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39908/pages-widget-in-js-widgets-and-customize-object-selector.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39908/pages-widget-in-js-widgets-and-customize-object-selector.mov/1487359349582974</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39909 (Make title behaviours consistent across all widgets on first load) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:17:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39909/1487359040870331</guid>
      <description>&lt;p&gt;
On first load the word 'Archives' outputs as the Widget title but it doesn't appear in the input field. If there is a default text, perhaps it should show. This could also assist by users making the connection with the words and where they can edit.
&lt;/p&gt;
&lt;p&gt;
For example:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/EK1v0wxGX1.png"&gt;&lt;img width="50%" alt="https://cldup.com/EK1v0wxGX1.png" title="https://cldup.com/EK1v0wxGX1.png" crossorigin="anonymous" src="https://cldup.com/EK1v0wxGX1.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Another example, the Calendar widget has no title and compared to the examples above this feels weird. What I think should happen is that the same title behaviour occurs for all widgets when you first load them.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39908 (Make the page and category widget exclusions use a drop down not ID) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39908/1487358880566466</guid>
      <description>&lt;p&gt;
Currently excluding in this widget involves you getting and ID and then adding it. This could be made more user friendly by using a drop down.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/YVbvUK5pLK.png"&gt;&lt;img width="50%" alt="https://cldup.com/YVbvUK5pLK.png" title="https://cldup.com/YVbvUK5pLK.png" crossorigin="anonymous" src="https://cldup.com/YVbvUK5pLK.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39907 (Add "Remove all widgets" button for themes with multiple widget areas) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39907/1487358268088233</guid>
      <description>&lt;p&gt;
I was loading giving one of my sites a new theme as a New Year treat. It only seemed fitting to put on Twenty Sixteen. As this was a simple site, I wanted the single column. Unfortunately, loading up the theme brought a few issues as I suddenly found a lot of widgets I didn't want. For example the footer areas, they were filled with defaults I didn't want. Going in and removing each one took several steps as there were multiples.
&lt;/p&gt;
&lt;p&gt;
Whether you want defaults or not may be something the theme can decide, but offering a 'remove all widgets' button I think would be easy enough to add into the Customizer and a great enhancement for the minimalists.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39681 (Add RGBA to Customizer color picker) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39681#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39681#comment:1/1487357490499909</guid>
      <description>&lt;p&gt;
Based on reviewing the contributions to that GitHub issue, this seems like it might be the best option:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/BraadMartin/components/tree/master/customizer/alpha-color-picker"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/BraadMartin/components/tree/master/customizer/alpha-color-picker&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://braadmartin.com/alpha-color-picker-control-for-the-wordpress-customizer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://braadmartin.com/alpha-color-picker-control-for-the-wordpress-customizer/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Can someone do a code and accessibility review?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33148 (Categories are missing in admin category list when child category ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33148#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33148#comment:7/1487356825142918</guid>
      <description>&lt;p&gt;
I too am unable to replicate this bug through the normal routes for deleting terms.
&lt;/p&gt;
&lt;p&gt;
I'm sympathetic to the bad user experience that results when a term is orphaned, especially because the children of the orphaned term disappear from the list table, too. But because there doesn't seem to be an issue in core, there are ways to restore the term's parent (like the fix described in the original SO post), and there doesn't seem to be a lot of traction with figuring out how the list table would support this case, perhaps this issue could be closed for now in favor of encouraging developers to use the core deletion functions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:7/1487356696119290</guid>
      <description>&lt;p&gt;
@Kelderic
&lt;/p&gt;
&lt;p&gt;
I am all for making it as simple and common sense as possible for end users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39692 (Fix missing assignment of menus on theme switch) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39692#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39692#comment:10/1487356350518016</guid>
      <description>&lt;p&gt;
Hey @jonathanbardo, I see you've been assigned to this ticket, along with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;. Any idea when you'll have a chance to start working on some patches?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39906 (Rendering error message after update to 4.7.2) updated</title>
      
        <dc:creator>katebologna22</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39906#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39906#comment:3/1487356231915576</guid>
      <description>&lt;p&gt;
YES!!!!!!
You should post this information on the other chains in support for Hostgator folks like me.
PHP configuration to 7.0!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:26:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:3/1487356017884280</guid>
      <description>&lt;p&gt;
Also discovered another scenario in my testing. PDF files that were uploaded before 4.7 do not have image previews until an image regeneration script is run, or &lt;code&gt;wp media regenerate&lt;/code&gt; in WP-CLI.
&lt;/p&gt;
&lt;p&gt;
When one of those scripts are run, the JPG file with the same name is also overwritten.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Upload PDF file.
&lt;/li&gt;&lt;li&gt;Delete all JPG image previews for that PDF from uploads.
&lt;/li&gt;&lt;li&gt;Upload a JPG file with the same name.
&lt;/li&gt;&lt;li&gt;Run &lt;code&gt;wp media regenerate --yes&lt;/code&gt; in WP-CLI.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23148 (Add hook in wp_ajax_save_attachment for additional attachment fields) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:12:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23148#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23148#comment:23/1487355177026094</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pepe. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487355174001132"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:2/1487355157459429</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487355155001130"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39906 (Rendering error message after update to 4.7.2) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:08:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39906#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39906#comment:2/1487354927666032</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39906 (Rendering error message after update to 4.7.2) closed</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Fri, 17 Feb 2017 17:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39906#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39906#comment:1/1487354396984716</guid>
      <description>worksforme: &lt;p&gt;
Sadly this is not an issue with core WP so much as your system. Your version of PHP isn't doing things right.
&lt;/p&gt;
&lt;p&gt;
I was able to figure out that this error is COMMON for your host. You should upgrade PHP (I recommend 7.0) via cPanel (go to your cPanel, look for "php configuration" and change it there).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39906 (Rendering error message after update to 4.7.2) created</title>
      
        <dc:creator>katebologna22</dc:creator>

      <pubDate>Fri, 17 Feb 2017 17:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39906/1487354158673552</guid>
      <description>&lt;p&gt;
My websites that automatically update to 4.7.2 render the following error message when I attempt to update themes and plugins.
Update Failed: Download failed. cURL error 77: Problem with the SSL CA cert (path? access rights?)
&lt;/p&gt;
&lt;p&gt;
Hostgator offered no help on their end and said it was a site development issue not a Hosting issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39902 (wordpress-tests-lib : factory-&gt;post-&gt;create_object not working on ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 17 Feb 2017 17:49:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39902#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39902#comment:1/1487353760249942</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @ilhamum.
&lt;/p&gt;
&lt;p&gt;
Can you post the exact code you're using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>seancjones</dc:creator>

      <pubDate>Fri, 17 Feb 2017 17:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:33/1487351207533580</guid>
      <description>&lt;p&gt;
I think this is an important issue to resolve. As of now, Google Page Speed Insights failing for a lot of WordPress installs can almost exclusively be blamed on render-blocking JavaScript. Fixing that increases speed by wide margins.
&lt;/p&gt;
&lt;p&gt;
Plugin developers should have a way of deferring page loads. There are clear pitfalls to avoid - like people's websites breaking.
&lt;/p&gt;
&lt;p&gt;
I'm going to play devil's advocate and argue why a filter might be better.
&lt;/p&gt;
&lt;p&gt;
A filter allows a user with a code sample to defer scripts, or remove scripts if they appear to break their current setup. Plugin developers can send an array of script handles to defer via a plugin, rather than rewrite their code with a new parameter.
&lt;/p&gt;
&lt;p&gt;
If a user wanted to disable all deferring:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter ( 'wp_defer_scripts', function($wp_defer) {
  return array();
}, 900, 2 );
add_filter ( 'wp_async_scripts', function($wp_async) {
  return array();
}, 900, 2 );
&lt;/pre&gt;&lt;p&gt;
For someone to enable all hooks:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter ( 'wp_async_scripts', function($wp_async) {
    global $wp_scripts;
    return $wp_scripts-&amp;gt;queue;
} );
&lt;/pre&gt;&lt;p&gt;
This would also make it far easier for plugin developers to patch their plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21492.3.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 16:43:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.3.diff/1487349796327132</guid>
      <description>&lt;p&gt;
change (int) to absint() to convert values
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39905 (Alternative function for get_terms not documented yet) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 16:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39905#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39905#comment:2/1487347407886534</guid>
      <description>invalid: &lt;p&gt;
Hi @subrataemfluence, thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_terms()&lt;/code&gt; itself is not deprecated, only its second argument is: &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/taxonomy.php?marks=1078-1080#L1073"&gt;tags/4.7.2/src/wp-includes/taxonomy.php?marks=1078-1080#L1073&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.7.2/src/wp-includes/taxonomy.php#L1073" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39905 (Alternative function for get_terms not documented yet) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39905#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39905#comment:1/1487347100922891</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot from 2017-02-17 21:27:02.png attached to Ticket #39905</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:57:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39905/Screenshot%20from%202017-02-17%2021%3A27%3A02.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39905/Screenshot%20from%202017-02-17%2021%3A27%3A02.png/1487347054570883</guid>
      <description>&lt;p&gt;
Tooltip showing deprecated
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39905 (Alternative function for get_terms not documented yet) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39905/1487346940158779</guid>
      <description>&lt;p&gt;
Function &lt;code&gt;get_terms()&lt;/code&gt; is showing as deprecated in 4.7.2.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/deprecated.php#L1276"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/deprecated.php#L1276&lt;/a&gt; still shows &lt;code&gt;get_terms&lt;/code&gt; as the latest alternative of &lt;code&gt;get_all_category_ids&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
What is the alternative function? File &lt;code&gt;deprecated.php&lt;/code&gt; targets version 4.7.2 so it needs to be updated with the correct alternative.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:41:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:1/1487346104594424</guid>
      <description>&lt;p&gt;
Given that I like the linear approach that is posted above, its structure also inspired me an idea that can allow some more advanced future features. It basically uses the same interaction on the side of the publish button, but instead of opening a small popup takes over the entire sidebar. With that space, we can do many things.
&lt;/p&gt;
&lt;p&gt;
In the concept above I explored this concept a bit:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Same basic functionality: Publish and Draft.
&lt;/li&gt;&lt;li&gt;Sharing link available (this is a bit simplified as it's dependent on save, so it's not that linear as in the mock)
&lt;/li&gt;&lt;li&gt;Preview before publishing of all the changes, with the ability to quickly revert them.
&lt;/li&gt;&lt;li&gt;View of the date and author of latest published changes.
&lt;/li&gt;&lt;li&gt;Link to history of past revisions.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'd note that this is more an exploration for ideas than a straight suggestion for this ticket, but since it might inspire a different approach and a longer term vision in another way, I think it made sense to be added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customizer-advanced-draft-i1.png attached to Ticket #39896</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39896/customizer-advanced-draft-i1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39896/customizer-advanced-draft-i1.png/1487345846570226</guid>
      <description>&lt;p&gt;
Customizer Advanced Publishing Options i1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:30:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:17/1487345435367430</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi everybody.
&lt;/p&gt;
&lt;p&gt;
I solved using the validation api. Check this out on the screenshot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21492.2.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.2.diff/1487345159734010</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39904 (Error message - Non-existent changeset UUID) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39904#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39904#comment:2/1487345142140004</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>21492.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.diff/1487344938537637</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>index.png attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/index.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/index.png/1487344903503881</guid>
      <description>&lt;p&gt;
Screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #39128,​39904 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39128%2C39904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39128%2C39904/1487344778761885</guid>
      <description>duplicate: &lt;p&gt;
Hello @IsabelDM, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report. This has been already reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39420" title="#39420: defect (bug): Unable to customise Theme - Non-existent changeset UUID (closed: duplicate)"&gt;#39420&lt;/a&gt; and we're currently tracking this issue in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39128" title="#39128: defect (bug): Customize: Preview fails to load when domain mapping in use ... (assigned)"&gt;#39128&lt;/a&gt;. If you're using WP Super Cache make sure to use &lt;a class="ext-link" href="https://github.com/Automattic/wp-super-cache/pull/161"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the latest version&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39904 (Error message - Non-existent changeset UUID) created</title>
      
        <dc:creator>IsabelDM</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39904/1487344506120768</guid>
      <description>&lt;p&gt;
Whenever I try to change my theme I receive the following error message:
Non-existent changeset UUID
&lt;/p&gt;
&lt;p&gt;
This has occurred since downloading the latest Wordpress 4.7.2
&lt;/p&gt;
&lt;p&gt;
I have looked on the support forums and found a lot of people with the same problem, but they say it is unresolved.  I have contact my website hosting company but they say it is a Wordpress issue.
Please advise
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:14:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:2/1487344476959310</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35488" title="#35488: defect (bug): wp_logout() not working as it should (new)"&gt;#35488&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28116" title="#28116: defect (bug): is_user_logged_in() does not work properly after using wp_signon() (closed: fixed)"&gt;#28116&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:1/1487344204098771</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would suggest to adopt is_user_logged_in() function, so every time it returns false "true" - force to WP_User with ID 0:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;is_user_logged_in&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_current_user&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;wp_get_session_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;wp_set_current_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Or perform this check inside wp_get_current_user(), which also used when checking nonce and many other things.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Feb 17 2017 4-33 PM.zip attached to Ticket #39903</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39903/Feb%2017%202017%204-33%20PM.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39903/Feb%2017%202017%204-33%20PM.zip/1487343091738929</guid>
      <description>&lt;p&gt;
Screen Cast
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) created</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903/1487342794054628</guid>
      <description>&lt;p&gt;
is_user_logged_in() will return true on ajax after cookie has been deleted manually in browser, until the session tokens expired or after destroy_sessions from admin for this user.
&lt;/p&gt;
&lt;p&gt;
To reproduce on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Add ajax callback function with one checkup is_user_logged_in().
&lt;/li&gt;&lt;li&gt;Log in front-end.
&lt;/li&gt;&lt;li&gt;Clear browser cookie.
&lt;/li&gt;&lt;li&gt;Refresh page and run ajax. It will return true. But the var_dump( is_user_logged_in() ) on page will return correct false.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Even more: after deleting cookie and refreshing page, new wordpress_ cookie will appear again, maybe because of is_user_logged_in() check.
&lt;/p&gt;
&lt;p&gt;
Proof on video attached using fresh wp install.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37967 (Categories Problem - possible bug.) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37967#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37967#comment:1/1487341631833842</guid>
      <description>&lt;p&gt;
Hey @trader121,
&lt;/p&gt;
&lt;p&gt;
What you're describing sounds to me like expected behavior. Queries for terms in hierarchical taxonomies (like &lt;code&gt;category&lt;/code&gt;) include child terms by default, &lt;a class="ext-link" href="https://developer.wordpress.org/reference/classes/wp_tax_query/__construct/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;per `WP_Tax_Query::__construct()`&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:3/1487341143949954</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39865 (Escaping functions have filters that allow them to be bypassed) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:16:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39865#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39865#comment:2/1487340964994214</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39865#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I really feel this is by-design and should NOT be changed. We shouldn't pretend that WordPress operates in a clean sandboxed mode where code can only change what it is expected to.
&lt;/p&gt;
&lt;p&gt;
Everything is filterable in WordPress, using filters within escaping functions allows for enhancing escaping functions where needed, but they also make it easier to selectively undo it for certain edge-cases when needed - knowing the input text is required there. If people need to use the parameter, they're going to use it even if deprecated, otherwise the only option would be a hacky workaround.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While I agree with the concept of filtering all the things, in this case, I feel that we're compromising site security for that ideal. If there is a use case where some needs to selectively undo the escaping, then perhaps not using the function is a better choice than filtering it away. Is there a use-case for this in core?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If malicious code wanted to output non-escaped test in a location where &lt;code&gt;esc_html()&lt;/code&gt; was used, there'd be numerous ways it could achieve it - the simplest would be to output the content upon one of the many filters which is probably called within what is going into &lt;code&gt;esc_html()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I cannot find any other filters being called in the internals of &lt;code&gt;esc_html()&lt;/code&gt; but I see your point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Fri, 17 Feb 2017 13:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:6/1487336583765777</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39892#comment:5" title="Comment 5"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's what I'd like to do here. The text is essentially a placeholder and should be treated as such, I don't see why it should be a default value. There's no need to select it, and the &lt;code&gt;/* */&lt;/code&gt; symbols just create unnecessary confusion.
&lt;/p&gt;
&lt;p&gt;
As noted above, not everyone is familiar enough with CSS to know all the syntax details, most users just paste snippets in there that they find on the forums.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only reason I can see for having the text as a CSS comment in the field would be for user education (providing an example for users of CSS comments). However, CSS doesn't really need inline comments unless one has a very complex stylesheet, which isn't typical for the Customizer.
&lt;/p&gt;
&lt;p&gt;
Since most users won't know what it means, and don't NEED to know what it means, it just adds unnecessary confusion to the user, as mentioned above. I agree that we should turn it into &lt;code&gt;placeholder&lt;/code&gt; text, and remove the &lt;code&gt;/* */&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39902 (wordpress-tests-lib : factory-&gt;post-&gt;create_object not working on ...) created</title>
      
        <dc:creator>ilhamum</dc:creator>

      <pubDate>Fri, 17 Feb 2017 11:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39902/1487332460706563</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
The function factory-&amp;gt;post-&amp;gt;create_object is not working on mysql Ver 14.14 Distrib 5.7.16.
When I try to insert a new post, it return 0 as the Id and doesn't insert the post.
I suspected that it has to do with mysql version, and when I forced mysql version to 5.6.24 on my docker image, it just worked fine.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39382 (Skipping term cache cleaning when cache invalidation is suspended) updated</title>
      
        <dc:creator>zachop</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:33:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39382#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39382#comment:1/1487327630768021</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seeing that the ticket is in &lt;code&gt;Awaiting Review&lt;/code&gt; status for the past 8 weeks, I'm changing its type from &lt;code&gt;Enhancement&lt;/code&gt; to &lt;code&gt;defect&lt;/code&gt;, hoping it will be reviewed sooner, given the fact that the described behavior could cause some trouble to developers.
&lt;/p&gt;
&lt;p&gt;
It's not a bug per se, so please feel free to change its type/priority as needed.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39898 (Avoid using HTML in translation strings ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39898#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39898#comment:3/1487326839422616</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40073" title="I18N: Update translators comment after [40072].
Props ocean90.
See #39898."&gt;40073&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Update translators comment after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40072" title="I18N: Fix broken `sprintf()` after [40067].
See #39898."&gt;[40072]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ocean90.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40073]: I18N: Update translators comment after [40072].  Props ocean90. See #39898.</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40073/1487326838947320</guid>
      <description>&lt;p&gt;
I18N: Update translators comment after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40072" title="I18N: Fix broken `sprintf()` after [40067].
See #39898."&gt;[40072]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ocean90.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39898 (Avoid using HTML in translation strings ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39898#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39898#comment:2/1487326452975104</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40072" title="I18N: Fix broken `sprintf()` after [40067].
See #39898."&gt;40072&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Fix broken &lt;code&gt;sprintf()&lt;/code&gt; after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40067" title="I18N: Remove `&amp;lt;code&amp;gt;` tags from translatable strings in ..."&gt;[40067]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40072]: I18N: Fix broken `sprintf()` after [40067].  See #39898.</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40072</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40072/1487326452434009</guid>
      <description>&lt;p&gt;
I18N: Fix broken &lt;code&gt;sprintf()&lt;/code&gt; after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40067" title="I18N: Remove `&amp;lt;code&amp;gt;` tags from translatable strings in ..."&gt;[40067]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39901 (Uploading a theme) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 17 Feb 2017 09:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39901#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39901#comment:1/1487325484079002</guid>
      <description>invalid: &lt;p&gt;
Hello @bresilhac2020,
&lt;/p&gt;
&lt;p&gt;
it looks like you're trying to upload your theme on &lt;a class="ext-link" href="https://wordpress.org/themes/getting-started/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/themes/getting-started/&lt;/a&gt;. To upload a theme to your install you have to visit yourdomin.com/wp-admin/theme-install.php where you should see a "Upload Theme" button.
&lt;/p&gt;
&lt;p&gt;
To get further help please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39897 (wordpress.org will not accept my username) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 17 Feb 2017 09:54:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39897#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39897#comment:1/1487325263779181</guid>
      <description>invalid: &lt;p&gt;
Hello @bresilhac2020, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39901 (Uploading a theme) created</title>
      
        <dc:creator>bresilhac2020</dc:creator>

      <pubDate>Fri, 17 Feb 2017 09:45:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39901/1487324701993046</guid>
      <description>&lt;p&gt;
I have attempted to upload a theme to my wordpress page but it won't accept the zip file. It says the name is reserved by wordpress. I am simply trying to use the twenty seventeen theme. Please help me with this pesky issue. -Jeff
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39900 (Post Listing Date with modified date calculation) closed</title>
      
        <dc:creator>pothi</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39900#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39900#comment:3/1487318293270429</guid>
      <description>invalid: &lt;p&gt;
You may use &lt;a class="ext-link" href="https://wordpress.org/plugins/last-modified-timestamp/screenshots/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a plugin to show modified date in wp-admin&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:25/1487318077233006</guid>
      <description>&lt;p&gt;
On a related note, it would be great if in addition to indicating a embed subsetting if we could use a similar construct to indicate that resources should be embedded recursively along a specified tree. For example, if I wanted to get the recent posts along with their comments embedded and the embedded comments' own authors also embedded a third level down, maybe I could do so with a request like:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/wp/v2/posts?_embed[]=comments/author&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I understand this is maybe encroaching on GraphQL territory, but just wanted to mention recursive embedding as the flip side of being able to limit embedding. This is also encroaching on batch requests as well I suppose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39900 (Post Listing Date with modified date calculation) updated</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39900#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39900#comment:2/1487318030501682</guid>
      <description>&lt;p&gt;
If it says, &lt;strong&gt;Last Modified&lt;/strong&gt; then it should display the modified date here. When it says, &lt;strong&gt;Published&lt;/strong&gt; we can display the published date as we showing now.
&lt;/p&gt;
&lt;p&gt;
Or, we can display both dates &lt;strong&gt;Published&lt;/strong&gt; and &lt;strong&gt;Last Modified&lt;/strong&gt; here and sorting will work as usual with published date.
&lt;/p&gt;
&lt;p&gt;
Just a thought...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39900 (Post Listing Date with modified date calculation) updated</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:21:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39900#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39900#comment:1/1487316098388838</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>date_admin_post_list.png attached to Ticket #39900</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:11:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39900/date_admin_post_list.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39900/date_admin_post_list.png/1487315496624123</guid>
      <description>&lt;p&gt;
Database value
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>post_list.png attached to Ticket #39900</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39900/post_list.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39900/post_list.png/1487315475570611</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39900 (Post Listing Date with modified date calculation) created</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39900</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39900/1487315296165879</guid>
      <description>&lt;pre class="wiki"&gt;\wp-admin\includes\class-wp-posts-list-table.php
public function column_date( $post ) {}
&lt;/pre&gt;&lt;p&gt;
Now display post listing on post date : &lt;strong&gt;Last Modified 59 mins ago&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
When post label display &lt;strong&gt;Last Modified&lt;/strong&gt; That's time post_publish date display. Please Update with modify date calculation.
&lt;/p&gt;
&lt;p&gt;
Ex: 59 min before just i have created a post &amp;amp; 5 min before modified this post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39304 (`get_post_galleries()` can return incorrect gallery items.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:47:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39304#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39304#comment:13/1487314040481717</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It was easier to fix this along with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt; - so it's gone into 4.7.3 as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39277,​39304 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:46:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39277%2C39304</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39277%2C39304/1487314006248288</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40071" title="Media: Avoid PHP Warnings in `get_post_galleries()` when processing ..."&gt;40071&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Avoid PHP Warnings in &lt;code&gt;get_post_galleries()&lt;/code&gt; when processing empty &lt;code&gt;[gallery]&lt;/code&gt; shortcodes and avoid returning the incorrect results when the global &lt;code&gt;$post&lt;/code&gt; does not match the provided post ID.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32, joemcgill, seanchayes.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40070" title="Media: Avoid PHP Warnings in `get_post_galleries()` when processing ..."&gt;[40070]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39304" title="#39304: defect (bug): `get_post_galleries()` can return incorrect gallery items. (closed: fixed)"&gt;#39304&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40071]: Media: Avoid PHP Warnings in `get_post_galleries()` when processing ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:46:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40071</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40071/1487314005740372</guid>
      <description>&lt;p&gt;
Media: Avoid PHP Warnings in &lt;code&gt;get_post_galleries()&lt;/code&gt; when processing empty &lt;code&gt;[gallery]&lt;/code&gt; shortcodes and avoid returning the incorrect results when the global &lt;code&gt;$post&lt;/code&gt; does not match the provided post ID.
&lt;/p&gt;
&lt;p&gt;
Props dd32, joemcgill, seanchayes.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40070" title="Media: Avoid PHP Warnings in `get_post_galleries()` when processing ..."&gt;[40070]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39304" title="#39304: defect (bug): `get_post_galleries()` can return incorrect gallery items. (closed: fixed)"&gt;#39304&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #39277,​39304 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39277%2C39304</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39277%2C39304/1487313931573034</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40070" title="Media: Avoid PHP Warnings in `get_post_galleries()` when processing ..."&gt;40070&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Avoid PHP Warnings in &lt;code&gt;get_post_galleries()&lt;/code&gt; when processing empty &lt;code&gt;[gallery]&lt;/code&gt; shortcodes and avoid returning the incorrect results when the global &lt;code&gt;$post&lt;/code&gt; does not match the provided post ID.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32, joemcgill, seanchayes.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39304" title="#39304: defect (bug): `get_post_galleries()` can return incorrect gallery items. (closed: fixed)"&gt;#39304&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40070]: Media: Avoid PHP Warnings in `get_post_galleries()` when processing ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40070</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40070/1487313931087729</guid>
      <description>&lt;p&gt;
Media: Avoid PHP Warnings in &lt;code&gt;get_post_galleries()&lt;/code&gt; when processing empty &lt;code&gt;[gallery]&lt;/code&gt; shortcodes and avoid returning the incorrect results when the global &lt;code&gt;$post&lt;/code&gt; does not match the provided post ID.
&lt;/p&gt;
&lt;p&gt;
Props dd32, joemcgill, seanchayes.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39304" title="#39304: defect (bug): `get_post_galleries()` can return incorrect gallery items. (closed: fixed)"&gt;#39304&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39785 (posts_selection hook incorrectly concatenates selection query strings) updated</title>
      
        <dc:creator>bigevilbrain</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39785#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39785#comment:3/1487307988248415</guid>
      <description>&lt;p&gt;
@boonebgorges Yes, I don't see any harm in leaving it as is. I just noticed it because I was debugging some crazy query calls. Thanks for the response!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39783 (Requests http_api_curl action doesn't pass $handle by reference) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:06:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39783#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39783#comment:8/1487307983960375</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40069" title="HTTP API: Restore backwards compatibility with the `http_api_curl` ..."&gt;40069&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Restore backwards compatibility with the &lt;code&gt;http_api_curl&lt;/code&gt; filter - it expects that the handle parameter is passed as a reference, however &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39212" title="WP_HTTP: Map internal Requests hooks to WordPress actions.
This change ..."&gt;[39212]&lt;/a&gt; missed that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pento.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40068" title="HTTP API: Restore backwards compatibility with the `http_api_curl` ..."&gt;[40068]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39783" title="#39783: defect (bug): Requests http_api_curl action doesn't pass $handle by reference (closed: fixed)"&gt;#39783&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40069]: HTTP API: Restore backwards compatibility with the `http_api_curl` ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:06:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40069</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40069/1487307983461667</guid>
      <description>&lt;p&gt;
HTTP API: Restore backwards compatibility with the &lt;code&gt;http_api_curl&lt;/code&gt; filter - it expects that the handle parameter is passed as a reference, however &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39212" title="WP_HTTP: Map internal Requests hooks to WordPress actions.
This change ..."&gt;[39212]&lt;/a&gt; missed that.
&lt;/p&gt;
&lt;p&gt;
Props pento.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40068" title="HTTP API: Restore backwards compatibility with the `http_api_curl` ..."&gt;[40068]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39783" title="#39783: defect (bug): Requests http_api_curl action doesn't pass $handle by reference (closed: fixed)"&gt;#39783&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39783 (Requests http_api_curl action doesn't pass $handle by reference) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39783#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39783#comment:7/1487307903665486</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40068" title="HTTP API: Restore backwards compatibility with the `http_api_curl` ..."&gt;40068&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Restore backwards compatibility with the &lt;code&gt;http_api_curl&lt;/code&gt; filter - it expects that the handle parameter is passed as a reference, however &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39212" title="WP_HTTP: Map internal Requests hooks to WordPress actions.
This change ..."&gt;[39212]&lt;/a&gt; missed that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pento.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39783" title="#39783: defect (bug): Requests http_api_curl action doesn't pass $handle by reference (closed: fixed)"&gt;#39783&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40068]: HTTP API: Restore backwards compatibility with the `http_api_curl` ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40068</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40068/1487307903182822</guid>
      <description>&lt;p&gt;
HTTP API: Restore backwards compatibility with the &lt;code&gt;http_api_curl&lt;/code&gt; filter - it expects that the handle parameter is passed as a reference, however &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39212" title="WP_HTTP: Map internal Requests hooks to WordPress actions.
This change ..."&gt;[39212]&lt;/a&gt; missed that.
&lt;/p&gt;
&lt;p&gt;
Props pento.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39783" title="#39783: defect (bug): Requests http_api_curl action doesn't pass $handle by reference (closed: fixed)"&gt;#39783&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39785 (posts_selection hook incorrectly concatenates selection query strings) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:36:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39785#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39785#comment:2/1487302588605882</guid>
      <description>wontfix: &lt;p&gt;
@bigevilbrain Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Very strange - I have seen this action before, but never noticed the way it concatenated query fragments. The hook was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5916" title="posts_results and posts_selection hooks. fixes #4799"&gt;[5916]&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4799" title="#4799: defect (bug): posts_results and posts_selection hooks for use by caching plugins (closed: fixed)"&gt;#4799&lt;/a&gt; and hasn't been touched since. I don't see any meaningful use of it on GitHub, and while I haven't done a proper search of the plugin repo, I'd be quite surprised if anyone's done anything meaningful with it there either.
&lt;/p&gt;
&lt;p&gt;
That said, it's harmless. And changing the data passed to the action could potentially break someone who *is* managing to use it in the right way. So I think we should probably leave it as is.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39899 (Integer slugs load parents content) updated</title>
      
        <dc:creator>nattaylor</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39899#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39899#comment:2/1487302521882476</guid>
      <description>&lt;p&gt;
Ah, thanks @SergeyBiryukov. I was sure I wasn't the only one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38280 (Make term count for a specific object type available) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38280#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38280#comment:8/1487302117131898</guid>
      <description>&lt;p&gt;
@desrosj Nice job on this patch so far.
&lt;/p&gt;
&lt;p&gt;
The comment &lt;code&gt;// When a count for an object type does not exist, if any other meta caches exist we can assume 0.&lt;/code&gt; makes me nervous. I guess this is because you're not storing 0s, and the presence a count for another object type means that WP has recently done a relevant count. I worry that this is going to be subject to weird race conditions or data integrity problems. (For example: what if a taxonomy originally assigned to 'post' becomes assigned to &lt;code&gt;array( 'post', 'page' )&lt;/code&gt;?) How about some combination of your original array-based approach and the one-entry-per-object-type approach? There'd be a single key containing a list of the object types for which a count exists, but the counts themselves would be stored in their own rows. This way, if &lt;code&gt;$type&lt;/code&gt; appears in the array, and if &lt;code&gt;get_term_meta( $term_id, '_wp_object_count_' . $type, true )&lt;/code&gt; returned false for a &lt;code&gt;$type&lt;/code&gt;, we can be confident that &lt;code&gt;$type&lt;/code&gt; has indeed been counted.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Bullet point one made me think of a couple scenarios that could result in some abandoned meta caches
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These situations are rare enough that I wouldn't worry about it too much. As a precaution, &lt;code&gt;_update_post_term_count()&lt;/code&gt; could &lt;code&gt;delete_post_meta()&lt;/code&gt; for all of a post's existing counts before generating and saving new ones (another argument for having a separate list of the object types that have been counted). This way, the stale data will be removed during the next count.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #28081,​39899 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28081%2C39899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28081%2C39899/1487301528663062</guid>
      <description>duplicate: &lt;p&gt;
Hi @nattaylor, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/28081" title="#28081: defect (bug): Do a canonical redirect for pages when query var 'paged' is set (accepted)"&gt;#28081&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39899 (Integer slugs load parents content) created</title>
      
        <dc:creator>nattaylor</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:15:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39899/1487301356391791</guid>
      <description>&lt;p&gt;
Given a page with &lt;code&gt;slug=foo&lt;/code&gt; then requests for &lt;code&gt;/foo/[0-9]*&lt;/code&gt; load &lt;code&gt;foo&lt;/code&gt;'s content.
&lt;/p&gt;
&lt;p&gt;
To reproduce, just try this on most Wordpress installs (e.g. &lt;a class="ext-link" href="https://techcrunch.com/contact/8675309/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://techcrunch.com/contact/8675309/&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Here is the output from the debug bar
&lt;/p&gt;
&lt;pre class="wiki"&gt;Request:
services/123
Query String:
page=123&amp;amp;pagename=services
Matched Rewrite Rule:
(.?.+?)(?:/([0-9]+))?/?$
Matched Rewrite Query:
pagename=services&amp;amp;page=123
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38173 (Meta query creates unecessary multiple left joins when using the same ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:06:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38173#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38173#comment:3/1487300806136266</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Bug was registered 6 months ago and no one care about this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are many open enhancement requests in WordPress, and many of them are worthwhile, but there are only so many people reviewing and writing patches.
&lt;/p&gt;
&lt;p&gt;
@neonWired is correct that no table join is required for subclauses that are joined by &lt;code&gt;OR&lt;/code&gt; that both operate on the same &lt;code&gt;meta_key&lt;/code&gt; when one of them uses the compare operator &lt;code&gt;NOT EXISTS&lt;/code&gt;. But this syntax requires that the &lt;code&gt;meta_key&lt;/code&gt; comparison be put into the &lt;code&gt;ON&lt;/code&gt; clause for that particular &lt;code&gt;JOIN&lt;/code&gt; clause. This already happens for &lt;code&gt;NOT EXISTS&lt;/code&gt;: &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/class-wp-meta-query.php#L536"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/class-wp-meta-query.php#L536&lt;/a&gt; But the logic becomes a good deal more complicated when other clauses share a &lt;code&gt;JOIN&lt;/code&gt; with a &lt;code&gt;NOT EXISTS&lt;/code&gt; clause, because of the order in which &lt;code&gt;WP_Meta_Query&lt;/code&gt; currently builds SQL. Take @neonWired's query as an example. Here's what happens internally:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;SQL is generated for the first subclause (&lt;code&gt;'compare' =&amp;gt; '!='&lt;/code&gt;). The JOIN clause looks like &lt;code&gt;INNER JOIN wp_postmeta ON ( wp_posts.ID = wp_postmeta.post_id )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;SQL is generated for the second subclause after this. &lt;code&gt;WP_Meta_Query&lt;/code&gt; realizes it's a 'NOT EXISTS', so it knows that the JOIN clause must be like &lt;code&gt;LEFT JOIN wp_postmeta ON ( wp_posts.ID = wp_postmeta.post_id AND wp_postmeta.meta_key = 'product' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;But in order to share the table join with the clause generated in 1, we'd have to go back and modify the SQL that's already generated there, so that it has the proper JOIN syntax.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
SQL generation for clauses is more or less linear at the moment; there's no easy way to jump back and change the syntax of a clause that already been generated. We'd need to either (a) change the way that the clauses are generated so that it's easier to change existing clauses, or (b) create some sort of look-ahead device that can tell whether there's going to be a 'NOT EXISTS' clause involved, and if so, process it first.
&lt;/p&gt;
&lt;p&gt;
Either of these is quite possible, but it's not a trivial task. I've just spent an hour or so trying to come up with a proof-of-concept, but I haven't been successful. If anyone would like to have a go at writing a patch, I'd be happy to help to review it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:02:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:5/1487300525859113</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39892#comment:3" title="Comment 3"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Proposed new text (or something similar):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
You can add your own CSS in place of this comment.
Click the help icon above to learn more.
*/
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
That's a bit better than the current text, but it's still not clear enough that CSS should be added outside of &lt;code&gt;/* */&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd consider to make it a placeholder only if removing the slashes and stars &lt;code&gt;/* */&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's what I'd like to do here. The text is essentially a placeholder and should be treated as such, I don't see why it should be a default value. There's no need to select it, and the &lt;code&gt;/* */&lt;/code&gt; symbols just create unnecessary confusion.
&lt;/p&gt;
&lt;p&gt;
As noted above, not everyone is familiar enough with CSS to know all the syntax details, most users just paste snippets in there that they find on the forums.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39898 (Avoid using HTML in translation strings ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 02:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39898#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39898#comment:1/1487298161331015</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40067" title="I18N: Remove `&amp;lt;code&amp;gt;` tags from translatable strings in ..."&gt;40067&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Remove &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags from translatable strings in &lt;code&gt;wp-includes/customize/class-wp-customize-custom-css-setting.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40067]: I18N: Remove `` tags from translatable strings in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 02:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40067</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40067/1487298160420164</guid>
      <description>&lt;p&gt;
I18N: Remove &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags from translatable strings in &lt;code&gt;wp-includes/customize/class-wp-customize-custom-css-setting.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39898 (Avoid using HTML in translation strings ...) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 02:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39898</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39898/1487297976939190</guid>
      <description>&lt;p&gt;
In the past, we've made an effort to &lt;a href="https://core.trac.wordpress.org/query?status=closed&amp;amp;component=I18N&amp;amp;summary=~avoid"&gt;remove &amp;lt;code&amp;gt; tags from translatable strings&lt;/a&gt;, as they generally do not need to be translated.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38829" title="Customize: Introduce custom CSS for extending theme styles.
* Custom ..."&gt;[38829]&lt;/a&gt; introduced a bunch of new strings with &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags in &lt;code&gt;WP_Customize_Custom_CSS_Setting&lt;/code&gt; class for displaying error messages when validating custom CSS rules.
&lt;/p&gt;
&lt;p&gt;
I've just stumbled upon a string where &lt;code&gt;&amp;lt;code&amp;gt;content: "";&amp;lt;/code&amp;gt;&lt;/code&gt; was translated literally, which means we should remove non-translatable parts from these strings.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39897 (wordpress.org will not accept my username) created</title>
      
        <dc:creator>bresilhac2020</dc:creator>

      <pubDate>Fri, 17 Feb 2017 02:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39897/1487296875252751</guid>
      <description>&lt;p&gt;
I have an account with you all with the username: bresilhac3030. I couldn't login with the password I myself created. So I had your password generator provide me with a new pw. This did not work either. My wordpress site is being built on the bresilhac3030 username. Please tell me what the problem is and how I can fix it. I also believe that my bresilhac3030 wordpress.org site may have been hacked already. Please advise. -Jeff Morales
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:40/1487296769316837</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
It took us a few tries to get this right, so there are 5 different commits to port:  &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40058" title="REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ..."&gt;[40058]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40061" title="REST API: improve test fixture generation, normalizing data.
Add a ..."&gt;[40061]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40066" title="REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ..."&gt;[40066]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40077" title="REST API: Skip generating the client test fixtures in multisite mode.
 ..."&gt;[40077]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
edit: make it 6, including &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;[40104]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>kkking</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:7/1487294773744566</guid>
      <description>&lt;p&gt;
@azaozz ,I've solved it. thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>kkking</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:6/1487294666914682</guid>
      <description>&lt;p&gt;
I've solved it，  thanks everyone！
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>metabox-editor.png attached to Ticket #39887</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:23:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39887/metabox-editor.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39887/metabox-editor.png/1487294592140597</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:5/1487294555373844</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39887#comment:2" title="Comment 2"&gt;kkking&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
hello ，I put this code to functions.php
&lt;/p&gt;
&lt;p&gt;
open "wp-admin/post-new.php"
&lt;/p&gt;
&lt;p&gt;
it show like  this image...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just tested this and it works as expected here. Of course the editor "crashes" if you move the metabox in the dom as @swissspidy mentioned above, but it works properly if you don't. Please check the rest of your code or any active plugins that may interfere with the CSS or JS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 17 Feb 2017 00:12:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:39/1487290370097186</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40066" title="REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ..."&gt;40066&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt; - &lt;code&gt;JSON_*&lt;/code&gt; constants are differently unsupported in PHP 5.2 and 5.3, which caused other, more different failures.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also bring back &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; because the generated output looks nicer this way.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40066]: REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 17 Feb 2017 00:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40066</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40066/1487290369595635</guid>
      <description>&lt;p&gt;
REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt; - &lt;code&gt;JSON_*&lt;/code&gt; constants are differently unsupported in PHP 5.2 and 5.3, which caused other, more different failures.
&lt;/p&gt;
&lt;p&gt;
Also bring back &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; because the generated output looks nicer this way.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>