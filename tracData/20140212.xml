<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #18623 (Allow themes to pre-register multiple custom backgrounds) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:56:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18623#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18623#comment:30/1392249362280576</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by obenland. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790859"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27118 (WP_Customize_Image_Control should return attachment ID instead of image URL) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27118#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27118#comment:1/1392249008016414</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes yes yes yes yes! This has caused me no end up trouble over the last few weeks. Unfortunately what we will need to do is create a new customizer control so we maintain backward compatibility in the &lt;code&gt;WP_Customize_Image_Control&lt;/code&gt; class. Either that or introduce a parameter to that class which indicates it should store and return an attachment ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21785 (Add header image uploads with cropping to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21785#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21785#comment:18/1392248835353757</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21785#comment:17" title="Comment 17"&gt;mcsf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What Konstantin said. It currently works as a core plugin, although @ehg and I need to sort out the odd bug or two, as well as decouple it from our cropping extension of the Media Manager.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it can be done in the next week or so, I think this would be fantastic to add to 3.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27117 (Fatal error in  url_to_postid() when $wp_rewrite is null) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:46:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27117#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27117#comment:3/1392248785710511</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27117#comment:2" title="Comment 2"&gt;chrishoward&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Makes sense - but dang! Was hoping I'd found a real bug. :/
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not to worry, eventually you'll get to the point where you'll see them all the time! Follow &lt;a class="ext-link" href="http://make.wordpress.org/core/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://make.wordpress.org/core/&lt;/a&gt; and you'll find a lot of ongoing things to test and find bugs in.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27117 (Fatal error in  url_to_postid() when $wp_rewrite is null) updated</title>
      
        <dc:creator>chrishoward</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27117#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27117#comment:2/1392247281493282</guid>
      <description>&lt;p&gt;
Thanks, Andrew, for the quick reply.
&lt;/p&gt;
&lt;p&gt;
Makes sense - but dang! Was hoping I'd found a real bug. :/
&lt;/p&gt;
&lt;p&gt;
I'll contact the plugin dev then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21785 (Add header image uploads with cropping to the customizer) updated</title>
      
        <dc:creator>mcsf</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21785#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21785#comment:17/1392246920204109</guid>
      <description>&lt;p&gt;
What Konstantin said. It currently works as a core plugin, although @ehg and I need to sort out the odd bug or two, as well as decouple it from our cropping extension of the Media Manager.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27045 (Gallery css should use box-sizing) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27045#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27045#comment:4/1392246357757007</guid>
      <description>&lt;p&gt;
The current approach to the gallery styles seems generally wrong, and &lt;code&gt;border-box&lt;/code&gt; might sidestep the problem. As obenland said, custom styles should account for these issues themselves, and this change would probably break back-compatibility.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/17142" title="#17142: feature request: Prettier gallery display and navigation through core (reopened)"&gt;#17142&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21785 (Add header image uploads with cropping to the customizer) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:00:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21785#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21785#comment:16/1392246040264245</guid>
      <description>&lt;p&gt;
@ehg and @miguelcsf are working on it in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26505" title="#26505: enhancement: Custom Header cropping code extraction (closed: duplicate)"&gt;#26505&lt;/a&gt;. We just talked about the current status two weeks ago, as a matter of fact, and they will spend the coming week on getting the .com implementation ready for core (I've been told).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27118 (WP_Customize_Image_Control should return attachment ID instead of image URL) created</title>
      
        <dc:creator>silb3r</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27118/1392245862227321</guid>
      <description>&lt;p&gt;
WP_Customize_Image_Control should, by default, return an attachment ID instead of an image URL.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27045 (Gallery css should use box-sizing) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:57:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27045#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27045#comment:3/1392245837079734</guid>
      <description>&lt;p&gt;
Interesting, is there an example of a theme in the repository where the current way presents a problem? Wouldn't theme authors account for borders and paddings with additional styles?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14653 (Log IP address un UserMeta when account is created) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14653#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14653#comment:11/1392245343867609</guid>
      <description>wontfix: &lt;p&gt;
I think this should remain plugin territory. The 'IP Address' column can be misleading as would only show the IP address of the user when they first registered, not their current IP. And if it did, do that then things become complicated.
&lt;/p&gt;
&lt;p&gt;
Ipstenu's plugin addresses the issue well for those who need it. If there's a &lt;em&gt;strong&lt;/em&gt; argument for this in core, please re-open.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:15/1392245327042203</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27078/27078.2.patch" title="Attachment '27078.2.patch' in Ticket #27078"&gt;27078.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27078/27078.2.patch" title="Download"&gt;​&lt;/a&gt; includes the two tasks. &lt;code&gt;autoprefixer:colors&lt;/code&gt; runs after &lt;code&gt;colors&lt;/code&gt; (while writing this I noticed that we can include it in the &lt;code&gt;colors&lt;/code&gt; task too).
&lt;code&gt;autoprefixer:core&lt;/code&gt; adds the prefixes into src and can be run by a committer.
&lt;/p&gt;
&lt;p&gt;
Patch updates also browser support:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Firefox &amp;gt;= 17
&lt;/li&gt;&lt;li&gt;Explorer &amp;gt;= 7
&lt;/li&gt;&lt;li&gt;Chrome &amp;gt;= 21
&lt;/li&gt;&lt;li&gt;Android &amp;gt;= 2.1
&lt;/li&gt;&lt;li&gt;Opera &amp;gt;= 12.1
&lt;/li&gt;&lt;li&gt;Safari &amp;gt;= 6.0
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27078/27078.2-prefixed.patch" title="Attachment '27078.2-prefixed.patch' in Ticket #27078"&gt;27078.2-prefixed.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27078/27078.2-prefixed.patch" title="Download"&gt;​&lt;/a&gt; includes 27078.2.patch + &lt;code&gt;autoprefixer:core&lt;/code&gt;, so that you can see the difference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27045 (Gallery css should use box-sizing) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27045#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27045#comment:2/1392245281382191</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by nacin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790821"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20421 (Remove support for Netscape 4 from kses.php (because it's 2012)) closed</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20421#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20421#comment:5/1392245248652722</guid>
      <description>invalid: &lt;p&gt;
Well if it breaks that then yeah :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #17142 (Prettier gallery display and navigation through core) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17142#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17142#comment:6/1392245236691030</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is definitely pretty heavily theme-influenced, but we could improve the default gallery styling as well as maybe implementing a better JS-based experience for navigating through the single views, which themes could reskin or opt out of.
&lt;/p&gt;
&lt;p&gt;
Both Twenty Thirteen and Twenty Fourteen use the same (grid-view) gallery styling, so perhaps we could polish it (might need to improve the handling of captions, especially with touch, but that's the primary issue it addresses with the default styles) and make that the new default. For the single/flip-through view, I'm thinking improvements might still be plugin territory, but we could also build something cool there that themes could extend or opt-out of.
&lt;/p&gt;
&lt;p&gt;
Don't know any of the history here, though, so it might make just as much sense to wontfix this again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21785 (Add header image uploads with cropping to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21785#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21785#comment:15/1392245112388169</guid>
      <description>&lt;p&gt;
I seem to recall someone doing work on this, perhaps a plugin somewhere?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:7/1392245100056432</guid>
      <description>&lt;p&gt;
Even beyond the reset to the initial defaults, it would be very handy to have a reset for all changes to settings since the user started editing after the customizer loaded, and also to be able to reset the changes to an individual control. As it is right now, you have to reload the entire customizer if you want to get back to a non-dirty state.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27078.2-prefixed.patch attached to Ticket #27078</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27078/27078.2-prefixed.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27078/27078.2-prefixed.patch/1392244943135349</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>27078.2.patch attached to Ticket #27078</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27078/27078.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27078/27078.2.patch/1392244935185963</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27117 (Fatal error in  url_to_postid() when $wp_rewrite is null) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27117#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27117#comment:1/1392244900255376</guid>
      <description>&lt;p&gt;
Hi chrishoward, thanks for the report.
&lt;/p&gt;
&lt;p&gt;
url_to_postid() requires WP_Rewrite, which means it can't be called before the 'init' hook.
&lt;/p&gt;
&lt;p&gt;
Since this error has always been there, we prefer to keep errors in this case. It tells developers that they are doing something wrong. If we attempt to suppress this, it will be much harder to debug and doesn't do anyone good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #20002,​21763 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=20002%2C21763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=20002%2C21763/1392244671900420</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20002" title="#20002: feature request: Update plugins_api to accept multiple slugs when querying ... (closed: duplicate)"&gt;#20002&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #20421 (Remove support for Netscape 4 from kses.php (because it's 2012)) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20421#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20421#comment:4/1392244652471316</guid>
      <description>&lt;p&gt;
As this is there for security reasons, its age may not be enough to remove these. What do these HTML entities look like? Do any other browsers also recognize them? Is this still a concern in the security community?
&lt;/p&gt;
&lt;p&gt;
Applying this patch specifically breaks one of our unit tests based on &lt;a class="ext-link" href="http://ha.ckers.org/xssAttacks.xml"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://ha.ckers.org/xssAttacks.xml&lt;/a&gt;. (The first one, in fact.) Sounds like "invalid" to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17164 (More elegant handling of site 'archive' options for MultiSite) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17164#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17164#comment:14/1392244421709622</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27117 (Fatal error in  url_to_postid() when $wp_rewrite is null) created</title>
      
        <dc:creator>chrishoward</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27117/1392244421203889</guid>
      <description>&lt;p&gt;
Encountered a fatal error today:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Fatal error: Call to a member function wp_rewrite_rules() on a non-object in /Users/chrishoward/Dropbox/wp-mba.dev/wp-includes/rewrite.php on line 301&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Did some testing, and $wp_rewrite was null.
&lt;/p&gt;
&lt;p&gt;
Line 301 is:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$rewrite = $wp_rewrite-&amp;gt;wp_rewrite_rules();
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Changed it to:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$rewrite = !empty($wp_rewrite)?$wp_rewrite-&amp;gt;wp_rewrite_rules():false;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and things seem to work.
&lt;/p&gt;
&lt;p&gt;
Not sure if the true problem is the 3rd party plugin that called this function, or WP, but I do think there should be some sort of protection in WP from getting a fatal error in this rare circumstance.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19721 (WordPress should support multiple or nested plugin directories) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19721#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19721#comment:4/1392244374351023</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we should wontfix this. Reasoning:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This is very much an edge case, and it can be solved by using build tools or dependency management tools such as Composer.
&lt;/li&gt;&lt;li&gt;Quite a few existing plugins bundle dropins inside subdirectories. If plugins in subdirectories were listed it would cause those dropins to become visible in the Plugins list. Definitely not desirable.
&lt;/li&gt;&lt;li&gt;Ticket has had no traction in two years
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20421 (Remove support for Netscape 4 from kses.php (because it's 2012)) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20421#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20421#comment:3/1392244046807508</guid>
      <description>&lt;p&gt;
Refreshing patch because it's now 2014.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20421.2.diff attached to Ticket #20421</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20421/20421.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20421/20421.2.diff/1392244021165517</guid>
      <description>&lt;p&gt;
Refreshing patch because it's now 2014.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:17/1392243662410424</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by netweb. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790790"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:6/1392243615218919</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9057" title="#9057: feature request: Need &amp;#34;restore defaults&amp;#34; buttons on all admin screens (closed: wontfix)"&gt;#9057&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:16/1392243601805793</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by netweb. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790790"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18079 (WP has dropped support of the path field in the site table) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18079#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18079#comment:8/1392242761421915</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by nacin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790704"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27031 (Twenty Fourteen theme assumes all archive pages are list views) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:01:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27031#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27031#comment:6/1392242477253277</guid>
      <description>&lt;p&gt;
TwentyFourteen assumes every archive is a list-view, then hides the entire content body of each single post with CSS when viewing on a mobile device.
&lt;/p&gt;
&lt;p&gt;
In my opinion, no plugin (or child theme for that matter) should need to perform additional, proprietary steps to make custom post-type archives function and display normally.
&lt;/p&gt;
&lt;p&gt;
To duplicate outside of bbPress:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add this to an &lt;code&gt;mu-plugin&lt;/code&gt; of your choosing:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;add_action( 'init', function() {
	register_post_type( 'jjj', array(
		'labels'               =&amp;gt; array(),
		'public'               =&amp;gt; true,
		'publicly_queryable'   =&amp;gt; true,
		'show_ui'              =&amp;gt; true,
		'show_in_menu'         =&amp;gt; true,
		'show_in_nav_menus'    =&amp;gt; true,
		'show_in_admin_bar'    =&amp;gt; true,
		'menu_position'        =&amp;gt; 50,
		'menu_icon'            =&amp;gt; 'dashicons-calendar',
		'capability_type'      =&amp;gt; 'post',
		'has_archive'          =&amp;gt; true,
	) );
} );
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Create some new posts with this new type.
&lt;/li&gt;&lt;li&gt;Visit your: &lt;code&gt;domain.com/jjj/&lt;/code&gt; where 'jjj' is the assumed archive slug
&lt;/li&gt;&lt;li&gt;Shrink your browser width to trigger the mobile responsiveness
&lt;/li&gt;&lt;li&gt;Watch the faux-calendar content disappear
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In this imaginary scenario, an events plugin with an archive of events just lost all of its content because of an overly aggressive CSS rule. If the intent is to simplify the blog view by hiding the content of each post, we should target the blog view explicitly and keep other plugins out of harms way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27097 (Twenty Fourteen: Scroll lag in Windows) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27097#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27097#comment:2/1392241873321359</guid>
      <description>&lt;p&gt;
Certainly, there is one here: &lt;a class="ext-link" href="https://i.cloudup.com/EGXr0kDFHb.mov"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://i.cloudup.com/EGXr0kDFHb.mov&lt;/a&gt;. This was with browserstack with increases the lag. I've also got someone to test this and they got it on a local machine - this ruled out just being browserstack lag.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:1/1392241369224701</guid>
      <description>&lt;p&gt;
Reason for the media uploader issue is that &lt;a href="https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-admin/css/colors.css#L717"&gt;colors.css#L717&lt;/a&gt; was only merged for &lt;code&gt;#plugin-information-header&lt;/code&gt; but not for &lt;code&gt;#media-upload-header&lt;/code&gt;, to &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/css/wp-admin.css#L10979"&gt;wp-admin.css#L10979&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For the nav tabs, it's a mixture of changed &lt;code&gt;border-(bottom-)color&lt;/code&gt; and &lt;code&gt;border-(bottom-)width&lt;/code&gt; properties during the merge.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24409 (Edit Image in TinyMCE editor revamp) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24409#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24409#comment:29/1392241322227051</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by melchoyce. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790591"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27106 (Default styles inside the Visual editor) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27106#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27106#comment:2/1392241321905109</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by melchoyce. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790586"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:58/1392241109321955</guid>
      <description>&lt;p&gt;
I think the setup section makes sense unless we're going to call in 'General' settings tab in the General settings page.
&lt;/p&gt;
&lt;p&gt;
On Network we call it "Info" (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/26953" title="#26953: enhancement: Network Admin &amp;#34;Site Edit&amp;#34; page needs Settings trimmed down (new)"&gt;#26953&lt;/a&gt; for THAT nightmare). Should we strive for parity there and matchy-matchy? (I don't care which one, and maybe if it was 'setup' people would think 'Oh so I don't change this randomly...')
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26953 (Network Admin "Site Edit" page needs Settings trimmed down) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26953#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26953#comment:3/1392241054902613</guid>
      <description>&lt;p&gt;
Related &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/16413" title="#16413: enhancement: Settings page needs HTML refactoring and UI improvements (assigned)"&gt;#16413&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:3/1392240866783909</guid>
      <description>&lt;p&gt;
Important quick note: we have the 0.15 release for the plugin queued for releasing today. This has a bunch of fixes and features, including support for wide widget controls and live previews for widget changes as you type them (no need to click Update). Here's the current changelog: &lt;a class="ext-link" href="https://github.com/x-team/wp-widget-customizer/compare/0.14...master"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/x-team/wp-widget-customizer/compare/0.14...master&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27116.patch attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.patch/1392240866198488</guid>
      <description>&lt;p&gt;
Re-add background-color and border-bottom
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24859 (Media Library does not have a loading indicator) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24859#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24859#comment:16/1392240778683333</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>media-uploader-tabs.png attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/media-uploader-tabs.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/media-uploader-tabs.png/1392240704024878</guid>
      <description>&lt;p&gt;
Media upload tabs miss background color and border
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>nav-tabs-border-bottom.png attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/nav-tabs-border-bottom.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/nav-tabs-border-bottom.png/1392240672459162</guid>
      <description>&lt;p&gt;
Nav tabs are missing bottom border
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23233 (Radio Button instead of Checkboxes on Comment Moderation option?) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23233#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23233#comment:24/1392240663039271</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jenmylo. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790506"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) created</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116/1392240647230557</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18380" title="#18380: enhancement: Merge the default colors css into wp-admin.css (closed: fixed)"&gt;#18380&lt;/a&gt; broke some CSS (bottom border, background color) in the nav tabs (from the old themes.php) and in the tabs in the old media uploader, see screenshots.
&lt;/p&gt;
&lt;p&gt;
The attached patch fixes this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:30:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:11/1392240601766100</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jeremyfelt. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790498"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:30:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:42/1392240601519153</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by TomAuger. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790495"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:27:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115#comment:2/1392240429675802</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115#comment:1/1392240288131059</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
None. It'll be enforced soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:23:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:16/1392240182227037</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by tierra. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790468"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115/1392239995123042</guid>
      <description>&lt;p&gt;
It appears that wordpress.org now favours an SSL connection, although it is not currently enforced. &lt;a class="ext-link" href="https://www.google.com/search?q=wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Googling for WordPress returns a link to https://wordpress.org&lt;/a&gt; and once you're on the site, the HTTPS links persist.
&lt;/p&gt;
&lt;p&gt;
We should convert all wordpress.org links in the dashboard to HTTPS links.
&lt;/p&gt;
&lt;p&gt;
Any objections?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:12/1392239825666390</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by DH-Shredder. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790439"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:14/1392239762895518</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:13" title="Comment 13"&gt;ircbot&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by DH-Shredder. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In todays dev chat we have decided to use one Autoprefixer task as a development tool (putting prefixes into src to then be committed) and one as a build tool for colors.
&lt;/p&gt;
&lt;p&gt;
Working on a new patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:04:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:13/1392239042716592</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by DH-Shredder. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27023 (As a developer, I should be able to easily get and apply patches from trac) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:56:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27023#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27023#comment:10/1392238561517009</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790346"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:4/1392238466554070</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe you, but it's not obvious why this is the case. Could you explain?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good thing you asked :) I misread the conditional. It supported updating before if the previous item was an orphan. I've updated the patch, and added a test case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27113.2.diff attached to Ticket #27113</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27113/27113.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27113/27113.2.diff/1392238443427577</guid>
      <description>&lt;p&gt;
Update 27113.1.diff to support setting menu id when the menu item is an orphan
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:57/1392238188386206</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16413/" title="Attachments of Ticket #16413"&gt;settings-1.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16413/" title="Download"&gt;​&lt;/a&gt; explores combining the Setting pages into one long, continuously scrolling page. Sections are linked from a persistent navigation bar at the top, which changes to reflect the "current" section as you scroll.
&lt;/p&gt;
&lt;p&gt;
You might also notice that we've created a new "setup" section that contains some of the most commonly changed settings. This is to allow new or casual users to quickly change the settings that matter to them, without overwhelming them with tons of different sections to search through to change basic settings up-front. We'd also like to look at reorganizing a lot of the sections to make a little more sense. Would swapping out which section a setting appears in have any effect on plugin or theme authors using the settings pages?
&lt;/p&gt;
&lt;p&gt;
For now, these wireframes are just for discussion. We'll post a final with the specific groupings when we are ready for a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>pauldewouters</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:45:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:61/1392237929418558</guid>
      <description>&lt;p&gt;
It's useful for scripts too. For example, some libraries don't support old browsers so it would be better to not load the script in this case. In this particular case, I'm using select2 for dropdowns, which doesn't work with IE7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>settings-1.png attached to Ticket #16413</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:41:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16413/settings-1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16413/settings-1.png/1392237714620272</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22476 (Standardize single and double quotes in CSS url()s) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22476#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22476#comment:16/1392237664488880</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22476 (Standardize single and double quotes in CSS url()s) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22476#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22476#comment:15/1392237636272029</guid>
      <description>&lt;p&gt;
As the CSS coding standards don't use quotes, and as &lt;code&gt;grunt-js-cssmin&lt;/code&gt; also removes them during the minification, I updated the patch to remove all quotes (as of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27167" title="Merge two similar strings. props pavelevap. fixes #27096."&gt;r27167&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27114 (Don't use HTTPS in unit tests if OpenSSL isn't loaded.) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27114#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27114#comment:1/1392237562170435</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27168" title="Don't use HTTPS in unit tests if OpenSSL isn't loaded.
props bpetty. ..."&gt;27168&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't use HTTPS in unit tests if OpenSSL isn't loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props bpetty.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27114" title="#27114: defect (bug): Don't use HTTPS in unit tests if OpenSSL isn't loaded. (closed: fixed)"&gt;#27114&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27168]: Don't use HTTPS in unit tests if OpenSSL isn't loaded.  props bpetty. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:39:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27168/1392237561411352</guid>
      <description>&lt;p&gt;
Don't use HTTPS in unit tests if OpenSSL isn't loaded.
&lt;/p&gt;
&lt;p&gt;
props bpetty.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27114" title="#27114: defect (bug): Don't use HTTPS in unit tests if OpenSSL isn't loaded. (closed: fixed)"&gt;#27114&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>22476.none.3.diff attached to Ticket #22476</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22476/22476.none.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22476/22476.none.3.diff/1392237526425353</guid>
      <description>&lt;p&gt;
Refresh after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27167" title="Merge two similar strings. props pavelevap. fixes #27096."&gt;[27167]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>ticket-27114-tests-openssl.patch attached to Ticket #27114</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27114/ticket-27114-tests-openssl.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27114/ticket-27114-tests-openssl.patch/1392237290526277</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27114 (Don't use HTTPS in unit tests if OpenSSL isn't loaded.) created</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27114/1392237262917746</guid>
      <description>&lt;p&gt;
Among our tools that don't support the SSL transport is PHP 5.2 Travis CI hosts, which can't properly detect which unit tests shouldn't be run, resulting in test failures for known bugs.
&lt;/p&gt;
&lt;p&gt;
This falls back on non-SSL to fetch open tickets if OpenSSL isn't available.
&lt;/p&gt;
&lt;p&gt;
A test run has successfully passed here:
&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18756798"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18756798&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19826 (Error behavior for deleting trashed posts is different for Bulk Delete ...) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19826#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19826#comment:6/1392236957776608</guid>
      <description>&lt;p&gt;
Attempted to reproduce this with both regular posts and a custom post type - I found that the author did in fact &lt;em&gt;not&lt;/em&gt; have the option to 'Empty Trash' and therefore I was unable to reproduce this bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:28:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:3/1392236900824135</guid>
      <description>&lt;p&gt;
You removed a comment there, "Only set the menu term if it isn't set to avoid unnecessary wp_get_object_terms()".
&lt;/p&gt;
&lt;p&gt;
Basically, that is_object_in_term() call was added for the purposes of reducing queries (which nav menus use a ton of). is_object_in_term() uses the term cache, while wp_set_object_terms() does not, by way of wp_get_object_terms().
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the code didn't and doesn't support updating the associated menu_id of a menu item.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I believe you, but it's not obvious why this is the case. Could you explain?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:27:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:56/1392236877682320</guid>
      <description>&lt;p&gt;
Working with @melchoyce on settings ui redux. We're talking about multiple columns, breaking out of the standard a little. Will use this ticket for wireframes/patches etc. Note that this ticket's stated issue was css vs tables and UI, not a new API. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24106 (Simplify wp_slash()) updated</title>
      
        <dc:creator>devesine</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24106#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24106#comment:10/1392236845572067</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24106#comment:9" title="Comment 9"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
devesine, I'm not sure what you mean with datatype loss here. &lt;code&gt;wp_slash()&lt;/code&gt;/&lt;code&gt;wp_unslash()&lt;/code&gt; (both the patched and the unpatched versions) will only work with strings and (nested) arrays of strings, which basically is a result of PHP's &lt;code&gt;stripslashes()&lt;/code&gt; only accepting and returning a string.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp_unslash()&lt;/code&gt; uses &lt;code&gt;stripslashes_deep()&lt;/code&gt; (&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-includes/formatting.php#L1529"&gt;source&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/3.8.1/src/wp-includes/formatting.php#L1529" title="Download"&gt;​&lt;/a&gt;) , which handles strings, arrays, and objects (via &lt;code&gt;get_object_vars()&lt;/code&gt;), and the tests for &lt;code&gt;stripslashes_deep()&lt;/code&gt; (and by extension &lt;code&gt;wp_unslash()&lt;/code&gt;) test for its ability to touch objects without turning them into arrays.
&lt;/p&gt;
&lt;p&gt;
Unpatched &lt;code&gt;wp_slash()&lt;/code&gt; only handles strings and arrays.  The test I attached uses the same logic as the existing test for &lt;code&gt;stripslashes_deep()&lt;/code&gt;, but on the slashing rather than the unslashing side of things.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_unslash()&lt;/code&gt; has a docblock that indicates it only works on strings or arrays of strings, but it is currently inaccurate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17703 (Decrement update count bubbles when you update things) updated</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17703#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17703#comment:4/1392236769779648</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This seems like a good idea, so I went ahead and created a fresh patch (see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17703/17703-04.patch" title="Attachment '17703-04.patch' in Ticket #17703"&gt;17703-04.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17703/17703-04.patch" title="Download"&gt;​&lt;/a&gt;). The approach is a little different from Mitcho’s. Instead of offsetting the existing counts, an ajax call is triggered that pulls updated counts. For situations where the requests where the upgrades run is in an iframe, &lt;code&gt;window.postMessage&lt;/code&gt; is used to send a message to the parent window that triggers the count updating.
&lt;/p&gt;
&lt;p&gt;
One benefit of using an ajax handler is that it opens the door to refreshing the counts asynchronously at other times so that the status is more current without impacting the response time of admin page loads.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:55/1392236701660591</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by nacin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790292"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:23:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:2/1392236590405428</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
27113.1.diff does the trick. The change is covered by existing unit tests.
&lt;/p&gt;
&lt;p&gt;
For the record, the code didn't and doesn't support updating the associated &lt;code&gt;menu_id&lt;/code&gt; of a menu item.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22135 (Special characters in caption lead to failure of inserting images) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22135#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22135#comment:4/1392236538628077</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I investigated this some more, and the problem is the argument that is passed to the JS &lt;code&gt;send_to_editor&lt;/code&gt; function via PHP, in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/media.php#L227"&gt;this line&lt;/a&gt; of &lt;code&gt;wp-admin/includes/media.php&lt;/code&gt;.
Basically, &lt;code&gt;addslashes()&lt;/code&gt; is not enough to protect against an input of
&lt;/p&gt;
&lt;pre class="wiki"&gt;foo&amp;lt;/script&amp;gt;bar
&lt;/pre&gt;&lt;p&gt;
(in the Caption field in the old media uploader) prematurely ending the JS. This results in a script error, so that the remaining output is printed in the frame (as in the screenshot above).
Compare this generated HTML/JS (some attributes from the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; and &lt;code&gt;[caption]&lt;/code&gt; stripped):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* &amp;lt;![CDATA[ */
var win = window.dialogArguments || opener || parent || top;
win.send_to_editor('[caption]&amp;lt;img src=\"http://example.com/img.jpg\" /&amp;gt; foo&amp;lt;/script&amp;gt;bar[/caption]');
/* ]]&amp;gt; */
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;addslashes()&lt;/code&gt; only escaped the &lt;code&gt;'&lt;/code&gt; and &lt;code&gt;"&lt;/code&gt; but leaves &lt;code&gt;/&lt;/code&gt; untouched. This is then a problem for any input that contains &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt;, as that ends the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; block early. For other closing HTML tags (like &lt;code&gt;&amp;lt;/em&amp;gt;&lt;/code&gt;) this is no problem however.
&lt;/p&gt;
&lt;p&gt;
Now, the old media uploader is no longer used by Core, but it's still being used in several plugins. And although this an edge case that can only be triggered with &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt;, the fix is very easy: Let's use &lt;code&gt;json_encode()&lt;/code&gt; instead of &lt;code&gt;addslashes()&lt;/code&gt;, as that also escapes all &lt;code&gt;/&lt;/code&gt;.
The attached patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22135/22135.patch" title="Attachment '22135.patch' in Ticket #22135"&gt;22135.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22135/22135.patch" title="Download"&gt;​&lt;/a&gt; does that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:6/1392236538196195</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:5" title="Comment 5"&gt;lisota&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The heartbeat API, specifically the wp-refresh-auto-lock, is a major CPU hog. I can easily max out our 8-core server by opening 15-20 edit post windows and having them all hitting the server with refresh post lock requests every 15 seconds. Logging out of those screens quickly reduces CPU to under 10%.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Before Heartbeat, (WordPress 3.5) the Edit Post page was connecting every minute for autosave. In 3.8 Heartbeat connects every 15 sec. for the "focused" page and every 2 min. for the "non-focused" pages. So if you have 5 people that have 4 Edit Post pages opened at the same time in 3.5 you'll always see 20 connections per minute.
&lt;/p&gt;
&lt;p&gt;
In 3.8 there will be 20 connections for the focused pages (5 pages x 4 connections) plus 8 (average) for the non-focused pages (15 pages x 0.5 connections). In addition there may be up to 5 connections per minute if the posts in the focused pages are being edited as autosave would connect when there are changes.
&lt;/p&gt;
&lt;p&gt;
On average there will be about 50% - 60% (20 vs. 30-33) more connections in 3.8 compared to 3.5. Also in 3.9 autosave uses heartbeat for transport reducing the number of connections to 28. This number is higher but is not even two-fold.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I tried deregistering heartbeat everywhere, including post.php and post-new.php. However, that seems to affect another AJAX function, the ajax tag search no longer works.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Deregistering heartbeat.js on the Edit Post screens is not a good idea. It would also stop post.js from loading (as heartbeat.js is a dependency for post.js).
&lt;/p&gt;
&lt;p&gt;
You can increase the interval to 60 sec. in couple of ways. From JS:
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery(window).load( function() {
  if ( window.wp &amp;amp;&amp;amp; wp.heartbeat ) {
    wp.heartbeat.interval( 60 );
  }
});
&lt;/pre&gt;&lt;p&gt;
This has to run after &lt;code&gt;jQuery(document).ready()&lt;/code&gt;, hence the &lt;code&gt;jQuery(window).load()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
From PHP:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'heartbeat_send', 'my_heartbeat_settings' );
function my_heartbeat_settings( $response ) {
	if ( $_POST['interval'] != 60 ) {
		$response['heartbeat_interval'] = 60;
	}
	return $response;
}
&lt;/pre&gt;&lt;p&gt;
This will reset the interval to 60 sec. on every "beat" regardless of the current page and the initial settings.
&lt;/p&gt;
&lt;p&gt;
Of course changing the interval will impact the Post locking functionality. It can also be set to 30 sec.
&lt;/p&gt;
&lt;p&gt;
With the above example and the interval set to 60 sec. there will be 12-13 connections per minute in 3.9 plus up to 5 for autosave in 3.8, i.e. less than before Heartbeat was introduced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27113.1.diff attached to Ticket #27113</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:19:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27113/27113.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27113/27113.1.diff/1392236390533773</guid>
      <description>&lt;p&gt;
Explicitly set the menu term when creating a menu item, rather than depending on &lt;code&gt;tax_input&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>22135.patch attached to Ticket #22135</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22135/22135.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22135/22135.patch/1392236332013126</guid>
      <description>&lt;p&gt;
Use &lt;code&gt;json_encode&lt;/code&gt; instead of &lt;code&gt;addslashes&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>17703-04.patch attached to Ticket #17703</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17703/17703-04.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17703/17703-04.patch/1392236295816877</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:1/1392235760323147</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yeah, I agree. tax_input is shaky stuff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>iskin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:06:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:12/1392235616075549</guid>
      <description>&lt;p&gt;
BTW, why you speaking only about Sass and LESS? Why not Stylus? It use JS compiler, can be run inside browser as LESS. But it is powerful as Sass and even more (for example, has block mixins to clean media queries).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26944 (Dashboard "At a glance" widget ignores get_avatar_comment_types filter) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26944#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26944#comment:3/1392235561863168</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good. But it's more an enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:04:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:11/1392235464144847</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still have yet to come to believe that a pre-processor is the right choice for the WordPress project.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
... This is tricky, because depending on who you ask, the answer would range from "YES" to "ABSOLUTELY NOT."
&lt;/p&gt;
&lt;p&gt;
In the end, what any project wants is minified CSS file that will load fast when gzip gets involved. Also, what any project wants is modular code.
&lt;/p&gt;
&lt;p&gt;
*I* (me, my opinion) would be yes, let's go full-bore - I don't feel like 1) we get a huge wave of CSS patches and 2) when we do, it wouldn't be horrendous if the noob provided 17 lines of CSS that one had to convert into Saaaaassssy CSS code. 90% of the PHP patches are stale in Trac right now, and will require being rewritten. 99.9% probably have weird white space that needs fixing.
&lt;/p&gt;
&lt;p&gt;
It's funny that everyone is hating on Compass, because that was one of the selling points of SASS over LESS. (I continue to prefer LESS.) Even if Compass or "unnamed tool" is overkill, it's not used in prod, so shouldn't matter. Any random node module will require dozens of dependencies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>shaunandrews</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:00:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:2/1392235212001949</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27112#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What's liveFilter for? Is it needed? Can we do our own thing? The Themes page already has live searching.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Its what powers the widget search filter. If it can be replaced with something simpler, or similar to THX, then by all means...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24106 (Simplify wp_slash()) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24106#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24106#comment:9/1392235142184155</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
devesine, I'm not sure what you mean with datatype loss here. &lt;code&gt;wp_slash()&lt;/code&gt;/&lt;code&gt;wp_unslash()&lt;/code&gt; (both the patched and the unpatched versions) will only work with strings and (nested) arrays of strings, which basically is a result of PHP's &lt;code&gt;stripslashes()&lt;/code&gt; only accepting and returning a string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:1/1392234843867862</guid>
      <description>&lt;p&gt;
Some particular things we've noticed so far:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Need to merge the widget icons into Dashicons (melchoyce, michael arestad)
&lt;/li&gt;&lt;li&gt;filter_*(), exceptions, and other things we don't use in core should be replaced
&lt;/li&gt;&lt;li&gt;Twenty Thirteen and Fourteen need the JS added that the plugin bundles.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Where things should be merged:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;widget-customizer.css should be merged into customize-controls.css.
&lt;/li&gt;&lt;li&gt;widget-customizer.php should become class-wp-customize-widgets.php.
&lt;/li&gt;&lt;li&gt;The two controls should be added into class-wp-customize-control.php.
&lt;/li&gt;&lt;li&gt;widget-customizer.js is a ton of code, so let's maybe keep it separate from customize-control.js for now.
&lt;/li&gt;&lt;li&gt;Does widget-customizer-preview.js share a lot of code with widget-customizer.js?
&lt;/li&gt;&lt;li&gt;widget-customizer-preview.css should just be some CSS injected into wp_head. (It also needs better styling.)
&lt;/li&gt;&lt;li&gt;What's liveFilter for? Is it needed? Can we do our own thing? The Themes page already has live searching.
&lt;/li&gt;&lt;li&gt;I'm curious whether the options transaction component is necessary. We built the customizer originally by simply storing values and passing them through option_* filters on the fly. I've looked at this a few times now, and I'm not sure what I'm missing?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19373 (wp_insert_post() should not contain current_user_can() checks) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19373#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19373#comment:39/1392234682403638</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I dig 19373.2.diff, but it doesn't really solve my problem when coming at this from a slightly different angle: creating new nav menu items without a user context.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; uses the &lt;code&gt;tax_input&lt;/code&gt; argument to associate a new menu item with the menu term id. Without a user context, the capability check fails and the new menu item isn't associated with the menu.
&lt;/p&gt;
&lt;p&gt;
If the proposed patch were to go in, I don't think calling &lt;code&gt;wp_insert_post()&lt;/code&gt; inside of &lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; with &lt;code&gt;$sanitize = false&lt;/code&gt; is the right way to go. It'd solve my immediate problem, but isn't a global solution.
&lt;/p&gt;
&lt;p&gt;
I don't have a good suggestion otherwise at this point, other than:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Sanitization should probably be treated separately from capability checks.
&lt;/li&gt;&lt;li&gt;Capability checks should always be implemented higher up the stack, and probably are for the needs of &lt;code&gt;wp_insert_post()&lt;/code&gt;. I don't think there are many people depending on the capability check around &lt;code&gt;tax_input&lt;/code&gt;. However, intentionally removing the capability check could unintentionally open permissions holes in third-party code
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I created &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27113" title="#27113: defect (bug): Explicitly assign menu term relationship in wp_update_nav_menu_item() ... (closed: fixed)"&gt;#27113&lt;/a&gt; for my use case though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113/1392234639169581</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; depends on the &lt;code&gt;tax_input&lt;/code&gt; to assign a menu item to a menu term. However, when &lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; is called from a user-less context, this association isn't created and the menu item is orphaned.
&lt;/p&gt;
&lt;p&gt;
For me, this user-less context is a WP-CLI command where I haven't explicitly set a user.
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/19373" title="#19373: enhancement: wp_insert_post() should not contain current_user_can() checks (new)"&gt;#19373&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12682 (Multiple password reset emails can be annoying) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12682#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12682#comment:14/1392234602675062</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by VarunAgw. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790260"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23367 (Remove message parameters from admin URl's in the browser address bar) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23367#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23367#comment:5/1392234602281663</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by VarunAgw. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790258"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) reopened</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:49:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:12/1392234598378905</guid>
      <description>&lt;p&gt;
This unit test assertion consistently fails:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;assertFalse( $GLOBALS['wp_query']-&amp;gt;thumbnails_cached );
&lt;/pre&gt;&lt;p&gt;
See unit test results:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Post_Thumbnails::test_update_post_thumbnail_cache
Failed asserting that true is false.
/home/bryan/Projects/wp-vagrant/wordpress/tests/phpunit/tests/post/thumbnails.php:13
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27111 (Turning off global comments should include existing content) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27111#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27111#comment:2/1392234253305621</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4222" title="#4222: feature request: Add global comment/pings override switch (closed: wontfix)"&gt;#4222&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23855 (Leave Shortcode functions early, if there's no Shortcode delimiter) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23855#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23855#comment:5/1392234180194341</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I finally had some time to refresh the patch (for develop.svn., and with &lt;code&gt;if-{}&lt;/code&gt;) and also to write a quick script to measure the execution time of the suggested change: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.test.php" title="Attachment '23855.test.php' in Ticket #23855"&gt;23855.test.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.test.php" title="Download"&gt;​&lt;/a&gt;. Just run this on the patched and unpatched versions of &lt;code&gt;shortcodes.php&lt;/code&gt; (by simply putting &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.test.php" title="Attachment '23855.test.php' in Ticket #23855"&gt;23855.test.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.test.php" title="Download"&gt;​&lt;/a&gt; in &lt;code&gt;src/&lt;/code&gt;).
It runs the three functions in question on a dummy text with two Shortcodes that appear twice, and on a dummy text that does not have Shortcodes.
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt;  &lt;/td&gt;&lt;td&gt;Text with Shortcodes&lt;/td&gt;&lt;td&gt;Text without Shortcodes
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;has_shortcode()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;0.298s — unpatched&lt;/td&gt;&lt;td&gt;0.297s — unpatched
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;  &lt;/td&gt;&lt;td&gt;0.409s — &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;​&lt;/a&gt;&lt;/td&gt;&lt;td&gt;0.259s — &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;​&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;do_shortcode()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;13.379s — unpatched&lt;/td&gt;&lt;td&gt;4.497s — unpatched
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;  &lt;/td&gt;&lt;td&gt;13.309s — &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;​&lt;/a&gt;&lt;/td&gt;&lt;td&gt;0.253s — &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;​&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;strip_shortcode()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;7.524s — unpatched&lt;/td&gt;&lt;td&gt;4.431s — unpatched
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;  &lt;/td&gt;&lt;td&gt;7.521s — &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;​&lt;/a&gt;&lt;/td&gt;&lt;td&gt;0.244s — &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;​&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
The patched version appears to be much faster for &lt;code&gt;do_shortcode()&lt;/code&gt; and &lt;code&gt;strip_shortcode()&lt;/code&gt; (factor 15 to 20) and not so much with &lt;code&gt;has_shortcode()&lt;/code&gt;, in texts without Shortcodes. For texts with Shortcodes, the execution time remains pretty much constant.
So, adding this check to &lt;code&gt;has_shortcode()&lt;/code&gt; might not be necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112/1392233574761533</guid>
      <description>&lt;p&gt;
As decided &lt;a class="ext-link" href="http://make.wordpress.org/core/2014/02/06/heres-a-quick-summary-of-yesterdays-meeting-as/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;last week&lt;/a&gt;, we're going to give the &lt;a class="ext-link" href="https://wordpress.org/plugins/widget-customizer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Widget Customizer&lt;/a&gt; plugin a go in core. This ticket is to track its initial merge, which ocean90 and I are heading up.
&lt;/p&gt;
&lt;p&gt;
We're going to use the "Widgets" component for this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>23855.2.patch attached to Ticket #23855</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:27:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch/1392233239968703</guid>
      <description>&lt;p&gt;
Refreshed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>23855.test.php attached to Ticket #23855</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23855/23855.test.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23855/23855.test.php/1392233222980914</guid>
      <description>&lt;p&gt;
Measure execution time of shortcode functions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:10/1392232018317119</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:9" title="Comment 9"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, ocean90 - I'm not sure I totally understand why it has to run after minification - why not just before?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It must only work on .min.css files, otherwise core.svn will have prefixes and develop.svn won't, making CSS patches difficult if not impossible to create, apply, and test. The alternative I proposed is using this as only a development tool for now, versus on build — it puts prefixes directly into src that can then be committed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But it also means that we have to ignore colors for now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nope — while we could use it as a development tool (putting prefixes into src to then be committed), we could also use it as a build tool for colors. It's just two different tasks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4222 (Add global comment/pings override switch) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4222#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4222#comment:4/1392231961485759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by ocean90. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790225"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:02:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:44/1392231776470760</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/6481#comment:43" title="Comment 43"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's certainly not everyone, and I definitely think we need to code really defensively to make sure that we fall back to standard permalinks if we're not 100% sure pretty permalinks are working, but it seems doable.  It also seems like a nice step forward for the web in general.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed on having a fallback if an install doesn't pass the test to allow pretty permalinks. But that would still mean some percentage of users that is much lower than 100% would have ugly permalinks as the default, and a percentage of users much higher than 0% would default to pretty, a definite win.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27111 (Turning off global comments should include existing content) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 18:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27111#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27111#comment:1/1392231481666722</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jenmylo. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790216"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 18:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:9/1392231456017393</guid>
      <description>&lt;p&gt;
As far as running out of src (which I do for the vast majority of core dev, FWIW) and back-compat and all this Compass talk:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If a property is still required to be prefixed for use in any browser, we should be judicious about it, as it should be considered experimental and subject to change. I'd actually question if we should really be using it at all, given that being newest-and-shiniest is not our top priority (saying this knowing that 3.8 introduced a good amount of these). So, in those cases, we should be maintaining them by hand, and they should gracefully degrade, anyway. A pre- or post-processor should not play a part in their usage. This means that using a modern browser should give you the final experience when running out of src.
&lt;/li&gt;&lt;li&gt;In cases like opacity, we should not be attempting to make the particular browser(s) that need that "back compat" match. If something doesn't degrade gracefully, we need to fix the issue, not the tooling.
&lt;/li&gt;&lt;li&gt;Compass is beyond overkill, I am not a fan for the reasons listed above, I am not yet convinced of its longevity, and I still have yet to come to believe that a pre-processor is the right choice for the WordPress project.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, ocean90 - I'm not sure I totally understand why it has to run after minification - why not just before?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27111 (Turning off global comments should include existing content) created</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Wed, 12 Feb 2014 18:57:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27111/1392231420989201</guid>
      <description>&lt;p&gt;
People get confused when they turn off comments on a site, but continue receiving comment notifications. When a user sets the discussion setting to no longer allow comments to be posted to articles, it should turn off new comments on existing posts as well, not just new ones.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790178"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790178&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 12 Feb 2014 18:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:43/1392229458692360</guid>
      <description>&lt;p&gt;
So basically what we need is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update permalink structure using &lt;code&gt;$wp_rewrite-&amp;gt;set_permalink_structure();&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Update &lt;code&gt;.htaccess&lt;/code&gt; or &lt;code&gt;web.config&lt;/code&gt; by hard flushing the rewrite rules &lt;code&gt;flush_rewrite_rules()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Check for 404s or 500s using a head request
&lt;ul&gt;&lt;li&gt;This means we need some sort of content to test.  If no posts or terms exist, maybe the author page for the first user
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This should give us pretty permalinks for sites on Apache and IIS that have a writable config file that allows for rewrites, but only if that file is processed immediately and not on a delay.
&lt;/p&gt;
&lt;p&gt;
It's certainly not everyone, and I definitely think we need to code really defensively to make sure that we fall back to standard permalinks if we're not 100% sure pretty permalinks are working, but it seems doable.  It also seems like a nice step forward for the web in general.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Wed, 12 Feb 2014 17:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:42/1392227404375912</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would really really like us to switch over to pretty permalinks as the default for the sake of a better user experience. If there are current reasons *not* to do this, can folks list them? I'm bumping this up to "normal" from "low," because while it is probably a low priority in terms of the code base, it's been a n ongoing annoyance on the ux side for years. Would be great to get this addressed in 3.9 if possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 16:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:11/1392221298908394</guid>
      <description>&lt;p&gt;
@nacin was weirded out that this could happen - @klihelp, could you explain a little more about how this code ran outside of the loop?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 15:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:8/1392217410492918</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We haven't really gotten to the point where he develop repo is "runnable" in production.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which I think isn't a real problem. Why should a develop branch be used in a production environment. Therefore we have our builds.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think a good first step (as in, we can do it *today*) would be to use autoprefixer as a development tool, not a build tool.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would be a minimum. But it also means that we have to ignore colors for now.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Versions to consider: whether we support a few more versions back in FF and whether we support the old branch of a Opera. Also, do we care about old mobile Safari? Autoprefixer has a &amp;gt; 1% option, we should at least include whatever's in that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm fine with supporting FF &amp;gt;= 17 and Opera = 12.1. Opera 15 is the first with Blink, so more or less the same as Chrome. Mobile Safari would be iOS. What is old here? For the percentages take a look at &lt;a class="ext-link" href="http://caniuse.com/usage_table.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://caniuse.com/usage_table.php&lt;/a&gt; or &lt;a class="ext-link" href="https://github.com/ai/autoprefixer/blob/master/data/browsers.coffee"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ai/autoprefixer/blob/master/data/browsers.coffee&lt;/a&gt;. The &lt;code&gt;&amp;gt; 1%&lt;/code&gt; option wouldn't make a difference with our values.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:4" title="Comment 4"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One possible solution to the problem of keeping src running pretty would be to use &lt;a class="ext-link" href="http://leaverou.github.io/prefixfree/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://leaverou.github.io/prefixfree/&lt;/a&gt; only in the src directory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would be an idea, but I think we should try to avoid to bundle another JS lib. Haven't tested the performance yet, but does it work with many (and huge) stylesheets?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wouldn't mind eventually abandoning core.svn as a place to patch from, but I don't think holding out for a little while longer is a bad thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would be nice to know how many patches are still coming through core.svn. Abandoning core.svn will make things easier - now and in future.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:6" title="Comment 6"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would much rather we go all-in and use Compass.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As much I liked Compass in the past I don't want it back. It adds to many mixins and functions which we will not use in cure. And as iskin mentions, Compass adds a lot of unnecessary prefixes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
back-compat-needing properties like &lt;code&gt;opacity&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These properties are just hacks in my eyes. Autoprefixer doesn't care about this - which is great, since it's not a prefix, it's a proprietary property.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>dave1010</dc:creator>

      <pubDate>Wed, 12 Feb 2014 14:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:16/1392215975178692</guid>
      <description>&lt;p&gt;
I understand a Composer-esque vendor system isn't the WordPress way. Perhaps I shouldn't have introduced that in this ticket :-).
&lt;/p&gt;
&lt;p&gt;
Replying to MikeSchinkel:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP best practices for configuration management typically target those who are setting up development, testing, staging and production environments where PHP will be deployed and used and where code is deployed by either developers or system administrator. All of those features work very well for that use-case, but WordPress has a different primary use-case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Though I think there's certain things that WordPress can do for developers who want to follow PHP best practices without hindering site builders who cannot write PHP code.
&lt;/p&gt;
&lt;p&gt;
Getting back to providing an autoloader to plugins and themes:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Across plugins and themes there is potentially a large number of classes to autoload, but those classes do not follow the PSR-0/4 autoloader standard because there is no single top-level directory to load from, nor are there really vendor names.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's up to plugin and theme authors to structure their code how they want (inside their own wp-content/plugins/foo directory). Some plugins don't use classes at all; some &lt;code&gt;require_once&lt;/code&gt; one or 2 files in their root directory; others follow PHP best practices by using a PSR-0/PSR-4 class loader, with vendor names and namespaces. This file structure isn't defined or influenced by WordPress.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another solution would be for WordPress to implement an autoloader and then every plugin and theme could opt-in to the autoloader, thus creating many top-level autoloader roots. But that seems silly because it might follow the letter of the PSR autoloaders but not the spirit, and we could end up with deeper subdirectory structures this way too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the solution I was proposing. WordPress can't force plugins to use an autoloader, the same way WordPress can't force plugins to use &lt;code&gt;$wpdb&lt;/code&gt;. As a developer if all my code (WordPress and other PHP) can follow the letter of the PSR autoloaders then it makes life much easier.
&lt;/p&gt;
&lt;p&gt;
Composer has multiple autoloaded roots in &lt;code&gt;vendor&lt;/code&gt;. WordPress would have them in &lt;code&gt;wp-content/plugins&lt;/code&gt;. I don't see how that's particularly different. Is plugin authors using deeper subdirectory structures an issue?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What I would propose instead of a PSR-0/4 auto-loader is a WordPress autoloader that is much simpler, one that has only the following method:
&lt;code&gt;register_autoload_path( $path_from_wp_content, $class_prefix )&lt;/code&gt;
It might look like this in use:
&lt;code&gt;register_autoload_path( 'plugins/my-plugin', 'My_Plugin_' )&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is virtually identical to registering with a PSR-0/4 auto-loader. Requiring the plugin to know it's path from wp-content seems like a small overhead over just using &lt;code&gt;dirname(__FILE__)&lt;/code&gt; or &lt;code&gt;__DIR__&lt;/code&gt; though. I'm all for WordPress providing a simpler API to an autoloader, but it would be great if the actual autoloader was exposed too.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then any plugin can register it's class paths in a 'register_autoload_paths' hook that I'd proposed to be called by WordPress just before 'init` and WordPress can collect all those files into an array and run a very simple autoloader when needed
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is there any reason plugins couldn't register and get access to autoloaded classes immediately if they wanted? Authors could always wrap the call to &lt;code&gt;register_autoload_path()&lt;/code&gt; in an &lt;code&gt;add_action()&lt;/code&gt; if they wanted.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
HOWEVER, the idea of an autoloader is mostly moot anyways, at least until we make some significant changes in WordPress and/or best practices for plugin and theme development all because of how WordPress plugins and themes bootstrap themselves.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PSR autoloading is already best practices for PHP in general, which I don't see any harm in WordPress at least providing minimal support for. No BC breaks are required and it's purely opt-in.
&lt;/p&gt;
&lt;p&gt;
Plugins can already bootstrap themselves with their own PSR autoloader, or they could use one provided by WordPress. WordPress provides useful tools to plugins (like &lt;code&gt;$wpdb&lt;/code&gt;) so they don't have to reinvent the wheel every time. An autoloader would be a good addition IMO.
&lt;/p&gt;
&lt;p&gt;
Grepping a recent site build, there are 9 plugins (out of 22) that have calls to &lt;code&gt;spl_autoload_register&lt;/code&gt;! How many plugins would use their own DB abstraction layer if WordPress didn't provide &lt;code&gt;$wpdb&lt;/code&gt;?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are few non-trivial plugins or themes do not add actions or filters on the 'init' hook, and most developers I've seen using classes place these hooks in the a method of the class file. And placing hook initialization code outside of classes means separating the hook from the code it invokes making maintenance more difficult. And most of my systems I've worked on have over 50 classes and even with all those classes very few of them are without actions or filters that need to be hooked on page load. So if you autoload those classes you don't end up setting the actions and filters the code requires.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think I follow this. Autoloading is just a more consistent and maintainable way of requiring classes. Instantiating them shouldn't be affected.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So yes we can get an autoloader, even a PSR-0/4 autoloader, but it would be a Pyrrhic victory. At least until WordPress adds an alternate approach to registering post types, taxonomies, and hooks I can't see an autoloader providing any real, practical benefit for WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As a plugin developer, having a standard autoloader would be a big victory. I really don't think the ability to to improve things like post type registration would be harmed by making this first step.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>iskin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 14:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:7/1392215238944456</guid>
      <description>&lt;p&gt;
Note, that Compass had no stable releases for a more that year: &lt;a class="ext-link" href="http://rubygems.org/gems/compass/versions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://rubygems.org/gems/compass/versions&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It generate a lot of unnecessary prefixes. For example, border-radius doean’t need prefixes: &lt;a class="ext-link" href="http://caniuse.com/border-radius"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://caniuse.com/border-radius&lt;/a&gt;
When Fotorama was moved from Compass it save 10 % of their CSS: &lt;a class="ext-link" href="https://twitter.com/fotoramajs/status/362686759944982528"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/fotoramajs/status/362686759944982528&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, it doesn’t support a lot of prefixes. No @keyframes prefixes in stable release. No prefixes for selectors. No prefixes for calc() function.
&lt;/p&gt;
&lt;p&gt;
But @wonderboymusic is right, Autoprefixer is only about prefixes and backward compatible is very different task (BTW, opacity never need prefixes). But you can use Compass for compatible tasks and Autoprefixer will clean it outdated prefixes and add prefixes, that it doesn’t support.
&lt;/p&gt;
&lt;p&gt;
But I think, best solution is to add own mixins for backward compatible, because most of IE hacks is very slow (and old IEs are used on very old PC) and in every case we need to think, does this feature is required or we can use graceful degradation (like in border radius, gradients).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12502 (wordpress portability) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12502#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12502#comment:6/1392213590715499</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17048" title="#17048: feature request: URLs delivered to the browser should be root-relative (closed: maybelater)"&gt;#17048&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27110.diff attached to Ticket #27110</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:57:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27110/27110.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27110/27110.diff/1392213439222136</guid>
      <description>&lt;p&gt;
Add filter to WP_Plugins_List_Table
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27110 (Allow filtering the plugin list in the admin) created</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27110/1392213407110572</guid>
      <description>&lt;p&gt;
At the moment, as decided in many tickets (such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23403" title="#23403: defect (bug): Add folder support for the mu-plugins directory (similar to how ... (closed: duplicate)"&gt;#23403&lt;/a&gt;), mu-plugins can't be loaded from subdirectories. This isn't a big issue, but it means that the must-use plugins screen can seem a little bare.
&lt;/p&gt;
&lt;p&gt;
I'd like to add a filter to allow adding extra plugins to the screen. Patch attached.
&lt;/p&gt;
&lt;p&gt;
It's &lt;strong&gt;almost&lt;/strong&gt; possible to get this working as-is, but pagination will always be broken, as &lt;code&gt;WP_Plugins_List_Table&lt;/code&gt; calls &lt;code&gt;wp_redirect&lt;/code&gt; if the pagination doesn't seem right.
&lt;/p&gt;
&lt;p&gt;
(This could also be a filter in &lt;code&gt;get_mu_plugins&lt;/code&gt;, but it has limited use for other purposes.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26986 (Editor Deletes Empty Spans) updated</title>
      
        <dc:creator>markcallen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:12:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26986#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26986#comment:10/1392210731982401</guid>
      <description>&lt;p&gt;
Where appropriate use a screen reader class to populate the span.
&lt;/p&gt;
&lt;p&gt;
TwentyFourteen has one ready, as does Bootstrap and others. You can just copy the styles to create your own if necessary.
&lt;/p&gt;
&lt;p&gt;
It would then look something like this
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;span class="genericon genericon-wordpress"&amp;gt;&amp;lt;span class="screen-reader-text"&amp;gt;WordPress&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This wins on all fronts
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Content is kept on save
&lt;/li&gt;&lt;li&gt;It stays in place when changing between Visual/Text views
&lt;/li&gt;&lt;li&gt;Content is not displayed
&lt;/li&gt;&lt;li&gt;Screen readers get something meaningful
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21970 (404 error when a post has the same slug as with a deleted (trash) page.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:04:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21970#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21970#comment:16/1392210247614728</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6331 (TinyMCE should have a code button) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 12:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6331#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6331#comment:15/1392209882069429</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by cs_shadow. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m789946"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23268 (NOT EXISTS meta query with OR relation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 12:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23268#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23268#comment:18/1392207885575402</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23268 (NOT EXISTS meta query with OR relation) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Wed, 12 Feb 2014 11:57:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23268#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23268#comment:17/1392206258852579</guid>
      <description>&lt;p&gt;
No, I did not change keywords. Trac bug?
&lt;/p&gt;
&lt;p&gt;
The from keywords are comma separated, the to keywords are not. Inconsistent. Well, this belongs in another trac.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23268 (NOT EXISTS meta query with OR relation) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Wed, 12 Feb 2014 11:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23268#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23268#comment:16/1392206037275776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ran into this bug today. Please fix for 3.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21864.patch attached to Ticket #21864</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 11:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21864/21864.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21864/21864.patch/1392205457704333</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21864 (PHPDoc incorrect with the return value of add_*_meta functions) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 11:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21864#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21864#comment:8/1392205321123004</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21864/21864.patch" title="Attachment '21864.patch' in Ticket #21864"&gt;21864.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21864/21864.patch" title="Download"&gt;​&lt;/a&gt; is a follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/24490" title="PHPDoc fixes and additions. fixes #24616."&gt;[24490]&lt;/a&gt;. Reflects that &lt;code&gt;update_*_meta()&lt;/code&gt; functions can return a meta ID.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27094 (get_boundary_post() doesn't work for custom post types) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27094#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27094#comment:2/1392202108760462</guid>
      <description>&lt;p&gt;
A workaround:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function set_post_type_for_get_boundary_post_27094( $query ) {
	$query-&amp;gt;set( 'post_type', 'page' );
}
...
add_action( 'pre_get_posts', 'set_post_type_for_get_boundary_post_27094' );
$post = get_boundary_post();
remove_action( 'pre_get_posts', 'set_post_type_for_get_boundary_post_27094' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27094 (get_boundary_post() doesn't work for custom post types) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27094#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27094#comment:1/1392201447766704</guid>
      <description>&lt;p&gt;
Perhaps we should add a filter on &lt;code&gt;$query_args&lt;/code&gt;, or make the function accept an associative array of arguments by checking &lt;code&gt;func_num_args()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27096 (Similar strings for keeping site updated) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:14:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27096#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27096#comment:4/1392200088343302</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27096 (Similar strings for keeping site updated) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27096#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27096#comment:3/1392200053348055</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27167" title="Merge two similar strings. props pavelevap. fixes #27096."&gt;27167&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Merge two similar strings. props pavelevap. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27096" title="#27096: defect (bug): Similar strings for keeping site updated (closed: fixed)"&gt;#27096&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27167]: Merge two similar strings. props pavelevap. fixes #27096.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27167/1392200052342317</guid>
      <description>&lt;p&gt;
Merge two similar strings. props pavelevap. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27096" title="#27096: defect (bug): Similar strings for keeping site updated (closed: fixed)"&gt;#27096&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27109 (Wrong $parent_file value in wp-admin/update-core.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27109#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27109#comment:1/1392199470188673</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27109 (Wrong $parent_file value in wp-admin/update-core.php) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27109/1392199428790984</guid>
      <description>&lt;p&gt;
When Updates menu item was moved from Tools to Dashboard in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13588" title="Move Tools -&amp;gt; Upgrade to Dashboard -&amp;gt; Updates. As per dev meetup ..."&gt;[13588]&lt;/a&gt;, &lt;code&gt;$parent_file&lt;/code&gt; was not updated: &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-admin/update-core.php#L459"&gt;tags/3.8.1/src/wp-admin/update-core.php#L459&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/3.8.1/src/wp-admin/update-core.php#L459" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_admin_page_parent()&lt;/code&gt; correctly overrides it with &lt;code&gt;index.php&lt;/code&gt;. This leaves me wondering if the explicit declaration is actually necessary, but we have it on other admin screens as well, so let's just update it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27108 (Add Shortcodes Support In Widgets) updated</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Wed, 12 Feb 2014 09:49:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27108#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27108#comment:2/1392198598935461</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27108#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10457" title="#10457: enhancement: Parse shortcodes in text widgets by default (closed: fixed)"&gt;#10457&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried to search before posting but never found that ticket, yikes! Thanks for the quick reply &amp;amp; I'll try to track that ticket :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #10457,​27108 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 09:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=10457%2C27108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=10457%2C27108/1392198264953103</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10457" title="#10457: enhancement: Parse shortcodes in text widgets by default (closed: fixed)"&gt;#10457&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>default-filters.php.patch attached to Ticket #27108</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Wed, 12 Feb 2014 09:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27108/default-filters.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27108/default-filters.php.patch/1392198091872620</guid>
      <description>&lt;p&gt;
Shortcodes support to text widgets...
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27108 (Add Shortcodes Support In Widgets) created</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Wed, 12 Feb 2014 09:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27108/1392198064429542</guid>
      <description>&lt;p&gt;
Use all use [shortcodes] on our WordPress sites for various talks. It's a great way to do thinks is short, that's why they're "shortcodes."
&lt;/p&gt;
&lt;p&gt;
So, I was wondering if you'd like to add shortcodes support in WordPress' text widget, or adding a new shortcode widget to WordPress code?
&lt;/p&gt;
&lt;p&gt;
I have added the patch for the shortcodes support in text widget... :)
&lt;/p&gt;
&lt;p&gt;
Your two cents?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27099 (Input validation on wp-includes/ms-blogs.php in line 52) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 07:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27099#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27099#comment:3/1392190395335838</guid>
      <description>&lt;p&gt;
&lt;code&gt;$blogname&lt;/code&gt; is, but it's still trusted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24859 (Media Library does not have a loading indicator) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 07:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24859#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24859#comment:15/1392188428462418</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
kadamwhite, still happy with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24859/24859.2.diff" title="Attachment '24859.2.diff' in Ticket #24859"&gt;24859.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24859/24859.2.diff" title="Download"&gt;​&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27093 (Cannot install WordPress when a custom user table is defined) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 07:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27093#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27093#comment:4/1392188420766924</guid>
      <description>&lt;p&gt;
Before &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25115" title="Remove 'admin' as a fallback for username in install. props tivnet, ..."&gt;[25115]&lt;/a&gt;, when installing with a custom user table, we were still forcing the 'admin' username (see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13134" title="First pass at allowing username/password selection upon install. ..."&gt;[13134]&lt;/a&gt;). However, the original intention, per &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10396#comment:5" title="Comment 5 for #10396: task (blessed): Pick an username during the install (closed: fixed)"&gt;ticket:10396:5&lt;/a&gt;, was to only create the user if there are no other administrators in the database.
&lt;/p&gt;
&lt;p&gt;
I guess we should either allow to select a username even with a custom user table, or detect the current administrator's username and use that.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27093/27093.patch" title="Attachment '27093.patch' in Ticket #27093"&gt;27093.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27093/27093.patch" title="Download"&gt;​&lt;/a&gt; is an attempt at always allowing to select a username. It throws errors if you enter an email of an existing user, but with a different username, so it needs more work if we want to go in that direction.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27093/27093.2.patch" title="Attachment '27093.2.patch' in Ticket #27093"&gt;27093.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27093/27093.2.patch" title="Download"&gt;​&lt;/a&gt; implements autodetection of the current administrator's username instead of a hard-coded fallback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25987 (CSS text-rendering property causing issues with headlines in Chrome) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 06:27:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25987#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25987#comment:2/1392186462790489</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 12 Feb 2014 05:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:15/1392181609075918</guid>
      <description>&lt;p&gt;
It looks like the tests in &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/export/class-wp-export-query.php"&gt;/tests/phpunit/tests/export/class-wp-export-query.php&lt;/a&gt; need to be expanded.
&lt;/p&gt;
&lt;p&gt;
Easier said than done...
&lt;/p&gt;
&lt;p&gt;
If you run &lt;code&gt;phpunit --group export&lt;/code&gt; results in &lt;code&gt;Tests: 33, Assertions: 0, Skipped: 33.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;To forcibly run the skipped tests for an open ticket, you may specify that ticket as a group:&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
If you run &lt;code&gt;phpunit --group 22435&lt;/code&gt; results in &lt;code&gt;Tests: 39, Assertions: 0, Skipped: 39.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
If I run phpunit with the &lt;code&gt;--verbose&lt;/code&gt; switch various errors occur:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Export_Query class doesn't exist&lt;/code&gt;
&lt;code&gt;wp_export function doesn't exist&lt;/code&gt;
&lt;code&gt;WP_Export_Returner class doesn't exist&lt;/code&gt;
&lt;code&gt;WP_Post_IDs_Iterator class doesn't exist&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
All the tests &lt;code&gt;class-wp-export-query.php&lt;/code&gt; are attached to &lt;code&gt;@group export&lt;/code&gt; &amp;amp; &lt;code&gt;@ticket 22435&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22435" title="#22435: enhancement: Export API (new)"&gt;#22435&lt;/a&gt; Export API.
&lt;/p&gt;
&lt;p&gt;
Looking at &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26370" title="When setting `WP_TESTS_FORCE_KNOWN_BUGS` to `true`, it is preferable ..."&gt;r26370&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"When setting WP_TESTS_FORCE_KNOWN_BUGS to true, it is preferable that some forced tests are still skipped when they call classes or functions that do not exist, producing fatal errors."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is all pretty much getting beyond me now and it hurts ;)
&lt;/p&gt;
&lt;p&gt;
Some extra feedback and guidance would be extremely helpful please :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:10/1392181159740474</guid>
      <description>&lt;p&gt;
This would not set thumbnails_cached to true. It's possible someone is checking that de facto public property, no?
&lt;/p&gt;
&lt;p&gt;
I was not aware of a situation where $wp_query-&amp;gt;posts is empty but $wp_query-&amp;gt;post is not. Though perhaps if that is actually something that occurs, we should return false after all? (Ideally, posts&lt;a class="missing changeset" title="No changeset 0 in the repository"&gt;[0]&lt;/a&gt; actually gets populated with post, but that's a separate thing.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:48:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:9/1392180495043641</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27166" title="Don't iterate over `$wp_query-&amp;gt;posts` in ..."&gt;27166&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't iterate over &lt;code&gt;$wp_query-&amp;gt;posts&lt;/code&gt; in &lt;code&gt;update_post_thumbnail_cache()&lt;/code&gt; if it is empty. Adds unit tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props SergeyBiryukov, for the original patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26321" title="#26321: defect (bug): Warning message for update_post_thumbnail_cache() (closed: invalid)"&gt;#26321&lt;/a&gt;.&lt;br /&gt;
 &lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27166]: Don't iterate over `$wp_query-&gt;posts` in ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27166/1392180494445040</guid>
      <description>&lt;p&gt;
Don't iterate over &lt;code&gt;$wp_query-&amp;gt;posts&lt;/code&gt; in &lt;code&gt;update_post_thumbnail_cache()&lt;/code&gt; if it is empty. Adds unit tests.
&lt;/p&gt;
&lt;p&gt;
Props SergeyBiryukov, for the original patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26321" title="#26321: defect (bug): Warning message for update_post_thumbnail_cache() (closed: invalid)"&gt;#26321&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:41/1392180249682520</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:40/1392180230498066</guid>
      <description>&lt;p&gt;
Added &lt;a href="https://core.trac.wordpress.org/attachment/ticket/21811/trac-21811-image-edit-view-01.patch"&gt;trac-21811-image-edit-view-01.patch&lt;/a&gt; which attempts to do the minimum to integrate image-edit.js into the EditImage view by passing the view itself to imageEdit.open() so we can set the previous state on the controller upon imageEdit.close().
&lt;/p&gt;
&lt;p&gt;
What has me completely stumped is why setting the state to 'image-edit' in an ImageDetails View (ie: editing an embedded attachment in tinyMCE) works so well, but attempting to set the same state in the same way within an Attachment.Details view (for example, when choosing a Featured Image) fails silently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:66/1392180017313453</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:65" title="Comment 65"&gt;georgestephanis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If that's something that we don't wanna support, that's fine, just wanted to drop in an explanation of why it had been there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I only removed those in the patch I uploaded because others suggested they were not needed. I personally have not strong opinion on that topic either way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>trac-21811-image-edit-view-01.patch attached to Ticket #21811</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21811/trac-21811-image-edit-view-01.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21811/trac-21811-image-edit-view-01.patch/1392179942231985</guid>
      <description>&lt;p&gt;
Builds on gcorne's patch by passing in the view to imageEdit, so that we can properly close the editor and revert to the previous view.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:39/1392179861532179</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21811#comment:37" title="Comment 37"&gt;paaljoachim&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about max image size like this plugin?:
&lt;a class="ext-link" href="http://wordpress.org/plugins/imsanity/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/plugins/imsanity/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like this idea a lot, but I don't feel that it's really in the scope of what this ticket is trying to accomplish. Perhaps you may wish to submit a new ticket for an enhancement, see if it gains any traction?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:38/1392179722673391</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21811#comment:36" title="Comment 36"&gt;dnavarrojr&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd love to see the ability to set minimum image dimensions for uploads.  And the possibility of extending the canvas to meet those dimensions... ie, minimum dimensions are 400x300 and a 200x225 image is uploaded, so it's placed in the middle of a white 400x300 canvas.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure that this is a good thing to enable globally - I mean, that behaviour may not &lt;em&gt;always&lt;/em&gt; be the desired behaviour. My feeling is that this would be plugin territory, but others may have different opinions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25623 (The design of update_option etc makes race conditions likely to happen) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:28:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25623#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25623#comment:3/1392179334786390</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23330 (Allow autoloading all options, not just autoload = yes options) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23330#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23330#comment:13/1392179310133060</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:19:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:65/1392178794250076</guid>
      <description>&lt;p&gt;
Just a bit of clarification, the reason I had included the option to fully duck-punch the functionality -- and pass in the $load and $require_once was so that it could -- for example -- clock analytics on how long each template include takes to run on average, and cache ones as determined by the back-end.
&lt;/p&gt;
&lt;p&gt;
The ability to add an absolute path and have it included is spiffy for the latter part, but there's no good way to clock the time it takes for the include to evaluate, short of faking a duck-punch with the existing filter and snagging the arguments passed in via a &lt;code&gt;debug_backtrace()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
If that's something that we don't wanna support, that's fine, just wanted to drop in an explanation of why it had been there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:6/1392178634070269</guid>
      <description>&lt;p&gt;
Seems like this is just an intermediate step.
&lt;/p&gt;
&lt;p&gt;
I would much rather we go all-in and use Compass. I just messed around with grunt-autoprefixer + LESS for an hour, I don't think it is mind-blowingly great. Any tool should take care of all weird back-compat-needing properties like &lt;code&gt;opacity&lt;/code&gt;. autoprefixer doesn't touch it, so a mixin is required. Compass does: &lt;a class="ext-link" href="http://compass-style.org/examples/compass/css3/opacity/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://compass-style.org/examples/compass/css3/opacity/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Prefixes: &lt;a class="ext-link" href="http://compass-style.org/examples/compass/css3/border_radius/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://compass-style.org/examples/compass/css3/border_radius/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13239.8a.diff attached to Ticket #13239</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:07:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/13239.8a.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/13239.8a.diff/1392178075437178</guid>
      <description>&lt;p&gt;
Fixed typo in 13239.8.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:64/1392178049199579</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:63" title="Comment 63"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I thought you meant something more like: ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why would you want to evaluate the expression &lt;code&gt;$stylesheet . '/' . $template_name&lt;/code&gt; twice?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The code currently calls &lt;code&gt;get_stylesheet_directory()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; once per iteration.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not for the one the matches, it's called twice.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(The &lt;code&gt;else if ( $filepath = file_exists( $filepath = get_template_directory() . '/' . $template_name ) )&lt;/code&gt; line also means &lt;code&gt;$filepath&lt;/code&gt; ends up being &lt;code&gt;true&lt;/code&gt; rather than the path. :) )
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Doh!  Stupid typo &lt;em&gt;(so hard (for me) to get these right the first time. It's not for lack of trying.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
13239.8a.diff will come next.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:63/1392177608311425</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:62" title="Comment 62"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="5"&gt;&lt;li&gt;Captured value of expressions that called &lt;code&gt;get_stylesheet_directory()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; into variable &lt;code&gt;$filepath&lt;/code&gt; so those functions need not be called twice &lt;em&gt;(and so that value is easier to debug within &lt;code&gt;locate_template()&lt;/code&gt;).&lt;/em&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I thought you meant something more like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$stylesheet = get_stylesheet_directory();
// ...
} else if ( file_exists( $stylesheet . '/' . $template_name ) ) {
         $located = $stylesheet . '/' . $template_name;
         break;
&lt;/pre&gt;&lt;p&gt;
(Ditto for template directory.)
&lt;/p&gt;
&lt;p&gt;
The code currently calls &lt;code&gt;get_stylesheet_directory()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; once per iteration.
&lt;/p&gt;
&lt;p&gt;
(The &lt;code&gt;else if ( $filepath = file_exists( $filepath = get_template_directory() . '/' . $template_name ) )&lt;/code&gt; line also means &lt;code&gt;$filepath&lt;/code&gt; ends up being &lt;code&gt;true&lt;/code&gt; rather than the path. :) )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 03:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:62/1392176373748378</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:61" title="Comment 61"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I agree if if we end up going with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/13239/13239.2.diff" title="Attachment '13239.2.diff' in Ticket #13239"&gt;13239.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/13239/13239.2.diff" title="Download"&gt;​&lt;/a&gt; (plus hook docs).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just added &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/13239/13239.8.diff" title="Attachment '13239.8.diff' in Ticket #13239"&gt;13239.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/13239/13239.8.diff" title="Download"&gt;​&lt;/a&gt; based on 13239.2.diff with the following changes:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Adds hook docs.
&lt;/li&gt;&lt;li&gt;Follows new bracing coding standard &lt;em&gt;(i.e. don't use single line &lt;code&gt;if()&lt;/code&gt; without braces.)&lt;/em&gt;
&lt;/li&gt;&lt;li&gt;Added spaces in expressions to be consistent with WordPress coding standard
&lt;/li&gt;&lt;li&gt;Added ability to short-circuit loading a template file by having the filter return &lt;code&gt;false&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Captured value of expressions that called &lt;code&gt;get_stylesheet_directory()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; into variable &lt;code&gt;$filepath&lt;/code&gt; so those functions need not be called twice &lt;em&gt;(and so that value is easier to debug within &lt;code&gt;locate_template()&lt;/code&gt;).&lt;/em&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>13239.8.diff attached to Ticket #13239</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 03:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/13239.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/13239.8.diff/1392175929309343</guid>
      <description>&lt;p&gt;
Based on 13239.2, adds hook docs, follows new brace standard, captures/uses $filepath and adds short-circuit.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 12 Feb 2014 03:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:15/1392174035340738</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21300#comment:12" title="Comment 12"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
-1 on a PSR-0 or PSR-4 compatible auto-loader and on the use of Composer for plugins and themes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also agreed with Mike on this one. There's plenty of ways to implement it (and I do it differently myself at times), and none of them fit the WP paradigm. On the other hand, it's trivial to implement it yourself (mine's 46 lines of code).
&lt;/p&gt;
&lt;p&gt;
Also -1 on Composer for plugins/themes, but there's some interesting code in there that can be extracted for dependencies (their port of the libzypp dependency resolver).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 02:57:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:14/1392173861031094</guid>
      <description>maybelater: &lt;p&gt;
I'm not sure there's a single line in MikeSchinkel's two comments that I disagree with.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 02:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:13/1392173617255310</guid>
      <description>&lt;p&gt;
Oh, and my issue with Composer for plugins and themes is that Composer does not map to the problem space that is user-added plugins and themes.  Composer is about managing shared libraries but WordPress doesn't support shared libraries.
&lt;/p&gt;
&lt;p&gt;
Plus Composer is very strict in its directory layout; it puts everything under a &lt;em&gt;"vendor"&lt;/em&gt; directory and that is not how plugins and themes store their file, unless we were to &lt;em&gt;(optionally)&lt;/em&gt; have vendor directories in each and every plugin and theme.
&lt;/p&gt;
&lt;p&gt;
OTOH having multiple vendor directories gets around one of the main benefits of Composer IMO and that's for Composer to be able to bring in &lt;strong&gt;only one&lt;/strong&gt; copy of a latest compatible version of a given library even though multiple other libraries may reference it. Basically it's the &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Highlander_(film)"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Highlander mantra&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
And that's a problem because as stated above WordPress has no built-in way to manage libraries used by multiple plugins/themes, especially when the versions used are different but all the function/class name are the same. So WordPress plugins/themes really can't use reusable libraries, and reusable libraries is what Composer is about. &lt;em&gt;(WordPress websites could use Composer if you ignore its opinionated directory structure, but that's not the use-case being discussed here.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
So I don't think we can apply Composer to work with plugin and theme dependencies unless and until at least WordPress provides mechanisms to share libraries across plugins/themes. I would instead like to see WordPress use some of the concepts in Composer to solve the problem in it's own WordPress-ish way, including adding a way to share libraries across plugins/themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25987 (CSS text-rendering property causing issues with headlines in Chrome) closed</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Wed, 12 Feb 2014 02:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25987#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25987#comment:1/1392172721304551</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 02:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:12/1392172559745324</guid>
      <description>&lt;p&gt;
-1 on a PSR-0 or PSR-4 compatible auto-loader and on the use of Composer for plugins and themes.
&lt;/p&gt;
&lt;p&gt;
Those three are all PHP &lt;em&gt;"best practices,"&lt;/em&gt; but I think most of us know that WordPress has it's own best practices that are at times conflicting with PHP best practices, and for good reason.
&lt;/p&gt;
&lt;p&gt;
PHP best practices for configuration management typically target those who are setting up development, testing, staging and production environments where PHP will be deployed and used and where code is deployed by either developers or system administrator.  All of those features work very well for that use-case, but WordPress has a different primary use-case.
&lt;/p&gt;
&lt;p&gt;
The WordPress use-case is to have the core code deployed by site builders, many of whom cannot write PHP code, or even by automated app installers like Fantasico. And then plugin and theme code is often deployed by end-users. The WordPress use-case uses well-known directory structures, i.e. &lt;code&gt;/wp-content/themes&lt;/code&gt;, &lt;code&gt;/wp-content/plugins&lt;/code&gt; where self-contained and all-inclusive &lt;em&gt;"packages"&lt;/em&gt; are installed; this minimizes users needing to be involved on a technical level.
&lt;/p&gt;
&lt;p&gt;
Across plugins and themes there is potentially a large number of classes to autoload, but those classes do not follow the PSR-0/4 autoloader standard because there is no single top-level directory to load from, nor are there really vendor names. You can ignore the lack of common root and simulate vendor name with plugin name but then the class files either need to be in the root of the theme/plugin or they need to be stored in subdirectories that would be considered namespaces themselves. All-in-all this feels like a round peg in a square hole.
&lt;/p&gt;
&lt;p&gt;
Another solution would be for WordPress to implement an autoloader and then every plugin and theme  could opt-in to the autoloader, thus creating many top-level autoloader roots. But that seems silly because it might follow the letter of the PSR autoloaders but not the spirit, and we could end up with deeper subdirectory structures this way too.
&lt;/p&gt;
&lt;p&gt;
What I would propose instead of a PSR-0/4 auto-loader is a WordPress autoloader that is much simpler, one that has only the following method:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_autoload_path( $path_from_wp_content, $class_prefix )
&lt;/pre&gt;&lt;p&gt;
It might look like this in use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_autoload_path( 'plugins/my-plugin', 'My_Plugin_' )
&lt;/pre&gt;&lt;p&gt;
Then any plugin can register it's class paths in a &lt;code&gt;'register_autoload_paths'&lt;/code&gt; hook that I'd proposed to be called by WordPress just before &lt;code&gt;'init&lt;/code&gt;` and WordPress can collect all those files into an array and run a very simple autoloader when needed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _autoload( $class_name ) {
	if ( isset( $this-&amp;gt;_autoload_classes[$class_name] ) ) {
		require( $this-&amp;gt;_autoload_classes[$class_name] );
	}
}
&lt;/pre&gt;&lt;p&gt;
And for those concerned the overhead of directory scans we could allow optional hardcoded autoloader registration like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_autoload_path( 'plugins/my-plugin', array(
	'My_Plugin_Foo_Class' =&amp;gt; 'class-foo.php',
	'My_Plugin_Bar_Class' =&amp;gt; 'class-bar.php',
	'My_Plugin_Baz_Class' =&amp;gt; 'class-baz.php',
));
&lt;/pre&gt;&lt;p&gt;
FWIW I've implemented a library where you can see the autoloader &lt;a class="ext-link" href="https://github.com/newclarity/ExoWP/blob/master/core/class-autoloader.php#L62"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt; although it doesn't support the hardcoding I mention above.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;HOWEVER, the idea of an autoloader is mostly moot anyways&lt;/strong&gt;, at least until we make some significant changes in WordPress and/or best practices for plugin and theme development all because of how WordPress plugins and themes bootstrap themselves.
&lt;/p&gt;
&lt;p&gt;
There are few non-trivial plugins or themes do not add actions or filters on the 'init' hook, and most developers I've seen using classes place these hooks in the a method of the class file. And placing hook initialization code outside of classes means separating the hook from the code it invokes making maintenance more difficult. And most of my systems I've worked on have over 50 classes and even with all those classes very few of them are without actions or filters that need to be hooked on page load. So if you autoload those classes you don't end up setting the actions and filters the code requires.
&lt;/p&gt;
&lt;p&gt;
So yes we can get an autoloader, even a PSR-0/4 autoloader, but it would be a Pyrrhic victory. At least until WordPress adds an alternate approach to registering post types, taxonomies, and hooks I can't see an autoloader providing any real, practical benefit for WordPress.
&lt;/p&gt;
&lt;p&gt;
BTW, for the library I mention above the approach I'm using is a different run-mode for development vs. deployment; in the former all classes are loaded and then the array of classes and class paths is serialized to a file that gets loaded when deployed for production. This works well for building sites where version control is used between development source and production deployment but would not really work well for the normative WordPress use-case of end-users adding plugins and themes on live sites.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21300#comment:5" title="Comment 5"&gt;griffinjt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've implemented a PSR-0 compliant autoloader in &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/soliloquy-lite/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Soliloquy&lt;/a&gt; and so far there have been no issues (over 10k+ downloads total for free and paid) that have been reported.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm. Didn't want to pick on your work here, but since you presented it as an example of an autoloader done right I figured you'd be okay to open it for discussion.
&lt;/p&gt;
&lt;p&gt;
I just downloaded Soliliquy Lite and compared to &lt;a class="ext-link" href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PSR-0&lt;/a&gt; and unless I'm missing something Soliliquy Lite is not PSR-0 compatible because it doesn't use &lt;a class="ext-link" href="http://www.php.net/manual/en/language.namespaces.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP namespaces&lt;/a&gt;, and that's appears to be a requirement in PSR-0 &lt;em&gt;(as well as in PSR-4):&lt;/em&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;- A fully-qualified namespace and class must have the following structure:
&lt;/em&gt;&lt;code&gt;\&amp;lt;Vendor Name&amp;gt;\(&amp;lt;Namespace&amp;gt;\)*&amp;lt;Class Name&amp;gt;&lt;/code&gt;
&lt;em&gt;- Each namespace must have a top-level namespace ("Vendor Name").
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;As an aside, you could add Namespaces but until core adds Namespaces and sets a precent for usage in WordPress I'm going to stick with "poor-man's namespacing" (i.e. prefixes.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
More importantly, it appears  you are loading hooks in the constructor of most of your classes, and then in the main &lt;code&gt;'init'&lt;/code&gt; hook you are creating instances of all those classes &lt;em&gt;(in the admin)&lt;/em&gt; or just 3 of the 9 outside the admin. And outside the admin don't appear to be creating new instances of the others. So of the two main code paths admin and front end you are always instantiating the same classes, per code path.
&lt;/p&gt;
&lt;p&gt;
And in your autoloader you are using a &lt;code&gt;file_exists()&lt;/code&gt; call before your &lt;code&gt;require()&lt;/code&gt; call so your plugin is doing double work for each file you are loading. If you only needed to load a small subset of classes autoloading is definitely better, but if you are going to autoload every class every time anyway I'd argue you'd be better off getting rid of the autoloader and just doing direct &lt;code&gt;require()&lt;/code&gt;s for the classes you plan to instantiate within &lt;code&gt;init&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
So I recommend we close this ticket as &lt;strong&gt;&lt;em&gt;maybelater.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098#comment:6/1392166299365812</guid>
      <description>&lt;p&gt;
I don't know if it's worth patching older themes for it, but in general I'd follow core.
&lt;/p&gt;
&lt;p&gt;
The basic argument for omitting @return void, for what it's worth, is rooted in the fact that we're always backwards compatible. For us, changing the return value of a function is pretty much a no-no. However, I have no qualms with adding a return value to a function that didn't have one previously, and we've done that a number of times. To me, @return void "bakes in" that the function returns no value, making it explicit. It's also possible to have the opposite feeling: that @return void specifically tells developers to not rely on a return value, at least until further notice. You could see it both ways.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098#comment:5/1392165313891136</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27098#comment:4" title="Comment 4"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When we developed the standard last fall, the decision was made to ignore the use of &lt;code&gt;@return void&lt;/code&gt; in the bundled themes, as they had been utilizing that style since Twenty Ten.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The decision reference: &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-sfd&amp;amp;day=2013-09-25&amp;amp;sort=asc#m48668"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://irclogs.wordpress.org/chanlog.php?channel=wordpress-sfd&amp;amp;day=2013-09-25&amp;amp;sort=asc#m48668&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think there's a good argument in favor of removing them altogether from the bundled themes -- this would bring that code in-line with the core standard.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Side note: It's important to remember that while the core inline documentation standard is largely based on and inspired by the phpDocumenter spec, it doesn't adhere to it 100 percent.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also to add, that some of the recent changes are based on the draft PSR-5, of which many code editors and phpDocumentor itself doesn't follow fully yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:08:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:14/1392163721090036</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26669/26669.3.diff" title="Attachment '26669.3.diff' in Ticket #26669"&gt;26669.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26669/26669.3.diff" title="Download"&gt;​&lt;/a&gt; is a quick split proposal using comments in wp-admin.css, a lot of it based on jorbin's work. Some thoughts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The number of times you will see some markers repeated (common, forms, etc.) is a pretty clear indicator of the mess we're in.
&lt;/li&gt;&lt;li&gt;I'm leaving plugins-related CSS as part of list tables as well as common (the plugin details view).
&lt;/li&gt;&lt;li&gt;Themes is separate from appearance, due to the amount of CSS and assuming further changes due to continued work to align the manage and install screens.
&lt;/li&gt;&lt;li&gt;Not sure if users-tools-settings should be separate, or just put into common for now. it's a fairly small amount of CSS.
&lt;/li&gt;&lt;li&gt;Press This has two blobs, one currently indicated as part of settings (see above), the other as part of common. Not sure what to do with it.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:03:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:13/1392163381886112</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by helen. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m789680"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26669.3.diff attached to Ticket #26669</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26669/26669.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26669/26669.3.diff/1392163305481094</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 23:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:5/1392162261807499</guid>
      <description>&lt;p&gt;
-prefix-free is cool, but it doesn't solve the problem of making core.svn harder to patch from. I wouldn't mind eventually abandoning core.svn as a place to patch from, but I don't think holding out for a little while longer is a bad thing.
&lt;/p&gt;
&lt;p&gt;
Or, rather, -prefix-free is something we'd need to do for any site using SCRIPT_DEBUG, not just /src.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 23:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:4/1392162076082253</guid>
      <description>&lt;p&gt;
One possible solution to the problem of keeping src running pretty would be to use &lt;a class="ext-link" href="http://leaverou.github.io/prefixfree/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://leaverou.github.io/prefixfree/&lt;/a&gt; only in the src directory.  This does come at the cost that using two different tools means src and build may not look perfectly the same, but it would allow for us to run src in prettier than IE7 mode while also eliminating prefixes from our core CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27107 (Rethink how the "special characters" TinyMCE modal works) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 23:32:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27107#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27107#comment:2/1392161531887194</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27165" title="TinyMCE: fix styling in the Charmap modal so the click targets are as ..."&gt;27165&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: fix styling in the Charmap modal so the click targets are as large as the table cells. Remove the "Close" button and close the modal after inserting the special char. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27107" title="#27107: enhancement: Rethink how the &amp;#34;special characters&amp;#34; TinyMCE modal works (closed: fixed)"&gt;#27107&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27165]: TinyMCE: fix styling in the Charmap modal so the click targets are as ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 23:32:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27165</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27165/1392161531053562</guid>
      <description>&lt;p&gt;
TinyMCE: fix styling in the Charmap modal so the click targets are as large as the table cells. Remove the "Close" button and close the modal after inserting the special char. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27107" title="#27107: enhancement: Rethink how the &amp;#34;special characters&amp;#34; TinyMCE modal works (closed: fixed)"&gt;#27107&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26952 (Style TinyMCE modals to match WordPress admin styling) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 11 Feb 2014 23:06:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26952#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26952#comment:23/1392159962012845</guid>
      <description>&lt;p&gt;
Attached two modal mockups above.
&lt;/p&gt;
&lt;p&gt;
Still to-do: the text formatting (paragraph, header, etc.) dropdown, the color dropdown, and the media attachment modal helen posted above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27097 (Twenty Fourteen: Scroll lag in Windows) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Tue, 11 Feb 2014 23:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27097#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27097#comment:1/1392159825144468</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for the report. Any chance of a screencast to see it in action?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tinymce-char-modal.jpg attached to Ticket #26952</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 11 Feb 2014 23:00:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26952/tinymce-char-modal.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26952/tinymce-char-modal.jpg/1392159614894638</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>tinymce-help-modal.jpg attached to Ticket #26952</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:59:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26952/tinymce-help-modal.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26952/tinymce-help-modal.jpg/1392159594538763</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27107 (Rethink how the "special characters" TinyMCE modal works) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:59:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27107#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27107#comment:1/1392159541565685</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by melchoyce. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-02-11&amp;amp;sort=asc#m158044"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27107 (Rethink how the "special characters" TinyMCE modal works) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27107/1392159505485675</guid>
      <description>&lt;p&gt;
In TinyMCE, the "special characters" modal doesn't work as expected:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Clicking on a character adds it to your post behind the modal, but is sometimes hidden behind the modal itself. Since the modal stays open, it's not always clear that clicking on a character does anything.
&lt;/li&gt;&lt;li&gt;As previously stated, the modal stays open once you've added a character. While this is great if you want to add a couple, how often are users adding more than one special character at a time?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Instead, how about when you click on a character, it inserts into your post and closes the modal?
&lt;/p&gt;
&lt;p&gt;
Further, the click-target doesn't cover the entire box containing the character, so it's easy to click to the side of the character and wonder why it's not inserting. The entire box surrounding the character should be clickable.
&lt;/p&gt;
&lt;p&gt;
See today's &lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-02-11&amp;amp;sort=asc#m157948"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;conversation in #wordpress-ui about the modal&lt;/a&gt; for more background and discussion.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) closed</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:9/1392158302047086</guid>
      <description>invalid: &lt;p&gt;
Default themes aren't parent works. They are a mix of original code, derivative work from previous default themes — and cases like Twenty Fourteen, Twenty Eleven, and Twenty Ten — derivative work of another theme for which the copyright holder has directly contributed to the WordPress project under GPLv2, like any other patch or contribution.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) updated</title>
      
        <dc:creator>jcastaneda</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:8/1392158287704801</guid>
      <description>&lt;p&gt;
So why limit to just Twenty Fourteen and add the other core themes as well? Curious.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27106 (Default styles inside the Visual editor) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27106#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27106#comment:1/1392158281802430</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by azaozz. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-02-11&amp;amp;sort=asc#m157993"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) updated</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:7/1392158229348956</guid>
      <description>&lt;p&gt;
_s isn't a parent theme but works created using it are absolutely derivative works.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="https://github.com/Automattic/_s/issues/10"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/_s/issues/10&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Commit &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/24832" title="Importing the Further theme, first pass at the new default theme for ..."&gt;[24832]&lt;/a&gt; is very explicit about Twenty Fourteen being a derivative work of Further, which is (C) Automattic.
&lt;/p&gt;
&lt;p&gt;
I think this is a matter of adhering to clear rules set forth by the GPL, not about themes being special or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>selected-image.png attached to Ticket #27106</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:33:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27106/selected-image.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27106/selected-image.png/1392158019883778</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>nextpage.png attached to Ticket #27106</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:32:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27106/nextpage.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27106/nextpage.png/1392157931739686</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>more.png attached to Ticket #27106</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27106/more.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27106/more.png/1392157898136003</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27106 (Default styles inside the Visual editor) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27106/1392157865791755</guid>
      <description>&lt;p&gt;
Some of the styling inside the editor has changed a bit: the appearance of the &lt;code&gt;more&lt;/code&gt; and &lt;code&gt;nextpage&lt;/code&gt; tags, the buttons that appear on clicking an image, the gallery placeholder has a "selected" state, etc.
&lt;/p&gt;
&lt;p&gt;
This ticket is to improve and "tie up" these changes together and to improve the default styling inside the editor.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) updated</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:29:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:6/1392157793017767</guid>
      <description>&lt;p&gt;
Technically, _s is not a parent theme, and themes built using it as a starting point are not child themes (I have heard that so many times I say it in my sleep).
&lt;/p&gt;
&lt;p&gt;
I think this opens a bigger debate about crediting earlier work, forking, and putting private company attributions into WordPress.org files (the overlap of personnel is not lost on me). Did we credit Theme Foundry when Drew designed a default theme? Did we credit Ian's Kirby when Ian was asked to contribute it to core? I would argue that in this case, a decision was made to contribute the use of _s to core/the project because that's what the folks working on the theme wanted to work on, and did it knowing how contributing to the default theme works (i.e., you get credit as a contributor, but if you reuse code you made before, your company doesn't get credit for that).
&lt;/p&gt;
&lt;p&gt;
Default themes are special, and a little bit different (IMO) than privately created themes that we host in the directory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27096 (Similar strings for keeping site updated) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27096#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27096#comment:2/1392157506046362</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) updated</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:20:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:5/1392157235381350</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27104#comment:4" title="Comment 4"&gt;iandstewart&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It goes MUCH further...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see what you've done here.
&lt;/p&gt;
&lt;p&gt;
Completely agreed about one level in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) updated</title>
      
        <dc:creator>iandstewart</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:4/1392157132160310</guid>
      <description>&lt;p&gt;
It goes MUCH further, Philip and Konstantin. I won't even list it, it's almost silly how long it would be. If we did add this to Twenty Fourteen somewhere I would only go one level in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) reopened</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:16:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098#comment:4/1392156991609775</guid>
      <description>&lt;p&gt;
Re-opening for more discussion.
&lt;/p&gt;
&lt;p&gt;
The core &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/inline-documentation-standards/php-documentation-standards/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;inline docs standard&lt;/a&gt; -- which is our first-and-foremost reference here, doesn't recommend using &lt;code&gt;@return void&lt;/code&gt; &lt;strong&gt;anywhere outside of the bundled themes&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
When we developed the standard last fall, the decision was made to ignore the use of &lt;code&gt;@return void&lt;/code&gt; in the bundled themes, as they had been utilizing that style since Twenty Ten. The &lt;code&gt;@return void&lt;/code&gt; tags aren't used in any consistency anywhere else in Core.
&lt;/p&gt;
&lt;p&gt;
I think there's a good argument in favor of removing them altogether from the bundled themes -- this would bring that code in-line with the core standard.
&lt;/p&gt;
&lt;p&gt;
Side note: It's important to remember that while the core inline documentation standard is largely based on and inspired by the phpDocumenter spec, it doesn't adhere to it 100 percent. Our standard is largely based on existing practices -- regardless of whether they might be considered "good" or "bad".
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:3/1392156722617931</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin_work. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-11&amp;amp;sort=asc#m789520"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:12/1392156722294598</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin_work. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-11&amp;amp;sort=asc#m789519"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27099 (Input validation on wp-includes/ms-blogs.php in line 52) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27099#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27099#comment:2/1392156346293722</guid>
      <description>invalid: &lt;p&gt;
If you're going to submit any more static code analysis tickets, please read the ticket form first:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do not report potential security vulnerabilities here.
See the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/reporting-security-vulnerabilities/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Security FAQ&lt;/a&gt; and contact security@….
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
This is invalid. This is a backreference, not a variable.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27101 (Input Validation on wp-admin/plugins.php in line 147) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27101#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27101#comment:1/1392156249678225</guid>
      <description>invalid: &lt;p&gt;
If you're going to submit any more static code analysis tickets, please read the ticket form first:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do not report potential security vulnerabilities here.
See the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/reporting-security-vulnerabilities/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Security FAQ&lt;/a&gt; and contact security@….
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
This is invalid. The value is trusted.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27102 (Input validation on wp-admin/update.php in line 87) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 22:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27102#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27102#comment:1/1392156190201986</guid>
      <description>invalid: &lt;p&gt;
If you're going to submit any more static code analysis tickets, please read the ticket form first:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do not report potential security vulnerabilities here.
See the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/reporting-security-vulnerabilities/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Security FAQ&lt;/a&gt; and contact security@….
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
This is invalid. The value is trusted.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) updated</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:3/1392155881991448</guid>
      <description>&lt;p&gt;
Relevant commit for the explicit mention of Further: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/24832" title="Importing the Further theme, first pass at the new default theme for ..."&gt;[24832]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) updated</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:55:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:2/1392155705654038</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27104#comment:1" title="Comment 1"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder where that chain end, too. :) Twenty Fourteen &amp;gt; Further &amp;gt; _s &amp;gt; Toolbox, and I'm sure it goes on beyond that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;ian-support: Anyway, so Twenty Ten &amp;gt; Toolbox &amp;gt; Duster &amp;gt; Twenty Eleven and then I reviewed Toolbox for improvements after Twenty Eleven launched and then Toolbox &amp;gt; _s
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://themeshaper.com/2012/02/13/introducing-the-underscores-theme/comment-page-1/#comment-11707"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Link&lt;/a&gt; for the curious.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27103 (Input validation on wp-settings.php in line 311) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:53:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27103#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27103#comment:1/1392155594895672</guid>
      <description>invalid: &lt;p&gt;
If you're going to submit any more static code analysis tickets, please read the ticket form first:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do not report potential security vulnerabilities here.
See the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/reporting-security-vulnerabilities/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Security FAQ&lt;/a&gt; and contact security@….
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
This is invalid. The value is validated and trusted.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104#comment:1/1392155565100058</guid>
      <description>&lt;p&gt;
I wonder where that chain end, too. :) Twenty Fourteen &amp;gt; Further &amp;gt; _s &amp;gt; Toolbox, and I'm sure it goes on beyond that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27105 (Input validation on wp-includes/SimplePie/Cache/MySQL.php in line 344) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:51:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27105#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27105#comment:1/1392155470040897</guid>
      <description>invalid: &lt;p&gt;
If you're going to submit any more static code analysis tickets, please read the ticket form first:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do not report potential security vulnerabilities here.
See the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/reporting-security-vulnerabilities/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Security FAQ&lt;/a&gt; and contact security@….
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
This is invalid. The query is properly prepared. We also don't use SimplePie's MySQL cache in WordPress anyway.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27090 (WordPress XML-RPC method returns error but still posts) updated</title>
      
        <dc:creator>IndigoJo</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:50:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27090#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27090#comment:5/1392155407895168</guid>
      <description>&lt;p&gt;
I've found the function to get the error string (which is in the Qt class inherited by QNetworkReply) so I've rewritten the app to output it, so next time I try submitting an entry I'll post it here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27105 (Input validation on wp-includes/SimplePie/Cache/MySQL.php in line 344) created</title>
      
        <dc:creator>OswaldoMG</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:46:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27105/1392155185599011</guid>
      <description>&lt;p&gt;
SQL Injection
&lt;/p&gt;
&lt;p&gt;
This database query contains a SQL injection flaw. The function call constructs a dynamic SQL query using a variable derived from user-supplied input. An attacker could exploit this flaw to execute arbitrary SQL queries against the database.
&lt;/p&gt;
&lt;p&gt;
Found by static analysis application.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
344   $query = $this-&amp;gt;mysql-&amp;gt;prepare($sql);
&lt;/pre&gt;&lt;p&gt;
Recommendations: Avoid dynamically constructing SQL queries. Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query. Always validate user-supplied input to ensure that it conforms to the expected format, using centralized data validation routines when possible.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:42:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:103/1392154955105688</guid>
      <description>&lt;p&gt;
This. is. great! Thanks!
&lt;/p&gt;
&lt;p&gt;
Just briefly tested this, and it seems that &lt;code&gt;load_plugin_textdomain()&lt;/code&gt; (and related functions) might also need some treatment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27104 (Twenty Fourteen: Add Proper Copyright/License Attribution in style.css) created</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27104/1392154948502967</guid>
      <description>&lt;p&gt;
Currently Twenty Fourteen lacks proper documentation to show that it has come from either &lt;a class="ext-link" href="https://github.com/Automattic/_s/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;_s&lt;/a&gt; or &lt;a class="ext-link" href="http://theme.wordpress.com/retired/further/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Further&lt;/a&gt;, which are both Copyrighted to Automattic Inc. The WordPress Theme Review Team makes it clear that any themes submitted to the repository that are child themes or derivative works of some sort should include proper attribution, for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Theme Name, Copyright 2014 Company Name,
distributed under the terms of the GNU General Public License v2 or later,
based on "Parent" Work Name (Copyright 2014 "Parent" Company Name)
&lt;/pre&gt;&lt;p&gt;
Currently Twenty Fourteen doesn't include proper attribution for _s, or Further (which was based on _s), which is Copyrighted to Automattic:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
Theme Name: Twenty Fourteen
Theme URI: http://wordpress.org/themes/twentyfourteen
Author: the WordPress team
Author URI: http://wordpress.org/
Description: In 2014, our default theme lets you create a responsive magazine website with a sleek, modern design. Feature your favorite homepage content in either a grid or a slider. Use the three widget areas to customize your website, and change your content's layout with a full-width page template and a contributor page to show off your authors. Creating a magazine website with WordPress has never been easier.
Version: 1.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Tags: black, green, white, light, dark, two-columns, three-columns, left-sidebar, right-sidebar, fixed-layout, responsive-layout, custom-background, custom-header, custom-menu, editor-style, featured-images, flexible-header, full-width-template, microformats, post-formats, rtl-language-support, sticky-post, theme-options, translation-ready, accessibility-ready
Text Domain: twentyfourteen
This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned with others.
*/
&lt;/pre&gt;&lt;p&gt;
At a minimum the theme should include Automattic's name with _s and/or Further.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27103 (Input validation on wp-settings.php in line 311) created</title>
      
        <dc:creator>OswaldoMG</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:40:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27103/1392154802841090</guid>
      <description>&lt;p&gt;
Improper Control of Filename for Include/Require Statement
&lt;/p&gt;
&lt;p&gt;
The PHP application receives user-supplied input but does not properly restrict the input before using it in require(), include(), or similar functions. This can allow an attacker to specify a URL to a remote location from which the application will retrieve code and execute it.
&lt;/p&gt;
&lt;p&gt;
Found by static analysis application.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
 308  $locale = get_locale();
 309  $locale_file = WP_LANG_DIR . "/$locale.php";
 310  if ( ( 0 === validate_file( $locale ) ) &amp;amp;&amp;amp; is_readable( $locale_file ) )
 311      require( $locale_file );
 312  unset( $locale_file );
 313
 314  // Pull in locale data after loading text domain.
 315  require_once( ABSPATH . WPINC . '/locale.php' );
&lt;/pre&gt;&lt;p&gt;
Recommendations: Do not allow untrusted input to be evaluated or otherwise interpreted as code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098#comment:3/1392154539740620</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27100 (Update the TinyMCE help) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27100#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27100#comment:1/1392154512359114</guid>
      <description>&lt;p&gt;
Perhaps there should be "What's new" section too. There are some styling changes for the &lt;code&gt;more&lt;/code&gt; and &lt;code&gt;nextpage&lt;/code&gt; tags and for editing images, more to come.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27102 (Input validation on wp-admin/update.php in line 87) created</title>
      
        <dc:creator>OswaldoMG</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27102/1392154413686931</guid>
      <description>&lt;p&gt;
Improper Control of Filename for Include/Require Statement
&lt;/p&gt;
&lt;p&gt;
The PHP code receives user-supplied input but does not properly restrict the input before using it in require(), include(), or similar functions. This can allow an attacker to specify a URL to a remote location from which the application will retrieve code and execute it.
&lt;/p&gt;
&lt;p&gt;
Found by static analysis application.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
  82          if ( isset($_GET['failure']) ){
  83              echo '&amp;lt;p&amp;gt;' . __('Plugin failed to reactivate due to a fatal error.') . '&amp;lt;/p&amp;gt;';
  84
  85              error_reporting( E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_ERROR | E_WARNING | E_PARSE | E_USER_ERROR | E_USER_WARNING | E_RECOVERABLE_ERROR );
  86              @ini_set('display_errors', true); //Ensure that Fatal errors are displayed.
  87              wp_register_plugin_realpath( WP_PLUGIN_DIR . '/' . $plugin );
  88              include( WP_PLUGIN_DIR . '/' . $plugin );
  89          }
&lt;/pre&gt;&lt;p&gt;
Recommendations: Do not allow untrusted input to be evaluated or otherwise interpreted as code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>27100.diff attached to Ticket #27100</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27100/27100.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27100/27100.diff/1392154285513430</guid>
      <description>&lt;p&gt;
Patch by kovshenin moved from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24067" title="#24067: task (blessed): TinyMCE 4.0 (closed: fixed)"&gt;#24067&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27101 (Input Validation on wp-admin/plugins.php in line 147) created</title>
      
        <dc:creator>OswaldoMG</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:29:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27101/1392154169099107</guid>
      <description>&lt;p&gt;
Improper Control of Filename for Include/Require Statement
&lt;/p&gt;
&lt;p&gt;
The PHP application receives user-supplied input but does not properly restrict the input before using it in require(), include(), or similar functions. This can allow an attacker to specify a URL to a remote location from which the application will retrieve code and execute it.
&lt;/p&gt;
&lt;p&gt;
Found by static analysis application.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
 143   @ini_set('display_errors', true); //Ensure that Fatal errors are displayed.
 144   // Go back to "sandbox" scope so we get the same errors as before
 145  	     function plugin_sandbox_scrape( $plugin ) {
 146              wp_register_plugin_realpath( WP_PLUGIN_DIR . '/' . $plugin );
 147              include( WP_PLUGIN_DIR . '/' . $plugin );
 148              }
&lt;/pre&gt;&lt;p&gt;
Recommendations: Do not allow untrusted input to be evaluated or otherwise interpreted as code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27100 (Update the TinyMCE help) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:28:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27100/1392154112807056</guid>
      <description>&lt;p&gt;
The content of the "Help" modal in TinyMCE needs updating. Some buttons have changed in 4.0 and it should probably have an "Accessibility" tab or section.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:28:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:37/1392154111578010</guid>
      <description>&lt;p&gt;
What about max image size like this plugin?:
&lt;a class="ext-link" href="http://wordpress.org/plugins/imsanity/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/plugins/imsanity/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25272 (Refactor/clean up autosave and use heartbeat for transport) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25272#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25272#comment:26/1392153516144499</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What was the canonical way in 3.8 to say "whoa there, don't run autosave"?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Core used &lt;code&gt;autosave = function(){};&lt;/code&gt; mostly because jquery.schedule.js can't cancel existing schedule properly, it runs one more time. Some plugins picked that up too. Don't see any &lt;code&gt;blockSave = true&lt;/code&gt; when searching the github mirror.
&lt;/p&gt;
&lt;p&gt;
Speaking of jquery.schedule.js, it's not used anywhere in core any more. We need a way to deprecate scripts.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;.button-disabled&lt;/code&gt; and &lt;code&gt;.button-primary-disabled&lt;/code&gt; classes were removed from JS...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thinking they are needed for back-compat.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27099 (Input validation on wp-includes/ms-blogs.php in line 52) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27099#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27099#comment:1/1392153358506226</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27164]: Use jQuery.prop('checked') instead of jQuery.attr('checked'), which is ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27164</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27164/1392153124659993</guid>
      <description>&lt;p&gt;
Use jQuery.prop('checked') instead of jQuery.attr('checked'), which is deprecated.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) closed</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098#comment:2/1392153088567342</guid>
      <description>invalid: &lt;p&gt;
Cool beans.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27099 (Input validation on wp-includes/ms-blogs.php in line 52) created</title>
      
        <dc:creator>OswaldoMG</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27099</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27099/1392152949580365</guid>
      <description>&lt;p&gt;
Improper neutralization of directives in dynamically evaluated code.
&lt;/p&gt;
&lt;p&gt;
Those lines of code allow user-controlled input to be fed directly into a function (e. g. "eval") that dynamically evaluates and executes the input as code, usually in the same interpreted language that the product uses.
&lt;/p&gt;
&lt;p&gt;
Found by static analysis application.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_blogaddress_by_name( $blogname ) {
	if ( is_subdomain_install() ) {
		if ( $blogname == 'main' )
			$blogname = 'www';
		$url = rtrim( network_home_url(), '/' );
		if ( !empty( $blogname ) )
			$url = preg_replace( '|^([^\.]+://)|', "\${1}" . $blogname . '.', $url );
	} else {
		$url = network_home_url( $blogname );
	}
	return esc_url( $url . '/' );
}
&lt;/pre&gt;&lt;p&gt;
Recommendations:  Do not allow untrusted input to be evaluated or otherwise interpreted as code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:07:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098#comment:1/1392152833913204</guid>
      <description>&lt;p&gt;
In &lt;a class="ext-link" href="http://www.phpdoc.org/docs/latest/for-users/phpdoc/tags/return.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;phpDocumentor&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is RECOMMENDED when documenting to use this tag with every function and method. Exceptions to this recommendation are […] functions and methods without a &lt;code&gt;return&lt;/code&gt; value, the @return tag MAY be omitted here, in which case @return void is implied.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So we're just being explicit here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ditch-return-void.patch attached to Ticket #27098</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27098/ditch-return-void.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27098/ditch-return-void.patch/1392152539492828</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) created</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Tue, 11 Feb 2014 21:02:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098/1392152527808202</guid>
      <description>&lt;p&gt;
It appears that the use of &lt;code&gt;@return void&lt;/code&gt; should not be used for method or function DocBlocks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://stackoverflow.com/a/2061559"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/a/2061559&lt;/a&gt; (See: "The datatype should be a valid PHP type (int, string, bool, etc), a class name for the type of object returned, or simply "mixed"."
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/PHPDoc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/PHPDoc&lt;/a&gt; (See: "This tag should not be used for constructors or methods defined with a void return type.")
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What are your thoughts about removing this altogether?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 20:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:9/1392151567440678</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
we use this at the Times, runs every time we build, which is often, not a buzz kill. +1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>dnavarrojr</dc:creator>

      <pubDate>Tue, 11 Feb 2014 20:34:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:36/1392150867459064</guid>
      <description>&lt;p&gt;
I'd love to see the ability to set minimum image dimensions for uploads.  And the possibility of extending the canvas to meet those dimensions... ie, minimum dimensions are 400x300 and a 200x225 image is uploaded, so it's placed in the middle of a white 400x300 canvas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27097 (Twenty Fourteen: Scroll lag in Windows) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Feb 2014 20:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27097</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27097/1392150458061527</guid>
      <description>&lt;p&gt;
There is a scroll lag when using Windows 7 and 8.1. with IE 11.
&lt;/p&gt;
&lt;p&gt;
This has been confirmed in 3 cases now. Whilst, I am not sure if the culprit, it is worth noting that In one of those cases the console log showed the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;body.scrollLeft is deprecated in strict mode. Please use 'documentElement.scrollLeft' if in strict mode and 'body.scrollLeft' only if in quirks mode.
​http://s1.wp.com/wp-content/blog-plugins/wordads/twentyfourteen-v2.css?ver=2013-02-15 404 (Not Found)
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 20:22:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:8/1392150137309584</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Luckily, many of our files are already pretty optimized.  This only saves saved 143.81 kB, but it also means we don't need to worry as much going forward.
&lt;/p&gt;
&lt;p&gt;
This comes with a bit of a time cost the first time you run it, but subsequent builds are not noticeably different.
&lt;/p&gt;
&lt;p&gt;
I'm using grunt-contrib-imagmin 0.4.1 rather than the newer 0.5 since 0.5 is using a new library that seems to throw errors on subsequent runs.   I'm looking into that upstream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25169.diff attached to Ticket #25169</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 20:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25169/25169.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25169/25169.diff/1392149870490516</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27096 (Similar strings for keeping site updated) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Tue, 11 Feb 2014 20:12:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27096#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27096#comment:1/1392149530461856</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-admin/update-core.php#L463"&gt;https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-admin/update-core.php#L463&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Keeping your site up to date is important for your site&amp;amp;#8217;s security, and makes the internet a safer place for you and your readers.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-admin/includes/class-wp-upgrader.php#L2247"&gt;https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-admin/includes/class-wp-upgrader.php#L2247&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Keeping your site updated is important for security. It also makes the internet a safer place for you and your readers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>keeping-site-updated-strings.patch attached to Ticket #27096</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Tue, 11 Feb 2014 20:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27096/keeping-site-updated-strings.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27096/keeping-site-updated-strings.patch/1392149388015520</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27096 (Similar strings for keeping site updated) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Tue, 11 Feb 2014 20:09:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27096</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27096/1392149352427778</guid>
      <description>&lt;p&gt;
There are two very similar strings and we can merge them, I guess. See attached patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 11 Feb 2014 19:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:35/1392146821895330</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by TomAuger. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-02-11&amp;amp;sort=asc#m157859"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>hlashbrooke</dc:creator>

      <pubDate>Tue, 11 Feb 2014 18:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:14/1392145088403008</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27048#comment:13" title="Comment 13"&gt;mordauk&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can probably help out and get some updated tests written.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would be awesome. If you could write some tests for this it would be a great learning tool for me - knowing what the code is supposed to do will help me understand the tests better so I could learn for future patches. I know that's a pretty selfish reason, but I would really appreciate it :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23120 (There should be indication that widget settings have been saved) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 11 Feb 2014 18:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23120#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23120#comment:42/1392142620606987</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23120#comment:41" title="Comment 41"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23120#comment:40" title="Comment 40"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
More context would be good, but we don't really know what went wrong. What about adding the phrase 'Save failed, please try again' next to the X?
&lt;/p&gt;
&lt;p&gt;
Here is what I have so far: &lt;a class="ext-link" href="http://f.cl.ly/items/0I2x1p2q3W2f1E3w2R00//Users/adamsilverstein/Library/Containers/com.monosnap.monosnap/Data/Library/Monosnap/.tmp/screencast%202014-02-06%2022-56-14.mp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;screencast&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The "save failed, try again" prompt sounds like a good compromise if we're unable to know why saving failed. That plus the white x in a red box seems like it would be a clear combination. The x looks a little off-center, but that might just be the screencast.
&lt;/p&gt;
&lt;p&gt;
FYI — looks like the patch needs a small refresh since colors.css is gone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for the feedback. I will add the text, check the X centering and refresh against trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27093.2.patch attached to Ticket #27093</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:45:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27093/27093.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27093/27093.2.patch/1392140725516862</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:11/1392140400442320</guid>
      <description>&lt;p&gt;
@gcorne -- it looked like you had added the uncompressed backbone and removed the min version in your previous patch, so I duplicated that for underscore.  Unsure if we should just use their versions either with or without the .min.map -- I left it off, as that seemed to be where we were going after the jQuery discussion and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25072" title="Remove sourceMappingURL from jquery.min.js.
props Jayjdk.
fixes #24994.
"&gt;r25072&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26799-04.diff attached to Ticket #26799</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:37:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26799/26799-04.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26799/26799-04.diff/1392140266452004</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26797 (Replace in-post image editing icons with dashicons) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26797#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26797#comment:5/1392140221549473</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by melchoyce. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-02-11&amp;amp;sort=asc#m157752"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24409 (Edit Image in TinyMCE editor revamp) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24409#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24409#comment:28/1392140101832576</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by melchoyce. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-02-11&amp;amp;sort=asc#m157741"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25477 (Notice:  Trying to get property of non-object in ...) reopened</title>
      
        <dc:creator>jpswade</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25477#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25477#comment:10/1392139955689905</guid>
      <description>&lt;p&gt;
I've managed to reproduce this error again today.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Trying to get property of non-object in /home/.../public_html/wp-includes/post.php on line 2925
&lt;/pre&gt;&lt;p&gt;
Although I agree that Wordpress *should NOT* suppress errors, I firmly believe that better error handling should be introduced.
&lt;/p&gt;
&lt;p&gt;
The problem is that the error is occurring in post.php in the wp_insert_attachment() function. On line 2925, the error is because get_taxonomy() in taxonomy.php is returning false rather than an object.
&lt;/p&gt;
&lt;p&gt;
Either, get_taxonomy() should give an error (rather than just returning false) or wp_insert_attachment() should check that get_taxonomy() is actually returning an object or return an error.
&lt;/p&gt;
&lt;p&gt;
Again I am firmly saying that errors should *NOT* be suppressed and in fact I'm saying they should be handled.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:21:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:10/1392139275773142</guid>
      <description>&lt;p&gt;
Underscore 1.6 just shipped, updating the patch momentarily.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/jashkenas/underscore/releases"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jashkenas/underscore/releases&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:9/1392139202071570</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by georgestephanis. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-11&amp;amp;sort=asc#m789294"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post.php.patch attached to Ticket #23691</title>
      
        <dc:creator>utkarshd_42</dc:creator>

      <pubDate>Tue, 11 Feb 2014 17:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23691/post.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23691/post.php.patch/1392138693870937</guid>
      <description>&lt;p&gt;
wp-includes/post.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23120 (There should be indication that widget settings have been saved) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:57:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23120#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23120#comment:41/1392137821444738</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23120#comment:40" title="Comment 40"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
More context would be good, but we don't really know what went wrong. What about adding the phrase 'Save failed, please try again' next to the X?
&lt;/p&gt;
&lt;p&gt;
Here is what I have so far: &lt;a class="ext-link" href="http://f.cl.ly/items/0I2x1p2q3W2f1E3w2R00//Users/adamsilverstein/Library/Containers/com.monosnap.monosnap/Data/Library/Monosnap/.tmp/screencast%202014-02-06%2022-56-14.mp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;screencast&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The "save failed, try again" prompt sounds like a good compromise if we're unable to know why saving failed. That plus the white x in a red box seems like it would be a clear combination. The x looks a little off-center, but that might just be the screencast.
&lt;/p&gt;
&lt;p&gt;
FYI — looks like the patch needs a small refresh since colors.css is gone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #25788,​27091 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25788%2C27091</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25788%2C27091/1392137590871937</guid>
      <description>duplicate: &lt;p&gt;
Originally introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5913" title="First pass plugin update notification, see #4795
"&gt;[5913]&lt;/a&gt;, changed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/8630" title="HTTP API improvements. Implements chunked transfer decoding. Moves ..."&gt;[8630]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11826" title="Increase timeout on cron-based requests when checking for upgrades, ..."&gt;[11826]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Closing as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25788" title="#25788: enhancement: Increase timeout for `plugins/update-check` API request (closed: fixed)"&gt;#25788&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #14485,​22526 batch updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:49:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14485%2C22526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14485%2C22526/1392137352373002</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27163" title="Partially revert [27101], [27102], [27141], and [27142]. Those commits ..."&gt;27163&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Partially revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27101" title="Add cache invalidation when updating a term, example: create a ..."&gt;[27101]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27102" title="Regenerate the term hierarchy cache (`{taxonomy}_children`) when it is ..."&gt;[27102]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27141" title="Improve inline documentation for several 'last_changed'-related ..."&gt;[27141]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27142" title="Reuse the `terms` cache group for taxonomy cache invalidation.
See ..."&gt;[27142]&lt;/a&gt;. Those commits introduced new functions to sync up cache invalidation events. The current commit alters existing internals.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"The cache invalidation with static was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9102" title="New caching style for term queries"&gt;r9102&lt;/a&gt; with version 2.7. Multisite wasn't in core back then, so something like switch_to_blog() wasn't a concern, but now it breaks if you switch the blog in between calls to clean_term_cache."&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This solution is simpler. All unit tests pass. Removes unnecessary tests linked to removed functions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kovshenin.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14485" title="#14485: defect (bug): Taxonomy hierarchy cache isn't properly refreshed (closed: fixed)"&gt;#14485&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22526" title="#22526: defect (bug): Changing category doesn't invalidate cache (closed: fixed)"&gt;#22526&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [27163]: Partially revert [27101], [27102], [27141], and [27142]. Those commits ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27163</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27163/1392137351467478</guid>
      <description>&lt;p&gt;
Partially revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27101" title="Add cache invalidation when updating a term, example: create a ..."&gt;[27101]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27102" title="Regenerate the term hierarchy cache (`{taxonomy}_children`) when it is ..."&gt;[27102]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27141" title="Improve inline documentation for several 'last_changed'-related ..."&gt;[27141]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27142" title="Reuse the `terms` cache group for taxonomy cache invalidation.
See ..."&gt;[27142]&lt;/a&gt;. Those commits introduced new functions to sync up cache invalidation events. The current commit alters existing internals.
&lt;/p&gt;
&lt;p&gt;
"The cache invalidation with static was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9102" title="New caching style for term queries"&gt;r9102&lt;/a&gt; with version 2.7. Multisite wasn't in core back then, so something like switch_to_blog() wasn't a concern, but now it breaks if you switch the blog in between calls to clean_term_cache."
&lt;/p&gt;
&lt;p&gt;
This solution is simpler. All unit tests pass. Removes unnecessary tests linked to removed functions.
&lt;/p&gt;
&lt;p&gt;
Props kovshenin.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14485" title="#14485: defect (bug): Taxonomy hierarchy cache isn't properly refreshed (closed: fixed)"&gt;#14485&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22526" title="#22526: defect (bug): Changing category doesn't invalidate cache (closed: fixed)"&gt;#22526&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27091 (Timeout to WordPress API in update.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27091#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27091#comment:3/1392137094758091</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the function request you can see the defaults params for the request and the &lt;strong&gt;apply_filters&lt;/strong&gt; but that configuration will be override from the hardcode I have already talk before.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You can increase the timeout using &lt;code&gt;http_request_args&lt;/code&gt; filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function increase_timeout_for_api_requests_27091( $r, $url ) {
	if ( false !== strpos( $url, '//api.wordpress.org/' ) ) {
		$r['timeout'] = 30;
	}
	return $r;
}
add_filter( 'http_request_args', 'increase_timeout_for_api_requests_27091', 10, 2 );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:84/1392136943581338</guid>
      <description>&lt;p&gt;
Ah, I see - applied both.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22478 (Remove $force argument from WP_Object_Cache::delete()) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:40:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22478#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22478#comment:8/1392136831601284</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27162" title="Rather than removing the 3rd argument in `WP_Object_Cache::delete()`, ..."&gt;27162&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Rather than removing the 3rd argument in &lt;code&gt;WP_Object_Cache::delete()&lt;/code&gt;, mark it as &lt;code&gt;$deprecated&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27064" title="Remove `$force` argument from `WP_Object_Cache::delete()`. From ..."&gt;[27064]&lt;/a&gt;.&lt;br /&gt;
Props SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22478" title="#22478: defect (bug): Remove $force argument from WP_Object_Cache::delete() (closed: fixed)"&gt;#22478&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27162]: Rather than removing the 3rd argument in `WP_Object_Cache::delete()`, ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:40:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27162</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27162/1392136830699739</guid>
      <description>&lt;p&gt;
Rather than removing the 3rd argument in &lt;code&gt;WP_Object_Cache::delete()&lt;/code&gt;, mark it as &lt;code&gt;$deprecated&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27064" title="Remove `$force` argument from `WP_Object_Cache::delete()`. From ..."&gt;[27064]&lt;/a&gt;.
Props SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22478" title="#22478: defect (bug): Remove $force argument from WP_Object_Cache::delete() (closed: fixed)"&gt;#22478&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22526 (Changing category doesn't invalidate cache) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22526#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22526#comment:16/1392136539112836</guid>
      <description>&lt;p&gt;
Uh, I just applied your patch and did the following:
&lt;/p&gt;
&lt;p&gt;
1) &lt;code&gt;define( 'WP_TESTS_FORCE_KNOWN_BUGS', true );&lt;/code&gt;
2) &lt;code&gt;phpunit tests/phpunit/tests/term/cache.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Results:
Tests: 3, Assertions: 8, Failures: 2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25545 (Invalidate post cache when a user is removed from a blog) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25545#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25545#comment:9/1392136026713677</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27161" title="In `remove_user_from_blog()`, avoid a potentially expensive `IN` query ..."&gt;27161&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
In &lt;code&gt;remove_user_from_blog()&lt;/code&gt;, avoid a potentially expensive &lt;code&gt;IN&lt;/code&gt; query before invalidating the reassigned post and link caches.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kovshenin.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25545" title="#25545: defect (bug): Invalidate post cache when a user is removed from a blog (closed: fixed)"&gt;#25545&lt;/a&gt;. (Again.)&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27161]: In `remove_user_from_blog()`, avoid a potentially expensive `IN` query ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27161</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27161/1392136025548299</guid>
      <description>&lt;p&gt;
In &lt;code&gt;remove_user_from_blog()&lt;/code&gt;, avoid a potentially expensive &lt;code&gt;IN&lt;/code&gt; query before invalidating the reassigned post and link caches.
&lt;/p&gt;
&lt;p&gt;
Props kovshenin.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25545" title="#25545: defect (bug): Invalidate post cache when a user is removed from a blog (closed: fixed)"&gt;#25545&lt;/a&gt;. (Again.)
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:13/1392135926808651</guid>
      <description>&lt;p&gt;
I can probably help out and get some updated tests written.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24763 (Add filter to query in get_page_by_path function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:18:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24763#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24763#comment:5/1392135527244775</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25429 (`get_the_category_by_ID` triggers PHP notice on non-existent category) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25429#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25429#comment:8/1392135412021474</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:13:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:77/1392135226489612</guid>
      <description>&lt;p&gt;
I can't hear you over your lack of unit tests
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27095 (Multi Select Images in Media Library Not Working WP 3.8.1) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27095#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27095#comment:1/1392135086694856</guid>
      <description>invalid: &lt;p&gt;
Please try the support forums for troubleshooting: ​&lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Feel free to reopen with steps to reproduce on a clean install if it turns out to be a bug in core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27090 (WordPress XML-RPC method returns error but still posts) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Tue, 11 Feb 2014 16:09:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27090#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27090#comment:4/1392134940292776</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27090#comment:2" title="Comment 2"&gt;redsweater&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This doesn't seem too pursuable without a reproduceable test case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
redsweater is right, we need some more information to determine what's going on. IndigoJo, can you provide Fiddler/Charles traces of the network response (after stripping out any sensitive info)?
&lt;/p&gt;
&lt;p&gt;
Or at least full details on the exception/error that you're getting from your network library? &lt;a class="ext-link" href="http://qt-project.org/doc/qt-5/qnetworkreply.html#NetworkError-enum"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;"Unknown Content Error" &lt;/a&gt; suggests that the issue is with the response body, perhaps an XML parsing issue or mismatched MIME-type or something along those lines.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27092 (wp_list_pages cannot handle multiple exclude_tree arguments (copy of #9153)) updated</title>
      
        <dc:creator>cgaffga</dc:creator>

      <pubDate>Tue, 11 Feb 2014 15:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27092#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27092#comment:2/1392132984761375</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27092#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's no need to resubmit the ticket, let's keep the discussion in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9153" title="#9153: defect (bug): wp_list_pages cannot handle multiple exclude_tree arguments (closed: fixed)"&gt;#9153&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
sorry
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media_multiselect.png attached to Ticket #27095</title>
      
        <dc:creator>redvirus</dc:creator>

      <pubDate>Tue, 11 Feb 2014 15:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27095/media_multiselect.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27095/media_multiselect.png/1392132750966883</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27095 (Multi Select Images in Media Library Not Working WP 3.8.1) created</title>
      
        <dc:creator>redvirus</dc:creator>

      <pubDate>Tue, 11 Feb 2014 15:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27095</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27095/1392132719143241</guid>
      <description>&lt;p&gt;
I have installed Woocommerce and found out that Multi Selecting images (command+click) for Product Library in version 3.8.1 is not working.
I have another site running on version 3.7.1 with Woocommerce and it is doing fine.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27090 (WordPress XML-RPC method returns error but still posts) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Tue, 11 Feb 2014 15:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27090#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27090#comment:3/1392131699121284</guid>
      <description>&lt;p&gt;
The report also suggests that the issue doesn't occur with the older metaweblog.newPost method. The window where a proper error could be propagated in that scenario is almost identical to the wp.newPost code path:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$post_ID = wp_insert_post( $postdata, true );
if ( is_wp_error( $post_ID ) )
	return new IXR_Error(500, $post_ID-&amp;gt;get_error_message());
if ( !$post_ID )
	return new IXR_Error(500, __('Sorry, your entry could not be posted. Something wrong happened.'));
do_action( 'xmlrpc_call_success_mw_newPost', $post_ID, $args );
return strval($post_ID);
&lt;/pre&gt;&lt;p&gt;
Which suggests that if there is an issue it's in wp_insert_post itself, and that the difference in behavior between wp.newPost and metaweblog.newPost has to do with how the $postdata is prepared for wp_insert_post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27090 (WordPress XML-RPC method returns error but still posts) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Tue, 11 Feb 2014 15:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27090#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27090#comment:2/1392131513218263</guid>
      <description>&lt;p&gt;
This doesn't seem too pursuable without a reproduceable test case. The claims suggest that an error can be propagated from _insert_post in class-wp-xmlrpc-server.php at some point after the wp_insert_post call:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$post_ID = $update ? wp_update_post( $post_data, true ) : wp_insert_post( $post_data, true );
if ( is_wp_error( $post_ID ) )
	return new IXR_Error( 500, $post_ID-&amp;gt;get_error_message() );
if ( ! $post_ID )
	return new IXR_Error( 401, __( 'Sorry, your entry could not be posted. Something wrong happened.' ) );
return strval( $post_ID );
&lt;/pre&gt;&lt;p&gt;
But more suspicious in this case is that the reporter doesn't see an actual error response from their networking library. I would be inclined to think this issue has something to do with their networking library or with their network connection. The post being published is consistent with there not actually being any error propagated from WordPress, but their networking library instead interpreting something about the response as an error condition.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27094 (get_boundary_post() doesn't work for custom post types) created</title>
      
        <dc:creator>PioneerSkies</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27094</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27094/1392130746358290</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-includes/link-template.php#L1318"&gt;Here the function&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'd suggest a very little change in order to open use of the function to CPTs:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function custom_get_boundary_post( $in_same_term = false, $excluded_terms = '', $start = true, $taxonomy = 'category', $post_type = 'post' ) {
	$post = get_post();
	if ( ! $post || ! is_single() || is_attachment() || ! taxonomy_exists( $taxonomy ) )
		return null;
	$query_args = array(
		'post_type' =&amp;gt; $post_type,
		'posts_per_page' =&amp;gt; 1,
		'order' =&amp;gt; $start ? 'ASC' : 'DESC',
	);
[snip]
&lt;/pre&gt;&lt;p&gt;
The order of $taxonomy and $post_type arguments isn't ideal imho, but would be absolutely backward compatible.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #24763 (Add filter to query in get_page_by_path function) updated</title>
      
        <dc:creator>zbtirrell</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24763#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24763#comment:4/1392129409360852</guid>
      <description>&lt;p&gt;
I did not make a patch for &lt;code&gt;get_page_by_title()&lt;/code&gt; because it does not suffer from the same difficulty.  Since it simply does a query on title and post type, it does not consider the page's hierarchy/ancestry, so is not broken if a page has an parent that is not a page.
&lt;/p&gt;
&lt;p&gt;
So, while extending that function to support an array would potentially be useful, it seems out of scope from this request.
&lt;/p&gt;
&lt;p&gt;
Note: I tested the patch against trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25429 (`get_the_category_by_ID` triggers PHP notice on non-existent category) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25429#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25429#comment:7/1392129394266004</guid>
      <description>&lt;p&gt;
As a workaround for this problem I have coded something like
&lt;/p&gt;
&lt;pre class="wiki"&gt;  $category = get_term( $ID, 'category' );
  if ( is_wp_error( $category ) || is_null( $category)  ) {
    $catname = "Invalid category - please Delete ";
  } else {
    $catname = $category-&amp;gt;name;
  }
&lt;/pre&gt;&lt;p&gt;
which is almost exactly the same as I would have had to have written to handle the results from a 'fixed' version of get_the_category_by_ID().
&lt;/p&gt;
&lt;p&gt;
Given that you can get a fatal from echo get_the_category_by_ID( 0 ); then I would support either the deprecation of the function or some further work to make the function more useful as a template tag.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:61/1392129218591275</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:60" title="Comment 60"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also worth mentioning: I don't think we should pass &lt;code&gt;$load&lt;/code&gt; and &lt;code&gt;$require_once&lt;/code&gt; to the filter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree if if we end up going with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/13239/13239.2.diff" title="Attachment '13239.2.diff' in Ticket #13239"&gt;13239.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/13239/13239.2.diff" title="Download"&gt;​&lt;/a&gt; (plus hook docs). Those booleans are far less important if all we're doing is filtering the template names.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27093.patch attached to Ticket #27093</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:30:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27093/27093.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27093/27093.patch/1392129055565907</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>get_page_by_path.patch attached to Ticket #24763</title>
      
        <dc:creator>zbtirrell</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:29:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24763/get_page_by_path.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24763/get_page_by_path.patch/1392128997229391</guid>
      <description>&lt;p&gt;
make the get_page_by_path function support an array of post types
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27093 (Cannot install WordPress when a custom user table is defined) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27093#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27093#comment:3/1392128179177059</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>hlashbrooke</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:12/1392128117751028</guid>
      <description>&lt;p&gt;
OK cool - I've installed PHPUnit, but the section of the handbook title 'Writing Tests' is sadly unhelpful: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/automated-testing/#writing-tests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/automated-testing/#writing-tests&lt;/a&gt;. I'll look further though and I'm sure I'll work it out - I've heard this stuff isn't too difficult to get right, so I'm sure I won't struggle too much :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27093 (Cannot install WordPress when a custom user table is defined) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:14:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27093#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27093#comment:2/1392128048425004</guid>
      <description>&lt;p&gt;
It looks like there is also a bug in all previous versions whereby you couldn't install a new site with a shared user table if there was no existing user with username &lt;code&gt;admin&lt;/code&gt; because the fallback (which was removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25115" title="Remove 'admin' as a fallback for username in install. props tivnet, ..."&gt;r25115&lt;/a&gt;) is passed right through to &lt;code&gt;wp_install()&lt;/code&gt; and affects the logic there. Haven't actually tried it yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24078 (Remove 'admin' as default username in install) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:05:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24078#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24078#comment:42/1392127513366627</guid>
      <description>&lt;p&gt;
Side-effect: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27093" title="#27093: defect (bug): Cannot install WordPress when a custom user table is defined (closed: fixed)"&gt;#27093&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27093 (Cannot install WordPress when a custom user table is defined) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27093#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27093#comment:1/1392127339431733</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27093 (Cannot install WordPress when a custom user table is defined) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 11 Feb 2014 14:01:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27093</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27093/1392127274428171</guid>
      <description>&lt;p&gt;
This is a regression in 3.7 caused by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25115" title="Remove 'admin' as a fallback for username in install. props tivnet, ..."&gt;r25115&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Install WordPress as normal
&lt;/li&gt;&lt;li&gt;Prepare a second, separate installation of WordPress by setting up the &lt;code&gt;CUSTOM_USER_TABLE&lt;/code&gt; and &lt;code&gt;CUSTOM_USER_META_TABLE&lt;/code&gt; constants in the &lt;code&gt;wp-config.php&lt;/code&gt; file so they point to the first installation's users and usermeta tables respectively (&lt;a class="ext-link" href="http://codex.wordpress.org/Editing_wp-config.php#Custom_User_and_Usermeta_Tables"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;more info&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Run the installation of the second install
&lt;/li&gt;&lt;li&gt;Note that the installation will abort with the error "Please provide a valid username" even though there is no option to do so
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #24067 (TinyMCE 4.0) updated</title>
      
        <dc:creator>needle</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24067#comment:125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24067#comment:125/1392126525465369</guid>
      <description>&lt;p&gt;
Just a heads-up that when including TinyMCE 4 via &lt;code&gt;wp_editor()&lt;/code&gt; on the front-end in a BuddyPress context, the TinyMCE toolbar buttons inherit some &lt;code&gt;button:hover{}&lt;/code&gt; styles. Adding something like the following to editor.css would help prevent TinyMCE's buttons from inheriting them:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.mce-toolbar .mce-btn button:hover {
	background: none;
	filter: none;
	border: none;
	color: #333;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27091 (Timeout to WordPress API in update.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27091#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27091#comment:2/1392126067297186</guid>
      <description>&lt;p&gt;
Related/Duplicate:  &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25788" title="#25788: enhancement: Increase timeout for `plugins/update-check` API request (closed: fixed)"&gt;#25788&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9153 (wp_list_pages cannot handle multiple exclude_tree arguments) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9153#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9153#comment:49/1392125735547877</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #9153,​27092 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=9153%2C27092</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=9153%2C27092/1392125674938122</guid>
      <description>duplicate: &lt;blockquote class="citation"&gt;
&lt;p&gt;
But the version on that bug can't be updated to a current one, that why I resubmit this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Version number indicates when the bug was initially introduced/reported.
&lt;/p&gt;
&lt;p&gt;
There's no need to resubmit the ticket, let's keep the discussion in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9153" title="#9153: defect (bug): wp_list_pages cannot handle multiple exclude_tree arguments (closed: fixed)"&gt;#9153&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #27088 (Allow per-query filtering of post status objects) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27088#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27088#comment:5/1392125077036661</guid>
      <description>&lt;p&gt;
I ran into this yesterday, in fact :) Here's how I did it: &lt;a href="https://core.trac.wordpress.org/attachment/ticket/27088/show-scheduled-posts.php"&gt;show-scheduled-posts.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Adding an additional filter to WP Query is a hack, in my opinion, that only addresses the immediate use case. The proper fix is to implement the first part of &lt;a href="https://core.trac.wordpress.org/ticket/12706#comment:183"&gt;Nacin's suggestions&lt;/a&gt; in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12706" title="#12706: task (blessed): Custom post status bugs (reopened)"&gt;#12706&lt;/a&gt;. In doing so, we'd define the attributes of a post status, and the behaviors each attribute should exhibit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27090 (WordPress XML-RPC method returns error but still posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27090#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27090#comment:1/1392124923467134</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>show-scheduled-posts.php attached to Ticket #27088</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:20:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27088/show-scheduled-posts.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27088/show-scheduled-posts.php/1392124856782140</guid>
      <description>&lt;p&gt;
Show scheduled posts on view
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:15:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:11/1392124508350284</guid>
      <description>&lt;p&gt;
It's the developer's responsibility to produce a patch that includes unit tests. &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/automated-testing/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;The handbook has a good introduction&lt;/a&gt;. Your tests can be included in the same patch file as your change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27091 (Timeout to WordPress API in update.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 13:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27091#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27091#comment:1/1392124309454776</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I get this too from time to time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post.php-exclude_tree.patch attached to Ticket #27092</title>
      
        <dc:creator>cgaffga</dc:creator>

      <pubDate>Tue, 11 Feb 2014 12:47:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27092/post.php-exclude_tree.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27092/post.php-exclude_tree.patch/1392122839154770</guid>
      <description>&lt;p&gt;
roothorick patch updated to patch against 3.8.1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27092 (wp_list_pages cannot handle multiple exclude_tree arguments (copy of #9153)) created</title>
      
        <dc:creator>cgaffga</dc:creator>

      <pubDate>Tue, 11 Feb 2014 12:46:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27092</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27092/1392122809896992</guid>
      <description>&lt;p&gt;
Bug &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9153" title="#9153: defect (bug): wp_list_pages cannot handle multiple exclude_tree arguments (closed: fixed)"&gt;#9153&lt;/a&gt; persists throughout version WP 3.8.1, and it was really driving me mad! But the version on that bug can't be updated to a current one, that why I resubmit this.
&lt;/p&gt;
&lt;p&gt;
It seems that &lt;code&gt;wp_list_pages&lt;/code&gt; function is ignoring all but the first argument to the &lt;code&gt;exclude_tree&lt;/code&gt; parameter. So code like this
&lt;/p&gt;
&lt;pre class="wiki"&gt;  wp_list_pages('title_li=&amp;amp;exclude_tree=2,1895,1640,1893');
&lt;/pre&gt;&lt;p&gt;
would fail for all but page ID 2.
&lt;/p&gt;
&lt;p&gt;
There is already a &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27092/post.php-exclude_tree.patch" title="Attachment 'post.php-exclude_tree.patch' in Ticket #27092"&gt;patch to fix this problem&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27092/post.php-exclude_tree.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I would really appreciate if this could be applied to the core source.
&lt;/p&gt;
&lt;p&gt;
see also: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9153" title="#9153: defect (bug): wp_list_pages cannot handle multiple exclude_tree arguments (closed: fixed)"&gt;#9153&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9153 (wp_list_pages cannot handle multiple exclude_tree arguments) updated</title>
      
        <dc:creator>cgaffga</dc:creator>

      <pubDate>Tue, 11 Feb 2014 12:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9153#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9153#comment:47/1392122268110456</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This problem seems to persist as of version 3.8.1 :( It was driving me mad. I just added the updated &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/9153/post.php-exclude_tree.patch" title="Attachment 'post.php-exclude_tree.patch' in Ticket #9153"&gt;patch agains WP 3.8.1&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/9153/post.php-exclude_tree.patch" title="Download"&gt;​&lt;/a&gt; that makes the &lt;code&gt;exclude_tree&lt;/code&gt;parameter work for more than one page ID.
&lt;/p&gt;
&lt;p&gt;
Can't this patch be finally added to the core code!?
&lt;/p&gt;
&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27092" title="#27092: defect (bug): wp_list_pages cannot handle multiple exclude_tree arguments (copy of #9153) (closed: duplicate)"&gt;#27092&lt;/a&gt;, recreated to update the version number to WP 3.8.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post.php-exclude_tree.patch attached to Ticket #9153</title>
      
        <dc:creator>cgaffga</dc:creator>

      <pubDate>Tue, 11 Feb 2014 12:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9153/post.php-exclude_tree.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9153/post.php-exclude_tree.patch/1392122058793157</guid>
      <description>&lt;p&gt;
roothorick patch updated to patch agains 3.8.1, where this problem persists
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>dave1010</dc:creator>

      <pubDate>Tue, 11 Feb 2014 12:16:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:11/1392121007823259</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've updated the summary to include PSR-4 now, not that it makes a lot of difference.
&lt;/p&gt;
&lt;p&gt;
Would the API that plugins used to get hold of the autoloader look something like this?
&lt;/p&gt;
&lt;pre class="wiki"&gt;$GLOBALS['wp_autoloader']-&amp;gt;addNamespace('Acme', __DIR__ . '/src');
&lt;/pre&gt;&lt;p&gt;
Without trying to derail this ticket, it would be worth considering making it easier to integrate with composer in the long term. &lt;a class="ext-link" href="http://wpackagist.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wpackagist.org/&lt;/a&gt; already exists and seems to be very popular (but obviously can't be used in all cases).
&lt;/p&gt;
&lt;p&gt;
It would be great if plugins could have a simple file (e.g. &lt;code&gt;autoload.json&lt;/code&gt;, in the same format as the &lt;code&gt;autoload&lt;/code&gt; section in &lt;code&gt;composer.json&lt;/code&gt;) that WordPress picked up automatically.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27091 (Timeout to WordPress API in update.php) created</title>
      
        <dc:creator>dsevillano</dc:creator>

      <pubDate>Tue, 11 Feb 2014 12:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27091</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27091/1392121006868288</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I was updating the plugins of my WordPress and I was getting all the time this error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;An unexpected error occurred. Something may be wrong with WordPress.org or this server's configuration.
'''WordPress could not establish a secure connection to WordPress.org. Please contact your server administrator.'''
/wp-includes/update.php on line 267
&lt;/pre&gt;&lt;p&gt;
I went more deep and I have just found the problem is coming form the timeout to the call of WordPress API:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://api.wordpress.org/plugins/update-check/1.1/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.wordpress.org/plugins/update-check/1.1/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The timeout is hardcode, It is defined as 3 seconds and I can not override that configuration without modified the core of WordPress (something I don't want to do).
&lt;/p&gt;
&lt;p&gt;
/wp-includes/update.php on line 252
&lt;/p&gt;
&lt;pre class="wiki"&gt;		'timeout' =&amp;gt; ( ( defined('DOING_CRON') &amp;amp;&amp;amp; DOING_CRON ) ? 30 : 3)
&lt;/pre&gt;&lt;p&gt;
If you follow the request across the code of Wordpress, It is going to the file:
&lt;/p&gt;
&lt;p&gt;
/wp-includes/class-http.php  on line 67
&lt;/p&gt;
&lt;p&gt;
In the function request you can see the defaults params for the request and the &lt;strong&gt;apply_filters&lt;/strong&gt; but that configuration will be override from the hardcode I have already talk before.
&lt;/p&gt;
&lt;pre class="wiki"&gt;	'timeout' =&amp;gt; apply_filters( 'http_request_timeout', 5),
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>hlashbrooke</dc:creator>

      <pubDate>Tue, 11 Feb 2014 11:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:10/1392119204123758</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27048#comment:9" title="Comment 9"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like this, probably going to need some updated unit tests.
&lt;/p&gt;
&lt;p&gt;
Ref: &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/export"&gt;/trunk/tests/phpunit/tests/export&lt;/a&gt; &amp;amp; &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/import"&gt;/trunk/tests/phpunit/tests/import&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How are unit tests handled? I haven't delved into the world of unit tests yet, so not sure where to start. Do core devs handle that on here or is that the committer's responsibility?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24067 (TinyMCE 4.0) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 11:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24067#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24067#comment:124/1392118976398102</guid>
      <description>&lt;p&gt;
In the help dialog there's still a reference to the "Paste from Word" button and "one of the paste buttons." See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24067/24067.2.diff" title="Attachment '24067.2.diff' in Ticket #24067"&gt;24067.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24067/24067.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24067.2.diff attached to Ticket #24067</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 11:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24067/24067.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24067/24067.2.diff/1392118833355258</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27047 (add a wp_save_user pluggable  api for plugin to  choose where to save user) updated</title>
      
        <dc:creator>fatihwk</dc:creator>

      <pubDate>Tue, 11 Feb 2014 11:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27047#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27047#comment:4/1392117539241126</guid>
      <description>&lt;p&gt;
filter is ok. but can it change the progress of saving user to db?  I just want user to control how to "SAVE"  data to db,no matter it's update or insert.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27047 (add a wp_save_user pluggable  api for plugin to  choose where to save user) updated</title>
      
        <dc:creator>fatihwk</dc:creator>

      <pubDate>Tue, 11 Feb 2014 11:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27047#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27047#comment:3/1392117057078435</guid>
      <description>&lt;p&gt;
I don't want to change the user db. but change the behavior when update or insert user info to db.For example, I have pre-existed website, so when user register on wp ,I can load it from my exist system to wp ,and even change the insert ID according to old system.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 11 Feb 2014 10:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:9/1392116200393426</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like this, probably going to need some updated unit tests.
&lt;/p&gt;
&lt;p&gt;
Ref: &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/export"&gt;/trunk/tests/phpunit/tests/export&lt;/a&gt; &amp;amp; &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/import"&gt;/trunk/tests/phpunit/tests/import&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 11 Feb 2014 09:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:60/1392111121958610</guid>
      <description>&lt;p&gt;
Also worth mentioning: I don't think we should pass &lt;code&gt;$load&lt;/code&gt; and &lt;code&gt;$require_once&lt;/code&gt; to the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 11 Feb 2014 09:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:76/1392110906239521</guid>
      <description>&lt;p&gt;
Hello fellow developers. I am +1 on this ticket.
&lt;/p&gt;
&lt;p&gt;
Can we please add this (at least for parity with &lt;code&gt;plugins_url&lt;/code&gt;), and include filters as in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/13239" title="#13239: enhancement: Filter locate_template template_names variable (reopened)"&gt;#13239&lt;/a&gt;? I'm working on theme hierarchy support (that is, grandparent themes, etc) and this would be insanely useful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27090 (WordPress XML-RPC method returns error but still posts) created</title>
      
        <dc:creator>IndigoJo</dc:creator>

      <pubDate>Tue, 11 Feb 2014 09:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27090</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27090/1392110222797752</guid>
      <description>&lt;p&gt;
I am the developer of a desktop XML-RPC client for posting entries to blogs, and recently implemented the wp.newPost method (I had previously used the legacy metaWeblog.newPost method). I have found that when I post an entry with the status 'publish', WordPress often returns an error but still posts the entry. This means that it doesn't return an entry number for the post, so I cannot use the app to submit subsequent edits for the post. The legacy methods, when they returned an error, did not post the entry.
&lt;/p&gt;
&lt;p&gt;
This is the entry I submitted this morning:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;methodCall&amp;gt;
 &amp;lt;methodName&amp;gt;wp.newPost&amp;lt;/methodName&amp;gt;
 &amp;lt;params&amp;gt;
  &amp;lt;param&amp;gt;
   &amp;lt;value&amp;gt;
    &amp;lt;string&amp;gt;1&amp;lt;/string&amp;gt;
   &amp;lt;/value&amp;gt;
  &amp;lt;/param&amp;gt;
  &amp;lt;param&amp;gt;
   &amp;lt;value&amp;gt;
    &amp;lt;string&amp;gt;mattsmith&amp;lt;/string&amp;gt;
   &amp;lt;/value&amp;gt;
  &amp;lt;/param&amp;gt;
  &amp;lt;param&amp;gt;
   &amp;lt;value&amp;gt;
    &amp;lt;string&amp;gt;(password omitted)&amp;lt;/string&amp;gt;
   &amp;lt;/value&amp;gt;
  &amp;lt;/param&amp;gt;
  &amp;lt;param&amp;gt;
   &amp;lt;value&amp;gt;
    &amp;lt;struct&amp;gt;
     &amp;lt;member&amp;gt;
      &amp;lt;name&amp;gt;post_type&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;
       &amp;lt;string&amp;gt;post&amp;lt;/string&amp;gt;
      &amp;lt;/value&amp;gt;
     &amp;lt;/member&amp;gt;
     &amp;lt;member&amp;gt;
      &amp;lt;name&amp;gt;post_status&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;
       &amp;lt;string&amp;gt;publish&amp;lt;/string&amp;gt;
      &amp;lt;/value&amp;gt;
     &amp;lt;/member&amp;gt;
     &amp;lt;member&amp;gt;
      &amp;lt;name&amp;gt;post_title&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;
       &amp;lt;string&amp;gt;Bye-byePad&amp;lt;/string&amp;gt;
      &amp;lt;/value&amp;gt;
     &amp;lt;/member&amp;gt;
     &amp;lt;member&amp;gt;
      &amp;lt;name&amp;gt;post_content&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;
       &amp;lt;string&amp;gt;&amp;amp;lt;p&amp;gt;&amp;amp;lt;img src="http://www.blogistan.co.uk/blog/images/ipad-amazon-return.jpg" title="My iPad, packaged for return" alt="Picture of a white package sealed with packing tape with a label addressed to Amazon" style="float: right; margin-left: 5px; margin-bottom: 5px" /&amp;gt;Well, I'm sending my iPad back to the vendor today. Amazon's policy is that an item is returnable for about a month, and I've had mine a week and a half (although I made this decision last Saturday, but have only just got round to printing out the return labels and packing it up).&amp;amp;lt;/p&amp;gt;
&amp;amp;lt;p&amp;gt;There are two reasons why I'm doing this. The most important is that I can't tolerate the keypad. It takes ages to type things that would take much less time on an Android tablet, simply because the better predictive text on Android saves you multiple keypresses on a screen that you can't touch-type on because it's too small. And there's just no alternative. Seriously, anyone migrating from Android is going to run up against this problem, and my advice is not to bother.&amp;amp;lt;/p&amp;gt;
&amp;amp;lt;p&amp;gt;The second is that it won't connect to certain wi-fi networks, and the reason I suspect is a bug which is preventing it sending passwords correctly on some forms (it did the same when logging into my own blog). You wouldn't think this was huge, but I've already got a tablet and that works fine -- £300 is too much to pay for a device that doesn't work properly, and doesn't allow you to find ways round its limitations.&amp;amp;lt;/p&amp;gt;
&amp;amp;lt;p&amp;gt;As for what I'm going to replace it with, I've been looking at the LG G-Pad, which costs about £50 less and has a similar size screen (although it's longer and the resolution is slightly less), but I might wait until April when it's rumoured that Google will be bringing out a Nexus 8. I'd ideally like to try it in a shop before buying it, but none of the major high-street computer shops stock it. What I'd really like is an Android tablet with the same dimensions and screen resolution, but there doesn't seem to be one and the shops seem to be selling Android tablets on the basis that they're cheap, not that they're good.&amp;amp;lt;/p&amp;gt;
&amp;lt;/string&amp;gt;
      &amp;lt;/value&amp;gt;
     &amp;lt;/member&amp;gt;
     &amp;lt;member&amp;gt;
      &amp;lt;name&amp;gt;comment_status&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;
       &amp;lt;string&amp;gt;open&amp;lt;/string&amp;gt;
      &amp;lt;/value&amp;gt;
     &amp;lt;/member&amp;gt;
     &amp;lt;member&amp;gt;
      &amp;lt;name&amp;gt;ping_status&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;
       &amp;lt;string&amp;gt;closed&amp;lt;/string&amp;gt;
      &amp;lt;/value&amp;gt;
     &amp;lt;/member&amp;gt;
     &amp;lt;member&amp;gt;
      &amp;lt;name&amp;gt;terms&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;
       &amp;lt;struct&amp;gt;
        &amp;lt;member&amp;gt;
         &amp;lt;name&amp;gt;category&amp;lt;/name&amp;gt;
         &amp;lt;value&amp;gt;
          &amp;lt;array&amp;gt;
           &amp;lt;data&amp;gt;
            &amp;lt;value&amp;gt;
             &amp;lt;string&amp;gt;38&amp;lt;/string&amp;gt;
            &amp;lt;/value&amp;gt;
           &amp;lt;/data&amp;gt;
          &amp;lt;/array&amp;gt;
         &amp;lt;/value&amp;gt;
        &amp;lt;/member&amp;gt;
       &amp;lt;/struct&amp;gt;
      &amp;lt;/value&amp;gt;
     &amp;lt;/member&amp;gt;
    &amp;lt;/struct&amp;gt;
   &amp;lt;/value&amp;gt;
  &amp;lt;/param&amp;gt;
 &amp;lt;/params&amp;gt;
&amp;lt;/methodCall&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I'm using WordPress 3.8.1. My server logs do not reveal the source of this error and I don't have any error log plugin. The app uses the Qt network API and the error is an "Unknown Content Error", but I was unable to extract an HTTP error code from the content of the reply. None of the conditions for the three errors listed on the codex page for the wp API apply, and if they did, why would it post the entry?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 11 Feb 2014 08:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:102/1392108621521166</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16953#comment:101" title="Comment 101"&gt;tollmanz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think my situation was similar to what you described. "wp-content" is not symlinked elsewhere. It follows a typical Capistrano setup.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is more about handling if a plugin itself is symlinked; e.g. &lt;code&gt;wp-content/plugins/myplugin/&lt;/code&gt; -&amp;gt; &lt;code&gt;/var/www/common/myplugin/&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Moving &lt;code&gt;wp-content&lt;/code&gt; is separate (and usually done by defining &lt;code&gt;WP_CONTENT_DIR&lt;/code&gt;/&lt;code&gt;WP_CONTENT_URL&lt;/code&gt;) and probably won't be affected here.
&lt;/p&gt;
&lt;p&gt;
Also, &amp;lt;3 nacin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21632 (Adding Imgur as an oEmbed provider) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 08:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21632#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21632#comment:25/1392107773329513</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21632#comment:24" title="Comment 24"&gt;GaryJ&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While it's a really low-cost addition to have this provider, is it really something that a significant proportion of users are going to be using? Or does that not apply here due to it being one line of code?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These regular expressions are run only on URLs that have already been extracted from the post and made possible candidates for embedding. They're fast, there aren't many of them, and at the pace we add them, we're not going to be making any measurable dent in performance.
&lt;/p&gt;
&lt;p&gt;
That said, we do have some guidelines for when to add an oEmbed provider: &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/design-decisions/#whitelisting-oembed-providers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://make.wordpress.org/core/handbook/design-decisions/#whitelisting-oembed-providers&lt;/a&gt;. It wasn't linked here because these guidelines were written down in the time since this ticket first stalled about 17 months ago, but imgur fits those guidelines very well. The only thing holding them back originally was the shaky API endpoint.
&lt;/p&gt;
&lt;p&gt;
imgur is &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Imgur#Popularity"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;huge and growing&lt;/a&gt;. While you and I may not use it, a large swath of the internet does, and they use it to create content. And that section of the internet produces content that manages to get me to click on a link to an imgur.com page on average once a day, and I bet I see way more images elsewhere getting hotlinked from it. A lot of imgur users surely also have WordPress sites. It makes sense to add it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 11 Feb 2014 08:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:59/1392106728543781</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:57" title="Comment 57"&gt;coffee2code&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
More than anything, though, I have concerns it makes it harder to play well with others; it'll become a problem if multiple functions hook the filter since the first invoked callback may have chosen a template to load, leaving subsequent callbacks unable to determine how the template was chosen and unable to influence the template selection process (short of ignoring any previous filtered selection and hoping a later callback doesn't override its own selection).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You've convinced me on this point alone. I preferred the other patch, but after considering it, the array filter is more flexible.
&lt;/p&gt;
&lt;p&gt;
+1 on either patch, but preference to &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/13239/13239.2.diff" title="Attachment '13239.2.diff' in Ticket #13239"&gt;13239.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/13239/13239.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
pls can has?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21632 (Adding Imgur as an oEmbed provider) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Tue, 11 Feb 2014 08:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21632#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21632#comment:24/1392106725469284</guid>
      <description>&lt;p&gt;
While it's a really low-cost addition to have this provider, is it really something that a significant proportion of users are going to be using? Or does that not apply here due to it being one line of code?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26944 (Dashboard "At a glance" widget ignores get_avatar_comment_types filter) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Tue, 11 Feb 2014 08:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26944#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26944#comment:2/1392106250964837</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27089 (Filter not available to add new comment status) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 07:47:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27089#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27089#comment:3/1392104847162454</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25272 (Refactor/clean up autosave and use heartbeat for transport) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 07:46:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25272#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25272#comment:25/1392104760643903</guid>
      <description>&lt;p&gt;
&lt;code&gt;.button-disabled&lt;/code&gt; and &lt;code&gt;.button-primary-disabled&lt;/code&gt; classes were removed from JS in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26995" title="Autosave: refactor autosave.js, use heartbeat for transport and move ..."&gt;[26995]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27035" title="Fix tabbing order when opening/closing post status and visibility in ..."&gt;[27035]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27038" title="Autosave:
- Move the 'Saving post' and 'Draft saved at...' strings ..."&gt;[27038]&lt;/a&gt; in favor of &lt;code&gt;.button.disabled&lt;/code&gt; and &lt;code&gt;button-primary.disabled&lt;/code&gt;. We can probably remove them from CSS too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #12668,​27089 batch updated</title>
      
        <dc:creator>amolv</dc:creator>

      <pubDate>Tue, 11 Feb 2014 07:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=12668%2C27089</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=12668%2C27089/1392103837276044</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12668" title="#12668: enhancement: Better support for custom comment types (closed: fixed)"&gt;#12668&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #27089 (Filter not available to add new comment status) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 07:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27089#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27089#comment:1/1392103454378502</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12668" title="#12668: enhancement: Better support for custom comment types (closed: fixed)"&gt;#12668&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25272 (Refactor/clean up autosave and use heartbeat for transport) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 06:48:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25272#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25272#comment:24/1392101288692626</guid>
      <description>&lt;p&gt;
What was the canonical way in 3.8 to say "whoa there, don't run autosave"? Setting window.autosave to nothing? Maybe it was setting blockSave to true? I'm not sure what kind of back compat is needed here, but it seems like people surely came up with *some* way to block autosaves when necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27089 (Filter not available to add new comment status) created</title>
      
        <dc:creator>amolv</dc:creator>

      <pubDate>Tue, 11 Feb 2014 06:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27089</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27089/1392100837056973</guid>
      <description>&lt;p&gt;
Filter not available to add new comment status as lot of developers using WordPress as framework.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27088 (Allow per-query filtering of post status objects) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 06:36:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27088#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27088#comment:4/1392100613161172</guid>
      <description>&lt;p&gt;
Two options that I see:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The posts_results filter is sufficient to fake the status of a post, at least in all situations I can picture. the_posts is also a useful hook here. Use cases would be very helpful here.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Or, something like &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27088/27088.diff" title="Attachment '27088.diff' in Ticket #27088"&gt;27088.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27088/27088.diff" title="Download"&gt;​&lt;/a&gt;, which I don't love but is closer to what makes sense to me.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>27088.diff attached to Ticket #27088</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 06:36:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27088/27088.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27088/27088.diff/1392100592521336</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27088 (Allow per-query filtering of post status objects) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Tue, 11 Feb 2014 06:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27088#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27088#comment:3/1392098612466825</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27088#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead, you should be able to control what status Wp_Query thinks the post is, and/or manipulate or bypass those checks via a particular query variable, filter, or some such.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can accept that. This is why the original patch introduced 3 different filters: 1 each for the post status functions, and 1 inside WP_Query::get_posts() itself.
&lt;/p&gt;
&lt;p&gt;
Based on this feedback, perhaps only the third filter is appropriate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27088 (Allow per-query filtering of post status objects) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 05:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27088#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27088#comment:2/1392098119272727</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27088/query-filter.diff" title="Attachment 'query-filter.diff' in Ticket #27088"&gt;query-filter.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27088/query-filter.diff" title="Download"&gt;​&lt;/a&gt; changes the return values of &lt;code&gt;get_post_status()&lt;/code&gt; and &lt;code&gt;get_post_status_object()&lt;/code&gt; from a string and an object, respectively, to an array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24763 (Add filter to query in get_page_by_path function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 05:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24763#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24763#comment:3/1392097599285749</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24763#comment:2" title="Comment 2"&gt;zbtirrell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps we could allow for $post_types to be an array that gets imploded to build this segment?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This seems like the way to go here. Let's do it for both &lt;code&gt;get_page_by_path()&lt;/code&gt; and &lt;code&gt;get_page_by_title()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27088 (Allow per-query filtering of post status objects) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 05:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27088#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27088#comment:1/1392097253639193</guid>
      <description>&lt;p&gt;
This ticket focuses directly on a solution. I think it would be best to flush out the problem first. There definitely shouldn't be hooks in those functions due to their nature of needing to return exactly and consistently what the post status definition, or in the other case it's little more than a helper for the post_status post property.
&lt;/p&gt;
&lt;p&gt;
Instead, you should be able to control what status Wp_Query thinks the post is, and/or manipulate or bypass those checks via a particular query variable, filter, or some such.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>query-filter.diff attached to Ticket #27088</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Tue, 11 Feb 2014 05:33:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27088/query-filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27088/query-filter.diff/1392096793208689</guid>
      <description>&lt;p&gt;
Add 3 new filters to allow atomic control of post status objects.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27088 (Allow per-query filtering of post status objects) created</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Tue, 11 Feb 2014 05:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27088</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27088/1392096751902536</guid>
      <description>&lt;p&gt;
There comes a time where queries need to pull in posts (or CPTs) that have a non-public post status.  Unfortunately, there are no filters on &lt;code&gt;get_post_status()&lt;/code&gt; or &lt;code&gt;get_post_status_object()&lt;/code&gt; to allow this kind of atomic control within &lt;code&gt;WP_Query::get_posts()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To rectify this, we should add (at a minimum) filters on:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get_post_status()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_post_status_object()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Additionally, a filter within &lt;code&gt;WP_Query::get_posts()&lt;/code&gt; (on the return of &lt;code&gt;get_post_status_object()&lt;/code&gt; with the query passed along for context) will allow per-query filtering of the status object if it needs to be overridden for specific reasons.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>tollmanz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 05:24:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:101/1392096271943780</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16953#comment:98" title="Comment 98"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This isn't really Capistrano-specific, or really related at all, as Capistrano is symlinked from the web root. At least where I have seen this, wp-content is not typically then symlinked from elsewhere.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think my situation was similar to what you described. "wp-content" is not symlinked elsewhere. It follows a typical Capistrano setup.
&lt;/p&gt;
&lt;p&gt;
Thanks for landing this. I'll test my scenario and report back to you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24030 (Add an action for when nonce verification fails) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 11 Feb 2014 04:58:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24030#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24030#comment:4/1392094699475848</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>lisota</dc:creator>

      <pubDate>Tue, 11 Feb 2014 02:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:5/1392086429740253</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
We run a fairly large news site on WordPress with heavy traffic and a staff of 5-10 editors who spend their entire workday in wp-admin, specifically in edit posts screens.
&lt;/p&gt;
&lt;p&gt;
The heartbeat API, specifically the wp-refresh-auto-lock, is a major CPU hog. I can easily max out our 8-core server by opening 15-20 edit post windows and having them all hitting the server with refresh post lock requests every 15 seconds. Logging out of those screens quickly reduces CPU to under 10%.
&lt;/p&gt;
&lt;p&gt;
In our case, it appears to have less to do with MySQL connections and more to do with pure CPU utilization.
&lt;/p&gt;
&lt;p&gt;
I've deregistered the heartbeat script, as above, with a little bit of success, but I need to disable the 15 sec requests on the edit post screen. Any thoughts on how to accomplish this? We are willing to sacrifice post locking to get our wp-admin performance back.
&lt;/p&gt;
&lt;p&gt;
I tried deregistering heartbeat everywhere, including post.php and post-new.php. However, that seems to affect another AJAX function, the ajax tag search no longer works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24030.diff attached to Ticket #24030</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Tue, 11 Feb 2014 02:29:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24030/24030.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24030/24030.diff/1392085793019095</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24030 (Add an action for when nonce verification fails) updated</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Tue, 11 Feb 2014 02:29:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24030#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24030#comment:3/1392085767904951</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm presuming that the very complex filter that was removed in 21133 was removed for its complexity, so I have created a very simple action. I used it successfully to log actions that failed because the nonce wasn't correct. My specific test was copying the link for switching the theme to Twenty Eleven, and removing the last character from the nonce string before submitting it. I was able to log 'switch-theme_twentyeleven' using the action added in my patch 24030.diff
&lt;/p&gt;
&lt;p&gt;
If something more complicated is needed, please let me know and I will take a stab at it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26856 (Twenty Thirteen: Adjust background size of header image(s) with media query) updated</title>
      
        <dc:creator>senlin</dc:creator>

      <pubDate>Tue, 11 Feb 2014 01:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26856#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26856#comment:6/1392083311977877</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26856#comment:5" title="Comment 5"&gt;lancewillett&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@senlin I'm &lt;code&gt;lancewillett&lt;/code&gt; on Freenode IRC if you want to chat there (#wordpress-themes), or email me lance at simpledream.net and we can go from there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have no idea what IRC is and therefore sent you an email from piet at senlinonline
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24409 (Edit Image in TinyMCE editor revamp) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 01:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24409#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24409#comment:27/1392080843254751</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27160" title="Bump the TinyMCE version, see #24409.
"&gt;27160&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bump the TinyMCE version, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24409" title="#24409: task (blessed): Edit Image in TinyMCE editor revamp (closed: fixed)"&gt;#24409&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27160]: Bump the TinyMCE version, see #24409. </title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Feb 2014 01:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27160/1392080842084510</guid>
      <description>&lt;p&gt;
Bump the TinyMCE version, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24409" title="#24409: task (blessed): Edit Image in TinyMCE editor revamp (closed: fixed)"&gt;#24409&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26823 (wp_get_image_editor-&gt;multi_resize()) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Tue, 11 Feb 2014 00:53:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26823#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26823#comment:41/1392080036101911</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26823#comment:40" title="Comment 40"&gt;pbearne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26823#comment:39" title="Comment 39"&gt;DH-Shredder&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is still missing a test with both width and height set to null (and no image being generated as a result).
&lt;/p&gt;
&lt;p&gt;
As I may not get to this tonight, feel free to add one if you get to it first.  :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Will do
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Awesome, thanks!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I feel that we make sure that we don't have file with the expected value in the target folder so I feel we should add this before the function is run
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It seems pretty safe to assume that the files won't be there when we start it, since if there are files left, it means there was a failure somewhere. If it passes once, the files get cleared up.  In other unit/integration tests in core that I checked, we currently only remove filesystem content after the test is complete, rather than pre-cleaning.
&lt;/p&gt;
&lt;p&gt;
However! I'm willing to defer on that point to someone who has done more testing than I.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see a couple of other values that could be used
&lt;/p&gt;
&lt;pre class="wiki"&gt;//will create and image with the size in the filename
			array(
				'width'  =&amp;gt; 9999, # Arbitrary High Value
				'height' =&amp;gt; 9999, # Arbitrary High Value
			),
// will this crop the image to the max size
			array(
				'width'  =&amp;gt; 9999, # Arbitrary High Value
				'height' =&amp;gt; 9999, # Arbitrary High Value
				'crop'   =&amp;gt; true,
			),
//will create and image with the size in the filename
   		        array(
				'width'  =&amp;gt; 0, # Arbitrary High Value
				'height' =&amp;gt; 0, # Arbitrary High Value
			),
// will this crop the image
			array(
				'width'  =&amp;gt; 0, # Arbitrary High Value
				'height' =&amp;gt; 0, # Arbitrary High Value
				'crop'   =&amp;gt; true,
			),
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Agreed that that sort of additional tests are a good idea. However, we have to be cautious with having those in the same (long) test. If there's more than one image in a &lt;code&gt;multi_resize&lt;/code&gt; call that intentionally does not create a new file or Array entry, it will make it harder to tell which one failed, and for what reason, when we run the batch.
&lt;/p&gt;
&lt;p&gt;
As a last note, I realize it was probably just a quick copy/paste (which I've certainly done before), but I'd suggest being careful that the inline comments match what you're trying to test (&lt;code&gt;0&lt;/code&gt; is not an &lt;code&gt;arbitrarily high value&lt;/code&gt;) -- it helps to make it as clear as possible which behaviour that is being tested, so that if/when the test fails, it's obvious what went wrong. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>