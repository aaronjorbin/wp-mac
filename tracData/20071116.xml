<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #5363 (Canonical redirection broken on https://) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Fri, 16 Nov 2007 20:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5363#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5363#comment:1/1195245275000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5363 (Canonical redirection broken on https://) created</title>
      
        <dc:creator>truthmedia</dc:creator>

      <pubDate>Fri, 16 Nov 2007 19:32:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5363</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5363/1195241531000000</guid>
      <description>&lt;p&gt;
On any of our websites running WordPress 2.3 the server gets stuck in an infinite redirection loop when using the &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; protocol.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://truthmedia.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://truthmedia.com&lt;/a&gt;
&lt;a class="ext-link" href="https://sandbox3.wearetm.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://sandbox3.wearetm.com&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When disabling the canonical redirection it works fine.
&lt;/p&gt;
&lt;p&gt;
Both are hosted on MediaTemple, I do not know what type of server they are running, or what redirects they are using, so I cannot tell you what is conflicting.
&lt;/p&gt;
&lt;p&gt;
I have opened a support request asking if they can give me any more info on what is happening behind the scenes.
&lt;/p&gt;
&lt;p&gt;
(If you check and &lt;a class="ext-link" href="https://truthmedia.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://truthmedia.com&lt;/a&gt; seems to work, that is because I have disabled the canonical redirection, I will leave &lt;a class="ext-link" href="https://sandbox3.wearetm.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://sandbox3.wearetm.com&lt;/a&gt; as is for testing though)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [6337]: Update page on front settings when deleting the page on front. Props ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 16 Nov 2007 17:39:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6337</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6337/1195234755549852</guid>
      <description>&lt;p&gt;
Update page on front settings when deleting the page on front. Props hailin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5361" title="#5361: defect (bug): Deleting a set front page should then display posts on front page (closed: fixed)"&gt;#5361&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5361 (Deleting a set front page should then display posts on front page) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 16 Nov 2007 17:39:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5361#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5361#comment:2/1195234755000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6337" title="Update page on front settings when deleting the page on front. Props ..."&gt;[6337]&lt;/a&gt;) Update page on front settings when deleting the page on front. Props hailin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5361" title="#5361: defect (bug): Deleting a set front page should then display posts on front page (closed: fixed)"&gt;#5361&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4802 (Author can moderate comments on their own posts) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Fri, 16 Nov 2007 17:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4802#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4802#comment:8/1195233471000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think intoxination is on the right path, however based on the existing roles, I think that the smoothest and least confusing path would be to have the new role be "moderate_others_comments" in the same way that posts have "edit_posts" and "edit_others_posts".
&lt;/p&gt;
&lt;p&gt;
In this scenario, I think it would make sense to have the default roles as follows:
&lt;/p&gt;
&lt;p&gt;
Admin/Editor: moderate_comments AND moderate_others_comments
Author: moderate_comments (only on their posts)
Contributor: [nothing, they wait for editors/admins to approve their comments]
&lt;/p&gt;
&lt;p&gt;
This would follow elegantly with Contributor's inability to publish their own posts while authors can publish theirs but can't do things like edit the posts of other authors.
&lt;/p&gt;
&lt;p&gt;
I think this change is important because on large sites with lots of authors it is a burnout to follow all conversations, and if an author is trusted to publish posts independently they are likely trustworthy to sort comments on their own posts. This would also of course be changeable through the role manager plugin if someone wanted a different setup.
&lt;/p&gt;
&lt;p&gt;
The big problem I think is the number of places that would need to be patched to make this happen, I'm not sure how the comment moderation admin views work but it might take awhile to adapt them for this subtle difference.
&lt;/p&gt;
&lt;p&gt;
If nothing else though, having the link to accept a comment present in emails and allowing authors to accept comments that way would be a big step. I admin a large site and we moderate all comments before they appear, so distributing it thinner would really help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3780 (gettext fails to determine byteorder on 64bit systems with php5.2.1) updated</title>
      
        <dc:creator>nyuwec</dc:creator>

      <pubDate>Fri, 16 Nov 2007 17:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3780#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3780#comment:24/1195233470000000</guid>
      <description>&lt;p&gt;
To my previous comment, here is a working version of the patched gettext.php on a 64bit AMD processor powered Gentoo Linux (jam 2.6.18-gentoo-&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6" title="Fixed some email things, added whois.
"&gt;r6&lt;/a&gt;) server with Apache2 and PHP 5.2.4:
&lt;a class="ext-link" href="http://koles.hu/turakraft/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://koles.hu/turakraft/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It uses the hungarian language file, so it is mostly unreadable to the most of the world population. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5353 (Extend EXIF parser to include GPS metadata keys) updated</title>
      
        <dc:creator>remotesensingtools</dc:creator>

      <pubDate>Fri, 16 Nov 2007 16:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5353#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5353#comment:3/1195232353000000</guid>
      <description>&lt;p&gt;
I would contest this thinking, as GPS metadata is becoming intrinsic in the practicality of geo-aware position of images and visualization (inherent to the reality of the image taken, if metadata coordinates exist). To not provide the entirety of what's represented in the metadata of an image, is to cut-off the possibilities of developments for future development of plug-ins that can or will use that metadata. (You'd be making it far easier for plug-in developers to create their own methods for using said metadata, making it scalable for all developers.)
&lt;/p&gt;
&lt;p&gt;
Otherwise, by taking the approach you suggest -- would force two chains of metadata sets, limiting methodologies in content and visualization, forcing dependencies on more than one plugin, as well as creating overhead by applying an additional data-chain and plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5362 (WordPress Should Not Check Intra-Site Permalinks for Spam) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Fri, 16 Nov 2007 16:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5362#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5362#comment:1/1195228942000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5362 (WordPress Should Not Check Intra-Site Permalinks for Spam) created</title>
      
        <dc:creator>ComputerGuru</dc:creator>

      <pubDate>Fri, 16 Nov 2007 09:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5362</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5362/1195206929000000</guid>
      <description>&lt;p&gt;
WordPress should automatically add pingbacks and trackbacks from the same blog without any spam checking.
&lt;/p&gt;
&lt;p&gt;
Posted to WP-Hackers, haven't heard from anyone as to whether this is by-design or not.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wp-setting_23.diff attached to Ticket #5160</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Fri, 16 Nov 2007 07:47:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5160/wp-setting_23.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5160/wp-setting_23.diff/1195199268000000</guid>
      <description>&lt;p&gt;
Patch for branch 2.3 (Updated with check if PATH_INFO is empty)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>wp-setting3.diff attached to Ticket #5160</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Fri, 16 Nov 2007 07:46:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5160/wp-setting3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5160/wp-setting3.diff/1195199210000000</guid>
      <description>&lt;p&gt;
Patch for trunk (Updated with check if PATH_INFO is empty)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5361 (Deleting a set front page should then display posts on front page) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Fri, 16 Nov 2007 02:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5361#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5361#comment:1/1195179663000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>569_show_on_front.diff attached to Ticket #5361</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 16 Nov 2007 01:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5361/569_show_on_front.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5361/569_show_on_front.diff/1195176833000000</guid>
      <description>&lt;p&gt;
patch file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5361 (Deleting a set front page should then display posts on front page) created</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 16 Nov 2007 01:33:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5361</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5361/1195176819000000</guid>
      <description>&lt;p&gt;
Create a new page.
&lt;/p&gt;
&lt;p&gt;
Go to Options &amp;gt; reading and set that page as the front page.
&lt;/p&gt;
&lt;p&gt;
Now delete that new page
&lt;/p&gt;
&lt;p&gt;
Front of the blog goes blank.
&lt;/p&gt;
&lt;p&gt;
Expected behaviour: It defaults back to Posts.
&lt;/p&gt;
&lt;p&gt;
============================================
Hailin:
The root cause is the following: Suppose option show_on_front is configured to "page", and page_on_front is set to a specific page_id, and/or page_for_posts is set to another page_id.
&lt;/p&gt;
&lt;p&gt;
Then the user deletes a page from Manage=&amp;gt;Page, which happens to be the configured page_on_front. Then the page is gone, but those options still hold that deleted page_id. That cause the reported problem.
&lt;/p&gt;
&lt;p&gt;
The fix is that when we delete a page, we check to see whether the page is used in any of those options. If yes, we adjust them as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5352 (register_sidebars does not handle names or multiple calls correctly) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 15 Nov 2007 23:40:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5352#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5352#comment:2/1195170058000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5360 (Comment editing problem) updated</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Thu, 15 Nov 2007 23:29:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5360#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5360#comment:2/1195169390000000</guid>
      <description>&lt;p&gt;
I see this problem frequently in 2.3.1 (and previous versions).  I saw it with one of the default permalink options.  I'm using the veryplaintxt theme, if that matters.  The problem is annoying enough that I wrote a plugin filter to strip-out the extra anchor name from the end of the URL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5360 (Comment editing problem) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Thu, 15 Nov 2007 23:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5360#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5360#comment:1/1195167761000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Coudn't duplicate this issue on trunk &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6336" title="Don't load entire wxr import file at once to conserve memory. Props ..."&gt;r6336&lt;/a&gt;, I'm guessing it relates to your less common permalink structure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5345 (Post Pending problems) closed</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Thu, 15 Nov 2007 22:56:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5345#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5345#comment:4/1195167401000000</guid>
      <description>invalid: &lt;p&gt;
Closing then as invalid, b/c the current described issue is quite different from the original problem that sounded like data loss. The dashboard experience is in the process of being worked on, so if you are still seeing the issue after 2.4 is released please do open a ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4779 (Proposal for HTTP POST and REQUEST API) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Thu, 15 Nov 2007 22:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4779#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4779#comment:5/1195166925000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5316 (Extend options.php to allow deletion, Viewing of Serialized, And ...) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Thu, 15 Nov 2007 22:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5316#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5316#comment:4/1195164648000000</guid>
      <description>&lt;p&gt;
Editing serialized data was suggested on wp-hackers, And i've got a idea in my mind for how to achieve that thanks to some suggestions. (Well, Editing at least for Serialised Arrays, Objects are a bit harder).
&lt;/p&gt;
&lt;p&gt;
It could effectivly stay as a plugin, which is why i wrapped it up into a plugin for this ticket, Since the options page is rather obscure, it doesnt affect many users, But most of these are changes which are useful to most people who use the options page(for whatever reason), I know some people who have a couple of thousand options in their WP installs (from playing with plugins over the years) - To them, the ability to delete a group of options from a plugin they no longer use would be great.
&lt;/p&gt;
&lt;p&gt;
Its that reason why i thought as a core feature, It doesnt affect many people, But the options page IS there, Why not allow more control over the options for people who do tinker with their WP installs? (Thats more than just Plugin Developers, Allthough Devs are the main target for these changes)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5316 (Extend options.php to allow deletion, Viewing of Serialized, And ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 15 Nov 2007 21:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5316#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5316#comment:3/1195163698000000</guid>
      <description>&lt;p&gt;
Oh also, it would be ace to be able to edit the serialized data. Can't imagine that would be too easy to do though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5316 (Extend options.php to allow deletion, Viewing of Serialized, And ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 15 Nov 2007 21:53:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5316#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5316#comment:2/1195163609000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I really, really like this. Very convenient to be able to delete options from here (handy for plugin testing etc) and the grouping by prefix is very sexy.
&lt;/p&gt;
&lt;p&gt;
I can see no reason for this going into core, as because of the relative obscurity of this options page, it won't affect the majority of people who use WordPress, and I'm sure the people who do use this options page from time to time will be in favour of these nice changes.
&lt;/p&gt;
&lt;p&gt;
As its main aim is plugin developers (correct me if I'm wrong), it could just as effectively remain as a plugin though, so I'll give it a +0.75 for core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5360 (Comment editing problem) created</title>
      
        <dc:creator>neoen</dc:creator>

      <pubDate>Thu, 15 Nov 2007 21:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5360</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5360/1195160406000000</guid>
      <description>&lt;p&gt;
I was logged as admin and browsing my blog.
As admin I added comment (reply) to my post (&lt;a class="ext-link" href="http://www.domain.com/category/post-title"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.domain.com/category/post-title&lt;/a&gt;).
New comment was added successfully (&lt;a class="ext-link" href="http://www.domain.com/category/post-title#comment-164"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.domain.com/category/post-title#comment-164&lt;/a&gt;).
I wanted to edit it once again, I was automatically redirected to admin comment editing page then I edited this comment and in the end I was automatically redirected to strange duplicate address (&lt;a class="ext-link" href="http://www.domain.com/category/post-title#comment-164#comment-164"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.domain.com/category/post-title#comment-164#comment-164&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4642 (Enhanced wp-mail.php) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 15 Nov 2007 17:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4642#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4642#comment:18/1195146343000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5359 (Auto save doesn't save tags) created</title>
      
        <dc:creator>chmac</dc:creator>

      <pubDate>Thu, 15 Nov 2007 16:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5359</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5359/1195145065000000</guid>
      <description>&lt;p&gt;
I've just noticed (and tested) that the auto-save feature doesn't save tags. It saves the other aspects of a post (I haven't verified how much) but not the tags. I'll try to look at the code over the next few days and add a patch to fix it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5356 (gettext cannot parse mo files on 64bit systems) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Thu, 15 Nov 2007 16:28:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5356#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5356#comment:3/1195144139000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5353 (Extend EXIF parser to include GPS metadata keys) closed</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Thu, 15 Nov 2007 16:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5353#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5353#comment:2/1195144083000000</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5357 (wxr import: don't load the whole file at once) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Thu, 15 Nov 2007 16:27:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5357#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5357#comment:3/1195144050000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4779 (Proposal for HTTP POST and REQUEST API) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Thu, 15 Nov 2007 15:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4779#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4779#comment:4/1195142284000000</guid>
      <description>&lt;p&gt;
I'll probably bring it up on WP-Hackers and write up some code this weekend. I've been thinking about this ticket and the best way to go about it. I don't think it should be all in one function, but using classes might slow down something that should be made as quick as possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4779 (Proposal for HTTP POST and REQUEST API) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Thu, 15 Nov 2007 15:30:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4779#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4779#comment:3/1195140645000000</guid>
      <description>&lt;p&gt;
I was thinking more that it doesn't have a patch and is non-trival.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4779 (Proposal for HTTP POST and REQUEST API) updated</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Thu, 15 Nov 2007 15:00:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4779#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4779#comment:2/1195138844000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4779#comment:1" title="Comment 1"&gt;santosj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This should not have 2.4 milestone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Usually we fix/change things in trunk first (which corresponds with the current 2.4 milestone) and then backport it to previous releases if that's deemed necessary.
&lt;/p&gt;
&lt;p&gt;
So this issue may end up fixed in a maintenance release for 2.3.x, but for now it's first slated for 2.4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5358 (Queried object on multiple tag query holds only first tag) updated</title>
      
        <dc:creator>ionfish</dc:creator>

      <pubDate>Thu, 15 Nov 2007 14:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5358#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5358#comment:1/1195138622000000</guid>
      <description>&lt;p&gt;
Might this question I posted on wp-hackers a while ago be related?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://comox.textdrive.com/pipermail/wp-hackers/2007-October/015706.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://comox.textdrive.com/pipermail/wp-hackers/2007-October/015706.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4779 (Proposal for HTTP POST and REQUEST API) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Thu, 15 Nov 2007 14:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4779#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4779#comment:1/1195137785000000</guid>
      <description>&lt;p&gt;
This should not have 2.4 milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5065 (Unify User-Agent strings) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Thu, 15 Nov 2007 14:41:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5065#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5065#comment:14/1195137697000000</guid>
      <description>&lt;p&gt;
Yeah. Maybe &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4779" title="#4779: enhancement: Proposal for HTTP POST and REQUEST API (closed: fixed)"&gt;#4779&lt;/a&gt; is what you were looking for DD32?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5345 (Post Pending problems) updated</title>
      
        <dc:creator>angelic007</dc:creator>

      <pubDate>Thu, 15 Nov 2007 11:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5345#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5345#comment:3/1195126390000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5345#comment:2" title="Comment 2"&gt;lloydbudd&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It isn't expected for a article pending review to be at the top of the write page, , because that only currently lists drafts, but logged in as the Author (or the Admin) I do find it when I filter Status... Pending Review
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes' you're right.
Anyway, in my humble opinion pending reviews should be more visible to admin/editors, because he/she could not see new articles for a long time since there aren't notifications about newly inserted contents. As for comments moderation, I think there should be a tab under "Manage" section (Manage pending articles or something like that)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5356 (gettext cannot parse mo files on 64bit systems) closed</title>
      
        <dc:creator>nyuwec</dc:creator>

      <pubDate>Thu, 15 Nov 2007 09:08:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5356#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5356#comment:2/1195117688000000</guid>
      <description>duplicate: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5356#comment:1" title="Comment 1"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3780" title="#3780: defect (bug): gettext fails to determine byteorder on 64bit systems with php5.2.1 (closed: fixed)"&gt;#3780&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks, my search was not good enough, my shame.
&lt;/p&gt;
&lt;p&gt;
That ticket describes the same problem, so I close this one.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #3780 (gettext fails to determine byteorder on 64bit systems with php5.2.1) updated</title>
      
        <dc:creator>nyuwec</dc:creator>

      <pubDate>Thu, 15 Nov 2007 09:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3780#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3780#comment:23/1195117535000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/3780#comment:21" title="Comment 21"&gt;nbachiyski&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could everybody, please, try the both patches and report if any is working.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have a gentoo linux on a 64 bit AMD processor, described in: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5356" title="#5356: defect (bug): gettext cannot parse mo files on 64bit systems (closed: duplicate)"&gt;#5356&lt;/a&gt;, fighting with the above described problem. PHP using PHP_INT_SIZE=8.
&lt;/p&gt;
&lt;p&gt;
Apply 3780.diff: FAILS.
Apply gettext-64-without-bitwise-ops.diff: WORKS!
&lt;/p&gt;
&lt;p&gt;
As I can see the gettext-64-without-bitwise-ops.diff patches the gettext to the format described in: &lt;a class="ext-link" href="http://wordpress.org/support/topic/63038"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/63038&lt;/a&gt; That patch also works on both 64bit and on 32 bit systems I can test!
&lt;/p&gt;
&lt;p&gt;
If only the 3780.diff applied to a 32 bit system it still works, applying the gettext-64-without-bitwise-ops.diff: still works!
&lt;/p&gt;
&lt;p&gt;
So this code in the gettext.php (starting at line 105) works for me on both 32 and 64 bit systems:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		// Caching can be turned off
		$this-&amp;gt;enable_cache = $enable_cache;
		// $MAGIC1 = (int)0x950412de; //bug in PHP 5.0.2, see https://savannah.nongnu.org/bugs/?func=detailitem&amp;amp;item_id=10565
		$MAGIC1 = (int) - 1794895138;
		// $MAGIC2 = (int)0xde120495; //bug
		$MAGIC2 = (int) - 569244523;
		// 64-bit fix
		$MAGIC3 = (int) 2500072158;
		$this-&amp;gt;STREAM = $Reader;
		$magic = $this-&amp;gt;readint();
		if ($magic == $MAGIC1 || $magic == $MAGIC3) { // to make sure it works for 64-bit platforms
			$this-&amp;gt;BYTEORDER = 0;
		} elseif ($magic == ($MAGIC2 &amp;amp; 0xFFFFFFFF)) {
			$this-&amp;gt;BYTEORDER = 1;
		} else {
			$this-&amp;gt;error = 1; // not MO file
			return false;
		}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5065 (Unify User-Agent strings) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Thu, 15 Nov 2007 08:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5065#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5065#comment:13/1195116765000000</guid>
      <description>&lt;p&gt;
I'm thinking a better method might be to wrap all outgoing http requests into a WP function. Currently theres a fair few fsockopen() scattered around the place, and theres Snoopy too, What would be better is a function such as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_get_remote($url,$headers=false){
...
$userAgent = apply_filters('useragent',get_the_useragent());
...
fsockopen()...
if(!$headers)
return $html;
else
return array($html,$headers);
}
&lt;/pre&gt;&lt;p&gt;
(Similar to &lt;code&gt;wp_get_http_headers()&lt;/code&gt;)
&lt;/p&gt;
&lt;p&gt;
Just makes more sense than changing the user agents in all these different locations to me, Why change the code in so many places when it could all just be consolidated in one swoop?, It would also help in adding Global Proxy support in.
&lt;/p&gt;
&lt;p&gt;
(Probably new ticket material, infact, i swear there is one, i just cant find it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6336]: Don't load entire wxr import file at once to conserve memory. Props ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6336</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6336/1195105003468559</guid>
      <description>&lt;p&gt;
Don't load entire wxr import file at once to conserve memory. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5357" title="#5357: enhancement: wxr import: don't load the whole file at once (closed: fixed)"&gt;#5357&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5357 (wxr import: don't load the whole file at once) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5357#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5357#comment:2/1195105003000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6336" title="Don't load entire wxr import file at once to conserve memory. Props ..."&gt;[6336]&lt;/a&gt;) Don't load entire wxr import file at once to conserve memory. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5357" title="#5357: enhancement: wxr import: don't load the whole file at once (closed: fixed)"&gt;#5357&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5347 (Move export_wp() to an include file) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5347#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5347#comment:2/1195104755000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6335" title="Move export_wp() to an include. Props tellyworth. fixes #5347"&gt;[6335]&lt;/a&gt;) Move export_wp() to an include. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5347" title="#5347: enhancement: Move export_wp() to an include file (closed: fixed)"&gt;#5347&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6335]: Move export_wp() to an include. Props tellyworth. fixes #5347</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6335</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6335/1195104753021060</guid>
      <description>&lt;p&gt;
Move export_wp() to an include. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5347" title="#5347: enhancement: Move export_wp() to an include file (closed: fixed)"&gt;#5347&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:19/1195104367000000</guid>
      <description>&lt;p&gt;
Oh yeah, I use ksort instead of uksort to speed things up a bit (might be premature). I figure it is an edge case that plugin authors will use strings instead of numbers and anyway, it is unknown anyway based on that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:23:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:18/1195104221000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:17/1195104195000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:22:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:16/1195104146000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't know if you want the PHPDoc stuff, I'll remove it, but it does improve upon some of the stuff from the other bugs (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5163" title="#5163: defect (bug): add_filter's inline docs says it works on strings only (closed: fixed)"&gt;#5163&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5225" title="#5225: enhancement: plugins.php Documentation for adding new PHPdoc tags (closed: fixed)"&gt;#5225&lt;/a&gt;). Unintentionally, since I've used the one for the PHPdoc checkout instead of the other checkout (I've so many now, I can't keep track of which ones are broken and what I've used them for).
&lt;/p&gt;
&lt;p&gt;
Basically, it is important since there is a merged filters bug in the do_actions (the $merged_filters isn't being set to global, therefore the test will always fail and decrease performance. Won't break anything, but could slow things down by sorting the array each time.)
&lt;/p&gt;
&lt;p&gt;
I've removed the '@' from the current filter assignment, which should speed things up, since '@' is slow until latest PHP 5.2 version (5.2.3 or 5.2.4 has the performance improvement).
&lt;/p&gt;
&lt;p&gt;
I moved the all tag call to its own function and updated all functions to call it instead. The function has PHPDoc info. You will notice that the hook is not part of the call, I figure using the current_filter function is better.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I did not use Foreach instead of the do while.
&lt;/li&gt;&lt;li&gt;I did not remove merged_filters
&lt;/li&gt;&lt;li&gt;I did not move current_filters assignment.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All in all, I've only did two of the five things in the WP-Hackers post. The rest were premature.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5358 (Queried object on multiple tag query holds only first tag) created</title>
      
        <dc:creator>Kafkaesqui</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5358</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5358/1195103841000000</guid>
      <description>&lt;p&gt;
On tag page results when two or more tags are queried (&lt;strong&gt;/tags/foo,bar&lt;/strong&gt; -or- &lt;strong&gt;/tags/foo+bar&lt;/strong&gt;), only the first tag is in the queried object. So a simple:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; print_r($wp_query-&amp;gt;get_queried_object());  &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
outputs a single associative array of the first tag referenced in the query. One would expect to find an array of all tags in the queried object.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5163 (add_filter's inline docs says it works on strings only) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:13:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5163#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5163#comment:1/1195103624000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin.r6334.patch attached to Ticket #5338</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Thu, 15 Nov 2007 05:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5338/plugin.r6334.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5338/plugin.r6334.patch/1195103445000000</guid>
      <description>&lt;p&gt;
Optimizations with PHPDoc updates
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5353 (Extend EXIF parser to include GPS metadata keys) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Thu, 15 Nov 2007 04:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5353#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5353#comment:1/1195101166000000</guid>
      <description>&lt;p&gt;
This sounds like a job for a plugin.  The image metadata code has a hook just for that purpose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5357 (wxr import: don't load the whole file at once) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Thu, 15 Nov 2007 02:38:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5357#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5357#comment:1/1195094310000000</guid>
      <description>&lt;p&gt;
The sample export files used for unit testing are here if anyone wants to confirm those tests by hand: &lt;a class="ext-link" href="http://svn.automattic.com/wordpress-tests/wp-testdata/export/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://svn.automattic.com/wordpress-tests/wp-testdata/export/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
big-export.xml has 500 posts with comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>605_2.txt attached to Ticket #5351</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Thu, 15 Nov 2007 00:51:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5351/605_2.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5351/605_2.txt/1195087898000000</guid>
      <description>&lt;p&gt;
patch &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;, retain timestamp for non-drafts
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item>
   </channel>
</rss>