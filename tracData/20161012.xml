<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Wed, 12 Oct 2016 23:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:125/1476316169339333</guid>
      <description>&lt;p&gt;
I talked with @davidakennedy about &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37974#comment:119" title="Comment 119"&gt;119&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37974#comment:120" title="Comment 120"&gt;120&lt;/a&gt; and those were tested against &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.8.diff" title="Attachment '37974.8.diff' in Ticket #37974"&gt;37974.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.8.diff" title="Download"&gt;​&lt;/a&gt;. Those particular bugs should already be fixed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.9.diff" title="Attachment '37974.9.diff' in Ticket #37974"&gt;37974.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.9.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37974#comment:123" title="Comment 123"&gt;@helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The usage of the post ID in the fragment URL is a return to ugly permalinks - I'm not super excited about using # at all, but whatever it is, it should stick to the slug (which should still be editable).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can update those to use the slug, but that leaves a few things that need to be worked out:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Is there an alternative to using the hash?
&lt;/li&gt;&lt;li&gt;Should we update the separator that's used for page hierarchy? For example, the page URI for a child would currently be &lt;code&gt;parent-page/child-page&lt;/code&gt;. Do we replace the slash with a dash or underscore instead? The HTML 4 spec doesn't appear to allow slashes in the &lt;code&gt;id&lt;/code&gt; attribute, while HTML 5 does.
&lt;/li&gt;&lt;li&gt;If the separator is updated, to what extent should we go to ensure the fragments are unique to prevent collisions?
&lt;/li&gt;&lt;li&gt;How should themes ensure the anchor is present on the page? A new template tag?
&lt;/li&gt;&lt;/ol&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
What are plans for indicating that X pages are the fragments that make up Y page on the pages list table?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm all ears if anyone has any ideas on this front.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does this have to hinge on theme support?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it would be a poor experience for users to try to use the feature in a theme that doesn't support it. At the very least, themes need to make sure the anchor for each section matches the fragment core generates. Themes may also need to register a container selector for selective refresh to work unless we can inject a temporary container in the Customizer preview using &lt;code&gt;loop_start&lt;/code&gt; and &lt;code&gt;loop_end&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Wed, 12 Oct 2016 23:36:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:57/1476315365576023</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
P.S. flexbox is tricky, there are browsers that still implement it differently.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a very good point. I'm sure we can make these icons better supported, but my CSS skills are limited. If anyone wants to take a crack at it, please do!
&lt;/p&gt;
&lt;p&gt;
Another point only briefly touched on above is that with the icons added to the page, they:
A) can affect the page layout, and
B) don't hover over elements which are absolutely positioned.
&lt;/p&gt;
&lt;p&gt;
Twentythirteen is a good example of a theme which has both issues. The menu icon causes the menu area to become twice as thick and the footer widgets are all positioned away from their icons.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/nREXTndVC9.png"&gt;&lt;img src="https://cldup.com/nREXTndVC9.png" alt="https://cldup.com/nREXTndVC9.png" crossorigin="anonymous" title="https://cldup.com/nREXTndVC9.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Making the icons absolutely positioned "solves" this by removing the icons from the document flow. Unfortunately this opens another can of worms. It requires very careful positioning to prevent the icon from completely covering its target, not falling off the page, not appearing to relate to another page element, etc. Also when certain DOM changes take place (eg: repositioning widgets in Twentythirteen) the icons do not automatically follow, so we must listen to all sorts of changes and perform manual repositions.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/LWRuQNfF2d.png"&gt;&lt;img src="https://cldup.com/LWRuQNfF2d.png" alt="https://cldup.com/LWRuQNfF2d.png" crossorigin="anonymous" title="https://cldup.com/LWRuQNfF2d.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The implementation on wp.com does all of these things to support the widest array of themes possible, and we're still tweaking it every so often. I was hoping to avoid the issue in core, but unless we disable this feature for certain themes, I'm starting to see us going down the same road.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/-iIw6EMGvJ.png"&gt;&lt;img src="https://cldup.com/-iIw6EMGvJ.png" alt="https://cldup.com/-iIw6EMGvJ.png" crossorigin="anonymous" title="https://cldup.com/-iIw6EMGvJ.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38234 (wp_get_users_with_no_role() generates query based on role display ...) updated</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Wed, 12 Oct 2016 23:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38234#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38234#comment:3/1476314789673986</guid>
      <description>&lt;p&gt;
Explanation for the patch:
&lt;/p&gt;
&lt;p&gt;
wp_roles()-&amp;gt;get_names() returns an array in the format:
&lt;/p&gt;
&lt;p&gt;
role_name =&amp;gt; display_role_name
&lt;/p&gt;
&lt;p&gt;
wp_get_users_with_no_role() uses the array value (display name) to build the regex, when it should use the array key (role name).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38298 (Allow multiple roles to be assigned via the admin UI) created</title>
      
        <dc:creator>galbaras</dc:creator>

      <pubDate>Wed, 12 Oct 2016 23:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38298</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38298/1476314581154848</guid>
      <description>&lt;p&gt;
WordPress currently only allows the assignment of one role to a user and the default roles are organized hierarchically, with each one being a superset of the next, up to the almighty administrator role.
&lt;/p&gt;
&lt;p&gt;
However, development is only possible for administrators, so there is no role that allows operational administration (user management, comment approval, etc), but no development capabilities, (theme settings, widgets, plugins, custom CSS, etc).
&lt;/p&gt;
&lt;p&gt;
I think there is a need to separate these things, and the best way to do this is to create a "Developer" role, and perhaps a "Customizer" role, which can be assigned to certain administrators. Since presentation capabilities are on a different dimension from content/operation capabilities, there is a need to assign them to users in parallel.
&lt;/p&gt;
&lt;p&gt;
For example, the proposal for custom CSS in the customizer introduces a way for people who don't know what they're doing to cause display problems. By assigning to them a role that allows operational administration, but no development capabilities, this function can be reserved for the knowledgeable users only.
&lt;/p&gt;
&lt;p&gt;
Allowing multiple role assignment may be a big change, but it's likely to be useful to many people, because without it, professionally supported sites end up giving client employees more power than they should have.
&lt;/p&gt;
&lt;p&gt;
I know there are plugins for these things, but I think they should be in core, and leave the plugins to handle uncommon situations.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38114 (Make it easier to visualize where to put your content in a given theme ...) updated</title>
      
        <dc:creator>jcastaneda</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38114#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38114#comment:16/1476313185572355</guid>
      <description>&lt;p&gt;
Just some thought from my personal years of reviewing themes:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What does the current default and fallback content landscape look like?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not the greatest in that a lot will use a fallback to how great their theme is or even what the theme can do.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What do themes and plugins currently do around preview or default content?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Currently some themes set a default ( &lt;code&gt;get_theme_mod( 'setting', 'This is an awesome theme' )&lt;/code&gt; ) that can often require a user to edit a setting just to remove that. Not always ideal in certain situations. A lot of it is because it is information about the theme and what it can do or even what the "pro" version has to offer.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What kind of format should this take? (i.e. JSON for cross-language/context compat)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
JSON is a potential one I could see being used for it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How do we make this translatable/localization-friendly, i.e. making sure that content is not just translatable into another language but also is culturally relevant?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Avoid time specific events or things? Make it more a generalized content.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How might this impact the theme review team?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It shouldn't. Having a standardized method would actually help in seeing what the theme is actually doing with user content and what - if any - metadata it is trying to get and use. On a related note I actually haven't seen very many themes ( in the repo ) have support for custom fields plugins or even doing much with metadata.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can this integrate with .org theme demos?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see why it couldn't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:56/1476313176786486</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you provide a UI control, it should be usable by everyone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for the clarification.
Sorry for derailing a bit the ticket with a wider question on accessibility. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22249 (Add ability to set or remove attributes on enqueued scripts and styles.) updated</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:46:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22249#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22249#comment:44/1476312405334057</guid>
      <description>&lt;p&gt;
It was also on line 285 of class.wp-styles.php. W3C reference for what can't be used in an attribute name is here: &lt;a class="ext-link" href="https://html.spec.whatwg.org/multipage/syntax.html#attributes-2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://html.spec.whatwg.org/multipage/syntax.html#attributes-2&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22249.7.diff attached to Ticket #22249</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22249/22249.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22249/22249.7.diff/1476312021955030</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>esc-attr-name.diff attached to Ticket #22249</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:36:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22249/esc-attr-name.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22249/esc-attr-name.diff/1476311819116683</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22249 (Add ability to set or remove attributes on enqueued scripts and styles.) updated</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22249#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22249#comment:43/1476311663965905</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Notably, this patch uses &lt;code&gt;esc_attr&lt;/code&gt; on line 501 to escape the attribute names. This isn't correct as it only clears out invalid utf8 characters and quotes, whereas valid attribute names need to be cleared of all the following characters &lt;code&gt;[\t\n\f \/&amp;gt;"\'=]+&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Cheers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:29:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:124/1476311358283802</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The usage of the post ID in the fragment URL is a return to ugly permalinks - I'm not super excited about using # at all, but whatever it is, it should stick to the slug (which should still be editable).
What are plans for indicating that X pages are the fragments that make up Y page on the pages list table?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It seems we are going in the direction of redirecting page URLs to anchors, but I can see only reasons to not do that (one being the point 2 of your questions above for example).
&lt;/p&gt;
&lt;p&gt;
Can you explain the rationale behind that direction?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:55/1476311196755635</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27403#comment:52" title="Comment 52"&gt;folletto&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A question on accessibility here: all the direct manipulation buttons are extra pointers to existing customizer controls. In practice, they provide a direct access to panels.
&lt;/p&gt;
&lt;p&gt;
In terms of accessibility, does it even make sense to make them accessible, instead of hiding them entirely, given there's already another accessible way to do the same thing (as much as the customizer navigation is accessible)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you provide a UI control, it should be usable by everyone. If it is not, maybe you should probably consider why you're adding that control in the first place. Additionally, an empty button is not just an accessibility issue, its a matter of web standards too and keeping it empty, I would say it's an incomplete development. The web is not an empty canvas, standards and specifications exist for a good reason.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:123/1476311117816665</guid>
      <description>&lt;p&gt;
Initial questions/concerns re: current direction:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The usage of the post ID in the fragment URL is a return to ugly permalinks - I'm not super excited about using &lt;code&gt;#&lt;/code&gt; at all, but whatever it is, it should stick to the slug (which should still be editable).
&lt;/li&gt;&lt;li&gt;What are plans for indicating that X pages are the fragments that make up Y page on the pages list table?
&lt;/li&gt;&lt;li&gt;Does this have to hinge on theme support?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:54/1476311112379808</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I kindly disagree :) The Customizer is not editing territory and I really hope it will never be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we need to clarify what we need by "editing territory", which I think it's another can of worms and I'm not getting into that right now. ;)
&lt;/p&gt;
&lt;p&gt;
All I'm saying is that the user reached that page because they expressed the intent to customize by clicking "customize" either in front-end or in the admin. Imagining to add another "edit" button after they have already expressed that desire by reaching that page is correct in terms of "customizer" as "Classic WordPress Implementation Of A Customization Tool With Preview", but that's us, that's the codebase, that's the history where we come from. The user intent? It has already spoken by the time they are seeing the customizer. And it can't be ignored.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38297 (System Status Report) created</title>
      
        <dc:creator>bhubbard</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:23:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38297</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38297/1476311001321876</guid>
      <description>&lt;p&gt;
Many plugins offer a System Status report/tool so they can find important information to debug support issues for their users/clients. Many of these all collect the same information such as PHP details, MySQL details, resource limits, installed/active plugins &amp;amp; themes, etc.
&lt;/p&gt;
&lt;p&gt;
Some plugins that offer this feature include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Woocommerce
&lt;/li&gt;&lt;li&gt;Monster Insights Analytics
&lt;/li&gt;&lt;li&gt;etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I propose WordPress core has one system status report, and plugins and themes could then hook into to add extra specific information as needed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>27403.3.diff attached to Ticket #27403</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27403/27403.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27403/27403.3.diff/1476310814422734</guid>
      <description>&lt;p&gt;
Updated patch to include icon removal
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:53/1476310763808521</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The "Customize" button on the admin bar is the edit button.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I kindly disagree :) The Customizer is not editing territory and I really hope it will never be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:17:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:122/1476310630867676</guid>
      <description>&lt;p&gt;
@bradyvercher @karmatosed of the options (for the control structure part), the last one would probably be the most preferable from your perspective since it's closest to the current option. Start with a generic control for sorted multi-object selection based on a &lt;code&gt;choices&lt;/code&gt; argument, then try to build it out to fully work for this feature. If we go crazy with cross-syncing to the front page control, we may need a child control of that to get this actual part to work well.
&lt;/p&gt;
&lt;p&gt;
Most if not all of the other items in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37974#comment:114" title="Comment 114"&gt;114&lt;/a&gt; after the first list will need to happen and aren't mutually exclusive. I'm increasingly thinking that we need to make selective refresh a requirement, and @pento may be able to help wrangle the internals to facilitate that. Let me know if you have questions or alternate ideas and we can work through those, here or in Slack.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:16:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:52/1476310617937996</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having an edit button.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a new feature, so I understand we're still mostly working in the frame of mind of the customizer and in that perspective one can imagine to toggle this as being an extra feature layered on top of the existing. However, from a user perspective, they have already clicked on edit. They are already editing.
&lt;/p&gt;
&lt;p&gt;
The "Customize" button on the admin bar &lt;strong&gt;is&lt;/strong&gt; the edit button.
&lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Current status of the buttons accessibility
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A question on accessibility here: all the direct manipulation buttons are extra pointers to existing customizer controls. In practice, they provide a direct access to panels.
&lt;/p&gt;
&lt;p&gt;
In terms of accessibility, does it even make sense to make them accessible, instead of hiding them entirely, given there's already another accessible way to do the same thing (as much as the customizer navigation is accessible)?
This is probably a meta-question, not strictly related to this scenario, so feel free to answer both in theory and in this specific case. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:15:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:51/1476310549073915</guid>
      <description>&lt;p&gt;
P.S. flexbox is tricky, there are browsers that still implement it differently. As you can see in the screenshot above (comment 49, Safari 10) the icon is not perfectly centered while on Chrome it is. I'd be curious to see how they look on Edge and all the IE versions that the Customizer currently supports. IE 9 is still supported, right? :) It is absolutely necessary to use flexbox here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:50/1476310440580998</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
As more and more elements can be edited having a clear differentiation between preview and edit is more and more needed. Having an UI element to change between preview-edit will very much help.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. This is an important design and UX issue. I still believe that this should be the sidebar collapse button, however. Why not move the sidebar collapse button to somewhere more distinct?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a good way to show icons for empty widget areas? That's an important point for discoverability.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a tricky point. Not just for widgets, but also for things like header images and themes where site-title is hidden when empty. I think it can be done, but maybe this is a future feature?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please also post images/animated gifs so that people like myself can easily view what is going on directly in the trac ticket.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Animated gif:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/-CyAMAc5zc.gif"&gt;&lt;img src="https://cldup.com/-CyAMAc5zc.gif" alt="https://cldup.com/-CyAMAc5zc.gif" crossorigin="anonymous" title="https://cldup.com/-CyAMAc5zc.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:49/1476310175957085</guid>
      <description>&lt;p&gt;
Current status of the buttons accessibility, no text or label that can be read out:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/3IEC0v0CCr.png"&gt;&lt;img src="https://cldup.com/3IEC0v0CCr.png" alt="https://cldup.com/3IEC0v0CCr.png" crossorigin="anonymous" title="https://cldup.com/3IEC0v0CCr.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Wed, 12 Oct 2016 22:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:48/1476309758372639</guid>
      <description>&lt;p&gt;
Regarding blue icons in the preview pane.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It creates visual clutter. Previewing the page in the customizer should show it as it is.
&lt;/li&gt;&lt;li&gt;Removing the blue icons requires the user to minimize the left customizer pane. (Which I find too vague.)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Having an edit button.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;As more and more elements can be edited having a clear differentiation between preview and edit is more and more needed. Having an UI element to change between preview-edit will very much help.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;I find it much more forward thinking. As the preview/edit button could also down the road be used on the frontend of the site doing something similar as could be done in the backend customizer.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Please also post images/animated gifs so that people like myself can easily view what is going on directly in the trac ticket.
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:47/1476309090057283</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476309087002014"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24661 (remove_accents is not removing combining accents) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:50:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24661#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24661#comment:30/1476309003369676</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476308999005948"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:50:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:96/1476309003272739</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476308999005948"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:46/1476308483121672</guid>
      <description>&lt;p&gt;
A couple of additional comments with testing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I'm back to thinking we need some sort of a toggle for another reason - if this causes layout issues on some themes (Twenty Seventeen's header menu currently is an example), that would mitigate the issues there without having to add theme support.
&lt;/li&gt;&lt;li&gt;Is there a good way to show icons for empty widget areas? That's an important point for discoverability.
&lt;/li&gt;&lt;li&gt;Focusing the menu location selector is a great approach for menus for now, since there's a link from there and the partial is more directly tied to that than the menu itself anyway.
&lt;/li&gt;&lt;li&gt;Add &lt;code&gt;type="button"&lt;/code&gt; for the button elements.
&lt;/li&gt;&lt;li&gt;Add an aria-label to each button, if possible that includes the label of the associated control.
&lt;/li&gt;&lt;li&gt;The buttons need a better focus style, with something other than color changes. Probably a blue outline/box-shadow as is used elsewhere in core.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:39:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:45/1476308387193011</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry, seems some simultaneous comments messed up the milestone and focus 😁
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:44/1476308138085449</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can someone post an animated gif so we can see what it looks like at this stage?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:43/1476308059196535</guid>
      <description>&lt;p&gt;
I appreciate that the new functionality is added via methods on the &lt;code&gt;Partial&lt;/code&gt; class, allowing the functionality to be overridden and extended based on the &lt;code&gt;Partial&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33948 (Implement subresource integrity (SRI)) updated</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33948#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33948#comment:6/1476307962435408</guid>
      <description>&lt;p&gt;
There's certainly a large amount of overlap. I'm happy to adjust my patch to fit should the other one be adopted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:32:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:42/1476307935321194</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
These new controls would need an accessibility review, at least for keyboard accessibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38114 (Make it easier to visualize where to put your content in a given theme ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:31:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38114#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38114#comment:15/1476307884330646</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476307881005894"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:41/1476307862114425</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Excellent work @sirbrillig! The small size of the patch is really great to see for unlocking so much functionality. Testing briefly, it works as advertised.
&lt;/p&gt;
&lt;p&gt;
There are a few tweaks to go still, but I'm moving to 4.7 since this should be ready to go soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:40/1476307771059916</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476307767005891"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38286 (Lost emojis) updated</title>
      
        <dc:creator>ramonjosegn</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38286#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38286#comment:4/1476307619752045</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38286#comment:3" title="Comment 3"&gt;superpoincare&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks like there is no issue in the front end. If I add new nodes using emoji using Chrome's developer's tools, it displays them fine. So it's possible that between your publishing anything and sending it to the database or reading from the database has some issue.
&lt;/p&gt;
&lt;p&gt;
In your post editor, do the emoji display fine?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think for some reason lost in database (possibly), I can add news emojis and can look and display fine, but the old are lost...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38172 (Enable Video Headers in Custom Headers) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38172#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38172#comment:26/1476307369851826</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476307367005877"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:121/1476307369747897</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476307367005877"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31089 (Customize: Add revisions for changesets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31089#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31089#comment:8/1476307254561113</guid>
      <description>&lt;p&gt;
@folletto yes, Customize Changesets (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30937" title="#30937: feature request: Add Customizer state persistence in changesets (formerly “transactions”) (closed: fixed)"&gt;#30937&lt;/a&gt;) actually result in a new revision of customizer settings for every publish. At the moment the changesets get automatically garbage-collected since there is no UI, but if a plugin adds &lt;code&gt;revisions&lt;/code&gt; support to the &lt;code&gt;customize_changeset&lt;/code&gt; post type, then published changeset posts will persist. Revision history for a given setting can then be extracted from those published &lt;code&gt;customize_changeset&lt;/code&gt; posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:65/1476306650138774</guid>
      <description>&lt;p&gt;
I tested this feature using &lt;a class="ext-link" href="https://patch-diff.githubusercontent.com/raw/xwp/wordpress-develop/pull/154.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://patch-diff.githubusercontent.com/raw/xwp/wordpress-develop/pull/154.diff&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In Chrome (Mac), I found it to work as expected, and enjoyed the experience.
&lt;/p&gt;
&lt;p&gt;
When I tested in Firefox (Mac), I noticed that content I had added in Chrome (Mac) showed up as a single line, and I couldn't get it to add carriage-returns, which made it difficult to edit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38172 (Enable Video Headers in Custom Headers) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Wed, 12 Oct 2016 21:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38172#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38172#comment:25/1476306120167508</guid>
      <description>&lt;p&gt;
It would be helpful to keep everything in one patch rather than having to apply multiple patches that are potentially conflicting.
&lt;/p&gt;
&lt;p&gt;
The API still seems not to be as solid as it probably should be at this point in the cycle. It's not backwards compatible for themes that already support custom headers (which personally I think is a blocker for making it a core feature), and as far as I can tell the customizer control gets displayed regardless of the theme supporting videos or not?
&lt;/p&gt;
&lt;p&gt;
Posting an example implementation would really go a long way in understanding what the API should cover, currently there seems to be a myriad of ways for themes to interact with it, which might not make for the  best dev experience.
&lt;/p&gt;
&lt;p&gt;
Having videos taking precedent over images is something we probably should explain in the customizer control as well. And inform them how they can use that as a fallback mechanism.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36995 (Support for Service Workers) updated</title>
      
        <dc:creator>bhubbard</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:56:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36995#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36995#comment:3/1476305802367989</guid>
      <description>&lt;p&gt;
This project might be a good starting point: &lt;a class="ext-link" href="https://github.com/mozilla/wp-sw-manager"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/mozilla/wp-sw-manager&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37980.3.diff attached to Ticket #37980</title>
      
        <dc:creator>kkoppenhaver</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:54:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37980/37980.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37980/37980.3.diff/1476305696150557</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37980 (Don't attach events to customizer section headings with cannot-expand class) updated</title>
      
        <dc:creator>kkoppenhaver</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37980#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37980#comment:8/1476305669960175</guid>
      <description>&lt;p&gt;
Should this cover it?  Basically, enforcing hover/focus on the various permutations of elements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38286 (Lost emojis) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38286#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38286#comment:3/1476305512806527</guid>
      <description>&lt;p&gt;
Looks like there is no issue in the front end. If I add new nodes using emoji using Chrome's developer's tools, it displays them fine. So it's possible that between your publishing anything and sending it to the database or reading from the database has some issue.
&lt;/p&gt;
&lt;p&gt;
In your post editor, do the emoji display fine?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38296 (Remove $sep variable duplication from Ternary Operator) updated</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:25:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38296#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38296#comment:1/1476303946636984</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38296.patch attached to Ticket #38296</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38296/38296.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38296/38296.patch/1476303892351693</guid>
      <description>&lt;p&gt;
Patch to remove variable duplication
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38296 (Remove $sep variable duplication from Ternary Operator) created</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:20:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38296</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38296/1476303611828982</guid>
      <description>&lt;p&gt;
In &lt;strong&gt;WP_List_Table&lt;/strong&gt; class, we are using ternary operators a lot. We know that the main advantage of the ternary operator is, it makes code shorter.
&lt;/p&gt;
&lt;p&gt;
Instead of uisng ternary operator like this,
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;( $i == $action_count ) ? $sep = '' : $sep = ' | ';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Can we use,
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$sep = ( $i == $action_count ) ? '' : ' | ';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So the variable $sep is written once. Shortening the code a bit.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33704 (Reduce reliance on wp_is_mobile()) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33704#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33704#comment:18/1476302944709361</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37513 (Admin bar sub menu items dashicon and screen readers) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:08:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37513#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37513#comment:11/1476302911720077</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 12 Oct 2016 20:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:69/1476302441456593</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Chatted with @markoheijnen on this today. Since there isn't a refresh yet, going to remove it from the milestone for now. Of course, if more happens here, we can move it back in.
&lt;/p&gt;
&lt;p&gt;
If I have time today or tomorrow, I'll see what the work looks like to give it a refresh -- by all means, if others are interested, please feel free to do so as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 12 Oct 2016 19:58:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:11/1476302311647674</guid>
      <description>&lt;p&gt;
There is an &lt;code&gt;exist&lt;/code&gt; capability that is assumed truthy by default, that concludes all users are allowed to exist.
&lt;/p&gt;
&lt;p&gt;
Visitors that are not logged in are, IMO, a safe on/off check. The only use/case for caps for logged-out users is a cookie based thing ala comments (and allowing previous commenters to comment unmoderated.)
&lt;/p&gt;
&lt;p&gt;
Once a visitor is no longer a human with intent, but rather a machine with programmed purpose, I think you're right that the boundaries start to get fuzzy.
&lt;/p&gt;
&lt;p&gt;
There's a lot to read through here to catch-up, so I'd like to do that before commenting more in-depth as to not accidentally sidetrack any efforts here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38286 (Lost emojis) updated</title>
      
        <dc:creator>ramonjosegn</dc:creator>

      <pubDate>Wed, 12 Oct 2016 19:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38286#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38286#comment:2/1476301302906334</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38286#comment:1" title="Comment 1"&gt;superpoincare&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it's difficult to find what the issue is without the link to your site.
&lt;/p&gt;
&lt;p&gt;
Could you provide it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Of course, my website its mirutafacil.com
&lt;/p&gt;
&lt;p&gt;
Thanks for looking
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Wed, 12 Oct 2016 19:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:120/1476301276267535</guid>
      <description>&lt;p&gt;
I found a few bugs after some great questions from @folletto.
&lt;/p&gt;
&lt;p&gt;
The interface needs to change/react if a user changes the page in the front page drop down after they have another front page set. To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Set a front page and create a section or two. Save them.
&lt;/li&gt;&lt;li&gt;Switch the page that is the front page in the drop down.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The live refresh changes and is accurate, unless the page you switched to in the drop down is also a section. However, the old front page is still listed here: &lt;a class="ext-link" href="https://cloudup.com/coQvdj-B41u"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/coQvdj-B41u&lt;/a&gt; So that should probably update on the fly.
&lt;/p&gt;
&lt;p&gt;
Let me know if this doesn't make sense, and I can make a demo.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Wed, 12 Oct 2016 19:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:39/1476300559514095</guid>
      <description>&lt;p&gt;
Thanks! Good advice; let me see how far I can get even with hacks.
&lt;/p&gt;
&lt;p&gt;
I figured out one way to get a menu to focus without changing much other code is to replace &lt;code&gt;nav_menu_instance[...]&lt;/code&gt; with &lt;code&gt;nav_menu_locations[primary]&lt;/code&gt;. I'm not sure if it's ideal, but it works for the time being.
&lt;/p&gt;
&lt;p&gt;
Still working on these issues:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Also noticed a bug (actually noticed by @westonruter in the plugin repo &lt;a class="ext-link" href="https://github.com/Automattic/customize-direct-manipulation/issues/23#issuecomment-251543800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/customize-direct-manipulation/issues/23#issuecomment-251543800&lt;/a&gt; ) where partials do not call their ready() method when first added.
&lt;/li&gt;&lt;li&gt;Need to find/make an event that is triggered when a partial is removed so the associated icon can be removed.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27403.2.diff attached to Ticket #27403</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Wed, 12 Oct 2016 19:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27403/27403.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27403/27403.2.diff/1476300316392522</guid>
      <description>&lt;p&gt;
Updated implementation with button icons, element-paired icons, and menu support
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38286 (Lost emojis) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Wed, 12 Oct 2016 19:08:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38286#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38286#comment:1/1476299305255098</guid>
      <description>&lt;p&gt;
I think it's difficult to find what the issue is without the link to your site.
&lt;/p&gt;
&lt;p&gt;
Could you provide it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Wed, 12 Oct 2016 19:00:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:119/1476298815115670</guid>
      <description>&lt;p&gt;
I wanted to drop in a demo so others could see how this looks and works right now:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/IvKDI14ETS.gif"&gt;&lt;img src="https://cldup.com/IvKDI14ETS.gif" alt="https://cldup.com/IvKDI14ETS.gif" crossorigin="anonymous" title="https://cldup.com/IvKDI14ETS.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>KalenJohnson</dc:creator>

      <pubDate>Wed, 12 Oct 2016 18:42:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:107/1476297763081901</guid>
      <description>&lt;p&gt;
I'm a little confused, @wonderboymusic started this ticket, is a core committer, and has been doing a lot of the work on it. Is he not a core member who is taking the lead on this one?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Wed, 12 Oct 2016 18:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:106/1476297617725811</guid>
      <description>&lt;p&gt;
I would be up for helping but my core history does not go back that far, so my WP core knowledge on previous core trac is more limited to someone who has more experience as well as being a more sesoned committer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 18:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:96/1476295957093997</guid>
      <description>&lt;p&gt;
We've discussed this ticket in the accessibility team and agreed we can't honestly say the Customizer itself is fully accessible. We're fine with considering the Customizer a territory for experimental accessibility, where we can test and research accessibility solutions for "modern" interfaces. As long as equivalent features stay in the traditional admin screens.
&lt;/p&gt;
&lt;p&gt;
Will try to summarize the main a11y issues specific to this implementation (I see other usability and UI issues are already pointed out in the previous comments and I agree on most of them).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Keyboard accessibility: everything can be done with keyboard. A big issue is infinite scroll though, see below
&lt;/li&gt;&lt;li&gt;Infinite scroll is a big accessibility barrier, as mentioned in a previous comment. This is a pre-existing issue for Themes, but seems there's no improvement in this area. If WordPress wants to be really accessible, infinite scroll should not be used at all
&lt;/li&gt;&lt;li&gt;Markup still doesn't validate, see comment &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37661#comment:63" title="Comment 63"&gt;comment:63&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;On the admin screens, both for installed themes and Add Themes screen, the number of displayed themes is announced via &lt;code&gt;wp.a11y.speak()&lt;/code&gt;, on the the Customizer instead this information is missing
&lt;/li&gt;&lt;li&gt;When selecting Featured, Popular, etc., or using the Feature Filter or Get Favorites, there's no audible feedback about what's happening. Looks like &lt;code&gt;wp.a11y.speak()&lt;/code&gt; is used just for the search, a request error, and when there are no themes
&lt;/li&gt;&lt;li&gt;There's no audible indication of which "view" is selected, the checkmark is just a visual thing
&lt;/li&gt;&lt;li&gt;Some aria-labels are added on the details modal controls, for example on the "Customize" and "Live Preview" but the one for Live Preview is the same for Customize and says "Customize {theme name}"
&lt;/li&gt;&lt;li&gt;Why not add aria-labels on other controls too? all the ones related to a theme-specific action would need one to refer to the theme name, not sure why they're added just to "Customize" and "Live Preview"
&lt;/li&gt;&lt;li&gt;I'd recommend to expand almost all of the other controls with &lt;code&gt;aria-label&lt;/code&gt; attributes, starting from the "Change" button (Change... what?) and the main buttons like Installed, Featured, Popular, etc.
&lt;/li&gt;&lt;li&gt;Usage of aria-owns for panels: I'm not sure to understand what is meant for
&lt;/li&gt;&lt;li&gt;Will skip issues related to the theme thumbnails as, with some variations, they're for the most part pre-existing issues
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 18:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:95/1476295592584900</guid>
      <description>&lt;p&gt;
Tested with Firefox, clicking "Install &amp;amp; Preview" from the details modal I've got this:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/nRb1WgDKqS.jpg"&gt;&lt;img src="https://cldup.com/nRb1WgDKqS.jpg" alt="https://cldup.com/nRb1WgDKqS.jpg" crossorigin="anonymous" title="https://cldup.com/nRb1WgDKqS.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Stay or leave? I wonder how many users would make the right choice 🙂 Choosing stay (IIRC) then the spinner hanged there indefinitely, choosing leave the installation completed and the Customizer switched to the Live preview.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Wed, 12 Oct 2016 17:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:118/1476295107313844</guid>
      <description>&lt;p&gt;
Nice job, @pento!
&lt;/p&gt;
&lt;p&gt;
I made a few tweaks in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.9.diff" title="Attachment '37974.9.diff' in Ticket #37974"&gt;37974.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.9.diff" title="Download"&gt;​&lt;/a&gt; to handle changes to the &lt;code&gt;page_on_front&lt;/code&gt; setting. It:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Automatically prepends the front page as a section whenever &lt;code&gt;page_on_front&lt;/code&gt; is changed. Nothing happens if the selected page is already a section.
&lt;/li&gt;&lt;li&gt;Refreshes the list of sections when changing &lt;code&gt;page_on_front&lt;/code&gt; to prevent the front page from being deleted from the list.
&lt;/li&gt;&lt;li&gt;Fixes the logic for when the sections control should be visible (&lt;code&gt;show_on_front&lt;/code&gt; should be &lt;code&gt;page&lt;/code&gt; and a page actually needs to be selected for &lt;code&gt;page_on_front&lt;/code&gt;).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I appreciate your recommendations, @celloexpressions. I'll make a concerted effort to address some of the things you mention and work on drafting up a more detailed response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.9.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Wed, 12 Oct 2016 17:38:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.9.diff/1476293886467456</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 17:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:94/1476292795392768</guid>
      <description>&lt;p&gt;
The theme details modal on Safari 10 seems to have a z-index issue:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/k6uUY5vTsA.png"&gt;&lt;img src="https://cldup.com/k6uUY5vTsA.png" alt="https://cldup.com/k6uUY5vTsA.png" crossorigin="anonymous" title="https://cldup.com/k6uUY5vTsA.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38284 (add capabilities for edit_{$object}_meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 17:18:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38284#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38284#comment:1/1476292730217018</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by tharsheblows. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1476292728006479"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 17:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:93/1476292457521501</guid>
      <description>&lt;p&gt;
Attached a few variations.
&lt;/p&gt;
&lt;p&gt;
I think the last one (Checkbox styling) is the best one, but it's tied to the entire redesign above which we have already discarded. I included it only for completeness.
&lt;/p&gt;
&lt;p&gt;
If we manage to get margins right, I think Field/Circle styling is our best choice there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customizer-theme-shocwase-alt-search-styles.png attached to Ticket #37661</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 17:12:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37661/customizer-theme-shocwase-alt-search-styles.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37661/customizer-theme-shocwase-alt-search-styles.png/1476292336849438</guid>
      <description>&lt;p&gt;
Customizer Theme Shocwase Alt Search Styles
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 16:52:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:92/1476291139564668</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still find the clicking and search icon to be a weird behaviour. I also feel it is either having a bug or issue with the flow. See this screencast:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yep, please also notice a search icon was recently added on the menu items / widgets search so there's some inconsistency. Placed on the right, the icon looks like an actionable control. Also, looks like the placeholder text inherits the bold font-weight from the container.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yep, please also notice a search icon was recently added on the menu items / widgets search so there's some inconsistency. Placed on the right, the icon looks like an actionable control. Also, looks like the placeholder text inherits the bold font-weight from the container.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll remind what I said above:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, I hate that search box too. However that's a limitation of the .org theme showcase API, so we have to deal with that until search becomes transversal to filters and not a filter on its own.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd put higher priority in fixing the backend to allow search happen across whichever filter is selected, instead of fixing that which is a workaround to that mess. We are working around an issue there. That's why it's not follwing patterns: that search can't follow any of these patterns due to the limitations in the backend.
&lt;/p&gt;
&lt;p&gt;
That said, there were a couple of alternatives I explored. I don't think any is better (due to the inherent backend issue above) but if you have a preference, we can switch to these. I'll attach and explain.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38172 (Enable Video Headers in Custom Headers) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Wed, 12 Oct 2016 16:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38172#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38172#comment:24/1476290110649395</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38172/38172.2.patch" title="Attachment '38172.2.patch' in Ticket #38172"&gt;attachment:38172.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38172/38172.2.patch" title="Download"&gt;​&lt;/a&gt; revises the theme API part of the original patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds &lt;code&gt;video&lt;/code&gt; param in custom header that defaults to false. To enable suppoet, themes would set it to true. It can be used to change the UI in the Customizer, based on that support too.
&lt;/li&gt;&lt;li&gt;Uses custom header &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; instead of creating separate ones for videos.
&lt;/li&gt;&lt;li&gt;Adds a &lt;code&gt;the_custom_header()&lt;/code&gt; function which spits out markup for the custom header, giving the video tag precedence.
&lt;/li&gt;&lt;li&gt;Uses header image as a &lt;code&gt;poster&lt;/code&gt; attribute for &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag as a fallback when header image is available.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Thanks to @joshcummingsdesign for working along with me to create a better patch. @celloexpressions Does this give you enough to work off of for the Customizer part?
&lt;/p&gt;
&lt;p&gt;
Things to think about still:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should other fallbacks exist, like the MediaElement.js one that @pento suggested? I think so.
&lt;/li&gt;&lt;li&gt;Should the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag include anything else for browsers that don't support it. Or should that be left up to themers?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38172.2.patch attached to Ticket #38172</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Wed, 12 Oct 2016 16:22:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38172/38172.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38172/38172.2.patch/1476289326537325</guid>
      <description>&lt;p&gt;
Revised patch for the theme API part of this. Worked on this along with @joshcummingsdesign
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38114 (Make it easier to visualize where to put your content in a given theme ...) updated</title>
      
        <dc:creator>poena</dc:creator>

      <pubDate>Wed, 12 Oct 2016 16:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38114#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38114#comment:14/1476288549876304</guid>
      <description>&lt;p&gt;
Yes, but I would rather see that the dummy content was not set by the theme developer, since this is
becoming a real problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 15:45:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:91/1476287125522278</guid>
      <description>&lt;p&gt;
Using Safari 10 and the keyboard to navigate, as soon as the first theme thumbnail gets focus, the sidebar content disappears:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/qjQLsvTcuV.png"&gt;&lt;img src="https://cldup.com/qjQLsvTcuV.png" alt="https://cldup.com/qjQLsvTcuV.png" crossorigin="anonymous" title="https://cldup.com/qjQLsvTcuV.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 15:39:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:90/1476286763848883</guid>
      <description>&lt;p&gt;
When installing a theme, the theme name for the aria labels is undefined. Also, I'd recommend to test in other languages that provide a longer translation for the visible text &lt;code&gt;Installing&lt;/code&gt;. Having both buttons displaying the spinner and changing text looks a bit weird.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/W0yv0PUh4k.png"&gt;&lt;img src="https://cldup.com/W0yv0PUh4k.png" alt="https://cldup.com/W0yv0PUh4k.png" crossorigin="anonymous" title="https://cldup.com/W0yv0PUh4k.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/6JYbmNJuyA.png"&gt;&lt;img src="https://cldup.com/6JYbmNJuyA.png" alt="https://cldup.com/6JYbmNJuyA.png" crossorigin="anonymous" title="https://cldup.com/6JYbmNJuyA.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38295 (`WP_Term_Query` doesn't cache count queries) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 12 Oct 2016 15:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38295#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38295#comment:1/1476286143778032</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38784" title="Taxonomy: Cache results of term count queries.
Fixes #38295."&gt;38784&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Cache results of term count queries.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38295" title="#38295: defect (bug): `WP_Term_Query` doesn't cache count queries (closed: fixed)"&gt;#38295&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38784]: Taxonomy: Cache results of term count queries.  Fixes #38295.</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 12 Oct 2016 15:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38784/1476286143292792</guid>
      <description>&lt;p&gt;
Taxonomy: Cache results of term count queries.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38295" title="#38295: defect (bug): `WP_Term_Query` doesn't cache count queries (closed: fixed)"&gt;#38295&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38295 (`WP_Term_Query` doesn't cache count queries) created</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 12 Oct 2016 15:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38295</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38295/1476285633942683</guid>
      <description>&lt;p&gt;
It looks like this was an oversight when &lt;code&gt;fields=count&lt;/code&gt; was introduced. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13491" title="Use get_terms() in wp_count_terms(). Props scribu. Fixes #10746"&gt;[13491]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38294 (Visual editor hangs in Chrome and Firefox when a sequence of no-break ...) created</title>
      
        <dc:creator>greatislander</dc:creator>

      <pubDate>Wed, 12 Oct 2016 15:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38294/1476285292799935</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Problem&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A line of text wrapped in &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags followed immediately by ~30 no-break space characters (U+00A0) and additional text causes the visual editor to become unresponsive in Chrome and Firefox on macOS Sierra.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Steps to Reproduce&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Insert the following content into the text editor of a post or page (note that the spaces preceding the asterisk are no-break spaces):
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.&amp;lt;/p&amp;gt;
                               *
&lt;/pre&gt;&lt;ol start="2"&gt;&lt;li&gt;Save the post or page.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Switch to the visual editor.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;Expected Behaviour&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A WYSIWYG version of the content is displayed.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Actual Behaviour&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The user receives the error message "The following page has become unresponsive. You can wait for it to become responsive or kill it." (Chrome) or "A script on this page may be busy, or it may have stopped responding. You can stop the script now, open the script in the debugger, or let the script continue." (Firefox). In some cases, letting the script continue will eventually load the visual editor properly.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Versions&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress v4.6.1
&lt;/li&gt;&lt;li&gt;Twenty Sixteen v1.3
&lt;/li&gt;&lt;li&gt;PHP 7.0 + MariaDB
&lt;/li&gt;&lt;li&gt;macOS Sierra 10.12
&lt;/li&gt;&lt;li&gt;Google Chrome 53.0.2785.143 (64-bit)
&lt;/li&gt;&lt;li&gt;Firefox 45.0.2
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13743 (Ability to choose a network default theme) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Wed, 12 Oct 2016 15:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13743#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13743#comment:20/1476284754659908</guid>
      <description>&lt;p&gt;
My bad, that's true. :)
&lt;/p&gt;
&lt;p&gt;
Seems we have a nice patch here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 14:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:10/1476282858484000</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jdgrimes. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476282855005531"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 12 Oct 2016 14:24:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:9/1476282268444037</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Another benefit of "is accessible" vs just "is public" is that it allows for more granular rules in relation to non-logged-in users as well. In other words, strictly speaking, if something is public, it is public for all non-logged-in users. With an "is accessible for user" API, that doesn't have to be the case, the IP of the current non-logged-in user can be taken into account, etc. I don't see any reason to arbitrarily restrict ourselves to building an "is public" API, when an "is accessible" API can be build on the same basic structure but provides many more opportunities for usefulness.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I think maybe we should think of this ticket more like a "feature project" then a regular ticket. When it comes to fleshing out the API in more detail, we might indeed want to branch out onto GitHub, and then come back here with t he finished patch. First though, I want to get a very basic POC up and get a few more eyes on this ticket, to see if others (especially committers) feel that it is headed in the right direction.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Actually, yeah, I just added a basic POC: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38276/poc-1.php" title="Attachment 'poc-1.php' in Ticket #38276"&gt;poc-1.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38276/poc-1.php" title="Download"&gt;​&lt;/a&gt;. It's purpose is just to give something more tangible to help people understand what exactly we are talking about here. The final implementation might be completely different, but it should ultimately provide the same information to anything that calls it: whether the item is accessible to the user.
&lt;/p&gt;
&lt;p&gt;
Notes:
&lt;/p&gt;
&lt;p&gt;
The logic for posts from &lt;code&gt;WP_Query&lt;/code&gt; condenses down to be unexpectedly simple. The raw logic that would come from &lt;code&gt;WP_Query&lt;/code&gt; would be more complex, looking something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
                &lt;span class="nv"&gt;$status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_id&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$post_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_status_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$status&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_status&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;public&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$is_accessible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_status&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protected&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$is_accessible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'edit_post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post_id&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_status&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;private&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$is_accessible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'read_post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post_id&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$is_accessible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The reason for the extra complexity there is that &lt;code&gt;WP_Query&lt;/code&gt;'s logic attempts to take a short-cut by anticipating some of the logic in the capabilities API. In other words, instead of just leaving all of the handling for non-public post statuses to the capabilities API, it applies its own logic intended to be roughly equivalent to what the capabilities API would do. This once again demonstrates a lack of unity in the post accessibility "API" as it currently stands. Anybody wanting to influence that logic has to do so in multiple locations.
&lt;/p&gt;
&lt;p&gt;
The logic in &lt;code&gt;WP_Query&lt;/code&gt; is basically equivalent to the &lt;em&gt;default logic&lt;/em&gt; in &lt;code&gt;map_meta_cap()&lt;/code&gt;, but there is one difference: if the post's status is not &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;, or &lt;code&gt;protected&lt;/code&gt;, then it is excluded entirely. In &lt;code&gt;map_meta_cap()&lt;/code&gt; such a post status would be less restricted, defaulting to the &lt;code&gt;read&lt;/code&gt; capability for that post type if the user was the author, or &lt;code&gt;user_can( 'edit_post' )&lt;/code&gt; otherwise. This may be intentional, since &lt;code&gt;WP_Query&lt;/code&gt; does choose to exclude some posts that are otherwise accessible to the user, for various reasons (like they aren't intended to be searchable in that way).
&lt;/p&gt;
&lt;p&gt;
(Note that this also brings to light something that might be worth considering in building this API, and that is that post accessibility doesn't equal post searchability. The post may be accessible to the user in general, but that might not mean that it should be made accessible to them in every context and by every means. Something to think about.)
&lt;/p&gt;
&lt;p&gt;
Anyway, in the POC I haven't made any assumptions in regard to the caps API like this, but instead fall back on it directly if the post status isn't public. I believe that this is the correct behavior, at least in the context of this API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38114 (Make it easier to visualize where to put your content in a given theme ...) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Wed, 12 Oct 2016 14:23:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38114#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38114#comment:13/1476282190853058</guid>
      <description>&lt;p&gt;
Let's make decisions like this based on the end-user experience, not how it might impact reviewers, and how our review process arbitrarily happens to work at this point in time. Something like this is potentially very important in evolving how people experience themes and customization in WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33017 (Images displayed with page.php instead of index.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 12 Oct 2016 14:16:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33017#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33017#comment:5/1476281783859580</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by meszarosrob. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476281780005529"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33017 (Images displayed with page.php instead of index.php) reopened</title>
      
        <dc:creator>implenton</dc:creator>

      <pubDate>Wed, 12 Oct 2016 14:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33017#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33017#comment:4/1476280986249083</guid>
      <description>&lt;p&gt;
@wonderboymusic I can reproduse this.
&lt;/p&gt;
&lt;p&gt;
I am using for content the Theme Unit Test &lt;a class="ext-link" href="https://wpcom-themes.svn.automattic.com/demo/theme-unit-test-data.xml"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wpcom-themes.svn.automattic.com/demo/theme-unit-test-data.xml&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After importing the XML, URL to visit: &lt;code&gt;/about/clearing-floats/spectacles-2/&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Permalink Settings: "Month and name"
&lt;/p&gt;
&lt;p&gt;
Query Monitor debug info attached.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>poc-1.php attached to Ticket #38276</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 12 Oct 2016 14:02:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38276/poc-1.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38276/poc-1.php/1476280926029855</guid>
      <description>&lt;p&gt;
Basic POC of what an API like this might look like
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screenshot 2016-10-12 16.53.28.png attached to Ticket #33017</title>
      
        <dc:creator>implenton</dc:creator>

      <pubDate>Wed, 12 Oct 2016 14:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33017/Screenshot%202016-10-12%2016.53.28.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33017/Screenshot%202016-10-12%2016.53.28.png/1476280920913546</guid>
      <description>&lt;p&gt;
Query Monitor
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 12 Oct 2016 13:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:43/1476280162331115</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38783" title="Comments: When checking comments, returned error object should include ..."&gt;38783&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: When checking comments, returned error object should include HTTP status code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The status code in the &lt;code&gt;WP_Error&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; array is needed to send&lt;br /&gt;
headers in wp-comments-post.php, and was erroneously not included in&lt;br /&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38778" title="Comments: Abstract `die()` calls from comment submission routine.
 ..."&gt;[38778]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props needle, websupporter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36901" title="#36901: enhancement: Removing wp_die() from wp_allow_comment() (closed: fixed)"&gt;#36901&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38783]: Comments: When checking comments, returned error object should include ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 12 Oct 2016 13:49:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38783</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38783/1476280161809055</guid>
      <description>&lt;p&gt;
Comments: When checking comments, returned error object should include HTTP status code.
&lt;/p&gt;
&lt;p&gt;
The status code in the &lt;code&gt;WP_Error&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; array is needed to send
headers in wp-comments-post.php, and was erroneously not included in
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38778" title="Comments: Abstract `die()` calls from comment submission routine.
 ..."&gt;[38778]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props needle, websupporter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36901" title="#36901: enhancement: Removing wp_die() from wp_allow_comment() (closed: fixed)"&gt;#36901&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38293 (A connected user can delete a protected post meta) created</title>
      
        <dc:creator>ajoah</dc:creator>

      <pubDate>Wed, 12 Oct 2016 13:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38293</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38293/1476279556087774</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I discovered that an user can rename (and so delete) a protected post meta if he knows its id.
&lt;/p&gt;
&lt;p&gt;
Example :
&lt;/p&gt;
&lt;p&gt;
My posts meta :
&lt;a style="padding:0; border:none" href="https://snag.gy/RfhUA5.jpg"&gt;&lt;img src="https://snag.gy/RfhUA5.jpg" alt="https://snag.gy/RfhUA5.jpg" crossorigin="anonymous" title="https://snag.gy/RfhUA5.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I send the normal meta name with the protected meta id (24) :
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://snag.gy/SIo9l4.jpg"&gt;&lt;img src="https://snag.gy/SIo9l4.jpg" alt="https://snag.gy/SIo9l4.jpg" crossorigin="anonymous" title="https://snag.gy/SIo9l4.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After update :
&lt;a style="padding:0; border:none" href="https://snag.gy/345HTD.jpg"&gt;&lt;img src="https://snag.gy/345HTD.jpg" alt="https://snag.gy/345HTD.jpg" crossorigin="anonymous" title="https://snag.gy/345HTD.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The problem comes from &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/post.php#L291"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/post.php#L291&lt;/a&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="c1"&gt;// Meta Stuff
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'meta'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$post_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'meta'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'meta'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_meta_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                                &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$meta&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_id&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                                &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_protected_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'key'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'edit_post_meta'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'key'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                                &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="nx"&gt;update_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'key'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'value'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The is_protected_meta function is used only on the new name and not on the old name :
&lt;/p&gt;
&lt;pre class="wiki"&gt;$meta-&amp;gt;meta_key
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>38292.2.patch attached to Ticket #38292</title>
      
        <dc:creator>lukasbesch</dc:creator>

      <pubDate>Wed, 12 Oct 2016 12:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38292/38292.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38292/38292.2.patch/1476275131748557</guid>
      <description>&lt;p&gt;
Added documentation and exclude node_modules and CVS by default
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Oct 2016 12:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:105/1476274462852470</guid>
      <description>&lt;p&gt;
I feel like I should further clarify that anybody can run with a project, you don't have to be a committer by any means. But, it's very hard to feel empowered without a seasoned committer with some deep knowledge of history along for the ride, so I highly recommend starting with one rather than looking for one later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38291 (gethostbyname() at wp-includes/http.php don´t work if host is ipv6 ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 12 Oct 2016 12:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38291#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38291#comment:1/1476274335156878</guid>
      <description>&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This might already be resolved by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38727" title="HTTP: Update Requests to master (0048f3c) which fixes a number of ..."&gt;[38727]&lt;/a&gt; (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38070" title="#38070: defect (bug): RegEx to remove double slashes affects query strings as well. (closed: fixed)"&gt;#38070&lt;/a&gt;). Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37733" title="#37733: defect (bug): `cURL error 3: malformed` for remote requests since 4.6 (closed: fixed)"&gt;#37733&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Can you test if the issue still exists when running the latest nightly build?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32315 ($wpdb-&gt;insert fails without error msg) updated</title>
      
        <dc:creator>jrusinek</dc:creator>

      <pubDate>Wed, 12 Oct 2016 12:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32315#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32315#comment:5/1476274267940025</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I cannot believe this is still an issue. I suffer from it in 4.5.2, but I am pretty sure 4.6.1 still has it. I got here through Social Login plugin issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38292 (Introduce exclusion for WP_Theme::scandir()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 12 Oct 2016 12:09:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38292#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38292#comment:3/1476274164690931</guid>
      <description>&lt;p&gt;
@lukasbesch Thanks for your patch! Would you mind adding documentation according to the inline docs standards? See &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/&lt;/a&gt;. Also, braces for conditions are a requirement for newly added code as per our coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38292 (Introduce exclusion for WP_Theme::scandir()) updated</title>
      
        <dc:creator>lukasbesch</dc:creator>

      <pubDate>Wed, 12 Oct 2016 12:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38292#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38292#comment:2/1476273919659728</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There shouldn't be a reason to scan &lt;code&gt;node_modules&lt;/code&gt;, so we should be safe to hardcode. But let's keep it filterable yet so one can add other package managers or libraries to that array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38292 (Introduce exclusion for WP_Theme::scandir()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 12 Oct 2016 11:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38292#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38292#comment:1/1476273130178018</guid>
      <description>&lt;p&gt;
given the line before it is &lt;code&gt;if ( '.' == $result[0] ) continue; &lt;/code&gt; which is mostly used to skip &lt;code&gt;.svn&lt;/code&gt; folders, and there's a &lt;code&gt;CVS&lt;/code&gt; check within the next block, it's probably worth just hard-coding &lt;code&gt;node_modules&lt;/code&gt; into the code here to skip for everyone (given how common it is to use a node-based development method today).
&lt;/p&gt;
&lt;p&gt;
To make it more readable we can define those skip-directories as an array that's filtered if it makes it more readable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38292.patch attached to Ticket #38292</title>
      
        <dc:creator>lukasbesch</dc:creator>

      <pubDate>Wed, 12 Oct 2016 11:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38292/38292.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38292/38292.patch/1476272893792682</guid>
      <description>&lt;p&gt;
Proposed fix
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38292 (Introduce exclusion for WP_Theme::scandir()) created</title>
      
        <dc:creator>lukasbesch</dc:creator>

      <pubDate>Wed, 12 Oct 2016 11:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38292</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38292/1476272820976131</guid>
      <description>&lt;p&gt;
I am using NPM to manage my theme's dependencies during development and ran into the following issue where accessing &lt;code&gt;wp-admin/edit.php?post_type=page&lt;/code&gt; returned an empty response. Tracing it down I found out that WordPress is looking for possible page templates in the theme directory. Scanning the &lt;code&gt;node_modules&lt;/code&gt; folder is probably too much a server can handle.
&lt;/p&gt;
&lt;p&gt;
To solve this problem I suggest to introduce an exclusion list so theme developers can add directories (and files) that will be ignored when searching for post templates. I am not aware of any disadvantages of this solution and don't exactly know where the function is used elsewhere.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38291 (gethostbyname() at wp-includes/http.php don´t work if host is ipv6 ...) created</title>
      
        <dc:creator>lofesa</dc:creator>

      <pubDate>Wed, 12 Oct 2016 11:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38291</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38291/1476271292838089</guid>
      <description>&lt;p&gt;
I allways get the message "Download failed. A valid URL was not provided" when I try to reinstall wordpress, update translations, plugins or install news plugins. I can do it manually.
Searched these text message in code files at github, then added a number for each for differentiate and find the message becomes from wp-includes/class-http.php at line 264.
I put these code into the "if" condition
&lt;/p&gt;
&lt;p&gt;
file_put_contents('path(to/the/file/variable.txt',$url,FILE_APPEND);
file_put_contents('path(to/the/file/variable.txt',$arrURL,FILE_APPEND);
&lt;/p&gt;
&lt;p&gt;
and allways the variables are empty...but if I put the catch code before the if condition get these values
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://api.wordpress.org/plugins/update-check/1.1/httpsapi.wordpress.org/plugins/update-check/1.1/http://version.wpbakery.com/?1476267260httpversion.wpbakery.com/1476267260https://api.wordpress.org/themes/update-check/1.1/httpsapi.wordpress.org/themes/update-check/1.1/https://api.wordpress.org/core/version-check/1.7/?version=4.6.1&amp;amp;php=7.0.11&amp;amp;locale=en_US&amp;amp;mysql=5.5.5&amp;amp;local_package=&amp;amp;blogs=1&amp;amp;users=2&amp;amp;multisite_enabled=0&amp;amp;initial_db_version=33056httpsapi.wordpress.org/core/version-check/1.7/version=4.6.1&amp;amp;php=7.0.11&amp;amp;locale=en_US&amp;amp;mysql=5.5.5&amp;amp;local_package=&amp;amp;blogs=1&amp;amp;users=2&amp;amp;multisite_enabled=0&amp;amp;initial_db_version=33056https://api.wordpress.org/plugins/update-check/1.1/httpsapi.wordpress.org/plugins/update-check/1.1/http://version.wpbakery.com/?1476267265httpversion.wpbakery.com/1476267265https://api.wordpress.org/core/checksums/1.0/?version=4.6.1&amp;amp;locale=en_UShttpsapi.wordpress.org/core/checksums/1.0/version=4.6.1&amp;amp;locale=en_US"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://api.wordpress.org/plugins/update-check/1.1/httpsapi.wordpress.org/plugins/update-check/1.1/http://version.wpbakery.com/?1476267260httpversion.wpbakery.com/1476267260https://api.wordpress.org/themes/update-check/1.1/httpsapi.wordpress.org/themes/update-check/1.1/https://api.wordpress.org/core/version-check/1.7/?version=4.6.1&amp;amp;php=7.0.11&amp;amp;locale=en_US&amp;amp;mysql=5.5.5&amp;amp;local_package=&amp;amp;blogs=1&amp;amp;users=2&amp;amp;multisite_enabled=0&amp;amp;initial_db_version=33056httpsapi.wordpress.org/core/version-check/1.7/version=4.6.1&amp;amp;php=7.0.11&amp;amp;locale=en_US&amp;amp;mysql=5.5.5&amp;amp;local_package=&amp;amp;blogs=1&amp;amp;users=2&amp;amp;multisite_enabled=0&amp;amp;initial_db_version=33056https://api.wordpress.org/plugins/update-check/1.1/httpsapi.wordpress.org/plugins/update-check/1.1/http://version.wpbakery.com/?1476267265httpversion.wpbakery.com/1476267265https://api.wordpress.org/core/checksums/1.0/?version=4.6.1&amp;amp;locale=en_UShttpsapi.wordpress.org/core/checksums/1.0/version=4.6.1&amp;amp;locale=en_US&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As you can see some url´s have loss the ":\/\/" between the http(s) and the url, I don´t know if this is the expected behaviour, but why the varibles are lossing their values between lines 262 and 264?
&lt;/p&gt;
&lt;p&gt;
I have tried to update/install flushing all caches, disabling all plugings, disabling child theme..... and allways get the same message "Upgrading from..URL Donwload failed. A valid URL was not provided"
&lt;/p&gt;
&lt;p&gt;
P.S. Sorry for my bad english.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36809 (Remove target="_blank" checkbox in Advanced Link Modal) updated</title>
      
        <dc:creator>NealMcConachie</dc:creator>

      <pubDate>Wed, 12 Oct 2016 10:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36809#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36809#comment:16/1476267740490276</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36809#comment:15" title="Comment 15"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36809#comment:13" title="Comment 13"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Presskopp - Just submit your patch in this ticket. No need for a second one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This ticket is focused exclusively on the the "Insert/edit link" modal, while &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/37941" title="#37941: enhancement: add rel=&amp;#34;noopener noreferrer&amp;#34; to any target=&amp;#34;_blank&amp;#34; (assigned)"&gt;#37941&lt;/a&gt; was for all &lt;code&gt;target="_blank"&lt;/code&gt; links in the admin. I think this should be handled separately, per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36809#comment:10" title="Comment 10"&gt;comment:10&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/23432" title="#23432: task (blessed): Review usage of target=&amp;#34;_blank&amp;#34; in the admin (assigned)"&gt;#23432&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. From my clients' perspective, the security issue is arguably a more urgent (not necessarily more important, but definitely more urgent) requirement than the usability one.  In the meantime, I'll apply the patch that @Presskopp provided, but it sure would be nice to prioritise this for an upcoming release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13743 (Ability to choose a network default theme) updated</title>
      
        <dc:creator>PieWP</dc:creator>

      <pubDate>Wed, 12 Oct 2016 09:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13743#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13743#comment:19/1476266275440382</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13743#comment:18" title="Comment 18"&gt;Mista-Flo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't understand one thing in your patch. Did you forgot to assign again stylesheet and template var in case if we want to get the WP_DEFAULT_THEME or WP core theme.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
They are assigned on line 368, and only get overwritten in case the default theme option is set.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13743#comment:18" title="Comment 18"&gt;Mista-Flo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And the if empty $theme could throw à warning if the $theme Var is not set, no ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;empty()&lt;/code&gt; also checks for an &lt;code&gt;isset()&lt;/code&gt;, you can insert non-existing vars into an &lt;code&gt;empty()&lt;/code&gt; without generating strict notices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 12 Oct 2016 09:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:16/1476265156531989</guid>
      <description>&lt;p&gt;
@ocean90 mentioned that &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37997/37997.2.diff" title="Attachment '37997.2.diff' in Ticket #37997"&gt;37997.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37997/37997.2.diff" title="Download"&gt;​&lt;/a&gt; would basically revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36538" title="i18n: Prevent `is_textdomain_loaded()` from returning true even if ..."&gt;[36538]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 09:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:64/1476265009058969</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should just re-use the core textarea control and skip trying to add line numbers. A line number gutter reduces the overall width in precious horizontal real estate. We can let an eventual CodeMirror or some other real editor library provide that UI instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree would be better to let that be handled directly in CodeMirror (or else), but if the feature is already in for a standard textarea, I think it's still beneficial. As noted above (it's a bit hidden, sorry) it helps keeping sense of longer CSS fixes. That said, I agree we should keep in mind to swap it with a proper CodeMirror (or else) one once we merge syntax highlighting in. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31089 (Customize: Add revisions for changesets) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 12 Oct 2016 09:33:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31089#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31089#comment:7/1476264811971892</guid>
      <description>&lt;p&gt;
Just noting that the revision UI proposed in the Additional CSS feature in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35395" title="#35395: feature request: Provide a better gateway for code-based theme customizations with the ... (closed: fixed)"&gt;#35395&lt;/a&gt; can be adapted and used to be a global versioning system instead of just for CSS. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 12 Oct 2016 09:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:117/1476264479774760</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.8.diff" title="Attachment '37974.8.diff' in Ticket #37974"&gt;37974.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.8.diff" title="Download"&gt;​&lt;/a&gt; adds the front page to the sortable list. There are some things that need polishing, but it's enough for testing.
&lt;/p&gt;
&lt;p&gt;
Issues I'm aware of:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The "Front Page Sections" list needs to refresh when the Front Page dropdown changes.
&lt;/li&gt;&lt;li&gt;The new behaviour in &lt;code&gt;WP_Query&lt;/code&gt; should be hidden behind a query arg.
&lt;/li&gt;&lt;li&gt;I haven't tested yet, but I suspect &lt;code&gt;get_post( get_option( 'page_on_front' ) )&lt;/code&gt; may have some funky behaviour.
&lt;/li&gt;&lt;li&gt;There's probably some insane behaviour if someone runs &lt;code&gt;wp_delete_post( get_option( 'page_on_front' ), true )&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;This needs so many unit tests. I'd like to wrap up the &lt;code&gt;WP_Query&lt;/code&gt; changes fairly soon, so we can get piles of tests written.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
My Customizer code is... okay. Please review and rewrite as necessary. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.8.diff attached to Ticket #37974</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 12 Oct 2016 09:20:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.8.diff/1476264011287764</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37974.7.diff attached to Ticket #37974</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 12 Oct 2016 09:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.7.diff/1476263955263467</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 12 Oct 2016 08:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:89/1476262464574132</guid>
      <description>&lt;p&gt;
I second what @afercia is saying about the search icon pattern. I noticed that whilst testing another patch today and it felt jarring.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/draozGqkw0.png"&gt;&lt;img width="50%" alt="https://cldup.com/draozGqkw0.png" title="https://cldup.com/draozGqkw0.png" crossorigin="anonymous" src="https://cldup.com/draozGqkw0.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 12 Oct 2016 08:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:116/1476262240570277</guid>
      <description>&lt;p&gt;
@bradyvercher I went over the latest patch this morning and I think visually we're solid or at least solid enough to now focus on what needs to be done refactoring wise. I still would like the fixed page issue explored, however I am keen that doesn't hold us up. Thanks for everything you've done so far.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 12 Oct 2016 08:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:115/1476261886695372</guid>
      <description>&lt;p&gt;
@celloexpressions which options get us to keep the current UI as shown in the latest patch? That's something that is at this stage needed. I'm asking as it's not clear to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13743 (Ability to choose a network default theme) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Wed, 12 Oct 2016 08:39:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13743#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13743#comment:18/1476261588475958</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey thanks for the help.
&lt;/p&gt;
&lt;p&gt;
I get it now for the BC concern, it's fine.
&lt;/p&gt;
&lt;p&gt;
I don't understand one thing in your patch. Did you forgot to assign again stylesheet and template var in case if we want to get the WP_DEFAULT_THEME or WP core theme.
&lt;/p&gt;
&lt;p&gt;
And the if empty $theme could throw à warning if the $theme Var is not set, no ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>needle</dc:creator>

      <pubDate>Wed, 12 Oct 2016 08:34:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:42/1476261242906133</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36901#comment:40" title="Comment 40"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36901/36901.10.diff" title="Attachment '36901.10.diff' in Ticket #36901"&gt;36901.10.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36901/36901.10.diff" title="Download"&gt;​&lt;/a&gt; restores the previous status codes for comment floods and duplicates.
&lt;/p&gt;
&lt;p&gt;
Could I get a sanity check from @needle or anyone else who can reproduce?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @boonebgorges that fixes it for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 07:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:88/1476255826127436</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37661#comment:68" title="Comment 68"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/oVd0JvZmKq.png"&gt;&lt;img width="50%" alt="https://cldup.com/oVd0JvZmKq.png" title="https://cldup.com/oVd0JvZmKq.png" crossorigin="anonymous" src="https://cldup.com/oVd0JvZmKq.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I wonder if in the above you should be able to click the search icon? It feels weird to just be there unable to interact.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yep, please also notice a search icon was recently added on the menu items / widgets search so there's some inconsistency.  Placed on the right, the icon looks like an actionable control. Also, looks like the placeholder text inherits the bold font-weight from the container.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/l5uUt2nXHQ.png"&gt;&lt;img src="https://cldup.com/l5uUt2nXHQ.png" alt="https://cldup.com/l5uUt2nXHQ.png" crossorigin="anonymous" title="https://cldup.com/l5uUt2nXHQ.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screenshot-192.185.190.97 2082 2016-10-12 12-28-51.png attached to Ticket #38290</title>
      
        <dc:creator>immujune30</dc:creator>

      <pubDate>Wed, 12 Oct 2016 07:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38290/screenshot-192.185.190.97%202082%202016-10-12%2012-28-51.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38290/screenshot-192.185.190.97%202082%202016-10-12%2012-28-51.png/1476255706538333</guid>
      <description>&lt;p&gt;
database file upload error
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38290 (#1273 - Unknown collation: 'utf8_unicode_520_ci') created</title>
      
        <dc:creator>immujune30</dc:creator>

      <pubDate>Wed, 12 Oct 2016 07:00:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38290</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38290/1476255651594108</guid>
      <description>&lt;p&gt;
HI,
&lt;/p&gt;
&lt;p&gt;
I have developed my website in localhost and when i tried to move the site to my server.
&lt;/p&gt;
&lt;p&gt;
On the database when i tried to upload my database file it is raising &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1273" title="#1273: defect (bug): Pingbacks screw up (closed: wontfix)"&gt;#1273&lt;/a&gt; - Unknown collation: 'utf8_unicode_520_ci' error.
&lt;/p&gt;
&lt;p&gt;
I developed my site on the latest version of wordpress 4.6.1
&lt;/p&gt;
&lt;p&gt;
And after googling i came to know the sites developed on 4.5.4 below versions of wordpress are not raising any issues while uploading into the server database.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13743 (Ability to choose a network default theme) updated</title>
      
        <dc:creator>PieWP</dc:creator>

      <pubDate>Wed, 12 Oct 2016 06:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13743#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13743#comment:17/1476254951562096</guid>
      <description>&lt;p&gt;
Changed loading priority in the patch of @Mista-Flo.
&lt;/p&gt;
&lt;p&gt;
If a theme has been selected in the settings screen it should be loaded in favour of the defined &lt;code&gt;WP_DEFAULT_THEME&lt;/code&gt;. Note that this is backwards compatible since the code will only execute when the new &lt;code&gt;'default_theme'&lt;/code&gt; network setting is set, so in existing installations it will fall back to the &lt;code&gt;WP_DEFAULT_THEME&lt;/code&gt; constant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13743.5.patch attached to Ticket #13743</title>
      
        <dc:creator>PieWP</dc:creator>

      <pubDate>Wed, 12 Oct 2016 06:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13743/13743.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13743/13743.5.patch/1476254703756626</guid>
      <description>&lt;p&gt;
Added fallback message for select not rendering
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 06:44:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:87/1476254697082196</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37661#comment:86" title="Comment 86"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the details view (unfortunately this isn't a button, but matches the admin screen)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, it would be great to improve this part in both places :) Will try to do a more in-depth review later today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13743.4.patch attached to Ticket #13743</title>
      
        <dc:creator>PieWP</dc:creator>

      <pubDate>Wed, 12 Oct 2016 06:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13743/13743.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13743/13743.4.patch/1476254548802145</guid>
      <description>&lt;p&gt;
Changed loading priority
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38289 (The Visual editor layout may "overflow" in iOS Safari) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 12 Oct 2016 06:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38289#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38289#comment:3/1476253233407708</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Wed, 12 Oct 2016 06:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:41/1476252154361409</guid>
      <description>&lt;p&gt;
Works for me. I get the &lt;code&gt;409&lt;/code&gt; as HTTP status code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 12 Oct 2016 05:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:72/1476251724729887</guid>
      <description>&lt;p&gt;
See new Make Core posts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/12/customize-changesets-formerly-transactions-merge-proposal/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Changesets (formerly Transactions) Merge Proposal&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/12/customize-changesets-technical-design-decisions/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Changesets Technical Design Decisions&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14172 (Implement $scheme in site info in ms-sites edit site) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 12 Oct 2016 05:39:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14172#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14172#comment:27/1476250787855354</guid>
      <description>&lt;p&gt;
The site settings page should do a much better job of detecting scheme changes and applying them to both URLs.
&lt;/p&gt;
&lt;p&gt;
One of the "ideal" things I started to look for in this ticket was a single place to use as an indicator of HTTPS support for a site. After going around in circles a few times, it seems that any new indicator (DB field) would really just be another iteration on what's already available as part of the home or site URL.
&lt;/p&gt;
&lt;p&gt;
Really, as long as we pick one of them as our source and document that, then we should be okay to close this out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38114 (Make it easier to visualize where to put your content in a given theme ...) updated</title>
      
        <dc:creator>poena</dc:creator>

      <pubDate>Wed, 12 Oct 2016 05:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38114#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38114#comment:12/1476250674525667</guid>
      <description>&lt;p&gt;
This would solve some problems but from a reviewers perspective I am concerned that it would become another set of defaults that we need to review.
&lt;/p&gt;
&lt;p&gt;
Would the added defaults overwrite the dummy content?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38285 (Object lookups by ID (or primary key) are not managed properly, lots ...) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Wed, 12 Oct 2016 04:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38285#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38285#comment:2/1476247317504132</guid>
      <description>&lt;p&gt;
Keep in mind that it will also likely run into the situation where an object is fetched from cache before the class has been loaded, resulting in a &lt;code&gt;__PHP_Incomplete_Class&lt;/code&gt; rendering the object useless. Especially when there is no general autoloader to load it just in time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 12 Oct 2016 04:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:40/1476246284134967</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36901/36901.10.diff" title="Attachment '36901.10.diff' in Ticket #36901"&gt;36901.10.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36901/36901.10.diff" title="Download"&gt;​&lt;/a&gt; restores the previous status codes for comment floods and duplicates.
&lt;/p&gt;
&lt;p&gt;
For the record, the issue here is that wp-comments-post.php uses the &lt;code&gt;data&lt;/code&gt; from the error object to send a status header: &lt;a href="https://core.trac.wordpress.org/browser/tags/4.6.1/src/wp-comments-post.php?marks=24#L20"&gt;https://core.trac.wordpress.org/browser/tags/4.6.1/src/wp-comments-post.php?marks=24#L20&lt;/a&gt; Previously, I overlooked this.
&lt;/p&gt;
&lt;p&gt;
Could I get a sanity check from @needle or anyone else who can reproduce?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36901.10.diff attached to Ticket #36901</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 12 Oct 2016 04:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36901/36901.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36901/36901.10.diff/1476246189699049</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 12 Oct 2016 04:20:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:39/1476246043180675</guid>
      <description>&lt;p&gt;
@needle reports on make/core &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/11/comment-allowed-checks-in-wordpress-4-7/#comment-31324"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/10/11/comment-allowed-checks-in-wordpress-4-7/#comment-31324&lt;/a&gt; that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38778" title="Comments: Abstract `die()` calls from comment submission routine.
 ..."&gt;[38778]&lt;/a&gt; results in the incorrect status codes being returned in some cases. This is my fault - I thought that the codes in @websupporter's patches were superfluous, but I was incorrect. A new patch is coming up.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #38249 (Improvements to docblock descriptions of query template functions) updated</title>
      
        <dc:creator>morganestes</dc:creator>

      <pubDate>Wed, 12 Oct 2016 03:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38249#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38249#comment:2/1476244451886429</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
These changes look good to me. It's a lot more clear about how hierarchy works, without having to read through a chart for each type.
&lt;/p&gt;
&lt;p&gt;
Are CPTs handled in the &lt;code&gt;single-{post_type}.php&lt;/code&gt; template hierarchy, and if so, should they be specifically mentioned?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38289 (The Visual editor layout may "overflow" in iOS Safari) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 12 Oct 2016 03:35:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38289#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38289#comment:2/1476243347069214</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38782" title="TinyMCE: prevent iOS Safari from expanding the iframe width beyond the ..."&gt;38782&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: prevent iOS Safari from expanding the iframe width beyond the container width.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38289" title="#38289: defect (bug): The Visual editor layout may &amp;#34;overflow&amp;#34; in iOS Safari (closed: fixed)"&gt;#38289&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38782]: TinyMCE: prevent iOS Safari from expanding the iframe width beyond the ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 12 Oct 2016 03:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38782</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38782/1476243346592794</guid>
      <description>&lt;p&gt;
TinyMCE: prevent iOS Safari from expanding the iframe width beyond the container width.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38289" title="#38289: defect (bug): The Visual editor layout may &amp;#34;overflow&amp;#34; in iOS Safari (closed: fixed)"&gt;#38289&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38289 (The Visual editor layout may "overflow" in iOS Safari) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 12 Oct 2016 03:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38289#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38289#comment:1/1476243007976771</guid>
      <description>&lt;p&gt;
Adding
&lt;/p&gt;
&lt;pre class="wiki"&gt;width: 100px;
min-width: 100%;
&lt;/pre&gt;&lt;p&gt;
on the iframe document element seems to fix this. Will commit it for easier testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Oct 2016 03:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:114/1476242707252096</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For the customizer integration there are two primary things we need to work on. The first is the control (and possibly section) structure and hierarchy. The second is the JS, which is structured differently from (most of) the rest of the customize API in using Backbone.js. There are many ways to go about addressing these, but I'll offer a couple of specific options to speed up the process.
&lt;/p&gt;
&lt;p&gt;
Possible (distinct) options for control/section structure:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Look into extending the dropdown pages control to create a sortable multi-selector. This would probably (but not necessarily) require different UI, but is probably the simplest option in terms of the API. The dropdown-pages control will gain the ability to create new pages from any control instance in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38164" title="#38164: enhancement: Customize: assign static front page and posts page to new pages (closed: fixed)"&gt;#38164&lt;/a&gt;, so that's another major advantage here.
&lt;/li&gt;&lt;li&gt;Split this into two controls: one for the sortable and deletion UI, and one for the slide-out addition UI. These are distinct UI controls that belong as separate control objects to facilitate re-usability.
&lt;/li&gt;&lt;li&gt;Split this into a control for sortable objects, a section that slides out, and a control in the slide-out section that displays objects to add. This is one of the more modular ways to approach it, and would bring major improvements for themes and plugins to use.
&lt;/li&gt;&lt;li&gt;Keep everything in one control, but make it more generic. &lt;code&gt;WP_Customize_Sorted_Multi_Select_Control&lt;/code&gt; or something. Simplify it to use the &lt;code&gt;choices&lt;/code&gt; attribute inherited from the base customizer control to define the objects that can be added and sorted, as &lt;code&gt;key =&amp;gt; value&lt;/code&gt; pairs in an array. Use a &lt;code&gt;labels&lt;/code&gt; attribute for the button, search, etc. labels, allowing control indexes to adapt the UI text easily (the media controls do this to an extent). Then, the front page sections control can be added as an instance of this generic control with its relevant sections. If necessary, a child control can be made to override specific aspects of the functionality as needed, but I don't think that would be needed here, since pages can be passed in as &lt;code&gt;choices&lt;/code&gt; and the labels can be defined when registering the control instance, and future functionality changes could make use of a child control if needed. The Site Icon control is a good example of this - it was introduced alongside the cropped image control, and nearly all of the functionality developed for icons was made available more generically as the cropped image control with only a small amount of functionality staying in the site icon control.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As I mentioned previously, the Backbone approach doesn't jive well with the customizer API. As an example, the theme controls (currently and with the changes in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;) were actually adapted from the Backbone-driven admin pages and refactored to be native to the customize API. I don't know if one way or the other is better from various perspectives, but because the customizer API is public, it's important that core controls are internally consistent and can be modularly extended. Some specific changes that will be required from the current JS structure:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;All of the JS needs to be encapsulated into control (or section) objects. This allows child controls to override specific pieces of functionality in a modular way. The core media controls have some good examples of this.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;content_template&lt;/code&gt; for each control should probably be the only templates used. If templates are needed for various pieces they should each have their own function so that they can be modularly overwritten by subcontrols. However, templates can contain loops if needed, and the re-rendering approach that the media controls use works pretty well. Consider whether each customize object could use a single template.
&lt;/li&gt;&lt;li&gt;Other parts of the API tend to use Underscore.js as needed, but not Backbone.js (with exceptions that need to eventually be updated accordingly). The Backbone views, models, and collections should be updated to use core customize API structure, with data stored within control and section objects that also handle UI and dynamic UI as needed. Using more customizer objects (such as a section for the slide-out and a control for each object that can be added with it) would provide a structure that could parallel the current approach more closely, but it's probably better to keep it simpler than that based on what's currently needed.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Other things to note:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The JS (unfortunately) needs to go in &lt;code&gt;customize-controls.js&lt;/code&gt;. Yes, this file is massive and ridiculous. It will be split up eventually, perhaps early in 4.8. But for now, that's where all core control, section, and panel JS belongs, with the exception of menus and widgets because of the sheer size of those files. This is another reason that it's important for all of the JS to be encapsulated in section and control objects.
&lt;/li&gt;&lt;li&gt;The current patch still introduces more new CSS than I'd like, but most of it is probably necessary. We should simplify and combine selectors as much as possible.
&lt;/li&gt;&lt;li&gt;Search probably shouldn't happen with Ajax. Instead, it should be implemented in JS similar to the widget filter, with all of the &lt;code&gt;choices&lt;/code&gt; for the control instance being searched. Hover/focus styling should match available widget items, by the way. Ajax actions can get messy with controls that are intended to be used for a wide variety of things, and is unnecessary complexity since all of the data is available locally.
&lt;/li&gt;&lt;li&gt;The convention for the slide-out UI is to maintain the width of the preview and slide it over (partially out of view), so that the preview doesn't go through responsive layout changes when opening and closing the slide-out.
&lt;/li&gt;&lt;li&gt;Visibility toggles, if implemented in JS for consistency with the other places where core does that, should be placed alongside the other core visibility toggles. I think I'd prefer an &lt;code&gt;active_callback&lt;/code&gt; set to &lt;code&gt;( is_front_page() &amp;amp;&amp;amp; ! is_home() )&lt;/code&gt;, but the JS approach also works.
&lt;/li&gt;&lt;li&gt;Selective refresh is the core-recommended way to preview setting changes in the customizer. Therefore, all new core customize features should support selective refresh. It'll be tricky to do here, for sure, but we need to try to get a partial for the whole content area that refreshes, at least. This brings the potential for visible edit icons and is very important for usability. Themes may need to specify a selector for it in their add-theme-support call.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38172 (Enable Video Headers in Custom Headers) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Oct 2016 03:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38172#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38172#comment:23/1476241697016460</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We need to make sure we're tracking this with everything else in 4.7 given our target timeline.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38289 (The Visual editor layout may "overflow" in iOS Safari) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 12 Oct 2016 02:59:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38289</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38289/1476241170329869</guid>
      <description>&lt;p&gt;
Happens on iPad when there is a very long string. Seems Safari makes the iframe wider to accommodate the string, ignoring &lt;code&gt;overflow-wrap: break-word;&lt;/code&gt; and any widths set in the CSS.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Oct 2016 02:31:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:38/1476239499728210</guid>
      <description>&lt;p&gt;
Hmm, @westonruter would know for sure, but that might be the case. It implements selective refresh internally, so we may need to make some adjustments to unify menus with other partials. That may be something for a future ticket, with a hack like those described above or no support for menus for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38247 (Use `is_main_site()` to determine whether to redirect network/user ...) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 12 Oct 2016 01:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38247#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38247#comment:2/1476235885972678</guid>
      <description>wontfix: &lt;p&gt;
This used to be &lt;code&gt;is_main_site()&lt;/code&gt; until &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17510" title="Anchor network and user admins at the network domain and path rather ..."&gt;[17510]&lt;/a&gt;, which fixed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16652" title="#16652: defect (bug): network_site_url() does not use main site (closed: fixed)"&gt;#16652&lt;/a&gt; with the decision: "Anchor network and user admins at the network domain and path rather than at the main site."
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;is_main_site()&lt;/code&gt; uses the &lt;code&gt;blog_id&lt;/code&gt; property of the current network object while the network admin URL is generated using the network object's domain and path. The main site of a network can exist at a different domain and path from the network site URL.
&lt;/p&gt;
&lt;p&gt;
I see the temptation in switching, but I think we need to stick with current behavior.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38285 (Object lookups by ID (or primary key) are not managed properly, lots ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 12 Oct 2016 01:13:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38285#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38285#comment:1/1476234787914786</guid>
      <description>&lt;p&gt;
For what it's worth, the patch as-is is going to run into issues. Storing typed classes in the object cache has historically lead to hard-to-find bugs, and while it at first appears to work, it causes huge problems when you add a persistent cache (such as memcache) and then either migrate PHP (and don't flush the cache) or even worse when you change the class definition (and don't flush the cache) and the unserialized object is a hybrid of those two definitions (when it was stored, and when it was retrieved)
&lt;/p&gt;
&lt;p&gt;
I can't recall what the need for &lt;code&gt;clone&lt;/code&gt; is, I suspect that's mostly for non-typed objects caching one thing, and then modifying it after.
&lt;/p&gt;
&lt;p&gt;
A hybrid approach might be to allow typed objects which specify a serializer/deserializer to be stored, only clone stdClass's, or something else entirely.
&lt;/p&gt;
&lt;p&gt;
To me, it feels like this might be better off handled higher than the cache, &lt;code&gt;WP_Post&lt;/code&gt; having a static reference to all &lt;code&gt;WP_Post&lt;/code&gt;'s it's created. Unfortunately I think that would mean memory usage would be doubled as there's no way from PHP-land to know that there's only one reference to that memory location left.
&lt;/p&gt;
&lt;p&gt;
The other alternative is waiting for PHP Future.Release to add a Comparable interface or something to allow comparing typed objects properly.
&lt;/p&gt;
&lt;p&gt;
However, there's other cases where you'd legitimately want two different objects of the same post, for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$post = get_post( 1 );
modify_post( 1 );
$modified_post = get_post( 1 );
do_action( 'changed_something', $modified_post, $post );
assertTrue( $post !== $modified_post );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38152 (Clarify in the DocBlock that get_site_by_path() does not return exact ...) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 12 Oct 2016 01:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38152#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38152#comment:8/1476234569917953</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38781" title="Multisite: Clarify that `get_site_by_path()` does not return exact ..."&gt;38781&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Clarify that &lt;code&gt;get_site_by_path()&lt;/code&gt; does not return exact matches.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props stevenlinx.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38152" title="#38152: defect (bug): Clarify in the DocBlock that get_site_by_path() does not return exact ... (closed: fixed)"&gt;#38152&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38781]: Multisite: Clarify that `get_site_by_path()` does not return exact ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 12 Oct 2016 01:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38781</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38781/1476234569458345</guid>
      <description>&lt;p&gt;
Multisite: Clarify that &lt;code&gt;get_site_by_path()&lt;/code&gt; does not return exact matches.
&lt;/p&gt;
&lt;p&gt;
Props stevenlinx.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38152" title="#38152: defect (bug): Clarify in the DocBlock that get_site_by_path() does not return exact ... (closed: fixed)"&gt;#38152&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38181 (Add oEmbed support for Amazon Kindle Instant Previews) updated</title>
      
        <dc:creator>jsepia</dc:creator>

      <pubDate>Wed, 12 Oct 2016 01:00:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38181#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38181#comment:18/1476234036075446</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38181#comment:9" title="Comment 9"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jsepia Could you please answer &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/contribute/design-decisions/#whitelisting-oembed-providers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the questions on whitelisting providers&lt;/a&gt;? This will help us in the decision process.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You will find answers to all the inclusion criteria below.
&lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is the service is popular enough for core developers to have heard of it before? Is it “mainstream?”
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We are in early stages of development for Kindle instant preview. We are currently focused on learning more about the right experience for end users and iterating quickly.  We expect Kindle instant preview to be the go-to way people use to connect or reference a book just like people use YouTube to connect or reference a video.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If similar services are already supported, how does this service compare in terms of size, features, and backing?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Our service is free and accessible to any user, at any time – no sign-ups required. It is also a web-based reading experience so there is no app download required. Scribd does have a product that allows users add book previews to their site; however, users must be a Scribd member.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does this service have a large following on Twitter, Facebook, or other social media?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Kindle instant preview does not have an active social media following (e.g. Mentions or dedicated pages); it is mentioned and used by the overall Kindle brand, which does have a social media presence across mediums. People use Kindle instant preview to talk about books on social media, not the product itself. For example, people use Vimeo to talk about a video on Facebook, but they rarely talk about Vimeo. The same would apply here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is its Twitter account verified? Is its oEmbed endpoint clearly established and properly documented? (Sometimes, they are just a developer’s pet project that may not be supported.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This oEmbed endpoint is an official feature of Kindle Instant Previews. It has been rigorously tested within Amazon, and it is already in use by WordPress.com. We have not released any public documentation as of yet, but we do have plans to make our oEmbed feature known to the public.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does the service make an effort to build relationships with developers, such as through robust APIs?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We have a few tools available to use it.  We have a &lt;a class="ext-link" href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Product Advertising API&lt;/a&gt; solution as well as a self service tool available on amazon.com.  Customers reference the following link to learn more about the self service tool: &lt;a class="ext-link" href="http://www.amazon.com/kindleinstantpreview"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;www.amazon.com/kindleinstantpreview&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How old is the service?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This product is less than a year old.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does it have a well-established Wikipedia article? (Seriously.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not currently. Customers reference the following link to learn more about the product, use case, and how to use it: &lt;a class="ext-link" href="http://www.amazon.com/kindleinstantpreview"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;www.amazon.com/kindleinstantpreview&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Has anyone written a WordPress plugin that leverages the service in some way, whether adding it as an oEmbed provider, creating a shortcode, or leveraging other APIs of the service? Do these plugins have any noticeable adoption or traction that would indicate usage and demand?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We have noticed that the majority of our users are actually WordPress users who are using &lt;a class="ext-link" href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PAAPI&lt;/a&gt; to create previews on their site. We believe this indicates the popularity of this product among WordPress users. For example, many of our customers are authors or mainstream publishers who use the WordPress platform to discuss books.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is the provider frequently proposed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, this is the first time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38114 (Make it easier to visualize where to put your content in a given theme ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 12 Oct 2016 00:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38114#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38114#comment:11/1476233235604688</guid>
      <description>&lt;p&gt;
I just came across this ticket. There are some really great overlaps between dummy content and customize changesets (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30937" title="#30937: feature request: Add Customizer state persistence in changesets (formerly “transactions”) (closed: fixed)"&gt;#30937&lt;/a&gt;). As the patch for changesets currently sit (Make Core post forthcoming), there is the introduction of being able to stash theme mod changes for themes that weren't ultimately activated, allowing those theme mod changes to pre-populate the customized state the next time that the theme is live previewed.
&lt;/p&gt;
&lt;p&gt;
For example, if you go into the customizer and set the background color to red for Twenty Fifteen, but then switch to Twenty Sixteen and set the background color there to green and then activate, the next time you switch to Twenty Fifteen in the customizer you'd see the red background color restored as you had last set it.
&lt;/p&gt;
&lt;p&gt;
I see dummy content being a natural extension to this pre-population of the customized state. In addition to unstashing the theme mods when previewing a theme switch, any dummy content could also be added to the customized state as well so that it appears in the preview and would go live with activation.
&lt;/p&gt;
&lt;p&gt;
The changesets patch stores data as JSON in the DB. All data represented in customized state must be JSON-serializable. However, for the sake of translations I think that @davidakennedy's example of encoding in PHP is good, as long as the values in the PHP array are JSON-serializable (strings, numbers, booleans, positional arrays, associative arrays).
&lt;/p&gt;
&lt;p&gt;
Actually, even without changesets dummy content could be incorporated into a theme today with something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;twentyeighteen_customize_register_default_setting_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Only pre-populate customized state when doing a theme switch.
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_theme_active&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$default_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'operating_hours'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Monday-Friday, 8am-5pm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyeighteen'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'123 Main St, Anyplace, USA'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyeighteen'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'owner_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Jane Smith'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyeighteen'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// Only set dummy values for settings that don't already have a value supplied.
&lt;/span&gt;        &lt;span class="nv"&gt;$existing_customized_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;unsanitized_post_values&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$default_values&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$setting_id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$default_value&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;array_key_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$setting_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$existing_customized_state&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set_post_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$setting_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$default_value&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyeighteen_customize_register_default_setting_values'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
As for pre-populating actual posts and pages, this is also facilitated by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt; where page/post stubs can be created in the customizer and previewed but which are represented in the database with an &lt;code&gt;auto-draft&lt;/code&gt; status until the changes are saved. This ensures that these posts get garbage-collected if the changes are never saved. In any case, these stubs could also be created in such a &lt;code&gt;twentyeighteen_customize_register_default_setting_values&lt;/code&gt; as well. In order for them to be fully previewable in site as if they were published (so that they appear in &lt;code&gt;WP_Query&lt;/code&gt; results as expected) then additional preview filters would be needed, such as have been implemented in the &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Posts&lt;/a&gt; feature plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Wed, 12 Oct 2016 00:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:37/1476232378040820</guid>
      <description>&lt;p&gt;
When I call &lt;code&gt;partial.showControl()&lt;/code&gt; on a menu, it sends the following event to the parent frame:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;api.preview.send('focus-control-for-setting', 'nav_menu_instance[0e6e681bc81cb296f5497e1fe9fb9d23]')&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
It appears that &lt;code&gt;'nav_menu_instance[...]&lt;/code&gt; does not map to a panel in the sidebar. I notice that the panels I can focus with that event have a &lt;code&gt;data-customize-setting-link&lt;/code&gt; property, but menu panels don't appear to have that anywhere I can see.
&lt;/p&gt;
&lt;p&gt;
How does shift-clicking on a menu work?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;api.preview.send( 'focus-nav-menu-item-control', menuItem );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
In that case, &lt;code&gt;menuItem&lt;/code&gt; is an integer for a specific menu item, but it looks like maybe there's no way to focus a menu itself.
&lt;/p&gt;
&lt;p&gt;
If that's true (@celloexpressions ?) then I suppose there's a few options:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We could extend &lt;code&gt;showControl()&lt;/code&gt; to notice when it's targeting a menu, try to find an integer for the menu's first item, and send that to the &lt;code&gt;focus-nav-menu-item-control&lt;/code&gt; event. That seems like a hack, though.
&lt;/li&gt;&lt;li&gt;We could modify the handler for &lt;code&gt;focus-control-for-setting&lt;/code&gt; to accept menu hashes like the one above and somehow find the menu panel that the hash applies to. This is more sensible, but it's quite a lot of pieces I'm not familiar with.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 23:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936#comment:5/1476230124960832</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38780" title="TinyMCE: update the `charmap` plugin to the latest dev. version. Fixes ..."&gt;38780&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: update the &lt;code&gt;charmap&lt;/code&gt; plugin to the latest dev. version. Fixes problems with inserting white space characters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37936" title="#37936: defect (bug): TinyMCE special character button does not insert non-breaking spaces (closed: fixed)"&gt;#37936&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38780]: TinyMCE: update the `charmap` plugin to the latest dev. version. Fixes ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 23:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38780</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38780/1476230124475158</guid>
      <description>&lt;p&gt;
TinyMCE: update the &lt;code&gt;charmap&lt;/code&gt; plugin to the latest dev. version. Fixes problems with inserting white space characters.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37936" title="#37936: defect (bug): TinyMCE special character button does not insert non-breaking spaces (closed: fixed)"&gt;#37936&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 23:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936#comment:4/1476229892831932</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was fixed upstream in &lt;a class="ext-link" href="https://github.com/tinymce/tinymce/commit/b3e518ea67339b544d7daf8b15f14694a78a8830"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tinymce/tinymce/commit/b3e518ea67339b544d7daf8b15f14694a78a8830&lt;/a&gt;. It wasn't in TinyMCE 4.4.3, but it is self-contained in the &lt;code&gt;charmap&lt;/code&gt; plugin. Lets add it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Tue, 11 Oct 2016 23:31:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:86/1476228667717274</guid>
      <description>&lt;p&gt;
Thanks for the feedback @arush!
&lt;/p&gt;
&lt;p&gt;
The "add new" functionality is on the same page with installed themes now, so I'm guessing you may have actually interacted with it. There is no longer search for installed themes - the search is for themes on .org. Unless you're testing on multisite. In multisite you can only install themes in the network admin, so there's only local search and the installed themes available in the customizer.
&lt;/p&gt;
&lt;p&gt;
I know we should be in pretty good shape in terms of keyboard accessibility - I've been testing that as we iterate - and we're generally using semantic elements. There are a few places where we use &lt;code&gt;wp.a11y.speak()&lt;/code&gt; and also some &lt;code&gt;aria-&lt;/code&gt; attributes in the patch, so if those aren't working as intended or don't result in a cohesive experience, let's work on making that better. I don't have as much experience with accessibility for screen readers.
&lt;/p&gt;
&lt;p&gt;
It sounds like adding some screen-reader-text context to the various buttons within the theme controls (such as Live Preview [Theme: $theme]) would make a big difference? I could see how tabbing through a bunch of buttons that say the same thing would be a problem. I double-checked and the patch has an &lt;code&gt;aria-label&lt;/code&gt; attribute on these buttons that includes the theme name; is this not being read out? There's also an &lt;code&gt;aria-describedby&lt;/code&gt; attribute on the theme screenshot, which opens the the details view (unfortunately this isn't a button, but matches the admin screen). It looks like those don't include the theme name for context currently.
&lt;/p&gt;
&lt;p&gt;
If there are challenges with the current patch I'd definitely like to at least try to improve the experience for 4.7; it sounds like there are a few minor adjustments that could make a big difference. Within the themes panel, we shouldn't be technically constrained by some of the limitations that currently exist elsewhere in the customizer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 22:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:113/1476225932115841</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.6.diff" title="Attachment '37974.6.diff' in Ticket #37974"&gt;37974.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.6.diff" title="Download"&gt;​&lt;/a&gt; makes the move and delete buttons always visible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.6.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 22:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.6.diff/1476225709395177</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 11 Oct 2016 22:17:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:22/1476224227368332</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22951 (Performance enhancements for esc_url()) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 11 Oct 2016 22:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22951#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22951#comment:15/1476224179139576</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2130 (wp_kses kills &lt; !-- more --&gt; from xmlrpc posted entries) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:51:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2130#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2130#comment:16/1476222700097931</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #wptv by kevinwhoffman. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/wptv/p1476222697001264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:112/1476222454493155</guid>
      <description>&lt;p&gt;
Thanks for sorting that fix, it's appreciated @bradyvercher.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can make this change, but I'm not really a fan of making destructive operations so easily accessible without a confirmation, especially considering how close to other controls it is. They would also be the most visible controls on the screen even though they're not the primary action.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This change is important as otherwise you are hiding functionality. I do not feel that making it manage sections solves this, unfortunately. I did a little unorganised testing with another user and found it to be an issue to find delete. I also felt this in my own design process. With menus you have also the ability to click in and remove. As we don't, we loose the instant interactions without the panel. I'm also not keen we add a click in just for this case.
&lt;/p&gt;
&lt;p&gt;
Can we please have as the mock for this instance? I am very against hiding functionality and this is something that does cause user friction.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
tested this a bit more and it looks the front page does need to be the first section for the query and template loading to work correctly. Trying to make it sortable might open a big can of worms.
We can remove the front page from the search results so that it can't be added as a section, but we would need to decide how to handle cases where the front page setting is changed to a page that's already been added as a section. Show an error message and filter it out on the front end?
&lt;/p&gt;
&lt;p&gt;
Themes could ultimately decide whether or not they want to show the front page section.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is this something anyone else can help with, sorry to drop you in but maybe @pento you have some ideas?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:46:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:104/1476222402285192</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:102" title="Comment 102"&gt;dnaber-de&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With this «argument» you can bury any development of WordPress core. In reverse that means nothing else than teaching people how to write legacy code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are just setting up a strawman here and justifying with a false binary.
&lt;/p&gt;
&lt;p&gt;
Plus, you missed the point We shouldn't make decisions based on a platitude; there is more than just one valid criteria for changes to core.
&lt;/p&gt;
&lt;p&gt;
Better yet, &lt;strong&gt;let us all follow Helen's recommendation&lt;/strong&gt; and let a core committer lead this project. Once we have one then we can each appeal our concerns to them as they will be in the position of weighing all relevant issues related to WordPress core vs.  in a vacuum pursuing an abstract ideal for how code should be written.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26601 (Inappropriate content in headings on admin screens) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:38:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26601#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26601#comment:95/1476221898158947</guid>
      <description>&lt;p&gt;
I quite like the solution put forward in @afercia's last patch; I'd like to see this start to go in. Being able to do it one instance at a time will make it much more manageable, so that we could hopefully get it started in 4.7 and completed in 4.8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38288 (Connection Timeout when importing heavy .xml (LiteSpeed)) created</title>
      
        <dc:creator>jscrm</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38288</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38288/1476221081522040</guid>
      <description>&lt;p&gt;
When importing big .xml files using the WordPress importer, the connection times out on LiteSpeed servers.
&lt;/p&gt;
&lt;p&gt;
This is due to server not sending new content to the browser, so connection automatically closes. This is different to a PHP timeout due to low max_execution_time.
&lt;/p&gt;
&lt;p&gt;
This might be prevented by showing some sort of progress bar so the connection is not closed due to inactivity.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:24:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:111/1476221051389520</guid>
      <description>&lt;p&gt;
@karmatosed Glad to hear you got it working!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can we remove the word 'Page'? This is not needed when everything is a page. This is in the search panel.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I've removed that in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.5.diff" title="Attachment '37974.5.diff' in Ticket #37974"&gt;37974.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.5.diff" title="Download"&gt;​&lt;/a&gt; when the control is set to only display one post type.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We do need to have the 'x' to remove showing without the panel open. It's just not intuitive otherwise how you remove. Ideally it would look like the mockup and be next to the arrows.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can make this change, but I'm not really a fan of making destructive operations so easily accessible without a confirmation, especially considering how close to other controls it is. They would also be the most visible controls on the screen even though they're not the primary action.
&lt;/p&gt;
&lt;p&gt;
What if we change the button label from "Add Sections" to "Manage Sections?" Would that help?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The original idea wasn't to have a fixed first page content, so we do need to not have that as discussion has already happened about that. It doesn't make sense for it to be removed, but having ability to move up and down absolutely does make sense.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tested this a bit more and it looks the front page does need to be the first section for the query and template loading to work correctly. Trying to make it sortable might open a big can of worms.
&lt;/p&gt;
&lt;p&gt;
We can remove the front page from the search results so that it can't be added as a section, but we would need to decide how to handle cases where the front page setting is changed to a page that's already been added as a section. Show an error message and filter it out on the front end?
&lt;/p&gt;
&lt;p&gt;
Themes could ultimately decide whether or not they want to show the front page section.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.5.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.5.diff/1476220955176792</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:18:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:8/1476220683612218</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38276#comment:6" title="Comment 6"&gt;PieWP&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38276#comment:5" title="Comment 5"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unless of course we add more read-type caps to capability API for other objects. But honestly I don't know that we want to encourage that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first thing people will ask (once &lt;code&gt;is_post_accessible()&lt;/code&gt; is introduced) will be: why can't I do this for terms/taxonomies?So let me ask the question in advance: Why would it make sense to hide a post but not to hide a term?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with this, though I haven't been entirely sure that this ticket should go whole-hog or whether that would be biting off more that anybody is willing to chew (I'm thinking more and more that we should though).
&lt;/p&gt;
&lt;p&gt;
My point in that particular quote though, was more that I question whether the &lt;em&gt;capability API&lt;/em&gt;, specifically, is really a good fit for &lt;em&gt;visibility restrictions&lt;/em&gt;. As opposed to this proposed API, which is somewhat separate. Because visibility restrictions are things that we want to check against non-logged-in users, and the capability API has no application to non-logged-in users. So although the two currently intersect with the post statuses and &lt;code&gt;read_post&lt;/code&gt;, I'm not sure that this is a pattern that we want to start using for other objects, or whether going forward it would be better to keep the capabilities solely about what somebody is allowed to &lt;em&gt;do&lt;/em&gt;, and the accessibility API proposed here deal with what one is allowed to &lt;em&gt;see&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
Although, that does make me wonder whether some "can user &lt;em&gt;do&lt;/em&gt;" checks couldn't possibly relate to non-logged-in users as well (in other words, some &lt;em&gt;actions&lt;/em&gt; can be public just as some objects can). But as I said in the OP, changing the capabilities API as a whole to apply to non-logged-in users would probably break too much stuff. I dunno though, maybe that angle should be explored more as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;Please note I'm not trying to bash by questioning everything, just really want this feature to be introduced. My daily work involves making business portals based on WP so features like this are quite handy.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No worries, I really appreciate your input. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37900 (Support custom dashicon for wp.mce.View.setLoader()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:14:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37900#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37900#comment:4/1476220485959916</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:7/1476219964885138</guid>
      <description>&lt;h2 id="HowWP_Queryhandlesvisibility"&gt;How &lt;code&gt;WP_Query&lt;/code&gt; handles visibility&lt;/h2&gt;
&lt;p&gt;
There are three primary elements that play a role:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Post passwords — These don't actually hide the post itself, but they do obscure its contents.
&lt;/li&gt;&lt;li&gt;Post statuses — These can be public, private, protected, or excluded from searches.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;perm&lt;/code&gt; query arg — This can be &lt;code&gt;'readable'&lt;/code&gt; or &lt;code&gt;'editable'&lt;/code&gt;, or empty (which it is by default, and which basically indicates "all posts").
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It is important to keep in mind that &lt;code&gt;WP_Query&lt;/code&gt; functions to both query posts, and also retrieve individual posts. For this reason, some of the logic that relates to post visibility is duplicated, to optimize based on which of these use-cases a query instance is for. Our main concern here is how to relate these checks to an individual post, but in &lt;code&gt;WP_Query&lt;/code&gt; the logic may not all be expressed in relation to just a single post. That's not a problem, it is just something to keep in mind so that we make sure we don't miss any relevant logic.
&lt;/p&gt;
&lt;h3 id="PostPasswords"&gt;Post Passwords&lt;/h3&gt;
&lt;p&gt;
The simplest and most straightforward logic revolves around posts with passwords. So we'll tackle that first. There are two references to post passwords. The first is in &lt;code&gt;WP_Query::parse_search()&lt;/code&gt;, which causes password-protected posts to be excluded when the query is a search query (i.e., &lt;code&gt;s&lt;/code&gt; query arg is being used to search for words in post content), and the user is not logged in. Again, the post &lt;em&gt;content&lt;/em&gt; is what is hidden by the password, so that is being excluded from searching. Posts with passwords aren't otherwise excluded from queries. The only other place that post passwords are referenced is in &lt;code&gt;WP_Query::get_posts()&lt;/code&gt;, where the &lt;code&gt;post_password&lt;/code&gt; and &lt;code&gt;has_password&lt;/code&gt; query args are handled. The latter is apparently unrestricted, while the former will cause the &lt;code&gt;perm&lt;/code&gt; arg to be set to &lt;code&gt;'readable'&lt;/code&gt;. More on that below.
&lt;/p&gt;
&lt;p&gt;
Basically, post passwords, though they do relate to the visibility of post contents, do not relate to the visibility of posts themselves. This means that we can ignore them in relation to an &lt;code&gt;is_thing_accessible()&lt;/code&gt; API. Or better yet, we can think about the potential for an &lt;code&gt;is_object_attribute_accessible()&lt;/code&gt; feature of the API. I think post passwords and other methods of restricting both post contents and other object attributes demonstrates that the potential usefulness of such an API exists.
&lt;/p&gt;
&lt;h3 id="PostStatuses"&gt;Post Statuses&lt;/h3&gt;
&lt;p&gt;
The log for post statuses is split for &lt;code&gt;$this-&amp;gt;is_single&lt;/code&gt; and non-&lt;code&gt;$this-&amp;gt;is_single&lt;/code&gt; queries, as mentioned above.
&lt;/p&gt;
&lt;p&gt;
First, we'll consider the logic that is applied when the query &lt;code&gt;is_single || is_page&lt;/code&gt;. What happens is that the object for the post's status is retrieved, and if &lt;code&gt;$post_status_obj-&amp;gt;public&lt;/code&gt; is true, no further action is taken. However, if the post status is not public, other logic kicks in. This other logic can be circumvented by the logic for the &lt;code&gt;post_status&lt;/code&gt; query arg, whose handling we'll consider below, with the logic that is applied when a query that is not for a single post. But assuming that the &lt;code&gt;post_status&lt;/code&gt; query arg hasn't been passed, it pretty much breaks down to this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;public&lt;/code&gt; status — Anyone can view. Note that if it isn't public and the user isn't logged in, they can't view the post. It's that simple.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;protected&lt;/code&gt; status — The user must be logged in, and they must have the &lt;code&gt;edit_post&lt;/code&gt; capability for that post.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;private&lt;/code&gt; status — The user must be logged in, and they must have the &lt;code&gt;read_post&lt;/code&gt; capability for that post.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Don't forget though that there was a caveat in there: this logic is only applied if the &lt;code&gt;post_status&lt;/code&gt; query arg hasn't been passed. That's because further up there is some complex logic relating to the &lt;code&gt;post_status&lt;/code&gt; query arg which is applied both when querying for a single post and when querying for multiple posts. In that case, the query has specifically asked for a particular post status, and so it will get it, regardless of user permissions, unless the &lt;code&gt;perm&lt;/code&gt; query arg is also set (which it isn't by default). We'll look more at the &lt;code&gt;perm&lt;/code&gt; query arg below. But basically, the &lt;code&gt;post_status&lt;/code&gt; arg is designed to allow a query to override the default permissions that would normally apply to posts. So it really isn't important for us to consider it too deeply in regard to post accessibility checks.
&lt;/p&gt;
&lt;p&gt;
There is one more piece of logic that involves posts statuses, which is only applied when the &lt;code&gt;post_status&lt;/code&gt; query arg isn't used and when &lt;code&gt;$this-&amp;gt;is_singular&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. This logic basically duplicates that which is applied when &lt;code&gt;is_single || is_page&lt;/code&gt;, discussed above. All public statuses are included by default, private statuses are only shown to users who can &lt;code&gt;read_private_posts&lt;/code&gt; or when the current user is the post author (essentially what it means to have the &lt;code&gt;read_post&lt;/code&gt; capability for a private post). The main difference is that protected statuses are only shown in the admin, and only if the post type specifically requests it. Again, all of this only applies to generic queries, not checking the ability of a user to access a particular post. So it isn't particularly important in the development of an &lt;code&gt;is_thing_accessible()&lt;/code&gt; API. One takeaway though is that here &lt;code&gt;WP_Query&lt;/code&gt; basically reproduces the logic it expects the capabilities API to apply to posts, just in query form. This reminds us again that a filter on &lt;code&gt;map_meta_cap&lt;/code&gt;, or changes to &lt;code&gt;map_meta_cap()&lt;/code&gt; itself, won't automatically be reflected in &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;h3 id="ThepermQueryArg"&gt;The &lt;code&gt;perm&lt;/code&gt; Query Arg&lt;/h3&gt;
&lt;p&gt;
As you might have gleaned from the above discussion, the &lt;code&gt;perm&lt;/code&gt; query arg is only applied when the &lt;code&gt;post_status&lt;/code&gt; query arg is set. The &lt;code&gt;post_status&lt;/code&gt; query arg's only job is to override default handling for post permissions, and the &lt;code&gt;perm&lt;/code&gt; arg dictates how aggressive it is in this. As noted above, this logic isn't particularly important to us, but I'm addressing it here for clarity. It can take three values:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;empty — This is the default, and it indicates that a the post statuses in &lt;code&gt;post_status&lt;/code&gt; should be included &lt;em&gt;without any permission checks at all&lt;/em&gt;. Only post statuses that have specifically requested to be excluded from searches may be left out.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;editable&lt;/code&gt; — This will cause only posts that the current user would have the capabilities to &lt;em&gt;edit&lt;/em&gt; to be included.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;readable&lt;/code&gt; — This will cause only posts that the current user would have the capabilities to &lt;em&gt;read&lt;/em&gt; to be included.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So once again &lt;code&gt;WP_Query&lt;/code&gt; basically replicates the logic that it expects the capabilities API to apply to posts, just in query form.
&lt;/p&gt;
&lt;p&gt;
Again, I've only addressed this for completeness, it isn't our main focus in this ticket.
&lt;/p&gt;
&lt;h3 id="Discussion"&gt;Discussion&lt;/h3&gt;
&lt;p&gt;
Three main takeaways:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We should probably consider an &lt;code&gt;is_thing_attribute_accessible()&lt;/code&gt; API, cf. password-protected posts.
&lt;/li&gt;&lt;li&gt;Post statuses are the only visibility restricting thing that &lt;code&gt;WP_Query&lt;/code&gt; takes into account for posts themselves (as opposed to password-protected post &lt;em&gt;content&lt;/em&gt;).
&lt;/li&gt;&lt;li&gt;Post statuses are either totally public, or they are restricted, which always falls back to the capabilities API.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The implications of the latter two points is that currently WordPress is designed to only restrict post visibility based on post statuses. While it is possible for plugins to imagine all sorts of other things that might dictate post visibility, the only method that WordPress provides is a binary choice of an always-public status or an always-restricted (though possibly to varying degrees) status. Plugins can hook into the Query API, and/or into the Capabilities API, in order to provide handling for other situations. However, both of these APIs only allow the plugin to implement restrictions, neither of them makes it possible for it to indicate when a post is public.
&lt;/p&gt;
&lt;p&gt;
The post status API &lt;em&gt;does&lt;/em&gt;, but is simply not a fit for every time that a plugin wants to restrict post visibility. That is why an "is thing public" API is needed: it will not just wrap the post status API, it will also allow plugins to more confidently tinker with post visibility through custom means. More confidently, because they will be able to hook into the &lt;code&gt;is_thing_accessible()&lt;/code&gt; API to provide that public vs restricted information for objects, so that it can actually be conveyed to other plugins in this way. Which again, as we've shown above, neither the caps nor query API do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13743.3.patch attached to Ticket #13743</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13743/13743.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13743/13743.3.patch/1476219960164887</guid>
      <description>&lt;p&gt;
Code refactoring
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38287 (WP_Object_Cache has a deprecated constructor) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38287#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38287#comment:2/1476218087113933</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38287 (WP_Object_Cache has a deprecated constructor) closed</title>
      
        <dc:creator>charlestonsw</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38287#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38287#comment:1/1476218032752675</guid>
      <description>invalid: &lt;p&gt;
This is from another app that dropped object-cache.php in wp-content.  Not WP-Core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38287 (WP_Object_Cache has a deprecated constructor) created</title>
      
        <dc:creator>charlestonsw</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38287</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38287/1476217811014237</guid>
      <description>&lt;p&gt;
Deprecated: Methods with the same name as their class will not be constructors in a future version of PHP; WP_Object_Cache has a deprecated constructor in /var/www/staging_wpslp/wp-content/object-cache.php on line 112
&lt;/p&gt;
&lt;p&gt;
Environment:
nginx v 1.10
Ubuntu 16.04
PHP 7.0.8 FPM Zend OPcache
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:103/1476217020421108</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:96" title="Comment 96"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A side note to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;[38768]&lt;/a&gt; - I'm cool with removing globals, but the idea needs to be explored further before it's ready for Core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For once, I am forced to agree with @pento. Before this ticket and related discussion get too far into speculation and hand-wringing, I want to be clear that it is absolutely readiness and maintainership that are the real issues at hand. This isn't at a point where its relationship to WordPress's goals or future can be evaluated in any sort of meaningful way. Much like another similarly fated ticket (and to be clear, this should have been reverted at the same time), there is no indication that any proposals were distributed or discussed, concerns from a wide variety of parties addressed (including on this ticket!), or that there would be continuous maintainership of such an effort. I'm sure that the cited concerns in the revert could have been addressed specifically, but that is not an indicator of active ownership - if anything, it's a sign there isn't any.
&lt;/p&gt;
&lt;p&gt;
Contributions from many are highly encouraged, and by no means is every single commenter here expected to stick around and own this, but there needs to be at least one committer AND one other contributing developer (if not a wider working group) who show signs of really owning this kind of a project and process. Neither of those are true here. There are a few of you who have clearly spent significant time reviewing and following this, and there are many more who roll by every once in a while - both are perfectly legitimate and one is not better than the other, but it is not enough to call this a concerted effort.
&lt;/p&gt;
&lt;p&gt;
I don't know what exactly the best process is for this kind of enormous developer-facing effort. Perhaps it's GitHub and treating this as a distinct feature project (which it essentially is), but no matter what, &lt;strong&gt;it needs an active owner&lt;/strong&gt;. Open to thoughts around this as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) reopened</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:13:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:85/1476216828109636</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:84/1476216585740210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by arush. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476216583002097"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) closed</title>
      
        <dc:creator>arush</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:07:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:83/1476216464017309</guid>
      <description>&lt;p&gt;
Regarding accessibility feedback on this feature, let's start with the positive. First, kudos for asking for an accessibility review in the first place. I think this may be a first for the Customizer, so while you're reading this comment, try to keep in mind that compared to the rest of the WordPress back end, the Customizer has had almost no work done on it to fix its accessibility challenges.
&lt;/p&gt;
&lt;p&gt;
As far as making the theme preview/install feature accessible, there's very little that can actually be done on that front, because the Customizer itself has some very significant challenges. Keyboard works for the most part, and for searching and previewing installed themes, you can do this with a screen reader, but there's almost no feedback about exactly what you're pressing enter on. Tabbing through this interface, (as some screen reader users may prefer doing), presents an interface that's almost unintelligible, unless you're already familiar with the Customizer's quirks. If you want to install themes from the Customizer, that just doesn't show up. I've gone through the entire theme-change screen, and am not seeing an add-new or similar of any kind, just the ability to search and preview the themes that are already installed. This is with the latest version of trunk installed, latest stable version of NVDA, and latest stable version of Firefox. I haven't tested with Jaws for Windows or VoiceOver, but if it doesn't work in NVDA, odds are it's not going to be much better in the others. Jaws, at least, hacks the DOM whenever it can, but there's no reliable way to know what it does with scenarios like this, since VFO Group, (its developer), doesn't make that information publicly available. VoiceOver's in the same boat.
&lt;/p&gt;
&lt;p&gt;
As long as the "admin" way of installing themes is going to remain in place for now, I think it's safe to ship this, provided that rewriting the Customizer from the ground up gets put on the road map. That's the only way anything in the Customizer can start to become accessible and conformant with WCAG 2.0 Level AA.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22367 (Usernames with "@" char are assumed email addresses, causing incorrect ...) updated</title>
      
        <dc:creator>gravitylover</dc:creator>

      <pubDate>Tue, 11 Oct 2016 19:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22367#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22367#comment:24/1476215932405910</guid>
      <description>&lt;p&gt;
What needs to happen next on this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>emojis-bug.jpg attached to Ticket #38286</title>
      
        <dc:creator>ramonjosegn</dc:creator>

      <pubDate>Tue, 11 Oct 2016 19:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38286/emojis-bug.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38286/emojis-bug.jpg/1476213826093453</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38286 (Lost emojis) created</title>
      
        <dc:creator>ramonjosegn</dc:creator>

      <pubDate>Tue, 11 Oct 2016 19:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38286</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38286/1476213809546020</guid>
      <description>&lt;p&gt;
Hi dears
&lt;/p&gt;
&lt;p&gt;
I was working in my website with WordPress and suddenly I lost all my emoji, were replaced with the symbols = ????
&lt;/p&gt;
&lt;p&gt;
A friend who works with WordPress also told me the same thing happened recently for no reason apparent
&lt;/p&gt;
&lt;p&gt;
I think it can be a serious failure in Wordpress, appreciate it if you revise
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:45:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:47/1476211511633392</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25239#comment:46" title="Comment 46"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I question whether this should be a pluggable function, though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I think that the consensus is that pluggable functions were a mistake, and filter and action hooks should be used to provide overridability/customizability. So no new pluggable functions are being added, as far as I know.
&lt;/p&gt;
&lt;p&gt;
So the function should be moved to a different file as you've suggested, and we should consider the merits of adding a filter on the value that it returns.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38068 (Add filters to wp_new_user_notification and  ...) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:29:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38068#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38068#comment:7/1476210592658182</guid>
      <description>&lt;p&gt;
@johnbillion are you able to get this into 4.7?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:29:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:231</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:231/1476210551277863</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476210547005377"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38202 (Allow post object or post id for ping functions) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38202#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38202#comment:7/1476210494300639</guid>
      <description>&lt;p&gt;
I could use some help with the unit tests. It's something I'm still struggling to learn how to write.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:46/1476210073741704</guid>
      <description>&lt;p&gt;
Replacing &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; with output from a helper function in these instances seems like a good idea to me and could be useful outside of instances where we're building email addresses. I question whether this should be a pluggable function, though. This function feels more like &lt;code&gt;get_site_url()&lt;/code&gt; or &lt;code&gt;get_home_url()&lt;/code&gt; which live in &lt;code&gt;wp-includes/link-template.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I also wonder if it was an oversight that none of the multisite functions were stripping &lt;code&gt;www&lt;/code&gt; subdomain prefixes or if that was intentionally allowed? Either way, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25239/25239.4.patch" title="Attachment '25239.4.patch' in Ticket #25239"&gt;25239.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25239/25239.4.patch" title="Download"&gt;​&lt;/a&gt; has a redundant &lt;code&gt;preg_replace()&lt;/code&gt; call if that method is used inside the helper function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37915 (Customize: allow terms to be created in nav menus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37915#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37915#comment:12/1476209125698633</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476209121005309"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13743 (Ability to choose a network default theme) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:56:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13743#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13743#comment:16/1476208596399538</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by florian-tiar. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1476208594001269"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37836.2.patch attached to Ticket #37836</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:51:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37836/37836.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37836/37836.2.patch/1476208288258636</guid>
      <description>&lt;p&gt;
Better fix
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37836 (Cannot disable 'Add existing user') updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37836#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37836#comment:5/1476208233724790</guid>
      <description>&lt;p&gt;
Here's a second patch. Thanks to @fperdaan for the review.
&lt;/p&gt;
&lt;p&gt;
Since the conditional test of $do_both is already made line 13 with the is_multisite, and user cap test, it's not necessary to test again with $both var, we only need to test if it's multisite.
&lt;/p&gt;
&lt;p&gt;
By the way the code of this file is really hard to read, a refactoring would be a nice thing to do to avoid DRY code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37866 (Introduce `$network_id` parameter in `get_user_count()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37866#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37866#comment:2/1476207674771556</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
An alternative approach could be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;adjust logic in &lt;code&gt;wp_update_network_user_counts()&lt;/code&gt; to count only users in the current network instead of all users
&lt;/li&gt;&lt;li&gt;introduce &lt;code&gt;get_network_user_count( $network = null )&lt;/code&gt; (returns the value of the network option &lt;code&gt;user_count&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;introduce &lt;code&gt;get_global_user_count()&lt;/code&gt; (returns the sum of &lt;code&gt;get_network_user_count()&lt;/code&gt; for all networks)
&lt;/li&gt;&lt;li&gt;deprecate &lt;code&gt;get_user_count()&lt;/code&gt; and recommend &lt;code&gt;get_global_user_count()&lt;/code&gt; as replacement
&lt;/li&gt;&lt;li&gt;replace Core usages of &lt;code&gt;get_user_count()&lt;/code&gt; with either &lt;code&gt;get_network_user_count()&lt;/code&gt; or &lt;code&gt;get_global_user_count()&lt;/code&gt; (depending on context)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37865 (Allow using the `$network_id` parameter of `get_blog_count()` again) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37865#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37865#comment:2/1476207467833440</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
An alternative approach could be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;introduce &lt;code&gt;get_network_site_count( $network = null )&lt;/code&gt; (returns the value of the network option &lt;code&gt;blog_count&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;introduce &lt;code&gt;get_global_site_count()&lt;/code&gt; (returns the sum of &lt;code&gt;get_network_site_count()&lt;/code&gt; for all networks)
&lt;/li&gt;&lt;li&gt;deprecate &lt;code&gt;get_blog_count()&lt;/code&gt; and recommend &lt;code&gt;get_network_site_count()&lt;/code&gt; as replacement
&lt;/li&gt;&lt;li&gt;replace Core usages of &lt;code&gt;get_blog_count()&lt;/code&gt; with either &lt;code&gt;get_network_site_count()&lt;/code&gt; or &lt;code&gt;get_global_site_count()&lt;/code&gt; (depending on context)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Related to this ticket: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37866" title="#37866: enhancement: Introduce `$network_id` parameter in `get_user_count()` (closed: fixed)"&gt;#37866&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37836 (Cannot disable 'Add existing user') updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37836#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37836#comment:4/1476206307160653</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by florian-tiar. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1476206305001248"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38172 (Enable Video Headers in Custom Headers) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38172#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38172#comment:22/1476206102372925</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1476206099002358"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38284.diff attached to Ticket #38284</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:05:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38284/38284.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38284/38284.diff/1476205517887063</guid>
      <description>&lt;p&gt;
adds capabilities and updates unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:110/1476205499434532</guid>
      <description>&lt;p&gt;
@transl8or for this iteration we're only having pages set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:109/1476205411539225</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1476205409002333"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38285.diff attached to Ticket #38285</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38285/38285.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38285/38285.diff/1476205404315530</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38285 (Object lookups by ID (or primary key) are not managed properly, lots ...) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:02:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38285</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38285/1476205362268373</guid>
      <description>&lt;p&gt;
tl;dr this affects every object that uses the &lt;code&gt;WP_Post::get_instance()&lt;/code&gt; paradigm of "managing instances" (spoiler: they are not)
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Post&lt;/code&gt; and friends are supposed to add more sanity to caching and sanitization. They are not models, they are read-only data objects that strongly-type database rows. As such, it should be easy to maintain only one reference to any given row = one object per row, regardless of method of query, you should always get the exact same object. This tends to work if you pass around objects, but not when passing around IDs.
&lt;/p&gt;
&lt;p&gt;
Passing around IDs is a common use-case:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ids = get_favorite_posts();
foreach ( $ids as $id ) {
    $post = get_post( $id );
    // wreak havoc
}
&lt;/pre&gt;&lt;p&gt;
In a theme:
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_the_title( get_the_ID() );
&lt;/pre&gt;&lt;p&gt;
In Doctrine (or Hibernate, or any other ORM), each type is an Entity that is managed by an Entity Manager. There is never more than one instance of a single item. In WordPress, we get &lt;code&gt;get_post()&lt;/code&gt; and a built-in non-persistent Array Cache. We also get &lt;code&gt;WP_Post::get_instance( $id )&lt;/code&gt;, which makes us believe that &lt;code&gt;WP_Post&lt;/code&gt; is managing instances. It is not. The Array Cache is maintaining all of these references.
&lt;/p&gt;
&lt;p&gt;
A few problems:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;calls to &lt;code&gt;::get_instance()&lt;/code&gt; will always touch the cache
&lt;/li&gt;&lt;li&gt;The Array Cache clones objects before storing them, and clones objects before returning them
&lt;/li&gt;&lt;li&gt;The Array Cache is storing &lt;code&gt;stdClass&lt;/code&gt; instances, not &lt;code&gt;WP_Post&lt;/code&gt; instance, so every item out of the cache also has to become a brand new instance of &lt;code&gt;WP_Post&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Storing the items as &lt;code&gt;WP_Post&lt;/code&gt; objects would seemingly remove the need to return new instances, but they would be new instances nonetheless, since the cache clones every object before saving / returning.
&lt;/p&gt;
&lt;p&gt;
What needs to be done:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Object rows are stored strongly-typed
&lt;/li&gt;&lt;li&gt;Cache does not clone objects
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
How to test that this is happening (using WP-CLI):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
class Prof {
	public function objects() {
		$store = new \SplObjectStorage();
		$mem1 = memory_get_usage();
		$p = get_post( 27 );
		foreach ( range( 1, 20 ) as $i ) {
			$p = get_post( $p );
			if ( ! $store-&amp;gt;contains( $p ) ) {
				$store-&amp;gt;attach( $p );
			}
		}
		$mem2 = memory_get_usage();
		\WP_CLI::line( round( ( $mem2 - $mem1 ) / 1024, 2 ) );
		\WP_CLI::line( $store-&amp;gt;count() );
	}
	public function ids() {
		$store = new \SplObjectStorage();
		$mem1 = memory_get_usage();
		foreach ( range( 1, 20 ) as $i ) {
			$p = get_post( 27 );
			if ( ! $store-&amp;gt;contains( $p ) ) {
				$store-&amp;gt;attach( $p );
			}
		}
		$mem2 = memory_get_usage();
		\WP_CLI::line( round( ( $mem2 - $mem1 ) / 1024, 2 ) );
		\WP_CLI::line( $store-&amp;gt;count() );
	}
}
if ( class_exists( '\WP_CLI' ) ) {
	\WP_CLI::add_command( 'prof', Prof::class );
}
&lt;/pre&gt;&lt;p&gt;
Both should print out 1. Without the patch, &lt;code&gt;ids&lt;/code&gt; will print out 20 + a bunch of leaked memory.
&lt;/p&gt;
&lt;p&gt;
Patch for &lt;code&gt;WP_Post&lt;/code&gt; + &lt;code&gt;WP_Object_Cache&lt;/code&gt; attached
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>transl8or</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:108/1476204845707036</guid>
      <description>&lt;p&gt;
Looks good! Thanks for the gif.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Can we remove the word 'Page'? This is not needed when everything is a page. This is in the search panel.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Not sure if that makes sense. What kind of 'Page' is the -Recent News- section from the initial Twenty Seventeen design mockups?
To consider having something standing there like:
Page, Post, CPT (custom post type), or CST (custom section type)
gives room for further improvements of this UX.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:102/1476204666950321</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:99" title="Comment 99"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If for example we deprecating &lt;code&gt;$wpdb&lt;/code&gt; and doing so were to harm backward compatibility or even harm understandability among a significant number of the many people who implement WordPress sites but do not understand most of the syntax and semantics of classes and methods then optimizing for maintainability here could be more harmful than not. &lt;em&gt;(I'm not taking a side on this one, I am pointing about that pursuing maintainability should not be viewed without question as the quest for the holy grail.)&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FYP. You just say, that people are not willing or able to learn or evolve their skills. With this «argument» you can bury any development of WordPress core. In reverse that means nothing else than teaching people how to write legacy code. This fixes WordPress status as an example of »how to do it wrong«. Congratulations. I'm personally done with core contribution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37616 (Replace `is_super_admin()` calls with real capability checks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:38:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37616#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37616#comment:12/1476203913378200</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1476203911001179"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:107/1476203352229709</guid>
      <description>&lt;p&gt;
Thanks to @davidakennedy for walking me through cleaning up my setup after he did his :), I now can see the UI you say @bradyvercher - yay!
&lt;/p&gt;
&lt;p&gt;
Here for those following along is what we currently have:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/4O1Mqjd9cw.gif"&gt;&lt;img src="https://cldup.com/4O1Mqjd9cw.gif" alt="https://cldup.com/4O1Mqjd9cw.gif" crossorigin="anonymous" title="https://cldup.com/4O1Mqjd9cw.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I still think the following needs to happen:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can we remove the word 'Page'? This is not needed when everything is a page. This is in the search panel.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/gfksZ2Lf-5.png"&gt;&lt;img width="50%" alt="https://cldup.com/gfksZ2Lf-5.png" title="https://cldup.com/gfksZ2Lf-5.png" crossorigin="anonymous" src="https://cldup.com/gfksZ2Lf-5.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We do need to have the 'x' to remove showing without the panel open. It's just not intuitive otherwise how you remove. Ideally it would look like the mockup and be next to the arrows.
&lt;/li&gt;&lt;li&gt;The original idea wasn't to have a fixed first page content, so we do need to not have that as discussion has already happened about that. It doesn't make sense for it to be removed, but having ability to move up and down absolutely does make sense.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32918 (_wp_menu_item_classes_by_context does not generate ...) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32918#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32918#comment:3/1476201932256748</guid>
      <description>&lt;p&gt;
Updated patch added under &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34839" title="#34839: defect (bug): Wrong attribution of current_page_parent for menus when on ... (new)"&gt;#34839&lt;/a&gt; where the unnecessary repetition of the code to handle menu item parent/ancestor has also been eliminated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34839.diff attached to Ticket #34839</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34839/34839.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34839/34839.diff/1476201818327320</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34839 (Wrong attribution of current_page_parent for menus when on ...) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34839#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34839#comment:6/1476201800010136</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With regard to the first issue, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16382" title="#16382: defect (bug): Menus adds &amp;#34;current_page_parent&amp;#34; class to the blog page when viewing a ... (closed: wontfix)"&gt;#16382&lt;/a&gt; which is marked "wontfix" as it seems &lt;code&gt;current_page_parent&lt;/code&gt; is added as a backwards-compatibility measure. New themes/plugins should best rely only on the newer classes (with hyphens).
&lt;/p&gt;
&lt;p&gt;
For the other problems, code to properly set the menu item parent/ancestor classes was missing for custom post type archives. In fact, this code shouldn't be dependent on object type, so in the forthcoming patch I have factored this out into a common block. This also makes function &lt;code&gt;_wp_menu_item_classes_by_context()&lt;/code&gt; slightly easier to read and understand (but still pretty opaque!).
&lt;/p&gt;
&lt;p&gt;
I took the opportunity of incorporating the fix for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/32918" title="#32918: defect (bug): _wp_menu_item_classes_by_context does not generate ... (new)"&gt;#32918&lt;/a&gt; at the same time (easier now the code is in just one place).
&lt;/p&gt;
&lt;p&gt;
It's likely a number of other bugs are lurking in this area of code.  We could really do with some unit tests: see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/32367" title="#32367: enhancement: Nav menu attribute unit tests (assigned)"&gt;#32367&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38284 (add capabilities for edit_{$object}_meta) created</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38284</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38284/1476201754691640</guid>
      <description>&lt;p&gt;
&lt;code&gt;register_meta&lt;/code&gt; has an arg &lt;code&gt;auth_callback&lt;/code&gt; which adds a filter to &lt;code&gt;auth_{$object_type}_meta_{$meta_key}&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
There's an &lt;code&gt;auth_post_meta_{$meta_key}&lt;/code&gt; filter in the &lt;code&gt;edit_post_meta&lt;/code&gt;  capability case but cases for term, user and comment meta still need to be added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37774 (Shiny Updates: Themes updates with no package available still show ...) updated</title>
      
        <dc:creator>tristangemus</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:09:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37774#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37774#comment:4/1476198599243658</guid>
      <description>&lt;p&gt;
Thoughts on &lt;a href="https://core.trac.wordpress.org/attachment/ticket/37774/37774.2.diff"&gt;#37774.2&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38283 (Some `WP_Query` query vars undocumented) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38283#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38283#comment:1/1476198495159664</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38283 (Some `WP_Query` query vars undocumented) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38283</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38283/1476198438513062</guid>
      <description>&lt;p&gt;
While working on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38276" title="#38276: feature request: &amp;#34;Is thing public/accessible&amp;#34; API (new)"&gt;#38276&lt;/a&gt;, I noticed that the &lt;code&gt;has_password&lt;/code&gt; and &lt;code&gt;post_password&lt;/code&gt; query args (added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27395" title="Add has_password and post_password query variables to WP_Query.
 * ..."&gt;[27395]&lt;/a&gt;) aren't included in the inline docs for &lt;code&gt;WP_Query::parse_query()&lt;/code&gt; with the other args. I did a search for all of the args used in &lt;code&gt;WP_Query&lt;/code&gt;, and discovered that the following args are used but not documented:
&lt;/p&gt;
&lt;pre class="wiki"&gt;attachment
caller_get_posts
embed
error
feed
has_password
minute
post_password
posts_per_rss
preview
robots
search_orderby_title
search_terms
search_terms_count
showposts
static
subpost
subpost_id
taxonomy
tb
term
term_id
withcomments
withoutcomments
&lt;/pre&gt;&lt;p&gt;
Some of these may be deprecated, discouraged, or internal. If there has been a previous decision not to include them for some reason, then I apologize for bringing it up. But I couldn't find any tickets relating to the password related args not being documented, so I have a feeling that some of these may have just been overlooked.
&lt;/p&gt;
&lt;p&gt;
Perhaps some of these shouldn't be documented, although we could document deprecated args and that they are deprecated, rather than just leaving them out. But at least this ticket will provide us a central place where we can state why certain ones aren't going to be documented, if indeed that's the decision.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37774.2.diff attached to Ticket #37774</title>
      
        <dc:creator>tristangemus</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37774/37774.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37774/37774.2.diff/1476198277229151</guid>
      <description>&lt;p&gt;
Left $hasPackage undefined in some cases
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37774.diff attached to Ticket #37774</title>
      
        <dc:creator>tristangemus</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37774/37774.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37774/37774.diff/1476198200238034</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>PieWP</dc:creator>

      <pubDate>Tue, 11 Oct 2016 14:33:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:6/1476196397755948</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38276#comment:5" title="Comment 5"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unless of course we add more read-type caps to capability API for other objects. But honestly I don't know that we want to encourage that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first thing people will ask (once &lt;code&gt;is_post_accessible()&lt;/code&gt; is introduced) will be: why can't I do this for terms/taxonomies?So let me ask the question in advance: Why would it make sense to hide a post but not to hide a term?
&lt;/p&gt;
&lt;p&gt;
Quite similar to the term_meta which was recently introduced (and already saw a request for term_relationship_meta passing by). With WP becoming more and more Object Orientated I can only assume we will see a &lt;code&gt;WP_Taxonomy&lt;/code&gt; class soon; which will contain a similar &lt;code&gt;cap&lt;/code&gt; attribute compared to the &lt;code&gt;WP_Post_Type&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Please note I'm not trying to bash by questioning everything, just really want this feature to be introduced. My daily work involves making business portals based on WP so features like this are quite handy.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 13:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:5/1476194124775580</guid>
      <description>&lt;p&gt;
Taking a look at &lt;a class="ext-link" href="https://codex.wordpress.org/Roles_and_Capabilities"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the list of core capabilities&lt;/a&gt;, I have confirmed that &lt;code&gt;read&lt;/code&gt; is pretty unique. The only other caps that would really relate at all to read and not just create/update/delete actions would be &lt;code&gt;list_users&lt;/code&gt; and perhaps the &lt;code&gt;manage_*&lt;/code&gt; caps.
&lt;/p&gt;
&lt;p&gt;
That is just useful information to consider in determining the ultimate scope of this ticket. The most narrow scope would be to create an &lt;code&gt;is_post_public()&lt;/code&gt; function, that only works for posts and returns a boolean value. The broadest scope would be to create an &lt;code&gt;is_thing_accessible()&lt;/code&gt; function, that works for all types of objects and determines whether the object is accessible to a particular user, not just whether the object is public. In between the two extremes would be the &lt;code&gt;is_post_accessible()&lt;/code&gt; and &lt;code&gt;is_thing_public()&lt;/code&gt; functions.
&lt;/p&gt;
&lt;p&gt;
The fact that only the posts really have a &lt;code&gt;read&lt;/code&gt; capability might indicate that while a broader API is useful, in terms of core it isn't really needed. However, we could also look at that conversely: if we are going to do an &lt;code&gt;is_thing_public()&lt;/code&gt; API as opposed to just an &lt;code&gt;is_post_pubic()&lt;/code&gt; API, it makes sense to go full-blown &lt;code&gt;is_thing_accessible()&lt;/code&gt;. Because for non-post objects, there is no &lt;code&gt;current_user_can( 'read_other_object' )&lt;/code&gt; to fall back to for providing more granular accessibility checking for logged-in users, like there would be the &lt;code&gt;read_post&lt;/code&gt; cap for posts. In other words, we'd be able to do a basic check as to whether something is public, but we wouldn't be able to check whether a particular user could still view that non-public thing. Unless of course we add more read-type caps to capability API for other objects. But honestly I don't know that we want to encourage that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 13:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:106/1476193388158595</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 13:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:4/1476192824050984</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38276#comment:3" title="Comment 3"&gt;PieWP&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In regards of combining the &lt;code&gt;WP_Query&lt;/code&gt; and the &lt;code&gt;is_thing_accessable()&lt;/code&gt;:
&lt;/p&gt;
&lt;p&gt;
Keeping the Query filter aligned with a custom callback as suggested is quite hard. You often have to modify the query in strange ways typing actual custom SQL; which in its turn might cause SQL errors for many reasons. In addition to that your callback gets modified by the entire codebase due to filters. So the callback you initially set up might easily dealign when installing other plugins who (unintentionally) dealign your &lt;code&gt;is_thing_accessable()&lt;/code&gt; check.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I had considered the possibility that this would require abstracting out SQL strings, though I'm not sure exactly what that would look like since I haven't investigated exactly what &lt;code&gt;WP_Query&lt;/code&gt; is doing here (though I'm about to do that now).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;these are the issues I encountered with our client for whom we build a similar extension&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;p.s. I actually also don't trust other people with extending the Query / writing SQL, think of the SQL injections ;P&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True, but filters already exist that pass in the raw query before it is sent to the database. Probably most devs who would break them horribly don't know that they exist though. So yeah, that may be ea valid concern.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;h2 id="Alternativeapproach"&gt;Alternative approach&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think that approach would be feasible for WordPress core, because of the issues with making the binary tree stable, especially when plugins want to add their own rules.
&lt;/p&gt;
&lt;p&gt;
It is also a bit beyond what I was envisioning for this ticket. I wasn't really planning to completely change what WordPress looks at in order to determine whether a post is public, just to abstract that logic out so that it is more accessible. I hope such a fundamental change wouldn't be necessary, though perhaps it is. But if so, I have a feeling that the core devs would see it as too much work for too little benefit. As I investigate this further, I'll get a better idea of whether something like that would be necessary or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38091 (Shortcut to collapse current control/section/panel is triggered when ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 11 Oct 2016 13:18:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38091#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38091#comment:10/1476191919395050</guid>
      <description>&lt;p&gt;
Tested the first two items on the patch successfully. I can't find any examples of TinyMCE toolbars to test the last item though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33519 (Additional choices for 'fields' parameter) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33519#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33519#comment:7/1476189533786341</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33519 (Additional choices for 'fields' parameter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33519#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33519#comment:6/1476187593085146</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sebastian.pisula. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476187589005274"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:105/1476187591097589</guid>
      <description>&lt;p&gt;
@pento thanks. I did just try the devtools trick (thanks for that as suggestion) and still get the CSS not fully loaded, but at least it probably is my environment over the patch. Thanks for confirming.
&lt;/p&gt;
&lt;p&gt;
Just for record I get the patch apply without issue, it's just seeing some of the visuals. Lets maybe cross this once we have our next round of patches, so not to stall the progress.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Tammies-MacBook-Pro:wordpress-develop karmatosed$ grunt patch:https://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff
Running "patch:https://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" (patch) task
patching file src/wp-admin/css/customize-controls.css
patching file src/wp-admin/js/customize-post-collection.js
patching file src/wp-includes/canonical.php
patching file src/wp-includes/class-wp-customize-manager.php
patching file src/wp-includes/class-wp-query.php
patching file src/wp-includes/customize/class-wp-customize-post-collection-control.php
patching file src/wp-includes/default-filters.php
patching file src/wp-includes/link-template.php
patching file src/wp-includes/post-template.php
patching file src/wp-includes/script-loader.php
patching file src/wp-includes/theme.php
Done, without errors.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33519 (Additional choices for 'fields' parameter) reopened</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33519#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33519#comment:5/1476187460673647</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>33519.patch attached to Ticket #33519</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33519/33519.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33519/33519.patch/1476187440028675</guid>
      <description>&lt;p&gt;
4.7-alpha-38779
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37508 (wpdb-&gt;result instance should be checked `mysqli_num_fields` in ...) updated</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37508#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37508#comment:3/1476187430828269</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37508.patch attached to Ticket #37508</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37508/37508.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37508/37508.patch/1476187402056882</guid>
      <description>&lt;p&gt;
Checks that this-&amp;gt;result is valid before calling mysqli_num_fields() and mysql_num_fields()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 11 Oct 2016 10:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:104/1476183569357752</guid>
      <description>&lt;p&gt;
@karmatosed: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" title="Attachment '37974.4.diff' in Ticket #37974"&gt;37974.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.4.diff" title="Download"&gt;​&lt;/a&gt; works correctly for me. For reference, here's my dev site:
&lt;/p&gt;
&lt;pre class="wiki"&gt;vagrant@vvv:/srv/www/wordpress-develop$ svn info | grep '^URL'
URL: https://develop.svn.wordpress.org/trunk
vagrant@vvv:/srv/www/wordpress-develop$ svn st
X       tests/phpunit/data/plugins/wordpress-importer
Performing status on external item at 'tests/phpunit/data/plugins/wordpress-importer':
vagrant@vvv:/srv/www/wordpress-develop$ svn up
Updating '.':
Fetching external item into 'tests/phpunit/data/plugins/wordpress-importer':
External at revision 1512649.
At revision 38779.
vagrant@vvv:/srv/www/wordpress-develop$ grunt patch:https://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff
Running "patch:https://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" (patch) task
patching file src/wp-admin/css/customize-controls.css
patching file src/wp-admin/js/customize-post-collection.js
patching file src/wp-includes/canonical.php
patching file src/wp-includes/class-wp-customize-manager.php
patching file src/wp-includes/class-wp-query.php
patching file src/wp-includes/customize/class-wp-customize-post-collection-control.php
patching file src/wp-includes/default-filters.php
patching file src/wp-includes/link-template.php
patching file src/wp-includes/post-template.php
patching file src/wp-includes/script-loader.php
patching file src/wp-includes/theme.php
Done, without errors.
&lt;/pre&gt;&lt;p&gt;
I find that sometimes I need to keep dev tools open, to enforce the cache not being used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28620 (When $depth argument is used in wp_nav_menu last level menu items ...) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 10:03:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28620#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28620#comment:11/1476180231318954</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Alternative patch added, which avoids adding the incorrect class names at source. This might be considered preferable. It will use a little more time/space but this shouldn't be a problem as most menus will be (relatively) short and shallow. Also re-categorised ticket as a "bug".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 10:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:103/1476180190522318</guid>
      <description>&lt;p&gt;
@bradyvercher thanks for that gif, it helps me to at least whilst the patches are being troublesome get a visual of what is going on. I'm unsure what is going on with patches myself as @davidakennedy gets the same as me in past testing - I checked with him myself as wondered. In the latest patch we seem to have now gained an empty select box by the search:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/HS40tayvP7.png"&gt;&lt;img width="50%" alt="https://cldup.com/HS40tayvP7.png" title="https://cldup.com/HS40tayvP7.png" crossorigin="anonymous" src="https://cldup.com/HS40tayvP7.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Hopefully, we can look into the patch. Maybe @pento and/or @davidakennedy you can confirm what you see and maybe we can get an iteration from that to get us back on track with the patch. Alternatively, maybe some indication of why it doesn't work on some people's installs, if that is the case. To narrow it down, I have tested in various browsers to, cleared cache and also made sure I'm on latest svn version.
&lt;/p&gt;
&lt;p&gt;
For now, lets focus though on what you're showing as I can't get the patch to show everything you've completed and that's making me go over things you've done. Again, thanks for sticking with this and getting it so far. There are a few things we do need to iterate on, some I've brought up before and really are ideal to making this friction free. It's great we're getting into the refinements here - thanks for taking us so far with this.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can we remove the word 'Page'? This is not needed when everything is a page. This is in the search panel.
&lt;/li&gt;&lt;li&gt;We do need to have the 'x' to remove showing without the panel open. It's just not intuitive otherwise how you remove. Ideally it would look like the mockup and be next to the arrows.
&lt;/li&gt;&lt;li&gt;The original idea wasn't to have a fixed first page content, so we do need to not have that as discussion has already happened about that. It doesn't make sense for it to be removed, but having ability to move up and down absolutely does make sense.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38282 (Trackbacks do not return proper XML on double entries and flood) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 11 Oct 2016 10:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38282#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38282#comment:2/1476180037528841</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>28620-alt.diff attached to Ticket #28620</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28620/28620-alt.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28620/28620-alt.diff/1476179621061976</guid>
      <description>&lt;p&gt;
Alternative (preferable?) patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38282 (Trackbacks do not return proper XML on double entries and flood) updated</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38282#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38282#comment:1/1476179448677548</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38282.diff attached to Ticket #38282</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38282/38282.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38282/38282.diff/1476179388555600</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38282 (Trackbacks do not return proper XML on double entries and flood) created</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:49:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38282</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38282/1476179358246931</guid>
      <description>&lt;p&gt;
If an comment is double or part of a comment flood, &lt;code&gt;wp_new_comment()&lt;/code&gt; tends to &lt;code&gt;wp_die()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
With &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36901" title="#36901: enhancement: Removing wp_die() from wp_allow_comment() (closed: fixed)"&gt;#36901&lt;/a&gt; we can now get a proper &lt;code&gt;WP_Error&lt;/code&gt; instead and utilize this in &lt;em&gt;wp_trackback.php&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14452.2.diff attached to Ticket #14452</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:44:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14452/14452.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14452/14452.2.diff/1476179063597891</guid>
      <description>&lt;p&gt;
But this time it should be ok :)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14452 (Duplicate check for comments: Inappropriate errorhandling for xmlrpc) updated</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14452#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14452#comment:10/1476178022862061</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With &lt;a href="https://core.trac.wordpress.org/ticket/36901"&gt;https://core.trac.wordpress.org/ticket/36901&lt;/a&gt; in core, &lt;code&gt;wp_new_comment()&lt;/code&gt; returns the comment ID, false or a &lt;code&gt;WP_Error&lt;/code&gt;. &amp;lt;strike&amp;gt;14452.diff takes this into account.&amp;lt;/strike&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Ah sorry, my patch works on &lt;code&gt;wp_trackback.php&lt;/code&gt;not the general XMLRPC. Sorry! But &lt;code&gt;wp_new_comment()&lt;/code&gt; has changed. It should be easily changeable now :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14452.diff attached to Ticket #14452</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14452/14452.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14452/14452.diff/1476177724411679</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>andreasnrb</dc:creator>

      <pubDate>Tue, 11 Oct 2016 08:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:101/1476175790964726</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Bye, bye Miss American Pie
Drove my Chevy to the levee but the levee was dry
And them good ole boys were drinking whiskey and rye
Singin' this'll be the day that globals are reborn
This'll be the day that globals are reborn
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
:(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Tue, 11 Oct 2016 08:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:104/1476174326275199</guid>
      <description>&lt;p&gt;
Alternative patch: 22355.2.patch. Turned locations array into associative. Manipulation of array in filters by key.
&lt;/p&gt;
&lt;p&gt;
Usage
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'template_locations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'theme-compat'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;array_walk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$s&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$v&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="nv"&gt;$s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s1"&gt;'/partials'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'template_locations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'theme-compat'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$new_locat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'template-partials'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;get_template_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/partials'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'template-templates'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;get_template_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/templates'&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$new_locat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'locate_template'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$template_names&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'header.php'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$template_names&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_child_theme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;get_stylesheet_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/header.php'&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;get_template_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/partials/header.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$location&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>22355.2.patch attached to Ticket #13239</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Tue, 11 Oct 2016 08:18:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/22355.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/22355.2.patch/1476173914077780</guid>
      <description>&lt;p&gt;
Assoc array for locations
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>22355.1.patch attached to Ticket #13239</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Tue, 11 Oct 2016 08:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/22355.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/22355.1.patch/1476173879991288</guid>
      <description>&lt;p&gt;
Wrong file extn
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 11 Oct 2016 07:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:21/1476170328086792</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37331" title="#37331: defect (bug): New site form has non-required fields that have to be filled in (closed: fixed)"&gt;#37331&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 11 Oct 2016 07:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:12/1476170273775250</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/23870" title="#23870: enhancement: Filter Glyph for Comment Required Fields (assigned)"&gt;#23870&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16206 (Comment text not marked as required) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 11 Oct 2016 07:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16206#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16206#comment:40/1476170194129536</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>PieWP</dc:creator>

      <pubDate>Tue, 11 Oct 2016 06:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:3/1476166671663365</guid>
      <description>&lt;p&gt;
In regards of combining the &lt;code&gt;WP_Query&lt;/code&gt; and the &lt;code&gt;is_thing_accessable()&lt;/code&gt;:
&lt;/p&gt;
&lt;p&gt;
Keeping the Query filter aligned with a custom callback as suggested is quite hard. You often have to modify the query in strange ways typing actual custom SQL; which in its turn might cause SQL errors for many reasons. In addition to that your callback gets modified by the entire codebase due to filters. So the callback you initially set up might easily dealign when installing other plugins who (unintentionally) dealign your &lt;code&gt;is_thing_accessable()&lt;/code&gt; check.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;these are the issues I encountered with our client for whom we build a similar extension&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;p.s. I actually also don't trust other people with extending the Query / writing SQL, think of the SQL injections ;P&lt;/em&gt;
&lt;/p&gt;
&lt;h2 id="Alternativeapproach"&gt;Alternative approach&lt;/h2&gt;
&lt;p&gt;
An alternative approach would be to use a binary system similar to for instance your file system capabilities. Thing is that your check is way more complex so it would be more similar to the error_setting value in your php.ini. In this solution you would map every capability to a prime number, your current rights would be a sum of this prime number which you could compare against a new column within the database.
&lt;/p&gt;
&lt;p&gt;
Using these a binary tree you get a common divider shared within the meta_caps which you can use in your &lt;code&gt;is_thing_accessable&lt;/code&gt; and in your &lt;code&gt;WP_Query&lt;/code&gt;. This mapping from capability to a binary would obviously occure under 'under water' to keep it as user friendly as possible.
&lt;/p&gt;
&lt;p&gt;
The massive issue of this approach is: how do you build the binary tree? Your capability should &lt;strong&gt;always&lt;/strong&gt; have the same binary value assigned to it; otherwise you would get a mismatch in your rights. That would hint towards storing a mapper in an option, which is fine until you try to transfer or import the posts from another system. How would you merge or handle capabilites whom are not known in the imported system? Or how would you handle the &lt;code&gt;'read'&lt;/code&gt; capability which has a value of &lt;code&gt;'1'&lt;/code&gt; in your system but a value of &lt;code&gt;'3'&lt;/code&gt; in the imported system?  (although this ticket would effect importing in some way regardless of the chosen solution)
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; Pro &lt;/td&gt;&lt;td&gt; Con
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; + Using binary comparisons your database queries will remain fast &lt;/td&gt;&lt;td&gt; - How to build up the binary tree in a stable way?
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; + compare issues between code and database solved &lt;/td&gt;&lt;td&gt; - not very human readable values
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; + Very easy in usage for new WP developers &lt;/td&gt;&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 05:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:102/1476162818496921</guid>
      <description>&lt;p&gt;
@karmatosed The latest gifs haven't been reflecting the styles correctly for some reason. Can someone let me know if I'm creating or uploading the patches incorrectly? Is anyone else having problems applying them?
&lt;/p&gt;
&lt;p&gt;
Here's how &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" title="Attachment '37974.4.diff' in Ticket #37974"&gt;37974.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.4.diff" title="Download"&gt;​&lt;/a&gt; should look:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/kxPsIFza7E.gif"&gt;&lt;img src="https://cldup.com/kxPsIFza7E.gif" alt="https://cldup.com/kxPsIFza7E.gif" crossorigin="anonymous" title="https://cldup.com/kxPsIFza7E.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are we fixed to the page having to be top element? Or can that iterate?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't have a strong opinion on that. It can be changed, but I imagine it'll require some discussion.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Delete seemed to be missing, now if I'm correct this should show on opening the search panel. Is there any way to get the 'x' like mock? Or at least to find some middle option?
&lt;/li&gt;&lt;li&gt;Can the 'add sections' button be disabled when the panel is out?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Those should both be good to as reflected in the gif above.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" title="Attachment '37974.4.diff' in Ticket #37974"&gt;37974.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.4.diff" title="Download"&gt;​&lt;/a&gt; takes care of a few things:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Integrates CSS with customize-controls.css to remove duplicate rules and create consistency between the various Customizer features
&lt;/li&gt;&lt;li&gt;Removed customize-post-collection.css and moved remaining styles into customize-controls.css
&lt;/li&gt;&lt;li&gt;Improved the appearance for long page titles
&lt;/li&gt;&lt;li&gt;Improved mobile support so the fly-out drawer can be accessed on smaller screens
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.4.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 05:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff/1476162615530014</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 04:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:11/1476158734942609</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38779" title="Taxonomy: Specify taxonomy when populating cached object terms.
 ..."&gt;38779&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Specify taxonomy when populating cached object terms.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;[38776]&lt;/a&gt; introduced a call to &lt;code&gt;get_term()&lt;/code&gt; using only the term ID. This&lt;br /&gt;
causes problems in cases where shared terms have not been split. Since&lt;br /&gt;
we have the taxonomy available, there's no harm in passing it along to&lt;br /&gt;
&lt;code&gt;get_term()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38779]: Taxonomy: Specify taxonomy when populating cached object terms.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 04:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38779</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38779/1476158734445792</guid>
      <description>&lt;p&gt;
Taxonomy: Specify taxonomy when populating cached object terms.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;[38776]&lt;/a&gt; introduced a call to &lt;code&gt;get_term()&lt;/code&gt; using only the term ID. This
causes problems in cases where shared terms have not been split. Since
we have the taxonomy available, there's no harm in passing it along to
&lt;code&gt;get_term()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dd32.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 04:00:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:38/1476158457500832</guid>
      <description>&lt;p&gt;
Dev note: &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/11/comment-allowed-checks-in-wordpress-4-7/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/10/11/comment-allowed-checks-in-wordpress-4-7/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31652 (Drag/Drop Ordering of Media Does Not Work in Chrome on touch enabled ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31652#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31652#comment:21/1476158322642502</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31652#comment:20" title="Comment 20"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Re-testing it again and thinking I'd rather not have these thumbnails draggable/sortable at all on a phone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for reviewing. Good point, for small screens drag and drop could make using the gallery harder, although its still probably useful on larger screen phones.
&lt;/p&gt;
&lt;p&gt;
The real issue is with touch screen devices with much larger screens that take input by mouse or touch (or stylus), such as many recent windows laptops or the iPad pro (these are becoming more common apparently). Our current code does not enable sortable for gallery items for &lt;em&gt;any touch enabled devices&lt;/em&gt;, making the gallery &lt;em&gt;unsortable by mouse or touch&lt;/em&gt; on these devices. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31652/31652.diff" title="Attachment '31652.diff' in Ticket #31652"&gt;31652.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31652/31652.diff" title="Download"&gt;​&lt;/a&gt; addresses this issue alone (can you please test that one as well?). Maybe we can also skip sortable here for small viewports using JS to detect the viewport size?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was hoping we can stop using jquery-touch-punch as it is a 5 years old quick hack for jQuery UI Mouse to somewhat make it work on touch devices.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Isn't Touch Punch required to add touch event support for jQuery UI for now? If anything touch devices of all sizes are becoming way more common.
&lt;/p&gt;
&lt;p&gt;
As for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31652/31652.2.diff" title="Attachment '31652.2.diff' in Ticket #31652"&gt;31652.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31652/31652.2.diff" title="Download"&gt;​&lt;/a&gt;  and the removal of the wp_is_mobile check: the problem with relying on &lt;code&gt;wp_is_mobile&lt;/code&gt; here is that it is USER_AGENT specific and includes ipads and possibly other devices with large screens and alternate input methods where drag and drop does work well. Touch Punch already includes feature detection and will bail early on non-touch devices. This deserves some testing across a variety of devices... I have a hunch this will be helpful for users who currently cannot sort galleries on their devices.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A proper fix would probably be to show arrow buttons in the middle of the thumbnails.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a great idea and could work similar to the move links on menus, this would make it much easier to manage galleries for smaller screens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:37/1476157349182318</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38778" title="Comments: Abstract `die()` calls from comment submission routine.
 ..."&gt;38778&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Abstract &lt;code&gt;die()&lt;/code&gt; calls from comment submission routine.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since 4.4, comment submission has been mostly abstracted into a function,&lt;br /&gt;
rather than being processed inline in wp-comments-post.php. This change&lt;br /&gt;
made it easier to write automated tests against the bulk of the comment&lt;br /&gt;
submission process. &lt;code&gt;wp_allow_comment()&lt;/code&gt; remained untestable, however:&lt;br /&gt;
when a comment failed one of its checks (flooding, duplicates, etc),&lt;br /&gt;
&lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;wp_die()&lt;/code&gt; would be called directly. This shortcoming posed&lt;br /&gt;
problems for any application attempting to use WP's comment verification&lt;br /&gt;
functions in an abstract way - from PHPUnit to the REST API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The current changeset introduces a new parameter, &lt;code&gt;$avoid_die&lt;/code&gt;, to the&lt;br /&gt;
&lt;code&gt;wp_new_comment()&lt;/code&gt; stack. When set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;wp_new_comment()&lt;/code&gt; and&lt;br /&gt;
&lt;code&gt;wp_allow_comment()&lt;/code&gt; will return &lt;code&gt;WP_Error&lt;/code&gt; objects when a comment check&lt;br /&gt;
fails. When set to &lt;code&gt;false&lt;/code&gt; - the default, for backward compatibility -&lt;br /&gt;
a failed check will result in a &lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;wp_die()&lt;/code&gt;, as appropriate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prior to this changeset, default comment flood checks took place in the&lt;br /&gt;
function &lt;code&gt;check_comment_flood_db()&lt;/code&gt;, which was hooked to the&lt;br /&gt;
'check_comment_flood' action. This design allowed the default comment&lt;br /&gt;
flood routine to be bypassed or replaced using &lt;code&gt;remove_action()&lt;/code&gt;.&lt;br /&gt;
In order to maintain backward compatibility with this usage, while&lt;br /&gt;
simultaneously converting the comment flood logic into something that&lt;br /&gt;
returns a value rather than calling &lt;code&gt;die()&lt;/code&gt; directly,&lt;br /&gt;
&lt;code&gt;check_comment_flood_db()&lt;/code&gt; has been changed into a wrapper function for&lt;br /&gt;
a call to &lt;code&gt;add_filter()&lt;/code&gt;; this, in turn, adds the *actual* comment flood&lt;br /&gt;
check to a new filter, 'wp_is_comment_flood'. Note that direct calls&lt;br /&gt;
to &lt;code&gt;check_comment_flood_db()&lt;/code&gt; will no longer do anything in isolation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props websupporter, rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36901" title="#36901: enhancement: Removing wp_die() from wp_allow_comment() (closed: fixed)"&gt;#36901&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38778]: Comments: Abstract `die()` calls from comment submission routine.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38778</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38778/1476157348693144</guid>
      <description>&lt;p&gt;
Comments: Abstract &lt;code&gt;die()&lt;/code&gt; calls from comment submission routine.
&lt;/p&gt;
&lt;p&gt;
Since 4.4, comment submission has been mostly abstracted into a function,
rather than being processed inline in wp-comments-post.php. This change
made it easier to write automated tests against the bulk of the comment
submission process. &lt;code&gt;wp_allow_comment()&lt;/code&gt; remained untestable, however:
when a comment failed one of its checks (flooding, duplicates, etc),
&lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;wp_die()&lt;/code&gt; would be called directly. This shortcoming posed
problems for any application attempting to use WP's comment verification
functions in an abstract way - from PHPUnit to the REST API.
&lt;/p&gt;
&lt;p&gt;
The current changeset introduces a new parameter, &lt;code&gt;$avoid_die&lt;/code&gt;, to the
&lt;code&gt;wp_new_comment()&lt;/code&gt; stack. When set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;wp_new_comment()&lt;/code&gt; and
&lt;code&gt;wp_allow_comment()&lt;/code&gt; will return &lt;code&gt;WP_Error&lt;/code&gt; objects when a comment check
fails. When set to &lt;code&gt;false&lt;/code&gt; - the default, for backward compatibility -
a failed check will result in a &lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;wp_die()&lt;/code&gt;, as appropriate.
&lt;/p&gt;
&lt;p&gt;
Prior to this changeset, default comment flood checks took place in the
function &lt;code&gt;check_comment_flood_db()&lt;/code&gt;, which was hooked to the
'check_comment_flood' action. This design allowed the default comment
flood routine to be bypassed or replaced using &lt;code&gt;remove_action()&lt;/code&gt;.
In order to maintain backward compatibility with this usage, while
simultaneously converting the comment flood logic into something that
returns a value rather than calling &lt;code&gt;die()&lt;/code&gt; directly,
&lt;code&gt;check_comment_flood_db()&lt;/code&gt; has been changed into a wrapper function for
a call to &lt;code&gt;add_filter()&lt;/code&gt;; this, in turn, adds the *actual* comment flood
check to a new filter, 'wp_is_comment_flood'. Note that direct calls
to &lt;code&gt;check_comment_flood_db()&lt;/code&gt; will no longer do anything in isolation.
&lt;/p&gt;
&lt;p&gt;
Props websupporter, rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36901" title="#36901: enhancement: Removing wp_die() from wp_allow_comment() (closed: fixed)"&gt;#36901&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:27:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:10/1476156428331195</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;[38776]&lt;/a&gt; should be backported to 4.6.x, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38777" title="Taxonomy: Avoid a fatal error in `the_tags()` in the event that ..."&gt;[38777]&lt;/a&gt; is fine for 4.7/trunk only.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:9/1476156372192401</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38777" title="Taxonomy: Avoid a fatal error in `the_tags()` in the event that ..."&gt;38777&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Avoid a fatal error in &lt;code&gt;the_tags()&lt;/code&gt; in the event that &lt;code&gt;get_the_term_list()&lt;/code&gt; returns a WP_Error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props michalzuber.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38777]: Taxonomy: Avoid a fatal error in `the_tags()` in the event that ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38777</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38777/1476156371716542</guid>
      <description>&lt;p&gt;
Taxonomy: Avoid a fatal error in &lt;code&gt;the_tags()&lt;/code&gt; in the event that &lt;code&gt;get_the_term_list()&lt;/code&gt; returns a WP_Error.
&lt;/p&gt;
&lt;p&gt;
Props michalzuber.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:36/1476155906263455</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've done a search of the wordpress.org plugin repo, and I didn't find a single instance of &lt;code&gt;check_comment_flood_db()&lt;/code&gt; being called directly. It's always in the context of &lt;code&gt;remove_filter()&lt;/code&gt; etc, which will continue to work without the added tricks in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36901/36901.9.diff" title="Attachment '36901.9.diff' in Ticket #36901"&gt;36901.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36901/36901.9.diff" title="Download"&gt;​&lt;/a&gt;. So I'm going to go with the simpler approach of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36901/36901.8.diff" title="Attachment '36901.8.diff' in Ticket #36901"&gt;36901.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36901/36901.8.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'll write a make/core post that explains the issue.
&lt;/p&gt;
&lt;p&gt;
Also, after discussion with @rachelbaker in Slack (linked above), I'll be removing the HTML status code being passed as data to the &lt;code&gt;WP_Error&lt;/code&gt; objects. The parallel with &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; is not entirely accurate; error objects in that function need status codes for certain backward compatibility reasons. The error string ('comment_duplicate', etc) contains enough information to differentiate the nature of the error, and the consumer of the error can decide which HTML status code it wants to use when handling the error (if HTML status codes are even relevant for the consumer).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34657 (WordPress doesn't set object terms for menu items so pending items not ...) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 02:47:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34657#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34657#comment:5/1476154047283616</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch!
&lt;/p&gt;
&lt;p&gt;
Just one thing - I'm not sure we should be dying if &lt;code&gt;$_POST['menu']&lt;/code&gt; is not set. That block is meant to check whether the user has the capability to do this and it shouldn't ( in my opinion ) care if that item is set.
&lt;/p&gt;
&lt;p&gt;
If we're just wanting to be sure that there is a value passed to the &lt;code&gt;wp_save_nav_menu_items&lt;/code&gt; it might be a good idea to use a ternary instead.
&lt;/p&gt;
&lt;p&gt;
i.e  &lt;code&gt;$menu_id = ( isset( $_POST['menu'] ) ) ? absint( $_POST['menu'] ) : 0;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Tue, 11 Oct 2016 02:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:54/1476153693156021</guid>
      <description>&lt;p&gt;
I think the  &lt;code&gt;@since&lt;/code&gt; tag is missing from &lt;code&gt;wp.i18n.loadLocaleData&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 02:39:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:35/1476153592383921</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-comments by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-comments/p1476153590000005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:8/1476151055454008</guid>
      <description>&lt;p&gt;
Reopening for 4.6.2.
&lt;/p&gt;
&lt;p&gt;
Important note: the &lt;code&gt;@since&lt;/code&gt; annotation added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;[38776]&lt;/a&gt; reads &lt;code&gt;4.6.2&lt;/code&gt;. If there ends up being no 4.6.2 release, that value should be changed to 4.7.0 in trunk.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:7/1476150959073980</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;38776&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Better error handling when fetching object terms from cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt;, &lt;code&gt;get_object_term_cache()&lt;/code&gt; has expected term IDs to be&lt;br /&gt;
stored in the taxonomy relationship cache. The function would then&lt;br /&gt;
reach directly into the 'terms' cache to fetch the data corresponding&lt;br /&gt;
to a given term, before returning a &lt;code&gt;WP_Term&lt;/code&gt; object. This caused&lt;br /&gt;
problems when, for one reason or another, term data was cached&lt;br /&gt;
inconsistently:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the 'terms' cache is empty for a given term ID, despite the earlier call to &lt;code&gt;_prime_term_caches()&lt;/code&gt;, &lt;code&gt;get_term()&lt;/code&gt; would return an error object.
&lt;/li&gt;&lt;li&gt;If the array of cached term IDs contains an invalid ID, &lt;code&gt;get_term()&lt;/code&gt; would return an error object.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We avoid these errors by no longer touching the 'terms' cache directly,&lt;br /&gt;
but running term IDs through &lt;code&gt;get_term()&lt;/code&gt; and allowing that function to&lt;br /&gt;
reference the cache (and database, as needed). If &lt;code&gt;get_term()&lt;/code&gt; returns&lt;br /&gt;
an error object for any of the cached term IDs, &lt;code&gt;get_object_term_cache()&lt;/code&gt;&lt;br /&gt;
will return that error object alone. This change ensures that upstream&lt;br /&gt;
functions, like &lt;code&gt;get_the_terms()&lt;/code&gt;, return &lt;code&gt;WP_Error&lt;/code&gt; objects in a&lt;br /&gt;
predictable fashion.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32, michalzuber.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38776]: Taxonomy: Better error handling when fetching object terms from cache. ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38776</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38776/1476150958460784</guid>
      <description>&lt;p&gt;
Taxonomy: Better error handling when fetching object terms from cache.
&lt;/p&gt;
&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt;, &lt;code&gt;get_object_term_cache()&lt;/code&gt; has expected term IDs to be
stored in the taxonomy relationship cache. The function would then
reach directly into the 'terms' cache to fetch the data corresponding
to a given term, before returning a &lt;code&gt;WP_Term&lt;/code&gt; object. This caused
problems when, for one reason or another, term data was cached
inconsistently:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the 'terms' cache is empty for a given term ID, despite the earlier call to &lt;code&gt;_prime_term_caches()&lt;/code&gt;, &lt;code&gt;get_term()&lt;/code&gt; would return an error object.
&lt;/li&gt;&lt;li&gt;If the array of cached term IDs contains an invalid ID, &lt;code&gt;get_term()&lt;/code&gt; would return an error object.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We avoid these errors by no longer touching the 'terms' cache directly,
but running term IDs through &lt;code&gt;get_term()&lt;/code&gt; and allowing that function to
reference the cache (and database, as needed). If &lt;code&gt;get_term()&lt;/code&gt; returns
an error object for any of the cached term IDs, &lt;code&gt;get_object_term_cache()&lt;/code&gt;
will return that error object alone. This change ensures that upstream
functions, like &lt;code&gt;get_the_terms()&lt;/code&gt;, return &lt;code&gt;WP_Error&lt;/code&gt; objects in a
predictable fashion.
&lt;/p&gt;
&lt;p&gt;
Props dd32, michalzuber.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:6/1476150298140880</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
One case I was worried about was where it'd just continuously return a WP_Error when the cache was invalid, however by switching purely to get_term() that would cause it to fall back to the database anyway, correct?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yup, all the caching logic is hidden inside of &lt;code&gt;get_term()&lt;/code&gt;. This is better anyway, since it means less exposure of the cache internals.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also assume there's a PHPDoc update to go with that though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great, I'll add this and commit. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:5/1476150195668880</guid>
      <description>&lt;p&gt;
@boonebgorges That looks like it does exactly what I was thinking, I was for some reason having difficulty in writing that same patch while dug in deep. I also assume there's a PHPDoc update to go with that though.
&lt;/p&gt;
&lt;p&gt;
One case I was worried about was where it'd just continuously return a &lt;code&gt;WP_Error&lt;/code&gt; when the cache was invalid, however by switching purely to &lt;code&gt;get_term()&lt;/code&gt; that would cause it to fall back to the database anyway, correct?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:100/1476150140096956</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38775" title="XML-RPC: Re-add a `global $wpdb` missed in [38768].
See #37699.
"&gt;38775&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
XML-RPC: Re-add a &lt;code&gt;global $wpdb&lt;/code&gt; missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;[38768]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38775]: XML-RPC: Re-add a `global $wpdb` missed in [38768].  See #37699.  </title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:42:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38775</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38775/1476150139593657</guid>
      <description>&lt;p&gt;
XML-RPC: Re-add a &lt;code&gt;global $wpdb&lt;/code&gt; missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;[38768]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:4/1476150014592348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@dd32 Yes, your idea is a good one. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37291/37291.2.diff" title="Attachment '37291.2.diff' in Ticket #37291"&gt;37291.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37291/37291.2.diff" title="Download"&gt;​&lt;/a&gt;: if any call to &lt;code&gt;get_term()&lt;/code&gt; returns an error object, &lt;code&gt;get_object_term_cache()&lt;/code&gt; will bail, returning the &lt;code&gt;WP_Error&lt;/code&gt;. &lt;code&gt;get_the_terms()&lt;/code&gt; and friends are already built in such a way that the error object will be passed up the chain. Can you read the patch (especially the test, which tries to emulate a situation where &lt;code&gt;get_term()&lt;/code&gt; would return an error) to make sure it captures the spirit of your idea?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37291.2.diff attached to Ticket #37291</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37291/37291.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37291/37291.2.diff/1476149822482361</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35272 (.menu-item-home class not applying to static front pages) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:24:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35272#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35272#comment:4/1476149061191710</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38281 (Generating thumbnails matching original image dimensions) created</title>
      
        <dc:creator>galbaras</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38281</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38281/1476148776658337</guid>
      <description>&lt;p&gt;
When the thumbnail size matches the uploaded image dimensions precisely, the thumbnail is created.
&lt;/p&gt;
&lt;p&gt;
In image_resize_dimensions(), line 551 is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $new_w &amp;gt;= $orig_w &amp;amp;&amp;amp; $new_h &amp;gt;= $orig_h &amp;amp;&amp;amp; $dest_w != $orig_w &amp;amp;&amp;amp; $dest_h != $orig_h ) {
&lt;/pre&gt;&lt;p&gt;
This means that when $dest_w == $orig_w or $dest_h == $orig_h, a new file is created, when it shouldn't be, although the new file's dimensions match that of the original file.
&lt;/p&gt;
&lt;p&gt;
The first 2 conditions ($new_w &amp;gt;= $orig_w &amp;amp;&amp;amp; $new_h &amp;gt;= $orig_h) should be enough prevent the creation of an equal or larger file.
&lt;/p&gt;
&lt;p&gt;
So the new code should be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $new_w &amp;gt;= $orig_w &amp;amp;&amp;amp; $new_h &amp;gt;= $orig_h ) {
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31652 (Drag/Drop Ordering of Media Does Not Work in Chrome on touch enabled ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:13:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31652#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31652#comment:20/1476148429109895</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31652#comment:19" title="Comment 19"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Always enqueue jquery-touch-punch in the admin
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was hoping we can stop using jquery-touch-punch as it is a 5 years old quick hack for jQuery UI Mouse to somewhat make it work on touch devices. Re-testing it again and thinking I'd rather not have these thumbnails draggable/sorable at all on a phone. Makes "normal" scrolling much harder. A proper fix would probably be to show arrow buttons in the middle of the thumbnails.
&lt;/p&gt;
&lt;p&gt;
Also suspect it is failing in some cases which is probably what @celloexpressions is seeing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37900 (Support custom dashicon for wp.mce.View.setLoader()) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37900#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37900#comment:3/1476147322813446</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38774" title="TinyMCE: add support for custom dashicon for wp.mce.View.setLoader().
 ..."&gt;38774&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: add support for custom dashicon for wp.mce.View.setLoader().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props procodewp.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37900" title="#37900: enhancement: Support custom dashicon for wp.mce.View.setLoader() (closed: fixed)"&gt;#37900&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38774]: TinyMCE: add support for custom dashicon for wp.mce.View.setLoader().  ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38774</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38774/1476147322333772</guid>
      <description>&lt;p&gt;
TinyMCE: add support for custom dashicon for wp.mce.View.setLoader().
&lt;/p&gt;
&lt;p&gt;
Props procodewp.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37900" title="#37900: enhancement: Support custom dashicon for wp.mce.View.setLoader() (closed: fixed)"&gt;#37900&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37900 (Support custom dashicon for wp.mce.View.setLoader()) updated</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37900#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37900#comment:2/1476146104680175</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37900.patch attached to Ticket #37900</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37900/37900.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37900/37900.patch/1476146060715922</guid>
      <description>&lt;p&gt;
Patch to allow wp.mce.View.setLoader() to accept a dashicon argument, or use default.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38274 (wp_set_auth_cookie and FileSystem relation) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38274#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38274#comment:1/1476145567068744</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @rezamarandi and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Indeed the script should operate the same in both of those configurations, there's no restriction in WordPress which would prevent it from doing so.
This feels like it could potentially be caused by a strange server mis-configuration.
&lt;/p&gt;
&lt;p&gt;
Can you supply the full headers output when you request the script in both modes?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37507,​37808,​38000,​38081,​38245 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37507%2C37808%2C38000%2C38081%2C38245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37507%2C37808%2C38000%2C38081%2C38245/1476144543844961</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38773" title="TiinyMCE: update to 4.4.3, changelog: ..."&gt;38773&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TiinyMCE: update to 4.4.3, changelog: &lt;a class="ext-link" href="https://www.tinymce.com/docs/changelog/#version443-september12016"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.tinymce.com/docs/changelog/#version443-september12016&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38081" title="#38081: defect (bug): Update TinyMCE to 4.4.3 (closed: fixed)"&gt;#38081&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38245" title="#38245: defect (bug): Caret does not move down on enter when next to view (closed: fixed)"&gt;#38245&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37507" title="#37507: defect (bug): Can't delete empty line between visual shortcodes. (closed: fixed)"&gt;#37507&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37808" title="#37808: defect (bug): Zero-width space stripped by TinyMCE again (closed: fixed)"&gt;#37808&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38000" title="#38000: defect (bug): Visual mode editor is broken after update to 4.6.1 (closed: fixed)"&gt;#38000&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38773]: TiinyMCE: update to 4.4.3, changelog: ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38773</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38773/1476144543087245</guid>
      <description>&lt;p&gt;
TiinyMCE: update to 4.4.3, changelog: &lt;a class="ext-link" href="https://www.tinymce.com/docs/changelog/#version443-september12016"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.tinymce.com/docs/changelog/#version443-september12016&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38081" title="#38081: defect (bug): Update TinyMCE to 4.4.3 (closed: fixed)"&gt;#38081&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38245" title="#38245: defect (bug): Caret does not move down on enter when next to view (closed: fixed)"&gt;#38245&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37507" title="#37507: defect (bug): Can't delete empty line between visual shortcodes. (closed: fixed)"&gt;#37507&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37808" title="#37808: defect (bug): Zero-width space stripped by TinyMCE again (closed: fixed)"&gt;#37808&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38000" title="#38000: defect (bug): Visual mode editor is broken after update to 4.6.1 (closed: fixed)"&gt;#38000&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>