<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #34729 (Use short CURIEs instead of full URIs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Feb 2016 23:54:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34729#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34729#comment:13/1455062046667328</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1455062044002242"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>DragonFlyEye</dc:creator>

      <pubDate>Tue, 09 Feb 2016 23:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:10/1455060140265033</guid>
      <description>&lt;p&gt;
So, we've got the standards or at least the framework to track them. For this ticket, I guess, this is just a question of running down grey colors that do not conform to the six listed there? (and yes, I promise I'm about to read the Core Handbook right after I'm done commenting..)
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>hugobaeta</dc:creator>

      <pubDate>Tue, 09 Feb 2016 23:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:9/1455059478262139</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35783#comment:4" title="Comment 4"&gt;Playrom&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think Will be also usefull create a sort of "Wordpress Graphics Standard", a manual where everyone can reference when contributing in the design branch of the project
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's WordPress (Capital P, dangit!). And we have Design Handbook, or at least the foundations of it in &lt;a class="ext-link" href="https://make.wordpress.org/design/handbook/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/design/handbook/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>hugobaeta</dc:creator>

      <pubDate>Tue, 09 Feb 2016 23:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:8/1455059339479503</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35783#comment:6" title="Comment 6"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
See also &lt;a class="ext-link" href="https://wordpress.org/about/logos/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/logos/&lt;/a&gt; and &lt;a class="ext-link" href="http://codepen.io/hugobaeta/full/RNOzoV/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codepen.io/hugobaeta/full/RNOzoV/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/about/logos"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/logos&lt;/a&gt; is severely outdated... I need to update it with info from &lt;a class="ext-link" href="https://make.wordpress.org/design/handbook/foundations/identity/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/design/handbook/foundations/identity/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>DragonFlyEye</dc:creator>

      <pubDate>Tue, 09 Feb 2016 23:05:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:7/1455059141254321</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35783#comment:6" title="Comment 6"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
See also &lt;a class="ext-link" href="https://wordpress.org/about/logos/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/logos/&lt;/a&gt; and &lt;a class="ext-link" href="http://codepen.io/hugobaeta/full/RNOzoV/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codepen.io/hugobaeta/full/RNOzoV/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wow. I have _never_ seen those before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 09 Feb 2016 23:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:194</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:194/1455059040261078</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As I've understood from other developers, we can't create a bonafide HTTP POST form submission request to the nav menus save handler in a unit test. This blocks our ability to add unit test coverage here, so I'm going to remove &lt;code&gt;needs-unit-tests&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32681 (Shift-clicking a menu item in the website preview iframe should open ...) reopened</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 09 Feb 2016 22:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32681#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32681#comment:22/1455058219077618</guid>
      <description>&lt;p&gt;
One thing we missed here. When a nav menu is rendered out multiple times, only the first instance will include nav menu items that have ID attributes. This is to ensure that two elements don't have the same ID in the page. The &lt;code&gt;_nav_menu_item_id_use_once&lt;/code&gt; function does this for the &lt;code&gt;nav_menu_item_id&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
So we need to change the selector from &lt;code&gt;.menu-item[id^=menu-item-]&lt;/code&gt; to just &lt;code&gt;.menu-item&lt;/code&gt;, and also to look at the class name instead of the ID on the actual nav menu items, as so:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="gd"&gt;- navMenuItemParts = $( this ).attr( 'id' ).match( /^menu-item-(\d+)$/ );
&lt;/span&gt;&lt;span class="gi"&gt;+ navMenuItemParts = $( this ).attr( 'class' ).match( /(?:^|\s)menu-item-(\d+)(?:\s|$)/ );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #35781 (Incorrect use of PHP method compact) reopened</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 09 Feb 2016 22:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35781#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35781#comment:2/1455058054036052</guid>
      <description>&lt;p&gt;
This is a valid bug. The &lt;a href="https://core.trac.wordpress.org/browser/tags/4.4.1/src/wp-includes/pluggable.php?marks=544#L539"&gt;current code&lt;/a&gt; uses variable references instead of variable names.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 09 Feb 2016 22:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:6/1455056610060163</guid>
      <description>&lt;p&gt;
See also &lt;a class="ext-link" href="https://wordpress.org/about/logos/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/logos/&lt;/a&gt; and &lt;a class="ext-link" href="http://codepen.io/hugobaeta/full/RNOzoV/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codepen.io/hugobaeta/full/RNOzoV/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34729 (Use short CURIEs instead of full URIs) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 09 Feb 2016 22:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34729#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34729#comment:12/1455055321279123</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@rmccue new patch with tests, returning early, typo fixes and also the ability to filter the CURIEs so plugins etc can add their own if they so wish.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34729 (Use short CURIEs instead of full URIs) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 09 Feb 2016 22:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34729#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34729#comment:11/1455055271932416</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34729.3.diff attached to Ticket #34729</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 09 Feb 2016 22:00:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34729/34729.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34729/34729.3.diff/1455055231764092</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35791 (WP_Site_Query class) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 09 Feb 2016 21:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35791#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35791#comment:1/1455055071604403</guid>
      <description>&lt;p&gt;
If you think of wp_get_sites is a base, the following params are accepted.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
'network_id' =&amp;gt; $wpdb-&amp;gt;siteid,
'public'     =&amp;gt; null,
'archived'   =&amp;gt; null,
'mature'     =&amp;gt; null,
'spam'       =&amp;gt; null,
'deleted'    =&amp;gt; null,
'limit'      =&amp;gt; 100,
'offset'     =&amp;gt; 0,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To bring it into line with other functions like get_users, we should add the followings params
domain - string or array
path - string or array
includes - array of blog ids
excludes - array of blog ids
order - string - field name
orderby - string ASC|DESC
fields - all|ids|domains
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35791 (WP_Site_Query class) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 09 Feb 2016 21:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35791</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35791/1455054559941493</guid>
      <description>&lt;p&gt;
With WP_Site is being merged in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32450" title="#32450: task (blessed): WP_Site class (closed: fixed)"&gt;#32450&lt;/a&gt; and we need a way to get query the blogs table in a consistent way of querying for sites.
&lt;/p&gt;
&lt;p&gt;
This class could be used to logic instead the following functions
&lt;/p&gt;
&lt;p&gt;
get_id_from_blogname
get_blogaddress_by_id
get_blog_details
get_blog_status
get_last_updated
get_blog_id_from_url
domain_exists
wp_get_sites
get_site_by_path ( Not sure about this one )
ms_allowed_http_request_hosts
&lt;/p&gt;
&lt;p&gt;
This class could also be used to create a sites endpoint in the rest api.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Feb 2016 21:32:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:20/1455053572869060</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1455053570002149"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35160 (Add Test Coverage for Atom &amp; Reorganize Feeds Unit Tests) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Tue, 09 Feb 2016 20:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35160#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35160#comment:9/1455050673144210</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35160/35160.atom.patch" title="Attachment '35160.atom.patch' in Ticket #35160"&gt;35160.atom.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35160/35160.atom.patch" title="Download"&gt;​&lt;/a&gt; takes the suggestions made by @johnbillion into consideration.  I'd rather just get the Atom tests in for now since they are blocking other tickets, and we can create new tickets down the road for dealing with common / RSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Feb 2016 20:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780#comment:7/1455050240382098</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by michael.heuberger. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1455050238000986"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35790 (Replace PHP serialized by json encoded for options storage) updated</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Tue, 09 Feb 2016 20:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35790#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35790#comment:2/1455049272010509</guid>
      <description>&lt;p&gt;
Hi @ocean90 thank you, I could not find the proposal
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #23753,​35790 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 09 Feb 2016 20:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23753%2C35790</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23753%2C35790/1455048117167369</guid>
      <description>duplicate: &lt;p&gt;
Hello @bastho, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
This change was already proposed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23753" title="#23753: feature request: Switch to JSON encoding instead of PHP serialisation (closed: wontfix)"&gt;#23753&lt;/a&gt; so I'm going to close this ticket as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #35781 (Incorrect use of PHP method compact) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35781#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35781#comment:1/1455047798347566</guid>
      <description>invalid: &lt;p&gt;
The existing format is how PHP's &lt;code&gt;compact()&lt;/code&gt; method works - &lt;a class="ext-link" href="http://php.net/compact"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/compact&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35790 (Replace PHP serialized by json encoded for options storage) created</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35790</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35790/1455047760882088</guid>
      <description>&lt;p&gt;
Serialized objects are tricky to exploit out of PHP, so we often need to convert datas for other languages (mostly JavaScript).
&lt;/p&gt;
&lt;p&gt;
Using json encoding for &lt;code&gt;wp_options&lt;/code&gt; and &lt;code&gt;site_options&lt;/code&gt; would be a good investment for further usages.
&lt;/p&gt;
&lt;p&gt;
The fist step would be to replace old serialized object and convert them to json or changing &lt;code&gt;maybe_serialized()&lt;/code&gt; to detect the current encoding of a string.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35789 (Theme screenshots flicker on initial hover with fresh cache in Firefox.) updated</title>
      
        <dc:creator>JoeFusco</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:39:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35789#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35789#comment:2/1455046794586190</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35787 (Theme screenshot will occasionally shift in chromium browsers on hover.) updated</title>
      
        <dc:creator>JoeFusco</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:39:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35787#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35787#comment:2/1455046770961010</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35789 (Theme screenshots flicker on initial hover with fresh cache in Firefox.) updated</title>
      
        <dc:creator>JoeFusco</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35789#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35789#comment:1/1455046669388118</guid>
      <description>&lt;p&gt;
See attached solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35789.diff attached to Ticket #35789</title>
      
        <dc:creator>JoeFusco</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35789/35789.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35789/35789.diff/1455046630790190</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35789 (Theme screenshots flicker on initial hover with fresh cache in Firefox.) created</title>
      
        <dc:creator>JoeFusco</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35789</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35789/1455046383755569</guid>
      <description>&lt;p&gt;
With a freshly cleared cache, theme screenshot images appear to jump/flicker/flash on the initial hover. This behavior is not intended and can be easily solved by using the &lt;code&gt;will-change&lt;/code&gt; property to force hardware acceleration which fixes the initial paint. See: &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/CSS/will-change"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/will-change&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Due to how fast the flicker is, you will only see &lt;strong&gt;twentyfifteen&lt;/strong&gt; and &lt;strong&gt;twentyfourteen&lt;/strong&gt; theme screenshots flicker in the following screencast although all 6 screenshots flickered initially.
&lt;/p&gt;
&lt;p&gt;
screencast: &lt;a class="ext-link" href="http://quick.as/9yj2sooqn"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://quick.as/9yj2sooqn&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Open latest Firefox
&lt;/li&gt;&lt;li&gt;Go to src.wordpress-develop.dev/wp-admin/themes.php
&lt;/li&gt;&lt;li&gt;Refresh the page and bypass the browser's cache. (Mac &lt;code&gt;cmd&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;R&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;Hover theme screenshots.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35786 (Media Uploads in 4.5 Fail) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:25:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35786#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35786#comment:2/1455045923993652</guid>
      <description>&lt;p&gt;
Literally upload an image.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Make a new post
&lt;/li&gt;&lt;li&gt;DO NOT SAVE THIS POST
&lt;/li&gt;&lt;li&gt;Drag/drop media
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Gives me an error on 4.5-alpha-36504
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>DragonFlyEye</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:5/1455044977166144</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35783#comment:4" title="Comment 4"&gt;Playrom&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35783#comment:3" title="Comment 3"&gt;DragonFlyEye&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems to me like creating color-based classes for the admin areas would be a helpful way to keep color consistent across even multiple color schemes. If there is one .sidebar class that defines the area, regardless of what color that class represents and we had admin themes that built off those classes, you could define colors in a single location.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think Will be also usefull create a sort of "Wordpress Graphics Standard", a manual where everyone can reference when contributing in the design branch of the project
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No question. A design standard similar to the theme coding standard, IOW.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35770 (Shortcode fails with 4.4. It is working with 4.3) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35770#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35770#comment:6/1455044949151863</guid>
      <description>&lt;p&gt;
So the problem I see with the content that you pasted is that it's actually using nested shortcodes, which WordPress doesn't support by default. Basically, all your &lt;code&gt;content_with_image&lt;/code&gt; shortcodes are contained within a &lt;code&gt;content&lt;/code&gt; shortcode. In order to handle nested shortcodes like that,your &lt;code&gt;content&lt;/code&gt; shortcode needs to call &lt;code&gt;do_shortcode()&lt;/code&gt; on it's contents. In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35770/35770.2.php" title="Attachment '35770.2.php' in Ticket #35770"&gt;the updated MU test plugin&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35770/35770.2.php" title="Download"&gt;​&lt;/a&gt;, I added an example that you can see. The &lt;code&gt;content&lt;/code&gt; shortcode does not run &lt;code&gt;do_shortcode()&lt;/code&gt; on it's contents (thus outputting the raw text of the nested shortcode) and the &lt;code&gt;content-do-shortcode&lt;/code&gt; shortcode DOES (thus outputting the processed shortcode). I copied the contents of the &lt;a href="https://core.trac.wordpress.org/browser/branches/4.3/src/wp-includes/shortcodes.php"&gt;4.3 version of wp-includes/shortcodes.php&lt;/a&gt; file over my existing one, and it didn't change the behavior of my tests at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35787 (Theme screenshot will occasionally shift in chromium browsers on hover.) updated</title>
      
        <dc:creator>JoeFusco</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35787#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35787#comment:1/1455044889219075</guid>
      <description>&lt;p&gt;
See attached solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35787.diff attached to Ticket #35787</title>
      
        <dc:creator>JoeFusco</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:06:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35787/35787.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35787/35787.diff/1455044808619208</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35786 (Media Uploads in 4.5 Fail) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:04:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35786#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35786#comment:1/1455044675895453</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
From /newticket:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What steps should be taken to consistently reproduce the problem?
&lt;/li&gt;&lt;li&gt;Please provide any additional information that you think we'd find useful. (OS and browser for UI defects, server environment for crashes, etc.)
&lt;/li&gt;&lt;li&gt;Does the problem occur even when you deactivate all plugins and use the default theme?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Also, which version to you mean by "latest build"? Right now uploads are working in trunk and the latest night for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35770.2.php attached to Ticket #35770</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 09 Feb 2016 19:01:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35770/35770.2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35770/35770.2.php/1455044508347650</guid>
      <description>&lt;p&gt;
MU plugin for testing
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35788 (Plugin Editor wrong selected option when file selected) updated</title>
      
        <dc:creator>CreativeJuiz</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35788#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35788#comment:1/1455044286138185</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>Playrom</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:4/1455044242180162</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35783#comment:3" title="Comment 3"&gt;DragonFlyEye&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems to me like creating color-based classes for the admin areas would be a helpful way to keep color consistent across even multiple color schemes. If there is one .sidebar class that defines the area, regardless of what color that class represents and we had admin themes that built off those classes, you could define colors in a single location.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think Will be also usefull create a sort of "Wordpress Graphics Standard", a manual where everyone can reference when contributing in the design branch of the project
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35788.patch attached to Ticket #35788</title>
      
        <dc:creator>CreativeJuiz</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:55:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35788/35788.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35788/35788.patch/1455044148399852</guid>
      <description>&lt;p&gt;
Creation of $current_plugin var + better code flavor
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35788 (Plugin Editor wrong selected option when file selected) created</title>
      
        <dc:creator>CreativeJuiz</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:51:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35788</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35788/1455043872177110</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
I just seen that when you are in the Plugin Editor page of the WP Admin, the selected option in the top right corner (the name of the plugin) is always the first option if you are editing a plugin file.
&lt;/p&gt;
&lt;p&gt;
For example, with Akismet and WooCommerce installed, select WooCommerce and click the readme.txt file (or another one is not the first WooCommerce file). The select show the first option instead of WooCommerce (here Akismet).
&lt;/p&gt;
&lt;p&gt;
I have a tested fix for that.
See the patch file in attachment.
&lt;/p&gt;
&lt;p&gt;
Thank you for your time and advises.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35787 (Theme screenshot will occasionally shift in chromium browsers on hover.) created</title>
      
        <dc:creator>JoeFusco</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35787</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35787/1455043490662871</guid>
      <description>&lt;p&gt;
This only happens for for the duration of the hover very subtly. It can be described as a squish or 1px shift to the left.
&lt;/p&gt;
&lt;p&gt;
OSX 10.11.3
Chrome 48
&lt;/p&gt;
&lt;p&gt;
See gif for described behavior:
&lt;a style="padding:0; border:none" href="http://g.recordit.co/hLK5M1axDA.gif"&gt;&lt;img src="http://g.recordit.co/hLK5M1axDA.gif" alt="http://g.recordit.co/hLK5M1axDA.gif" crossorigin="anonymous" title="http://g.recordit.co/hLK5M1axDA.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35786 (Media Uploads in 4.5 Fail) created</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35786</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35786/1455042818864835</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Screen Shot 2016-02-09 at 9.59.09 AM.png
An error occurred in the upload. Please try again later.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This happens on all image uploads on the latest build
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35785 (Concatenating "wp-post-new-reload=true" with URL repeatedly) created</title>
      
        <dc:creator>codename065</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:33:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35785</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35785/1455042792337395</guid>
      <description>&lt;p&gt;
Concatenating "wp-post-new-reload=true" with URL repeatedly when a meta box has required field and user click on "Publish" button without filling it properly:
&lt;a class="ext-link" href="http://screencast-o-matic.com/watch/cDnQFFhRcR"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://screencast-o-matic.com/watch/cDnQFFhRcR&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>patch.diff attached to Ticket #35784</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35784/patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35784/patch.diff/1455041111339001</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35784 (Remove unused variable in get_terms()) created</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 09 Feb 2016 18:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35784/1455041099416857</guid>
      <description>&lt;p&gt;
Removes unused variable &lt;code&gt;$single_taxonomy&lt;/code&gt; from &lt;code&gt;get_terms()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>DragonFlyEye</dc:creator>

      <pubDate>Tue, 09 Feb 2016 17:36:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:3/1455039407902711</guid>
      <description>&lt;p&gt;
Seems to me like creating color-based classes for the admin areas would be a helpful way to keep color consistent across even multiple color schemes. If there is one .sidebar class that defines the area, regardless of what color that class represents and we had admin themes that built off those classes, you could define colors in a single location.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>Playrom</dc:creator>

      <pubDate>Tue, 09 Feb 2016 17:16:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:2/1455038165441523</guid>
      <description>&lt;p&gt;
I think that's definitely a problem! It's inconsistent and there will be a lot more shades in the future if we don't fix this now.
&lt;/p&gt;
&lt;p&gt;
It's a viable way to start using sass in the coming releases? This is one of the problems that could be fixed with a CSS preprocessor
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35379_unit_test.diff attached to Ticket #35379</title>
      
        <dc:creator>codex-m</dc:creator>

      <pubDate>Tue, 09 Feb 2016 15:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35379/35379_unit_test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35379/35379_unit_test.diff/1455032969928951</guid>
      <description>&lt;p&gt;
Unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35379.diff attached to Ticket #35379</title>
      
        <dc:creator>codex-m</dc:creator>

      <pubDate>Tue, 09 Feb 2016 15:49:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35379/35379.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35379/35379.diff/1455032955405621</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35379 (update_network_option changes stored option value if sanitize_option ...) updated</title>
      
        <dc:creator>codex-m</dc:creator>

      <pubDate>Tue, 09 Feb 2016 15:48:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35379#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35379#comment:2/1455032921663542</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I manage a multisite and came across this issue. My attempt to solve this in my local multisite is passing a new parameter for sanitize_option. This parameter is the network ID which can be an integer when using for a specific network in a multisite. Or it can be TRUE to use the current network. By default, it's false for non-multisite implementations. See attached 35379.diff.
&lt;/p&gt;
&lt;p&gt;
I wrote some unit for test (see attached 35379_unit_test.diff). Covering three network affected options (admin_email, siteurl and WPLANG). This test also detects the issue (if the patch is not applied and confirms the fix when patch is applied.
&lt;/p&gt;
&lt;p&gt;
In addition, I ran the overall unit test before and after the patch and I don't see any side effects on this. Feel free to review ;) Thanks a lot!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24856 (Authors widget to highlight authors) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Tue, 09 Feb 2016 15:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24856#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24856#comment:27/1455032824294387</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24856/" title="Attachments of Ticket #24856"&gt;24856.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24856/" title="Download"&gt;​&lt;/a&gt; moves the widget code to it's own file like &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24856/" title="Attachments of Ticket #24856"&gt;24856.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24856/" title="Download"&gt;​&lt;/a&gt; and also re-adds the register_widget line in widgets.php file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24856.6.diff attached to Ticket #24856</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Tue, 09 Feb 2016 15:45:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24856/24856.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24856/24856.6.diff/1455032715554297</guid>
      <description>&lt;p&gt;
Refresh + adds register_widget
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Feb 2016 15:39:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783#comment:1/1455032389388700</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1455032387000591"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Feb 2016 15:39:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780#comment:6/1455032364345540</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1455032362000965"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35783 (The WordPress shades of grey) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 09 Feb 2016 15:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35783</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35783/1455032248826578</guid>
      <description>&lt;p&gt;
A while ago there was a &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1453812787000255"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;conversation on Slack&lt;/a&gt; about the multitude of grays used in the WordPress admin. Wondering about a tool capable of extracting colors and return some usage data, we tried cssstats. Far from being a scientific method, I've just uploaded the concatenated and minified CSS file and &lt;a class="ext-link" href="https://cldup.com/10C6ryGsN3.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;got some results&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm pretty sure cssstats doesn't get all the colors but the data report is an interesting summary of the WordPress CSS (as of January 26th, 2016). There are many interesting points to consider, for example the media queries total number, but let's focus just on colors for now and more specifically on grays.
&lt;/p&gt;
&lt;p&gt;
Looks like there are more than 40 different shades of grays, not counting the rgba ones and the ones that cssstats probably missed. It's totally understandable that in a so large project, with time, year after year, some things get missed and some colors stay in the CSS without particular reasons other than historical ones. By the way, for the sanity of the CSS in the long run, I'd recommend to audit all these shades of gray and try to reduce their total number as much as possible.
&lt;/p&gt;
&lt;p&gt;
About backgrounds, this would have beneficial effects also when trying to find accessible colors for links (hover, focus states included) and other controls. Finding suitable colors against, say, 20 different gray backgrounds would be a bit hard. Reducing the gray backgrounds to a small, known, number would greatly help. Not to mention design consistency and the ongoing effort to make WordPress use a well established, standardized, color palette.
&lt;/p&gt;
&lt;p&gt;
Working a bit on the cssstats results, I've split the grays in different groups, just scanning the WordPress CSS files and trying to check how many times they're used and where. Again, this doesn't pretend to be a scientific method :) for that, maybe there would be the need of some more reliable tools other than cssstats.
&lt;/p&gt;
&lt;p&gt;
The grays in the first group are used in only one CSS ruleset and I'd say they should be definitely standardized and replaced with other grays. The ones in the second group have just two occurrences and they should probably be standardized too. Third and fourth group: to evaluate :)
&lt;/p&gt;
&lt;p&gt;
One occurrence
&lt;/p&gt;
&lt;pre class="wiki"&gt;2f2f2f - for .theme-browser .theme.active .theme-name
686868 - .theme-overlay .theme-author
808080 - suggest.js auto suggestions border
grey   - .media-disabled, .imgedit-settings .disabled
9a9a9a - old media upload? to move to deprecated media css
bbb    - media upload dashicon upload-dismiss-errors, also tinymce "lightgray" skin
d2d2d2 - borders for .tablenav .tablenav-pages a, .tablenav-pages-navspan
ececec - background for #plugin-information .counter-back (star rating in the plugin details modal)
e7e7e7 - .media-icon img fallback border for rgba border, remove both?
f4f4f4 - "undo" table row background, maybe unify with a more used background like f5f5f5 ?
&lt;/pre&gt;&lt;p&gt;
Two occurrences
&lt;/p&gt;
&lt;pre class="wiki"&gt;101010 - suggest.js auto suggestions text color list on white or #f0f0b8 background (also on Press This)
a9a9a9 - input placeholder, there's a ticket for this, see #35777
b4b4b4 - tablenav-pages-navspan and the pressthis-bookmarklet link
dadada - (excluding deprecated media css) only for borders, maybe unify with more used borders ?
d7d7d7 - revisions borders, also tinymce "lightgray" skin
e6e6e6 - #plugin-information .review, press this, also tinymce "lightgray" skin, to unify with e5e5e5 ?
&lt;/pre&gt;&lt;p&gt;
Have very similar colors, maybe should be unified
&lt;/p&gt;
&lt;pre class="wiki"&gt;464646 - unify with 444 ?
dedede - mainly borders and .wp-playlist-dark .wp-playlist-caption, maybe unify with dfdfdf ?
dfdfdf - mainly borders, maybe unify with dedede ?
e4e4e4 - used very few times, maybe unify with e5e5e5 ?
&lt;/pre&gt;&lt;p&gt;
Used very few times, to evaluate
&lt;/p&gt;
&lt;pre class="wiki"&gt;222    - .edit-comment-author text and wp-embed and mediaelement background, maybe change to #23282d ?
727272 - maybe change to 72777c ?
ebebeb - used very few times
fbfbfb - manage-menus (toolbar in menus screen) and login form, very close to white
fdfdfd - tab panels
eaeaea - only for `kbd` and `code` backgrounds
e8e8e8 - border for list table pagination links and few other things
e1e1e1 - a very few borders and shadows
&lt;/pre&gt;&lt;p&gt;
Other grays
&lt;/p&gt;
&lt;pre class="wiki"&gt;444    - main text color
555    - maybe should be replaced with the new 555d66 ?
555d66 - new gray
666    - mainly for text color
999    - there's a ticket for text color, see #35660 but it's also used for borders
ccc    - mixed use, text, borders, backgrounds, shadows
c4c4c4 - only in the gradient for #postimagediv .inside img
ddd    - mainly borders and a few backgrounds
eee    - mixed use, most notably: main Customizer background
e5e5e5 - mixed use, mainly borders
fcfcfc - backgrounds
f1f1f1 - main background
f3f3f3 - backgrounds
f5f5f5 - backgrounds
f7f7f7 - backgrounds
f9f9f9 - backgrounds, zebra striping and others
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35782 (Don't show admin notice for upgrading the database on upgrade.php) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 09 Feb 2016 14:29:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35782#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35782#comment:1/1455028147253983</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36505" title="Multisite: Don't show the database upgrade admin notice on the upgrade ..."&gt;36505&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Don't show the database upgrade admin notice on the upgrade page itself.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35782" title="#35782: defect (bug): Don't show admin notice for upgrading the database on upgrade.php (closed: fixed)"&gt;#35782&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36505]: Multisite: Don't show the database upgrade admin notice on the upgrade ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 09 Feb 2016 14:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36505</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36505/1455028146475919</guid>
      <description>&lt;p&gt;
Multisite: Don't show the database upgrade admin notice on the upgrade page itself.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35782" title="#35782: defect (bug): Don't show admin notice for upgrading the database on upgrade.php (closed: fixed)"&gt;#35782&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>2015@952px.jpg attached to Ticket #33143</title>
      
        <dc:creator>th23</dc:creator>

      <pubDate>Tue, 09 Feb 2016 14:16:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33143/2015%40952px.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33143/2015%40952px.jpg/1455027364248945</guid>
      <description>&lt;p&gt;
Twenty Fifteen theme at 952px width - sidebar not visible
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33143 (Twenty Fifteen uses jQuery window.width() - which is not synced with ...) updated</title>
      
        <dc:creator>th23</dc:creator>

      <pubDate>Tue, 09 Feb 2016 14:15:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33143#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33143#comment:3/1455027308297397</guid>
      <description>&lt;p&gt;
Okay, will try to explain more detailed the steps to reproduce - sorry, not that easy:
&lt;/p&gt;
&lt;p&gt;
Opened in Firefox at window width larger than 955px, everthing is fine.
&lt;/p&gt;
&lt;p&gt;
If user has scrolled down, the sidebar gets some style defined, e.g. offset and position.
&lt;/p&gt;
&lt;p&gt;
The user now resizes the window to 952px (actually whatever value between 955px and 59.6875em) the sidebar is not visible anymore :-/ Will attach an image right after...
&lt;/p&gt;
&lt;p&gt;
The reason is, that the media query in CSS removes the sidebar at 59.6875em, while the JS (see below) already does not update the scroll position anymore at 955px - and both values are not necessarily the same (presumably due to the way browsers include/exclude the space of the scrollbar.
&lt;/p&gt;
&lt;pre class="wiki"&gt;	function scroll() {
		var windowPos = $window.scrollTop();
		if ( 955 &amp;gt; windowWidth ) {
			return;
		}
&lt;/pre&gt;&lt;p&gt;
Does that make it clearer? If not, please donÄt hesitate to ask...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35782.patch attached to Ticket #35782</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 09 Feb 2016 13:46:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35782/35782.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35782/35782.patch/1455025609150705</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35782.png attached to Ticket #35782</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 09 Feb 2016 13:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35782/35782.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35782/35782.png/1455025196564615</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35782 (Don't show admin notice for upgrading the database on upgrade.php) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 09 Feb 2016 13:36:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35782</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35782/1455024967066263</guid>
      <description>&lt;p&gt;
…like we do for &lt;code&gt;update_nag()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>35620.diff attached to Ticket #35620</title>
      
        <dc:creator>EFAREM</dc:creator>

      <pubDate>Tue, 09 Feb 2016 12:25:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35620/35620.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35620/35620.diff/1455020722868292</guid>
      <description>&lt;p&gt;
Remove the update query arg from pagination links
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35778.2.diff attached to Ticket #35778</title>
      
        <dc:creator>EFAREM</dc:creator>

      <pubDate>Tue, 09 Feb 2016 11:28:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35778/35778.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35778/35778.2.diff/1455017292156213</guid>
      <description>&lt;p&gt;
Tab :O
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35778.diff attached to Ticket #35778</title>
      
        <dc:creator>EFAREM</dc:creator>

      <pubDate>Tue, 09 Feb 2016 11:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35778/35778.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35778/35778.diff/1455017090621207</guid>
      <description>&lt;p&gt;
Updates the user info just after the user is created
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27770 (Can't save a widget that uses a namespace) updated</title>
      
        <dc:creator>EFAREM</dc:creator>

      <pubDate>Tue, 09 Feb 2016 10:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27770#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27770#comment:4/1455014276360768</guid>
      <description>&lt;p&gt;
Just tested in nightly build and it seems to work fine with and without the leading slash.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35781 (Incorrect use of PHP method compact) created</title>
      
        <dc:creator>maweder</dc:creator>

      <pubDate>Tue, 09 Feb 2016 09:11:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35781</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35781/1455009081298990</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18926" title="#18926: enhancement: Provide with the ability to monitor emailing failures (closed: fixed)"&gt;#18926&lt;/a&gt;.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$mail_error_data = compact( 'to', 'subject', 'message', $headers, $attachments );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
instead of ...
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$mail_error_data = compact( $to, $subject, $message, $headers, $attachments );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34789 (Timezone Option Terminology Improvement) updated</title>
      
        <dc:creator>andrew.p</dc:creator>

      <pubDate>Tue, 09 Feb 2016 08:13:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34789#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34789#comment:2/1455005631176982</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I also agree that the description is a bit misleading, as the dropdown contains both cities and timezone offsets.
&lt;/p&gt;
&lt;p&gt;
I attach a patch with an improved description text:
&lt;code&gt;Choose a city in the same timezone as you or a UTC timezone offset.&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34789.patch attached to Ticket #34789</title>
      
        <dc:creator>andrew.p</dc:creator>

      <pubDate>Tue, 09 Feb 2016 08:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34789/34789.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34789/34789.patch/1455005356620200</guid>
      <description>&lt;p&gt;
Small description change in the timezone options
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) updated</title>
      
        <dc:creator>michael.heuberger</dc:creator>

      <pubDate>Tue, 09 Feb 2016 06:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780#comment:5/1455000379072989</guid>
      <description>&lt;p&gt;
@voldemortensen Ummm, tell me, did you try the example at /examples/simple.html?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) updated</title>
      
        <dc:creator>michael.heuberger</dc:creator>

      <pubDate>Tue, 09 Feb 2016 06:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780#comment:4/1455000180602258</guid>
      <description>&lt;p&gt;
@voldemortensen Thanks - I want to examine that asap. It should work off the master branch. Tell me, what npm and nodejs versions were you using and can you attach the HTML file here you wrote when using videomail-client.min.js?
&lt;/p&gt;
&lt;p&gt;
Meanwhile I ll try to reproduce your problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34359 (Cache output of `wp_upload_dir()` to improve performance) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Tue, 09 Feb 2016 06:37:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34359#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34359#comment:42/1454999842051391</guid>
      <description>&lt;p&gt;
Ran tests on a box with Memcached with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34359/34359.4.patch" title="Attachment '34359.4.patch' in Ticket #34359"&gt;34359.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34359/34359.4.patch" title="Download"&gt;​&lt;/a&gt;; didn't notice issues.
&lt;/p&gt;
&lt;p&gt;
However, have this failing unit test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Tests_Post_Attachments::test_wp_get_attachment_url_should_force_https_when_administering_over_https_and_siteurl_is_https
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-https://example.org/wp-content/uploads/2016/02/test-image-1.jpg
+http://example.org/wp-content/uploads/2016/02/test-image-1.jpg
/vagrant/www/wordpress-develop/tests/phpunit/tests/post/attachments.php:467
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Tue, 09 Feb 2016 06:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780#comment:3/1454998554572978</guid>
      <description>&lt;p&gt;
I really love this idea, however I just tried building a proof of concept plugin using the git repo at master and am getting javascript errors all over the place. I'm using the basic example at the top of the README.md as a guide. Firefox 43 as my browser. Should I be working from a specific tag or branch?
&lt;/p&gt;
&lt;p&gt;
Essentially, added videomail-client.min.js to the footer, added the &lt;code&gt;var VideomailClient = require('videomail-client'),&lt;/code&gt; stuff to its own file and enqueued it after the client. Then I made a post with &lt;code&gt;&amp;lt;div id="videomail"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; with no luck.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27954,​35735 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Feb 2016 03:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27954%2C35735</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27954%2C35735/1454989543672085</guid>
      <description>duplicate: &lt;p&gt;
WordPress currently does not enforce the HTTP vs HTTPS in canonical.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27954" title="#27954: task (blessed): Add FORCE_SSL option to enable HTTPS everywhere on the site (closed: duplicate)"&gt;#27954&lt;/a&gt; and others for ways to make it happen. If it was working under 4.4/4.4.1 it wasn't intended.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) updated</title>
      
        <dc:creator>michael.heuberger</dc:creator>

      <pubDate>Tue, 09 Feb 2016 03:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780#comment:2/1454987585548474</guid>
      <description>&lt;p&gt;
@jorbin Thanks for that. Good input and questions from you. Would like to discuss more ...
&lt;/p&gt;
&lt;p&gt;
So, yes, First, I am the maintainer of videomail-client myself :) And secondly, npm does not always mean a server component. It is just a package manager for anything (which is going to render Bower obsolete I think).
&lt;/p&gt;
&lt;p&gt;
Exactly, the ability to record videos and audio would set WP apart from other CMS.
&lt;/p&gt;
&lt;p&gt;
Regarding browser incompatibilities, for iOS and IE, I'd show a file upload button instead as a fallback alternative. And for editing, I think that's a bit too far. You cannot edit a phone call or a Skype conversation. Btw, there is also the reset function in Videomail-Client so that you can re-record in case if you do not like the preview.
&lt;/p&gt;
&lt;p&gt;
I've been thinking of a Wordpress plugin too but do not know where to start. I mean, a little guidance would be great. How can i add such a new datatype as a plugin other forms can re-use?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35715 (edit_user() doesn't check for empty password (pass1).) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 09 Feb 2016 02:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35715#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35715#comment:2/1454986200024888</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35712 (urldecode for search Param in plugins.php Page) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 09 Feb 2016 02:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35712#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35712#comment:3/1454986063497041</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35714 (Typo in /wp-includes/media.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 09 Feb 2016 02:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35714#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35714#comment:2/1454985986405666</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 09 Feb 2016 02:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780#comment:1/1454985093226304</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I took a quick glance at the library. To be clear, It is a browser library, don't let the mention of npm fool you.  This looks really interesting and the idea of adding support to record videos would help set WP apart from other CMS.
&lt;/p&gt;
&lt;p&gt;
That said, I am worried about the browser matrix this library currently supports:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Firefox &amp;gt;= 34
Google Chrome &amp;gt;= 32
Microsoft Edge &amp;gt;= 12
Opera &amp;gt;= 26
Chrome for Android &amp;gt;= 39
Android Browser &amp;gt;= 37
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No support for IOS Safari, only recent Android support, and no IE support just isn't in line with where WordPress is.  While it's ok to engage in progressive enhancement, excluding over 30% of browser users  just doesn't feel right to me.
&lt;/p&gt;
&lt;p&gt;
Overall, I think that recordable video natively in WordPress is something that should be demonstrated in plugin form first.  I would also worry a bit that just recording video without editing might not work for users.  So that likely needs to be user tested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) created</title>
      
        <dc:creator>michael.heuberger</dc:creator>

      <pubDate>Tue, 09 Feb 2016 00:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780/1454977001309969</guid>
      <description>&lt;p&gt;
Hello there
&lt;/p&gt;
&lt;p&gt;
I am suggesting a new data-type 'recordable video' within Wordpress core. Do not have a clear idea what data types you currently have and how they are implemented.
&lt;/p&gt;
&lt;p&gt;
Already have raised this on slack and were recommended to raise this as a ticket instead. My goal is to make WordPress accessible for Sign Language users! They are mostly Deaf people who express their messages, comments, posts in Sign Language.
&lt;/p&gt;
&lt;p&gt;
Currently it is a pain to record a video message with a separate software, to convert, to compress and to upload it back to WordPress. That's not fair compared to those hearing people who just can type in the Form and submit that.
&lt;/p&gt;
&lt;p&gt;
There is an open source npm library to record videos, asynchronous, in plain JavaScript and HTML, see &lt;a class="ext-link" href="https://github.com/binarykitchen/videomail-client"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/binarykitchen/videomail-client&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Here is an exact example how this could work:
&lt;a class="ext-link" href="https://binarykitchen.com/contact/action/add/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://binarykitchen.com/contact/action/add/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With the videomail-client you can add a recordable &amp;lt;video&amp;gt; element linked to your webcam inside any form. Very easily.
&lt;/p&gt;
&lt;p&gt;
As a plus, it also supports audio! Like that also those who can hear, not just deaf people, could just hit the record button, say something and submit that right away. That would be awesome for everyone. Just takes few seconds to encode, depending on the length and your bandwidth. All plain JS, using the getUserMedia() API.
&lt;/p&gt;
&lt;p&gt;
I am not trying to advertise my code but to distribute it on well-known CMS, this to improve the lives of Deaf people including me (I've been hacking JS, PHP, HTML and much more for &amp;gt; 22 yrs).
&lt;/p&gt;
&lt;p&gt;
Feedback very welcome. I am very happy to submit PRs if I have your blessings and can count on your guidance where to start.
&lt;/p&gt;
&lt;p&gt;
Michael
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 08 Feb 2016 22:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:107/1454972045825594</guid>
      <description>&lt;p&gt;
Thinking about this more, I wonder if we should consider a combined approach of what we were calling &lt;a href="https://core.trac.wordpress.org/ticket/11863#comment:91"&gt;option 1 and option 3&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When a post is trashed, change post_name to &lt;code&gt;{{slug}}-%trashed%&lt;/code&gt;, and &lt;strong&gt;also&lt;/strong&gt; store the value in post meta. This lets us re-apply the original slug on untrashing from the post meta value (avoiding &lt;a href="https://core.trac.wordpress.org/ticket/11863#comment:94"&gt;the character limit&lt;/a&gt;) and also avoid changing the slug at &lt;a href="https://core.trac.wordpress.org/ticket/11863#comment:106"&gt;odd times as @boone mentioned&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35773 (_network_meta() functions could use _metadata() API) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 08 Feb 2016 20:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35773#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35773#comment:4/1454963151939261</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25344" title="#25344: enhancement: Introduce *_network_meta() functions (closed: maybelater)"&gt;#25344&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I guess one important question is: what do we gain by switching from &lt;code&gt;_network_option()&lt;/code&gt; and the filters/etc around that to &lt;code&gt;_network_meta()&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
And: would this deprecate &lt;code&gt;_network_option()&lt;/code&gt;, &lt;code&gt;_site_option()&lt;/code&gt; and their related filters, or would we need to account for those in a back-compat way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26429 (Introduce .editorconfig to WordPress) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 08 Feb 2016 20:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26429#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26429#comment:22/1454962526068285</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-fields by diddledan. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-fields/p1454962522000628"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35770 (Shortcode fails with 4.4. It is working with 4.3) updated</title>
      
        <dc:creator>dezio1900</dc:creator>

      <pubDate>Mon, 08 Feb 2016 19:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35770#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35770#comment:5/1454958202227372</guid>
      <description>&lt;p&gt;
I tried the mu-plugin, and shortcode works in admin area, as part of admin notice output.
&lt;/p&gt;
&lt;p&gt;
But it appears that issue is somewhere in filters applied to the_content.
&lt;/p&gt;
&lt;p&gt;
This is the content of the page I am using, which fails (text version) :
&lt;/p&gt;
&lt;pre class="wiki"&gt;[content]
Safety is Glacier Raft Company’s number one priority. No exceptions, no question, no ifs, ands or buts about it. Keeping you and your family safe is our primary goal, and the decisions we make each and everyday are based on the importance of keeping this true.
Prioritizing safety doesn’t mean adventure is compromised. It means you can have the best possible day of white water rafting because you never have to question if safety is as important to us as it is to you.
[content_with_image image_position="left" image_id="198" content_margin_top="0" title="EXPERIENCED GUIDES" allow_content_below_image="no"]
All of our trips are led by professionals who have years of experience working as whitewater raft guides on the Kicking Horse River. They have rafted 100s (if not 1000s of trips), and their goal is to have a safe, clean run everyday.
They each have a valid British Columbia River Outfitters Association Guide Licence, Swift Water Rescue Technician Certificate, and Wilderness First Aid Certificate.
[/content_with_image]
[content_with_image image_position="right" image_id="1137" content_margin_top="0" title="CHECKING WATER LEVELS" allow_content_below_image="no"]
We check water levels every morning, and we have strict guidelines and cutoffs that dictate our course for the day. If water levels are above a specific cutoff point, we will not raft certain sections.
This happens commonly in June on the Kicking Horse River when the water is too high for us to run the lower canyon. This doesn’t mean you’re going to experience any less of an adventure, however. High water brings the biggest rapids and biggest hits, and the middle canyon at this time has the most whitewater we’ll see at any point throughout the summer.
[/content_with_image]
[content_with_image image_position="left" image_id="1138" content_margin_top="0" title="INTRO TALKS AND SAFETY BRIEFINGS" allow_content_below_image="no"]
Our guides go through very thorough intro talks and safety briefings before you get anywhere near the water. They’ll go over how to get ready, what to expect, and what to do in the event something does happen. While flips and swims are rare, they do occur, and we want you to be as prepared as possible just in case.
Our guides provide clear instructions and demonstrations, and they have you practice various commands before you get into any whitewater.  Once you’re in the raft everyone is working together as a team, and your guide will provide you with the skills and knowledge required to achieve this.
[/content_with_image]
[content_with_image image_position="right" image_id="1139" content_margin_top="0" title="MINIMUM AGE REQUIREMENTS" allow_content_below_image="no"]
Our minimum age, height and weight restrictions were also established with safety in mind.
Who has to stay and who gets to go is always left up to the discretion of our guides.  We know it can be tough when the whole family can’t continue on together, but the guides’ decisions are always made with your best interest at heart.  If they don’t feel it’s safe for someone to carry on it’s for a very good reason.
[/content_with_image]
[/content]
[testimonial bg_image_id="1340" signature="MichelleHughson, TripAdvisor" bg_color="0,0,0,0.3"]
&amp;lt;blockquote&amp;gt;Glacier's main focus was safety by far. They were very clear and explicit about all aspects of safety but made sure that everyone felt comfortable to ensure a great time. It was my first time white water rafting and no part of it made me nervous after all the instructions were given.&amp;lt;/blockquote&amp;gt;
[/testimonial]
[content]
As required by all adventure activity providers, each guest of Glacier Raft Company will be required to read and sign a Release of Liability, Waiver of Claims and Assumption of Risks and Indemnity Agreement prior to their rafting trip.&amp;lt;span class="Apple-converted-space"&amp;gt;  &amp;lt;/span&amp;gt;To view this document, please &amp;lt;a title="Waiver" href="http://glacierraft.com/wp-content/uploads/2015/03/Waiver-GRC-GRA-2014-update-Vers.16-incl.-e-m-cnst-legal-size-final.pdf" target="_blank"&amp;gt;click here.&amp;lt;/a&amp;gt;
[/content]
&lt;/pre&gt;&lt;p&gt;
All other shortcodes works, but "content_with_image" one fail, even when I have simple return string in shortcode PHP source.
&lt;/p&gt;
&lt;p&gt;
As soon as I overwrite /wp-includes/shortcodes.php file with one from v4.3, it works. I also tried using default WP theme ( Twenty Fifteen - v1.4 ) and with all plugins disabled - same issue.
&lt;/p&gt;
&lt;p&gt;
And when I manually write something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[content_with_image image_id="100"]
Test...
[/content_with image]
&lt;/pre&gt;&lt;p&gt;
Then it works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26601 (Inappropriate content in headings on admin screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 08 Feb 2016 19:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26601#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26601#comment:81/1454958117616131</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1454958116000874"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35777 (Color contrast: the input placeholder) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 08 Feb 2016 18:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35777#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35777#comment:3/1454957392765001</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1454957390000837"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35778 (Populate Website URL profile field for the 1st user after install) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 08 Feb 2016 18:16:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35778#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35778#comment:1/1454955365144428</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 08 Feb 2016 17:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:106/1454952211673960</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:105" title="Comment 105"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;_modify_post_name_on_transition_post_status()&lt;/code&gt; runs during &lt;code&gt;transition_post_status&lt;/code&gt;, which generally only happens during an update; so in this case, the actions will be fired twice.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, this recursion did feel awkward when I was writing it. A direct db update + manual cache invalidation like you suggest would make sense to keep it more isolated.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;_modify_post_name_on_transition_post_status()&lt;/code&gt; runs during &lt;code&gt;get_sample_permalink()&lt;/code&gt;, when you wouldn't generally expect your post content to be modified.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In this case, perhaps we could do this higher in the chain of the sample permalink AJAX handler, &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/d9a5894c2e711173eaac3c2ca96b524dc2d749e3/wp-admin/includes/ajax-actions.php#L1585"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;around here&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35779 (Twenty Fourteen: float-clearing rules can break plugin output) created</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Mon, 08 Feb 2016 17:19:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35779</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35779/1454951940272990</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-content/themes/twentyfourteen/style.css?rev=35802#L750"&gt;style.css:750&lt;/a&gt; (from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25021" title="Twenty Fourteen: first pass at matching code standards achieved with ..."&gt;r25021&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24858" title="#24858: task (blessed): Twenty Fourteen (closed: fixed)"&gt;#24858&lt;/a&gt;) uses overly broad selectors, which can unintentionally target elements generated by plugins.
&lt;/p&gt;
&lt;p&gt;
For example, an element like &lt;code&gt;&amp;lt;div class="{pluginslug}-content"&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;p class="{pluginslug}-select-site"&amp;gt;&lt;/code&gt; will have empty &lt;code&gt;content&lt;/code&gt; added before/after it, and its &lt;code&gt;display&lt;/code&gt; changed to &lt;code&gt;fixed&lt;/code&gt;, which could break the layout.
&lt;/p&gt;
&lt;p&gt;
For an observable example, visit &lt;a class="ext-link" href="https://dayton.wordcamp.org/2016/schedule/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordCamp Dayton 2016's schedule&lt;/a&gt;, inspect &lt;code&gt;td.wcb-session-site-maintenance&lt;/code&gt;, and disable the following rules (which were &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta-wordcamp/p1454786740000179"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;added to work around this problem&lt;/a&gt;):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nc"&gt;.wcpt-schedule&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s2"&gt;"content"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.wcpt-schedule&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s2"&gt;"content"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.wcpt-schedule&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s2"&gt;"site"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.wcpt-schedule&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s2"&gt;"site"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Other Core themes use broad selectors like these, but they only target &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;wp-image&lt;/code&gt;, and &lt;code&gt;attachment&lt;/code&gt;, which are probably less common in plugin class names than &lt;code&gt;site&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; (although I would guess that they're still common enough to avoid using without a wp-specific prefix).
&lt;/p&gt;
&lt;p&gt;
Maybe explicitly targeting TwentyFourteen's classes (&lt;code&gt;site-content&lt;/code&gt;, &lt;code&gt;content-area&lt;/code&gt;, etc) would be a way to avoid this problem, while still maintaining backwards-compatibility?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22401 (Add information about old theme to 'theme_switched' action) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 08 Feb 2016 17:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22401#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22401#comment:14/1454951156419534</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35778 (Populate Website URL profile field for the 1st user after install) created</title>
      
        <dc:creator>eclare</dc:creator>

      <pubDate>Mon, 08 Feb 2016 16:57:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35778</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35778/1454950640824234</guid>
      <description>&lt;p&gt;
When a new WP install is made, the 1st user (admin) could have the "Website" profile field (displayed at /wp-admin/profile.php) populated with the site's URL, as this will most likely be his choice anyway. This field is likely used by some plugins (for displaying author bio etc.), so we can make this a bit easier and less likely to be left empty.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35777 (Color contrast: the input placeholder) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 08 Feb 2016 16:56:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35777#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35777#comment:2/1454950602262129</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A quick example, before and after the patch (latest Chrome):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/TvBJUz3DJN.png"&gt;&lt;img src="https://cldup.com/TvBJUz3DJN.png" alt="https://cldup.com/TvBJUz3DJN.png" crossorigin="anonymous" title="https://cldup.com/TvBJUz3DJN.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The patch doesn't touch placeholders used in Press This, they should be reviewed too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35777 (Color contrast: the input placeholder) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 08 Feb 2016 16:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35777#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35777#comment:1/1454948822596213</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
First pass.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35777.patch attached to Ticket #35777</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 08 Feb 2016 16:26:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35777/35777.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35777/35777.patch/1454948788967400</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35777 (Color contrast: the input placeholder) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 08 Feb 2016 16:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35777</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35777/1454948742397932</guid>
      <description>&lt;p&gt;
In a few places in the admin screens WordPress uses placeholder attributes for some input fields. Sooner or later the placeholder usage should be reviewed from an accessibility perspective but for now, this ticket aims to focus on a single aspect: color contrast.
&lt;/p&gt;
&lt;p&gt;
Looking back at some history, I'd agree with Helen's comment on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22689" title="#22689: defect (bug): Placeholder text is same color as actual text in Firefox (closed: fixed)"&gt;#22689&lt;/a&gt;: targeting internal browser CSS can be hard, especially in terms of maintenance. On the other hand, if WordPress is going to use placeholders, then I'd say we should make sure there's a sufficient color contrast ratio between the placeholder text and the input background.
&lt;/p&gt;
&lt;p&gt;
Worth noting the style introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22986" title="In Firefox, style placeholder text a dark gray since the browser ..."&gt;[22986]&lt;/a&gt; doesn't work any more since Firefox 19. Firefox now uses a pseudo element selector &lt;code&gt;::-moz-placeholder&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Also, the placeholder in the "toolbar" search field (appears only when logged in on the front end), was removed a few years ago in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19518" title="In toolbar, move search item to the right of the account menu and make ..."&gt;[19518]&lt;/a&gt; see ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19370" title="#19370: defect (bug): Default 'Search' input on Toolbar is off by about 6pixels on Safari (closed: fixed)"&gt;#19370&lt;/a&gt;, but both &lt;code&gt;admin-bar.css&lt;/code&gt; and &lt;code&gt;_admin.scss&lt;/code&gt; still use over qualified selectors to target it.
&lt;/p&gt;
&lt;p&gt;
About the color picker placeholder: I don't see the reason why the cursor should be centered. Also, not all browsers support text-align on input fields. Removing the centered alignment would also allow to remove the transparent color used on focus, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20936" title="Theme Customizer: Ensure that JS color controls always use real color ..."&gt;[20936]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As a best practice I'd recommend to don't try to alter native browsers controls. Placeholders are supposed to work in a certain way, they shouldn't disappear on focus. If there are concerns about user being potentially confused by placeholders, then maybe they shouldn't be used in the first place.
&lt;/p&gt;
&lt;p&gt;
Worth noting the placeholder text in the color pickers used in the Customizer doesn't fit the input field and gets cut off. Languages other than English may have longer translations too. Probably worth a separate ticket.
&lt;/p&gt;
&lt;p&gt;
Here's some of the places where placeholders are currently used:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;media modal
&lt;/li&gt;&lt;li&gt;themes search
&lt;/li&gt;&lt;li&gt;plugins search
&lt;/li&gt;&lt;li&gt;Customizer, in several places
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_search_form()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;color picker
&lt;/li&gt;&lt;li&gt;Press This
&lt;/li&gt;&lt;li&gt;file system credentials form
&lt;/li&gt;&lt;li&gt;the new wplink inline toolbar, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33301" title="#33301: task (blessed): Create and edit links inline (closed: fixed)"&gt;#33301&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35770 (Shortcode fails with 4.4. It is working with 4.3) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 08 Feb 2016 16:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35770#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35770#comment:4/1454948307052637</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35770#comment:3" title="Comment 3"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure that's related here. That was for shortcodes with unnamed attributes, like &lt;code&gt;[shotcode=xyz]&lt;/code&gt;. This one didn't have any of those.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My mistake. I misread the example shortcode &lt;code&gt;content_with_image image_position="left"&lt;/code&gt; as one lacking a space in there. Disregard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 08 Feb 2016 15:55:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:105/1454946941839902</guid>
      <description>&lt;p&gt;
Awesome. Glad to see this moving forward. The flow feels good to me.
&lt;/p&gt;
&lt;p&gt;
A couple thoughts about the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I think there's a general move away from introducing more underscore-prefixed functions. I think it's fine to prefix them &lt;code&gt;wp_&lt;/code&gt; but maybe mention in the description that it's "used internally" or something like that.
&lt;/li&gt;&lt;li&gt;Related: I think we use &lt;code&gt;@ignore&lt;/code&gt; rather than &lt;code&gt;@access private&lt;/code&gt; to make the parser ignore functions. @DrewAPicture can verify.
&lt;/li&gt;&lt;li&gt;Running &lt;code&gt;wp_update_post()&lt;/code&gt; causes update actions to be fired. &lt;code&gt;'_modify_post_name_on_transition_post_status()&lt;/code&gt; runs during &lt;code&gt;'transition_post_status'&lt;/code&gt;, which generally only happens during an update; so in this case, the actions will be fired twice. &lt;code&gt;_modify_post_name_on_transition_post_status()&lt;/code&gt; runs during &lt;code&gt;get_sample_permalink()&lt;/code&gt;, when you wouldn't generally expect your post content to be modified. In both cases, we are technically "updating" a post, but it doesn't seem semantically right somehow. Are there cases where a plugin author might be thrown off as a result of this? Is the alternative (direct database update + manual cache invalidation) liable to be just as confusing?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35770 (Shortcode fails with 4.4. It is working with 4.3) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Mon, 08 Feb 2016 15:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35770#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35770#comment:3/1454945784363173</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35770#comment:2" title="Comment 2"&gt;kraftbj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the report! Noting that this format of shortcode did fail in 4.4, but was fixed in 4.4.1 ( &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34939" title="#34939: defect (bug): Shortcode regex no longer matches [shortcode=XXX] (closed: fixed)"&gt;#34939&lt;/a&gt; , &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36098" title="Shortcodes: `=` is a reserved character in shortcode names, mark it as ..."&gt;r36098&lt;/a&gt; ).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure that's related here. That was for shortcodes with unnamed attributes, like &lt;code&gt;[shotcode=xyz]&lt;/code&gt;. This one didn't have any of those.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2016-02-08 at 16.05.48.png attached to Ticket #35776</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 08 Feb 2016 15:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35776/Screen%20Shot%202016-02-08%20at%2016.05.48.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35776/Screen%20Shot%202016-02-08%20at%2016.05.48.png/1454944090432446</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35776 (Installation pages do not have forms.css enqueued) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 08 Feb 2016 15:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35776</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35776/1454944065240840</guid>
      <description></description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 08 Feb 2016 15:02:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:104/1454943753126783</guid>
      <description>&lt;p&gt;
I lightly tested 11863.4.diff. Looking good.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create "test" draft with "test" slug
&lt;/li&gt;&lt;li&gt;Save draft
&lt;/li&gt;&lt;li&gt;Start another test draft
&lt;/li&gt;&lt;li&gt;Verify new draft shows "test" as its slug rather than test-2
&lt;/li&gt;&lt;li&gt;Publish the second draft
&lt;/li&gt;&lt;li&gt;Verify that the published post has "test" slug
&lt;/li&gt;&lt;li&gt;Edit first draft
&lt;/li&gt;&lt;li&gt;Verify slug is test-2
&lt;/li&gt;&lt;li&gt;Trash published "test" post
&lt;/li&gt;&lt;li&gt;Edit draft post
&lt;/li&gt;&lt;li&gt;Slug is now "test" instead of "test-2"
&lt;/li&gt;&lt;li&gt;Publish draft
&lt;/li&gt;&lt;li&gt;Slug remains "test"
&lt;/li&gt;&lt;li&gt;Restore trashed post
&lt;/li&gt;&lt;li&gt;The post restores directly back to published (because &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15930" title="#15930: enhancement: Make trashed posts/pages still readable (new)"&gt;#15930&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Verify the restored post is "test-2", not "test"
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35770 (Shortcode fails with 4.4. It is working with 4.3) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 08 Feb 2016 14:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35770#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35770#comment:2/1454943020812738</guid>
      <description>&lt;p&gt;
&lt;del&gt;Thanks for the report! Noting that this format of shortcode did fail in 4.4, but was fixed in 4.4.1 ( &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34939" title="#34939: defect (bug): Shortcode regex no longer matches [shortcode=XXX] (closed: fixed)"&gt;#34939&lt;/a&gt; , &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36098" title="Shortcodes: `=` is a reserved character in shortcode names, mark it as ..."&gt;r36098&lt;/a&gt; ).&lt;/del&gt;
Disregard; I misread the example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 08 Feb 2016 14:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:193</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:193/1454942398049726</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by eric. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1454942395002033"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35775 (Enhancements: add_post_thumbnail_image_size / wp_get_attachment_id) created</title>
      
        <author>torben.tschechne@…</author>

      <pubDate>Mon, 08 Feb 2016 14:14:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35775</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35775/1454940848745494</guid>
      <description>&lt;p&gt;
Hello,
I hope I am in the right place here to suggest two enhancements for WP core.
&lt;/p&gt;
&lt;p&gt;
1:
From my perspective the most used image of a post is the post-thumbnail. I use this post thumbnail quite often in different sizes - for teasers, related posts, sliders etc. From a performance perspective I always want to deliver the image in the correct dimensions. No 1600px image in a related post section where the image is 200px wide etc. I am struggling a bit because I often work on websites which have a lot of pictures in their posts. When I add a new image size its always relevant for all images which are uploaded to WP and often they are not necessary. I do not need a 200px wide image of 20 images which are used in the post - I only need it for the post-thumbnail. From that perspective I would like to have another function than add_image_size - for example: add_post_thumbnail_image_size which is only triggered when somebody selected an image as the post-thumbnail. This will save space on the servers as well.
&lt;/p&gt;
&lt;p&gt;
2:
Sometimes I have the case that I need the attachment ID of an url that has been uploaded. For example: I delevoped a plugin where an image can be chosen, the input field is a text field for a URL. In that case I need to determine the attachment ID to have access to all the necessary WP functions. In this case I built my own function that does it, but I think it will also be a function that can be helpful if it is integrated in WP.
&lt;/p&gt;
&lt;p&gt;
Looking forward to your reply.
&lt;/p&gt;
&lt;p&gt;
In order to always get the image in the correct dimensions which are
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>35774-option3.patch attached to Ticket #35774</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 08 Feb 2016 14:01:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35774/35774-option3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35774/35774-option3.patch/1454940074599606</guid>
      <description>&lt;p&gt;
separator with RTL support - &lt;code&gt;$separator = is_rtl() ? '&amp;amp;rsaquo;' : '&amp;amp;lsaquo;';&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28821 (Admin page registered with add_menu_page() allows access through wrong ...) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Mon, 08 Feb 2016 13:53:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28821#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28821#comment:8/1454939632164851</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28821#comment:7" title="Comment 7"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some plugins to test this patch with:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/admin-menu-editor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/admin-menu-editor/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/admin-menu-manager/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/admin-menu-manager/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/easy-admin-menu/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/easy-admin-menu/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From just looking at the first plugin "admin menu editor" and it's "includes/admin-menu-core.php" file … 3240 lines. I am not willing to take on that one as even searching the entry points and finding out if that plugin even qualifies for that patch would take too long.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35737 (Login page title in RTL sites) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 08 Feb 2016 13:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35737#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35737#comment:7/1454939629636187</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/35774" title="#35774: enhancement: WordPress admin &amp;lt;title&amp;gt; structure (assigned)"&gt;#35774&lt;/a&gt; - Admin pages &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; structure
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35774 (WordPress admin &lt;title&gt; structure) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 08 Feb 2016 13:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35774#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35774#comment:1/1454939565094156</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In the second option, I use a similar structure to the login pages (ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35737" title="#35737: defect (bug): Login page title in RTL sites (closed: fixed)"&gt;#35737&lt;/a&gt;), without the &lt;code&gt;WordPress&lt;/code&gt; suffix. Only when no site-title defined (multisite), we use &lt;code&gt;WordPress&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Old structure:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $admin_title == $title )
	$admin_title = sprintf( __( '%1$s &amp;amp;#8212; WordPress' ), $title );
else
	$admin_title = sprintf( __( '%1$s &amp;amp;lsaquo; %2$s &amp;amp;#8212; WordPress' ), $title, $admin_title );
&lt;/pre&gt;&lt;p&gt;
New structure:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $admin_title == $title )
	$admin_title = sprintf( '%1$s %2$s %3$s', $title, $separator, __( 'WordPress' ) );
else
	$admin_title = sprintf( '%1$s %2$s %3$s', $title, $separator, $admin_title );
&lt;/pre&gt;&lt;p&gt;
Hoping to create more consistent &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; structure across different wordpress pages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35774-option2.patch attached to Ticket #35774</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 08 Feb 2016 13:32:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35774/35774-option2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35774/35774-option2.patch/1454938369862782</guid>
      <description>&lt;p&gt;
New title structure &lt;code&gt;page-title  separator  site-name&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35774-option1.patch attached to Ticket #35774</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 08 Feb 2016 13:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35774/35774-option1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35774/35774-option1.patch/1454938266529676</guid>
      <description>&lt;p&gt;
Replace &lt;code&gt;&amp;amp;lsaquo;&lt;/code&gt; with &lt;code&gt;&amp;amp;#8212;&lt;/code&gt; and remove &lt;code&gt; &amp;amp;#8212; WordPress&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35774 (WordPress admin &lt;title&gt; structure) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 08 Feb 2016 13:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35774</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35774/1454938146919449</guid>
      <description>&lt;p&gt;
Currently the admin titles has a wired structure. Few examples:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Dashboard  ‹ Site Name — WordPress&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Posts ‹ Site Name — WordPress&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Writing Settings ‹ Site Name — WordPress&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Same structure applies for plugin setting pages.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;page-title &amp;amp;lsaquo; site-name &amp;amp;#8212; WordPress&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The problem with this structure:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why are we using &lt;code&gt;&amp;amp;lsaquo;&lt;/code&gt; character? why not &lt;code&gt;&amp;amp;rsaquo;&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;We should add RTL support for the separator.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;Site Name&lt;/code&gt; and the &lt;code&gt;WordPress&lt;/code&gt;, they look like bad combination.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Few suggestions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We need to replace the &lt;code&gt;&amp;amp;lsaquo;&lt;/code&gt; character with &lt;code&gt;&amp;amp;rsaquo;&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;We can add RTL support. See ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35737" title="#35737: defect (bug): Login page title in RTL sites (closed: fixed)"&gt;#35737&lt;/a&gt; and changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36487" title="Login: In `login_header()`, use correct separator for RTL locales.
 ..."&gt;[36487]&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;And we need to think about the combination of &lt;code&gt;WordPress&lt;/code&gt; and &lt;code&gt;Site Name&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34565 (Warning after change theme) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 08 Feb 2016 13:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34565#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34565#comment:8/1454937107639642</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sebastian.pisula. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1454937105002025"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34565 (Warning after change theme) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Mon, 08 Feb 2016 13:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34565#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34565#comment:7/1454937073749404</guid>
      <description>&lt;p&gt;
Details from Query Monitor:
&lt;/p&gt;
&lt;p&gt;
Warning: uasort(): Array was modified by the user comparison function
&lt;/p&gt;
&lt;p&gt;
Location: wp-includes/class-wp-theme.php:1322
&lt;/p&gt;
&lt;p&gt;
Call Stack:
&lt;/p&gt;
&lt;p&gt;
uasort()
WP_Theme::sort_by_name()
wp_prepare_themes_for_js()
&lt;/p&gt;
&lt;p&gt;
WordPress version: 4.5-alpha-36504
&lt;/p&gt;
&lt;p&gt;
Url: &lt;a class="ext-link" href="http://localhost/wordpress/wp-admin/themes.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost/wordpress/wp-admin/themes.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
PHP Version 5.5.9
&lt;/p&gt;
&lt;p&gt;
Windows 10 (Windows NT SPISULA 6.2 build 9200 (Windows 8 Home Premium Edition) i586)
&lt;/p&gt;
&lt;p&gt;
Active theme: Divi Child (Child of Divi)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7756 (AJAX saving method instead of reloading the page) updated</title>
      
        <dc:creator>dantewaters</dc:creator>

      <pubDate>Mon, 08 Feb 2016 11:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7756#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7756#comment:21/1454930092074362</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/7756#comment:3" title="Comment 3"&gt;DD32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On the other hand, Seeing the page reload upon save tells some users that it -has- saved, those who do not trust javascriptyness... (which should be few i admit)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yea there should be a indicator that tells the user it has been saved (one that's quite clear).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35773 (_network_meta() functions could use _metadata() API) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Mon, 08 Feb 2016 07:16:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35773#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35773#comment:3/1454915791605011</guid>
      <description>&lt;p&gt;
Related to Network Settings API: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15691" title="#15691: feature request: Network admin should have its own settings API (new)"&gt;#15691&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Worth also noting that this would work great with the meta support we have in Fields API when it comes to that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35773 (_network_meta() functions could use _metadata() API) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 08 Feb 2016 05:46:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35773#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35773#comment:2/1454910389121811</guid>
      <description>&lt;p&gt;
The neat thing about codifying this approach, is we can start thinking about "network options" like the metadata that it is instead of by the screens &amp;amp; hard-coded settings with which that data is funneled through.
&lt;/p&gt;
&lt;p&gt;
A few less obvious wins:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ability to register network meta, and use the sanitization &amp;amp; capability checks that come with &lt;code&gt;register_meta()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Mirror &lt;code&gt;get_post_custom()&lt;/code&gt; and have 1 function get "all meta" similar to the &lt;code&gt;alloptions&lt;/code&gt; cache
&lt;/li&gt;&lt;li&gt;We get metadata API caching for free, which is pretty neat to see in action with network meta
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And maybe other caveats:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The settings API is not currently used in the Network Admin. Can we use these new functions with a network settings API?
&lt;/li&gt;&lt;li&gt;So many wrappers. Is this worth added confusion of which to use when and why?
&lt;/li&gt;&lt;li&gt;This matters more for multi-network than multi-site. Is this better handled in a plugin?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35773 (_network_meta() functions could use _metadata() API) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Mon, 08 Feb 2016 05:36:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35773#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35773#comment:1/1454909810652100</guid>
      <description>&lt;p&gt;
+1, especially using the 'site' meta type!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35773.1.patch attached to Ticket #35773</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 08 Feb 2016 05:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35773/35773.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35773/35773.1.patch/1454909587905763</guid>
      <description>&lt;p&gt;
What &lt;code&gt;_network_meta()&lt;/code&gt; functions would look like today
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35773 (_network_meta() functions could use _metadata() API) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 08 Feb 2016 05:30:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35773</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35773/1454909405842273</guid>
      <description>&lt;p&gt;
The &lt;code&gt;wp_sitemeta&lt;/code&gt; database table matches exactly the format expected by the Metadata API. It could use it out of the box, but a bunch of bespoke surrounding code would need updating:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;alloptions&lt;/code&gt; cache keys would need tests
&lt;/li&gt;&lt;li&gt;Filter names would need to be carried over or deprecated
&lt;/li&gt;&lt;li&gt;Network ID fallbacks would need revisiting (sometimes primary ID is guessed)
&lt;/li&gt;&lt;li&gt;Transients, if we tried integrating them, would need... probably a lot
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm attaching a basic &amp;amp; obvious first pass at how easy this could be, if it weren't for all the legacy stuff. This is a big-huge task that might not be worth exploring much more, but I figured I'd get some discussion going to start.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 08 Feb 2016 05:23:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:103/1454909036153033</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 08 Feb 2016 05:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:102/1454908941506594</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/11863/11863.4.diff" title="Attachment '11863.4.diff' in Ticket #11863"&gt;attachment:11863.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/11863/11863.4.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a new function &lt;code&gt;_add_suffix_to_post_name_for_trashed_posts()&lt;/code&gt; that will add a suffix to the trashed posts' slugs that match a given slug, while noting their "desired" slug in post meta.
&lt;/li&gt;&lt;li&gt;Invoke &lt;code&gt;_add_suffix_to_post_name_for_trashed_posts()&lt;/code&gt; when a post is modified/created via &lt;code&gt;wp_insert_post()&lt;/code&gt; as well as in &lt;code&gt;get_sample_permalink()&lt;/code&gt; because that's where slug uniqueness is calculated after the user enters a title on Edit Post.
&lt;/li&gt;&lt;li&gt;When a post is untrashed, reassign its "desired" slug.
&lt;/li&gt;&lt;li&gt;Unit tests.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11863.4.diff attached to Ticket #11863</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 08 Feb 2016 05:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11863/11863.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11863/11863.4.diff/1454908487499739</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>template.patch attached to Ticket #35772</title>
      
        <dc:creator>aidanlane</dc:creator>

      <pubDate>Mon, 08 Feb 2016 04:47:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35772/template.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35772/template.patch/1454906822264892</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35772 (add_settings_section and add_settings_field callback param should be ...) created</title>
      
        <dc:creator>aidanlane</dc:creator>

      <pubDate>Mon, 08 Feb 2016 04:45:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35772</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35772/1454906721482327</guid>
      <description>&lt;p&gt;
Currently the type is &lt;code&gt;string&lt;/code&gt;, which is inaccurate and will be flagged as such by tools such as Scrutinizer (&lt;a class="ext-link" href="https://scrutinizer-ci.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://scrutinizer-ci.com/&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_settings_section&lt;/code&gt;:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/template.php#L1191"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/template.php#L1191&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_settings_field&lt;/code&gt;:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/template.php#L1229"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/template.php#L1229&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;callable&lt;/code&gt; is the type is used by &lt;code&gt;add_action&lt;/code&gt; (&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/add_action/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/add_action/&lt;/a&gt;), &lt;code&gt;add_filter&lt;/code&gt; (&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/add_filter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/add_filter&lt;/a&gt;` and by many other functions already &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34032" title="#34032: defect (bug): callback is not a valid parameter type (closed: fixed)"&gt;34032&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Refs:
&lt;a class="ext-link" href="http://uk1.php.net/manual/en/language.types.callable.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://uk1.php.net/manual/en/language.types.callable.php&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md#keyword"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md#keyword&lt;/a&gt;
&lt;a class="ext-link" href="http://www.phpdoc.org/docs/latest/guides/types.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.phpdoc.org/docs/latest/guides/types.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32678 (Audit toolbar links and content) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 08 Feb 2016 04:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32678#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32678#comment:106/1454904089169780</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1454904087002016"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>