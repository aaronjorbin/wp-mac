<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #2515 (Select page to show as the front page) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Sun, 16 Apr 2006 23:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2515</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2515/1145231089000000</guid>
      <description>&lt;p&gt;
Canonical URL schemes suffer here because siteurl and the static page's natural permalink are different URLs for the same resource.
&lt;/p&gt;
&lt;p&gt;
wp_list_pages() also suffers because it includes a link to the home page but with a different URL.
&lt;/p&gt;
&lt;p&gt;
I use the following filter to modify this behavior. If it seems like correct behavior, it can be rolled into get_page_link().
&lt;/p&gt;
&lt;pre class="wiki"&gt;function front_page_link($link, $id) {
	global $wp_query;
	if ( 'page' == get_option('show_on_front') &amp;amp;&amp;amp; $id == get_option('page_on_front') )
		return get_settings('home');
	return $link;
}
add_filter('page_link', 'front_page_link', 10, 2);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2663 (RSS feed invalid) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Sun, 16 Apr 2006 23:24:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2663</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2663/1145229857000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://photomatt.net/2006/04/15/feed-validator/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://photomatt.net/2006/04/15/feed-validator/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2663 (RSS feed invalid) created</title>
      
        <dc:creator>infocynic</dc:creator>

      <pubDate>Sun, 16 Apr 2006 23:02:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2663</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2663/1145228553000000</guid>
      <description>&lt;p&gt;
Reference &lt;a class="ext-link" href="http://wordpress.org/support/topic/67963"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/67963&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The RSS feed is invalid because the tag
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;wfw:commentRSS&amp;gt;
&lt;/pre&gt;&lt;p&gt;
is invalid and should be
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;wfw:commentRss&amp;gt;
&lt;/pre&gt;&lt;p&gt;
An edit to line 50 of wp-rss2.php fixes the problem nicely.
&lt;/p&gt;
&lt;p&gt;
I've marked this as major since some readers will not accept any invalid feed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>image-inputs.diff attached to Ticket #2662</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Sun, 16 Apr 2006 19:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2662/image-inputs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2662/image-inputs.diff/1145214641000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2662 (TinyMCE image dialog inputs too small) created</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Sun, 16 Apr 2006 19:10:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2662</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2662/1145214631000000</guid>
      <description>&lt;p&gt;
Limited to 3 chars. Some need 4.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #1038 (Limit access to php files) updated</title>
      
        <dc:creator>szepter</dc:creator>

      <pubDate>Sun, 16 Apr 2006 14:07:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1038</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1038/1145196429000000</guid>
      <description>&lt;p&gt;
&lt;em&gt;On many hosts, the include files could then be easily moved outside of webspace altogether, along with the database passwords from wp-config.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Most hosting providers don't allow accessing files or writing to files outside of the docroot, which is the "webspace" in most cases.
&lt;/p&gt;
&lt;p&gt;
Altogether I would say these nice security advice to WP users would make things more complicated ("You should place files there or there and modify the paths there and there ... otherwise things can go wrong ..." and so on ...). Well, these advice are really nice, but not for users who are new to WP.
&lt;/p&gt;
&lt;p&gt;
If Apache stops parsing PHP files under some improbable circumstance, these files wouldn't be executed, the code is served raw, nothing can happen, except that you can read the source code, but that's something you can do much easier by downloading the latest WP version from the website.
&lt;/p&gt;
&lt;p&gt;
I think it's no use overloading code for providing a non-trivial protection system that only works under Apache or under specific circumstances.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2661 (kses version 0.2.2) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 16 Apr 2006 08:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2661</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2661/1145176570000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>2661.diff attached to Ticket #2661</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 16 Apr 2006 08:35:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2661/2661.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2661/2661.diff/1145176553000000</guid>
      <description>&lt;p&gt;
Patch for kses.php to update to 0.2.2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2661 (kses version 0.2.2) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 16 Apr 2006 08:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2661</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2661/1145176524000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looking at the changes between kses 0.2.1 and 0.2.2 the wordpress included version is already half way there.
&lt;/p&gt;
&lt;p&gt;
The attached patch updates kses to true 0.2.2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #901 (apply_filters's handling of extra arguments is broken) reopened</title>
      
        <dc:creator>angsuman</dc:creator>

      <pubDate>Sun, 16 Apr 2006 02:32:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/901/1145154738000000</guid>
      <description>&lt;p&gt;
While using this functionality I realized something strange. To get an extra argument (say for 'bloginfo' filter) I have to specify not 2 but actually 4 in add_filter. The returned data are:
first argument, filter name, first argument, second argument
&lt;/p&gt;
&lt;p&gt;
BTW: One place where this function is needed is for writing 'bloginfo' filter. It passes two arguments - value and key.
&lt;/p&gt;
&lt;p&gt;
So when I add_filter I have to write:
add_filter('bloginfo', 'my_filter',10, 4 );
&lt;/p&gt;
&lt;p&gt;
And then I access the second argument as:
function remove_css($first_argument,$dummy,$dummy,$second_argument)
&lt;/p&gt;
&lt;p&gt;
I haven't tried for more than 2 arguments but I suspect it will be equally funky.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #2656 (options.php mangles options with apostrophes in the value) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 16 Apr 2006 01:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2656</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2656/1145149590000000</guid>
      <description>&lt;p&gt;
I like that option.  I'll take care of it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1329 (Support for summer time / DST) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Sun, 16 Apr 2006 00:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1329/1145148629000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;User A in Toronto will see the post being posted at 9:00:00 and User B in Brussels will see the post being posted at 15:00:00. The time remains the same, however ever users offset is applied.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This is wrong on many levels. First off, even if this was possible, archives display would be inconsistant. At DST time, the blog would report a post as posted at a different time than it would report at a non-DST time. Second, there is no way for us to find the timezone of any viewer without javascript, which should surely not be an option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1329 (Support for summer time / DST) updated</title>
      
        <dc:creator>J2000_ca</dc:creator>

      <pubDate>Sun, 16 Apr 2006 00:45:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1329/1145148314000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1329 (Support for summer time / DST) updated</title>
      
        <dc:creator>J2000_ca</dc:creator>

      <pubDate>Sun, 16 Apr 2006 00:42:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1329/1145148158000000</guid>
      <description>&lt;p&gt;
No you would need to check against the users/blog offset. Posts should not have unique offsets. If a post is posted 14:00:00 GMT, User A in Toronto will see the post being posted at 9:00:00 and User B in Brussels will see the post being posted at 15:00:00. The time remains the same, however ever users offset is applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2661 (kses version 0.2.2) updated</title>
      
        <dc:creator>Munnday</dc:creator>

      <pubDate>Sat, 15 Apr 2006 11:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2661</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2661/1145099673000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://sourceforge.net/forum/forum.php?forum_id=443247"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://sourceforge.net/forum/forum.php?forum_id=443247&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2661 (kses version 0.2.2) created</title>
      
        <dc:creator>Munnday</dc:creator>

      <pubDate>Sat, 15 Apr 2006 11:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2661</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2661/1145099609000000</guid>
      <description>&lt;p&gt;
There is an updated version to "kses" - version 0.2.2 (WP uses 0.2.1) - a minor update i guess, but maybe worth adding into the core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2582 (Full text feed problem when using &lt;!--more--&gt; tag) updated</title>
      
        <dc:creator>tinyau</dc:creator>

      <pubDate>Sat, 15 Apr 2006 08:14:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2582</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2582/1145088876000000</guid>
      <description>&lt;p&gt;
In addition, I have to emphasis that the behavior in WordPress 1.5.x and 2.0.x is the same.  It is changed in WordPress 2.1 Alpha.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2656 (options.php mangles options with apostrophes in the value) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Sat, 15 Apr 2006 06:33:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2656</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2656/1145082835000000</guid>
      <description>&lt;p&gt;
Nope. I tried that. It escapes both types of quotes, ruining almost every serialized array. Alternatively, wp_specialchars could be modified to accept 'single' as an argument and convert only single quotes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2582 (Full text feed problem when using &lt;!--more--&gt; tag) updated</title>
      
        <dc:creator>tinyau</dc:creator>

      <pubDate>Sat, 15 Apr 2006 06:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2582</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2582/1145082424000000</guid>
      <description>&lt;p&gt;
I don't think the feed is exactly the machine-readable version of front page.  Feed is the syndication of the article and I think it should be no relationship between feed and '&amp;lt;!--more--&amp;gt;' tag.  I think '&amp;lt;!--more--&amp;gt;' tag is just a way to control the presentation of the articles in the front page.  'Full text' feed should mean to display the whole content of the article and if not, why it was called 'Full text' feed?
&lt;/p&gt;
&lt;p&gt;
@ryan, even 2.1 behavior is reverted back to the way as 1.5.  If it is stated clearly in the release notes, it should be no problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [3708]: Make sure permalinks for draft pages use query string style since the ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 15 Apr 2006 00:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3708</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3708/1145062780521500</guid>
      <description>&lt;p&gt;
Make sure permalinks for draft pages use query string style since the slug might not be set yet.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2656 (options.php mangles options with apostrophes in the value) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 15 Apr 2006 00:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2656</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2656/1145061082000000</guid>
      <description>&lt;p&gt;
Can we do this?
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_specialchars($option-&amp;gt;option_value, true);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>