<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #42971 (Page editor (TinyMCE) strips preformatted code entered inside ...) created</title>
      
        <dc:creator>Sakis</dc:creator>

      <pubDate>Sat, 23 Dec 2017 23:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42971/1514073423684844</guid>
      <description>&lt;p&gt;
Edit some page or post
Switch editor to text
Enter the following snippet
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;pre&amp;gt;
&amp;lt;code&amp;gt;
/* Just for testing purposes */
#include &amp;lt;stdio.h&amp;gt;
main()
{
    printf("Hello World");
}
&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Save, publish or switch to visual
Voila, "&amp;lt;stdio.h&amp;gt;" part is stripped out from both visual editor and page when rendered.
&lt;/p&gt;
&lt;p&gt;
PS: Tested with clean installed WP, no plugins or third party themes, with Chrome, Edge and Safari browsers in Win10 and MacOS X
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 23 Dec 2017 23:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:12/1514072869799028</guid>
      <description>&lt;p&gt;
&lt;em&gt;Unrelated aside:&lt;/em&gt; The &lt;code&gt;wordpress-bdd.com&lt;/code&gt; domain name violates &lt;a class="ext-link" href="https://wordpressfoundation.org/trademark-policy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the WordPress trademark policy&lt;/a&gt;. You may want to change it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 23 Dec 2017 23:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:11/1514072758125144</guid>
      <description>invalid: &lt;p&gt;
The points made above by knutsp and Clorith are correct.
&lt;/p&gt;
&lt;p&gt;
The old address is unconnected to the process of changing the admin email address. It is literally not used (apart from a courtesy notification to the old address &lt;em&gt;after&lt;/em&gt; the confirmation link is clicked).
&lt;/p&gt;
&lt;p&gt;
The confirmation email doesn't get sent from the old address. If it does in your case, then something on your site has been configured to do so, for example a plugin or theme on your site. I suspect your site has an SMTP plugin in place which is configured to send emails from the existing admin email address. If that's the case, then you ought to reconfigure it to send it from an address which is capable of sending emails, otherwise it serves no purpose anyway.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>NathanAtmoz</dc:creator>

      <pubDate>Sat, 23 Dec 2017 23:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:10/1514072723099788</guid>
      <description>&lt;p&gt;
The changes in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39118" title="#39118: enhancement: Verify change of single site admin email address before it changes (closed: fixed)"&gt;#39118&lt;/a&gt; are beneficial to the majority of use cases and I don't think they should be reverted.
&lt;/p&gt;
&lt;p&gt;
In the case that you're a sys admin, and you want to changed the site email, and outgoing email is not available, and you're unable to query the database to update the administrator password field, then you can add the following as a must-use plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'load-options-general.php', function() {
  $new_admin_details = get_option( 'adminhash' );
  if( is_array( $new_admin_details) &amp;amp;&amp;amp; ! empty( $new_admin_details ) ) {
    update_option( 'admin_email', $new_admin_details[ 'newemail' ] );
    delete_option( 'adminhash' );
    delete_option( 'new_admin_email' );
    $redirect = 'options-general.php?updated=true';
    wp_redirect( admin_url( $redirect ) );
  }
});
&lt;/pre&gt;&lt;p&gt;
Then you'll be able to change the email addresses on the Options General page without email confirmation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42970 (Add a 'rest_nonce_action' filter to the REST API) created</title>
      
        <dc:creator>enlightenedpie</dc:creator>

      <pubDate>Sat, 23 Dec 2017 23:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42970/1514071331227622</guid>
      <description>&lt;p&gt;
In the spirit of fully customizing the REST API, as I'm doing in my current application, some features (like the REST prefix) are customizable through filters, while the nonce name, or rather the rest nonce 'action', is not. 'wp_rest' is a bit generic and could easily have a 'rest_nonce_name' or 'rest_nonce_action' filter added in wp-includes/rest-api.php.
&lt;/p&gt;
&lt;p&gt;
I believe in this regard that allowing alignment with user-defined namespaces and naming conventions would really further the extensibility of the WP REST API, especially in cases where pretty much every default (including default endpoints) are being disabled or overridden/overwritten. Thoughts?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>johndeebdd</dc:creator>

      <pubDate>Sat, 23 Dec 2017 16:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:9/1514044995881963</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here's the current flow:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User is registered with the email address &lt;code&gt;username@hotmail.com&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;User goes into their profile page in the WordPress admin
&lt;/li&gt;&lt;li&gt;User edits the &lt;em&gt;email&lt;/em&gt; field and changes it to &lt;code&gt;username@gmail.com&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;WordPress sends an email to &lt;strong&gt;&lt;code&gt;username@gmail.com&lt;/code&gt;&lt;/strong&gt; with a link to click to confirm the address change
&lt;/li&gt;&lt;li&gt;User clicks the link in the email to change their address
&lt;/li&gt;&lt;li&gt;WordPress sends an email to &lt;code&gt;username@hotmail.com&lt;/code&gt; with information that the address has now been changed to &lt;code&gt;username@gmail.com&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
No access to the old address is required, it is merely included in the flow as a courtesy (and security precaution, in case of a malicious change the user is now made aware of that change) to inform of an already completed change.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Honestly, for the vast majority of users, this behavior isn't a problem (and for many, probably expected as most services you encounter these days require email verification on edits), as such I would say this is a &lt;code&gt;wontfix&lt;/code&gt; issue, as the behavior can be controlled via filters and actions for those unhappy with the implementation, but will leave it open for final input by the implementing deveoper.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;send_email_change_email&lt;/code&gt; filter will allow you to prevent sending the email, and also provides you with the data the user supplied, this can be used to override things and store the new email straight away.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're looking at it from the point of view of a shared hosting user. You're not looking at it from the point of view of a sys admin who has to install WordPress themselves. How can WordPress SEND an email if you don't have access to the OLD email? What if the OLD email was setup as "dummy@…"? You don't need external SMTP to install WordPress, but as of now, you do infact need it to CHANGE the email. So you can install it fine, just not change it [yet you can run arbitrary code]. That's weird - and new, and a unique case in WordPress.
&lt;/p&gt;
&lt;p&gt;
Here is how WordPress is setup:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress receives an HTTP request and is activated without wp-config and goes into install mode.
&lt;/li&gt;&lt;li&gt;DB creds are entered, and the system asks the admin for an email WHICH IS NOT CONFIRMED, JUST ACCEPTED. I think this is the misunderstanding. You DO NOT need to confirm the initial admin email, and this is absolutely by design. i.e. localhost installs, single page apps. There are MANY uses of WordPress besides blogging on a shared host with email setup. I was brought here because this cause a problem in one of my apps.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The CHANGE:
Previously, admins could change the site email without a confirmation. For instance, they STILL can create users without email confirmation. The change is that they cannot change the site email. This is absolutely different from other emails, and doesn't make sense. It was made by someone who doesn't understand that on single sites, there is no "super admin", just "admin" who is the penultimate. The change assumes there is someone besides the "admin" who could control outgoing SMTP, this isn't the case.
&lt;/p&gt;
&lt;p&gt;
Questions:
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
What is the benefit to create this new restriction?
Do you understand this is a NEW thing, that previously an admin could operate WordPress without restriction, and now this additional restriction has been made?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Do you understand this creates a new class of settings. This is the ONLY setting in WordPress which has this characteristic:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
-This setting cannot be changed by the logged in user with capabilities to in fact change it
-This same user [a logged in single site admin] CAN run arbitrary code
-This same user CAN still actually affect to change the setting, they just need to know PHP - this is a SERIOUS security flaw. A co-admin might assume another admin couldn't change the site email, since he can't. But the co-admin would be wrong! This is the only example of this in the system.
-This setting requires external send SMTP to be changed by a logged in admin
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
Do you understand this is a CHANGE, that previously no setting existed with the characteristic?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Do you understand that if you install WordPress without external SMTP, you can never change the admin email within WordPress [but not really, because you can run arbitrary code]?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42941 (Improve options.php error "options page not found") updated</title>
      
        <dc:creator>williampatton</dc:creator>

      <pubDate>Sat, 23 Dec 2017 15:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42941#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42941#comment:2/1514043541587175</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This seems like a welcome change to me. It's only a small modification that adds some useful information for people who stumble across this error while developing their options pages.
&lt;/p&gt;
&lt;p&gt;
Changed from &lt;code&gt;defect&lt;/code&gt; to &lt;code&gt;enhancement&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>johndeebdd</dc:creator>

      <pubDate>Sat, 23 Dec 2017 15:23:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:8/1514042600267906</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42967#comment:4" title="Comment 4"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why would anyone bother change the email address if the server can't send emails? In such case any stored email address, for the site or for users, are completely unusable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Knutsp, there are MANY use cases for using WordPress without having external email capability! Single page web apps, apps behind firewalls, API projects etc. Both SMTP and FTP are sperate services from WordPress, and you should be able to opperate without either. [In fact you CAN opperate without either, except for this ONE SINGLE SETTING, which is the issue].
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Sat, 23 Dec 2017 13:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:7/1514037080653399</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42967#comment:5" title="Comment 5"&gt;mark-k&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@knutsp even if emails can be sent, the admin might have created a user for a "guest" author
without knowing the email, or have done a mistake while entering it. Now the user can not change &amp;gt; it, which is not optimal.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
He can, as long as the new one is correct.
&lt;/p&gt;
&lt;p&gt;
If not, the change will be pending and the user may retry.
&lt;/p&gt;
&lt;p&gt;
With this implemented change the site email gets the same treatment as for users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39766 (Plugin does not gracefully fail when editing active plugin causes ...) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 23 Dec 2017 12:18:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39766#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39766#comment:30/1514031501077909</guid>
      <description>&lt;p&gt;
Please do create a new topic on our &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; if you are having issues, this is likely caused by a plugin or theme conflict though which we'll be able to help you troubleshoot there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 23 Dec 2017 12:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:6/1514031273676817</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@mark-k You do not need access to the old email address to change anything, you need access to the &lt;strong&gt;new&lt;/strong&gt; address, which is where the confirmation email is sent from WordPress.
&lt;/p&gt;
&lt;p&gt;
Here's the current flow:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User is registered with the email address &lt;code&gt;username@hotmail.com&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;User goes into their profile page in the WordPress admin
&lt;/li&gt;&lt;li&gt;User edits the &lt;em&gt;email&lt;/em&gt; field and changes it to &lt;code&gt;username@gmail.com&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;WordPress sends an email to &lt;strong&gt;&lt;code&gt;username@gmail.com&lt;/code&gt;&lt;/strong&gt; with a link to click to confirm the address change
&lt;/li&gt;&lt;li&gt;User clicks the link in the email to change their address
&lt;/li&gt;&lt;li&gt;WordPress sends an email to &lt;code&gt;username@hotmail.com&lt;/code&gt; with information that the address has now been changed to &lt;code&gt;username@gmail.com&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
No access to the old address is required, it is merely included in the flow as a courtesy (and security precaution, in case of a malicious change the user is now made aware of that change) to inform of an already completed change.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Honestly, for the vast majority of users, this behavior isn't a problem (and for many, probably expected as most services you encounter these days require email verification on edits), as such I would say this is a &lt;code&gt;wontfix&lt;/code&gt; issue, as the behavior can be controlled via filters and actions for those unhappy with the implementation, but will leave it open for final input by the implementing deveoper.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;send_email_change_email&lt;/code&gt; filter will allow you to prevent sending the email, and also provides you with the data the user supplied, this can be used to override things and store the new email straight away.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39766 (Plugin does not gracefully fail when editing active plugin causes ...) updated</title>
      
        <dc:creator>Ste_95</dc:creator>

      <pubDate>Sat, 23 Dec 2017 07:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39766#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39766#comment:29/1514013565006597</guid>
      <description>&lt;p&gt;
I'm not sure reopening this is the correct policy, but I believe the implemented fix causes more issues. More often than not, it happens that I cannot edit a file on a customer's site, getting the following error:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i65.tinypic.com/eug8qu.png"&gt;&lt;img src="http://i65.tinypic.com/eug8qu.png" alt="http://i65.tinypic.com/eug8qu.png" crossorigin="anonymous" title="http://i65.tinypic.com/eug8qu.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This has happened more than once, on apparently unrelated websites.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 23 Dec 2017 07:06:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:5/1514012811643587</guid>
      <description>&lt;p&gt;
@knutsp even if emails can be sent, the admin might have created a user for a "guest" author without knowing the email, or have done a mistake while entering it. Now the user can not change it, which is not optimal.
At least in that case he can contact the admin, but what happens if some previous admin have create a new admin acount and went for a 3 months sabatical? How will the new admin correct his faulty email address?
&lt;/p&gt;
&lt;p&gt;
It is not great from security POV, but admin users should probably be able to change their own email address without verification. (as said above, they probably can do the change directly in the DB, but why to force people to do such things?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Sat, 23 Dec 2017 04:06:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:4/1514001989709481</guid>
      <description>&lt;p&gt;
Why would anyone bother change the email address if the server can't send emails? In such case any stored email address, for the site or for users, are completely unusable.
&lt;/p&gt;
&lt;p&gt;
A confirmation is sent to the new address, as a kind of sanitation of the email address. The old address is not involved in this process. If the confirmation cannot be received by the admin there is no point in committing the change.
&lt;/p&gt;
&lt;p&gt;
A lot of applications use some extra, or repeated, credentials to change certain settings. All changes of all email addresses in any system should be confirmed by proving you can receive a message by it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>johndeebdd</dc:creator>

      <pubDate>Sat, 23 Dec 2017 01:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:3/1513992349982748</guid>
      <description>&lt;p&gt;
Thank you Clorith. I don't think I'm making myself clear. This is an issue for sysadmins, not shared hosting customers. I'll summarize:
&lt;/p&gt;
&lt;p&gt;
This is a NEW feature, nothing to do with how emails work. The new feature is that as of 4.9, when you change the admin email in a single site, you must confirm the email before the change takes place, like when a new user registers. But this new action restriction is placed on a LOGGED IN ADMIN.
&lt;/p&gt;
&lt;p&gt;
The stated purpose of this new feature, as per the announcement, is "The intention is to make it more difficult for an attacker to take over a user account or a site by changing the email address associated with the user or the site, and also to reduce the chance of a mistaken or erroneous change causing you to get locked out."
&lt;/p&gt;
&lt;p&gt;
The author of this feature thought he was confirming if the recipient email is valid. That's only half true. It's also inadvertently testing if the server can SEND emails. I don't think that was considered. In other words, for the admin to do this action, he has to be logged in via the normal WordPress auth cookie AND the server has to successfully connect to outgoing SMTP. This is the absolute only setting in WordPress that requires the system to also have credentials to an outside service not listed in the wp-config.php file. SMTP is, by definition, an outside service, and admin actions shouldn't be restricted in a new way like this. Additionally, it doens't actually provide the protection it thinks it does, since a logged in admin can run arbitrary code and alter the site email anyway.
&lt;/p&gt;
&lt;p&gt;
Also note that many applications use WordPress without having access to outgoing mail. Now they cannot change the admin email of the site.
&lt;/p&gt;
&lt;p&gt;
It seems the initial desire was to improve security. It doesn't do that, but it DOES create new restrictions on how WordPress can be installed and used. Previously, an admin could change the site's email. Now the admin must have outgoing SMTP access to do this, and that access is controlled outside of WordPress, but WordPress still relies on it. All the while still allowing this logged in user to run arbitrary code and defeat the new restriction in any case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #42832,​42955 batch updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 23 Dec 2017 00:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42832%2C42955</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42832%2C42955/1513990482688061</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/42832" title="#42832: enhancement: Improve JS Documentation: /js/media/views/attachments.js (reopened)"&gt;#42832&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Thanks @ireneyoast &amp;amp; @atimmer +1
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #42966 (bug in docs) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 23 Dec 2017 00:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42966#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42966#comment:2/1513989481277970</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just give the &lt;a class="ext-link" href="https://make.wordpress.org/docs/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Docs team&lt;/a&gt; a heads up and they'll sort issues like this :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 23 Dec 2017 00:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:2/1513988726859060</guid>
      <description>&lt;p&gt;
Hi there, and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
I'd like to address your concerns here, as I think some of them may be a misunderstanding of how WordPress handles the email process.
&lt;/p&gt;
&lt;p&gt;
Note that I'll skip many sections, because the answers to many of them are all covered in the first response.
&lt;/p&gt;
&lt;p&gt;
The most notable point you make is that WordPress needs access to your emails to do anything, which is incorrect.
&lt;/p&gt;
&lt;p&gt;
WordPress doesn't access your email to send anything, it is sent by the server your website is hosted on, and the sender will be automatically set as &lt;code&gt;wordpress@&amp;lt;your-domain.tld&amp;gt;&lt;/code&gt;, unless a plugin is set to modify this.
&lt;/p&gt;
&lt;p&gt;
You don't need to set up anything for emails to be sent inside WordPress it self. For some users, they will have set up a plugin that passes emails through an external SMTP server, this is then a deliberate choice and the user setting this up should be able to change the settings within that plugins interface if it should no longer be correct.
&lt;/p&gt;
&lt;p&gt;
You are right that if your site can't send emails, it becomes problematic to do these changes, but if that's the case one should contact their host as it would also prevent other legitimate functionality such as password recoveries.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is the only instance where a single site addresses the admin with the pronoun "we". When I saw this, my jaw dropped. Who is the "we" that is going to email me? Is someone else gathering emails from my privately hosted site? The pronoun "we" should not be used here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This part can understandably be confusing in some scenarios, I would suggest creating a separate ticket to look at finding better wording for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) updated</title>
      
        <dc:creator>fierevere</dc:creator>

      <pubDate>Fri, 22 Dec 2017 23:44:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967#comment:1/1513986268680589</guid>
      <description>&lt;p&gt;
You still can directly edit things in mysql tables, in case of real emergency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42968 (Media: Grid View: new upload, file is in the wrong position in the ...) updated</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Fri, 22 Dec 2017 20:07:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42968#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42968#comment:1/1513973278342594</guid>
      <description>&lt;p&gt;
Tested and confirmed that pending uploads in the Media Library appear in the 2nd to last position during upload instead of the top left position as expected. I also found that if you upload multiple images, they appear as duplicates until the entire set has completed uploading.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Video:&lt;/strong&gt; &lt;a class="ext-link" href="https://cloudup.com/cGXks9Ojbuj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;1m58s&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/42968/Screen%20Shot%202017-12-22%20at%20Fri%20Dec%2022%201.04.17%20PM.png"&gt;&lt;img width="100%" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/42968/Screen%20Shot%202017-12-22%20at%20Fri%20Dec%2022%201.04.17%20PM.png" /&gt;&lt;/a&gt;
&lt;sup&gt;Seen at /wp-admin/upload.php using WordPress 4.9.1, Safari 11.0.1, macOS 10.13.2.&lt;/sup&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2017-12-22 at Fri Dec 22 1.04.17 PM.png attached to Ticket #42968</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Fri, 22 Dec 2017 20:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42968/Screen%20Shot%202017-12-22%20at%20Fri%20Dec%2022%201.04.17%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42968/Screen%20Shot%202017-12-22%20at%20Fri%20Dec%2022%201.04.17%20PM.png/1513973224167660</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42605 (category_description() does not work properly since 4.9) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 22 Dec 2017 19:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42605#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42605#comment:20/1513972728642074</guid>
      <description>&lt;p&gt;
Makes complete sense. I support your decision. Thank you for explaining and sorry for my semantical misnomer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>upload-grid-bug.gif attached to Ticket #42968</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 22 Dec 2017 19:46:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42968/upload-grid-bug.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42968/upload-grid-bug.gif/1513971993762721</guid>
      <description>&lt;p&gt;
Animated GIF to show the bug as I upload a large video file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>step-2.png attached to Ticket #42968</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 22 Dec 2017 19:46:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42968/step-2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42968/step-2.png/1513971972324756</guid>
      <description>&lt;p&gt;
Step 2 of upload
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>step-1.png attached to Ticket #42968</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 22 Dec 2017 19:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42968/step-1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42968/step-1.png/1513971963057349</guid>
      <description>&lt;p&gt;
Step 1 of upload
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42968 (Media: Grid View: new upload, file is in the wrong position in the ...) created</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 22 Dec 2017 19:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42968</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42968/1513971944441190</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Steps to reproduce&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Log in to your WordPress site.
&lt;/li&gt;&lt;li&gt;Go to wp-admin/upload.php (or click Media link in the wp-admin menu)
&lt;/li&gt;&lt;li&gt;Take a look at the grid view of images and files, if you have any there.
&lt;/li&gt;&lt;li&gt;Now, add a new file.
&lt;/li&gt;&lt;li&gt;Pay attention to where the new file goes in the grid during the upload. This is more obvious on a slow host with a huge file like a 1GB video.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;What I expected&lt;/strong&gt;
I expected the new file to appear at the top left position in the grid during upload and processsing.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What happened instead&lt;/strong&gt;
The file appears inside the grid, not in the position I expected. The result is — as an author — that I feel like the upload didn't work because my eyes are looking for the new placeholder at the top left of the grid.
&lt;/p&gt;
&lt;p&gt;
Note: the upload does work. And it does appear at the position I expect — but only after upload is complete and the file is saved.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Browser / OS version&lt;/strong&gt;
Tested on OS X 10.12.6 with Safari, Chrome, and Firefox (all latest stable).
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Screenshot / Video&lt;/strong&gt;
&lt;a class="ext-link" href="https://cloudup.com/cHuVsO0OQd1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cHuVsO0OQd1&lt;/a&gt; -- animated GIF
&lt;/p&gt;
&lt;p&gt;
Attaching 2 screenshots: step 1, you'll see the new image file is in-between the 2 existing files. After upload, it moves to the left as expected.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Context / Source&lt;/strong&gt;
Real life usage on WordPress.com; tracked it back to a vanilla WP install, version 5.0-alpha-42125-src. Two plugins: Debug Bar and Debug Bar console. Default theme.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 22 Dec 2017 18:14:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:104/1513966448818800</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by greenshady. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1513966447000167"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>emailold.png attached to Ticket #42967</title>
      
        <dc:creator>johndeebdd</dc:creator>

      <pubDate>Fri, 22 Dec 2017 18:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42967/emailold.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42967/emailold.png/1513966052672622</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>emailnew.png attached to Ticket #42967</title>
      
        <dc:creator>johndeebdd</dc:creator>

      <pubDate>Fri, 22 Dec 2017 18:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42967/emailnew.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42967/emailnew.png/1513966038897110</guid>
      <description>&lt;p&gt;
screen shot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42967 (New admin email change featuer should be rolled back) created</title>
      
        <dc:creator>johndeebdd</dc:creator>

      <pubDate>Fri, 22 Dec 2017 18:06:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42967</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42967/1513966015737927</guid>
      <description>&lt;p&gt;
Suggest rollback of core ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39118" title="#39118: enhancement: Verify change of single site admin email address before it changes (closed: fixed)"&gt;#39118&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
A new feature was added to single site core. It involves the method by witch an admin can change the admin email for the site. Previously, a user could log in as an admin and change the email, just like every other setting. The new feature has the system send a confirmation email to the new email before the change takes place. There are two major problems with this new approach:
&lt;/p&gt;
&lt;p&gt;
In many cases, a person might install WordPress without having previously setup an admin email. This could be for development purposes, or because their admin email is somehow inaccessible. With the new change, the system must have access to the OLD email, from which the confirmation email is being SENT. What is the reason an admin might want to change their email? One of the mail reasons seems to be that the old email is not accessible to them. Presumably if the email is unaccessible to the user, it would be also unaccessible to the WordPress install trying to send the confirmation email! With the new system, you cannot change the admin email if the system cannot SEND emails. This is a terrible idea, because in my experience setting up the ability to send emails is one of the touchiest things in WordPress, often the last thing done. Many admins use Gmail because setting up a domain specific email server is a daunting task.
&lt;/p&gt;
&lt;p&gt;
Normally, the canonical method that the server uses to identify the penultimate credential, is the password the admin enters when they install WordPress. Note that you can install WordPress with an email that is NOT accessible, as in "dummyemail@…". This new technique makes the penultimate password external to WordPress [but weirdly just for this ONE setting]. For instance, if Gmail were to simply go out of business, it would become impossible - within WordPress - for that admin to change his own password or register a new admin. Also, this setting now becomes hostage to network activity. It is possible sent emails are being blocked or held up downstream, in which case this setting would become unchangeable via WordPress directly.
&lt;/p&gt;
&lt;p&gt;
I understand that the perception is that this provides an extra layer of security, but it really just provides an extra layer of complexity. If a user is logged in as an admin, he should be able to change all the settings on the site without having to provide MORE credentials to some other third party.
&lt;/p&gt;
&lt;p&gt;
Note this would be the only setting in the entire system that works this way. You can change every other setting with only admin credentials, not admin + email server credentials. Also, I CAN change the admin password, I just have to understand PHP [since an admin can run arbitrary code]. A security feature that only protects against people with extremely limited skills isn't a feature. So this doesn't actually add security, it just ads the PERCEPTION of security, which is bad.
&lt;/p&gt;
&lt;p&gt;
ISSUE &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;: This is the only instance where a single site addresses the admin with the pronoun "we". When I saw this, my jaw dropped. Who is the "we" that is going to email me? Is someone else gathering emails from my privately hosted site? The pronoun "we" should not be used here.
&lt;/p&gt;
&lt;p&gt;
Suggestion: This entire feature should just be rolled back. It's not an improvement.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42605 (category_description() does not work properly since 4.9) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 22 Dec 2017 17:27:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42605#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42605#comment:19/1513963662143865</guid>
      <description>&lt;p&gt;
The semantics of "keep it hidden" make it sound like I'm pulling the wool over someone's eyes :) I just don't see the reason to fill up error logs with notices for something that is harmless. I grepped through the codebase before my commit above and found lots of instances of &lt;code&gt;$deprecated&lt;/code&gt; arguments that don't throw notices. That said, if the general agreement is that we should always throw notices in such cases, let's add it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42605 (category_description() does not work properly since 4.9) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 22 Dec 2017 17:19:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42605#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42605#comment:18/1513963148722100</guid>
      <description>&lt;p&gt;
@boonebgorges  Any particular reason to keep it hidden? My main argument for having &lt;code&gt;_deprecated_argument&lt;/code&gt; would be consistency and that's how core has traditionally deprecated arguments (to the best of my knowledge).  My main argument against it would be my inability to think up a quality message to send with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42966 (bug in docs) closed</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 22 Dec 2017 17:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42966#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42966#comment:1/1513962010969880</guid>
      <description>invalid: &lt;p&gt;
Hi @tazotodua,
&lt;/p&gt;
&lt;p&gt;
I think &lt;a class="ext-link" href="https://meta.trac.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/&lt;/a&gt; is the place for such a bug report, as it isn't core code.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42966 (bug in docs) created</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Fri, 22 Dec 2017 15:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42966/1513955239554050</guid>
      <description>&lt;p&gt;
visit this page:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/themes/customize-api/customizer-objects/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/customize-api/customizer-objects/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
you will see &lt;code&gt;&amp;amp;gt;&lt;/code&gt; in code examples, instead of &lt;code&gt;&amp;gt;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42965 (Widgets not restored to previous widget area after switching back to ...) created</title>
      
        <dc:creator>probewise</dc:creator>

      <pubDate>Fri, 22 Dec 2017 15:06:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42965/1513955173193299</guid>
      <description>&lt;p&gt;
There's a bug in widgets when switching themes. Before, on version 4.8.4, if you switch themes and return it back to previous, widget will retain on its widget column. In the latest version 4.9.1, every time you switch themes and return it back to previous one, all widgets will automatically placed to Inactive widgets.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42955 (Add documentation for js/media/views/attachments.js) updated</title>
      
        <dc:creator>ireneyoast</dc:creator>

      <pubDate>Fri, 22 Dec 2017 13:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42955#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42955#comment:6/1513948879798273</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42955 (Add documentation for js/media/views/attachments.js) updated</title>
      
        <dc:creator>ireneyoast</dc:creator>

      <pubDate>Fri, 22 Dec 2017 13:20:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42955#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42955#comment:5/1513948827739923</guid>
      <description>&lt;p&gt;
@netweb I merged master into our branch, and confirmed that all changes we made are reflected in @atimmer's committed patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42955 (Add documentation for js/media/views/attachments.js) updated</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Fri, 22 Dec 2017 09:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42955#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42955#comment:4/1513936086962050</guid>
      <description>&lt;p&gt;
I've made some changes to the actual commit that are necessary for the JSDoc parser to be able to parse the documentation correctly. In this specific commit, if there is both documentation on the constructor (initialize with &lt;code&gt;@constructs&lt;/code&gt;) and the class (&lt;code&gt;@class&lt;/code&gt;) the end result is duplicated documentation.
&lt;/p&gt;
&lt;p&gt;
Like @ireneyoast I have removed all the &lt;code&gt;@summary&lt;/code&gt; tags from the previous patch. And fixed the line length. I can ask @ireneyoast to merge &lt;code&gt;master&lt;/code&gt; into her branch on GitHub to verify that these differences are all there is. But I am fairly confident that what is on &lt;code&gt;trunk&lt;/code&gt; now is correct.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42573 (Templates not working properly) updated</title>
      
        <dc:creator>shishx86</dc:creator>

      <pubDate>Fri, 22 Dec 2017 08:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42573#comment:114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42573#comment:114/1513930092651637</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42573#comment:113" title="Comment 113"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As it turns out, there still exists some caching &lt;em&gt;ability&lt;/em&gt; of page template names in WordPress, which has been there for over 6 years - &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20029" title="Introduce WP_Theme, wp_get_themes(), and wp_get_theme() to replace ..."&gt;r20029&lt;/a&gt;
However, WordPress specifically does not enable the caching of page templates, a plugin would need to specifically enable that.
If you're still experiencing issues here, I'd suggest looking at whether you have any caching plugins installed, or a `wp-content/object-cache.php file in place.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried to disable all plugins and not found any objects-cache.
This issue reproduced only on one quick-built site for friend...
If you interested in I can give you temp access (FTP+admin panel) and you can see it your self.
Contact me on &lt;a class="ext-link" href="https://www.facebook.com/mikhail.voronin.39/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;facebook&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42964 (Vuln Javascript with admin) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 07:36:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42964#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42964#comment:1/1513928168946468</guid>
      <description>invalid: &lt;p&gt;
Hi @trungnd51,
&lt;/p&gt;
&lt;p&gt;
You'll need to insert the &lt;code&gt;define( 'DISALLOW_UNFILTERED_HTML', true );&lt;/code&gt; line above the line which reads &lt;code&gt;That's all, Stop editing!&lt;/code&gt; for it to take effect.
Currently it's being defined effectively after WodPress is run.
&lt;/p&gt;
&lt;p&gt;
Next, in future, please take note of the warnings before submitting an issue to trac, you would've triggered a warning about not submitting potential security vulnerabilities here, thankfully this isn't one, however in future please follow the steps in the link you posted on how to submit a security issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Capture.PNG attached to Ticket #42964</title>
      
        <dc:creator>trungnd51</dc:creator>

      <pubDate>Fri, 22 Dec 2017 06:55:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42964/Capture.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42964/Capture.PNG/1513925735616880</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42964 (Vuln Javascript with admin) created</title>
      
        <dc:creator>trungnd51</dc:creator>

      <pubDate>Fri, 22 Dec 2017 06:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42964</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42964/1513925714445252</guid>
      <description>&lt;p&gt;
Hi
I have read this:
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-some-users-allowed-to-post-unfiltered-html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-some-users-allowed-to-post-unfiltered-html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It say that i can disallow unfiltered HTML for all users, including administrators
But admin still can post XSS on comment
Is this a bug?
&lt;a style="padding:0; border:none" href="https://imgur.com/okS89Lr"&gt;&lt;img src="https://imgur.com/okS89Lr" alt="https://imgur.com/okS89Lr" crossorigin="anonymous" title="https://imgur.com/okS89Lr" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42480 (Consistent suppression of `getimagesize()` errors) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 22 Dec 2017 05:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42480#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42480#comment:9/1513920817969020</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42480/42480.2.diff" title="Attachment '42480.2.diff' in Ticket #42480"&gt;42480.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42480/42480.2.diff" title="Download"&gt;​&lt;/a&gt; refreshes &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42480/42480.diff" title="Attachment '42480.diff' in Ticket #42480"&gt;42480.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42480/42480.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also worth noting that @joehoyle filed a bug upstream with PHP – see: &lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=75708"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.php.net/bug.php?id=75708&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@jeremyfelt or @joehoyle, could you confirm whether this fixes the issue for you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42480.2.diff attached to Ticket #42480</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 22 Dec 2017 05:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42480/42480.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42480/42480.2.diff/1513920572915834</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42963 (Improve deletion of $_old_files during upgrades) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 22 Dec 2017 05:00:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42963#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42963#comment:1/1513918858689017</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42963/42963.diff" title="Attachment '42963.diff' in Ticket #42963"&gt;42963.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42963/42963.diff" title="Download"&gt;​&lt;/a&gt; writes an empty string to files that still exist after an unsuccessful deletion attempt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42963.diff attached to Ticket #42963</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 22 Dec 2017 04:59:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42963/42963.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42963/42963.diff/1513918762909757</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42963 (Improve deletion of $_old_files during upgrades) created</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 22 Dec 2017 04:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42963/1513918732899192</guid>
      <description>&lt;p&gt;
While testing upgrades for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42720" title="#42720: enhancement: Remove unnecessary MediaElement.js files (closed: fixed)"&gt;#42720&lt;/a&gt;, it occurred to me that if the upgrade process failed to delete old files, we were potentially leaving rather large files behind to clutter up the file system. To avoid this scenario, we could attempt to empty the contents of old files if they still exist after unsuccessfully deleting them during an upgrade routine.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42720 (Remove unnecessary MediaElement.js files) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 22 Dec 2017 04:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42720#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42720#comment:9/1513918305962606</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Finally had a moment to look into this and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42720/42720.diff" title="Attachment '42720.diff' in Ticket #42720"&gt;42720.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42720/42720.diff" title="Download"&gt;​&lt;/a&gt; is a first pass that removes the &lt;code&gt;lang&lt;/code&gt; directory, all the renders except for vimeo, based on @rafa8626's comment above, and removes all of the SWF files which are already depreciated upstream as MEJS no longer supports the browsers that require these fallback files in the first place.
&lt;/p&gt;
&lt;p&gt;
I've elected to leave the minified files since we generally build and commit them anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42720.diff attached to Ticket #42720</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 22 Dec 2017 04:45:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42720/42720.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42720/42720.diff/1513917935813172</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41480 (filter_var() is not working below php 5.2 version) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 03:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41480#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41480#comment:5/1513914660668402</guid>
      <description>wontfix: &lt;p&gt;
I'm going to close this as &lt;code&gt;wontfix&lt;/code&gt; as realistically that branch of code shouldn't be run in WordPress.
&lt;/p&gt;
&lt;p&gt;
If anyone does actually run into it being used, I'd love to know how/what/why. but I'm going to close this until such a time happens.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42961 (Rest API doesnt handle empty arrays in querystring correctly) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 03:41:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42961#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42961#comment:1/1513914081447986</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This appears to be the correct behaviour, although an unexpected one at that.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ex. Querystring:
mysite.com/wp-json/...?my_empty_array[]=&amp;amp;... &amp;lt;- This works not
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In PHP applications, &lt;code&gt;var[]=&lt;/code&gt; is always treated as being set to an empty string, that means that this is interpreted as &lt;code&gt;array( '' )&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
JSON:
data: { my_empty_array: [] } &amp;lt;- This works
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When using JSON, you can pass more specific types than what you can in a PHP Query string, which results in this being a literal &lt;code&gt;array()&lt;/code&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
All that being said, this feels a little awkward, and I'd prefer to see it standardised on the JSON behaviour, but I'm not sure it's really possible though.
&lt;/p&gt;
&lt;p&gt;
One option would be to run &lt;code&gt;array_filter()&lt;/code&gt; on any array items in the query string, but doing so also means moving away from standard PHP URL parsing quirks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #14330,​42752 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 03:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14330%2C42752</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14330%2C42752/1513912634816395</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42419" title="WP: Don't attempt to convert multiple-nested arrays to a string in ..."&gt;42419&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
WP: Don't attempt to convert multiple-nested arrays to a string in WP-&amp;gt;parse_request().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14330" title="#14330: defect (bug): Improper handling of 'post_type[]=' like parameters (closed: fixed)"&gt;#14330&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42752" title="#42752: defect (bug): Rest api - can not convert array to string notice (closed: fixed)"&gt;#42752&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [42419]: WP: Don't attempt to convert multiple-nested arrays to a string in ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 03:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42419</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42419/1513912634338334</guid>
      <description>&lt;p&gt;
WP: Don't attempt to convert multiple-nested arrays to a string in WP-&amp;gt;parse_request().
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14330" title="#14330: defect (bug): Improper handling of 'post_type[]=' like parameters (closed: fixed)"&gt;#14330&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42752" title="#42752: defect (bug): Rest api - can not convert array to string notice (closed: fixed)"&gt;#42752&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42752 (Rest api - can not convert array to string notice) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 03:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42752#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42752#comment:8/1513912546735919</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The issue at hand here is that the &lt;code&gt;download&lt;/code&gt; GET variable is a registered &lt;code&gt;query_var&lt;/code&gt;. Query Vars *cannot* be nested arrays.
The REST API and the rest of WordPress doesn't appear to play nicely in this situation - as on every REST API request you're still triggering the parsing of all the other WordPress routes query vars, resulting in this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42573 (Templates not working properly) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 03:13:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42573#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42573#comment:113/1513912407807477</guid>
      <description>&lt;p&gt;
As it turns out, there still exists some caching &lt;em&gt;ability&lt;/em&gt; of page template names in WordPress, which has been there for over 6 years - &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20029" title="Introduce WP_Theme, wp_get_themes(), and wp_get_theme() to replace ..."&gt;r20029&lt;/a&gt;
However, WordPress specifically does not enable the caching of page templates, a plugin would need to specifically enable that.
If you're still experiencing issues here, I'd suggest looking at whether you have any caching plugins installed, or a &lt;code&gt;wp-content/object-cache.php&lt;/code&gt; file in place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #42573,​42962 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 03:10:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42573%2C42962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42573%2C42962/1513912211271326</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42573" title="#42573: defect (bug): Templates not working properly (closed: fixed)"&gt;#42573&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #42962 (Custom page templates not showing in dropdown pages not defaulting to slug) updated</title>
      
        <dc:creator>stevenloyer</dc:creator>

      <pubDate>Fri, 22 Dec 2017 02:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42962#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42962#comment:1/1513911260049757</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42962" title="#42962: defect (bug): Custom page templates not showing in dropdown pages not defaulting to slug (closed: duplicate)"&gt;stevenloyer&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is caching with page templates still an issue in the latest wordpress release? We are having trouble getting them to show in our Page template drop downs as well as getting pages to default to new templates by using the slug
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41482 (It is fine if we create validate_url function to validate URL.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 22 Dec 2017 02:52:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41482#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41482#comment:2/1513911123409340</guid>
      <description>maybelater: &lt;p&gt;
I think the existing functions cover it enough here - probably don't need another one.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42962 (Custom page templates not showing in dropdown pages not defaulting to slug) created</title>
      
        <dc:creator>stevenloyer</dc:creator>

      <pubDate>Fri, 22 Dec 2017 02:50:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42962/1513911015322249</guid>
      <description>&lt;p&gt;
Is caching with page templates still an issue in the latest wordpress release? We are having trouble getting them to show in our Page template drop downs as well as getting pages to default to new templates by using the slug
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42605 (category_description() does not work properly since 4.9) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 22 Dec 2017 02:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42605#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42605#comment:17/1513910996227946</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42418" title="Taxonomy: Restore deprecated argument to `term_description()` ..."&gt;42418&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Restore deprecated argument to &lt;code&gt;term_description()&lt;/code&gt; signature.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This ensures that the parameter can't be reused for something else&lt;br /&gt;
in the future.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42417" title="Taxonomy: Restore deprecated argument to `term_description()` ..."&gt;[42417]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jorbin.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42605" title="#42605: defect (bug): category_description() does not work properly since 4.9 (closed: fixed)"&gt;#42605&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42418]: Taxonomy: Restore deprecated argument to `term_description()` ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 22 Dec 2017 02:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42418</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42418/1513910995740654</guid>
      <description>&lt;p&gt;
Taxonomy: Restore deprecated argument to &lt;code&gt;term_description()&lt;/code&gt; signature.
&lt;/p&gt;
&lt;p&gt;
This ensures that the parameter can't be reused for something else
in the future.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42417" title="Taxonomy: Restore deprecated argument to `term_description()` ..."&gt;[42417]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
&lt;p&gt;
Props jorbin.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42605" title="#42605: defect (bug): category_description() does not work properly since 4.9 (closed: fixed)"&gt;#42605&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42605 (category_description() does not work properly since 4.9) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 22 Dec 2017 02:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42605#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42605#comment:16/1513910870228563</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42417" title="Taxonomy: Restore deprecated argument to `term_description()` ..."&gt;42417&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Restore deprecated argument to &lt;code&gt;term_description()&lt;/code&gt; signature.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This ensures that the parameter can't be reused for something else&lt;br /&gt;
in the future.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jorbin.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42605" title="#42605: defect (bug): category_description() does not work properly since 4.9 (closed: fixed)"&gt;#42605&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42417]: Taxonomy: Restore deprecated argument to `term_description()` ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 22 Dec 2017 02:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42417/1513910869757222</guid>
      <description>&lt;p&gt;
Taxonomy: Restore deprecated argument to &lt;code&gt;term_description()&lt;/code&gt; signature.
&lt;/p&gt;
&lt;p&gt;
This ensures that the parameter can't be reused for something else
in the future.
&lt;/p&gt;
&lt;p&gt;
Props jorbin.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42605" title="#42605: defect (bug): category_description() does not work properly since 4.9 (closed: fixed)"&gt;#42605&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42605 (category_description() does not work properly since 4.9) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 22 Dec 2017 02:45:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42605#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42605#comment:15/1513910733097305</guid>
      <description>&lt;p&gt;
Thinking about this more, I think @jorbin is correct that we need to keep &lt;code&gt;$deprecated&lt;/code&gt; in the function signature, but I don't think it's something we need to expose to developers via &lt;code&gt;_deprecated_argument()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>