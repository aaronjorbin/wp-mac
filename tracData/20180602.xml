<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44294 (Move comment form labels after inputs for consistency with consent checkbox) updated</title>
      
        <dc:creator>silb3r</dc:creator>

      <pubDate>Sat, 02 Jun 2018 23:35:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44294#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44294#comment:2/1527982514203707</guid>
      <description>&lt;p&gt;
Imho the new one is formatted correctly for modern development. The form labels will end up under their corresponding inputs, and if that's a problem then some simple CSS can fix that, either with flexbox ordering or absolute positioning.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44294 (Move comment form labels after inputs for consistency with consent checkbox) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sat, 02 Jun 2018 23:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44294#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44294#comment:1/1527981227452453</guid>
      <description>&lt;p&gt;
So instead of changing the new one, you change all the old ones?
How does that work for backward compatibility of all the themes that styled those?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>move_comment_labels_after_inputs_for_consistency.diff attached to Ticket #44294</title>
      
        <dc:creator>silb3r</dc:creator>

      <pubDate>Sat, 02 Jun 2018 19:25:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44294/move_comment_labels_after_inputs_for_consistency.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44294/move_comment_labels_after_inputs_for_consistency.diff/1527967540257817</guid>
      <description>&lt;p&gt;
Make all comment form field markup order consistent
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44294 (Move comment form labels after inputs for consistency with consent checkbox) created</title>
      
        <dc:creator>silb3r</dc:creator>

      <pubDate>Sat, 02 Jun 2018 19:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44294/1527967495619356</guid>
      <description>&lt;p&gt;
The comment form's consent field input element appears before its label element. This patch rearranges the other comment form fields to conform to the same, consistent input/label element order. It also has the benefit of allowing for modern CSS effects and label effects based on the &lt;code&gt;:placeholder-shown&lt;/code&gt; psuedo-class.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33735 (Reduce Duplication and Improve Comment Notification Email Functions) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 02 Jun 2018 18:30:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33735#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33735#comment:25/1527964249864311</guid>
      <description>&lt;p&gt;
I think I'm going to get back to this and redo it completely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 02 Jun 2018 16:02:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:17/1527955326270147</guid>
      <description>&lt;p&gt;
I'm not really sure what the issue we are trying to fix here is.
&lt;/p&gt;
&lt;p&gt;
Site owners have to abide by local (and relevant international laws).  WordPress core and plugin can surely provide tools to help with this process but I don't think that it should try and tell them if it thinks a plugin is or isn't complying with something which seems to be where this is leading.
&lt;/p&gt;
&lt;p&gt;
As a site developer and site owner you have to do site specific work - we can't and shouldn't try and imply we can do all the work for you.
&lt;/p&gt;
&lt;p&gt;
I think time would be better spent on evangelising the usage of features like the new privacy policy helpers so that plugin developers adopt them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44293 (Discrepancy between documentation and implementation of ...) updated</title>
      
        <dc:creator>360zen</dc:creator>

      <pubDate>Sat, 02 Jun 2018 15:48:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44293#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44293#comment:3/1527954496156675</guid>
      <description>&lt;p&gt;
I'd love to make a contribution. As it would be my first, I may need a little guidance, but I will make sure to read the contribution guidelines and materials prior to bugging anyone with mundane questions.
&lt;/p&gt;
&lt;p&gt;
A couple points of clarification. The description of the function says "Email login credentials to a newly-registered user." However, as it is now, the default functionality, if no $notify parameter is set, is to email only the admin. This seems broken to me, as the point of the function is to send a new user their credentials (or in the newer versions of WP, their password reset link).
&lt;/p&gt;
&lt;p&gt;
I would propose that, by default, the function should send both emails when called with only the $user_id parameter. So &lt;code&gt;wp_new_user_notification($user_id)&lt;/code&gt; would send both. This could be achieved by changing the default of the $notify parameter from &lt;code&gt;''&lt;/code&gt; to &lt;code&gt;'both'&lt;/code&gt; or modifying the logic used to return early. However, this could potentially cause some unexpected emails to go out to users if anyone is using the short version of the call ( &lt;code&gt;wp_new_user_notification($user_id)&lt;/code&gt;) expecting to send only admin emails.
&lt;/p&gt;
&lt;p&gt;
Do you have any thoughts about how much trouble that would cause? IMO, it seems worth it to have the function behave intuitively, but I understand the need for caution with changes like this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44043 (Framework for logging/retrieving a users consent state) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Sat, 02 Jun 2018 13:31:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44043#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44043#comment:33/1527946289075947</guid>
      <description>&lt;p&gt;
I'm using a custom table in &lt;a class="ext-link" href="https://wordpress.org/plugins/avatar-privacy/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/plugins/avatar-privacy/&lt;/a&gt; to track consent for anonymous content authors and user meta for registered users (consent for transmitting their hashed mail address to Gravatar.com to retrieve a profile image). Both methods do not leave an audit trail at the moment, but only store the most recent change. Having a generic framework for consent logging in Core would be beneficial.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 02 Jun 2018 11:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:66/1527938524475524</guid>
      <description>&lt;p&gt;
@desrosj thanks, the ajax tests have a reputation of being slow, so it was a very reserved patch regarding the number of tests.
&lt;/p&gt;
&lt;p&gt;
I haven't looked into it where that slowness might come from, if it's related to the usage of &lt;code&gt;WP_Ajax_UnitTestCase&lt;/code&gt;, &lt;code&gt;_handleAjax()&lt;/code&gt; or elsewhere.
&lt;/p&gt;
&lt;p&gt;
I can try to add more tests and see how it affects the run time.
&lt;/p&gt;
&lt;p&gt;
Then there's
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/44233/43546.wpPrivacyGeneratePersonalDataExportFile.php"&gt;this kind of approach &lt;/a&gt; that uses &lt;code&gt;WP_UnitTestCase&lt;/code&gt; with selected bits from the &lt;code&gt;WP_Ajax_UnitTestCase&lt;/code&gt; class setup. Wonder if this approach is faster.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17115 (Publishing an empty post results in success) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 02 Jun 2018 10:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17115#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17115#comment:32/1527934774627463</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527934773000038"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44117 (Privacy: Don't always link to the menu customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 02 Jun 2018 03:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44117#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44117#comment:5/1527910860210340</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by dlh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1527910859000030"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44117 (Privacy: Don't always link to the menu customizer) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 02 Jun 2018 03:33:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44117#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44117#comment:4/1527910429095439</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe the rule with multi-line conditionals is one per line leaving the first conditional on the same line as the if(.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Intriguing! I'm happy to follow whatever the standard is, although I confess I'm curious about what the advantages are of leaving the first condition alongside the &lt;code&gt;if&lt;/code&gt;. Is it possible to get an official ruling?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44293 (Discrepancy between documentation and implementation of ...) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 02 Jun 2018 02:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44293#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44293#comment:2/1527905493570122</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44293 (Discrepancy between documentation and implementation of ...) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 02 Jun 2018 02:11:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44293#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44293#comment:1/1527905471526945</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Howdy! Thanks for noticing and for writing up a report.
&lt;/p&gt;
&lt;p&gt;
If either option is chosen, I'd go with option 1. Option 2 would make any future changes more difficult since there isn't a canonically stated way to utilize the function (e.g. if we add a new option for the third argument of "alladmins" (to send a notice all users with the role of admin), for example, that could create headaches for anyone who happened to utilize that as it is.
&lt;/p&gt;
&lt;p&gt;
The change goes back to 4.3 with the new stronger password UI and flow. Previously, the second arg was the plaintext password and, if present, it would be sent in plaintext via e-mail. If the arg was empty, an e-mail would not be sent out. So, the code is reflecting the old method of the second argument, which was added back when adding the third argument to provide a way to control the notification.
&lt;/p&gt;
&lt;p&gt;
Let's validate &lt;code&gt;both&lt;/code&gt;, &lt;code&gt;admin&lt;/code&gt;, and &lt;code&gt;user&lt;/code&gt; to prevent something unexpected working and putting us into a corner later.
&lt;/p&gt;
&lt;p&gt;
@360zen are you interested in contributing a patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44286 (Feature Request: Provide Menu Settings on create new menu) updated</title>
      
        <dc:creator>pratikthink</dc:creator>

      <pubDate>Fri, 01 Jun 2018 23:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44286#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44286#comment:1/1527896413938579</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44237 (Add filter for comment flood message text) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 01 Jun 2018 22:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44237#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44237#comment:5/1527891269048606</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44293 (Discrepancy between documentation and implementation of ...) created</title>
      
        <dc:creator>360zen</dc:creator>

      <pubDate>Fri, 01 Jun 2018 21:32:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44293</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44293/1527888779119477</guid>
      <description>&lt;p&gt;
Based on the documentation, the options for recipients are 'admin', 'user', and 'both'. However, the way to send an email to both admin and user is actually to enter any arbitrary value for at least one of the two unnecessary parameters.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_new_user_notification($user_id)&lt;/code&gt; or &lt;code&gt;wp_new_user_notification($user_id, null, 'admin')&lt;/code&gt;sends only the admin email.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_new_user_notification($user_id, null, 'user')&lt;/code&gt; sends only the user email.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_new_user_notification($user_id, null, 'anythingYouWant')&lt;/code&gt; sends both.
&lt;/p&gt;
&lt;p&gt;
One of two things is happening here:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The function is more permissive than intended, allowing any value in the $notify parameter. Perhaps the function should actually check for 'both' instead of simply &lt;code&gt;return&lt;/code&gt;ing if the two parameters are empty. OR
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;The documentation is making an unnecessary reference to the word 'both' where in reality, any string except 'admin' and 'user' will result in both emails being sent. Perhaps the documentation should be changed to suggest that acceptable values are 'admin', 'user' or literally any other string that returns false on the empty() test on line 1873 of wp-includes/pluggable.php.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44133 (Should the Data Export indicate when we have no information on the user) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 01 Jun 2018 20:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44133#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44133#comment:10/1527886447678277</guid>
      <description>&lt;p&gt;
Thanks for good suggestions @desrosj
&lt;/p&gt;
&lt;p&gt;
I got some unexpected interruption, earlier today, so I couldn't finish adding the patch and the writeup :)
&lt;/p&gt;
&lt;p&gt;
Looks like you covered it in the latest patch, thanks.
&lt;/p&gt;
&lt;p&gt;
The patch also includes a missing comment for translators.
&lt;/p&gt;
&lt;p&gt;
Regarding a special filter for &lt;code&gt;$has_data_export&lt;/code&gt;, I don't see a reason for it, at the moment. It might be considered later, if requested with a good use-case example. In the meanwhile there are workarounds, with current filters, if needed.
&lt;/p&gt;
&lt;p&gt;
I now wonder if &lt;code&gt;$has_export_data&lt;/code&gt; sounds better than &lt;code&gt;$has_data_export&lt;/code&gt; ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44030.2.diff attached to Ticket #44030</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 20:30:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44030/44030.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44030/44030.2.diff/1527885036623889</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44030 (Remove unnecessary `This email has been sent to ###EMAIL###` from ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 20:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44030#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44030#comment:7/1527885015532415</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning to mark good first bug as claimed.
&lt;/p&gt;
&lt;p&gt;
This tested well for me. I am uploading one small change. Because the user's email is removed from the text of the email, the note explaining the &lt;code&gt;###EMAIL###&lt;/code&gt; placeholder can be removed from the translation context and the inline documentation for the filters on that content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 20:20:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:65/1527884449626614</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to 4.9.7 so that these unit tests can get added. Some thoughts on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43438/43438.12.diff" title="Attachment '43438.12.diff' in Ticket #43438"&gt;43438.12.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43438/43438.12.diff" title="Download"&gt;â€‹&lt;/a&gt; (mostly a check list of what is left):
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_ajax_wp_privacy_export_personal_data()&lt;/code&gt; tests:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A test for &lt;code&gt;Invalid request ID.&lt;/code&gt; scenario is missing.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_wp_ajax_wp_privacy_export_personal_data_should_error_when_current_user_missing_required_capability()&lt;/code&gt; test's documentation is confusing. It says that the function should successfully send exporters response data when the user is an administrator, but it then sets the user as an Author, and tests that the response was not a success.
&lt;/li&gt;&lt;li&gt;Missing tests for the &lt;code&gt;Invalid request type&lt;/code&gt; scenario.
&lt;/li&gt;&lt;li&gt;MIssing tests for the &lt;code&gt;A valid email address must be given.&lt;/code&gt; scenario.
&lt;/li&gt;&lt;li&gt;Missing tests for the &lt;code&gt;Missing exporter index.&lt;/code&gt; scenario.
&lt;/li&gt;&lt;li&gt;Missing tests for the &lt;code&gt;Missing page index.&lt;/code&gt; scenario.
&lt;/li&gt;&lt;li&gt;Missing tests for all of the errors indicating incorrect exporter usage.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;code&gt;wp_ajax_wp_privacy_erase_personal_data()&lt;/code&gt; tests:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This is also missing a large handful of error scenarios, as well as scenarios indicating incorrect erasure usage by plugins.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44168 (Add is_countable() check to wp-admin/includes/ajax-actions.php) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 19:39:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44168#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44168#comment:3/1527881952196211</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for your work on this, @thrijith!
&lt;/p&gt;
&lt;p&gt;
I do not think that &lt;code&gt;is_countable()&lt;/code&gt; is needed for any of these instances of &lt;code&gt;count()&lt;/code&gt;, though. &lt;code&gt;is_countable()&lt;/code&gt; should only be used before counting a value where it's valid for either a countable or non-countable value to be passed (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44123#comment:11" title="#44123: task (blessed): Utilize `is_countable()` and `is_iterable()` Polyfills (closed: wontfix)"&gt;44123#comment:11&lt;/a&gt;).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;While it is possible for the &lt;code&gt;get_ancestors()&lt;/code&gt; function to return an uncountable value if a plugin or theme incorrectly uses the &lt;code&gt;get_ancestors&lt;/code&gt; filter, this would be a bug.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$wp_list_table-&amp;gt;items&lt;/code&gt; could also not be countable. But this also indicates a bug in the list table class being used.
&lt;/li&gt;&lt;li&gt;The third example is already preceded by a &lt;code&gt;! is_array()&lt;/code&gt; check and would never be reached if the &lt;code&gt;$exporters&lt;/code&gt; variable is not countable.
&lt;/li&gt;&lt;li&gt;If a plugin or theme is incorrectly using the &lt;code&gt;wp_privacy_personal_data_erasers&lt;/code&gt; filter, this is a bug and the warning should not be suppressed.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44162 (Add is_countable() check to wp-admin/edit-form-advanced.php) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 19:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44162#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44162#comment:9/1527879607243147</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Prefacing my feedback by reiterating the is_countable() function should only be used before counting a value where it's valid for either a countable or non-countable value to be passed. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44123#comment:11" title="#44123: task (blessed): Utilize `is_countable()` and `is_iterable()` Polyfills (closed: wontfix)"&gt;44123#comment:11&lt;/a&gt; for a longer explanation.
&lt;/p&gt;
&lt;p&gt;
I don't think that these occurrences of &lt;code&gt;count()&lt;/code&gt; should be preceded by an &lt;code&gt;is_countable()&lt;/code&gt; check. All three functions (&lt;code&gt;get_users()&lt;/code&gt;, &lt;code&gt;wp_get_post_revisions()&lt;/code&gt;, and &lt;code&gt;get_page_templates()&lt;/code&gt;) should always return arrays. If arrays are not returned, this is a bug and the PHP warning should not be suppressed.
&lt;/p&gt;
&lt;p&gt;
Also, moving this to Administration because it relates to the edit screen and not directly with the Editor.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44124 (Adding is_countable() check to custom-header.php) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 18:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44124#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44124#comment:9/1527878836211141</guid>
      <description>wontfix: &lt;p&gt;
Looked this over. Agree that this instance of &lt;code&gt;count()&lt;/code&gt; should not be updated.
&lt;/p&gt;
&lt;p&gt;
Breaking it down, &lt;code&gt;$headers&lt;/code&gt; &lt;em&gt;could&lt;/em&gt; be of a type that is not countable, but only if the &lt;code&gt;$_wp_default_headers&lt;/code&gt; global is overridden. In this scenario, an error should be thrown to indicate improper usage of &lt;code&gt;$_wp_default_headers&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44117 (Privacy: Don't always link to the menu customizer) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 18:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44117#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44117#comment:3/1527878330889715</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@dlh this looks good to me and tests well.
&lt;/p&gt;
&lt;p&gt;
Only nit pick I have is that I &lt;em&gt;believe&lt;/em&gt; the rule with multi-line conditionals is one per line leaving the first conditional on the same line as the &lt;code&gt;if(&lt;/code&gt;. I couldn't find the rule stated anywhere in WPCS ruleset, or in the handbook, though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44043 (Framework for logging/retrieving a users consent state) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 01 Jun 2018 18:24:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44043#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44043#comment:32/1527877468451377</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by allendav. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527877467000590"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44192 (Title of Privacy Policy Page not used on login page) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Fri, 01 Jun 2018 17:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44192#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44192#comment:9/1527875776515024</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unit tests passed, see results below:
&lt;/p&gt;
&lt;p&gt;
.....                                                               5 / 5 (100%)
&lt;/p&gt;
&lt;p&gt;
You should really fix these slow tests (&amp;gt;150ms)...
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;465ms to run Tests_Link_GetThePrivacyPolicyLink:test_get_the_privacy_policy_link_should_return_valid_link_when_privacy_page_set
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Time: 3.21 seconds, Memory: 24.00MB
&lt;/p&gt;
&lt;p&gt;
OK (5 tests, 11 assertions)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 01 Jun 2018 17:43:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:16/1527875032341354</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 01 Jun 2018 17:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:15/1527874997288063</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43750#comment:14" title="Comment 14"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just for informational purposes, core currently has no way to read or parse the readme.txt at all. That has always been an exclusive thing to the org site. So, from a purist point of view, as well as an implementation one, -1.
&lt;/p&gt;
&lt;p&gt;
You'd be better off to find a way for a plugin to declare that, yes, it does a thing, using the plugin header only. That's easier, more likely to gain traction, and doesn't run into myriad problems with translations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're absolutely right @Otto42 - I was thinking plugin header and then didn't catch that we started talking about readme.txt
&lt;/p&gt;
&lt;p&gt;
The title of this issue doesn't help either :) I'll fix that next.
&lt;/p&gt;
&lt;p&gt;
So, to clarify, I'm talking about adding tags to the plugin header for privacy - not to a plugins' readme.txt.
&lt;/p&gt;
&lt;p&gt;
@azaozz - I'm renaming this issue to "Establish a standard means of core reading privacy declarations from a plugins' headers" - feel free to push back if that's a bad move.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:9/1527871811300905</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>widgets.js.patch attached to Ticket #44284</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44284/widgets.js.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44284/widgets.js.patch/1527871400635967</guid>
      <description>&lt;p&gt;
Please check this patch, thanks!
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>44192-login-page.PNG attached to Ticket #44192</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44192/44192-login-page.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44192/44192-login-page.PNG/1527871260221784</guid>
      <description>&lt;p&gt;
Example of login page Privacy Policy text
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44192 (Title of Privacy Policy Page not used on login page) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44192#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44192#comment:8/1527871229557453</guid>
      <description>&lt;p&gt;
@desrosj Just tested your diff and all seems to be working fine for me. I changed my Privacy Policy page title and the hyperlinked text changed on the login page. I did not run the unit test though. Will do that later and report back. Screenshot coming.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42691 (WP_Term_Query get_terms generates invalid sql queries) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:27:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42691#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42691#comment:15/1527870429462152</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving back to 4.9.7 for &lt;a href="https://core.trac.wordpress.org/ticket/42691#comment:10"&gt;backport consideration&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44133 (Should the Data Export indicate when we have no information on the user) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44133#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44133#comment:9/1527869745681190</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44133/44133.4.diff" title="Attachment '44133.4.diff' in Ticket #44133"&gt;44133.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44133/44133.4.diff" title="Download"&gt;â€‹&lt;/a&gt; makes some minor improvements:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; tags shouldn't be aligned together.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;@since 4.9.7&lt;/code&gt; should be added and the &lt;code&gt;@since 4.9.6&lt;/code&gt; should remain. The 4.9.7 comment should describe that the parameter was added.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44133.4.diff attached to Ticket #44133</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44133/44133.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44133/44133.4.diff/1527869586820468</guid>
      <description>&lt;p&gt;
Minor docblock fixes.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:8/1527869434564301</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44284#comment:7" title="Comment 7"&gt;woodent&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@alexvorn2 Ah, but the &lt;code&gt;e.preventDefault()&lt;/code&gt; is there to prevent the form from actually being submitted. The JavaScript handles updating the widget and allowing the form to submit would cause the page to reload and the user's state on the widget page would be lost.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tested and everything is fine for me, no page reload, if you think this function should stay - maybe move to other place (ex: after validation check)...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>woodent</dc:creator>

      <pubDate>Fri, 01 Jun 2018 16:00:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:7/1527868802852482</guid>
      <description>&lt;p&gt;
@alexvorn2 Ah, but the &lt;code&gt;e.preventDefault()&lt;/code&gt; is there to prevent the form from actually being submitted. The JavaScript handles updating the widget and allowing the form to submit would cause the page to reload and the user's state on the widget page would be lost.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Fri, 01 Jun 2018 15:47:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:6/1527868021001603</guid>
      <description>&lt;p&gt;
I don't want to change min value to 0, I want the experience to be better for all users that use custom widgets and their validation fails!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Fri, 01 Jun 2018 15:44:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:5/1527867880753189</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44284#comment:4" title="Comment 4"&gt;woodent&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@alexvorn2 The message you are seeing has nothing to do with the JavaScript. It is a browser based validation that is occurring because the input field has a min value of 1 applied in the HTML. If this is a custom widget you are creating, you should be able to change the min attribute in the HTML to 0 if you want to allow a 0 value.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You don't understand!
The screenshot is after I remove this function "e.preventDefault();" ... if it remains no message shows, so It creates confusion for users that click the save button and nothing happens because the validation fails... and the widget is not saved... I suggest to remove this function so the notification will show (as in the screenshot) ...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44141 (Privacy: Don't replace comment author URL and email with anything) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 01 Jun 2018 15:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44141#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44141#comment:11/1527867865095087</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the adjustments, @birgire! Updating the ticket title to reflect the email behavior is also changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>woodent</dc:creator>

      <pubDate>Fri, 01 Jun 2018 15:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:4/1527866284612290</guid>
      <description>&lt;p&gt;
@alexvorn2 The message you are seeing has nothing to do with the JavaScript. It is a browser based validation that is occurring because the input field has a min value of 1 applied in the HTML. If this is a custom widget you are creating, you should be able to change the min attribute in the HTML to 0 if you want to allow a 0 value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44133.3.diff attached to Ticket #44133</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 01 Jun 2018 14:34:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44133/44133.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44133/44133.3.diff/1527863692115881</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44288 (Inconsistent saving of post slug / url field) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 01 Jun 2018 13:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44288#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44288#comment:1/1527861475559737</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome to Trac!
There are two things I would like to mention here.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Did you try to create a simple &lt;code&gt;Post&lt;/code&gt; or &lt;code&gt;Page&lt;/code&gt; when &lt;code&gt;WooCommerce&lt;/code&gt; plugin is active? Can you reproduce the same issue with native WordPress post / page URLs?
&lt;/li&gt;&lt;li&gt;Did you try the same without WooCommerce activated and able to reproduce the issue?
&lt;/li&gt;&lt;li&gt;Is there any chance that you can register a simple &lt;code&gt;Custom Post Type&lt;/code&gt; inside your &lt;code&gt;functions.php&lt;/code&gt; file and try the same thing and see if you encounter the same issue with and without WooCommerce activated?
&lt;/li&gt;&lt;li&gt;I could not see the steps for reproduction (sorry if I overlooked) in your Github link. There are a lot of system information listed though under &lt;code&gt;Details&lt;/code&gt; section of your post.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Although this may not look directly related to your question but WooCommerce also creates Custom Post Type as Product. So it is a good way to test whether you are able to reproduce the same error with another Custom Post Type.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/register_post_type"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://codex.wordpress.org/Function_Reference/register_post_type&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Looking forward to see your further findings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44285 (URL in e-mail confirmation of e-mail change doesn't work.) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 01 Jun 2018 13:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44285#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44285#comment:1/1527860651153030</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome to Trac!
Can you please list out the exact steps to reproduce the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44290 (Cannot Retrieve Texts in Bengali Language) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 01 Jun 2018 12:49:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44290#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44290#comment:2/1527857368338678</guid>
      <description>invalid: &lt;p&gt;
Note that you don't need the REST API plugin as this has been integrated into core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44292 (Make use of protected process_fields) created</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Fri, 01 Jun 2018 12:23:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44292</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44292/1527855838783152</guid>
      <description>&lt;p&gt;
I have written an 'upsert' routine and thought it would be nice to have this functionality in WordPress core. Searching for results in this ticket &lt;a href="https://core.trac.wordpress.org/ticket/22196"&gt;https://core.trac.wordpress.org/ticket/22196&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Not having a method for it, is okay. I already have my own implementation. However I need some field processing like the same way has been done for the insert and update routines. Unfortunately the method for that (process_fields) has been made protected.
&lt;/p&gt;
&lt;p&gt;
Is it desirable to make that method public or should I copy the logic of those routines to be able to use it?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44289 (WordPress 4.9.8 version authorize members in detail) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 01 Jun 2018 09:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44289#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44289#comment:2/1527845760454362</guid>
      <description>wontfix: &lt;p&gt;
Hey there
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
A UI for managing roles and capabilities in WordPress is really out of scope for WordPress core. It's just not something the majority of users need. There are great plugins out there that handle this already.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #44289,â€‹44291 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 01 Jun 2018 09:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=44289%2C44291</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=44289%2C44291/1527845677899146</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44289" title="#44289: feature request: WordPress 4.9.8 version authorize members in detail (closed: wontfix)"&gt;#44289&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Hey there
&lt;/p&gt;
&lt;p&gt;
Please don't open multiple tickets for the same thing.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44291 (WordPress update 4.9.8 new version members should role be ...) created</title>
      
        <dc:creator>bakarmsn</dc:creator>

      <pubDate>Fri, 01 Jun 2018 09:26:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44291</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44291/1527845215367887</guid>
      <description>&lt;p&gt;
Hello
&lt;/p&gt;
&lt;p&gt;
To authorize WordPress 4.9.8 version members in detail
&lt;/p&gt;
&lt;p&gt;
WordPress update 4.9.8 new version members should role be authorization as in picture
&lt;/p&gt;
&lt;p&gt;
Picture link look :
&lt;/p&gt;
&lt;p&gt;
Example image link : &lt;a class="ext-link" href="http://www.zikirsaati.com/wp-content/uploads/2018/05/wwwwwww.jpg"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.zikirsaati.com/wp-content/uploads/2018/05/wwwwwww.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Feature limited authorization to members
&lt;/p&gt;
&lt;p&gt;
WordPress expects member to play role for new version 4.9.8
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>my-sites.diff attached to Ticket #39213</title>
      
        <dc:creator>aryamaaru</dc:creator>

      <pubDate>Fri, 01 Jun 2018 09:17:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39213/my-sites.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39213/my-sites.diff/1527844674066729</guid>
      <description>&lt;p&gt;
Please review my patch anybody
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 01 Jun 2018 08:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:51/1527841203772244</guid>
      <description>&lt;p&gt;
The proposed usage of the aria-label doesn't meet what the WCAG recommend in these cases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why?
&lt;/li&gt;&lt;li&gt;View plugin installation incompatibility with %s
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Ideally, the aria-label text should start with the same text used for the visible link text. There are good reasons for this, for more details see the links below. Instead, the aria-label used here is completely different form the visible text. Regardless, I'd recommend to keep things simple and not use an aria-label in the first place. A better, visible, link text instead of &lt;code&gt;Why?&lt;/code&gt; would be certainly a better option.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3.org/TR/WCAG21/#label-in-name"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.w3.org/TR/WCAG21/#label-in-name&lt;/a&gt;
Success Criterion 2.5.3 Label in NameÂ§
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For user interface components with labels that include text or images of text, the name (they mean the accessible name, i.e. the aria-label) contains the text that is presented visually.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3.org/WAI/WCAG21/Understanding/label-in-name.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.w3.org/WAI/WCAG21/Understanding/label-in-name.html&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A best practice is to have the text of the label at the start of the name.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3.org/TR/WCAG20-TECHS/ARIA8.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.w3.org/TR/WCAG20-TECHS/ARIA8.html&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the aria-label text will override the text supplied within the link. As such the text supplied will be used instead of the link text by AT. Due to this it is recommended to start the text used in aria-label with the text used within the link. This will allow consistent communication between users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3.org/TR/WCAG20-TECHS/ARIA8.html#ARIA8-ex1"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.w3.org/TR/WCAG20-TECHS/ARIA8.html#ARIA8-ex1&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The words 'read more' are repeated in the aria-label (which replaces the original anchor text of "[Read more...]") to allow consistent communication between users.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>222wwwwwww.jpg attached to Ticket #44289</title>
      
        <dc:creator>bakarmsn</dc:creator>

      <pubDate>Fri, 01 Jun 2018 07:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44289/222wwwwwww.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44289/222wwwwwww.jpg/1527839697767650</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43857 (Show the comment / awaiting moderation message even without opt-in) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Fri, 01 Jun 2018 07:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43857#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43857#comment:26/1527838418462516</guid>
      <description>&lt;p&gt;
Also, I want to raise this point:
&lt;/p&gt;
&lt;p&gt;
Let's say I use Twenty Seventeen, and uncheck "Comment author must fill out name and email" in &lt;em&gt;Discussion&lt;/em&gt; settings.
&lt;/p&gt;
&lt;p&gt;
Then some visitor to my site comments and only enters the name but not the email or maybe neither. Then what?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44290 (Cannot Retrieve Texts in Bengali Language) updated</title>
      
        <dc:creator>arindam4u</dc:creator>

      <pubDate>Fri, 01 Jun 2018 07:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44290#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44290#comment:1/1527837489401699</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry, The JSON is working fine. Thank you for this awesome Plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44290 (Cannot Retrieve Texts in Bengali Language) created</title>
      
        <dc:creator>arindam4u</dc:creator>

      <pubDate>Fri, 01 Jun 2018 06:55:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44290</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44290/1527836141405599</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I am trying to build an android app which will retrieve WordPress Blog Posts. To do so, I have installed WP REST API Plugin. However, as my blog post contains Texts in à¦¬à¦¾à¦‚à¦²à¦¾ (Bengali) it does not retrieve those titles as it should. You can check here: &lt;a class="ext-link" href="https://studentshelper.000webhostapp.com/wp-json/wp/v2/posts"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://studentshelper.000webhostapp.com/wp-json/wp/v2/posts&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please help me regarding this issue. Thank you.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 01 Jun 2018 06:50:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:50/1527835845086648</guid>
      <description>&lt;p&gt;
The patch shouldn't patch &lt;code&gt;.rtl&lt;/code&gt; files (see &lt;code&gt;list-tables-rtl.css&lt;/code&gt;), they're generated during the build process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38009 (#reply-title.comment-reply-title not updating when replying to an ...) updated</title>
      
        <dc:creator>stopdesign</dc:creator>

      <pubDate>Fri, 01 Jun 2018 06:13:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38009#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38009#comment:1/1527833639319514</guid>
      <description>&lt;p&gt;
Adding to this to confirm that I also see this behavior of title_reply_to not changing the title. I have never seen the title change to 'Leave a Reply to %s' as documented when replying to another comment. Even though the form moves and the 'cancel reply' link is made visible -- signs that comment-reply.js seems to have been properly enqueued. This is true not only on my own custom theme that Iâ€™m working on now, but on every WordPress site I have found so far, including @matt's own site:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://ma.tt/2018/05/wordpress-at-15/#comments"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://ma.tt/2018/05/wordpress-at-15/#comments&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and others with the exact same reproducible bug:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.positivityblog.com/22-inspirational-quotes-on-fear/#comments"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.positivityblog.com/22-inspirational-quotes-on-fear/#comments&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://rafaelnadalfans.com/2018/05/31/rafael-nadal-pays-tribute-to-zinedine-zidane/#comments"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://rafaelnadalfans.com/2018/05/31/rafael-nadal-pays-tribute-to-zinedine-zidane/#comments&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://hurrahforgin.com/2017/12/14/adulthood-sucks/#comments"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://hurrahforgin.com/2017/12/14/adulthood-sucks/#comments&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Observed on WordPress v 4.9.6
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Fri, 01 Jun 2018 05:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:20/1527832719929345</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some plugins may be checking a comment for spam on edit or when the comment status is changed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, I missed that note. In the case of Antispam Bee, we do check on &lt;code&gt;preprocess_comment&lt;/code&gt; in &lt;code&gt;wp_new_comment()&lt;/code&gt;. We are not hooked into &lt;code&gt;wp_insert_comment&lt;/code&gt; or &lt;code&gt;edit_comment&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44138 (Automatic Message on comment Area mislead visitors) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Fri, 01 Jun 2018 05:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44138#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44138#comment:4/1527831927057041</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44138#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
function wp44138_change_comment_form_cookies_consent( $fields ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$consent  = empty( $commenter&lt;a class="missing wiki"&gt;comment_author_email?&lt;/a&gt; ) ? &lt;em&gt; : ' checked="checked"';
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first line in the function should have
&lt;/p&gt;
&lt;pre class="wiki"&gt;$commenter = wp_get_current_commenter();
&lt;/pre&gt;&lt;p&gt;
isn't it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>template.diff attached to Ticket #44274</title>
      
        <dc:creator>aryamaaru</dc:creator>

      <pubDate>Fri, 01 Jun 2018 05:45:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44274/template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44274/template.diff/1527831916719309</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44289 (WordPress 4.9.8 version authorize members in detail) created</title>
      
        <dc:creator>bakarmsn</dc:creator>

      <pubDate>Fri, 01 Jun 2018 05:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44289</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44289/1527830902152064</guid>
      <description>&lt;p&gt;
Hello
&lt;/p&gt;
&lt;p&gt;
To authorize WordPress 4.9.8 version members in detail
&lt;/p&gt;
&lt;p&gt;
WordPress update 4.9.8 new version members should role be authorization as in picture
&lt;/p&gt;
&lt;p&gt;
Picture link look :
&lt;/p&gt;
&lt;p&gt;
Example image link : &lt;a class="ext-link" href="http://www.zikirsaati.com/wp-content/uploads/2018/05/wwwwwww.jpg"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.zikirsaati.com/wp-content/uploads/2018/05/wwwwwww.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Feature limited authorization to members
&lt;/p&gt;
&lt;p&gt;
WordPress expects member to play role for new version 4.9.8
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44288 (Inconsistent saving of post slug / url field) created</title>
      
        <dc:creator>rhurley</dc:creator>

      <pubDate>Fri, 01 Jun 2018 04:08:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44288</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44288/1527826123955597</guid>
      <description>&lt;p&gt;
Firstly see the issue I raised on the woocommerce github: &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/20285"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues/20285&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm trying to use characters such as +, &amp;amp;, * etc in post (in my particular case products) urls, but encoded first obviously (e.g. + becomes %2B).
&lt;/p&gt;
&lt;p&gt;
My process:
See my process to recreate this issue on the github link.
&lt;/p&gt;
&lt;p&gt;
The good people over at the woocommerce github have said this is not a problem on their end but is actually a problem with the wordpress core, in particular how it saves post slugs / urls.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 01 Jun 2018 01:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:14/1527816591108421</guid>
      <description>&lt;p&gt;
Just for informational purposes, core currently has no way to read or parse the readme.txt at all. That has always been an exclusive thing to the org site. So, from a purist point of view, as well as an implementation one, -1.
&lt;/p&gt;
&lt;p&gt;
You'd be better off to find a way for a plugin to declare that, yes, it does a thing, using the plugin header only. That's easier, more likely to gain traction, and doesn't run into myriad problems with translations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44256 (Build can fail when `src` folder contains folders with many files) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jun 2018 01:28:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44256#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44256#comment:20/1527816534832955</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43329" title="Build Tools: `grunt build` should only copy Core files.
Historically, ..."&gt;43329&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: &lt;code&gt;grunt build&lt;/code&gt; should only copy Core files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Historically, &lt;code&gt;grunt build&lt;/code&gt; has copied all files from the &lt;code&gt;src&lt;/code&gt; directory to the &lt;code&gt;build&lt;/code&gt; directory. This is usually fine, but can be super slow when there are lots of custom plugins or themes in the &lt;code&gt;src&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To rectify this, we now only copy Core plugins and themes to &lt;code&gt;build&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props adamsilverstein, pento, johnbillion.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44256" title="#44256: defect (bug): Build can fail when `src` folder contains folders with many files (closed: fixed)"&gt;#44256&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43329]: Build Tools: `grunt build` should only copy Core files.  Historically, ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jun 2018 01:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43329/1527816533760090</guid>
      <description>&lt;p&gt;
Build Tools: &lt;code&gt;grunt build&lt;/code&gt; should only copy Core files.
&lt;/p&gt;
&lt;p&gt;
Historically, &lt;code&gt;grunt build&lt;/code&gt; has copied all files from the &lt;code&gt;src&lt;/code&gt; directory to the &lt;code&gt;build&lt;/code&gt; directory. This is usually fine, but can be super slow when there are lots of custom plugins or themes in the &lt;code&gt;src&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
To rectify this, we now only copy Core plugins and themes to &lt;code&gt;build&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props adamsilverstein, pento, johnbillion.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44256" title="#44256: defect (bug): Build can fail when `src` folder contains folders with many files (closed: fixed)"&gt;#44256&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44256 (Build can fail when `src` folder contains folders with many files) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 01 Jun 2018 01:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44256#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44256#comment:19/1527815387571473</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44287 (REST API: Declare user capability to perform actions using JSON Hyper ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 01 Jun 2018 00:46:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44287#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44287#comment:1/1527813971872700</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by danielbachhuber. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1527810900000087"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>