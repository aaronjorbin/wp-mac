<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>32503.2.diff attached to Ticket #32503</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32503/32503.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32503/32503.2.diff/1433375872253906</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #32485,​32488 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32485%2C32488</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32485%2C32488/1433375661550267</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32485" title="#32485: defect (bug): Profile: Better formatting for description. (closed: invalid)"&gt;#32485&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32485 (Profile: Better formatting for description.) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32485#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32485#comment:1/1433375633577908</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@markjaquith is proposing some changes to the strength indicator as part of the password improvements in 4.3. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24633" title="#24633: enhancement: Allow admins to generate and send new passwords for users (closed: fixed)"&gt;#24633&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/markjaquith/wp-feature-better-passwords"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/markjaquith/wp-feature-better-passwords&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32489 (Add user: input fields spacing could be adjusted on smaller devices) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32489#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32489#comment:2/1433375275573488</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32484" title="#32484: enhancement: Profile:  section padding could be decreased on smaller devices (closed: fixed)"&gt;#32484&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32490 (New user: spacing could be increased about input field) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:47:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32490#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32490#comment:1/1433375221814759</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32484 (Profile:  section padding could be decreased on smaller devices) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32484#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32484#comment:1/1433375173109101</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32472 (is_user_member_of_blog() can be very slow when a user is a member of ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32472#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32472#comment:8/1433374882000776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This looks like a sane way to handle this. +1
&lt;/p&gt;
&lt;p&gt;
It'll need tests, including ones to make sure that it continues to function as expected when a user is added to then removed from a blog, has their role removed, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32563 (Introduce filter for disabling new user notifcation) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32563#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32563#comment:2/1433372973326648</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32563 (Introduce filter for disabling new user notifcation) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32563#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32563#comment:1/1433372953652423</guid>
      <description>&lt;p&gt;
And by action, I meant filter, of course ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32563.patch attached to Ticket #32563</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:08:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32563/32563.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32563/32563.patch/1433372921281443</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32351 (sanitize_option desperately needs unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:06:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32351#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32351#comment:5/1433372800162725</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This could be reduced down to one test with a data provider, for brevity.
&lt;/p&gt;
&lt;p&gt;
jeremyfelt actually did this recently for &lt;code&gt;update_site_option()&lt;/code&gt; sanitization in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32634" title="Use a dataProvider for network option sanitization tests.
Cleans up ..."&gt;[32634]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32563 (Introduce filter for disabling new user notifcation) created</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32563</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32563/1433372759660952</guid>
      <description>&lt;p&gt;
We should introduce an action within &lt;code&gt;register_new_user&lt;/code&gt; as a conditional to make it easy for plugins to disable the default new user notification.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32028 (List table pagination: text improvements for screen readers) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:05:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32028#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32028#comment:24/1433372723565872</guid>
      <description>&lt;p&gt;
Tested a bit latest patch, now I remember why &lt;code&gt;class="paging-input"&lt;/code&gt; was removed. With that additional span Chrome+ChromeVox won't announce "n of nn". Say you're in the first of three pages, JAWS and NVDA will announce something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Current Page  edit  has auto complete  1 of 3
&lt;/pre&gt;&lt;p&gt;
but ChromeVox won't announce &lt;code&gt;1 of 3&lt;/code&gt;. That's weird but we've already noticed similar ChromeVox issues with &lt;code&gt;span&lt;/code&gt;s in the past. With &lt;code&gt;32028.3.patch&lt;/code&gt; ChromeVox gets it right and reads out everything. I'm not saying we should necessarily fix screen readers bugs. ChromeVox is known to have his quirks. I'm just saying that we should be aware this fix won't work in ChromeVox.
If and only if  &lt;code&gt;class="paging-input"&lt;/code&gt; is really not needed, and I don't see any reason to keep it but maybe I'm missing something, I'd say to use &lt;code&gt;32028.3.patch&lt;/code&gt;. Otherwise OK for the latest patch, it is an improvement for most users anyways.
This ticket is also blocking further improvements, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32253" title="#32253: defect (bug): List table: posts navigation links pointing to same page (closed: fixed)"&gt;#32253&lt;/a&gt; I'd would greatly appreciate to make a decision as soon as possible :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32311 (Incorect redirection on install when including wp-load.php from an ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 23:02:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32311#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32311#comment:4/1433372578875492</guid>
      <description>wontfix: &lt;p&gt;
Agreed that this is outside of the scope of WordPress to handle. If you're including &lt;code&gt;wp-load.php&lt;/code&gt; from an external script, it's sane to assume that you're implementing some sort of custom integration that relies on WordPress already being installed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #20791 (Add tolerance: 'pointer' option to widgets) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 22:58:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20791#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20791#comment:16/1433372334104194</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32689" title="Switch to pointer tolerance for improved drag and drop behaviour when ..."&gt;32689&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Switch to pointer tolerance for improved drag and drop behaviour when reordering widgets.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jkudish, MikeHansenMe.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20791" title="#20791: enhancement: Add tolerance: 'pointer' option to widgets (closed: fixed)"&gt;#20791&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [32689]: Switch to pointer tolerance for improved drag and drop behaviour when ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 22:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/32689</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/32689/1433372332817801</guid>
      <description>&lt;p&gt;
Switch to pointer tolerance for improved drag and drop behaviour when reordering widgets.
&lt;/p&gt;
&lt;p&gt;
Props jkudish, MikeHansenMe.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20791" title="#20791: enhancement: Add tolerance: 'pointer' option to widgets (closed: fixed)"&gt;#20791&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20791 (Add tolerance: 'pointer' option to widgets) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 22:57:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20791#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20791#comment:15/1433372243097202</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a small but really nice change. Adding it to the widget customizer too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30377 (wp_check_filetype is broken when checking urls with parameters) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 22:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30377#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30377#comment:18/1433371591209493</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The problem here is that &lt;code&gt;wp_check_filetype()&lt;/code&gt; was never intended to work with URLs, only file paths.
&lt;/p&gt;
&lt;p&gt;
If we're going to explicitly allow support for URLs (which we need to do by extension of the fact that this function is used in the &lt;code&gt;wp_[audio|video|playlist]_shortcode()&lt;/code&gt; functions), this is gonna need unit test coverage and security review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 03 Jun 2015 22:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:31/1433370486884706</guid>
      <description>maybelater: &lt;blockquote class="citation"&gt;
&lt;p&gt;
What an assinine response.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please be respectful when discussing issues.
&lt;/p&gt;
&lt;p&gt;
Discussion can (and should) continue with the ticket closed. Until there exists a well tested and maintained library for svg sanitation, nothing is going to change here. As @iandunn correctly points out:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Mario Heiderich, one of the researchers who popularized the security issues, tried writing a sanitizer and &lt;a class="ext-link" href="http://security.stackexchange.com/questions/26264/what-does-a-html-filter-need-to-do-to-protect-against-svg-attacks/30390#30390"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;found it to be harder&lt;/a&gt; than even he imagined.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14156 (Option to use name, in additon to slug and id in get_term_link() function) reopened</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 03 Jun 2015 22:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14156#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14156#comment:13/1433370073899607</guid>
      <description>&lt;p&gt;
I'm a little concerned that this introduces yet more inconsistency with regard to which term functions accept which values for their &lt;code&gt;$term&lt;/code&gt; argument. This is now the only term function apart from &lt;code&gt;get_term_by()&lt;/code&gt; which accepts a &lt;code&gt;$field&lt;/code&gt; argument.
&lt;/p&gt;
&lt;p&gt;
Should we add the &lt;code&gt;$field&lt;/code&gt; parameter to &lt;code&gt;get_term_feed_link()&lt;/code&gt;, &lt;code&gt;get_edit_term_link()&lt;/code&gt; or other term functions too?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #32463 (Admin plugin install page does not correctly sort plugins) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Wed, 03 Jun 2015 22:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32463#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32463#comment:3/1433369507539032</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32463#comment:2" title="Comment 2"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For reference, it was set to group because during development the API returned featured plugins sorted into groups. Not sure if there are plans to go back to that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep. But we don't really have enough featured plugins for groups to matter... And we don't expose the groups anywhere. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 03 Jun 2015 22:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:30/1433369134696756</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24251#comment:25" title="Comment 25"&gt;LewisCowles&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unlike my other plugins, I do not feel it is right that SVG is considered a site-specific / ecosystem-specific use-case. In 2015 it is an absolute horror that something, as widely used as WP, uses such old and limited file-format support.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://api.drupal.org/api/drupal/includes%21file.inc/function/file_save_upload/7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Drupal&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/joomla/joomla-cms/blob/ea05ad099fca9325d5d9e15d0f2bf34be0cb90c8/administrator/components/com_media/config.xml#L8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Joomla&lt;/a&gt; don't allow it either, but if you know of a popular CMS that has implemented a way of securely allowing SVG uploads -- or feel like writing it yourself -- then by all means link to the code, since that would help any effort to bring a similar mechanism to WP.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For clarity with @iandunn, you clearly do not understand the supposed security risk being talked about fully. This is not a file-system bug or privilege escalation, or SQL hack. It affects more than just SVG as a domain, and as I understand it from the W3C, could affect many taggable file formats accepting script tags, or javascript, and data uri's, css files linking SVG from external resources could be a bigger risk (so HTML, xhtml, CSS and ironically JS, are also potential candidates for such hacks, and they are not banned).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll be the first to admit that I don't fully understand all of the vulnerabilities and mitigations, but that's part of the problem. They're relatively new and not widely understood. Most developers still perceive SVGs as just images rather than dynamic XML applications. The protections against them are even newer and are frequently bypassed. I think it's sensible to wait until things settle down.
&lt;/p&gt;
&lt;p&gt;
Core does restrict HTML, CSS and JavaScript uploads to the point necessary. HTML can't be uploaded by Contributors and Authors (Editors and Admins can, because they have the &lt;code&gt;unfiltered_html&lt;/code&gt; capability).
&lt;/p&gt;
&lt;p&gt;
JavaScript files can be uploaded by Authors, but they're not executed. If you visit them directly, you just see the raw source, and there's nothing that causes them to run inside wp-admin. CSS uploads aren't allowed at all (although I'm not sure there's any risk there, since they wouldn't be execute either).
&lt;/p&gt;
&lt;p&gt;
SVGs loaded as a CSS background image run in a different context than inline SVGs; they're not part of the DOM and can't execute JavaScript.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also because these are front-end hacks being spoken about, unless you are on a page with the linked SVG, allow users that are untrustworthy to use your WP, upload files etc, your visitors would not be at risk; it would be simple to mitigate, and it would not affect the backend, without significant intervention from an admin-level user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
SVGs would presumably be shown in the media gallery previews like any other image, allowing an embedded script to silently steal an admin's auth cookie, etc.
&lt;/p&gt;
&lt;p&gt;
Even if they weren't shown in wp-admin, it's still a security issue for admins visiting the front end. It wouldn't be hard to social-engineer an admin to visit a page on their own site. They'll also execute when visited directly, unlike JavaScript.
&lt;/p&gt;
&lt;p&gt;
A lot of WordPress sites have untrusted users, even untrusted admins; think about a site like WordPress.com. Multisite even assumes that admins are untrusted, and removes the &lt;code&gt;unfiltered_html&lt;/code&gt; capability from them.
&lt;/p&gt;
&lt;p&gt;
Allowing unsanitized SVGs would effectively be privilege escalation, giving &lt;code&gt;unfiltered_html&lt;/code&gt; to Authors.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not even against the middle-ground of them being turned off with an admin option to enable them, but this is not something even considered in this polarized non-debate.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think that's a likely solution, since Core has a "&lt;a class="ext-link" href="http://wordpress.org/about/philosophy"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;decisions, not options&lt;/a&gt;" philosophy.
&lt;/p&gt;
&lt;p&gt;
If you substitute filters for GUI options, though, that's pretty much the current state of things. It's off by default, but it's easy for someone to enable it if they want.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Again, I suggest RESTRICT ALL USERS, which mitigates potential risk a lot better than banning a file-format, so ban your author that has the dodgy SVG, and it won't affect your users because you will have an editor! (Use the roles luke...)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That might be possible, since Editors and Admins can already upload HTML files. They would still need to be sanitized within wp-admin, though, to enforce Core's policy against XSS there, and I wouldn't be surprised if there are other issues.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24251#comment:29" title="Comment 29"&gt;Kelderic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
what is the objection to allowing SVGs but sanitizing them, as in one of the attached patches
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would guess that that's the most promising way forward, but I don't think there's a solid sanitization library available right now.
&lt;/p&gt;
&lt;p&gt;
I looked at &lt;a class="ext-link" href="https://gist.github.com/Lewiscowles1986/44f059876ec205dd4d27"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Lewis's plugin&lt;/a&gt; and the others in the repository and most don't have any sanitization; &lt;a class="ext-link" href="https://wordpress.org/plugins/scalable-vector-graphics-svg/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the one that does&lt;/a&gt; uses &lt;a class="ext-link" href="https://github.com/alister-/SVG-Sanitizer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a library&lt;/a&gt; that appears to be old and unmaintained, doesn't have a large user base, doesn't have unit tests, and probably hasn't been audited by an expert.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://processwire.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ProcessWire&lt;/a&gt; is &lt;a class="ext-link" href="http://www.flamingruby.com/blog/processwire-weekly-47/#3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;using it&lt;/a&gt; as the basis for their SVG sanitization, but I suspect that they're small enough that they don't get much scrutiny from researchers and attackers.
&lt;/p&gt;
&lt;p&gt;
Mario Heiderich, one of the researchers who popularized the security issues, tried writing a sanitizer and &lt;a class="ext-link" href="https://security.stackexchange.com/a/30390/8467"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;found it to be harder&lt;/a&gt; than even he imagined.
&lt;/p&gt;
&lt;p&gt;
Maybe we could build our own, and &lt;code&gt;24251-poc-kses.diff&lt;/code&gt; is a step in that direction, but I think it will take a lot more work to prove it's reasonably secure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32028 (List table pagination: text improvements for screen readers) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32028#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32028#comment:23/1433368702298043</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updated patch. Should be good to go after final review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32028.2.diff attached to Ticket #32028</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32028/32028.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32028/32028.2.diff/1433368660131455</guid>
      <description>&lt;p&gt;
Preserves &lt;code&gt;class="paging-input"&lt;/code&gt;, with Safari fix.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28303 (How to handle default/formal translations for automatic upgrades?) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:47:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28303#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28303#comment:11/1433368023632740</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm inclined to add core support for this in 4.3. It requires some changes on the API side too, but these can be done after a release too, if necessary.
&lt;/p&gt;
&lt;p&gt;
The current idea is to support locales like &lt;code&gt;abc_DE_variant&lt;/code&gt; or &lt;code&gt;abc_variant&lt;/code&gt; which can be captured via &lt;code&gt;/(?:(.+)-)?([a-z]{2,3}(?:_[A-Z]{2})?(?:_[a-z]+)?).po/&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32434 (Network Admin: Improve the default columns in the MS Sites List Table) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:40:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32434#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32434#comment:7/1433367616748290</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32434/32434.3.patch" title="Attachment '32434.3.patch' in Ticket #32434"&gt;32434.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32434/32434.3.patch" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Combines Domain/Path to an URL column.
&lt;/li&gt;&lt;li&gt;Converts the users column to a total count rather than a list of the first 5 users. The count is cached for 12 hours. (I'm using the &lt;code&gt;blog-details&lt;/code&gt; group, but I think it's not quite necessary.)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>32434.3.patch attached to Ticket #32434</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32434/32434.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32434/32434.3.patch/1433367383969620</guid>
      <description>&lt;p&gt;
Adds caching
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29211 (Customizer: extract a cropped-image control from header images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29211#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29211#comment:3/1433367130930429</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by johnbillion. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1433367128001469"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17780 (Use PHP native double encoding prevention in htmlspecialchars()) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:28:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17780#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17780#comment:12/1433366904854804</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31190" title="#31190: defect (bug): esc_html() ate my ampersand (closed: duplicate)"&gt;#31190&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32398 (wp-admin/media-new.php is a terrible experience) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32398#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32398#comment:3/1433366474945034</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1433366473001440"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32395 (Truncation is not a good strategy for responsive list tables) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32395#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32395#comment:6/1433366363617260</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1433366360001438"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29993 (Media action links are cramped on small screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:19:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29993#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29993#comment:27/1433366362826624</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1433366360001438"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25408 (Ability to specify that a list table column is "primary") updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:19:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25408#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25408#comment:57/1433366362550613</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1433366360001438"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32430 (Users should be notified of password/e-mail changes) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:05:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32430#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32430#comment:9/1433365539435277</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32428 (Do not e-mail passwords) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:04:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32428#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32428#comment:4/1433365455951818</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1433365453001391"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32429 (Password reset links should expire) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32429#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32429#comment:13/1433365444202943</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1433365439001389"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32430 (Users should be notified of password/e-mail changes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 21:03:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32430#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32430#comment:8/1433365434651552</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1433365432001387"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31859 (Avoid using HTML tags in translation strings - remove the count class) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 03 Jun 2015 20:56:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31859#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31859#comment:13/1433364987968179</guid>
      <description>&lt;p&gt;
Actualy, there are two ways around it.
&lt;/p&gt;
&lt;p&gt;
We can make &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; two separate strings.
This way the chinese language can use theire charecters.
&lt;/p&gt;
&lt;p&gt;
Or we can leave only &lt;code&gt;(%s)&lt;/code&gt; without the HTML.
This way HTML is out, and the &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; are in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32545 (Adding actions before and after "Add New" button) closed</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 20:23:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32545#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32545#comment:1/1433362980131890</guid>
      <description>wontfix: &lt;p&gt;
I would rather not add hooks in this location - variable horizontal items do not scale well across different screen sizes and unless the implementer using such hooks takes special care to style everything, most elements will look quite bad. These are also hooks that would inherently be tied to the current look and layout, which I find to be difficult to maintain long term when things move around or styling changes.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32507 (Admin notices remove styling of lists) updated</title>
      
        <dc:creator>sciamannikoo</dc:creator>

      <pubDate>Wed, 03 Jun 2015 20:21:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32507#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32507#comment:2/1433362908928143</guid>
      <description>&lt;p&gt;
Nice workaround: thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32550 (Media views: consider to remove the refresh-attachment link) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 20:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32550#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32550#comment:1/1433362611044021</guid>
      <description>&lt;p&gt;
Does this link actually appear anymore? I hadn't realized it was still in the code because I haven't seen it in so long. Let's definitely get rid of it, anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32322 (Custom permalink structure incorrect for Future posts) updated</title>
      
        <dc:creator>kdoole</dc:creator>

      <pubDate>Wed, 03 Jun 2015 20:10:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32322#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32322#comment:8/1433362251011951</guid>
      <description>&lt;p&gt;
hi @kreatif,
&lt;/p&gt;
&lt;p&gt;
With this patch, you would need to add a filter to your theme. Something like,
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'shortlink_post_statuses', 'prettylink_future_posts' );
function prettylink_future_posts( $post_statuses ) {
	$future_index = array_search( 'future', $post_statuses );
	unset( $post_statuses[ $future_index ] );
	return $post_statuses;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31859 (Avoid using HTML tags in translation strings - remove the count class) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 03 Jun 2015 20:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31859#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31859#comment:12/1433361634700193</guid>
      <description>&lt;p&gt;
We could still replace &lt;code&gt;&amp;lt;span class="pending-count"&amp;gt;%s&amp;lt;/span&amp;gt;&lt;/code&gt; with &lt;code&gt;%s&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32430 (Users should be notified of password/e-mail changes) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 03 Jun 2015 20:00:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32430#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32430#comment:7/1433361616535857</guid>
      <description>&lt;p&gt;
The password change notification wasn't working, because it was added to the lost/reset portion of the code. I moved it to &lt;code&gt;wp_update_user()&lt;/code&gt;. Reworded it a little bit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32430.2.diff attached to Ticket #32430</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 03 Jun 2015 19:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32430/32430.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32430/32430.2.diff/1433361546243378</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32556 (Clarify behaviour of esc_attr() with respect to HTML entities) updated</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Wed, 03 Jun 2015 19:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32556#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32556#comment:7/1433360832323483</guid>
      <description>&lt;p&gt;
Brilliant - thanks, I'll track &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17780" title="#17780: defect (bug): Use PHP native double encoding prevention in htmlspecialchars() (closed: fixed)"&gt;#17780&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31859 (Avoid using HTML tags in translation strings - remove the count class) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 03 Jun 2015 19:26:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31859#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31859#comment:11/1433359617013934</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This request seems to be wontfix since there are locales which are translating &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; too, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31251#comment:17" title="Comment 17 for #31251: enhancement: Show username in wp_dropdown_users when deleting users, not display name (closed: fixed)"&gt;ticket:31251:17&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17780 (Use PHP native double encoding prevention in htmlspecialchars()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 03 Jun 2015 19:17:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17780#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17780#comment:11/1433359049653752</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17780#comment:10" title="Comment 10"&gt;miqrogroove&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Unfortunately I don't remember anything about these patches, it's been more than 6 years :)
&lt;/p&gt;
&lt;p&gt;
Seems like at the time (and maybe still) &lt;code&gt;_wp_specialchars()&lt;/code&gt; is getting double encoded strings and is expected to return single encoded. It is "undocumented behaviour" but not sure if we can remove it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32254 (List Table: avoid adjacent links pointing to the same resource) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 19:06:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32254#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32254#comment:17/1433358397003598</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32509" title="#32509: defect (bug): List table: media thumbnail and title links improvements (closed: fixed)"&gt;#32509&lt;/a&gt; is no more relevant now that the icon was moved into the title column, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32687" title="Media: move the thumbnail into the title column in list view.
This ..."&gt;r32687&lt;/a&gt;. This allow us to move the image inside the existing link. The plan is to apply a very simple technique: &lt;a class="ext-link" href="http://www.w3.org/TR/WCAG20-TECHS/H2.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/WCAG20-TECHS/H2.html&lt;/a&gt; and have just one "Edit" link.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32509 (List table: media thumbnail and title links improvements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 19:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32509#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32509#comment:6/1433358212190468</guid>
      <description>&lt;p&gt;
Having the thumbnail into the title column is a big improvement for accessibility too. This allow us to simply do not use any title or alt attribute on the link and the image, just an empty &lt;code&gt;alt=""&lt;/code&gt; and move the image inside the existing link. The plan is to apply a very simple technique: &lt;a class="ext-link" href="http://www.w3.org/TR/WCAG20-TECHS/H2.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/WCAG20-TECHS/H2.html&lt;/a&gt;
We'll try to handle this in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32254" title="#32254: defect (bug): List Table: avoid adjacent links pointing to the same resource (closed: fixed)"&gt;#32254&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32255 (List Table: media wp-list-table lacks table header content for column-icon) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 18:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32255#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32255#comment:14/1433356696609641</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1433356695000617"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32218 (Hide the title attribute option by default in Menu Editor) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Wed, 03 Jun 2015 18:24:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32218#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32218#comment:9/1433355894992908</guid>
      <description>&lt;p&gt;
The a11y team is discussing all 4.3 accessibility tickets. We want to clean our to do list and get everything fixed. What do we do with this ticket? If the patch is ok it can be committed, if it's to much trouble, or not worth it, the ticket should be closed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32475 (The "Missed Schedule" text in the Posts List Table looks like a link) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 18:21:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32475#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32475#comment:6/1433355667936529</guid>
      <description>&lt;p&gt;
&lt;code&gt;.attention&lt;/code&gt; should definitely not be blue. Not sure we're even using it correctly - a broken theme seems like it should be an error. What color would attention be? Should they just all be error-message?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32520 (.nav-primary disappears when logged in) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Wed, 03 Jun 2015 18:17:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32520#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32520#comment:1/1433355475030516</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @statusselect!
&lt;/p&gt;
&lt;p&gt;
Does this issue happen on a clean install of WordPress with no plugins and the default theme? You mentioned Genesis, which isn't part of WordPress core.
&lt;/p&gt;
&lt;p&gt;
Can you provide any more details on this issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32218 (Hide the title attribute option by default in Menu Editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 18:17:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32218#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32218#comment:8/1433355468211822</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1433355466000569"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32507 (Admin notices remove styling of lists) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 17:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32507#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32507#comment:1/1433354152149014</guid>
      <description>&lt;p&gt;
I've always found this awkward, and am not sure why it was done this way or where it comes from. Could be an interesting history to trace. I'm also not sure this is something that could be changed in general without a lot of angst, and just adding it for notices is a little too specific and makes it even harder to understand the "why" of what we did later on. For the time being, you can use the &lt;code&gt;ul-disc&lt;/code&gt; or &lt;code&gt;ul-square&lt;/code&gt; classes for an easier workaround than writing your own CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22416 (Add updated time to Plugin API) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Wed, 03 Jun 2015 17:35:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22416#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22416#comment:4/1433352914893082</guid>
      <description>&lt;p&gt;
Consolidating this to &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/ticket%3A124" title="ticket:124 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#meta124&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32435 (error messages returned by auth modal when trying to update a plugin ...) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Wed, 03 Jun 2015 17:28:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32435#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32435#comment:3/1433352485167844</guid>
      <description>&lt;p&gt;
@dd32: Same question here. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32473 (New plugin update feature doesn't always recognize errors) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Wed, 03 Jun 2015 17:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32473#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32473#comment:4/1433352451751907</guid>
      <description>&lt;p&gt;
@dd32: fixed-major? Or more to do?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32463 (Admin plugin install page does not correctly sort plugins) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32463#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32463#comment:2/1433350159267072</guid>
      <description>&lt;p&gt;
For reference, it was set to group because during development the API returned featured plugins sorted into groups. Not sure if there are plans to go back to that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32152 (List table: Comments column accessibility improvements) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32152#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32152#comment:18/1433349830231117</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1433349829000328"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:21/1433348910040901</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32562 (Password reset error - unwanted character in the link with some email ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:26:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32562#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32562#comment:1/1433348816813244</guid>
      <description>&lt;p&gt;
Hi @sinusepsilon, welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
As noted in the forum thread, this appears to be a problem with the email service you're using.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23420#comment:2" title="Comment 2 for #23420: enhancement: Lost password, invalid key - noticed something (closed: wontfix)"&gt;comment:2:ticket:23420&lt;/a&gt; for a potential workaround.
&lt;/p&gt;
&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21095" title="#21095: defect (bug): Reset password link is in &amp;lt; RESET_URL &amp;gt; - Gmail does not show it. (closed: invalid)"&gt;#21095&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23420" title="#23420: enhancement: Lost password, invalid key - noticed something (closed: wontfix)"&gt;#23420&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32053 (Customizer: change title of collapse sidebar anchor when sidebar is ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32053#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32053#comment:12/1433348798390508</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31201" title="#31201: defect (bug): Collapse &amp;amp; expand link in Customizer needs a better focus style (closed: fixed)"&gt;#31201&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32053 (Customizer: change title of collapse sidebar anchor when sidebar is ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32053#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32053#comment:11/1433348776837940</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31201 (Collapse &amp; expand link in Customizer needs a better focus style) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:25:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31201#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31201#comment:8/1433348733475163</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32053" title="#32053: defect (bug): Customizer: change title of collapse sidebar anchor when sidebar is ... (closed: fixed)"&gt;#32053&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32463 (Admin plugin install page does not correctly sort plugins) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32463#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32463#comment:1/1433348620729242</guid>
      <description>&lt;p&gt;
Hello Thomas! Thank you for your report.
&lt;/p&gt;
&lt;p&gt;
Note that the actual file path for that line (and this ticket) is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp-admin/includes/class-wp-plugin-install-list-table.php
&lt;/pre&gt;&lt;p&gt;
I actually think it would be better to randomly sort the list of featured plugins since there aren't very many of them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32556 (Clarify behaviour of esc_attr() with respect to HTML entities) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:17:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32556#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32556#comment:6/1433348228712509</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32556#comment:3" title="Comment 3"&gt;leewillis77&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &amp;amp;amp; passed into esc_attr is being decoded to &amp;amp; when it should not be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This appears to be a valid bug.  Let me just add that this is very different from the ticket description, and I don't think we will need an extra ticket at this point.  The enhancement request at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17780" title="#17780: defect (bug): Use PHP native double encoding prevention in htmlspecialchars() (closed: fixed)"&gt;#17780&lt;/a&gt; will fix this bug.  I hope that fully addresses your concern.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32562 (Password reset error - unwanted character in the link with some email ...) created</title>
      
        <dc:creator>sinusepsilon</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:10:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32562</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32562/1433347830742563</guid>
      <description>&lt;p&gt;
On my site some user wasn't able to reset password. I made an account at an email service which parsed the mails incorrectly. The problem seems to be that the mail ends with a link. It would be easy to end default wp mails with some text instead, so the link would be ok.
&lt;/p&gt;
&lt;p&gt;
More details: &lt;a class="ext-link" href="https://wordpress.org/support/topic/password-reset-error-unwanted-character-in-the-link?replies=5#post-7026877"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/password-reset-error-unwanted-character-in-the-link?replies=5#post-7026877&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I hope this helps, thanks, sinusgamma.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31985 (WP_Network class) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31985#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31985#comment:20/1433347596796609</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31985#comment:19" title="Comment 19"&gt;spacedmonkey&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Been looking at this work and looks great. Have some feedback, so here we go.
&lt;/p&gt;
&lt;p&gt;
Been looking at this I feel like this class should be little more filterable. I know it might be something you want to worry about at the end, I thought I would bring it up now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PHP5 objects &lt;code&gt;__construct()&lt;/code&gt; can not return. What this means is that return does not do anything as &lt;code&gt;$obj = new Whatever;&lt;/code&gt; will always give an instance of &lt;code&gt;Whatever&lt;/code&gt;, even if all &lt;code&gt;__construct()&lt;/code&gt; has is &lt;code&gt;return null&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Furthermore, returning a new instance of an object, does not and will not replace the current instance of that object.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;__construct()&lt;/code&gt; having &lt;code&gt;return self::$instance&lt;/code&gt; does nothing.
&lt;/p&gt;
&lt;p&gt;
What you are looking for is a factory.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public static function factory() {
        $network = apply_filters( 'pre_get_network', $network );
        // Bail if not populating from an existing network
        if ( empty( $network ) ) {
                return $network;
        }
        return new static; // static is a PHP5.3 feature, need to do __CLASS__(); or similar.
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Firstly here
&lt;/p&gt;
&lt;pre class="wiki"&gt; public function __construct( $network = false ) {
 	// Bail if not populating from an existing network
 	if ( empty( $network ) ) {
 	         return;
 	}
&lt;/pre&gt;&lt;p&gt;
How about
&lt;/p&gt;
&lt;pre class="wiki"&gt; public function __construct( $network = false ) {
        $network = apply_filters( 'pre_get_network', $network );
 	// Bail if not populating from an existing network
 	if ( empty( $network ) ) {
 	         return $network;
 	}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
See above for why this code will not work. Also this: &lt;a class="ext-link" href="http://stackoverflow.com/questions/5622605/php-getting-a-reference-through-a-constructor"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/5622605/php-getting-a-reference-through-a-constructor&lt;/a&gt; and it does appear this behavior is not documented on the &lt;code&gt;__construct&lt;/code&gt; and &lt;code&gt;__destruct&lt;/code&gt; PHP.net page, but I don't believe any OOP language allows you to violate OO paradigm by returning a different instance. Well, there might be, but it would be undocumented and something that a programmer would not want to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17780 (Use PHP native double encoding prevention in htmlspecialchars()) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 16:04:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17780#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17780#comment:10/1433347495001604</guid>
      <description>&lt;p&gt;
I see where the decoding bug was introduced now.  Here is an explanation:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10297" title="Refactor filters to avoid potential XSS attacks, props sambauers and ..."&gt;[10297]&lt;/a&gt; the strategy to prevent double encoding was to decode specialchars before the call to encode specialchars.  This was a harmless, but ultimately futile algorithm because it wouldn't do anything.
&lt;/li&gt;&lt;li&gt;In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10298" title="Latest version of the patch for refactor filters to avoid potential ..."&gt;[10298]&lt;/a&gt; a placeholder strategy was added to accomplish actual avoidance of double encoding.  It appears the author failed to remove the decode command from the patch, resulting in unnecessary decoding prior to the placeholder insertion.
&lt;/li&gt;&lt;li&gt;In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12284" title="#12284: defect (bug): I/O Sanity Failures With Invalid HTML Entity References (closed: fixed)"&gt;#12284&lt;/a&gt; although the bug was mentioned there, I didn't dig this far to find out what was the original problem.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm open to other opinions, but it looks like the reference decoding by this function is entirely unintentional.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17780 (Use PHP native double encoding prevention in htmlspecialchars()) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:33:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17780#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17780#comment:9/1433345619593763</guid>
      <description>&lt;p&gt;
After patching, there are three differences in test results:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Number of digits is not normalized in numeric references.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;&amp;amp;apos;&lt;/code&gt; fails the double-encoding test in PHP for some reason.
&lt;/li&gt;&lt;li&gt;Entities that were double-encoded at input will &lt;em&gt;not&lt;/em&gt; get decoded for output.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
IMO, these all remain acceptable differences.  The original call to specialchars_decode appears to be a mistake in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10297" title="Refactor filters to avoid potential XSS attacks, props sambauers and ..."&gt;[10297]&lt;/a&gt; and I am looking for any additional information about why that was committed in the first place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>miqro-17780.3.patch attached to Ticket #17780</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17780/miqro-17780.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17780/miqro-17780.3.patch/1433345375457890</guid>
      <description>&lt;p&gt;
Added test results in patched version.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>specialchars-tests.2.diff attached to Ticket #17780</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:24:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17780/specialchars-tests.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17780/specialchars-tests.2.diff/1433345055362031</guid>
      <description>&lt;p&gt;
Test coverage for unexpected decoding of entities.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29993 (Media action links are cramped on small screens) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:22:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29993#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29993#comment:26/1433344935704487</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32688" title="Media list view: ensure thumbnails are appropriately sized and ..."&gt;32688&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media list view: ensure thumbnails are appropriately sized and constrained.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29993" title="#29993: defect (bug): Media action links are cramped on small screens (closed: fixed)"&gt;#29993&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [32688]: Media list view: ensure thumbnails are appropriately sized and ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/32688</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/32688/1433344934722395</guid>
      <description>&lt;p&gt;
Media list view: ensure thumbnails are appropriately sized and constrained.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29993" title="#29993: defect (bug): Media action links are cramped on small screens (closed: fixed)"&gt;#29993&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29993 (Media action links are cramped on small screens) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:20:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29993#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29993#comment:25/1433344847112066</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29993#comment:23" title="Comment 23"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Ah, that's my fault, all of mine are cropped square so I didn't notice. I'm going to restrict it down to 60px wide instead of the old 80px (which, yes, will make some images smaller when not square thumbnails) and additionally apply some CSS to make sure nothing goes wrong with images of other sizes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29993,​32255,​32395,​32509 batch updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29993%2C32255%2C32395%2C32509</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29993%2C32255%2C32395%2C32509/1433344340459319</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32687" title="Media: move the thumbnail into the title column in list view.
This ..."&gt;32687&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: move the thumbnail into the title column in list view.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This gives us more space for the title and row actions, and will make a responsive list table enhancement significantly easier.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props bradt for the initial patch.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29993" title="#29993: defect (bug): Media action links are cramped on small screens (closed: fixed)"&gt;#29993&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32255" title="#32255: defect (bug): List Table: media wp-list-table lacks table header content for column-icon (closed: fixed)"&gt;#32255&lt;/a&gt;. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32509" title="#32509: defect (bug): List table: media thumbnail and title links improvements (closed: fixed)"&gt;#32509&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32395" title="#32395: task (blessed): Truncation is not a good strategy for responsive list tables (closed: fixed)"&gt;#32395&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [32687]: Media: move the thumbnail into the title column in list view.  This ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:12:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/32687</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/32687/1433344339484564</guid>
      <description>&lt;p&gt;
Media: move the thumbnail into the title column in list view.
&lt;/p&gt;
&lt;p&gt;
This gives us more space for the title and row actions, and will make a responsive list table enhancement significantly easier.
&lt;/p&gt;
&lt;p&gt;
props bradt for the initial patch.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29993" title="#29993: defect (bug): Media action links are cramped on small screens (closed: fixed)"&gt;#29993&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32255" title="#32255: defect (bug): List Table: media wp-list-table lacks table header content for column-icon (closed: fixed)"&gt;#32255&lt;/a&gt;. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32509" title="#32509: defect (bug): List table: media thumbnail and title links improvements (closed: fixed)"&gt;#32509&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32395" title="#32395: task (blessed): Truncation is not a good strategy for responsive list tables (closed: fixed)"&gt;#32395&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #25408 (Ability to specify that a list table column is "primary") updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25408#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25408#comment:56/1433344044388958</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32686" title="List tables: tighten up primary column handling for plugins and ..."&gt;32686&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
List tables: tighten up primary column handling for plugins and multisite themes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
These shouldn't be able to have their primary column reassigned by default. Also removes the &lt;code&gt;has-row-actions&lt;/code&gt; class as these list tables always have row actions visible and the JS for visual toggling conflicts. The &lt;code&gt;column-primary&lt;/code&gt; class remains.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props stephdau.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25408" title="#25408: task (blessed): Ability to specify that a list table column is &amp;#34;primary&amp;#34; (closed: fixed)"&gt;#25408&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [32686]: List tables: tighten up primary column handling for plugins and ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/32686</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/32686/1433344042333116</guid>
      <description>&lt;p&gt;
List tables: tighten up primary column handling for plugins and multisite themes.
&lt;/p&gt;
&lt;p&gt;
These shouldn't be able to have their primary column reassigned by default. Also removes the &lt;code&gt;has-row-actions&lt;/code&gt; class as these list tables always have row actions visible and the JS for visual toggling conflicts. The &lt;code&gt;column-primary&lt;/code&gt; class remains.
&lt;/p&gt;
&lt;p&gt;
props stephdau.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25408" title="#25408: task (blessed): Ability to specify that a list table column is &amp;#34;primary&amp;#34; (closed: fixed)"&gt;#25408&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14601 (wp_new_comment method doesn't allow passed in values for IP and user-agent) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:07:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14601#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14601#comment:23/1433344032916506</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by rachelbaker. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1433344030000963"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30790 (Distraction-Free sticky notice on editor pages) reopened</title>
      
        <dc:creator>nooozeguy</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:04:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30790#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30790#comment:4/1433343843844728</guid>
      <description>&lt;p&gt;
I am still experiencing this problem.
I see this information in the Console:
&lt;/p&gt;
&lt;pre class="wiki"&gt;XHR finished loading: POST "http://e6e.eac.myftpupload.com/wp-admin/admin-ajax.php".send @ jquery.js:4m.extend.ajax @ jquery.js:4j @ load-scripts.php?c=0&amp;amp;load[]=hoverIntent,common,admin-bar,heartbeat,autosave,suggest,wp-ajax-respons…:4(anonymous function) @ load-scripts.php?c=0&amp;amp;load[]=hoverIntent,common,admin-bar,heartbeat,autosave,suggest,wp-ajax-respons…:4
jquery.js:4 XHR finished loading: POST "http://e6e.eac.myftpupload.com/wp-admin/admin-ajax.php".send @ jquery.js:4m.extend.ajax @ jquery.js:4j @ load-scripts.php?c=0&amp;amp;load[]=hoverIntent,common,admin-bar,heartbeat,autosave,suggest,wp-ajax-respons…:4(anonymous function) @ load-scripts.php?c=0&amp;amp;load[]=hoverIntent,common,admin-bar,heartbeat,autosave,suggest,wp-ajax-respons…:4
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #30965 (get_comment_statuses() - does not contain the "Trash" comment status) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30965#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30965#comment:5/1433343835577567</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/20977" title="#20977: enhancement: Add Dynamic Comment Statuses (new)"&gt;#20977&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29993 (Media action links are cramped on small screens) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:02:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29993#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29993#comment:23/1433343762044327</guid>
      <description>&lt;p&gt;
Tested a bit and noticed cropped images (created with the Image editor or setting them as Theme headers) can be displayed with a different thumbnail size. Looks like cropped images don't get the right image size and they are big, scaled images? For example, the background1.jpg in the screenshot below is 1024x643 and then scaled in-browser with CSS.
&lt;/p&gt;
&lt;p&gt;
Anyway, if I'm not wrong, the max width set with CSS should be 80px + 2px border, see in &lt;code&gt;common.css&lt;/code&gt; the rules with &lt;code&gt;td.media-icon ...&lt;/code&gt; as selector that should be updated. Can provide a refreshed patch if needed.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/7_h11MDIUH.png"&gt;&lt;img src="https://cldup.com/7_h11MDIUH.png" alt="https://cldup.com/7_h11MDIUH.png" crossorigin="anonymous" title="https://cldup.com/7_h11MDIUH.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20977 (Add Dynamic Comment Statuses) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Wed, 03 Jun 2015 15:01:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20977#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20977#comment:4/1433343710520593</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20977#comment:3" title="Comment 3"&gt;Oxymoron&lt;/a&gt;:
All your points here are correct.  I made a similar note in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30965" title="#30965: enhancement: get_comment_statuses() - does not contain the &amp;#34;Trash&amp;#34; comment status (closed: fixed)"&gt;#30965&lt;/a&gt;, which wouldn't be solved by the suggested approach of allowing the result to be filtered.
&lt;/p&gt;
&lt;p&gt;
I see two possible approaches:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Reworking &lt;code&gt;get_comment_statuses()&lt;/code&gt; in a backwards compatible way to be *useful* outside the XMLRPC endpoints.
&lt;/li&gt;&lt;li&gt;Create a new function that everyone else (including the WP REST API and XMLRPC API can use) and eventually deprecate &lt;code&gt;get_comment_statuses&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Option 1 would be the ideal, if possible.
&lt;/p&gt;
&lt;p&gt;
+1 For the goal of removing the hard-coded comment statuses in favor of a single function that returns all core comment statuses (including &lt;code&gt;trash&lt;/code&gt;) and is filterable (for the addition of custom statuses).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25408.19.diff attached to Ticket #25408</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:52:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25408/25408.19.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25408/25408.19.diff/1433343160381009</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32561 (Warning: fread() expects parameter 1 to be resource, boolean given in ...) created</title>
      
        <dc:creator>SpYdR</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32561/1433342933349568</guid>
      <description>&lt;p&gt;
PHP throw this error when wordpress try to read metadata from a file which is missing or isn't readable (throwing a "failed to open stream: No such file or directory" warning).
&lt;/p&gt;
&lt;p&gt;
In &lt;em&gt;wp-includes/functions.php&lt;/em&gt; the &lt;strong&gt;get_file_data&lt;/strong&gt; function code must be :
&lt;/p&gt;
&lt;pre class="wiki"&gt;// We don't need to write to the file, so just open for reading.
$fp = fopen( $file, 'r' );
if ($fp === false) {
	return array();
}
// Pull only the first 8kiB of the file in.
$file_data = fread( $fp, 8192 );
// PHP will close file handle, but we are good citizens.
fclose( $fp );
// Make sure we catch CR-only line endings.
$file_data = str_replace( "\r", "\n", $file_data );
/**
 * Filter extra file headers by context.
 *
 * The dynamic portion of the hook name, `$context`, refers to
 * the context where extra headers might be loaded.
 *
 * @since 2.9.0
 *
 * @param array $extra_context_headers Empty array by default.
 */
if ( $context &amp;amp;&amp;amp; $extra_headers = apply_filters( "extra_{$context}_headers", array() ) ) {
	$extra_headers = array_combine( $extra_headers, $extra_headers ); // keys equal values
	$all_headers = array_merge( $extra_headers, (array) $default_headers );
} else {
	$all_headers = $default_headers;
}
foreach ( $all_headers as $field =&amp;gt; $regex ) {
	if ( preg_match( '/^[ \t\/*#@]*' . preg_quote( $regex, '/' ) . ':(.*)$/mi', $file_data, $match ) &amp;amp;&amp;amp; $match[1] )
		$all_headers[ $field ] = _cleanup_header_comment( $match[1] );
	else
		$all_headers[ $field ] = '';
}
return $all_headers;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32556 (Clarify behaviour of esc_attr() with respect to HTML entities) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32556#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32556#comment:5/1433342723403741</guid>
      <description>&lt;p&gt;
Relevant research may be added to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17780" title="#17780: defect (bug): Use PHP native double encoding prevention in htmlspecialchars() (closed: fixed)"&gt;#17780&lt;/a&gt;.  But keep it focused on the decoding of &lt;code&gt;&amp;amp;amp;&lt;/code&gt; to &lt;code&gt;&amp;amp;&lt;/code&gt;.  It was likely done that way for a good reason.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17780 (Use PHP native double encoding prevention in htmlspecialchars()) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17780#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17780#comment:8/1433342349808289</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8767" title="#8767: defect (bug): Refactored filters to avoid potential XSS attacks (closed: fixed)"&gt;#8767&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12284" title="#12284: defect (bug): I/O Sanity Failures With Invalid HTML Entity References (closed: fixed)"&gt;#12284&lt;/a&gt;, and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32556" title="#32556: defect (bug): Clarify behaviour of esc_attr() with respect to HTML entities (closed: invalid)"&gt;#32556&lt;/a&gt;.  I'm not sure there was ever a valid reason for calling specialchars_decode but it is worth reviewing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29040 (Customizer: Header Image not Updating when using static front page) updated</title>
      
        <dc:creator>carlalexander</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29040#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29040#comment:9/1433342225189483</guid>
      <description>&lt;p&gt;
I did some more digging. The &lt;code&gt;get_default_header_images&lt;/code&gt; method merges the &lt;code&gt;default-image&lt;/code&gt; into the &lt;code&gt;default_headers&lt;/code&gt; array correctly. The issue seems to be that it isn't used by the &lt;code&gt;Custom_Image_Header&lt;/code&gt; class. It's only used by &lt;code&gt;WP_Customize_Control&lt;/code&gt; to display the image on the customizer page.
&lt;/p&gt;
&lt;p&gt;
The issue can be solved by just using the &lt;code&gt;get_default_header_images&lt;/code&gt; method in &lt;code&gt;set_header_image&lt;/code&gt; as followed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $uploaded &amp;amp;&amp;amp; isset( $uploaded[ $choice ] ) ) {
	$header_image_data = $uploaded[ $choice ];
} else {
	$default_headers = $this-&amp;gt;get_default_header_images();
	if ( isset( $default_headers[ $choice ] ) )
		$header_image_data = $default_headers[ $choice ];
	else
		return;
}
&lt;/pre&gt;&lt;p&gt;
What I can't tell is if this is a larger issue. It seems like &lt;code&gt;get_default_header_images&lt;/code&gt; should be used at several other places. I'm also unclear why it isn't merged into the &lt;code&gt;default_headers&lt;/code&gt; by default. It is a default header.
&lt;/p&gt;
&lt;p&gt;
Either way, it seems like the relationship between &lt;code&gt;get_default_header_header_images&lt;/code&gt;  and &lt;code&gt;process_default_headers&lt;/code&gt; should be tighter. I'll let someone with a better knowledge of the Customizer internals make that decision though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32308 (WP Multisite: Can't add new site.) updated</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:31:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32308#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32308#comment:29/1433341918480408</guid>
      <description>&lt;p&gt;
Additional follow up: Tickets &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32560" title="#32560: defect (bug): Wordpress MultiSite is not naming &amp;#34;wp_user_roles&amp;#34; field properly in ... (closed: duplicate)"&gt;#32560&lt;/a&gt; (my own issue; recently posted) and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32127" title="#32127: defect (bug): Broken support for utf8mb4 with the mysql extension (closed: fixed)"&gt;#32127&lt;/a&gt; seem to go hand in hand with this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32127 (Broken support for utf8mb4 with the mysql extension) updated</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32127#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32127#comment:23/1433341890345581</guid>
      <description>&lt;p&gt;
Additional follow up: Tickets &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32560" title="#32560: defect (bug): Wordpress MultiSite is not naming &amp;#34;wp_user_roles&amp;#34; field properly in ... (closed: duplicate)"&gt;#32560&lt;/a&gt; (my own issue; recently posted) and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32308" title="#32308: defect (bug): WP Multisite: Can't add new site. (closed: duplicate)"&gt;#32308&lt;/a&gt; seem to go hand in hand with this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32560 (Wordpress MultiSite is not naming "wp_user_roles" field properly in ...) updated</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32560#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32560#comment:3/1433341804527460</guid>
      <description>&lt;p&gt;
Okay, a little more research, this may be the end result of the bugs identified in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32127" title="#32127: defect (bug): Broken support for utf8mb4 with the mysql extension (closed: fixed)"&gt;#32127&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32308" title="#32308: defect (bug): WP Multisite: Can't add new site. (closed: duplicate)"&gt;#32308&lt;/a&gt;. I just checked on two sites where I applied the patches in the two linked tickets, and the wp_##_user_roles row seems to be named properly.
&lt;/p&gt;
&lt;p&gt;
The difference is that the site I initially had this issue on was launched and the issues in the linked tickets were identified... the other two sites had their patches put into place before adding any users/sites.
&lt;/p&gt;
&lt;p&gt;
As far as the work flow is concerned, in WP MultiSite, the additional sites were set up, then the users created via Network Admin -&amp;gt; Users. I then went into each site, clicking edit, then users, and then adding an existing user.
&lt;/p&gt;
&lt;p&gt;
Based on my check of the other two sites, this issue could be absorbed into both &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32127" title="#32127: defect (bug): Broken support for utf8mb4 with the mysql extension (closed: fixed)"&gt;#32127&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32308" title="#32308: defect (bug): WP Multisite: Can't add new site. (closed: duplicate)"&gt;#32308&lt;/a&gt;, I suppose.
&lt;/p&gt;
&lt;p&gt;
At least there'll now be a reference for this issue if others come across it. Not sure if we now want to keep this as a standalone bug or bind it/tie it in with the other two tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32560 (Wordpress MultiSite is not naming "wp_user_roles" field properly in ...) updated</title>
      
        <dc:creator>BinaryKitten</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:19:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32560#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32560#comment:2/1433341150274420</guid>
      <description>&lt;p&gt;
Hi @BearlyDoug,
&lt;/p&gt;
&lt;p&gt;
Is there a particular work flow that you followed to trigger this issue? I've yet to come across it on the multisite projects that I've worked on. I'm not going to say it doesn't exist, but it would be good to get some replicable steps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32560 (Wordpress MultiSite is not naming "wp_user_roles" field properly in ...) updated</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32560#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32560#comment:1/1433340217791964</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I was hoping to be able to edit the ticket above. Requesting that this gets fixed, once and for all, for 4.2.3 and 4.3 going forward. Changing severity and Workflow Keyword
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32560 (Wordpress MultiSite is not naming "wp_user_roles" field properly in ...) created</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Wed, 03 Jun 2015 14:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32560</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32560/1433340029530609</guid>
      <description>&lt;p&gt;
In the "wp_##_options" table, the row handling wordpress user roles on MultiSite is misidentified as "wp_user_roles". It needs to be identified as "wp_##_user_roles", where the ## is the numerical ID of that MultiSite instance.
&lt;/p&gt;
&lt;p&gt;
This bug has existed, in some facet, since 2011. The file involved, I believe, is:
src/wp-includes/capabilities.php
&lt;/p&gt;
&lt;p&gt;
Manual fixing is possible via database queries (I used phpMyAdmin).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://tinyurl.com/WPUserRoleBugFix"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tinyurl.com/WPUserRoleBugFix&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/support/topic/upgrade-30-issues-w-tables-missing-wp_-vs-wp_1?replies=25"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/upgrade-30-issues-w-tables-missing-wp_-vs-wp_1?replies=25&lt;/a&gt; (Reply 6 and 7)
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://108wp.com/q/help-why-my-roles-are-not-showing-multi-sitenetwork"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://108wp.com/q/help-why-my-roles-are-not-showing-multi-sitenetwork&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note: We do not have any plugins installed that are centered around user or role management (using core WP features)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31258 (SVG replaced by default image in media library) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 13:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31258#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31258#comment:14/1433338985125004</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I seriously doubt .com allows SVG uploads. I tried it on my .com site, and it was rejected due to file type.
&lt;/p&gt;
&lt;p&gt;
I think it's fine to leave this open, we should probably make sure list and grid views behave the same way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31326 (Edit comment screen: misplaced-missing labels) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 13:29:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31326#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31326#comment:27/1433338150546358</guid>
      <description>&lt;p&gt;
Refreshed patch removes unnecessary CSS specificity and declarations, reduces a bit some padding. Screenshots before and after:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/9DpQjwpDmX.png"&gt;&lt;img src="https://cldup.com/9DpQjwpDmX.png" alt="https://cldup.com/9DpQjwpDmX.png" crossorigin="anonymous" title="https://cldup.com/9DpQjwpDmX.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31326.5.patch attached to Ticket #31326</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 03 Jun 2015 13:26:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31326/31326.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31326/31326.5.patch/1433338017203331</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) reopened</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Wed, 03 Jun 2015 13:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:29/1433337872908541</guid>
      <description>&lt;p&gt;
The argument here seems to be whether scripts and in general insecure SVGs should be allowed. However, what is the objection to allowing SVGs but sanitizing them, as in one of the attached patches? If the SVG is changed, the user could be notified with something like "Image upload was successful. However, there was potentially insecure code inside the image which has been removed. Please check your image to see if it still appears correctly. For more information, see [Link]"?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #32053 (Customizer: change title of collapse sidebar anchor when sidebar is ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 13:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32053#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32053#comment:10/1433337587580002</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1433337585000511"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #12821,​32077 batch updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 13:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=12821%2C32077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=12821%2C32077/1433337524011984</guid>
      <description>duplicate: &lt;p&gt;
I don't think &lt;code&gt;get_pages()&lt;/code&gt; is worth futzing with on its own until we've moved it to actually use our own query API. At that point, I imagine there would be significantly less code to construct SQL and do caching, etc., so realistically, this is a duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/12821" title="#12821: enhancement: Merge get_posts() and get_pages() (assigned)"&gt;#12821&lt;/a&gt; as far as what the problem is (tickets are ideally about problems, not solutions).
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17780 (Use PHP native double encoding prevention in htmlspecialchars()) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 13:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17780#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17780#comment:7/1433337399008763</guid>
      <description>&lt;p&gt;
Should add more tests to determine behaviors when function input is already double-encoded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32556 (Clarify behaviour of esc_attr() with respect to HTML entities) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 03 Jun 2015 13:07:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32556#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32556#comment:4/1433336833146228</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, I assumed that I should be able to encode the entity myself, and then apply esc_attr() since esc_attr() advertises that it "will never double encode entities" (&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/esc_attr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/esc_attr&lt;/a&gt;).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The actual &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/esc_attr/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;inline docs of esc_attr()&lt;/a&gt; make no such claim, this is just another case of the codex being wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>mdwheele</dc:creator>

      <pubDate>Wed, 03 Jun 2015 12:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:11/1433336264356687</guid>
      <description>&lt;p&gt;
I've added two possible implementations that vary on whether branching or exiting-early is preferred in the widget factory register and unregister methods. This includes a test that has been tagged with this ticket number. Tests are passing. The third patch updates the &lt;code&gt;register_widget&lt;/code&gt; and &lt;code&gt;unregister_widget&lt;/code&gt; functions to reflect the change in argument type expectation.
&lt;/p&gt;
&lt;p&gt;
I apologize in advance if this oversteps standards for contribution! I wanted to make sure I packaged this up before moving on to other tasks. Please let me know if there's anything you'd like changed!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31258 (SVG replaced by default image in media library) reopened</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Wed, 03 Jun 2015 12:55:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31258#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31258#comment:13/1433336123999205</guid>
      <description>&lt;p&gt;
Before we close this, could we get some stats from WP.com about how many users have any SVG images uploaded on their sites? From browsing the web I see SVG images all over, but I have no hard data on the actual usage. According to &lt;a class="ext-link" href="http://w3techs.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://w3techs.com&lt;/a&gt;, the usages across the entire web is at under 1%, but augmenting this with some WP specific numbers would be helpful.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>28216.update-api-function-docs.patch attached to Ticket #28216</title>
      
        <dc:creator>mdwheele</dc:creator>

      <pubDate>Wed, 03 Jun 2015 12:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.update-api-function-docs.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.update-api-function-docs.patch/1433335989108194</guid>
      <description>&lt;p&gt;
Updates register_widget and unregister_widget docs to reflect change in argument type expectation.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>28216.branching-implementation.patch attached to Ticket #28216</title>
      
        <dc:creator>mdwheele</dc:creator>

      <pubDate>Wed, 03 Jun 2015 12:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.branching-implementation.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.branching-implementation.patch/1433335089720024</guid>
      <description>&lt;p&gt;
Implementation that branches.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>28216.exit-early-implementation.patch attached to Ticket #28216</title>
      
        <dc:creator>mdwheele</dc:creator>

      <pubDate>Wed, 03 Jun 2015 12:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.exit-early-implementation.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.exit-early-implementation.patch/1433335071550692</guid>
      <description>&lt;p&gt;
Implementation that exits early.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32322 (Custom permalink structure incorrect for Future posts) updated</title>
      
        <dc:creator>kreatif</dc:creator>

      <pubDate>Wed, 03 Jun 2015 10:12:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32322#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32322#comment:7/1433326326187189</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have the same problem with the post status,
i updated the link-template with the patch above but this is nog working for me.
&lt;/p&gt;
&lt;p&gt;
For the post i'm using custom post type ui plugin, needs this a other patch to fix it ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32345 (ssh2/sftp doesn't work in chrooted environments, FTP_BASE, ...) updated</title>
      
        <dc:creator>bondnono</dc:creator>

      <pubDate>Wed, 03 Jun 2015 10:04:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32345#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32345#comment:4/1433325847318770</guid>
      <description>&lt;p&gt;
Just @aberbenni you forgot to mention the file to edit.
It is wp-admin/includes/class-wp-filesystem-base.php line 178 (using WP 4.2.2)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32559 (Links to categories in edit.php display nothing) created</title>
      
        <dc:creator>Djibs13</dc:creator>

      <pubDate>Wed, 03 Jun 2015 09:44:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32559</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32559/1433324670862177</guid>
      <description>&lt;p&gt;
In wp-admin / edit.php when I click to a link to a category, no post is displayed
&lt;/p&gt;
&lt;p&gt;
See attachment
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/EyyDC3k.jpg"&gt;&lt;img src="http://i.imgur.com/EyyDC3k.jpg" alt="http://i.imgur.com/EyyDC3k.jpg" crossorigin="anonymous" title="http://i.imgur.com/EyyDC3k.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32547 (New Theme Feature: Sidebar Width) closed</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 03 Jun 2015 09:41:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32547#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32547#comment:5/1433324463388552</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32547#comment:4" title="Comment 4"&gt;jeherve&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32547#comment:3" title="Comment 3"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
exactly one sidebar?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I didn't think about that. That point alone makes my idea stupid! :(
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I wouldn't go that far, sometimes a different perspective from another is all that is needed to point out things one may not have thought of :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Never mind that ticket then!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Cool, closing.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #31985 (WP_Network class) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 03 Jun 2015 09:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31985#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31985#comment:19/1433322158239167</guid>
      <description>&lt;p&gt;
Been looking at this work and looks great. Have some feedback, so here we go.
&lt;/p&gt;
&lt;p&gt;
Been looking at this I feel like this class should be little more filterable. I know it might be something you want to worry about at the end, I thought I would bring it up now.
&lt;/p&gt;
&lt;p&gt;
Firstly here
&lt;/p&gt;
&lt;pre class="wiki"&gt; public function __construct( $network = false ) {
 	// Bail if not populating from an existing network
 	if ( empty( $network ) ) {
 	         return;
 	}
&lt;/pre&gt;&lt;p&gt;
How about
&lt;/p&gt;
&lt;pre class="wiki"&gt; public function __construct( $network = false ) {
        $network = apply_filters( 'pre_get_network', $network );
 	// Bail if not populating from an existing network
 	if ( empty( $network ) ) {
 	         return $network;
 	}
&lt;/pre&gt;&lt;p&gt;
Just in case you want to highjack the getting network process for anything. Also returned the network variable, do you can do some type checking on the return. Empty will flag, null, zero and empty string values, maybe want to return that...
&lt;/p&gt;
&lt;p&gt;
Get get_core_option_keys should return through apply_filters.
&lt;/p&gt;
&lt;p&gt;
Add / edit / delete should clear / set cache values, as you don't to return an old version of the network object with incorrect data.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$network = wp_cache_get( $network_id, 'networks' )
&lt;/pre&gt;&lt;p&gt;
get_core_options method should use get_site_option instead of raw sql query. I know this means more sql queries, but at the moment, it is bypassing all the filters on get_site_option, which many use to change these values out of the db. This would also mean that set_site_name also magically gets filterable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Wed, 03 Jun 2015 09:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:28/1433322102667439</guid>
      <description>&lt;p&gt;
What an assinine response. Most of the CVE's are browser specific, version specific, OS specific and / or library specific where the same exists between browsers; not to mention ARE A FRONT-END ISSUE, NOT A WORDPRESS CODEBASE ISSUE!!! i.e. &lt;a class="ext-link" href="http://www.cvedetails.com/cve/CVE-2014-1745/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.cvedetails.com/cve/CVE-2014-1745/&lt;/a&gt;, which is a CVE caused by a TAG... Again, I suggest RESTRICT ALL USERS, which mitigates potential risk a lot better than banning a file-format, so ban your author that has the dodgy SVG, and it won't affect your users because you will have an editor! (Use the roles luke...) What you report to think is rational, is like eating with your hands because knives and forks are pointy, and might stab or slice, because there are thousands of cases every year of that happening...
&lt;/p&gt;
&lt;p&gt;
On your point on toasters, that is a false analogy. I Have not said it is reasonable to assume the WordPress uploader should do anything but upload valid WWW media files. Also out of the remit of the uploader should be checking licenses, and other such minutia I have not mentioned... It would be fair to assume that it should not upload files known to not be supported in targetted browsers, but SVG has very good support in modern browsers. I'm not even against the middle-ground of them being turned off with an admin option to enable them, but this is not something even considered in this polarized non-debate.
&lt;/p&gt;
&lt;p&gt;
A more correct analogy would be, when I put something that fits in the toaster, have the toaster powered on, and pull down the lever on the toaster; I expect it to turn on, and create heat, subject to the working condition of the heating elements. I do not expect it to respond only to specific brands of bread, or to check the chemical consistency to stop me heating up plastics, or toxic matter.
&lt;/p&gt;
&lt;p&gt;
LESSON?
The toaster manufacturers go to very litte effort to stop me doing what I like with my toaster, because it is REASONABLE to assume that only a special kind of idiot would misuse the toaster. They also don't have cut-off switches for electrical shorts etc, because you shouldn't be fiddling with the toaster! (See &lt;a class="ext-link" href="https://www.youtube.com/watch?v=oz0Dln1_QnA"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.youtube.com/watch?v=oz0Dln1_QnA&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
To be honest I am not even pushing for SVG on your platform any more, I have given up on it, along with the desire to give anything back to the Core. From the TRAC discussions I have been involved in, I am less than impressed with the rest of WordPress, as it also suffers this hyperbolic nonsense, which does not seem restricted to media file support, and I have witnessed failing, despite all the red tape...
&lt;/p&gt;
&lt;p&gt;
Bottom line I have a plugin that works, and I make sure anyone that reads the comments in the code, or asks why they need a plugin for a basic file-format, knows it exists only because of a fringe of paranoid academia, that is prevalent in design by comittee.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32547 (New Theme Feature: Sidebar Width) updated</title>
      
        <dc:creator>jeherve</dc:creator>

      <pubDate>Wed, 03 Jun 2015 07:53:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32547#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32547#comment:4/1433318012103409</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32547#comment:3" title="Comment 3"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
exactly one sidebar?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I didn't think about that. That point alone makes my idea stupid! :(
&lt;/p&gt;
&lt;p&gt;
Never mind that ticket then!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32308 (WP Multisite: Can't add new site.) updated</title>
      
        <dc:creator>elruso1980</dc:creator>

      <pubDate>Wed, 03 Jun 2015 07:47:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32308#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32308#comment:28/1433317668238976</guid>
      <description>&lt;p&gt;
Aslo for me not working :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20977 (Add Dynamic Comment Statuses) updated</title>
      
        <dc:creator>Oxymoron</dc:creator>

      <pubDate>Wed, 03 Jun 2015 06:48:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20977#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20977#comment:3/1433314124311718</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20977#comment:2" title="Comment 2"&gt;chriscct7&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It actually appears this could be as simple as a filter in the return of get_comment_statuses()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think so. I began working on this but after getting into it a bit I realized this was going to be a bit larger and I think we need to discuss the best approach.
&lt;/p&gt;
&lt;p&gt;
Yes, we could add a filter to that function and allow people to add custom statuses- but there are other sections of core that would need to be updated to reflect this.
&lt;/p&gt;
&lt;p&gt;
From what I have found so far, in &lt;code&gt;wp-admin/edit-form-comment.php&lt;/code&gt; the 3 different comment statuses are hardcoded with a specific class and value that is unique to them but not specified in &lt;code&gt;get_comment_statuses&lt;/code&gt;. Here is a snippet from there:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;label class="approved"&amp;gt;&amp;lt;input type="radio"&amp;lt;?php checked( $comment-&amp;gt;comment_approved, '1' ); ?&amp;gt; name="comment_status" value="1" /&amp;gt;&amp;lt;?php /* translators: comment type radio button */ _ex('Approved', 'adjective') ?&amp;gt;&amp;lt;/label&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Currently, &lt;code&gt;get_comment_statuses()&lt;/code&gt; is only referenced in the &lt;code&gt;class-wp-xmlrpc-server.php&lt;/code&gt; file. In here, it is only being used to get the slugs for the different comment statuses.
&lt;/p&gt;
&lt;p&gt;
It would be nice if we could refactor how the &lt;code&gt;get_comment_statuses()&lt;/code&gt; function formats the data, but I don't think we can due to the need for backwards compatibility. That being said, I think we could adjust that function to have a &lt;code&gt;$custom_statuses&lt;/code&gt; variable or something that can have a differently formatted array that we could attach an &lt;code&gt;add_filter()&lt;/code&gt; to and merge with the existing &lt;code&gt;$statuses&lt;/code&gt; array.
&lt;/p&gt;
&lt;p&gt;
Then, wherever it is referenced (e.g. &lt;code&gt;edit-form-comment.php&lt;/code&gt;) we can update it to not only list the existing hardcoded statuses but also loop through the new custom ones we added. We will first need to identify everywhere that comment statuses are referenced throughout core, but once we do that what I outlined above should work.
&lt;/p&gt;
&lt;p&gt;
Let me know any thoughts on this- I could be wrong in my suggested approach but I think it would end up being backwards compatible while also allowing custom comment statuses.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32556 (Clarify behaviour of esc_attr() with respect to HTML entities) updated</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Wed, 03 Jun 2015 06:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32556#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32556#comment:3/1433313184523101</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I'm aware it's a fine line between bug and support, but please consider re-opening this - rationale below.
&lt;/p&gt;
&lt;p&gt;
The reason I opened it as a bug, is because esc_attr() is interfering with the string it is passed in undocumented ways. At the very least, that's a documentation bug, ideally it just shouldn't do it - although I appreciate that's probably difficult.
&lt;/p&gt;
&lt;p&gt;
According to the documentation, all three of these &lt;strong&gt;should&lt;/strong&gt; return the same string, however the versions that include esc_attr() return different output to the non-esc_attr() version.
&lt;/p&gt;
&lt;pre class="wiki"&gt;htmlspecialchars('&amp;amp;raquo;') // Returns &amp;amp;amp;raquo;
&lt;/pre&gt;&lt;pre class="wiki"&gt;esc_attr(htmlspecialchars('&amp;amp;raquo;')); // Returns &amp;amp;raquo;
&lt;/pre&gt;&lt;pre class="wiki"&gt;esc_attr('&amp;amp;amp;raquo;'); // Returns &amp;amp;raquo;
&lt;/pre&gt;&lt;p&gt;
The &amp;amp;amp; passed into esc_attr is being decoded to &amp;amp; when it should not be. I presume this is part of esc_attr() trying to make sure it's not double-encoding things, but it should not decode if the encoding was part of the source string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32011 (Install fail if DO_NOT_UPGRADE_GLOBAL_TABLES flag is true) updated</title>
      
        <dc:creator>Oxymoron</dc:creator>

      <pubDate>Wed, 03 Jun 2015 05:28:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32011#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32011#comment:4/1433309334725915</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2015-06-03 at 1.23.44 AM.png attached to Ticket #32011</title>
      
        <dc:creator>Oxymoron</dc:creator>

      <pubDate>Wed, 03 Jun 2015 05:27:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32011/Screen%20Shot%202015-06-03%20at%201.23.44%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32011/Screen%20Shot%202015-06-03%20at%201.23.44%20AM.png/1433309241634252</guid>
      <description>&lt;p&gt;
Screenshot of the error message 32011.patch adds
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>32011.patch attached to Ticket #32011</title>
      
        <dc:creator>Oxymoron</dc:creator>

      <pubDate>Wed, 03 Jun 2015 05:26:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32011/32011.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32011/32011.patch/1433309205290074</guid>
      <description>&lt;p&gt;
Added error message if DO_NOT_UPGRADE_GLOBAL_TABLES is defined &amp;amp; true
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32086 (AJAX plugin update says it updated when in reality it didn't) updated</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Wed, 03 Jun 2015 04:48:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32086#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32086#comment:13/1433306895601985</guid>
      <description>&lt;p&gt;
Could this ticket &lt;a href="https://core.trac.wordpress.org/ticket/32219"&gt;https://core.trac.wordpress.org/ticket/32219&lt;/a&gt; be &lt;code&gt;Duplicate&lt;/code&gt; to this issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>link-template.diff attached to Ticket #32322</title>
      
        <dc:creator>kdoole</dc:creator>

      <pubDate>Wed, 03 Jun 2015 04:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32322/link-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32322/link-template.diff/1433306592771278</guid>
      <description>&lt;p&gt;
adds a filter to the list of post types which should not receive fancy permalinks
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32322 (Custom permalink structure incorrect for Future posts) updated</title>
      
        <dc:creator>kdoole</dc:creator>

      <pubDate>Wed, 03 Jun 2015 04:42:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32322#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32322#comment:6/1433306547014903</guid>
      <description>&lt;p&gt;
Howdy,
&lt;/p&gt;
&lt;p&gt;
@johnbillion, you made it too easy! :) Here's an initial patch, just to see how this looks. Hope i'm doing this right...
&lt;/p&gt;
&lt;p&gt;
I swapped the if and else here -- it seemed to make sense asking "should we use a short link" instead of "should we not use a fancy link."
&lt;/p&gt;
&lt;p&gt;
Besides the several opportunities in &lt;code&gt;get_permalink&lt;/code&gt; to clean up the code style, how's this look?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32556 (Clarify behaviour of esc_attr() with respect to HTML entities) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 03:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32556#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32556#comment:2/1433302725697994</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32556" title="#32556: defect (bug): Clarify behaviour of esc_attr() with respect to HTML entities (closed: invalid)"&gt;leewillis77&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's possibly to just use htmlentities(), and not use esc_attr() at all
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just to clarify, it's htmlspecialchars().  If you need help with this, please see the support forums.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32556 (Clarify behaviour of esc_attr() with respect to HTML entities) closed</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 03 Jun 2015 03:31:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32556#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32556#comment:1/1433302317568809</guid>
      <description>invalid: &lt;p&gt;
htmlspecialchars() does what you want and will run faster anyway.  There is no bug here.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32558 (More compact handling of the filter bar on small screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 03:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32558#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32558#comment:2/1433300898322249</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1433300896000325"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21523 (Add additional escaping to credit.php) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Wed, 03 Jun 2015 02:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21523#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21523#comment:14/1433298208078699</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Will review this weekend, unless someone else gets to it first.
&lt;/p&gt;
&lt;p&gt;
Early Review Re-Assignment: Open
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32557 (programming error found inside wp_print_scripts function ...) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Wed, 03 Jun 2015 02:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32557#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32557#comment:6/1433297833602680</guid>
      <description>&lt;p&gt;
This is an issue possibly caused by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20513" title="#20513: enhancement: Refactor $wp_scripts init checking code (closed: fixed)"&gt;#20513&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29993 (Media action links are cramped on small screens) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 02:14:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29993#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29993#comment:22/1433297663543769</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Lots of changes in list tables happening, so I refreshed/riffed on @bradt's patch to get us moving again. I didn't add a breakpoint in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29993/29993.4.diff" title="Attachment '29993.4.diff' in Ticket #29993"&gt;29993.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29993/29993.4.diff" title="Download"&gt;​&lt;/a&gt;, which we can do. Before we go there though, here's where the patch puts us at 320px wide in English. Note that there are more changes needed for accessibility (see related tickets) and more will come for better responsive list tables, which conveniently this better enables.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://s.hyhs.me/bXUz/image.png"&gt;&lt;img src="http://s.hyhs.me/bXUz/image.png" alt="http://s.hyhs.me/bXUz/image.png" crossorigin="anonymous" title="http://s.hyhs.me/bXUz/image.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29993.4.diff attached to Ticket #29993</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 02:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29993/29993.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29993/29993.4.diff/1433297507250768</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31258 (SVG replaced by default image in media library) closed</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Wed, 03 Jun 2015 02:07:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31258#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31258#comment:12/1433297245321632</guid>
      <description>invalid: &lt;p&gt;
Per &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/24251" title="#24251: enhancement: Reconsider SVG inclusion to get_allowed_mime_types (reopened)"&gt;#24251&lt;/a&gt; WordPress will continue not allowing SVG uploads by default. Therefore, adjusting WordPress to support SVGs internally remains in plugin territory, and as such, closing as invalid.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) closed</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Wed, 03 Jun 2015 02:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:27/1433297114925640</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24251#comment:26" title="Comment 26"&gt;LewisCowles&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Oh one other thing @iandunn, the core not only allows download and upload of PHP scripts (although not to the media gallery), but editing of plugins and themes, despite it being a horrible security risk, and encouraging poor habits!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The massive difference between plugins and theme upload, and image upload, is permissions. While yes, you can upload a plugin which contains insecure PHP, users can only do that with very specific, high level permissions, which by default are not granted to new users, only to people who are managing the site. Editing a plugin/theme isn't a security risk, as its restricted to just users who have administrator or above permissions. And if you want to turn that off, WordPress provides many ways to do that (constants, removing permissions from roles, removing ability to view page without a custom capability, etc)
&lt;/p&gt;
&lt;p&gt;
However, the media manager is used by those who can add content to the site (like authors), who might not have the ability to upload plugins (the author or contributor role).
&lt;/p&gt;
&lt;p&gt;
SVG file security isn't some obscure bug. There's multiple, well known SVG vulnerabilities. It isn't a theory, an obscurity, or an unknown. There are well over 8,000 logged CVE's that have to do with all sorts of fun and obscure SVG file security vulnerabilities.
&lt;/p&gt;
&lt;p&gt;
The things that SVGs let you do may be a feature and are there by design, but that doesn't make them any less of a security risk. SVGs are inherently dangerous by design. As a CMS or as an application layer, WordPress's job is to ensure a level of security on a site. SVGs are simply too dangerous to allow. That being said, if you'd like to try to mitigate all of the security issues from SVGs and allow them to be uploaded on your site, you're more than welcome to try and write and release a plugin to do so. WordPress has filters on the allowed mime types that you can utilize to do this.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24251#comment:25" title="Comment 25"&gt;LewisCowles&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
and as I understand it from the W3C, could affect many taggable file formats accepting script tags, or javascript, and data uri's, css files linking SVG from external resources could be a bigger risk (so HTML, xhtml, CSS and ironically JS, are also potential candidates for such hacks, and they are not banned).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And that's a terrible example, as you cannot upload HTML, Javascript or CSS files from the media manager. Nor can you edit themes or plugins without having administrator level access to the site.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24251#comment:22" title="Comment 22"&gt;LewisCowles&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Bugs are softwae behaving in a way that is not expected. When I try to upload an SVG file, I expect it to upload. If it is invalid it is unreasonable of the author or distributor to think this is a WordPress issue. If I type script tags int an SVG and WordPress removes them without me asking it to, it is therefore unexpected and a bug!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And when I turn on my computer, I expect my toaster to walk over to my bread and instantly (an automatically) make me toast. Since it does not do that, that's a software bug in my toaster.
&lt;/p&gt;
&lt;p&gt;
A software bug is where the software does something that which is unintended of it's design. It has nothing to do with user expectations. Just because, as a user, I expect a car should fly over buildings to get me from A to B faster, it doesn't mean that the onboard navigation software will do that, or be designed to do that. I might really really want it to do that (I do) and I might really hate that it doesn't do that (I do) but that doesn't make it a software bug. The software does exactly what it is intended to do, which is navigation.
&lt;/p&gt;
&lt;p&gt;
WordPress allows certain files types to be uploaded via the media manager, and does not allow any files to be uploaded that aren't of those types. Blocking the upload of files that are not allowed is not a bug, it is the design of the software, and contrary to what users may or may not think, it is doing exactly what it is designed to due (and therefore by definition not a bug).
&lt;/p&gt;
&lt;p&gt;
WordPress needs to be secure, by default, for all users. SVG uploads via the media manager will not be permitted in core in their current document declaration iteration.
&lt;/p&gt;
&lt;p&gt;
Tagging as wontfix, for the same reasons nacin pointed out 2 years ago, and will probably be true for many more years.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32558 (More compact handling of the filter bar on small screens) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 02:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32558#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32558#comment:1/1433297005990793</guid>
      <description>&lt;p&gt;
I've manually added a keyword of "needs-approach" to this as an experiment, and that's exactly where this is. It needs design approach (both UI and UX) as well as testing.
&lt;/p&gt;
&lt;p&gt;
A thought from me just to get us jump started, no mockups made: use icons up by the h2 (maybe also collapsing down the upload link to an icon?), with a dedicated one for search instead of one big thing. The settings Dashicon would work quite well for filtering, I think. This carries the caveat of icons not always having universal meaning, so it would definitely require testing if we even felt it was a good idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32558 (More compact handling of the filter bar on small screens) created</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32558/1433296209636466</guid>
      <description>&lt;p&gt;
The "filter bar" takes up a lot of vertical space on narrow screens and ends up becoming a point of focus when it is more typically secondary navigation. It's used for theme install, plugin install, and both views of the media library. For themes, it is especially bad because the search input separates the feature filter toggle from the filter controls themselves.
&lt;/p&gt;
&lt;p&gt;
Screenshot:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://s.hyhs.me/baAS/image.png"&gt;&lt;img src="http://s.hyhs.me/baAS/image.png" alt="http://s.hyhs.me/baAS/image.png" crossorigin="anonymous" title="http://s.hyhs.me/baAS/image.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29993 (Media action links are cramped on small screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29993#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29993#comment:21/1433295533564161</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-flow by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-flow/p1433295528000238"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32557 (programming error found inside wp_print_scripts function ...) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32557#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32557#comment:5/1433295321653716</guid>
      <description>&lt;p&gt;
On second thought, doesn't seem like a duplicate. Reopening and moving to 4.2.3 for investigation.
&lt;/p&gt;
&lt;p&gt;
Thank you for the report.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #32541,​32557 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32541%2C32557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32541%2C32557/1433295161415663</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32541" title="#32541: defect (bug): Call to a member function do_items on a non-object ($wp_styles) (closed: fixed)"&gt;#32541&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32557 (programming error found inside wp_print_scripts function ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:31:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32557#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32557#comment:3/1433295115640173</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32557 (programming error found inside wp_print_scripts function ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:31:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32557#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32557#comment:2/1433295060230395</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32557 (programming error found inside wp_print_scripts function ...) updated</title>
      
        <dc:creator>seeyouu</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32557#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32557#comment:1/1433294272637262</guid>
      <description>&lt;p&gt;
Sorry, copied a wrong like for Slider WD, here's the correct one: &lt;a class="ext-link" href="https://wordpress.org/plugins/slider-wd/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/slider-wd/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>m7csat</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:14:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:33/1433294070976267</guid>
      <description>&lt;p&gt;
Just wanted to add my thanks! Solved my frustrations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32557 (programming error found inside wp_print_scripts function ...) created</title>
      
        <dc:creator>seeyouu</dc:creator>

      <pubDate>Wed, 03 Jun 2015 01:12:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32557/1433293952907845</guid>
      <description>&lt;p&gt;
Dear Sir/Mdm,
&lt;/p&gt;
&lt;p&gt;
I'd recently installed a slider plugin called Slider WD &lt;a class="ext-link" href="https://wordpress.org/plugins/slider-wd/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/slider-wd/&lt;/a&gt; into my wordpress version 4.2.2, and i found a problem which i can't add image into my slider.
&lt;/p&gt;
&lt;p&gt;
Once clicked "Add Image" button, it will show that Fatal error occured at wp-includes/functions.wp-scripts.php line 85, do_items is referred to a non-object.
&lt;/p&gt;
&lt;p&gt;
I did further study about the script and i found that probably a programming error under wp_print_scripts function which caused this issue.
&lt;/p&gt;
&lt;p&gt;
Below are the comparison of the same function under different version
version 4.2.2:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_print_scripts( $handles = false ) {
	/**
	 * Fires before scripts in the $handles queue are printed.
	 *
	 * @since 2.1.0
	 */
	do_action( 'wp_print_scripts' );
	if ( '' === $handles ) { // for wp_head
		$handles = false;
	}
	_wp_scripts_maybe_doing_it_wrong( __FUNCTION__ );
	global $wp_scripts;
	if ( ! ( $wp_scripts instanceof WP_Scripts ) ) {
		if ( ! $handles ) {
			return array(); // No need to instantiate if nothing is there.
		}
	}
	return wp_scripts()-&amp;gt;do_items( $handles );
}
&lt;/pre&gt;&lt;p&gt;
Version 4.0.2:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_print_scripts( $handles = false ) {
	/**
	 * Fires before scripts in the $handles queue are printed.
	 *
	 * @since 2.1.0
	 */
	do_action( 'wp_print_scripts' );
	if ( '' === $handles ) // for wp_head
		$handles = false;
	global $wp_scripts;
	if ( ! is_a( $wp_scripts, 'WP_Scripts' ) ) {
		if ( ! did_action( 'init' ) )
			_doing_it_wrong( __FUNCTION__, sprintf( __( 'Scripts and styles should not be registered or enqueued until the %1$s, %2$s, or %3$s hooks.' ),
				'&amp;lt;code&amp;gt;wp_enqueue_scripts&amp;lt;/code&amp;gt;', '&amp;lt;code&amp;gt;admin_enqueue_scripts&amp;lt;/code&amp;gt;', '&amp;lt;code&amp;gt;login_enqueue_scripts&amp;lt;/code&amp;gt;' ), '3.3' );
		if ( !$handles )
			return array(); // No need to instantiate if nothing is there.
		else
			$wp_scripts = new WP_Scripts();
	}
	return $wp_scripts-&amp;gt;do_items( $handles );
}
&lt;/pre&gt;&lt;p&gt;
under the condition if ( !$handles ), there's an else statement $wp_scripts = new WP_Scripts(); in version 4.0.2, however, version 4.2.2, this statement is missing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32553 (Corrupted embeds) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 03 Jun 2015 00:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32553#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32553#comment:3/1433290286648093</guid>
      <description>&lt;p&gt;
You could try a plugin that logs external HTTP calls to see what it's getting back - Cron Control does it (have to turn on a module or two), I'm sure there are others as well. Perhaps try deleting the oEmbed caches for that post, re-saving, checking what's in the DB, and seeing what got logged.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31326 (Edit comment screen: misplaced-missing labels) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 02 Jun 2015 23:51:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31326#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31326#comment:26/1433289093234625</guid>
      <description>&lt;p&gt;
Why is the CSS so specific? Seems like the type of thing that should be quite generic to form elements. The wide spacing was noted in the screen sweep the UI team is currently doing, so it will be good to fix that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Tue, 02 Jun 2015 22:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:26/1433283699155676</guid>
      <description>&lt;p&gt;
Oh one other thing @iandunn, the core not only allows download and upload of PHP scripts (although not to the media gallery), but editing of plugins and themes, despite it being a horrible security risk, and encouraging poor habits!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Tue, 02 Jun 2015 22:18:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:25/1433283505902036</guid>
      <description>&lt;p&gt;
Hello @jimmy.smutek &amp;amp; @iandunn,
&lt;/p&gt;
&lt;p&gt;
For clarity @jimmy.smutek I have a plugin written that accomplishes adding SVG including allowing upload and selection via customiser, it was the first thing I did with a view to SVG support. If you google CSS-Tricks SVG you will find the post quickly with a link to the gist.
&lt;/p&gt;
&lt;p&gt;
Unlike my other plugins, I do not feel it is right that SVG is considered a site-specific / ecosystem-specific use-case. In 2015 it is an absolute horror that something, as widely used as WP, uses such old and limited file-format support.
&lt;/p&gt;
&lt;p&gt;
For clarity with @iandunn, you clearly do not understand the supposed security risk being talked about fully. This is not a file-system bug or privilege escalation, or SQL hack. It affects more than just SVG as a domain, and as I understand it from the W3C, could affect many taggable file formats accepting script tags, or javascript, and data uri's, css files linking SVG from external resources could be a bigger risk (so HTML, xhtml, CSS and ironically JS, are also potential candidates for such hacks, and they are not banned).
&lt;/p&gt;
&lt;p&gt;
In short what this is, represents a series of ill-informed people, supposing obscure security risks, which can be mitigated with even the most half-witted security policies, whilst WP allows users to use charsets with much more realistic potential risk to a WP install.
&lt;/p&gt;
&lt;p&gt;
Also because these are front-end hacks being spoken about, unless you are on a page with the linked SVG, allow users that are untrustworthy to use your WP, upload files etc, your visitors would not be at risk; it would be simple to mitigate, and it would not affect the backend, without significant intervention from an admin-level user.
&lt;/p&gt;
&lt;p&gt;
There is another plugin, I am told will be updated using some of my code that also handles the SVG sanitization process for paranoid users. If you have CPU cycles to waste and untrustworthy users, feel free to use it. Personally, I think detection as part of a compliance framework, and autiting + remittance is a better fix for potential security issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32434.2.patch attached to Ticket #32434</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 02 Jun 2015 22:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32434/32434.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32434/32434.2.patch/1433282859177268</guid>
      <description>&lt;p&gt;
Re-adds users column to show user count, &lt;a class="ext-link" href="https://cloudup.com/cTY5sqDxuzg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cTY5sqDxuzg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32556 (Clarify behaviour of esc_attr() with respect to HTML entities) created</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Tue, 02 Jun 2015 22:05:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32556</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32556/1433282753831756</guid>
      <description>&lt;p&gt;
I've just come across this, and would welcome some info on what the *right* thing is to do here. For background, also see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25485" title="#25485: defect (bug): Why does esc_attr not double encode entities by default? (closed: invalid)"&gt;#25485&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Currently, I have a string:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Next Events &amp;lt;span&amp;gt;&amp;amp;raquo;&amp;lt;/span&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I want to place this into the value of an INPUT tag. I was using esc_attr(), e.g.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;input value="&amp;lt;?php echo esc_attr( $string ); ?&amp;gt;"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
That results in an INPUT field that displays as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Next Events &amp;lt;span&amp;gt;»&amp;lt;/span&amp;gt;
&lt;/pre&gt;&lt;p&gt;
IE - the &amp;amp;raquo; has been converted to » rather than &amp;amp;amp;raquo; which is what is desired, to make the input box display as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Next Events &amp;lt;span&amp;gt;&amp;amp;raquo;&amp;lt;/span&amp;gt;
&lt;/pre&gt;&lt;p&gt;
So, I assumed that I should be able to encode the entity myself, and then apply esc_attr() since esc_attr() advertises that it "will never double encode entities" (&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/esc_attr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/esc_attr&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
However, beyond "not double-encoding entities", what esc_attr() actually does is normalize any entities - even if they've previously been deliberately encoded. This seems like a bug if not in the function, then in the documentation, but I'm not sure what the *right* thing to do is here?
&lt;/p&gt;
&lt;p&gt;
It's possibly to just use htmlentities(), and not use esc_attr() at all, but that feels like I might be missing out on some additional protection afforded by esc_attr(). Any guidance welcome.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21523 (Add additional escaping to credit.php) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 02 Jun 2015 21:17:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21523#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21523#comment:13/1433279846697778</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21523#comment:12" title="Comment 12"&gt;gtuk&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21523#comment:11" title="Comment 11"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
What is the next part of the workflow if i'm the owner of this ticket now?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Assigning the ticket to you just has the effect of moving the ticket off of the "Unclaimed" list on the &lt;a href="https://core.trac.wordpress.org/tickets/good-first-bugs"&gt;good-first-bug report&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
At this point, you'd wait for developer feedback on your patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31441.5.patch attached to Ticket #31441</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Tue, 02 Jun 2015 21:13:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31441/31441.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31441/31441.5.patch/1433279639397048</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>32425.1.patch attached to Ticket #32425</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 02 Jun 2015 21:03:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32425/32425.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32425/32425.1.patch/1433278985514917</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>jimmy.smutek</dc:creator>

      <pubDate>Tue, 02 Jun 2015 21:02:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:24/1433278938982534</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24251#comment:23" title="Comment 23"&gt;iandunn&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you want to take on the responsibility of handling the security issues, then there's nothing stopping you from just enabling SVG uploads via a simple filter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unless you also want to upload SVG via customizer, for example, to allow the option to upload an SVG logo.
&lt;/p&gt;
&lt;p&gt;
Even when SVG mime types are added, customizer still will not allow SVG, right? (See also, &lt;a href="https://core.trac.wordpress.org/ticket/29521"&gt;#29521&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32547 (New Theme Feature: Sidebar Width) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:55:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32547#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32547#comment:3/1433278505923426</guid>
      <description>&lt;p&gt;
This seems like a pretty presumptive feature - exactly one sidebar? What is a sidebar other than a term for a layout element that these days can shift around and/or be flexible in width? How useful is content width right now, exactly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14172 (Implement $scheme in site info in ms-sites edit site) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:54:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14172#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14172#comment:11/1433278467919341</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1433278466000379"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32450 (WP_Site class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32450#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32450#comment:5/1433278405188534</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1433278402000377"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31985 (WP_Network class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:53:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31985#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31985#comment:18/1433278404990014</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1433278402000377"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30202 (In multisite, the "storage space used" is incorrectly calculated for ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:46:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30202#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30202#comment:11/1433277965382217</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31985 (WP_Network class) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31985#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31985#comment:17/1433277805915409</guid>
      <description>&lt;p&gt;
Leaving a note per a &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1433277530000343"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;comment from @ocean90&lt;/a&gt;, &lt;code&gt;wp_get_network()&lt;/code&gt; no longer returns &lt;code&gt;false&lt;/code&gt; if a network is not found. &lt;code&gt;__construct()&lt;/code&gt; should probably account for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:41:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:23/1433277675271807</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24251#comment:22" title="Comment 22"&gt;LewisCowles&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is a feature, not a bug, that SVG's with script tags can be uploaded, and it should be incumbent on site owners and contributors to see that authorized accessors of their installation of WordPress does not do such things.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By that logic, Core should also allow users to upload PHP scripts.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="ext-link" href="https://wordpress.org/about/philosophy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;majority&lt;/a&gt; of site admins aren't going to be aware of SVG security issues, let alone know how to protect against them.
&lt;/p&gt;
&lt;p&gt;
If you want to take on the responsibility of handling the security issues, then there's nothing stopping you from just enabling SVG uploads via a simple filter.
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Bugs are softwae behaving in a way that is not expected. When I try to upload an SVG file, I expect it to upload.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Users will also (rightfully) expect WordPress to be secure by default; they won't expect that, in order to not get hacked, they have to learn about esoteric security issues, and then go through their site disabling things that are on by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30202 (In multisite, the "storage space used" is incorrectly calculated for ...) updated</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30202#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30202#comment:10/1433277190968635</guid>
      <description>&lt;p&gt;
Ah, the diff on &lt;a class="missing attachment"&gt;320202.1.diff&lt;/a&gt; is kinda messy to read. I probably shouldn't have made the whitespace changes inside the &lt;code&gt;get_dirsize()&lt;/code&gt; and &lt;code&gt;recurse_dirsize()&lt;/code&gt; functions. I'll add another patch with just the necessary functional changes if needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32503 (Remove the "Update siteurl and home as well" checkbox option on ...) updated</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32503#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32503#comment:13/1433277051683128</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32503#comment:12" title="Comment 12"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This uses http for the protocol for the values from wp_blogs because it's closest to the current functionality.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So if either home or siteurl are changed to https, then it would be unchecked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unchecked or unchanged? Or both? That may be part of a bigger issue, though, https and Multisite is weird to begin with (I had to edit the DB to get https for one site on the network). I would want &lt;a class="ext-link" href="https://old.domain.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://old.domain.com&lt;/a&gt; to turn into &lt;a class="ext-link" href="https://new.domain.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://new.domain.com&lt;/a&gt; after all.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The box is unchecked when you load the page if either has an https value. If you were to check it and click save, it will reset both of the values to http.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32503 (Remove the "Update siteurl and home as well" checkbox option on ...) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:12:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32503#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32503#comment:12/1433275952324622</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This uses http for the protocol for the values from wp_blogs because it's closest to the current functionality.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So if either home or siteurl are changed to https, then it would be unchecked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unchecked or unchanged? Or both? That may be part of a bigger issue, though, https and Multisite is weird to begin with (I had to edit the DB to get https for one site on the network). I would want &lt;a class="ext-link" href="https://old.domain.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://old.domain.com&lt;/a&gt; to turn into &lt;a class="ext-link" href="https://new.domain.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://new.domain.com&lt;/a&gt; after all.
&lt;/p&gt;
&lt;p&gt;
32503.1.diff​ works fine on my tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32434.patch attached to Ticket #32434</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32434/32434.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32434/32434.patch/1433275651897905</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30202 (In multisite, the "storage space used" is incorrectly calculated for ...) updated</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30202#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30202#comment:9/1433275559816057</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30202/30202.tests.diff" title="Attachment '30202.tests.diff' in Ticket #30202"&gt;30202.tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30202/30202.tests.diff" title="Download"&gt;​&lt;/a&gt; is some tests for &lt;code&gt;get_space_used()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30202/30202.1.diff" title="Attachment '30202.1.diff' in Ticket #30202"&gt;30202.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30202/30202.1.diff" title="Download"&gt;​&lt;/a&gt; adds in some additional checks to prevent caching or serving a cached value when the exclude parameter is passed unless it is on the main site. This way we don't end up with incorrect values.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32503 (Remove the "Update siteurl and home as well" checkbox option on ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:05:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32503#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32503#comment:11/1433275523582676</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1433275519000268"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32434 (Network Admin: Improve the default columns in the MS Sites List Table) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:05:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32434#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32434#comment:6/1433275523170388</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1433275519000268"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22383 (Combine Domain and Path UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22383#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22383#comment:36/1433275522786812</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1433275519000268"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30202.1.diff attached to Ticket #30202</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30202/30202.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30202/30202.1.diff/1433275444521918</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>30202.tests.diff attached to Ticket #30202</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Tue, 02 Jun 2015 20:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30202/30202.tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30202/30202.tests.diff/1433275306650576</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>32555-preview.png attached to Ticket #32555</title>
      
        <dc:creator>GregLone</dc:creator>

      <pubDate>Tue, 02 Jun 2015 19:21:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32555/32555-preview.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32555/32555-preview.png/1433272864782252</guid>
      <description>&lt;p&gt;
Preview before/after
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32555 (TinyMCE should have a lang attribute) created</title>
      
        <dc:creator>GregLone</dc:creator>

      <pubDate>Tue, 02 Jun 2015 19:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32555</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32555/1433272801542277</guid>
      <description>&lt;p&gt;
Hello.
&lt;/p&gt;
&lt;p&gt;
When we use &lt;code&gt;add_editor_style()&lt;/code&gt;, we try to reproduce front styles in the editor. But there's at least one CSS property that can't be reproduced right now, it's &lt;code&gt;hyphens&lt;/code&gt;.
To work, this property needs a lang attribute on a wrapping tag somewhere.
&lt;/p&gt;
&lt;p&gt;
So far I managed to add it by creating a TinyMCE plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;tinymce.PluginManager.add( "langattribute", function( editor ) {
	editor.on( "init", function() {
		if ( window.mejsL10n &amp;amp;&amp;amp; window.mejsL10n.language ) {
			editor.getBody().setAttribute( "lang", window.mejsL10n.language );
		}
	} );
} );
&lt;/pre&gt;&lt;p&gt;
It's a bit hacky because I use a MediaElement.js var but it works. I'm sure there's a better way though.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31904 (Images added to gallery from media library is not viewed on the site) updated</title>
      
        <dc:creator>gtuk</dc:creator>

      <pubDate>Tue, 02 Jun 2015 18:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31904#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31904#comment:1/1433271423091804</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31904" title="#31904: defect (bug): Images added to gallery from media library is not viewed on the site (closed: worksforme)"&gt;alfredvaa&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is what I found out:
&lt;/p&gt;
&lt;p&gt;
I had an existing page with an existing gallery in.
&lt;/p&gt;
&lt;p&gt;
I used the media library feature to upload an image (not while editing the gallery). After that, I edited the gallery and added the uploaded images. In the edit-post-frame, the gallery was viewed with the new images, but if I updated the post and viewed it from the user perspective, those images uploaded with the media library was not visible.
&lt;/p&gt;
&lt;p&gt;
I also tried to upload the same images in gallery-edit mode and then, those became visible (so there is nothing wrong with the image files). I was also able to add more images to the gallery and if I added them from gallery-edit-mode, those became visible as they should.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not able to reproduce this bug with the latest wordpress release.
Which wordpress version do you use?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21523 (Add additional escaping to credit.php) updated</title>
      
        <dc:creator>gtuk</dc:creator>

      <pubDate>Tue, 02 Jun 2015 18:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21523#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21523#comment:12/1433269606007062</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21523#comment:11" title="Comment 11"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
What is the next part of the workflow if i'm the owner of this ticket now?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32250 (Ability to get_users() who have published posts) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 02 Jun 2015 18:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32250#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32250#comment:19/1433269237757604</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32685" title="Add `@since` entry for 'has_published_post' argument of ..."&gt;32685&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add &lt;code&gt;@since&lt;/code&gt; entry for 'has_published_post' argument of &lt;code&gt;WP_User_Query&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Mega-props DrewAPicture.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32250" title="#32250: enhancement: Ability to get_users() who have published posts (closed: fixed)"&gt;#32250&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [32685]: Add `@since` entry for 'has_published_post' argument of ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 02 Jun 2015 18:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/32685</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/32685/1433269236088176</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;@since&lt;/code&gt; entry for 'has_published_post' argument of &lt;code&gt;WP_User_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Mega-props DrewAPicture.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32250" title="#32250: enhancement: Ability to get_users() who have published posts (closed: fixed)"&gt;#32250&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32493 (Customizer: Improve accessibility of sliding panels) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 18:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32493#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32493#comment:6/1433268707349165</guid>
      <description>&lt;p&gt;
About the Customizer "collapse sidebar" link, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31201" title="#31201: defect (bug): Collapse &amp;amp; expand link in Customizer needs a better focus style (closed: fixed)"&gt;#31201&lt;/a&gt;. Additionally, that link should be a button and its text/title attribute should be updated depending on the collapsed/expanded status. Maybe remove the title attribute.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31201 (Collapse &amp; expand link in Customizer needs a better focus style) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 18:07:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31201#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31201#comment:7/1433268473534609</guid>
      <description>&lt;p&gt;
Quickly tested the patch, I like the focus style should be applied to the focus state though. Currently it targets just &lt;code&gt;:hover&lt;/code&gt;. One thing to consider is that some themes use background colors or background images and depending on the color/image used, viewport size, etc. the link might be less noticeable, see example below. I don't have a strong opinion about a way to prevent this, maybe just make the grey a bit darker?
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/9VZPlE24yL.png"&gt;&lt;img src="https://cldup.com/9VZPlE24yL.png" alt="https://cldup.com/9VZPlE24yL.png" crossorigin="anonymous" title="https://cldup.com/9VZPlE24yL.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Side note: from an accessibility point of view this link should be a button but this is out of the scope of this ticket, will open a new separate ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>mdwheele</dc:creator>

      <pubDate>Tue, 02 Jun 2015 17:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:10/1433267997241740</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28216#comment:9" title="Comment 9"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
OK, I don't have any problem with the proposed change. Can you put together a patch, including unit tests?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it's not against contribution standards for me to do so, I can prepare a patch for this feature. I found this ticket in the process of looking to fix the same issue myself.
&lt;/p&gt;
&lt;p&gt;
To expand upon the use-case for this being made-available to core, I have an example:
&lt;/p&gt;
&lt;p&gt;
I maintain a set of microservices where I work that are responsible for serving HR and Student data as well as other use-cases. For this particular use-case, we have a service responsible for providing query capabilities for a University job-board. This is exposed as a JSON API and I have also written packages around that API for PHP-consumption. All this leads to... the implementation of a client that talks to that API conforms to a known interface and I want to make a WordPress widget that depends on that client interface to query the job board. I maintain a package written in PHP for querying this API to be used by web applications and other PHP clients. Taking advantage of this package in a WordPress widget or plugin should be a simple matter of wiring-only. Not a lot of custom logic and if there IS any, it's simple UI / WordPress-focused branching.
&lt;/p&gt;
&lt;p&gt;
The biggest reason for wanting DI support for things like Widgets is that I can treat the widgets as simple-wiring of my own services into WordPress. I treat Plugins exactly the same; simple-wiring of a domain model into WordPress. Therefore, when I test, my focus is on a WordPress-agnostic domain model. When I write integration tests with WordPress and my custom model, I'm making sure that when a widget is "booted" it calls the right methods on my services. I do not necessarily care to invoke my services as part of that test... I just want to have spies tell me if things aren't called as expected.
&lt;/p&gt;
&lt;p&gt;
This can certainly be achieved through setter-injection, but is more conventional to implement through constructor injection. More importantly, constructor injection FIRMLY declares that X widget wiring has a dependency on some service layer. Setter injection does not do so explicitly. In addition (and probably more importantly, as @Denis-de-Bernardy said), injecting as described above requires a client to intimately understand not-only my Widget and its internal dependencies to be able to inject, but also must intimately be aware of WordPress internals, side-stepping the Core's framework for registration of Widgets. If that ever changed, clients would be broken. It is always preferable for clients to be able to rely on a stable abstraction.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Anywho...&lt;/strong&gt; I typed all that out just to give a more in-depth use-case than we currently had. Also, I've made the changes to enable this and would GLADLY contribute upstream.. However, this would be my first contribution to core and I wanted to make sure it was cool for a sideline observer to send code for someone elses Trac ticket! :)
&lt;/p&gt;
&lt;p&gt;
Thanks all!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31326 (Edit comment screen: misplaced-missing labels) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Tue, 02 Jun 2015 17:59:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31326#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31326#comment:25/1433267970340919</guid>
      <description>&lt;p&gt;
I like this solution, simple and clean.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32493 (Customizer: Improve accessibility of sliding panels) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 17:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32493#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32493#comment:5/1433267138343509</guid>
      <description>&lt;p&gt;
About the widgets panel, see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/28888" title="#28888: defect (bug): Customizer - Widgets - Screen Readers Don't Announce Widget Names (assigned)"&gt;#28888&lt;/a&gt; still waiting for a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28888 (Customizer - Widgets - Screen Readers Don't Announce Widget Names) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 17:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28888#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28888#comment:8/1433267037808039</guid>
      <description>&lt;p&gt;
Reviewed a bit and here's how Firefox+NVDA read out the active widgets:
&lt;/p&gt;
&lt;pre class="wiki"&gt;when arrowing:
clickable clickable link   &amp;lt;-- the non-focusable clickable draggable heading and the link together
heading  level 4 Calendar  &amp;lt;-- the heading with the widget name
when tabbing:
clickable clickable link   &amp;lt;-- the focusable link is empty
&lt;/pre&gt;&lt;p&gt;
There's room for improvement :)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the toggle link should be a button, the JavaScript part should be updated (no keydown if any, and no preventDefault needed)
&lt;/li&gt;&lt;li&gt;should have an aria attribute aria-expanded to be dynamically updated
&lt;/li&gt;&lt;li&gt;should have some screen reader text to say what it does: "Edit {widget name} widget" and when expanded "Close {widget name} widget"
&lt;/li&gt;&lt;li&gt;the "Remove" and "Close" links should be buttons
&lt;/li&gt;&lt;li&gt;looks like the "search as you type" searches on each keystroke. Should really try to detect when users actually end typing. See for example what was done for the Themes search using &lt;code&gt;_.debounce&lt;/code&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26600" title="#26600: defect (bug): Search installed themes input has no submit button (closed: fixed)"&gt;#26600&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31812" title="#31812: defect (bug): Remove excess debounce + bind calls (closed: fixed)"&gt;#31812&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;the "Remove" label: it says "Remove" and has a title attribute &lt;code&gt;"Trash widget by moving it to the inactive widgets sidebar."&lt;/code&gt; So is it removing, trashing, or moving? What is the "widgets sidebar" in the Customizer context? Bit confusing and doesn't explain the most important thing: settings/content will be preserved.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Agreed would need someone to take over and create a patch. Patchers welcome!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21523 (Add additional escaping to credit.php) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 02 Jun 2015 17:40:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21523#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21523#comment:11/1433266826566123</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32250 (Ability to get_users() who have published posts) reopened</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 02 Jun 2015 17:39:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32250#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32250#comment:18/1433266792576276</guid>
      <description>&lt;p&gt;
We'll also need a changelog entry in the DocBlock for the new parameter, please :)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #32493 (Customizer: Improve accessibility of sliding panels) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 16:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32493#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32493#comment:4/1433262292679932</guid>
      <description>&lt;p&gt;
I'd propose to investigate about the controls descriptions. Currently, they're &lt;em&gt;inside&lt;/em&gt; the label element, see screenshot. Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31540" title="#31540: enhancement: Dropdown pages Customizer description option (closed: fixed)"&gt;#31540&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/cgetk_WbNT.png"&gt;&lt;img src="https://cldup.com/cgetk_WbNT.png" alt="https://cldup.com/cgetk_WbNT.png" crossorigin="anonymous" title="https://cldup.com/cgetk_WbNT.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31540 (Dropdown pages Customizer description option) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 16:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31540#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31540#comment:5/1433262097420535</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While I agree that for consistency also the &lt;code&gt;dropdown-pages&lt;/code&gt; control should have a description, I'm going to remove the accessibility focus. This control does have a label and this is the most important thing from an accessibility point of view. Feel free to add the keyword again if I'm missing something.
&lt;/p&gt;
&lt;p&gt;
The description is currently used to "expand" the label text. I'm not sure having this expanded text (wich may be very long) &lt;em&gt;inside&lt;/em&gt; the label element is a good thing for semantics. See screenshot below. Labels should be very short. Expanded descriptions should be &lt;em&gt;after&lt;/em&gt; the form element. By the way this is out of this ticket scope and affects all the controls. WIll report in a separate ticket.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/cgetk_WbNT.png"&gt;&lt;img src="https://cldup.com/cgetk_WbNT.png" alt="https://cldup.com/cgetk_WbNT.png" crossorigin="anonymous" title="https://cldup.com/cgetk_WbNT.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32493 (Customizer: Improve accessibility of sliding panels) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 15:56:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32493#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32493#comment:3/1433260597946035</guid>
      <description>&lt;p&gt;
One of the main accessibility issues in the Customizer is about sliding panels. When they're out of view they're just... "out of view" but they're not really hidden to assistive technologies and their content is still readable. It's also possible to tab through the ouf-of-view focusable element and activate them pressing Enter. Please refer to the screenshot below, it's the Menu Customizer, currently under development:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/TDo-MXsI1d.png"&gt;&lt;img src="https://cldup.com/TDo-MXsI1d.png" alt="https://cldup.com/TDo-MXsI1d.png" crossorigin="anonymous" title="https://cldup.com/TDo-MXsI1d.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here you can clearly see that after the "Social Links Menu" control, it's actually possible to keep tabbing and focus all the controls that are inside the following out-of-view panels. This happens also when using arrows to read content, as screen reader users normally do.
In the same way, it's possible to read and focus out-of-view content placed &lt;em&gt;before&lt;/em&gt; the currently visible panel.
It's a big issue also for keyboard users, it's easy to understand how easily users may lose context and get lost.
&lt;/p&gt;
&lt;p&gt;
The same issue occurred for Press This during the 4.2 release cycle. The solution was:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Slide out: detect when the animation completes and then completely hide the out-of-view content with &lt;code&gt;display: none&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Slide in: remove &lt;code&gt;display: none&lt;/code&gt; and then start the animation.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If focus is programmatically moved from one panel to another panel, this should happen at the end of the animation.
&lt;/p&gt;
&lt;p&gt;
Worth asking @azaozz and @michaelarestad who brilliantly handled this development. Since this is already done and already in core, maybe the best thing to do would be abstract it a bit and use it as a general utility method available in the admin. Any thoughts more than welcome.
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30599" title="#30599: defect (bug): media views: improve keyboard accessibility avoiding confusing tab stops (closed: fixed)"&gt;#30599&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32110 ("Shiny" plugin updates not working when I try run mulitple updates at ...) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Tue, 02 Jun 2015 15:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32110#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32110#comment:11/1433260018944725</guid>
      <description>&lt;p&gt;
VVV is more or less just a VM running on my local machine.  OSX networking is passed through to the VM.  So when I disable wifi in OSX, it also disconnects internet access to the VM.  I believe I'm following the same steps you are, but am seeing different results.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32470 (Abstracting the Widget Classes) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Tue, 02 Jun 2015 15:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32470#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32470#comment:26/1433259906450863</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32470#comment:25" title="Comment 25"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the explanation @jacobsantos. I'm starting to see better where you are going with this. I can grasp how this will improve the testability of the API. And I can also see now that you're not actually trying to rewrite the entire API, just to refactor &lt;code&gt;WP_Widget&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, my next patch will go into refactoring more of the widgets.php file. I think I will create a new ticket for that as it is outside the scope of &lt;code&gt;WP_Widget&lt;/code&gt;. I think there are other areas in WP_Widget that could be further refactored. I'm unsure how to proceed with this ticket. Given its scope, I was thinking about using the interfaces and testing for it, sort of how I shown in my previous example.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ultimately it is the same thing as @welcher proposed in terms of scope, but you are reducing the complexity of the &lt;code&gt;WP_Widget&lt;/code&gt; class itself, rather than increasing it. This actually gives us more freedom to reduce duplication across the widgets because we won't be tied to having just one all-encompassing abstraction in &lt;code&gt;WP_Widget&lt;/code&gt;, we can have several different flavors of widget that implement these interfaces.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is part of my goal. There are two others. The second is to reduce code within WP_Widget and other parts of widgets.php by further abstracting and refactoring the code. The final is to go in and allow for certain parts of the existing code base to be replaced. I think I put another hour or two into it last night and I'm barely there. I thought this would take a day (8 hours) and it still might, but it will be over the next couple of days.
&lt;/p&gt;
&lt;p&gt;
The difficulty is finding a pattern that exists in two or more places and creating an interface that matches that pattern. I fear that barring a simple low modification patch, it won't be accepted into core. What I'm doing is on the level of WP Meta Field changes, which might require far more red tape. Granted, I'm going to tackle a few other tickets and apply the same techniques to those as well. Perhaps more patterns will emerge that will further reduce the amount of code required.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is my prediction that if WordPress includes better OOP principles in the code, that programmers will become better object-oriented programmers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As someone who has learned PHP practices mostly from WordPress, I can say that the way I do OOP  is largely based on what WordPress does. If WordPress improves, so will I, and many others will too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think unfortunately, that WordPress is the level most programmers stop, even outside of WordPress. It takes something like Laravel to go further and see the full power of using interfaces. I think Laravel framework is a good example, because it strives to be as simple as possible, while still giving as much power as possible. I hope this is possible in WordPress, so not only would novices have an easier time, the flow of their application would allow them to further their knowledge and experience as they continue developing with WordPress.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, some of that power has to wait until PHP5.3. It is incredible how using a few generalized interfaces can change the application and the patterns it allows.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, there is a difference between growing my knowledge of OOP alongside WordPress and a newbie trying to break into WordPress development after the fact. I think if it *seems* too complex, it may discourage some people from getting in (not necessarily a bad thing, mind you). It took both me and @welcher some time to wrap our minds around it, but I think in some ways the end product will actually be simpler than what is was before, once a dev cracks the entry barrier. And, because backward compatibility will be maintained, newbies can continue to use the old approach until they better understand the new underlying API.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The question I have is the reasons behind that and how to allow for it to continue while still creating better code. My prediction is that contributors and committers won't really consider any previous design decisions and will develop their patch at their level regardless. I see that with the current stream of patches and contributions. Well, some of it might simply be preparing refactoring and may eventually abstract further, so I might be too critical at this point.
&lt;/p&gt;
&lt;p&gt;
I have experienced that as well. I think the problem is the burden of design. With WordPress there is no burden of design, because WordPress does not suffer from having a design and designer. It is a mash of code that works together. It is the hacker's dream, because everything has been hacked in. Nothing was considered from the perspective of the original author.
&lt;/p&gt;
&lt;p&gt;
As much as I would like to hope that composition would enter the mindset of plugin and theme developers, along with contributors. I don't believe it will for all. Part of the noise I'm creating is the futile attempt at saying, "Hey hey. Let's design something better." I hope that it might be better this round, but past experience has taught me that I'm better off working with my github fork.
&lt;/p&gt;
&lt;p&gt;
I think that part of it is education. Something I regret and will have to see whether it makes a difference is that I never documented the reasons for why I decided to do what I did when I did them. Something I'm attempting to do with the videos and something that needs to be added to the handbook. Provided any of my patches are actually committed to core.
&lt;/p&gt;
&lt;p&gt;
Being able to compose functions is, I think, the next step with clean code. Being able to compose objects along with functions is something I'm still experimenting with.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note: I see that you are using &lt;code&gt;static&lt;/code&gt; in &lt;code&gt;WP_Widget_Display_Adapter::factory()&lt;/code&gt;, however, WordPress still supports PHP 5.2 (not my fault :-).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was example code. I didn't want to do &lt;code&gt;new WP_Widget_Display_Adapter&lt;/code&gt;, because I don't normally develop as far back as support PHP 5.2. Not being able to use closures would be a nightmare.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32110 ("Shiny" plugin updates not working when I try run mulitple updates at ...) updated</title>
      
        <dc:creator>magicroundabout</dc:creator>

      <pubDate>Tue, 02 Jun 2015 15:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32110#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32110#comment:10/1433259682580842</guid>
      <description>&lt;p&gt;
OK. Cool. So, just to double check, when you say "Once disconnecting my connection..." - how did you go about disconnecting your connection?
&lt;/p&gt;
&lt;p&gt;
I ask because the behaviour you've described (all spinners, no updates (?), no errors) is what happens when your browser can't contact WordPress. So I'm wondering if you couldn't contact the web server on the Vagrant box?
&lt;/p&gt;
&lt;p&gt;
(I'm not hugely familiar with Vagrant so I don't know what the details of its networking are)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32110 ("Shiny" plugin updates not working when I try run mulitple updates at ...) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Tue, 02 Jun 2015 15:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32110#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32110#comment:9/1433259360615970</guid>
      <description>&lt;p&gt;
@magicroundabout -- I was testing this with a local WP instance running with VVV.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32553 (Corrupted embeds) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Tue, 02 Jun 2015 14:56:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32553#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32553#comment:2/1433256993447983</guid>
      <description>&lt;p&gt;
Strange...
&lt;/p&gt;
&lt;p&gt;
I published post on 05/21/2015 with this embedded tweet: &lt;a class="ext-link" href="https://twitter.com/ellaiseulde/status/591980282447843329"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/ellaiseulde/status/591980282447843329&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Everything was fine, but I checked this post several days later and there was only URL address with &lt;code&gt;{{unknown}}&lt;/code&gt; value in database and timestamp &lt;code&gt;1432677756&lt;/code&gt; linked to 05/26/2015.
&lt;/p&gt;
&lt;p&gt;
There are some plugins, for example bbPress, Jetpack, but nothing special. And nothing was changed during several weeks... So I am not sure what should I check?
&lt;/p&gt;
&lt;p&gt;
I also found that only some embedded tweets are corrupted, many older posts are OK. I tried to resave affected post, but tweet is still not embedded, I thought that embeds are updated when resaving post? I will try to search for any other clues, but now I am out of ideas...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25408.18.diff attached to Ticket #25408</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Tue, 02 Jun 2015 14:14:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25408/25408.18.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25408/25408.18.diff/1433254445847116</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25408 (Ability to specify that a list table column is "primary") updated</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Tue, 02 Jun 2015 14:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25408#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25408#comment:55/1433254322277200</guid>
      <description>&lt;p&gt;
&lt;code&gt;WP_List_Table::get_primary_column_name()&lt;/code&gt; is the method with the filter.
Extending classes usually implement &lt;code&gt;::get_default_primary_column_name()&lt;/code&gt;, which the above uses, so their value is filtered.
For extending classes where we do not want the column to be alterable, they should simply implement &lt;code&gt;::get_primary_column_name()&lt;/code&gt; instead.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25408/25408.18.diff" title="Attachment '25408.18.diff' in Ticket #25408"&gt;25408.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25408/25408.18.diff" title="Download"&gt;​&lt;/a&gt; implements the above proposed solution for:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;plugin list table (used for both single and multisite)
&lt;/li&gt;&lt;li&gt;multisite themes list (single doesn't implement listtables per se).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32552 (Use HTTPS for Google API external libraries) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:57:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32552#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32552#comment:1/1433253467080896</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta/p1433253465000228"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21523 (Add additional escaping to credit.php) updated</title>
      
        <dc:creator>gtuk</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:39:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21523#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21523#comment:10/1433252366736246</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [32684]: Normalize whitespace in docblock for `WP_User_Query::prepare_query()`.</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:34:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/32684</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/32684/1433252044120558</guid>
      <description>&lt;p&gt;
Normalize whitespace in docblock for &lt;code&gt;WP_User_Query::prepare_query()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32250 (Ability to get_users() who have published posts) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32250#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32250#comment:17/1433251786528816</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32683" title="Introduce `'has_published_posts'` parameter for `WP_User_Query`.
This ..."&gt;32683&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce &lt;code&gt;'has_published_posts'&lt;/code&gt; parameter for &lt;code&gt;WP_User_Query&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This allows user query results to be limited to those users who have published&lt;br /&gt;
posts in at least one of the specified post types.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joehoyle, boonebgorges.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32250" title="#32250: enhancement: Ability to get_users() who have published posts (closed: fixed)"&gt;#32250&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [32683]: Introduce `'has_published_posts'` parameter for `WP_User_Query`.  This ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/32683</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/32683/1433251784906801</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;'has_published_posts'&lt;/code&gt; parameter for &lt;code&gt;WP_User_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This allows user query results to be limited to those users who have published
posts in at least one of the specified post types.
&lt;/p&gt;
&lt;p&gt;
Props joehoyle, boonebgorges.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32250" title="#32250: enhancement: Ability to get_users() who have published posts (closed: fixed)"&gt;#32250&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32470 (Abstracting the Widget Classes) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:26:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32470#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32470#comment:25/1433251612795148</guid>
      <description>&lt;p&gt;
Thanks for the explanation @jacobsantos. I'm starting to see better where you are going with this. I can grasp how this will improve the testability of the API. And I can also see now that you're not actually trying to rewrite the entire API, just to refactor &lt;code&gt;WP_Widget&lt;/code&gt;. Ultimately it is the same thing as @welcher proposed in terms of scope, but you are reducing the complexity of the &lt;code&gt;WP_Widget&lt;/code&gt; class itself, rather than increasing it. This actually gives us more freedom to reduce duplication across the widgets because we won't be tied to having just one all-encompassing abstraction in &lt;code&gt;WP_Widget&lt;/code&gt;, we can have several different flavors of widget that implement these interfaces.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is my prediction that if WordPress includes better OOP principles in the code, that programmers will become better object-oriented programmers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As someone who has learned PHP practices mostly from WordPress, I can say that the way I do OOP  is largely based on what WordPress does. If WordPress improves, so will I, and many others will too. However, there is a difference between growing my knowledge of OOP alongside WordPress and a newbie trying to break into WordPress development after the fact. I think if it *seems* too complex, it may discourage some people from getting in (not necessarily a bad thing, mind you). It took both me and @welcher some time to wrap our minds around it, but I think in some ways the end product will actually be simpler than what is was before, once a dev cracks the entry barrier. And, because backward compatibility will be maintained, newbies can continue to use the old approach until they better understand the new underlying API.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Note: I see that you are using &lt;code&gt;static&lt;/code&gt; in &lt;code&gt;WP_Widget_Display_Adapter::factory()&lt;/code&gt;, however, WordPress still supports PHP 5.2 (not my fault :-).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:31/1433251439558430</guid>
      <description>&lt;p&gt;
I'm able to re-create the issue on both retina and non-retina displays in all browsers, however the problem is dependent on the window size and typically when you see it, if you resize the window larger or smaller, the issue goes away. The container sizes where the issue occurs varies between browser and screen type. This explains why some people see it and others do not.
&lt;/p&gt;
&lt;p&gt;
As I noted above (&lt;a href="https://core.trac.wordpress.org/ticket/29606#comment:21"&gt;https://core.trac.wordpress.org/ticket/29606#comment:21&lt;/a&gt;), the problem can be seen when just using some very basic % width floated elements and jQuery UI Sortable.
&lt;/p&gt;
&lt;p&gt;
Sortable appears to round the calculated % widths when generating the placeholder and the dragged item because it needs a specific pixel width for the absolute positioning. Sometimes it gets rounded too large for the space available, so the browser then calculates the floated item as being on the next row.
&lt;/p&gt;
&lt;p&gt;
I think the solution is that Sortable probably needs more precise rounding, or perhaps to simply always round down, when calculating the current width of a floated element with a percentage width.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32427 (Media Library not showing any images. While uploading shows error but ...) closed</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:18:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32427#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32427#comment:1/1433251096026553</guid>
      <description>invalid: &lt;p&gt;
Hello @dwdraju! Thank you for your report, however this seems like a support request. If you go to &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wordpress.org/support&lt;/a&gt;, someone there can help you fix the issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21523 (Add additional escaping to credit.php) updated</title>
      
        <dc:creator>gtuk</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:12:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21523#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21523#comment:9/1433250726557668</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21523#comment:7" title="Comment 7"&gt;chriscct7&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@protechig see the patch on this ticket, which needs to be refreshed. That covers most of the sanitization that would need to be done. See &lt;a class="ext-link" href="https://codex.wordpress.org/Data_Validation"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Data_Validation&lt;/a&gt; &amp;amp; &lt;a class="ext-link" href="https://codex.wordpress.org/Validating_Sanitizing_and_Escaping_User_Data"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Validating_Sanitizing_and_Escaping_User_Data&lt;/a&gt; for references
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I updated the file as you suggested. Hope everything is as expected, otherwise let me know
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21523.2.patch attached to Ticket #21523</title>
      
        <dc:creator>gtuk</dc:creator>

      <pubDate>Tue, 02 Jun 2015 13:08:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21523/21523.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21523/21523.2.patch/1433250532744750</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32363 (Filter in `wp_get_attachment_image_src`) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Tue, 02 Jun 2015 12:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32363#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32363#comment:6/1433249722984380</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32553 (Corrupted embeds) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 02 Jun 2015 12:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32553#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32553#comment:1/1433249590658150</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;{{unknown}}&lt;/code&gt; responses indicate something went wrong when retrieving the oEmbed, like a tweet that has been deleted or hitting a rate limit (not clear on whether Twitter specifically still has one). oEmbed caching only re-requests embeds a day past the time in the &lt;code&gt;oembed_time&lt;/code&gt; key (unless the &lt;code&gt;oembed_ttl&lt;/code&gt; value has been filtered), and does not replace stored values with &lt;code&gt;{{unknown}}&lt;/code&gt;. Do you have a plugin or other code that could be affecting oEmbeds or even post meta? We do not clear them en masse in any situation in core as of 4.0, and even then, it was only for a given post on post save, not globally on upgrades.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>zerodegreeburn</dc:creator>

      <pubDate>Tue, 02 Jun 2015 12:07:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:30/1433246822953941</guid>
      <description>&lt;p&gt;
I think this is a HiDPi/retina issue at least on Windows 8.1. I've tested on my Acer Aspire S7-392 laptop, which is Windows 8.1 with a HiDPi screen. The drag and drop reordering of thubnails inside the gallery does not work in the latest versions of Chrome, Firefox, Opera or Vivaldi. It does work in IE11, but not via touch only with a mouse pointer.
&lt;/p&gt;
&lt;p&gt;
I use a scaling option of 144% with the laptop. I tested it out with no scaling applied (Control Panel -&amp;gt; Display -&amp;gt; 100% (smallest) and it made no difference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32345 (ssh2/sftp doesn't work in chrooted environments, FTP_BASE, ...) updated</title>
      
        <dc:creator>bondnono</dc:creator>

      <pubDate>Tue, 02 Jun 2015 12:02:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32345#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32345#comment:3/1433246525785161</guid>
      <description>&lt;p&gt;
Same issue here, I did set up a proftpd SFTP server with chrooted users and had to do the same modification as @aberbenni (on the latest Wordpress version). Jailing the users is a basic security feature, I don't get why it is not supported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32554 (Editing an image inserted in a post does not resize correctly) created</title>
      
        <dc:creator>rachelbilski</dc:creator>

      <pubDate>Tue, 02 Jun 2015 11:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32554</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32554/1433243550416118</guid>
      <description>&lt;p&gt;
Steps to reproduce
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Upload a large image to the media library
&lt;/li&gt;&lt;li&gt;Create a new page
&lt;/li&gt;&lt;li&gt;Add media and select an image
&lt;/li&gt;&lt;li&gt;Insert image into page
&lt;/li&gt;&lt;li&gt;Click on image and edit
&lt;/li&gt;&lt;li&gt;Change size to Custom and make larger
&lt;/li&gt;&lt;li&gt;Accept the changes
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Expected result: The image should be resized without blurring and pixelation as there is a high resolution version of this image uploaded from which to resize with.
&lt;/p&gt;
&lt;p&gt;
Actual result: The image is resized from the small version that was included, and is therefore poor quality.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31548 (Fix color contrast on wp-login.php to meet minimum accessibility standards) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 10:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31548#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31548#comment:10/1433241963032002</guid>
      <description>&lt;p&gt;
New patch to propose a new approach: just change the links color and make it blue again, using the new &lt;code&gt;#0073aa&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31548.patch attached to Ticket #31548</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 10:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31548/31548.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31548/31548.patch/1433241792115910</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31548 (Fix color contrast on wp-login.php to meet minimum accessibility standards) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 02 Jun 2015 10:34:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31548#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31548#comment:9/1433241267768381</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31548#comment:5" title="Comment 5"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
login.css appears to need some color updating in the first place - see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31234" title="#31234: task (blessed): Update wp-admin default colors (closed: fixed)"&gt;#31234&lt;/a&gt;. I am all for contrast guidelines, but if we need to change some colors then they need to be considered holistically, not just on the login screen.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Totally agree. So maybe it make sense to be consistent with the updated default admin colors. See &lt;a class="ext-link" href="https://make.wordpress.org/design/2015/04/05/default-admin-color-scheme-update"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the new colors announcement post in Make Design&lt;/a&gt; for reference.
&lt;/p&gt;
&lt;p&gt;
Some background: as far as I know, the links color was &lt;code&gt;#21759b&lt;/code&gt; in WordPress 3.7 than changed in &lt;code&gt;#999&lt;/code&gt; with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26072" title="Say hello to a fresh new look for the WordPress admin.
Still to come: ..."&gt;the MP6 admin redesign&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'd say we have two choices: use the new blue for links &lt;code&gt;#0073aa&lt;/code&gt; or use one of the available new greys: &lt;code&gt;#464b50&lt;/code&gt;. I'd rather the blue, it will also be consistent with the color of the links displayed in the error messages. Also, I'd say no underline and we should meet WCAG AA level so a contrast of 4.50:1 would be sufficient.
See screenshot: current, new blue, new grey. Any thoughts and UI feedback more than welcome.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/xaAcJM-cB1.png"&gt;&lt;img src="https://cldup.com/xaAcJM-cB1.png" alt="https://cldup.com/xaAcJM-cB1.png" crossorigin="anonymous" title="https://cldup.com/xaAcJM-cB1.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32110 ("Shiny" plugin updates not working when I try run mulitple updates at ...) updated</title>
      
        <dc:creator>magicroundabout</dc:creator>

      <pubDate>Tue, 02 Jun 2015 09:55:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32110#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32110#comment:8/1433238932936838</guid>
      <description>&lt;p&gt;
Hi @stevenkword
&lt;/p&gt;
&lt;p&gt;
Thanks for dipping in to help with this.
&lt;/p&gt;
&lt;p&gt;
Perhaps I wasn't quite clear enough. The connection disruption needs to be from the server running WordPress to the update server. So in my case I was doing this on a local install of WordPress, so pulling my network connection prevent WordPress contacting the update server.
&lt;/p&gt;
&lt;p&gt;
I THINK, from what you've said, that you might have WordPress running remotely, and your network disconnection is preventing your browser contact WordPress.
&lt;/p&gt;
&lt;p&gt;
I didn't actually explain this very well in the original explanation of the problem. Can you let me know if you were working on a local WordPress install or a remote one? Are you able to replicate on a local server (running on the same machine as your browser) with the network disconnected? Or somehow otherwise simulate a network failure on the server end?
&lt;/p&gt;
&lt;p&gt;
The Akismet thing is raise elsewhere in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32086" title="#32086: defect (bug): AJAX plugin update says it updated when in reality it didn't (closed: duplicate)"&gt;#32086&lt;/a&gt;. It looks like Plugin_Upgrader-&amp;gt;bulk_upgrade() is returning the wrong value, but I have bigger concerns over what the "result" of a bulk upgrade should be. Follow the thread over there - it's pretty complicated but hopefully someone can follow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32553 (Corrupted embeds) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Tue, 02 Jun 2015 09:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32553</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32553/1433236707170350</guid>
      <description>&lt;p&gt;
I noticed that all of my embedded tweets are not displayed correctly. It worked when I inserted them into posts, but now there is only URL address displayed.
&lt;/p&gt;
&lt;pre class="wiki"&gt;oembed_time_c2514d9c02607e0bc7216e614d9c37c8 - 1432677756
_oembed_c2514d9c02607e0bc7216e614d9c37c8 - {{unknown}}
&lt;/pre&gt;&lt;p&gt;
It was 4.1.x website, it seems to me that it can be related to automattic update to 4.1.5 or some changes on webhoster side. I updated to 4.2.2, but there is still only URL address. I can add new URL into post without problems, but current URL embed does not work anymore...
&lt;/p&gt;
&lt;p&gt;
Any idea how could it happen? I know that I can delete wrong postmeta records in database (= clear oembed cache), but it should not happen anyway...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30049 (wp_load_translations_early does not without WPLANG defined) updated</title>
      
        <dc:creator>temuag</dc:creator>

      <pubDate>Tue, 02 Jun 2015 07:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30049#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30049#comment:7/1433231311518822</guid>
      <description>&lt;p&gt;
I may have found the solution, see:
&lt;a class="ext-link" href="https://wordpress.org/support/topic/translation-of-the-maintenance-mode?replies=19"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/translation-of-the-maintenance-mode?replies=19&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You need to make sure $wp_local_package = 'YOUR LOCAL'; is defined at the end of wp-includes/version.php
&lt;/p&gt;
&lt;p&gt;
The error may come from an upgrade, I had the same issue, and I could fix it this way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31712 (Login screens links lack focus style) closed</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Tue, 02 Jun 2015 05:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31712#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31712#comment:10/1433224234441693</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32682" title="Use WordPress' default focus styles for links on login screens.
Props ..."&gt;32682&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use WordPress' default focus styles for links on login screens.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31712" title="#31712: defect (bug): Login screens links lack focus style (closed: fixed)"&gt;#31712&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [32682]: Use WordPress' default focus styles for links on login screens.  Props ...</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Tue, 02 Jun 2015 05:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/32682</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/32682/1433224233310825</guid>
      <description>&lt;p&gt;
Use WordPress' default focus styles for links on login screens.
&lt;/p&gt;
&lt;p&gt;
Props afercia.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31712" title="#31712: defect (bug): Login screens links lack focus style (closed: fixed)"&gt;#31712&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #31712 (Login screens links lack focus style) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 02 Jun 2015 04:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31712#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31712#comment:9/1433220968684057</guid>
      <description>&lt;p&gt;
Does what it says, should be a good change for accessibility!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32552 (Use HTTPS for Google API external libraries) created</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 02 Jun 2015 04:28:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32552/1433219328251619</guid>
      <description>&lt;p&gt;
Via &lt;a class="ext-link" href="https://developers.google.com/speed/libraries/?csw=1#libraries"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developers.google.com/speed/libraries/?csw=1#libraries&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"We recommend that you load libraries from the CDN via HTTPS, even if your own website only uses HTTP. Nowadays, performance is fast, and caching works just the same. The CDN's files are served with CORS and Timing-Allow headers and allowed to be cached for 1 year."
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32470 (Abstracting the Widget Classes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 03:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32470#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32470#comment:24/1433216836792467</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jacobsantos. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1433216833000231"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32470 (Abstracting the Widget Classes) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Tue, 02 Jun 2015 03:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32470#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32470#comment:23/1433216483396750</guid>
      <description>&lt;p&gt;
I made a video further explaining the motivations and reasons behind the changes. Not sure if you would sit through an hour video but here you go. &lt;a class="ext-link" href="https://www.youtube.com/watch?v=ot4LTj04KoE"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.youtube.com/watch?v=ot4LTj04KoE&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think the point that matters the most is the last 3 to 5 minutes. I think that is really what I want to show.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;interface WP_DisplayInterface {
        public function render();
}
interface WP_Display_BeforeInterface {
        public function before_render();
}
interface WP_Display_AfterInterface {
        public function after_render();
}
interface WP_Display_VerifyInterface {
        public function should_render();
}
abstract class WP_Abstract_Display
        implements WP_DisplayInterface, WP_Display_VerifyInterface {
        public function render() {
                if ( ! $this-&amp;gt;should_render() ) {
                        return;
                }
                if ($this instanceof WP_Display_BeforeInterface) {
                        $this-&amp;gt;before_render();
                }
                $this-&amp;gt;display();
                if ($this instanceof WP_Display_AfterInterface) {
                        $this-&amp;gt;after_render();
                }
        }
        abstract public function should_render();
        abstract function display();
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The ultimate point is to go towards this code and not the current code. The purpose I'm going to go into is how to develop with reusability in mind. The idea of creating generic interfaces and classes that can then be further reused in any place.
&lt;/p&gt;
&lt;p&gt;
What exactly is a Widget? An object that displays arbitrary content at a given location. Okay. Fine. Why does it need to have a specialized contract, when a generic one would satisfy? I think the problem is that the developers didn't think generally but specifically towards solving the problem. Well, then again, the code needed to support PHP4, which didn't support interfaces, so that is part of the problem.
&lt;/p&gt;
&lt;p&gt;
There is another problem that the code would be better off using namespaces to better segment and name the code. The solution should be solved with as minimal amount of code as possible. That is also ultimately what I'm attempting to show.
&lt;/p&gt;
&lt;p&gt;
The above solves your problem without adding any new methods.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Widget_Control extends WP_Widget {
        protected $display_instance = null;
        public function __construct(WP_DisplayInterface $display) {
                // Call parent::__construct();
                $this-&amp;gt;display_instance = $display;
        }
        public function widget( $args, $instance ) {
                $this-&amp;gt;display_instance-&amp;gt;render();
        }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The below code also implements a solution to your problem, again without adding any more methods to the existing class. Furthermore, the new interfaces could be used within WP_Widget with an test as to whether the interface is implemented and then called.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;final class WP_Widget_Display_Adapter implements WP_DisplayInterface {
        private $_storage = array(
                'display' =&amp;gt; null,
                'before' =&amp;gt; null,
                'after' =&amp;gt; null,
                'verify' =&amp;gt; null,
        );
        public function register($instance) {
                switch (true) {
                        case $instance instanceof WP_DisplayInterface:
                                $this-&amp;gt;_storage['display'] = $instance;
                        break;
                        case $instance instanceof WP_Display_BeforeInterface:
                                $this-&amp;gt;_storage['before'] = $instance;
                        break;
                        case $instance instanceof WP_Display_AfterInterface:
                                $this-&amp;gt;_storage['after'] = $instance;
                        break;
                        case $instance instanceof WP_Display_VerifyInterface:
                                $this-&amp;gt;_storage['verify'] = $instance;
                        break;
                }
                return $this;
        }
        public static function factory() {
                if ( func_num_args() &amp;lt; 1 ) {
                        return new static;
                }
                $instance = new static;
                $args = func_get_args();
                foreach ($args as $obj) {
                        $instance-&amp;gt;register($obj);
                }
                return $instance;
        }
        public function render() {
                if ( is_object( $this-&amp;gt;_storage['verify'] ) &amp;amp;&amp;amp; ! $this-&amp;gt;_storage['verify']-&amp;gt;should_render() )
                        return;
                }
                if ( is_object( $this-&amp;gt;_storage['before'] ) ) {
                        $this-&amp;gt;_storage['before']-&amp;gt;before_render();
                }
                if ( is_object( $this-&amp;gt;_storage['display'] ) ) {
                        $this-&amp;gt;_storage['display']-&amp;gt;render();
                }
                if ( is_object( $this-&amp;gt;_storage['after']) ) {
                        $this-&amp;gt;_storage['after']-&amp;gt;after_render();
                }
        }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm not sure how to explain what I mean any better. Which part do you not understand? I think the problem with the patch is that I tried to show how the code could be refactored and I think I'm going away from that goal and towards what I should have attempted to explain previously. This is my end goal. This is where I want the code to go towards. I would have done it in a roundabout way, but at least you get to see where the finish line is located.
&lt;/p&gt;
&lt;p&gt;
True, it doesn't exactly fit in with the goals you are attempting to design. However, in all honestly, your patch and design should not be allowed as it only compounds the existing problem. The original implementation should not have been allowed, if but for compat with PHP4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31784 (Plugin update gives notice) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 02 Jun 2015 03:40:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31784#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31784#comment:19/1433216440472736</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31784#comment:18" title="Comment 18"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm seeing that on every page load of plugins.php with the 4.3-alpha-32681 nightly build.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Never mind. This cleared after a fresh update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32430.diff attached to Ticket #32430</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Tue, 02 Jun 2015 03:14:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32430/32430.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32430/32430.diff/1433214875669092</guid>
      <description>&lt;p&gt;
send similar email to original email if email is changed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32551 (Superseded feature plugins should suggest deleting the plugin in the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 02 Jun 2015 01:29:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32551#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32551#comment:1/1433208565267388</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-flow by boren. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-flow/p1433208563000227"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2015-06-01 at 9.12.51 PM.png attached to Ticket #32551</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 02 Jun 2015 01:28:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32551/Screen%20Shot%202015-06-01%20at%209.12.51%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32551/Screen%20Shot%202015-06-01%20at%209.12.51%20PM.png/1433208505859610</guid>
      <description>&lt;p&gt;
This plugin will automatically deactivate itself...
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32551 (Superseded feature plugins should suggest deleting the plugin in the ...) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 02 Jun 2015 01:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32551</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32551/1433208331495222</guid>
      <description>&lt;p&gt;
The Twemoji feature plugin is superseded by 4.2. It auto deactivates if you have 4.2 or later installed and shows a message in plugins.php. That message should suggest deleting the plugin. We don't want these superseded plugins to linger.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31784 (Plugin update gives notice) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 02 Jun 2015 01:21:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31784#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31784#comment:18/1433208087582440</guid>
      <description>&lt;p&gt;
I'm seeing that on every page load of plugins.php with the 4.3-alpha-32681 nightly build.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2015-06-01 at 9.11.24 PM.png attached to Ticket #31784</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 02 Jun 2015 01:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31784/Screen%20Shot%202015-06-01%20at%209.11.24%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31784/Screen%20Shot%202015-06-01%20at%209.11.24%20PM.png/1433207993701664</guid>
      <description>&lt;p&gt;
Related?
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32470 (Abstracting the Widget Classes) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Tue, 02 Jun 2015 01:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32470#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32470#comment:22/1433207237550216</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32470#comment:18" title="Comment 18"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32470#comment:17" title="Comment 17"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To me it just looks like added layers of complexity without actually reducing the bootstrap code plugin devs have to write.
&lt;/p&gt;
&lt;p&gt;
I agree, the interface approach ( at least in the patch provided ) is very complicated and I don't immediately see the benefit of requiring a new class to implement 4 interfaces rather that extend a single class. As I mentioned in a earlier comment, WordPress maintains a low barrier-to-entry for developers and for some, doing any OOP may be daunting. I am guessing this is why WP_Widget was written to be inherited. There seems to be a lot of room for error with having to implement multiple interfaces. If one is left out, what happens? The point of an interface is to define what methods a class must define, and if that is what where trying to accomplish, it may be a better approach to make WP_Widget an abstract class with abstract methods and maintain the inheritance model.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think maybe what you envision and what @welcher was proposing are two different things. I think you're leaning towards a complete rewrite of the whole widgets API, while (I think) what @welcher was proposing was just a little bit more abstraction/bootstrap in the &lt;code&gt;WP_Widget&lt;/code&gt; class.I think we need to be more specific about the scope of this ticket. I'm not saying your scope is necessarily too broad, but I'm not sure that's what the original intent was, and maybe these are sort of two different things that should be separate tickets. ??
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is what I was proposing - more abstraction in &lt;code&gt;WP_Widget&lt;/code&gt;. I think that perhaps a second ticket is in order as @jacobsantos approach would require a major rewrite to the API and is beyond the scope of making enhancements to what is currently in place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32110 ("Shiny" plugin updates not working when I try run mulitple updates at ...) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Tue, 02 Jun 2015 00:49:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32110#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32110#comment:7/1433206153206572</guid>
      <description>&lt;p&gt;
I'm not able to reproduce the events shown in the video.  Once disconnecting my connection and clicking update, I get all spinners with no failures.  I am also not experiencing the issues seen with Akismet and wonder if the two are related.  I'm going to investigate other ways to induce the failure so I can test this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>