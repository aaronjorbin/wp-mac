<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:74/1472943089481839</guid>
      <description>&lt;p&gt;
I think your design is too "WordPress", in that it condenses what should be multiple methods or classes to a single method. I would also suggest The PHP League Container library. The problem with Pimple or really any container library is that it still needs to be accessed in some way. Something you mention below. Whether that retrieval is in WP or some other Singleton, that class would not be a container. It would hold the container.
&lt;/p&gt;
&lt;p&gt;
I don't believe you looked at MimicCMS Storage implementation. As a POC, I would rather you used it as a foundation since the ideas are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The storage container should be separate from the retrieval. This should allow for proper testing of each part of the service container without interference of other pieces of WordPress code. Proper unit test cases, instead of the herculean effort found currently in the WordPress test suite to make the test cases as unit as possible. It is easier to unit test something that is meant to be independent than to make something that is not meant to be independent unit testable.
&lt;/li&gt;&lt;li&gt;The focus of the service container implementation should be separable from WordPress. This means that you would have another service container implementation in the wild that could gain traction outside of WordPress and therefore support larger than the maintainers. I doubt this would happen as there would likely be a split between what is included in WordPress and the progress of any library. The other, more important, reason is so that the implementation in WordPress could be replaced with another library at a later date. Think WP_HTTP with Requests, except WP_Service with Pimple or League Container.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The reason I don't recommend Pimple is that array access is a bit more difficult to work with than object methods.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$service&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;/// ---------------
&lt;/span&gt;
&lt;span class="nv"&gt;$service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$service&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$service&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;wpdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nv"&gt;$service&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'event'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Compare that to League's Container library
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;WP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;share&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;wpdb&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;WP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It seems the primary advantage and the reason Pimple is being chosen is because it is simple with few lines of code. Practically, the only thing you would need to do to make it PHP5.2 is to remove the namespace and replace the acceptance of closures. If you want to remove SPL dependency and you should do this anyway, you would just rename the ArrayAccess methods.
&lt;/p&gt;
&lt;p&gt;
I will say that the protection and service layer of MimicCMS Storage is within the classes you pass. It is a better candidate for PHP7 with anonymous classes, but I think it would better serve you to imitate the composition and design of it than Pimple. The PHP League Container library may seem more involved, but once you remove the interfaces and drill down to its code, it isn't any more or less complex than MimicCMS Storage.
&lt;/p&gt;
&lt;h2 id="WhatisThis"&gt;What is This?&lt;/h2&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:73" title="Comment 73"&gt;ChriCo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Service_Container&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ---------------
// protected
&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'b..arrrrr i\'m a pirate'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// '''not''' possible - exception or at least return FALSE;
&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// bar
&lt;/span&gt;
&lt;span class="c1"&gt;// factory
// just an example, since we're not able to use closures we maybe need to build something around it.
// $key, $class_name (instance of class name is the returned value), $args
&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'db-user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-pass'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-host'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$wpdb1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// complete new instance of wpdb
&lt;/span&gt;&lt;span class="nv"&gt;$wpdb2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// complete new instance of wpdb
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Again, the design seems to accept arbitrary data types. This is unwise and I would recommend instead creating a class to contain the data types that are not objects.
&lt;/p&gt;
&lt;p&gt;
Prefer instead:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Storage_Factory_Wpdb&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;Storage_FactoryInterface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Implementation creates and stores wpdb instance.
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Storage_Data&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;Storage_DataInterface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Storage_ProtectedData&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;Storage_DataInterface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Service_Container&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Storage_Data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ---------------
// protected
&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Storage_Data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Storage_Data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"b..arrrrr i'm a pirate"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// '''not''' possible - exception or at least return FALSE;
&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// bar
&lt;/span&gt;
&lt;span class="c1"&gt;// factory
// just an example, since we're not able to use closures we maybe need to build something around it.
// $key, $class_name (instance of class name is the returned value), $args
&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Storage_Factory_Wpdb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'db-user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-pass'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-host'&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$wpdb1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// complete new instance of wpdb
&lt;/span&gt;&lt;span class="nv"&gt;$wpdb2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// complete new instance of wpdb
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The concept is more that if you always return an object, then you can do more with it. Take a facade for example.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Facade_WP_Database&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;WP_Facade&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;_serviceName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;Facade_WP_Database&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'table'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'fieldName'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'data'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Facade_Foo&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;WP_Facade&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;_serviceName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;Facade_Foo&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// bar -- from above.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Sure, it borrows much from Laravel, but it is simple enough to implement with a service container. The point is that it doesn't matter what the implementation for registering and retrieving from the service container, because no one is going to use it. Or more that there is a better, easier way to use it.
&lt;/p&gt;
&lt;p&gt;
Tell people that there is an easier API with a Facade and see if people move over to it. Laravel is MIT licensed, you would just have to backport and provide attribution, but given that the implementation is basic and simple, it shouldn't be that difficult to implement, if you don't want to look at Laravel.
&lt;/p&gt;
&lt;p&gt;
That it is more verbose is a nature of supporting a PHP version that doesn't support many of the features in PHP5.3 and above. Since it is just objects and closures are objects, it should be fine to store closures and execute them when retrieved.
&lt;/p&gt;
&lt;p&gt;
It also allows for more composition with the code, which should open the possibilities and extensions a lot more than a simple array would.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30741 (Build-out API for adding Customizer Panels, Sections, and Controls ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:46:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30741#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30741#comment:16/1472942783742789</guid>
      <description>&lt;p&gt;
Currently, to remove a control you need to do both &lt;code&gt;control.container.remove();&lt;/code&gt; and &lt;code&gt;api.control.remove( control.id );&lt;/code&gt;. We should create a shortcut where &lt;code&gt;control.remove();&lt;/code&gt; self-destructs. Panels and sections should have similar approaches that also delete children, and we also need to revisit adding controls in JS here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:79/1472942267755715</guid>
      <description>&lt;p&gt;
I think there's a number of problems with the latest proposed patch.
&lt;/p&gt;
&lt;p&gt;
The encoding of the filename can only be guessed at as far as I know - it's just a string of bytes with no encoding info from the client and is not connected to the page's (or blog's) charset, so there should be no defaulting to the blog's charset. The default should just be nothing.
&lt;/p&gt;
&lt;p&gt;
It's not clear to me why &lt;code&gt;wp_strip_all_tags()&lt;/code&gt; and &lt;code&gt;html_entity_decode()&lt;/code&gt; and entity stripping are being done, as opposed to the current solution of just stripping angle brackets and ampersands via &lt;code&gt;special_chars&lt;/code&gt;, which seems to be as effective and is less drastic.
&lt;/p&gt;
&lt;p&gt;
A small point is that the conversion of the &lt;code&gt;special_chars&lt;/code&gt; filter to a concatenated character class regex is not strictly backward compatible, as people could have been doing multi-byte stripping, which would fail now.
&lt;/p&gt;
&lt;p&gt;
The use of the &lt;code&gt;$utf8_modifier&lt;/code&gt; is only needed when the regex contains a multi-byte pattern, and there's only 2 places in the proposed patch where that is (intentionally) the case, one of which is problematic &lt;code&gt;[\s-]+&lt;/code&gt; and the other arguable &lt;code&gt;(?!\.)[^\p{L}\p{Nd}]+&lt;/code&gt;. A third use on &lt;code&gt;^[a-zA-Z]{2,5}\d?$&lt;/code&gt; looks unintentional as &lt;code&gt;\d&lt;/code&gt; will match &lt;code&gt;\p{Nd}&lt;/code&gt; if UTF-8 mode is set and PCRE has &lt;a class="ext-link" href="http://php.net/manual/en/regexp.reference.unicode.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;UCP&lt;/a&gt; support (which unfortunately are not necessarily the same thing - see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22692" title="#22692: defect (bug): Quotes Are Messing Up (closed: fixed)"&gt;#22692&lt;/a&gt;#&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22363#comment:39" title="Comment 39"&gt;comment:39&lt;/a&gt;). Other uses are unneeded.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;[\s-]+&lt;/code&gt; use is problematic and as it stands could actually re-introduce the bug that corrupts UTF-8 that was fixed up above (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26094" title="#26094: defect (bug): sanitize_file_name() breaks some UTF-8 strings (closed: fixed)"&gt;#26094&lt;/a&gt;) if the filename is in UTF-8 and PCRE UTF-8 mode is unavailable (as &lt;code&gt;$utf9_modifier&lt;/code&gt; would then be blank). Even if that's fixed it still has issues due to the difficulty in predicting what it will match - in single-byte mode it's PHP locale dependent, and in UTF-8 mode it's UCP dependent. Its introduction appears to be driven by wanting to encompass both the &lt;code&gt;U+00A0&lt;/code&gt; substitution (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27281" title="#27281: defect (bug): Videos with a space in the filename can break (closed: fixed)"&gt;#27281&lt;/a&gt; but it's not particularly clear from that bug report whether the fix was appropriate) and the simple substitution &lt;code&gt;[\r\n\t -]+&lt;/code&gt;. I think it would be better and more targeted to leave the current &lt;code&gt;[\r\n\t -]+&lt;/code&gt; as is, and to replace the current &lt;code&gt;preg_match( "#\x{00a0}#siu", ' ', $filename )&lt;/code&gt; with a straightforward &lt;code&gt;str_replace( "\xc2\xa0", ' ', $filename  )&lt;/code&gt; (to be done only when the filename is in UTF-8).
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;(?!\.)[^\p{L}\p{Nd}]+&lt;/code&gt; use should only be done if the filename is in UTF-8, and also technically should check that UCP support is available, as a previous patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/22363/22363.5.patch"&gt;22363.5.patch&lt;/a&gt; above does. This is the substantive change that fixes up the bug in &lt;code&gt;remove_accents()&lt;/code&gt;, and works. However I think the bug in &lt;code&gt;remove_accents()&lt;/code&gt; - which could be renamed &lt;code&gt;transliterate_commonly_used_latin_to_ascii()&lt;/code&gt; - should be fixed in &lt;code&gt;remove_accents()&lt;/code&gt;, as specified in the branched off bug &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/24661" title="#24661: defect (bug): remove_accents is not removing combining accents (new)"&gt;#24661&lt;/a&gt;. Also to be picky(!) it removes too much, not just decomposed latin accents. The solutions mentioned in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/24661" title="#24661: defect (bug): remove_accents is not removing combining accents (new)"&gt;#24661&lt;/a&gt; are more targeted.
&lt;/p&gt;
&lt;p&gt;
The use of &lt;code&gt;mb_strtolower()&lt;/code&gt; should probably also only be done if the filename is in UTF-8, and then explicitly pass &lt;code&gt;UTF-8&lt;/code&gt; as the encoding (see &lt;code&gt;sanitize_title_with_dashes()&lt;/code&gt;), rather than using &lt;code&gt;mb_detect_encoding()&lt;/code&gt;, which has &lt;a class="ext-link" href="http://php.net/manual/en/function.mb-detect-encoding.php#102510"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;issues&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:73/1472941900557925</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by jcastaneda. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1472941897000300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37940-background-update.patch attached to Ticket #37940</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37940/37940-background-update.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37940/37940-background-update.patch/1472941716529673</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37940-login-info.patch attached to Ticket #37940</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37940/37940-login-info.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37940/37940-login-info.patch/1472941340053055</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37940 (WordPress email subject update) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37940#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37940#comment:1/1472941022003407</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch has two changes.
&lt;/p&gt;
&lt;p&gt;
The first merges two similar strings "&lt;strong&gt;[%s] Notice of Password Change&lt;/strong&gt;" and "&lt;strong&gt;[%s] Password Changed&lt;/strong&gt;".
&lt;/p&gt;
&lt;p&gt;
The other is just to standardize the email subjects, removing the "&lt;strong&gt;Notice of&lt;/strong&gt;" prefix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37940.patch attached to Ticket #37940</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:13:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37940/37940.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37940/37940.patch/1472940815083587</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>email-subject-network.png attached to Ticket #37940</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37940/email-subject-network.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37940/email-subject-network.png/1472940749655793</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>email-subject-admin.png attached to Ticket #37940</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37940/email-subject-admin.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37940/email-subject-admin.png/1472940734652676</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>email-subject-local.png attached to Ticket #37940</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37940/email-subject-local.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37940/email-subject-local.png/1472940721049503</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37940 (WordPress email subject update) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 22:11:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37940/1472940698011984</guid>
      <description>&lt;p&gt;
The the attached screenshots and the patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37939 (Incorrect references to plugins API in themes_api() inline docs) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 20:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37939#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37939#comment:1/1472935343676765</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37939 (Incorrect references to plugins API in themes_api() inline docs) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 20:42:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37939</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37939/1472935326196867</guid>
      <description>&lt;p&gt;
The inline documentation for &lt;code&gt;themes_api()&lt;/code&gt; (in &lt;code&gt;wp-admin/includes/theme.php&lt;/code&gt;) contains a couple of references to plugins in the &lt;code&gt;$args&lt;/code&gt; parameter description that should reference themes. There is a correct reference to plugins filtering the API further up in the documentation.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sat, 03 Sep 2016 20:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722#comment:6/1472935306716647</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added a patch to fix the docs as well as two minor errors in accordance with PHPCS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37722.diff attached to Ticket #37722</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sat, 03 Sep 2016 20:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37722/37722.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37722/37722.diff/1472935252214672</guid>
      <description>&lt;p&gt;
FIX: DocBlock return to object instead of headers' array &amp;amp; PHPCS Errors
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 03 Sep 2016 20:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:16/1472933745999023</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta/p1472933744000010"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33228 (Customizer initial focus) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 19:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33228#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33228#comment:21/1472929899030039</guid>
      <description>&lt;p&gt;
@afercia yes looks good there as well. Hadn't noticed that ticket :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33228 (Customizer initial focus) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 03 Sep 2016 19:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33228#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33228#comment:20/1472929213640373</guid>
      <description>&lt;p&gt;
Thanks @celloexpressions can you confirm it fixes also the Theme installer so also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27705" title="#27705: defect (bug): Keyboard navigation should be constrained to the theme installer overlay (closed: fixed)"&gt;#27705&lt;/a&gt; can be closed? 🙂
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>ChriCo</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:73/1472929127175350</guid>
      <description>&lt;p&gt;
Howdy.
&lt;/p&gt;
&lt;p&gt;
as i see, @schlessera found enough valid arguments for this "discussion" above, so we can continue the work on a integration of a ServiceContainer into WordPress.
&lt;/p&gt;
&lt;p&gt;
Since we're also working on composer-integration (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;), we should maybe think - even it's still far far away and no PHP &amp;gt; 5.2 - about the integration of some PSR-"standards". The PSR-group has currently a proposal for the integration of Containers (&lt;a class="ext-link" href="https://github.com/php-fig/fig-standards/blob/master/proposed/container.md"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/php-fig/fig-standards/blob/master/proposed/container.md&lt;/a&gt;), which should be at least known and respected when developing something similar for WordPress.
&lt;/p&gt;
&lt;p&gt;
Based on the topics above there should also be discussed how the ServiceContainer should be work.
&lt;/p&gt;
&lt;h2 id="a0.Naming"&gt;0. Naming&lt;/h2&gt;
&lt;p&gt;
The Container should be called &lt;code&gt;WP_Service_Container&lt;/code&gt; and be placed into its own subfolder called &lt;code&gt;service&lt;/code&gt;. This - based on my notes above - follows not directly the PSR-standards but in future we &lt;em&gt;maybe&lt;/em&gt; switch to namespaces which leads us to PSR-4 (&lt;a class="ext-link" href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&lt;/a&gt;) and to &lt;code&gt;WP\Service\Container&lt;/code&gt; --&amp;gt; &lt;code&gt;/service/Container.php&lt;/code&gt;. &lt;em&gt;Note:&lt;/em&gt; i just want to keep - here - the possibility to improve even further in future.. ;)
&lt;/p&gt;
&lt;h2 id="a1.APIDesign"&gt;1. API Design&lt;/h2&gt;
&lt;p&gt;
It needs to be discussed how the API should look like.
&lt;/p&gt;
&lt;h3 id="WP_Service_Container"&gt;WP_Service_Container&lt;/h3&gt;
&lt;p&gt;
This seems to be the major class which has basic implementation of &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;has&lt;/code&gt;. It needs to be discussed what..
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get&lt;/code&gt; returns/throws if something is accessed which is not there.
&lt;/li&gt;&lt;li&gt;how to implemented &lt;code&gt;protected&lt;/code&gt; values which are not overwriteable and how to handle setting a protected value.
&lt;/li&gt;&lt;li&gt;how to implemented creation of new instances --&amp;gt; e.g. &lt;code&gt;factory&lt;/code&gt; - see Pimple &lt;a class="ext-link" href="http://pimple.sensiolabs.org/#defining-factory-services"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pimple.sensiolabs.org/#defining-factory-services&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;what should be extended/implemented to the class (such as &lt;code&gt;ArrayAccess&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;naming rules of the {{$key}} such as "prefix every internal thing with the "vendor"-name and seperate it with dot's. Configurations are called e.G. &lt;code&gt;wp.config.db&lt;/code&gt;) and classes are called e.G. &lt;code&gt;wp.db&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;LazyLoading of instances when they are first accessed via &lt;code&gt;set&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;...
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Short example of usage:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Service_Container&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// ---------------
// set-get-has
&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// bar
&lt;/span&gt;&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'lorum ipsum'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// TRUE, FALSE
&lt;/span&gt;
&lt;span class="c1"&gt;// ---------------
// protected
&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'b..arrrrr i\'m a pirate'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// '''not''' possible - exception or at least return FALSE;
&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// bar
&lt;/span&gt;
&lt;span class="c1"&gt;// factory
// just an example, since we're not able to use closures we maybe need to build something around it.
// $key, $class_name (instance of class name is the returned value), $args
&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wpdb'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'db-user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-pass'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db-host'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$wpdb1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// complete new instance of wpdb
&lt;/span&gt;&lt;span class="nv"&gt;$wpdb2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// complete new instance of wpdb
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="Configurations"&gt;Configurations&lt;/h3&gt;
&lt;p&gt;
The ServiceContainer on its own is a nice thing. But one step further we can think about the generalization of configurations (such as database-credentials, debug modes, ... stuff from &lt;code&gt;wp-config.php&lt;/code&gt; and &lt;code&gt;define&lt;/code&gt;). The configurations should be "protected" (not changeable) and grouped by "type" such as "db", "debug", ...
&lt;/p&gt;
&lt;p&gt;
Short example to give you a quick view on it:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// get somehow the service container..
// and set the database configuration as "protected" to disallow overwriting the values.
&lt;/span&gt;&lt;span class="nv"&gt;$service_container&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'wp.db.config'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'user'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'db-user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'pass'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'db-pass'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'db-name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'host'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'localhost'&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// later on in code when setting up the wpdb
&lt;/span&gt;&lt;span class="nv"&gt;$conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$service_container&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp.db.config'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$service_container&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'wp.db'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;wpdb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nv"&gt;$conf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'user'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nv"&gt;$conf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'pass'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nv"&gt;$conf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nv"&gt;$conf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'host'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2 id="a2.GLOBALSvs.Singletonvs.instance-holdingfunctionvs.hook"&gt;2. $GLOBALS vs. Singleton vs. instance-holding function vs. hook&lt;/h2&gt;
&lt;p&gt;
Since we're hardly depending on some &lt;code&gt;$GLOBALS&lt;/code&gt; in every single situation, its maybe not the best choice to add the ServiceContainer to the globals to remove some of them. On the other hand, if we don't rely on a global available class, it's highly possible, that the ServiceContainer will contain static methods and implement some Singleton-Pattern.
&lt;/p&gt;
&lt;h3 id="v1-global"&gt;v1 - global&lt;/h3&gt;
&lt;p&gt;
Put it to global..than its accessible to everyone and overwritable too..
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'wp_service_container'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Service_Container&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// ...later on
&lt;/span&gt;&lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'wp_service_container'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'wp_service_container'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="v2-singleton"&gt;v2 - singleton&lt;/h3&gt;
&lt;p&gt;
Singleton, no global variable required..but everything is static. Not the best choice here since mocking in UnitTests could be getting much more difficulty.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;WP_Service_Container&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get_instance&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// ...later on
&lt;/span&gt;&lt;span class="nx"&gt;WP_Service_Container&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WP_Service_Container&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="v3-instanceholdingfunction"&gt;v3 - instance holding function&lt;/h3&gt;
&lt;p&gt;
The intance-holding function is a mix of "global"-accessible and singleton, but no static methods/variables required. At least worth to discuss about it.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_service_container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;$instance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$instance&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Service_Container&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$instance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ...later on
&lt;/span&gt;&lt;span class="nx"&gt;wp_service_container&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_service_container&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="v4-hook"&gt;v4 - hook&lt;/h3&gt;
&lt;p&gt;
The hook seems to be another valid solution here, since we're not having any global variable and its accessible on a very specific point for everyone. The main problem here is, that the complete core has to rely on this single hook to get everything which is stored into the container. So everything which needs access to a &lt;code&gt;$value&lt;/code&gt; needs to use this hook, which means we could maybe run into "priority"-problems.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;do_action( 'wp_service_container', new WP_Service_Container() );
// ...later on
add_action( 'wp_service_container', function( WP_Service_Container_Interface $container ) {
        $container-&amp;gt;set( $key, $value );
        $value = $container-&amp;gt;get( $key );
} );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This needs to be discussed since we're still relying heavily on global variables in every single template. I would not implement a Singleton-class and/or something with static methods/variables here, since we're also having a lot of disadvantages with it. A good way could be v3, since we can mock the function in unit tests and access it easily everywhere. But could also be a main disadvantage, if the container is always accessible.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For now i think thats enough input. We should define some basics and afterwards we can continue with more features such es ConfigBuilder's (e.G. &lt;code&gt;WP_Service_ConfigBuilder_PluginConfig&lt;/code&gt; whic parses the Plugin file headers:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$service_container&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'my-plugin.config'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Service_ConfigBuilder_PluginConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$service_container&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'my-plugin.config'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'textdomain'&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// yay, the textdomain!
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Have a nice weekend!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:21/1472929109882654</guid>
      <description>&lt;p&gt;
@joyously as the ticket description explains, this feature is targeted at inexperienced users who are looking to customize their site beyond any options that the current theme provides, primarily with smaller tweaks. In nearly all cases, the changes they'll want to make are dependent on markup and styling provided by the theme, so the CSS should be scoped to the current theme. There are many plugins that offer custom CSS options, many of which will allow for plugin-related styling that persists across themes. For the core feature, we need to keep the experience as simple as possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:46:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:68/1472928388155866</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29158/29158.left-border.1.diff" title="Attachment '29158.left-border.1.diff' in Ticket #29158"&gt;29158.left-border.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29158/29158.left-border.1.diff" title="Download"&gt;​&lt;/a&gt; builds on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29158/29158.left-border.diff" title="Attachment '29158.left-border.diff' in Ticket #29158"&gt;29158.left-border.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29158/29158.left-border.diff" title="Download"&gt;​&lt;/a&gt; to improve the focus styles on the close button. These are based on the styling of the device preview buttons, which are also initially on an &lt;code&gt;#eee&lt;/code&gt; background. Note that the close button will no longer be focused on load with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33228" title="#33228: enhancement: Customizer initial focus (closed: fixed)"&gt;#33228&lt;/a&gt;, which is marked for commit.
&lt;/p&gt;
&lt;p&gt;
Would be good to get some testing and feedback on this final solution so that we can make any tweaks and get this wrapped up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29158.left-border.close.png attached to Ticket #29158</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29158/29158.left-border.close.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29158/29158.left-border.close.png/1472928141165062</guid>
      <description>&lt;p&gt;
Hover (left) and focus (right) styles for the close button in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29158/29158.left-border.1.diff" title="Attachment '29158.left-border.1.diff' in Ticket #29158"&gt;29158.left-border.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29158/29158.left-border.1.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>29158.left-border.1.diff attached to Ticket #29158</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29158/29158.left-border.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29158/29158.left-border.1.diff/1472927939363211</guid>
      <description>&lt;p&gt;
Improve close button hover and focus styles.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37822 (Text area misaligned on network setting.php) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37822#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37822#comment:6/1472927843685937</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37822#comment:5" title="Comment 5"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for screenshots, this certainly looks better @Ankit K Gupta. Have you tested on all devices to be sure?
&lt;/p&gt;
&lt;p&gt;
@melchoyce, this seems like a good candidate to get committed in. Could you see what you think please?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't have a multisite test environment to try this out. Maybe another committer could take a look?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33228 (Customizer initial focus) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:27:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33228#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33228#comment:19/1472927248607947</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the updqate @afercia. The patch looks good to me. I tested on Chrome on Windows 10 and was able to navigate in and out of the customizer with keyboard-only both with and without &lt;code&gt;customize-loader&lt;/code&gt;, with keyboard focus moving and being constrained as expected.
&lt;/p&gt;
&lt;p&gt;
Let's get &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33228/33228.diff" title="Attachment '33228.diff' in Ticket #33228"&gt;33228.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33228/33228.diff" title="Download"&gt;​&lt;/a&gt; committed, and we can follow up if any other issues come up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37774 (Shiny Updates: Themes updates with no package available still show ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:13:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37774#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37774#comment:2/1472926405442949</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 to not showing the "Update now" unless that is possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37799 (Add progress indicator to "Upgrade Network" page) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37799#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37799#comment:5/1472926354558376</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37799 (Add progress indicator to "Upgrade Network" page) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:11:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37799#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37799#comment:4/1472926315180805</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd +1 having some indication and the current solution I think works well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37860 (Labels are misplaced with respect to text box.) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 18:09:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37860#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37860#comment:3/1472926147968243</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@juhise, good catch. I'm a little concerned with changing things though. The reason is that all our forms have the similar issue by vertical-aligning on the middle. For example you can see this in the General Settings on all fields.
&lt;/p&gt;
&lt;p&gt;
It maybe raises the consideration of if we should have a global change or we should leave things as they are for consistency. I'd probably suggest in this case we kept everything to the same vertical-align. However, lets try and get some other opinions apart from mine on this and I'll raise it in this week's design meeting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37874 (on my Appearance screen when i click on Customize, Header, Background ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37874#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37874#comment:4/1472925559858629</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37926 (Twenty Eleven &amp; Twenty Twelve: Dropdown category widget exceeds parent ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:57:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37926#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37926#comment:1/1472925420922775</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @gma992 and thanks for this ticket. This certainly is an issue, but I'm not sure your suggested solution will work in all browsers and devices. Could you do some testing to show some screenshots of different browsers and devices, using your idea?
&lt;/p&gt;
&lt;p&gt;
If you are able to, it would be great to have a patch also. You can find out more about creating a patch here: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/trac/submitting-a-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/trac/submitting-a-patch/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37934 (Separate account settings and profile settings) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:53:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37934#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37934#comment:1/1472925198932149</guid>
      <description>&lt;p&gt;
I would +1 this as from a user view it makes a lot of sense. My only concern is transitioning and how we do this split. I'd be interested in seeing some mockups and ideas about that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37933 (Design Issue - While Uploading a plugin.) closed</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37933#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37933#comment:6/1472925090506977</guid>
      <description>worksforme: &lt;p&gt;
I also can't replicate this myself. I would second this seems to be a plugin combination. If this isn't the case, then please let us know a bit more info so we can try and recreate.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #34880 (Hidden state for Site Title and Tagline) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34880#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34880#comment:11/1472924975174576</guid>
      <description>&lt;p&gt;
@rianrietveld I'm open to other visual identifiers for disabled. The point currently is we don't have this. Does the a11y team have a suggestion of what visually the disabled should look like? I'd love to see a mockup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37407 (Filter button should not appear when no posts are available in list) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37407#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37407#comment:4/1472924719175336</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@melchoyce would you consider this as a good commit to get in? I think it could be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27253 (Enhancement Request: direct link to Drafts under Posts and Pages on ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27253#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27253#comment:10/1472924648244503</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37822 (Text area misaligned on network setting.php) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:42:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37822#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37822#comment:5/1472924534676527</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for screenshots, this certainly looks better @Ankit K Gupta. Have you tested on all devices to be sure?
&lt;/p&gt;
&lt;p&gt;
@melchoyce, this seems like a good candidate to get committed in. Could you see what you think please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24040 (Use "posts" instead of "topics" (in tagcloud tooltips)) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24040#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24040#comment:6/1472924408486762</guid>
      <description>&lt;p&gt;
A valid point about not just posts being shown. I think topics is also troublesome because of what could be considered to be a topic. It's tricky to find a fit all situation here. If the tag cloud could be intelligent that would be great to see.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37938 (Split Source Parsing Functions from Press This So Can Be Used Globally) created</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 03 Sep 2016 17:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37938/1472922506286393</guid>
      <description>&lt;p&gt;
WordPress already has an HTML parsing function in the form of WP_Press_This::source_data_fetch_fallback and its private called functions.
&lt;/p&gt;
&lt;p&gt;
Suggesting this be split off so it can be used elsewhere. Specifically, my use case is over on the Ping and Trackbacks component. One of the proposals I keep advocating for is improving the presentation.
&lt;/p&gt;
&lt;p&gt;
As we already have this code in WordPress that allows for parsing of HTML for images, embeds, meta tags, etc, it should be used over writing new code to do the same.
&lt;/p&gt;
&lt;p&gt;
But if it were to be called right now, it would reretrieve source HTML already retrieved by the Pingback code and passed into the comment array.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37937 (Support boolean strings for the 'public', 'archived', 'mature', 'spam' ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 03 Sep 2016 16:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37937#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37937#comment:1/1472920827035080</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-site-query.diff attached to Ticket #37937</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 03 Sep 2016 16:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37937/class-wp-site-query.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37937/class-wp-site-query.diff/1472920211834554</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37937 (Support boolean strings for the 'public', 'archived', 'mature', 'spam' ...) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 03 Sep 2016 16:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37937/1472920191037463</guid>
      <description>&lt;p&gt;
According to the documentation for the &lt;code&gt;WP_Site_Query&lt;/code&gt; class:
&lt;/p&gt;
&lt;pre class="wiki"&gt;*     @type int          $public           Limit results to public sites. Accepts '1' or '0'. Default empty.
*     @type int          $archived         Limit results to archived sites. Accepts '1' or '0'. Default empty.
*     @type int          $mature           Limit results to mature sites. Accepts '1' or '0'. Default empty.
*     @type int          $spam             Limit results to spam sites. Accepts '1' or '0'. Default empty.
*     @type int          $deleted          Limit results to deleted sites. Accepts '1' or '0'. Default empty.
&lt;/pre&gt;&lt;p&gt;
these attributes accepts values &lt;code&gt;'1'&lt;/code&gt; and &lt;code&gt;'0'&lt;/code&gt; (also &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; to be more specific).
&lt;/p&gt;
&lt;p&gt;
I would suggest adding support for general boolean values so these attributes can also support e.g. &lt;code&gt;true, false, 'true', 'false' &lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Currently each attribute is handled like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_numeric( $this-&amp;gt;query_vars['archived'] ) ) {
	$archived                               = absint( $this-&amp;gt;query_vars['archived'] );
	$this-&amp;gt;sql_clauses['where']['archived'] = $wpdb-&amp;gt;prepare( "archived = %d ", $archived );
}
&lt;/pre&gt;&lt;p&gt;
Here we see why e.g. &lt;code&gt;true&lt;/code&gt; doesn't work, because &lt;code&gt;is_numeric( true )&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and the SQL modification is skipped.
&lt;/p&gt;
&lt;p&gt;
I want to suggest using  e.g. &lt;code&gt;wp_validate_boolean()&lt;/code&gt; for the validation.
&lt;/p&gt;
&lt;p&gt;
Here's an example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isset( $this-&amp;gt;query_vars['archived'] ) ) {
    $archived                               = wp_validate_boolean( $this-&amp;gt;query_vars['archived'] );
    $this-&amp;gt;sql_clauses['where']['archived'] = $wpdb-&amp;gt;prepare( "archived = %d ", $archived );
}
&lt;/pre&gt;&lt;p&gt;
or we could be more specific with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isset( $this-&amp;gt;query_vars['archived'] ) ) {
    $archived                               = wp_validate_boolean( $this-&amp;gt;query_vars['archived'] ) ? 1 : 0;
    $this-&amp;gt;sql_clauses['where']['archived'] = $wpdb-&amp;gt;prepare( "archived = %d ", $archived );
}
&lt;/pre&gt;&lt;p&gt;
etc.
&lt;/p&gt;
&lt;p&gt;
I added a patch as a starting example. There I added &lt;code&gt;@type mixed&lt;/code&gt; to the documentation because that's how the input of &lt;code&gt;wp_validate_boolean()&lt;/code&gt; is documented (it can be a general boolean value like &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30150 (apply_filters( 'image_size_names_choose' ) should be provided a named ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 03 Sep 2016 16:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30150#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30150#comment:7/1472919769523982</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Worth noting &lt;a href="https://core.trac.wordpress.org/timeline?from=2016-09-03T16%3A05%3A15Z&amp;amp;precision=second"&gt;my comment&lt;/a&gt; on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/34981" title="#34981: defect (bug): Usage of `image_size_names_choose` breaks JS attachment model attributes (assigned)"&gt;#34981&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Are there contexts other than &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt; where filtering this value is needed? Perhaps we should either move the filter out of &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt; and into the views being built from the size data returned by these AJAX requests, or allow a second parameter to be passed to &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt; which would return all available sizes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34753 (Remove use of "Toggle" in strings) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 03 Sep 2016 16:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34753#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34753#comment:11/1472918807830824</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding two screenshots for reference and better understand how accessibility is involved here. Just two examples, this applies to all the meta boxes and several other controls (e.g. in the Customizer) that use &lt;code&gt;aria-label&lt;/code&gt; and &lt;code&gt;aria-expanded&lt;/code&gt; attributes.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/SojynzhlIH.png"&gt;&lt;img src="https://cldup.com/SojynzhlIH.png" alt="https://cldup.com/SojynzhlIH.png" crossorigin="anonymous" title="https://cldup.com/SojynzhlIH.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/dYqCMR1rtU.png"&gt;&lt;img src="https://cldup.com/dYqCMR1rtU.png" alt="https://cldup.com/dYqCMR1rtU.png" crossorigin="anonymous" title="https://cldup.com/dYqCMR1rtU.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34981 (Usage of `image_size_names_choose` breaks JS attachment model attributes) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 03 Sep 2016 16:05:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34981#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34981#comment:5/1472918715567648</guid>
      <description>&lt;p&gt;
I don't think that removing the &lt;code&gt;image_size_names_choose&lt;/code&gt; filter would reintroduce &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22598" title="#22598: defect (bug): Not using image_downsize() in wp_prepare_attachment_for_js() can break ... (closed: fixed)"&gt;#22598&lt;/a&gt; as the main issue there is that people might be using the &lt;code&gt;image_downsize&lt;/code&gt; filter to short circuit WP's native image resizing implementation.
&lt;/p&gt;
&lt;p&gt;
Besides &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt;, the &lt;code&gt;image_size_names_choose&lt;/code&gt; filter is applied in three other places:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;image_size_input_fields()&lt;/code&gt; – only called from legacy media upload forms.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Custom_Background::wp_set_background_image()&lt;/code&gt; – deprecated in 3.5
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_print_media_templates()&lt;/code&gt; – three times, and always used to populate size options for a select element.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt; is going to continue to be used as a standard way to create generalized attachment models to return in AJAX requests, then we should probably consider moving this filter to the front-end where interfaces are being populated by size options, rather than doing so when the model is built.
&lt;/p&gt;
&lt;p&gt;
If that approach turns out to be impossible due to backwards compatibility issues, it might be better pass a second parameter to &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt; which would give requests an opportunity to bypass this filter and return all available image sizes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30796 (Entity Name vs. Entity Number) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Sep 2016 15:24:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30796#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30796#comment:4/1472916271766881</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30796#comment:3" title="Comment 3"&gt;GaryJ&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is WP UTF-8 safe yet? Could we use the real &lt;code&gt;’&lt;/code&gt; in the code?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's a precedent in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38359" title="Formatting: for a performance boost in `remove_accents()`, convert ..."&gt;[38359]&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even with numbered or named entities, do translators ensure those entities are used in contractions in the translated strings?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think entities were originally used to make sure the code is ASCII-only, and prevent code editors from introducing issues like the one just fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38517" title="Upload: Correct encoding issue in `swfupload.js`, introduced in ..."&gt;[38517]&lt;/a&gt; :) That said, I guess most editors should be UTF-8 safe now.
&lt;/p&gt;
&lt;p&gt;
Translators can use actual characters instead of entities, that should not cause any issues.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does GlotPress do any sort of conversion?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not that I know of.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) created</title>
      
        <dc:creator>GeertDD</dc:creator>

      <pubDate>Sat, 03 Sep 2016 15:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936/1472915522850094</guid>
      <description>&lt;p&gt;
Nothing gets inserted when clicking the non-breaking space character in the TinyMCE editor:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://s16.postimg.org/d15i95s51/nbsp.png"&gt;&lt;img src="https://s16.postimg.org/d15i95s51/nbsp.png" alt="https://s16.postimg.org/d15i95s51/nbsp.png" crossorigin="anonymous" title="https://s16.postimg.org/d15i95s51/nbsp.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that I also tried adding &lt;code&gt;160,nbsp&lt;/code&gt; to the entities in the TinyMCE config as described in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/26842" title="#26842: defect (bug): Contenteditable, multiple spaces, &amp;amp;nbsp, and U+00A0 (new)"&gt;#26842&lt;/a&gt;. No change.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29299 (Plural forms not available for some strings) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 15:04:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29299#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29299#comment:8/1472915056605821</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29299#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems consistent with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31696" title="Screen Options: Improve items per page option label.
Previously the ..."&gt;[31696]&lt;/a&gt;, though I'd like to see if we can address &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29299#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt; as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Most of the items in Discussions settings are grouped, and have multiple controls i.e. a checkbox and an input field or dropdown.
&lt;/p&gt;
&lt;p&gt;
They are going to need more thought, and they are mutually exclusive to those in Reading settings. A post-commit discussion or a new ticket may be best IMHO.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29199 (A few typofixes in comments/etc) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Sep 2016 15:01:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29199#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29199#comment:5/1472914867015769</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38517" title="Upload: Correct encoding issue in `swfupload.js`, introduced in ..."&gt;38517&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upload: Correct encoding issue in &lt;code&gt;swfupload.js&lt;/code&gt;, introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29479" title="Fix some documentation typos in various core files.
Props vlajos. ..."&gt;[29479]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29199" title="#29199: defect (bug): A few typofixes in comments/etc (closed: fixed)"&gt;#29199&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38517]: Upload: Correct encoding issue in `swfupload.js`, introduced in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Sep 2016 15:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38517</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38517/1472914866362574</guid>
      <description>&lt;p&gt;
Upload: Correct encoding issue in &lt;code&gt;swfupload.js&lt;/code&gt;, introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29479" title="Fix some documentation typos in various core files.
Props vlajos. ..."&gt;[29479]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29199" title="#29199: defect (bug): A few typofixes in comments/etc (closed: fixed)"&gt;#29199&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32998 (What's a weblog?) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32998#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32998#comment:6/1472914611975419</guid>
      <description>&lt;p&gt;
&lt;code&gt;An avatar is a visual at-a-glance representation of you, across different websites.&lt;/code&gt;
or
&lt;code&gt;An avatar is a visual representation of you, across different websites.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Two key words here:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"visual" - we may support screen readers, but the raison d'etre is that it's a graphical instance.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;"representation" - it doesn't have to be a photo, or any likeness of a person - it could be a company logo - so don't focus on what may or may not &lt;em&gt;in&lt;/em&gt; the avatar, but what it stands for - it represents (typically) a single person.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm not keen on the "follows", or "shared between websites" - the websites don't share it amongst themselves.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:199</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:199/1472914472964255</guid>
      <description>&lt;p&gt;
Hi @pento
&lt;/p&gt;
&lt;p&gt;
Happy to test and get this into core =)
&lt;/p&gt;
&lt;p&gt;
With filters the tests work nicely. But unfortunately my problem persists using your latest code changes.
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;do_action&lt;/code&gt; doesn't seem to work. Here my tests for you to play with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;public function test_remove_and_add_last_action_1() {
  $this-&amp;gt;hook = new Wp_Hook();
  $this-&amp;gt;hook-&amp;gt;add_filter( 'remove_and_add', '__return_empty_string', 10, 0 );
  $this-&amp;gt;hook-&amp;gt;add_filter( 'remove_and_add', array( $this, '_action_remove_and_add1' ), 11, 0 );
  $this-&amp;gt;hook-&amp;gt;add_filter( 'remove_and_add', array( $this, '_action_remove_and_add2' ), 12, 0 );
  $this-&amp;gt;action_output = '';
  $this-&amp;gt;hook-&amp;gt;do_action( [] );
  // Works! First add1, then add2. ($this-&amp;gt;action_output = '12')
  $this-&amp;gt;assertSame( '12', $this-&amp;gt;action_output );
}
public function test_remove_and_add_last_action_2() {
  $this-&amp;gt;hook = new Wp_Hook();
  $this-&amp;gt;hook-&amp;gt;add_filter( 'remove_and_add', '__return_empty_string', 10, 0 );
  $this-&amp;gt;hook-&amp;gt;add_filter( 'remove_and_add', array( $this, '_action_remove_and_add1' ), 13, 0 );
  $this-&amp;gt;hook-&amp;gt;add_filter( 'remove_and_add', array( $this, '_action_remove_and_add2' ), 12, 0 );
  $this-&amp;gt;action_output = '';
  $this-&amp;gt;hook-&amp;gt;do_action( [] );
  // Fails! First add2, but no add1. ($this-&amp;gt;action_output = '2')
  $this-&amp;gt;assertSame( '21', $this-&amp;gt;action_output );
}
public function _action_remove_and_add1() {
  $this-&amp;gt;action_output .= '1';
}
public function _action_remove_and_add2() {
  $this-&amp;gt;hook-&amp;gt;remove_filter( 'remove_and_add', array( $this, '_action_remove_and_add2' ), 12 );
  $this-&amp;gt;hook-&amp;gt;add_filter( 'remove_and_add', array( $this, '_action_remove_and_add2' ), 12, 0 );
  $this-&amp;gt;action_output .= '2';
}
&lt;/pre&gt;&lt;p&gt;
Hope this helps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24040 (Use "posts" instead of "topics" (in tagcloud tooltips)) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24040#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24040#comment:5/1472913854679746</guid>
      <description>&lt;p&gt;
With custom taxonomies (i.e. &lt;code&gt;genre&lt;/code&gt;), it might not be posts that are shown but some custom post (i.e. &lt;code&gt;book&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I suspect the correct solution would be to have the tag cloud look at the post type associated with the chosen taxonomy, and pull in a particular singular or plural label. It would also need to allow for multiple post types associated with the same taxonomy too i.e. &lt;code&gt;1 book and 3 films&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34753 (Remove use of "Toggle" in strings) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:38:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34753#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34753#comment:10/1472913493845556</guid>
      <description>&lt;p&gt;
Adjust, switch, or alternate?
&lt;/p&gt;
&lt;p&gt;
I guess the emphasis in English, is that it's not just a change, but a &lt;em&gt;binary&lt;/em&gt; change between two options. It's one or the other.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29299 (Plural forms not available for some strings) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:37:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29299#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29299#comment:7/1472913449204277</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems consistent with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31696" title="Screen Options: Improve items per page option label.
Previously the ..."&gt;[31696]&lt;/a&gt;, though I'd like to see if we can address &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29299#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt; as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36194 (Media Settings page description is unclear) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:34:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36194#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36194#comment:1/1472913246443974</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A little late, but welcome and thank you for your ticket @mklasen!
&lt;/p&gt;
&lt;p&gt;
The patch looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30796 (Entity Name vs. Entity Number) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:30:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30796#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30796#comment:3/1472913035634600</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://www.w3.org/TR/html-polyglot/#named-entity-references"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Polyglot markup&lt;/a&gt; requires numbered entities and the W3C Recommendation is that &lt;a class="ext-link" href="http://www.w3.org/TR/2005/REC-charmod-20050215/#C048"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;numbered entities SHOULD use the hexadecimal form when it exists&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Is WP UTF-8 safe yet? Could we use the real &lt;code&gt;’&lt;/code&gt; in the code?
&lt;/p&gt;
&lt;p&gt;
Even with numbered or named entities, do translators ensure those entities are used in contractions in the translated strings? Does GlotPress do any sort of conversion? How about plugin authors? I feel some more answers are needed beyond just whether to change the source, to see what effect (good or bad) it will have for translators.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37935 (Add post ID among post's post type posts) created</title>
      
        <dc:creator>mifr45</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:30:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37935</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37935/1472913000265105</guid>
      <description>&lt;p&gt;
Add to database a field containing post ID among post's post type posts.
It can be useful for users when they're using custom post types.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29299 (Plural forms not available for some strings) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29299#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29299#comment:6/1472911782344429</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch added which amends the strings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29299.diff attached to Ticket #29299</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 14:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29299/29299.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29299/29299.diff/1472911624296745</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:20/1472910817492185</guid>
      <description>&lt;p&gt;
@westonruter said "The vast majority of uses for this functionality would surely be wanting to tweak the styles of a theme's stylesheet."
This is conjecture. I would submit that the novices would want the theme to do it, and just switch themes to get one that looks better. More experienced users would use a plugin to add CSS or find a theme with that option. Advanced users write their own theme or child theme, and don't need this at all. I would also submit that while it makes sense that the CSS must match the HTML that the theme outputs, this type of feature is more useful as a way to keep something constant regardless of theme. I could see users putting tweaks to plugin CSS in there and then having a big problem when they switch themes. I can also see theme support forums having a lot more issues because of the new place to store CSS that overrides all others (comes last).
&lt;/p&gt;
&lt;p&gt;
I have a client that is a WordPress novice. I styled their site as they requested and the next year, they decided to switch themes without telling me. Most of their site was still operational, but widget areas were different and menu locations were different, so some of the content was missing or needing adjustment. I discovered this, not them. The novice expects all the content to be constant, and just the look to change, as advertised. It currently doesn't work that way, and the proposed change exacerbates the problem.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;If this is really an area that core should be doing&lt;/strong&gt;, why not make it theme independent? Or at least provide an option for that?
If it has to be theme specific, have you considered that the post type is like an attachment and the CSS is actually stored in a file? This way the storage is easier (CSS can be difficult to get into the database correctly), and the inclusion in the header is better (using the src attribute), and the browser can cache the file and it can be served zipped.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18146 (Add user-level timezone setting) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18146#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18146#comment:31/1472910527014768</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18146/18146.3.diff" title="Attachment '18146.3.diff' in Ticket #18146"&gt;18146.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18146/18146.3.diff" title="Download"&gt;​&lt;/a&gt; makes the patch apply cleanly again.
&lt;/p&gt;
&lt;p&gt;
Previous comments are still valid and some additional work needs to be done to actually make use of the user's timezone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18146.3.diff attached to Ticket #18146</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:46:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18146/18146.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18146/18146.3.diff/1472910410340245</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34823 (image_send_to_editor filter is not fired when an Image is edited or ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34823#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34823#comment:5/1472910162064024</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37934 (Separate account settings and profile settings) created</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:36:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37934</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37934/1472909801489752</guid>
      <description>&lt;p&gt;
Current limitations of profile management in WordPress:
&lt;/p&gt;
&lt;p&gt;
On &lt;code&gt;wp-admin/profile.php&lt;/code&gt; there's too much you can do:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Change personal preferences
&lt;/li&gt;&lt;li&gt;Account and session management
&lt;/li&gt;&lt;li&gt;Update publicly visible profile data
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If plugins add additional fields to that page, it gets very long quite quickly. Even without plugins you have to scroll all the way down to change your password. Pretty sure you change your password more often than disabling the visual editor, so that order isn't ideal.
&lt;/p&gt;
&lt;p&gt;
Idea:
&lt;/p&gt;
&lt;p&gt;
Separate account management and profile settings. Platforms like WordPress.com, Facebook or Twitter do this for a reason.
&lt;/p&gt;
&lt;p&gt;
This was recently mentioned in a discussion about adding 2FA to core, see &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1470765550002658"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core/p1470765550002658&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The plugin I mentioned there: &lt;a class="ext-link" href="https://wordpress.org/plugins/wp-user-profiles/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-user-profiles/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Slightly related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/26769" title="#26769: enhancement: Change &amp;#34;Your Profile&amp;#34; under Users Menu to &amp;#34;My Profile&amp;#34; (reopened)"&gt;#26769&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Account management:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Change backend preferences
&lt;/li&gt;&lt;li&gt;Change email address
&lt;/li&gt;&lt;li&gt;Change password
&lt;/li&gt;&lt;li&gt;Log out everywhere else (perhaps with a session overview in the future as was originally the plan)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Profile management:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Show/change profile picture
&lt;/li&gt;&lt;li&gt;Change biographical info like name, contact methods
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20977 (Add Dynamic Comment Statuses) updated</title>
      
        <dc:creator>mymothersdaughter</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20977#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20977#comment:8/1472909385326896</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20977#comment:7" title="Comment 7"&gt;rachelbaker&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We don't really have a &lt;code&gt;comment_status&lt;/code&gt; column in the database.  We *DO* have &lt;code&gt;comment_approved&lt;/code&gt; which can have a value of: &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;spam&lt;/code&gt; or &lt;code&gt;trash&lt;/code&gt; (check out those amazing mixed types!).
&lt;/p&gt;
&lt;p&gt;
I want to understand the different use-cases for custom comment statuses. That would make it easier to know if we should solve this by adding a filter or two OR we need to add registration functions and handle more like custom &lt;code&gt;post_status&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi Rachel, would it be possible to add a "Read" function to the comment statuses? There are plenty of times where the comment is just a message which doesn't need to be approved and placed on the blog post. I will typically respond to it but leave it marked as Unapproved because it's not spam and I don't want to delete it. But I'd like to keep it but mark it "Read" so my number of Unapproved Comments can then go back to zero. Or even a way to move a comment to Feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:198</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:198/1472909290325956</guid>
      <description>&lt;p&gt;
Ah, I see what's happening.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;p11 removes itself, and so &lt;code&gt;::resort_active_iterations()&lt;/code&gt; causes the current &lt;code&gt;$this-&amp;gt;iterations&lt;/code&gt; to skip forward to priority 12.
&lt;/li&gt;&lt;li&gt;p11 re-adds itself, but now the current priority in &lt;code&gt;$this-&amp;gt;iterations&lt;/code&gt; is 12, so &lt;code&gt;::resort_active_iterations()&lt;/code&gt; doesn't go backwards.
&lt;/li&gt;&lt;li&gt;When &lt;code&gt;::apply_filters()&lt;/code&gt; finishes priority 11, it assumes that the current &lt;code&gt;$this-&amp;gt;iterations&lt;/code&gt; hasn't changed, so it grabs the next priority (after 12).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.17.diff" title="Attachment '17817.17.diff' in Ticket #17817"&gt;17817.17.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.17.diff" title="Download"&gt;​&lt;/a&gt; alters &lt;code&gt;::resort_active_iterations()&lt;/code&gt;, to detect when a new priority level has been created, that matches the current priority according to &lt;code&gt;::apply_filters()&lt;/code&gt;, and moves the current &lt;code&gt;$this-&amp;gt;iterations&lt;/code&gt; back to that priority level.
&lt;/p&gt;
&lt;p&gt;
@noplanman: Could you test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.17.diff" title="Attachment '17817.17.diff' in Ticket #17817"&gt;17817.17.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.17.diff" title="Download"&gt;​&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37933 (Design Issue - While Uploading a plugin.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37933#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37933#comment:5/1472909199490702</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like a conflict with one of your Tevolution (?) plugins or your theme, the button has clearly some styling that doesn't come from core and probably a JS error too. Does it still happen with all plugins disabled and a default theme (for example Twenty Sixteen or Twenty Fifteen) activated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:25:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492#comment:18/1472909150261331</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Was there any consideration for implementing post statuses as an actual "enumerated" (or "enum") data type (or at least a PHP simulation thereof)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
An enumerated list wouldn't allow much in the way of custom statuses.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
and what abilities a status should have
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is crying out for an interface to be created first, so that each &lt;code&gt;WP_*_Status&lt;/code&gt;, including &lt;code&gt;WP_Post_Status&lt;/code&gt; can implement it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37933 (Design Issue - While Uploading a plugin.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37933#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37933#comment:4/1472908767689474</guid>
      <description>&lt;p&gt;
Could not reproduce on Windows 10 with Chrome 53 either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.17.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:16:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.17.diff/1472908583707340</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37933 (Design Issue - While Uploading a plugin.) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sat, 03 Sep 2016 13:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37933#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37933#comment:3/1472908051215796</guid>
      <description>&lt;p&gt;
I've tried to reproduce this on OSX in Safari (v9.1.3), FF (v48) and Chrome (v53) - all seems fine here. Could this be Windows specific?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37933 (Design Issue - While Uploading a plugin.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Sep 2016 12:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37933#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37933#comment:2/1472907498020468</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37933 (Design Issue - While Uploading a plugin.) updated</title>
      
        <dc:creator>yktaufik</dc:creator>

      <pubDate>Sat, 03 Sep 2016 12:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37933#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37933#comment:1/1472907331827298</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>WordPress 4.6 CSS Issue.mp4 attached to Ticket #37933</title>
      
        <dc:creator>yktaufik</dc:creator>

      <pubDate>Sat, 03 Sep 2016 12:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37933/WordPress%204.6%20CSS%20Issue.mp4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37933/WordPress%204.6%20CSS%20Issue.mp4/1472907238941071</guid>
      <description>&lt;p&gt;
A short video.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19898 (Create a is_login() function similar to is_admin()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Sep 2016 12:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19898#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19898#comment:25/1472907220247835</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19898#comment:24" title="Comment 24"&gt;tazotodua&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My topic (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37620" title="#37620: defect (bug): Give us a bit help, with IS_ADMIN and IS_LOGIN (new)"&gt;#37620&lt;/a&gt;) was closed  marked as "DUPLICATE" of this topic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That ticket is still open. That said, it's unlikely a new constant will be introduced here. Constants are not a great way to check for context, as they are not filterable and hard to use in unit tests, see the discussion in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25669" title="#25669: enhancement: Introduce helper function for AJAX checks (closed: fixed)"&gt;#25669&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37483" title="#37483: defect (bug): WP_LOGIN is not being detected (closed: duplicate)"&gt;#37483&lt;/a&gt; was closed, because the &lt;code&gt;IS_LOGIN_PAGE&lt;/code&gt; constant proposed there does seem similar to the &lt;code&gt;is_login()&lt;/code&gt; function proposed here. Why is it "completely different"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37933 (Design Issue - While Uploading a plugin.) created</title>
      
        <dc:creator>yktaufik</dc:creator>

      <pubDate>Sat, 03 Sep 2016 12:53:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37933</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37933/1472907200547569</guid>
      <description>&lt;p&gt;
Hi, I found this CSS issue this evening. When I try to upload new plugin the button collapses.
&lt;/p&gt;
&lt;p&gt;
I know I've 2 notifications and might be for that reason this is happening. Even though the button should have proper CSS having number of notifications. Isnt?
&lt;/p&gt;
&lt;p&gt;
Here's a short video:
&lt;a class="ext-link" href="https://www.dropbox.com/s/qddfyqvnabw7f6c/WordPress%204.6%20CSS%20Issue.mp4?dl=0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.dropbox.com/s/qddfyqvnabw7f6c/WordPress%204.6%20CSS%20Issue.mp4?dl=0&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 12:52:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:35/1472907161144173</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/26511.diff" title="Attachment '26511.diff' in Ticket #26511"&gt;26511.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/26511.diff" title="Download"&gt;​&lt;/a&gt; applies cleanly against trunk again.
&lt;/p&gt;
&lt;p&gt;
Changes to the previous patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Actually includes some unit tests to get us started. Not included are Multisite-related tests (e.g. &lt;code&gt;switch_to_blog()&lt;/code&gt; + &lt;code&gt;switch_to_locale()&lt;/code&gt;) and tests with plugin/theme translations.
&lt;/li&gt;&lt;li&gt;Removes the need for a &lt;code&gt;WP_Locale_Storage&lt;/code&gt; class. One simple filter is enough.
&lt;/li&gt;&lt;li&gt;Adds &lt;code&gt;switch_locale&lt;/code&gt; and &lt;code&gt;restore_locale&lt;/code&gt; action hooks.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As you can see, this takes into account some of the feedback from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29783" title="#29783: feature request: User Admin Language (closed: fixed)"&gt;#29783&lt;/a&gt;. This ticket should actually lay the foundation for that one so we can kill two birds with one stone
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov: Regarding the &lt;code&gt;$wp_locale_switcher&lt;/code&gt; global, we could change it when &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt; lands or perhaps make it a property of the &lt;code&gt;WP&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
There's actually a bunch of i18n globals like &lt;code&gt;$l10n&lt;/code&gt;, &lt;code&gt;$l10n_unloaded&lt;/code&gt;, &lt;code&gt;$locale&lt;/code&gt;, &lt;code&gt;$wp_locale&lt;/code&gt;, &lt;code&gt;$wp_local_package&lt;/code&gt;. We could combine all of these in 1 central &lt;code&gt;WP_i18n&lt;/code&gt; class (which could also be a property of the &lt;code&gt;WP&lt;/code&gt; class), though that's probably out of scope for this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26511.diff attached to Ticket #26511</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 12:38:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/26511.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/26511.diff/1472906317806271</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Sat, 03 Sep 2016 12:02:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:197</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:197/1472904124823793</guid>
      <description>&lt;p&gt;
@pento, I see your test is adding the filters with the same priority. The problem only happens if the priorities are different.
&lt;/p&gt;
&lt;p&gt;
Please check &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37679" title="#37679: defect (bug): Actions that remove and add themselves again, break other actions (closed: duplicate)"&gt;#37679&lt;/a&gt; again to see what I mean.
&lt;/p&gt;
&lt;p&gt;
Unfortunately I can't modify your test, as PHP/PHPUnit dies on me with a &lt;code&gt;Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)&lt;/code&gt; when I change the priorities, which is very odd.
I'm trying to find a solution for this, without luck so far.
Maybe you have an idea why PHP is failing like this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33228 (Customizer initial focus) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 03 Sep 2016 11:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33228#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33228#comment:18/1472903442631942</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33228.diff attached to Ticket #33228</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 03 Sep 2016 11:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33228/33228.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33228/33228.diff/1472903413825514</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37925 (permalink not updating after editing slug, on post edit admin page) closed</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Sat, 03 Sep 2016 11:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37925#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37925#comment:1/1472902847571582</guid>
      <description>wontfix: &lt;p&gt;
Link will not update till you press page update button.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37871 (Clarify Login Label (Email Address)) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 03 Sep 2016 11:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37871#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37871#comment:6/1472901124778990</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37871#comment:5" title="Comment 5"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure 'Email Address' is really clearer than 'Email'.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd disagree (of course). They are different things. I can give you my "email address" (&lt;code&gt;me@example.com&lt;/code&gt;), but I can't give you my "email" unless I forward the whole of my inbox to you. Likewise, my home (the building), and my home address (what you'd write on an envelope) are different things. If you want to send me a Christmas card, I'm not going to give you my home.
&lt;/p&gt;
&lt;p&gt;
A similar comparison would be how some people use the term "blog" as a shortened version of "blog post". As web-savvy users, we could probably guess that those people mean a single post, instead of the collection of posts, but what they are saying isn't technically correct.
&lt;/p&gt;
&lt;p&gt;
The point here is to be accurate with language, and avoid the use of colloquialisms, especially on the front-end for something as critical as logging in.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If so, this should likely be changed across the board, for example on the "Add New User" screen(s).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I did see that, but wanted this ticket to have a narrow scope. I'm all for updating Add New User screen too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sat, 03 Sep 2016 11:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:11/1472900896558981</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If we want to someday unify the meta and settings APIs, sure, but that's not what this ticket is about. Similar to the meta ticket, I think this is a bit off-track, and I worry we're not going to make forward movement if we keep discussing that.
&lt;/p&gt;
&lt;p&gt;
This ticket is about changing the &lt;code&gt;register_setting&lt;/code&gt; function to take extra parameters to make it more extensible. Any other goals should be new tickets.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Patch looks good; the change in &lt;code&gt;unregister_setting&lt;/code&gt; should add braces on to the &lt;code&gt;$sanitize_callback != ''&lt;/code&gt; conditional, since we're in the region. Otherwise, :thumbsup:.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37932 (Add annotations for extended `WP_Site` properties) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:50:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37932</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37932/1472899841127981</guid>
      <description>&lt;p&gt;
Since &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36935" title="#36935: enhancement: Implement lazy-loading blog details in `WP_Site` (closed: fixed)"&gt;#36935&lt;/a&gt; you can access &lt;code&gt;blogname&lt;/code&gt;, &lt;code&gt;siteurl&lt;/code&gt;, &lt;code&gt;post_count&lt;/code&gt; and &lt;code&gt;home&lt;/code&gt; via &lt;code&gt;WP_Site&lt;/code&gt;. But none of those are annotated like &lt;code&gt;$network_id&lt;/code&gt; or &lt;code&gt;$id&lt;/code&gt; (&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/class-wp-site.php?rev=38369&amp;amp;marks=18-19#L10"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/class-wp-site.php?rev=38369&amp;amp;marks=18-19#L10&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33228 (Customizer initial focus) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33228#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33228#comment:17/1472899777835176</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33228 (Customizer initial focus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33228#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33228#comment:16/1472899637843812</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472899634000076"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33228 (Customizer initial focus) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33228#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33228#comment:15/1472899531173901</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looking back at this, just tested on Safari and looks like it wasn't getting the updated &lt;code&gt;themes.css&lt;/code&gt; stylesheet even when pressing &lt;code&gt;Shift-Command-R&lt;/code&gt;. I had to empty the cache from the Develop menu. So in order to properly test this patch, pleas try this:
&lt;/p&gt;
&lt;p&gt;
If you haven't already, go in &lt;code&gt;Safari &amp;gt; Preferences &amp;gt; Advanced tab&lt;/code&gt; and check "Show Develop menu in menu bar". Then just empty the caches from the Develop menu:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/GBBJGnRnwP.png"&gt;&lt;img src="https://cldup.com/GBBJGnRnwP.png" alt="https://cldup.com/GBBJGnRnwP.png" crossorigin="anonymous" title="https://cldup.com/GBBJGnRnwP.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After this, everything seems to work nicely even in Safari+VoiceOver and the &lt;code&gt;customize-loader&lt;/code&gt; "overlay" is actually the only content available:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;no more need to set initial focus, any related JS can be removed
&lt;/li&gt;&lt;li&gt;the overlay behaves like a normal web page, focus management is a native browser thing
&lt;/li&gt;&lt;li&gt;keyboard navigation is "natively" constrained within the overlay, this fixes also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27705" title="#27705: defect (bug): Keyboard navigation should be constrained to the theme installer overlay (closed: fixed)"&gt;#27705&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Needs a bit more testing (Windows) and cleaning. Moving to 4.7.
&lt;/p&gt;
&lt;p&gt;
There are some more improvements to consider in this area but they should probably go in a separate ticket:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the "X" link hidden text is different, sometimes it's "Close" sometimes "Cancel", I'd propose to simplify and just use "Close" whether it's the live preview or customizer or theme installer
&lt;/li&gt;&lt;li&gt;order of elements: the "X" link should probably be the first control in the tab order
&lt;/li&gt;&lt;li&gt;consider to use &lt;code&gt;wp.a11y.speak()&lt;/code&gt; to announce the &lt;code&gt;customize-loader&lt;/code&gt; overlay has loaded
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37928 (add `pre_add_option` filter) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37928#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37928#comment:4/1472899340023656</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37928#comment:3" title="Comment 3"&gt;jipmoors&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would prefer to have a separate filter to allow a short-cicuit instead of abusing a return value to imply such a behaviour.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Definitely makes sense. I patched this way too quickly. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:34/1472899085179958</guid>
      <description>&lt;p&gt;
@pbearne Yes, switching to non-existing locales should be avoided. See also suggestions in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29783" title="#29783: feature request: User Admin Language (closed: fixed)"&gt;#29783&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'll try to wrap my head around the patch &amp;amp; tests now.
&lt;/p&gt;
&lt;p&gt;
Edit: What if there's a locale available for a plugin, but not for core? That shouldn't prevent switching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37871 (Clarify Login Label (Email Address)) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37871#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37871#comment:5/1472897959396001</guid>
      <description>&lt;p&gt;
I'm not sure 'Email Address' is really clearer than 'Email'. If so, this should likely be changed across the board, for example on the "Add New User" screen(s).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37931 (new function post_type_exists()) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:14:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37931#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37931#comment:1/1472897648051202</guid>
      <description>invalid: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for your report and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
The function &lt;code&gt;post_type_exists()&lt;/code&gt; exists in WordPress since version 3.0.0.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37931 (new function post_type_exists()) created</title>
      
        <dc:creator>mifr45</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37931</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37931/1472897136926172</guid>
      <description>&lt;p&gt;
&lt;strong&gt;New function post_type_exists()&lt;/strong&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;post_type_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="nv"&gt;$types&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_types&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$types&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27705 (Keyboard navigation should be constrained to the theme installer overlay) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27705#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27705#comment:8/1472897125303730</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33228" title="#33228: enhancement: Customizer initial focus (closed: fixed)"&gt;#33228&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37928 (add `pre_add_option` filter) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Sat, 03 Sep 2016 10:01:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37928#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37928#comment:3/1472896872729865</guid>
      <description>&lt;p&gt;
I would prefer to have a separate filter to allow a short-cicuit instead of abusing a return value to imply such a behaviour.
&lt;/p&gt;
&lt;p&gt;
And a random value really sounds like a terrible idea :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 03 Sep 2016 09:20:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:7/1472894408055355</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good catch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37930 (Introduce a general `pre_option` filter in `get_option()`) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37930</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37930/1472888252251625</guid>
      <description>&lt;p&gt;
We currently have a &lt;code&gt;pre_option_{$option}&lt;/code&gt; filter in &lt;code&gt;get_option()&lt;/code&gt; to short-circuit the process of retrieving an option. I think it would make sense to also add a global filter &lt;code&gt;pre_option&lt;/code&gt;, similar like we have in &lt;code&gt;update_option()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37928 (add `pre_add_option` filter) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:34:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37928#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37928#comment:2/1472888041177901</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37929 (Add `pre_delete_option` filter) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37929#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37929#comment:1/1472888032522075</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37929/37929.diff" title="Attachment '37929.diff' in Ticket #37929"&gt;37929.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37929/37929.diff" title="Download"&gt;​&lt;/a&gt; is a first take on introducing the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37929.diff attached to Ticket #37929</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:33:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37929/37929.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37929/37929.diff/1472887996504853</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37928 (add `pre_add_option` filter) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:26:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37928#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37928#comment:1/1472887595160858</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37928/37928.diff" title="Attachment '37928.diff' in Ticket #37928"&gt;37928.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37928/37928.diff" title="Download"&gt;​&lt;/a&gt; is a first take on introducing the filter. I used &lt;code&gt;null&lt;/code&gt; as a return value to skip since &lt;code&gt;null&lt;/code&gt; is very unlikely to be stored as option. However, it is not a perfect solution I think. I was wondering whether it might make sense to declare a &lt;code&gt;WP_DEFAULT_VALUE&lt;/code&gt; constant, fill it with some random value, and use that in such cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37928.diff attached to Ticket #37928</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:23:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37928/37928.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37928/37928.diff/1472887436381824</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37929 (Add `pre_delete_option` filter) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:15:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37929</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37929/1472886929791326</guid>
      <description>&lt;p&gt;
&lt;code&gt;get_option()&lt;/code&gt; and &lt;code&gt;update_option()&lt;/code&gt; already have filters to short-circuit their respective processes, so I think a similar filter should be added to &lt;code&gt;delete_option()&lt;/code&gt; as well.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37928" title="#37928: enhancement: add `pre_add_option` filter (new)"&gt;#37928&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37928 (add `pre_add_option` filter) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37928</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37928/1472886796763429</guid>
      <description>&lt;p&gt;
&lt;code&gt;get_option()&lt;/code&gt; and &lt;code&gt;update_option()&lt;/code&gt; already have filters to short-circuit their respective processes, so I think a similar filter should be added to &lt;code&gt;add_option()&lt;/code&gt; as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) reopened</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:09:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:6/1472886564455636</guid>
      <description>&lt;p&gt;
I've found a defect with the changes here. Namely, if &lt;code&gt;status_header()&lt;/code&gt; was being called previously to &lt;code&gt;wp_send_json()&lt;/code&gt;, then the default &lt;code&gt;$status_header&lt;/code&gt; of &lt;code&gt;200&lt;/code&gt; would clobber the &lt;code&gt;status_header()&lt;/code&gt; that was first set. In other words, this breaks backwards compatibility.
&lt;/p&gt;
&lt;p&gt;
On a related note, I also found that &lt;code&gt;_ajax_wp_die_handler&lt;/code&gt; was clobbering the &lt;code&gt;status_header()&lt;/code&gt; call if output buffering is on (since &lt;code&gt;headers_sent()&lt;/code&gt; would be &lt;code&gt;false&lt;/code&gt;). See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35666/35666.3.diff" title="Attachment '35666.3.diff' in Ticket #35666"&gt;35666.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35666/35666.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>35666.3.diff attached to Ticket #35666</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 03 Sep 2016 07:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35666/35666.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35666/35666.3.diff/1472886413094506</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37635 (BUG in get_option) updated</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Sat, 03 Sep 2016 06:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37635#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37635#comment:3/1472884685638020</guid>
      <description>&lt;p&gt;
maybe you are right.  I will check that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19898 (Create a is_login() function similar to is_admin()) updated</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Sat, 03 Sep 2016 06:34:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19898#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19898#comment:24/1472884494963669</guid>
      <description>&lt;p&gt;
My topic (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37620" title="#37620: defect (bug): Give us a bit help, with IS_ADMIN and IS_LOGIN (new)"&gt;#37620&lt;/a&gt;) was closed  marked as "DUPLICATE" of this topic.
&lt;/p&gt;
&lt;p&gt;
However, MY REQUEST IS COMPLETELY DIFFERENT!
&lt;/p&gt;
&lt;p&gt;
WHAT ON EARTH, if you add
&lt;code&gt;define('LOGIN_PAGE_EXECUTED', true);&lt;/code&gt;
or something like that in wp-login.php
&lt;/p&gt;
&lt;p&gt;
why dont you make a great help to programmers?
&lt;/p&gt;
&lt;p&gt;
we cant determine when login page is executed (when we output login page on other page then wp-login.php url, like many security plugins do that)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 03 Sep 2016 06:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:67/1472883969018048</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472883967000073"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 03 Sep 2016 05:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:19/1472881099786654</guid>
      <description>&lt;p&gt;
@joyously The vast majority of uses for this functionality would surely be wanting to tweak the styles of a theme's stylesheet. That is, to override and extend the cascade. If a user is experienced enough to know about FOUC then they'd just as well add that to their &lt;code&gt;functions.php&lt;/code&gt; to output at the top of &lt;code&gt;wp_head&lt;/code&gt;. That's my opinion on that.
&lt;/p&gt;
&lt;p&gt;
I am not familiar with the state of CSSTidy. I just know that it is used by Jetpack for their CSS editing module.
&lt;/p&gt;
&lt;p&gt;
As for storing the CSS in a custom post type as opposed to directly in a theme mod, the reason for doing this is for scalability. It is conceivable that a lot of CSS could be dumped into such a field and since theme mods are just options and also _autoloaded_ options, it is important that unbounded blocks of CSS to not be included in the theme mod itself. If the Memcached object cache plugin is used, and there are several themes that have lots of CSS, then the 1MB limit for a cache bucket could be breached and the site could crash since alloptions would no longer be cacheable. As for data portability, I don't think that will cause a problem. Consider the CSS being stored in a new post type called &lt;code&gt;theme_css&lt;/code&gt;, where each theme has one and only one &lt;code&gt;theme_css&lt;/code&gt; post created. The &lt;code&gt;post_name&lt;/code&gt; for these posts can exactly correspond to the theme that it is associated with. In that way, the &lt;code&gt;theme_css&lt;/code&gt; posts could be exported via the normal XML exporter and imported on another site, and the would then automatically be recognized because they'd have the &lt;code&gt;post_name&lt;/code&gt; wouldn't change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sat, 03 Sep 2016 05:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:18/1472879396632256</guid>
      <description>&lt;p&gt;
@westonruter I think you have assumed there is no reason to ever need some CSS before all the other CSS?  What about cases of avoiding a "flash of unstyled content"? or a small animation that is visible while the page loads? or other scenarios I haven't thought of? Anyway, it seems like the user should be able to choose.
&lt;/p&gt;
&lt;p&gt;
And as for CSSTidy, do you actually have a good version to use? The one on GitHub is old, and the one I found that checks CSS online is also. I didn't try the GitHub one, but the online one (csstidyonline.com) did not reject my test of putting a couple of HTML tags in between two style blocks. It just complained about text-shadow; like I said, old.
&lt;/p&gt;
&lt;p&gt;
I was not remarking on the use of a post type to store the CSS, except for how it would be emitted. But now that you mention it, I don't really like the idea of having styles stored separately from the theme. It makes it more difficult to duplicate or move the design to a different site. It's bad enough that the menus and widgets are tied by names to the theme, so they can't be generic. You have to configure them for each theme -- such a hassle. Adding more ways to store theme specific data seems like a bad idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 03 Sep 2016 04:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:196</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:196/1472876739241729</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.16.diff" title="Attachment '17817.16.diff' in Ticket #17817"&gt;17817.16.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.16.diff" title="Download"&gt;​&lt;/a&gt; adds a unit test for the filters being added and removed from the currently running hook.
&lt;/p&gt;
&lt;p&gt;
@noplanman: The new test added (&lt;code&gt;test_remove_and_add&lt;/code&gt; in &lt;code&gt;tests/hooks/add_filter.php&lt;/code&gt;) seems to cover the remove/add behaviour you described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37679" title="#37679: defect (bug): Actions that remove and add themselves again, break other actions (closed: duplicate)"&gt;#37679&lt;/a&gt;, but I was unable to reproduce the output you described.
&lt;/p&gt;
&lt;p&gt;
Could I get you to have a look at the test, and say how it differs from your code?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.16.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 03 Sep 2016 04:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.16.diff/1472876718211695</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>17817.15.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 03 Sep 2016 04:18:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.15.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.15.diff/1472876319327585</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>17817.14.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 03 Sep 2016 04:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.14.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.14.diff/1472876203335584</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 03 Sep 2016 03:43:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:12/1472874234293785</guid>
      <description>&lt;p&gt;
@FolioVision that's more on the theme review team side of things, but I imagine that there will eventually be a requirement to use the approach that we come up with here or to put UI within a section.
&lt;/p&gt;
&lt;p&gt;
@westonruter more than JS, I'd say that custom controls/sections/panels and generally the PHP and JS APIs should be used to extend the customizer UI. Right now most themes that add promotional links are bypassing the API entirely and injecting content into the DOM with arbitrary JS, into core-defined UI elements such as the global header (implying that they're taking their site "Pro" by buying a custom theme, and in a way implying that they're getting a "pro" version of WordPress). An &lt;code&gt;action&lt;/code&gt; would be a stopgap solution to provide a simple route that complies with core-recommended UI practices, and is the only good way I can think of to facilitate adding UI to a core section heading that should not be overridden by a custom instance. The other way is creating a custom section (which could display only a top level link and not expand), but that would introduce more UI for end users and more complexity for devs than being able to add a link via this action.
&lt;/p&gt;
&lt;p&gt;
If you ask me, theme shouldn't be allowed to alter the top-level UI in any way, especially not with external links, but the theme review team decided to allow this so we need to make sure that it's possible to do in a reasonably elegant way that won't break things.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Sep 2016 02:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:7/1472870236387010</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37927#comment:6" title="Comment 6"&gt;Pulsar_Media&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The theme is installed and i can verify its installed through FTP - but for some reason WordPress thinks it doesn't exist.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Might be related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37924" title="#37924: defect (bug): Cannot delete or update themes in directories containing an uppercase ... (closed: fixed)"&gt;#37924&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>Pulsar_Media</dc:creator>

      <pubDate>Sat, 03 Sep 2016 02:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:6/1472869431966945</guid>
      <description>&lt;p&gt;
Ok here's one example - i just tried to delete one of my child themes and here is the WordPress error i got along with the ajax return message in the web console:
&lt;/p&gt;
&lt;p&gt;
WordPress error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Deletion failed: The requested theme does not exist.
&lt;/pre&gt;&lt;p&gt;
Ajax message:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{"success":false,"data":{"delete":"theme","slug":"hope-charity-theme-child","errorMessage":"The requested
 theme does not exist."}}
&lt;/pre&gt;&lt;p&gt;
The theme is installed and i can verify its installed through FTP - but for some reason WordPress thinks it doesn't exist.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35614 (Cannot check capabilities on single taxonomy terms) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 03 Sep 2016 02:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35614#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35614#comment:7/1472868901267885</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38516" title="Taxonomy: Introduce some taxonomy capability tests in preparation for ..."&gt;38516&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Introduce some taxonomy capability tests in preparation for introducing more fine grained capabilities for terms.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35614" title="#35614: enhancement: Cannot check capabilities on single taxonomy terms (closed: fixed)"&gt;#35614&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38516]: Taxonomy: Introduce some taxonomy capability tests in preparation for ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 03 Sep 2016 02:15:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38516</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38516/1472868900671687</guid>
      <description>&lt;p&gt;
Taxonomy: Introduce some taxonomy capability tests in preparation for introducing more fine grained capabilities for terms.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35614" title="#35614: enhancement: Cannot check capabilities on single taxonomy terms (closed: fixed)"&gt;#35614&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37218 (get_main_network_id should use WP_Network_Query) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sat, 03 Sep 2016 00:07:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37218#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37218#comment:3/1472861220482469</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37218#comment:2" title="Comment 2"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing I don't think we need is the &lt;code&gt;! empty( $_networks )&lt;/code&gt; check. That kind of check hasn't been in place before and shouldn't be required since every Multisite has at least one network.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. I don't believe there's a way to hit that condition unless something has gone very wrong. I think we're okay without it. I've added &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37218/37218.4.diff" title="Attachment '37218.4.diff' in Ticket #37218"&gt;37218.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37218/37218.4.diff" title="Download"&gt;​&lt;/a&gt;, which makes that change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
About unit tests, I don't think these are necessary here since that part of &lt;code&gt;get_main_network_id()&lt;/code&gt; is already covered (&lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/multisite/network.php#L66"&gt;https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/multisite/network.php#L66&lt;/a&gt; would fail if we broke it).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37218.4.diff attached to Ticket #37218</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sat, 03 Sep 2016 00:03:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37218/37218.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37218/37218.4.diff/1472861024582220</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37553 (Deprecate `wp_get_network()`) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37553#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37553#comment:7/1472860081077062</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38515" title="Multisite: Deprecate `wp_get_network()`.
`wp_get_network()` was ..."&gt;38515&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Deprecate &lt;code&gt;wp_get_network()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_get_network()&lt;/code&gt; was converted into a wrapper for &lt;code&gt;get_network()&lt;/code&gt; in 4.6.0 and can now be deprecated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This moves &lt;code&gt;wp_get_network()&lt;/code&gt; to the bottom of &lt;code&gt;ms-load.php&lt;/code&gt; as &lt;code&gt;ms-deprecated.php&lt;/code&gt; is not available early enough.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props PieWP, flixos90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37553" title="#37553: enhancement: Deprecate `wp_get_network()` (closed: fixed)"&gt;#37553&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38515]: Multisite: Deprecate `wp_get_network()`.  `wp_get_network()` was ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38515</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38515/1472860080593748</guid>
      <description>&lt;p&gt;
Multisite: Deprecate &lt;code&gt;wp_get_network()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_get_network()&lt;/code&gt; was converted into a wrapper for &lt;code&gt;get_network()&lt;/code&gt; in 4.6.0 and can now be deprecated.
&lt;/p&gt;
&lt;p&gt;
This moves &lt;code&gt;wp_get_network()&lt;/code&gt; to the bottom of &lt;code&gt;ms-load.php&lt;/code&gt; as &lt;code&gt;ms-deprecated.php&lt;/code&gt; is not available early enough.
&lt;/p&gt;
&lt;p&gt;
Props PieWP, flixos90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37553" title="#37553: enhancement: Deprecate `wp_get_network()` (closed: fixed)"&gt;#37553&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37553 (Deprecate `wp_get_network()`) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37553#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37553#comment:6/1472859596554202</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37553#comment:5" title="Comment 5"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should there be a comment about why the function is located here rather than with the other deprecated functions?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think we need to do that on each function. It may be worth adding a comment above the first deprecated function in this file, &lt;code&gt;get_current_site_name()&lt;/code&gt;, to indicate that any deprecated functions from &lt;code&gt;ms-load.php&lt;/code&gt; should go here, but that would probably be another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37038 (WP_Tax_Query needs caching) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37038#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37038#comment:6/1472859338254659</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is another good ticket for 4.7. The patch will need updated I think as @boonebgorges  merged the taxonomy id code in another commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:32:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:2/1472859177408737</guid>
      <description>&lt;p&gt;
This should be in 4.7.  What do you think @boonebgorges ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:14/1472856768621093</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38514" title="Embeds: Clarify some assertion failure messages and correct a test URL ..."&gt;38514&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Embeds: Clarify some assertion failure messages and correct a test URL for Twitter timelines.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38514]: Embeds: Clarify some assertion failure messages and correct a test URL ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38514</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38514/1472856768126057</guid>
      <description>&lt;p&gt;
Embeds: Clarify some assertion failure messages and correct a test URL for Twitter timelines.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:13/1472856626782344</guid>
      <description>&lt;p&gt;
So the reason these tests hadn't gone into core up until this point is because there are so many failures with the external providers.
&lt;/p&gt;
&lt;p&gt;
The tests are quite volatile too (I can see at least two tested URLs which are 404ing that previously weren't), for example Kickstarter is sending me &lt;code&gt;429 Too Many Requests&lt;/code&gt; responses, and Cloudup is sending me &lt;code&gt;502 Bad Gateway&lt;/code&gt; intermittently.
&lt;/p&gt;
&lt;p&gt;
I guess it makes sense for the tests to remain in a group which never gets tested by default (ie. without passing the &lt;code&gt;--group external-oembed&lt;/code&gt; flag), but then I'm not sure if that's super valuable.
&lt;/p&gt;
&lt;p&gt;
&lt;del&gt;In addition, the &lt;code&gt;testOembedProviderReturnsExpectedResponse()&lt;/code&gt; test really needs to be split into several smaller tests so that every assertion can be performed (as opposed to the test failing at the first assertion failure). This means moving the actual HTTP requests into a data provider.&lt;/del&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:11/1472856438555461</guid>
      <description>&lt;p&gt;
@celloexpressions I wonder, however, if a new &lt;code&gt;action&lt;/code&gt; is conflicting with our common mantra that JS should be used for extending the customizer UI?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:7/1472855688972756</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38513" title="Customize: Fix php warning due to ..."&gt;38513&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Fix php warning due to &lt;code&gt;WP_Customize_Manager::prepare_setting_validity_for_js()&lt;/code&gt; incorrectly assuming that &lt;code&gt;WP_Error&lt;/code&gt; will only ever have arrays in its &lt;code&gt;$error_data&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Eliminates the server mutating the a &lt;code&gt;WP_Error&lt;/code&gt;'s &lt;code&gt;$error_data&lt;/code&gt; to merge-in a &lt;code&gt;$from_server&lt;/code&gt; flag (since it may not be an array to begin with). Instead it defers to the client to add a &lt;code&gt;fromServer&lt;/code&gt; param on any &lt;code&gt;Notification&lt;/code&gt; instances created from server-sent errors.
&lt;/li&gt;&lt;li&gt;Ensures that notifications will be re-rendered if a notification's &lt;code&gt;message&lt;/code&gt; changes but the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; remain the same.
&lt;/li&gt;&lt;li&gt;Adds explicit support for the &lt;code&gt;Notification&lt;/code&gt; class to have a &lt;code&gt;setting&lt;/code&gt; property, ensuring that the property is set whereas previously it was dropped.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37890" title="#37890: defect (bug): `WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ... (closed: fixed)"&gt;#37890&lt;/a&gt;.&lt;br /&gt;
Props westonruter, dlh.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38513]: Customize: Fix php warning due to ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38513</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38513/1472855688300439</guid>
      <description>&lt;p&gt;
Customize: Fix php warning due to &lt;code&gt;WP_Customize_Manager::prepare_setting_validity_for_js()&lt;/code&gt; incorrectly assuming that &lt;code&gt;WP_Error&lt;/code&gt; will only ever have arrays in its &lt;code&gt;$error_data&lt;/code&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Eliminates the server mutating the a &lt;code&gt;WP_Error&lt;/code&gt;'s &lt;code&gt;$error_data&lt;/code&gt; to merge-in a &lt;code&gt;$from_server&lt;/code&gt; flag (since it may not be an array to begin with). Instead it defers to the client to add a &lt;code&gt;fromServer&lt;/code&gt; param on any &lt;code&gt;Notification&lt;/code&gt; instances created from server-sent errors.
&lt;/li&gt;&lt;li&gt;Ensures that notifications will be re-rendered if a notification's &lt;code&gt;message&lt;/code&gt; changes but the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; remain the same.
&lt;/li&gt;&lt;li&gt;Adds explicit support for the &lt;code&gt;Notification&lt;/code&gt; class to have a &lt;code&gt;setting&lt;/code&gt; property, ensuring that the property is set whereas previously it was dropped.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37890" title="#37890: defect (bug): `WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ... (closed: fixed)"&gt;#37890&lt;/a&gt;.
Props westonruter, dlh.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37924 (Cannot delete or update themes in directories containing an uppercase ...) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:31:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37924#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37924#comment:2/1472855512996438</guid>
      <description>&lt;p&gt;
I saw this slot into 4.7. I'm on the road at the moment, and I know it's too late for 4.6.1, but I do think it was a regression. If there's another minor release, we should consider it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37924 (Cannot delete or update themes in directories containing an uppercase ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:57:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37924#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37924#comment:1/1472853440773323</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:46:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:33/1472852772854904</guid>
      <description>&lt;p&gt;
I still have a problem that you can change the locale to one that we don't have the translation files installed for.
&lt;/p&gt;
&lt;p&gt;
I believe that we need to include a set of .mo file with the locale settings for all supported languages or return and error if an attempt to switch to locale that the lang .mo are not installed
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
&lt;p&gt;
I do what to see this in WP but we need to make is safe.
&lt;/p&gt;
&lt;p&gt;
Paul
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:5/1472852477753440</guid>
      <description>&lt;p&gt;
With a topic in the support forums we could more easily help you and open a trac ticket if necessary.
&lt;/p&gt;
&lt;p&gt;
When you open the developer console in your browser (F12), you should be able to see the Ajax requests triggered when deleting or installing a plugin/theme. If you could share the responses of those, this would be helpful.
&lt;/p&gt;
&lt;p&gt;
I assume there are some PHP notices or errors being thrown which cause the process to fail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:12/1472852151939331</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38512" title="Embeds: Update the oEmbed provider test suite.
* Remove the manual ..."&gt;38512&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Embeds: Update the oEmbed provider test suite.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove the manual flag for HTTPS support and replace it with a simple check on the URL format.
&lt;/li&gt;&lt;li&gt;Ensure &lt;code&gt;testOembedTestsCoverAllProviders()&lt;/code&gt; actually fails when a new provider is added without a corresponding test.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38512]: Embeds: Update the oEmbed provider test suite.  * Remove the manual ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38512</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38512/1472852151006745</guid>
      <description>&lt;p&gt;
Embeds: Update the oEmbed provider test suite.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove the manual flag for HTTPS support and replace it with a simple check on the URL format.
&lt;/li&gt;&lt;li&gt;Ensure &lt;code&gt;testOembedTestsCoverAllProviders()&lt;/code&gt; actually fails when a new provider is added without a corresponding test.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36824 (do_all_pings function queries all posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36824#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36824#comment:13/1472851882035260</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:4/1472850055026449</guid>
      <description>&lt;p&gt;
Are all the sites on the same server? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>Pulsar_Media</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:3/1472849906633474</guid>
      <description>&lt;p&gt;
Looks like an issue with WordPress to me - everything was working perfectly fine until i upgraded to 4.6 and did the database upgrade. I upgraded 7 sites and they are all giving me these errors. I reinstalled WordPress on one of the sites and its working fine now - its definitely an issue with WordPress - or the database upgrade process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:57:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:32/1472849861704949</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any way to avoid introducing a new global? See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) closed</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:53:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:2/1472849623530571</guid>
      <description>invalid: &lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
It appears to be an issue with your WordPress installation or your server, not an issue with WordPress. With that being said, it should be a support ticket and you should open one here with all the details: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:1/1472849428108471</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) created</title>
      
        <dc:creator>Pulsar_Media</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927/1472849281444264</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I am facing several errors in the backend after upgrading to WordPress version 4.6
&lt;/p&gt;
&lt;p&gt;
For example when i try to delete a theme i get the following error outlined in a red notification box:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Deletion failed: undefined&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
When i try to update a plugin i get the following error:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Update Failed: Internal Server Error&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Is there a quick fix for this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37926 (Twenty Eleven &amp; Twenty Twelve: Dropdown category widget exceeds parent ...) created</title>
      
        <dc:creator>gma992</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:40:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37926</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37926/1472848855810986</guid>
      <description>&lt;p&gt;
On Twenty-Eleven and Twenty-Twelve, the drop down menu at the Category Widget exceeds the size of the main body of the website and overlaps with other widgets at the footer.
&lt;/p&gt;
&lt;p&gt;
Image Twenty-Eleven: ​&lt;a class="ext-link" href="https://cloudup.com/ca0bAvmzqz4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/ca0bAvmzqz4&lt;/a&gt;
Image Twenty-Twelve: &lt;a class="ext-link" href="https://cloudup.com/cnK1axsIQ9a"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cnK1axsIQ9a&lt;/a&gt;
Footer overlap: &lt;a class="ext-link" href="https://cloudup.com/cecneIc8O3b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cecneIc8O3b&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;How to replicate:&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Activate Twenty eleven
Go to Categories &amp;gt; new
Add a category with &amp;gt; 30 characters
Create a post or edit existing one and assign the category
Go to Appearance &amp;gt; Widgets &amp;gt; Categories widget &amp;gt; check "Display as dropdown" checkbox
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Proposed fix:&lt;/strong&gt; (Fixed the main issue but not tested properly for all cases)
&lt;/p&gt;
&lt;p&gt;
#cat {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
max-width:100%;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37925 (permalink not updating after editing slug, on post edit admin page) created</title>
      
        <dc:creator>stevepuddick</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37925</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37925/1472847795966582</guid>
      <description>&lt;p&gt;
When editing an existing permalink on a post edit page, the link itself does not update until the post is updated (save draft, or update is clicked). However, the text for the permalink is immediately updated. It is expected that the permalink will also be updated to the new value and not just the permalink text. This bug can be recreated as follows:
&lt;/p&gt;
&lt;p&gt;
1) click the 'edit' button on any post edit screen (on any custom post type that supports permalinks)
2) edit the slug to have an alternate value
3) click on the anchor text next to the 'edit' button. This will bring you to a 404 page since that old link is no longer correct
&lt;/p&gt;
&lt;p&gt;
Refer to this screenshot for more info:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://webrockstar.net/wp-permalink-bug.png"&gt;&lt;img src="http://webrockstar.net/wp-permalink-bug.png" alt="http://webrockstar.net/wp-permalink-bug.png" crossorigin="anonymous" title="http://webrockstar.net/wp-permalink-bug.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37924.patch attached to Ticket #37924</title>
      
        <dc:creator>chrisjean</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:16:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37924/37924.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37924/37924.patch/1472847387337492</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37924 (Cannot delete or update themes in directories containing an uppercase ...) created</title>
      
        <dc:creator>chrisjean</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37924</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37924/1472847362382962</guid>
      <description>&lt;p&gt;
The shiny updates v2 code changes &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37714" title="Update/Install: Shiny Updates v2.
Gone are the days of isolation and ..."&gt;[37714]&lt;/a&gt; introduced a bug where themes in directories with one or more uppercase letters in the directory name cannot be deleted or updated from inside the Appearance &amp;gt; Themes page. This is due to the &lt;code&gt;$_POST['slug']&lt;/code&gt; data being sanitized using &lt;code&gt;sanitize_key()&lt;/code&gt; which forces uppercase characters to lowercase.
&lt;/p&gt;
&lt;p&gt;
The shiny updates v2 changes did not create the same problem with plugins since plugins keep track of plugin (akismet/akismet.php) and slug (akismet) separately with only the slug being passed through &lt;code&gt;sanitize_key()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Looking at the plugin-handling code, the plugin value is sanitized using &lt;code&gt;sanitize_text_field()&lt;/code&gt;. The attached patch updates the theme code to use &lt;code&gt;sanitize_text_field()&lt;/code&gt; rather than &lt;code&gt;sanitize_key()&lt;/code&gt; when sanitizing the slug. In my testing, this fixes both updating and deleting themes in directories with uppercase characters.
&lt;/p&gt;
&lt;p&gt;
I should note that while there aren't any themes on .org that have an uppercase letter in the directory name, all of the themes released by iThemes.com (my employer) use uppercase letters in the theme directory name, I've seen other theme vendors do the same, and I've seen many customer sites where they have custom theme directory names that include uppercase letters.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:15:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:32/1472847356260079</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:31/1472847073919121</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472847069001145"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #25676,​37919 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25676%2C37919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25676%2C37919/1472846600645781</guid>
      <description>duplicate: &lt;p&gt;
Thanks @wpdevart!
&lt;/p&gt;
&lt;p&gt;
The rest of the ticket is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25676" title="#25676: enhancement: Add icons to plugins (closed: wontfix)"&gt;#25676&lt;/a&gt;, going to close as such. Discussion can continue on that ticket.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #14459 (Rotate Full Size Images on Upload) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:01:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14459#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14459#comment:49/1472846501012828</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33051 (Pictures rotated 90 degrees left on upload) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33051#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33051#comment:11/1472846376998599</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472846375000142"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14459 (Rotate Full Size Images on Upload) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14459#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14459#comment:48/1472846359646493</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472846354000140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37919 (Mess with plugins) updated</title>
      
        <dc:creator>wpdevart</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37919#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37919#comment:2/1472846233685785</guid>
      <description>&lt;p&gt;
Hi.
&lt;/p&gt;
&lt;p&gt;
Thanks for this information, we changed the title.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:52:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:78/1472845923182763</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472845921000119"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27266 (Front end search for attachment title cannot succeed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27266#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27266#comment:16/1472844935463951</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472844933000085"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:34:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:26/1472844848570530</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472844846000083"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:56/1472843176120522</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472843172000031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:06:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:72/1472843175926799</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472843172000031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37840 (Optimize full size images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37840#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37840#comment:6/1472843174972311</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472843172000031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34823 (image_send_to_editor filter is not fired when an Image is edited or ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34823#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34823#comment:4/1472842817123516</guid>
      <description>&lt;p&gt;
Sure @joemcgill I can take a look!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34823 (image_send_to_editor filter is not fired when an Image is edited or ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34823#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34823#comment:3/1472842615740397</guid>
      <description>&lt;p&gt;
Hi @nicola.peluchetti,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report. @adamsilverstein is this something you're interested in picking up in 4.7?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37922 (WP_Site_Query does not have a $join query clause to compact) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:45:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37922#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37922#comment:1/1472841940844032</guid>
      <description>&lt;p&gt;
Related:  &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/37923" title="#37923: feature request: Introduce shared wp_blogmeta database table for multisite installation (reopened)"&gt;#37923&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:1/1472841766712659</guid>
      <description>&lt;p&gt;
A first-pass proof of concept on GitHub: &lt;a class="ext-link" href="https://github.com/stuttter/wp-blog-meta"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/stuttter/wp-blog-meta&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:41:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923/1472841713607631</guid>
      <description>&lt;p&gt;
In a multisite installation, it would be nice to be able to query for sites using some kind of other arbitrary method. This currently is not possible because each site has it's own &lt;code&gt;_options&lt;/code&gt; database table. (This is totally fine, and makes sense considering the huge number of options each site will usually have.)
&lt;/p&gt;
&lt;p&gt;
However, with the introduction of &lt;code&gt;WP_Site_Query&lt;/code&gt; and now having the ability to query for sites in a multitude of ways, a dedicated &lt;code&gt;blogmeta&lt;/code&gt; database table would pair nicely with the &lt;code&gt;WP_Site&lt;/code&gt; object.
&lt;/p&gt;
&lt;p&gt;
This may not be necessary for core right away, but eventually, some multisite-specific options could get moved here to avoid polluting the per-site options table. For example, the &lt;code&gt;new_user_&lt;/code&gt; options when inviting existing users to an existing site, are a multisite specific option that is auto-loaded, causing a potentially costly recalculation of &lt;code&gt;alloptions&lt;/code&gt; just to invite a user to your site.
&lt;/p&gt;
&lt;p&gt;
A few other neat potential core usages off-the-top-of-my-head:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Store for the total number of users in each site, and query by most popular
&lt;/li&gt;&lt;li&gt;Store for the total number of published posts in each site, and query by most active
&lt;/li&gt;&lt;li&gt;Store the Blog Name, and query for sites alphabetically
&lt;/li&gt;&lt;li&gt;Store a &lt;code&gt;site_owner&lt;/code&gt; user ID, and query for sites the user "owns" relatively efficiently (compared to the &lt;code&gt;LIKE&lt;/code&gt; query on &lt;code&gt;usermeta&lt;/code&gt;)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36824 (do_all_pings function queries all posts) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:40:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36824#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36824#comment:12/1472841657096380</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472841653001140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34633 (X-pingback header should be generated the same as rel="pingback" link) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34633#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34633#comment:5/1472841174506745</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34633 (X-pingback header should be generated the same as rel="pingback" link) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34633#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34633#comment:4/1472840602483559</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472840599001137"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37922.2.patch attached to Ticket #37922</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37922/37922.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37922/37922.2.patch/1472840578263722</guid>
      <description>&lt;p&gt;
Remove
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37922.patch attached to Ticket #37922</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37922/37922.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37922/37922.patch/1472840529775764</guid>
      <description>&lt;p&gt;
Add
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37922 (WP_Site_Query does not have a $join query clause to compact) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37922</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37922/1472840481846371</guid>
      <description>&lt;p&gt;
The new &lt;code&gt;WP_Site_Query&lt;/code&gt; class tries to &lt;code&gt;compact()&lt;/code&gt; the &lt;code&gt;join&lt;/code&gt; variable, which will never exist because there are no related tables to join against.
&lt;/p&gt;
&lt;p&gt;
Recommend we either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add &lt;code&gt;join&lt;/code&gt; clause &amp;amp; &lt;code&gt;$join = '';&lt;/code&gt; to &lt;code&gt;get_site_ids()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Remove &lt;code&gt;join&lt;/code&gt; from &lt;code&gt;compact()&lt;/code&gt; statement
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:168/1472839768272630</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Half the reason Composer was suggested in this ticket was to reduce how much work we'd have to do, since we could have something ready immediately that "just works". Now, the proposal is to rewrite this functionality anyway.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, and there is no reason this cannot be an iterative approach, starting w/ the tried/true composer autoloader and optimizing after the cow paths have become worn in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:27:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:167/1472837261446936</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:166" title="Comment 166"&gt;JohnPBloch&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To that end, I propose that we run with @schlessera's proposal to fork the PHP 5.2 autoloader generator and, in addition to making it use &lt;code&gt;ABSPATH&lt;/code&gt; rather than a path relative to &lt;code&gt;composer.json&lt;/code&gt;, it should strip out (i.e., neglect to generate) all logic in the loading method after the class map until such time that core actually &lt;em&gt;uses&lt;/em&gt; one of the autoloading PSRs (which is a completely different conversation).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Half the reason Composer was suggested in this ticket was to reduce how much work we'd have to do, since we could have something ready immediately that "just works". Now, the proposal is to rewrite this functionality anyway.
&lt;/p&gt;
&lt;p&gt;
I still think this seems to be a solution (Composer) searching for a problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:12:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:10/1472836331747825</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@lukecavanagh sorry for the spam - added a patch with a unit test and sample images with orientation exif data to test against.
&lt;/p&gt;
&lt;p&gt;
This only addresses the issue when actively rotating an image via the admin as per the scope of this ticket but it's a good place to start regarding correcting the problem on upload and for adding additional tests. I'll look into suitable solutions for correcting images on upload next.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>orientation-8.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-8.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-8.jpg/1472836102278587</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-7.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:08:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-7.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-7.jpg/1472836091363079</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-6.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-6.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-6.jpg/1472836079448335</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-5.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-5.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-5.jpg/1472836068232886</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-4.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-4.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-4.jpg/1472836057393625</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-3.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-3.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-3.jpg/1472836047174129</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-2.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-2.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-2.jpg/1472836035595887</guid>
      <description>&lt;p&gt;
orientation data value 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>orientation-1.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-1.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-1.jpg/1472836019230411</guid>
      <description>&lt;p&gt;
orientation data value 1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37140-1.patch attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:06:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.patch/1472835979664341</guid>
      <description>&lt;p&gt;
Same as original but with unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34113 (Add a 'View Archive' link to admin bar for post types.) updated</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:59:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34113#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34113#comment:14/1472835570010986</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34113/34113-unit-tests.diff" title="Attachment '34113-unit-tests.diff' in Ticket #34113"&gt;34113-unit-tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34113/34113-unit-tests.diff" title="Download"&gt;​&lt;/a&gt; adds a unit test.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:12/1472835532874325</guid>
      <description>&lt;p&gt;
@pavelevap no, if you add a nav menu which points to a published post, and then you unpublish that post, the nav menu item status does not change. The nav menu will continue to include that item, even though it points to a &lt;code&gt;draft&lt;/code&gt; post and unauthorized users would not be able to see it. That's probably a separate (yet related) issue to what we're discussing here: limiting non-published posts from being available to be added to a nav menu vs filtering out nav menu items from a nav menu when they point to a non-published post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34113-unit-tests.diff attached to Ticket #34113</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34113/34113-unit-tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34113/34113-unit-tests.diff/1472835453544216</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:54:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:17/1472835289588631</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@joyously the customizer-supplied CSS should be printed _after_ any enqueued stylesheets are printed. So it would come last in the cascade. I don't think there should be an option to come first, but rather to decide it comes last.
&lt;/p&gt;
&lt;p&gt;
And yes, we talked about using a new custom post type for storing the theme CSS. The CSS would be stored in &lt;code&gt;post_content&lt;/code&gt; and each theme would have their own instance of this post type to store the CSS for that theme (like a theme mod is tied to the theme). The &lt;code&gt;post_content&lt;/code&gt; would not include the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag. I would think the CSS would be printed into the document as a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element as opposed to &lt;code&gt;link&lt;/code&gt; an external stylesheet, but maybe not. The CSSTidy library would ensure that only valid CSS is saved to avoid an XSS vulnerability as you've described.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37921 (Make "newbloguser" URL segment customizable/filterable) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37921#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37921#comment:1/1472834178553369</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37921.patch attached to Ticket #37921</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37921/37921.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37921/37921.patch/1472834161318447</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;user_invitation_endpoint()&lt;/code&gt; to &lt;code&gt;ms-functions.php&lt;/code&gt; and use to replace &lt;code&gt;newbloguser&lt;/code&gt; endpoint
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35774 (WordPress admin &lt;title&gt; structure) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35774#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35774#comment:15/1472833723837151</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35774#comment:14" title="Comment 14"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The patch needs translator comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We don't need translator-comments. The patch removes translatable-strings. The placeholders &lt;code&gt;'%1$s %2$s %3$s'&lt;/code&gt; are part of the &lt;code&gt;sprintf()&lt;/code&gt; function, they are not a translatable strings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37921 (Make "newbloguser" URL segment customizable/filterable) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:25:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37921</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37921/1472833545933625</guid>
      <description>&lt;p&gt;
The built-in multisite user invitation URL is forced into using &lt;code&gt;/newbloguser/&lt;/code&gt; as the invitation endpoint to all sites. When employing WordPress Multisite in an environment that isn't for blogging, this endpoint does't make much sense.
&lt;/p&gt;
&lt;p&gt;
Because this value is hardcoded, the only way to change this is to roll your own invitation system entirely, which is a lot of work for a little bit of vanity.
&lt;/p&gt;
&lt;p&gt;
I don't think the invitation system itself is too bad, and it will be easy to make this segment filterable.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:16/1472832993447163</guid>
      <description>&lt;p&gt;
I didn't read all of the Slack discussions, but what is missing in these comments is
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Some indication of the order of the CSS being added. Does it come first before theme CSS or last or in between?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Since the C in CSS is cascading, when it is emitted is quite important. It could be a user option to have this CSS come out first or last. And this probably needs to be explained a little bit in the Help text.
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;How is this CSS added? If it is stored in a post type, does the theme add it with bracketing style tags? Or does core do that? Or are the style tags part of the post content?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
If the CSS were stored in a file, it would be included with a style tag with a src attribute. Any HTML tags in there would be CSS syntax errors. But if it is included inline with a plain style tag, the user could put an ending style tag and then other HTML including script tags, which would be valid. This is where security problems would arise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37806 (Attachment Details - Edit: uneven height between input field and ...) updated</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37806#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37806#comment:3/1472830353846459</guid>
      <description>&lt;p&gt;
Hi @joemcgill,
&lt;/p&gt;
&lt;p&gt;
thanks for the review. There's a new patch attached that covers both screens. I didn't use the line-height because it made the field 1 px taller and needed to tweak the vertical padding to make it look right
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/GJVRzfKKQM-1200x1200.png"&gt;&lt;img src="https://cldup.com/GJVRzfKKQM-1200x1200.png" alt="https://cldup.com/GJVRzfKKQM-1200x1200.png" crossorigin="anonymous" title="https://cldup.com/GJVRzfKKQM-1200x1200.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
so I just added a tweaked padding plus restored the font size again because otherwise the font was smaller.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/1ddKCEGQ4h-3000x3000.png"&gt;&lt;img src="https://cldup.com/1ddKCEGQ4h-3000x3000.png" alt="https://cldup.com/1ddKCEGQ4h-3000x3000.png" crossorigin="anonymous" title="https://cldup.com/1ddKCEGQ4h-3000x3000.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37806.1.patch attached to Ticket #37806</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37806/37806.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37806/37806.1.patch/1472830330987116</guid>
      <description>&lt;p&gt;
Even height in Edit Media screen and Edit Image view of Media dialog
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37909 (get_terms returns array with missing cells) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37909#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37909#comment:1/1472830265110837</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@eddr Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
I can't reproduce this issue. Even when &lt;code&gt;hide_empty&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, array indexes should be consecutive with a default query.
&lt;/p&gt;
&lt;p&gt;
Are you running any plugins that may be filtering 'get_terms' or some other part of the term query process? Are you using a persistent object cache like Memcached? Are you able to reproduce the issue on a clean installation of WordPress, with no plugins (other than the one you use to register the taxonomy)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:11:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:55/1472829100267477</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31050#comment:35" title="Comment 35"&gt;dglingren&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I added PDF thumbnail generation to my plugin, [Media Library Assistant](&lt;a class="ext-link" href="https://wordpress.org/support/plugin/media-library-assistant"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/plugin/media-library-assistant&lt;/a&gt;), a while back. It supports dynamic generation in the &lt;code&gt;[mla_gallery]&lt;/code&gt; shortcode. It also has a bulk action in the Media/Assistant admin submenu to generate thumbnails and store them as separate Media Library items. You are welcome to incorporate any of the code or ideas in Core.
&lt;/p&gt;
&lt;p&gt;
I also discovered that adding "Featured Image" support to Media Library items is easy and works well:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_post_type_support( 'attachment', 'thumbnail' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Once that's done you can assign an image to any non-image item (PDF, audio, video, Office documents) and use it in gallery displays, etc. It's a nice alternative to generating thumbnails.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Using the post_thumbnail seems like it would be the WordPress way to do things, as attachments are just posts anyway, and it applies to all non-image types instead of just PDFs. Then it's just a matter of generating it on upload, and maybe marking it so the image is not displayed separately in the Media Library (or not).
&lt;/p&gt;
&lt;p&gt;
My opinion for generating the already uploaded ones is that it should only happen when used, as in while displaying the thumbnails in Media Library, the PDF is next, get the thumbnail but if it doesn't exist, create it. It seems to me that all image sizes should be done that way instead of littering the server with unused image sizes. (There's a plugin that does this: Dynamic Image Resizer.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27473 (Thickbox width and height parameters are ignored when using TB_iframe) updated</title>
      
        <dc:creator>Vahan4033</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:06:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27473#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27473#comment:15/1472828795847974</guid>
      <description>&lt;p&gt;
Having the same problem in WP 4.6. Height/Width params. don't work. I tried all possible suggestions listed here. Definitely a bug
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27473" title="#27473: defect (bug): Thickbox width and height parameters are ignored when using TB_iframe (new)"&gt;harmr&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I tried to load a thickbox with custom width and height parameters, like the codex says:
?TB_iframe=true&amp;amp;width=450&amp;amp;height=120
anyway regardsless of what values I use, custom with and height values are ignored.
I debugged /wp-includes/js/thickbox/thickbox.js and parameters are read in correctly,
anyway it does not have any effect when setting them for iframe-tag on line 198:
&lt;/p&gt;
&lt;p&gt;
jQuery("#TB_window").append("&amp;lt;div id='TB_title'&amp;gt;&amp;lt;div id='TB_ajaxWindowTitle'&amp;gt;"+caption+"&amp;lt;/div&amp;gt;&amp;lt;div id='TB_closeAjaxWindow'&amp;gt;&amp;lt;a href='#' id='TB_closeWindowButton' title='"+thickboxL10n.close+"'&amp;gt;&amp;lt;div class='tb-close-icon'&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;iframe frameborder='0' hspace='0' src='"+urlNoQuery&lt;a class="missing changeset" title="No changeset 0 in the repository"&gt;[0]&lt;/a&gt;+"' id='TB_iframeContent' name='TB_iframeContent"+Math.round(Math.random()*1000)+"' onload='tb_showIframe()' style='width:&amp;#34;+(ajaxContentW + 29)+&amp;#34;px;height:&amp;#34;+(ajaxContentH + 17)+&amp;#34;px;' &amp;gt;"+thickboxL10n.noiframes+"&amp;lt;/iframe&amp;gt;");
I tried to add the following code to check if resize is possible:
&lt;/p&gt;
&lt;p&gt;
jQuery("#TB_window").css("width","450");
jQuery("#TB_window").css("height","120");
this failed generally (although it worked when executing the command in the browser console)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37736 (Emails fail on certain server setups) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37736#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37736#comment:21/1472828598691209</guid>
      <description>&lt;p&gt;
4.6.1 is scheduled for release on September 7, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/09/01/4-6-1-release-candidate/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/09/01/4-6-1-release-candidate/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34335 (URL shorteners ( redirects) should to be supported by the embed ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34335#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34335#comment:10/1472828530081261</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34335/34335.2.diff" title="Attachment '34335.2.diff' in Ticket #34335"&gt;34335.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34335/34335.2.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Correct &lt;code&gt;@ticket&lt;/code&gt; annotation
&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;parse_url()&lt;/code&gt; with the &lt;code&gt;PHP_URL_QUERY&lt;/code&gt; argument.
&lt;/li&gt;&lt;li&gt;Correctly declare &lt;code&gt;$_provider_url&lt;/code&gt; in tests.
&lt;/li&gt;&lt;li&gt;Improve docs a bit.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34335.2.diff attached to Ticket #34335</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34335/34335.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34335/34335.2.diff/1472828455686770</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>JohnPBloch</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:166/1472828049248238</guid>
      <description>&lt;p&gt;
It seems to me that @MikeSchinkel's point that Composer does a lot of extra processing after classmaps is one worth acknowledging and incorporating. For core's own autoloading needs, obviously this won't be an issue. The performance question comes into play later for any plugins that might also trigger the autoloader. Because those plugin classes aren't in core's classmap, it would needlessly run through all the other autoloader checks only to predictably come up with nothing.
&lt;/p&gt;
&lt;p&gt;
To that end, I propose that we run with @schlessera's proposal to fork the PHP 5.2 autoloader generator and, in addition to making it use &lt;code&gt;ABSPATH&lt;/code&gt; rather than a path relative to &lt;code&gt;composer.json&lt;/code&gt;, it should strip out (i.e., neglect to generate) all logic in the loading method after the class map until such time that core actually &lt;em&gt;uses&lt;/em&gt; one of the autoloading PSRs (which is a completely different conversation).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37736 (Emails fail on certain server setups) updated</title>
      
        <dc:creator>peterwsterling</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37736#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37736#comment:20/1472827856573028</guid>
      <description>&lt;p&gt;
Yep - defo fixes the problem. When will this be released?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37898 (Prompt message when removing a plugin is sometimes misleading) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37898#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37898#comment:2/1472827534351393</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this! The confirmation dialog has been added as part of Shiny Updates, where plugin deletion was now made shiny.
&lt;/p&gt;
&lt;p&gt;
It's not that difficult to make the text context-aware, but with &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/20578" title="#20578: enhancement: Allow users to delete a plugin without uninstalling (reviewing)"&gt;#20578&lt;/a&gt; in mind it would make sense to not use a simple JS &lt;code&gt;confirm()&lt;/code&gt; dialog but a custom modal with three options (uninstall completely, delete only, cancel) Tempted to close this one as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37787 (WordPress MU 4.5.3 password reset mail doet not work. Other mail does.) updated</title>
      
        <dc:creator>peterwsterling</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37787#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37787#comment:4/1472826754538073</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is an issue I am finding on WP 4.6 too. Any progress? Can I help? Happy to take direction or provide data/examples/etc...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37526 (Introduce the possibility to register new administration panels) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:25:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37526#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37526#comment:6/1472826332596106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37526/37526.3.diff" title="Attachment '37526.3.diff' in Ticket #37526"&gt;37526.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37526/37526.3.diff" title="Download"&gt;​&lt;/a&gt; I introduce a new class &lt;code&gt;WP_Administration_Panel&lt;/code&gt; and also a new file for Administration Panel API functions. The panel class handles its own instances through a static property and methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37526.3.diff attached to Ticket #37526</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37526/37526.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37526/37526.3.diff/1472826048671725</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37920 (`the_title` filter called in 2 places inconsistently) created</title>
      
        <dc:creator>joelworsham</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37920</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37920/1472826021922398</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35317" title="#35317: defect (bug): Apply the `the_title` filter on original post titles in ... (closed: fixed)"&gt;#35317&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When calling &lt;code&gt;wp_nav_menu()&lt;/code&gt; to build a frontend nav menu, the filter &lt;code&gt;the_title&lt;/code&gt; ends up being called 2 times on page links, due to the above ticket.
&lt;/p&gt;
&lt;p&gt;
It is called here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/nav-menu.php#L754"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/nav-menu.php#L754&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and then here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-nav-menu.php#L169"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-nav-menu.php#L169&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
So it is called once when getting the post object title and then again when actually outputting the nav menu.
&lt;/p&gt;
&lt;p&gt;
I think this is negative for 2 reasons:
&lt;/p&gt;
&lt;p&gt;
1) Anyone who wants to filter &lt;code&gt;the_title&lt;/code&gt; for nav menu items will end up having it called 2 different times, which is odd and can provide inconsistency
2) In both cases, an object ID is included, but the first call the object ID is the Post that the menu item links to (where the title comes from) and the second call the object ID is the nav menu item ID. This means, if a developer anticipates the 2 calls, they cannot check against the supplied object ID to confirm operations only happen once.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:165</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:165/1472823795373256</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:164" title="Comment 164"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:163" title="Comment 163"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One more though on the general direction of this ticket:
&lt;/p&gt;
&lt;p&gt;
My preference would be to only consider Composer as built-time tool for now to build a 5.2-compatible class map that WordPress Core can use. Then use this to modify Core so that it can make better use of the autoloader. I expect his to have a positive impact (directly and indirectly) on the code quality and architecture of Core.
&lt;/p&gt;
&lt;p&gt;
Considering writing an API to provide a class autoloader to plugins &amp;amp; themes is too early right now, and not all of the preconditions for properly designing something like this are met yet.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this sums it up quite nicely.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. To reiterate: the only use of Composer being suggested here is to generate a classmap at build time. The only people who will ever have to worry about using Composer, on this proposal, are committers, and core contributors whose patches change the classmap (by adding/removing/renaming classes).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37446 (Introduce a filter for `self_admin_url()`) updated</title>
      
        <dc:creator>j.hoffmann</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:40:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37446#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37446#comment:5/1472823641034767</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37446/37446.2.diff" title="Attachment '37446.2.diff' in Ticket #37446"&gt;37446.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37446/37446.2.diff" title="Download"&gt;​&lt;/a&gt; I added the &lt;code&gt;$scheme&lt;/code&gt; parameter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37446.2.diff attached to Ticket #37446</title>
      
        <dc:creator>j.hoffmann</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:39:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37446/37446.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37446/37446.2.diff/1472823544067980</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:6/1472822619815875</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37890/37890.3.diff" title="Attachment '37890.3.diff' in Ticket #37890"&gt;37890.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37890/37890.3.diff" title="Download"&gt;​&lt;/a&gt; also looks good. Thanks @westonruter!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37919 (Mess with plugins) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37919#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37919#comment:1/1472821410077063</guid>
      <description>&lt;p&gt;
Hi @anatolt, thanks for the report!
&lt;/p&gt;
&lt;p&gt;
The issue with the plugin is that it's called &lt;code&gt;Lightbox - Gallery Lightbox&lt;/code&gt; in &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/lightbox-popup/tags/1.2.1/readme.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;readme.txt&lt;/a&gt;, but &lt;code&gt;Wpdevart Lightbox&lt;/code&gt; in the &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/lightbox-popup/tags/1.2.1/wpdevart_lightbox.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plugin file&lt;/a&gt;. @wpdevart, could you please fix that and use a consistent title?
&lt;/p&gt;
&lt;p&gt;
Adding icons to plugins list table was previously proposed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25676" title="#25676: enhancement: Add icons to plugins (closed: wontfix)"&gt;#25676&lt;/a&gt;, see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30186" title="#30186: enhancement: Add plugin icons to plugin list table in update-core.php (closed: fixed)"&gt;#30186&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:164</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:164/1472820919582987</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:163" title="Comment 163"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One more though on the general direction of this ticket:
&lt;/p&gt;
&lt;p&gt;
My preference would be to only consider Composer as built-time tool for now to build a 5.2-compatible class map that WordPress Core can use. Then use this to modify Core so that it can make better use of the autoloader. I expect his to have a positive impact (directly and indirectly) on the code quality and architecture of Core.
&lt;/p&gt;
&lt;p&gt;
Considering writing an API to provide a class autoloader to plugins &amp;amp; themes is too early right now, and not all of the preconditions for properly designing something like this are met yet.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this sums it up quite nicely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17771 (URL-encoded comment_author_url gets broken by MySQL varchar 200 length ...) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17771#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17771#comment:13/1472819230030972</guid>
      <description>&lt;p&gt;
What we need is something to store in comment_author_url to indicate that it is too large and we stored it elsewhere.
&lt;/p&gt;
&lt;p&gt;
The suggestion was a short URL. However, for an outside site, we might not get one of those. Since there are functions for retrieving the URL, we could have those check and replace if too large. However, many people access the comment array on retrieval directly.
&lt;/p&gt;
&lt;p&gt;
comment_author_url is overloaded in its use to be the pingback url storage location to begin with. Doesn't make it easy to determine what the right course of action is. Comment meta didn't exist when this started.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24801 (comments_number() shows "0 Comments" after Theme Unit Test import) updated</title>
      
        <dc:creator>samicooper</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24801#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24801#comment:3/1472818970671907</guid>
      <description>&lt;p&gt;
I experienced the same issue on page comments after importing the WP test data. This seems to do the trick:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'get_comments_number'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_count'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;comment_count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;is_admin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$comments_by_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;separate_comments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;get_comments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'status=approve&amp;amp;post_id='&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comments_by_type&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:20:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:10/1472818818162837</guid>
      <description>&lt;p&gt;
Nick, this is really important work you are doing here. Both providing the opportunity for promotion and limiting it. There should be strict guidelines
&lt;/p&gt;
&lt;p&gt;
Right now the plugin admin interface and admin interface in general is an absolute mess due to too many "creative" approaches to self-promotion (admin notifications, stickies, unwanted dashboard elements, promotion in posts interface not to mention billboard style preference sections). All this needs to be trimmed back (another ticket, or rather several).
&lt;/p&gt;
&lt;p&gt;
We have an opportunity here to stop this before it starts with the Customizer. I think we should provide guidelines and a template. It seems to me any theme which tries to get around the limits should be blocked in the customizer with a simple notice along these lines:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
We notice that your theme breaks Customizer rules. To preserve a better user experience, we have blocked loading X Theme until it meets WordPress standards.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To protect the future of WordPress it's essential that we enforce some controls over the commercialisation of the admin space. Every time a theme or plugin creator pollutes the admin interface, s/he makes alternative platforms more attractive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-scripts-sri-patch.diff attached to Ticket #33948</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:17:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33948/wp-scripts-sri-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33948/wp-scripts-sri-patch.diff/1472818649603126</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33948 (Implement subresource integrity (SRI)) updated</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:15:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33948#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33948#comment:4/1472818551136589</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I have created and attached a patch that allows the application (and removal) of extra attributes to both a wp_script and wp_style (that is, enqueued &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags). The functions for these are:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$handle = 'my-script';
$attrs = array( 'async'=&amp;gt;'true' );
wp_script_add_extra_attributes( $handle, $attrs );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;wp_script_delete_extra_attributes( $handle, $attrs );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I've then added a function for the integrity specific case:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function wp_script_integrity( $handle, $hash, $crossorigin = 'anonymous' ){...}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Note: style functions just replace script with style in the function name.
&lt;/p&gt;
&lt;p&gt;
I think this should suitably fulfill this ticket.
&lt;/p&gt;
&lt;p&gt;
It appears to me that the main purpose of SRI is to prevent XSS when using third-party resources (e.g. cdn). Therefore, the need for a function to create hashes for local scripts seems moot (though I'm not against the idea).
&lt;/p&gt;
&lt;p&gt;
Further note: I added a new formatting function &lt;code&gt;esc_attr_name&lt;/code&gt; as well. This simply ensures no bad characters are used in attribute names and that it is not the empty string.
&lt;/p&gt;
&lt;p&gt;
Cheers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 11:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:25/1472817169627926</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10984 (If content uses the nextpage tag then only the first page is shown in feeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 11:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10984#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10984#comment:51/1472817153095528</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ping @helen! I still like to get this in early enough, but I first need to wrap my head around &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt; first. I'd actually say this ticket here is blocked by it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 02 Sep 2016 11:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:7/1472816086480004</guid>
      <description>&lt;p&gt;
I still think we can safely delete this id.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
it doesn't occur anywhere else in the wordpress core
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 11:13:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:27/1472814783096398</guid>
      <description>&lt;p&gt;
@remedy17 There's also 4.6.1 RC1 you could install on your site: &lt;a class="ext-link" href="https://wordpress.org/wordpress-4.6.1-RC1.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/wordpress-4.6.1-RC1.zip&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:163</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:163/1472813473655692</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:150" title="Comment 150"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I apologize if it came across as rude. That was not my intention.
I used "groupthink" in the same context that management consultants use it to try to improve business decision making, &lt;a class="ext-link" href="https://www.mindtools.com/pages/article/newLDR_82.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;for example&lt;/a&gt;.  Think of it like me saying &lt;em&gt;"Let me propose a strawman"&lt;/em&gt; but in a different context.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No worries, and thanks for taking the time to clarify.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is an effort to bring de facto PHP best practices to WordPress, trying to get it out of the "legacy software" drawer it keeps getting put into more and more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a href="http://core.trac.wordpress.org/ticket/37699#comment:66"&gt;my comments ''(to you)'' here&lt;/a&gt; about there being different levels of programmers and how we should not be forcing all of them to be at the highest skill level.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Discussed this argument &lt;a href="http://core.trac.wordpress.org/ticket/37699#comment:72"&gt;here&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If it is problematic to apply (de-facto) best practices to a project, chances are the best practices are not a fault. This probably just points to an inherent design flaw that should be addressed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are assuming that so-called &lt;em&gt;"best practices"&lt;/em&gt; are actually fit for purpose.  That logic is called &lt;em&gt;"&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Argument_from_authority"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;appeal to authority appeal to authority&lt;/a&gt;"&lt;/em&gt; and is a logical fallacy.
In my 25+ years of professional development I have  seen many &lt;em&gt;"best practices"&lt;/em&gt; exposed as only being &lt;em&gt;Well it seemed like a good idea at the time.&lt;/em&gt;  So we should not view  &lt;em&gt;"best practices"&lt;/em&gt; as a sacred sword and instead validate each practice to see if it actually applies in the current context.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We are talking about a very specific problem here, and the solution we're proposing has been considered a best practice for pretty much the entire PHP ecosystem for years now. I agree that one should always apply critical thinking before accepting "best pratices", but I am fully confident about our assertion here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is not nearly as an autoloader that works like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _autoload( $class ) {
   if ( isset( self::$_classmap[ $class ] ) ) {
	  require self::$_classmap[ $class ]
   }
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
As I already dissected in a later comment, that is pretty much exactly what the Composer ClassMap loader does, plus a single additional instruction to normalize the class name, so that it does not break with absolute class names (which the above one probably does).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I fail to see how that would be preferable to have a mature, 5-year-tested class map builder
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because Composer's defaults actively work against WordPress's architecture.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Composer has no defaults. Its defaults are to do nothing at all. If you are talking about any particular way of setting it up, that's entirely configurable.
&lt;/p&gt;
&lt;p&gt;
One more though on the general direction of this ticket:
&lt;/p&gt;
&lt;p&gt;
My preference would be to only consider Composer as built-time tool for now to build a 5.2-compatible class map that WordPress Core can use. Then use this to modify Core so that it can make better use of the autoloader. I expect his to have a positive impact (directly and indirectly) on the code quality and architecture of Core.
&lt;/p&gt;
&lt;p&gt;
Considering writing an API to provide a class autoloader to plugins &amp;amp; themes is too early right now, and not all of the preconditions for properly designing something like this are met yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37654 (Documentation for widget_tag_cloud_args filter is wrong) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37654#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37654#comment:4/1472812560427444</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37654 (Documentation for widget_tag_cloud_args filter is wrong) updated</title>
      
        <dc:creator>backermann</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37654#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37654#comment:3/1472812516746297</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixed documentation in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37654/37654.diff" title="Attachment '37654.diff' in Ticket #37654"&gt;37654.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37654/37654.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37654.diff attached to Ticket #37654</title>
      
        <dc:creator>backermann</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37654/37654.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37654/37654.diff/1472812343047232</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:24:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:72/1472811841143735</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:66" title="Comment 66"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
You split your argument across two different tickets, so it is difficult to respond. I'll just generally address the issue you're raising here, knowing that this also applies to some of your arguments commented on ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt; .
&lt;/p&gt;
&lt;p&gt;
Your main point is that we fail to keep WordPress development be accessible to "lesser-experienced" developers.
&lt;/p&gt;
&lt;p&gt;
I wholeheartedly agree that a codebase needs to be welcoming and offer a learning curve that is not too steep. However, I think that your conclusions are all backwards.
&lt;/p&gt;
&lt;p&gt;
First of all, an example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$whatever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$whatever&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I posit that this is more difficult to comprehend and creates more issues, than something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;WP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'whatever'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The first example creates two separate issues:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You need to explicitly tell the code that you're referencing a global. Apart from immediately showing developers a way of how _not_ to do it, you also assume that they have a basic knowledge of local/global namespace differences.
&lt;/li&gt;&lt;li&gt;If the developer uses this in the wrong context (when the global was not initialized yet), it will create very confusing issues/errors that are hard to debug.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The second example improves upon this in the following way:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There's no "pre-qualifying" something before using it. You tell WP what you need, and it will be ready.
&lt;/li&gt;&lt;li&gt;If you use this in the wrong context, the &lt;code&gt;WP&lt;/code&gt; class can immediately show a clear error explaining why the developer is using this the wrong way. So, the &lt;code&gt;WP&lt;/code&gt; class identifies errors during development time, instead of deferring this to the plugin review team.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
More generally:
&lt;/p&gt;
&lt;p&gt;
When trying to have a complex system be more approachable for laymen, you build a complex, flexible system first that allows for all advanced usages, and then provide convenience functions/wrappers/facades for the common use cases.
&lt;/p&gt;
&lt;p&gt;
The other way around just doesn't work. You cannot create a more simple system, and the provide more advanced wrappers for advanced use cases. This will result in what we have now with WordPress: you have a more simple system that covers the common use cases, and all the more advanced developers need to use hack and workarounds to solve their problems.
&lt;/p&gt;
&lt;p&gt;
Why do you think that wordpress.com does not use the .org Core? It is simply not usable as is for more complex scenarios...
&lt;/p&gt;
&lt;p&gt;
Your fear probably comes from frameworks like Symfony or Zend. They can account for the most complex sites/apps, but if you want to build a simple blog, you'll need to deal with hugely complex abstractions before getting anything done.
&lt;/p&gt;
&lt;p&gt;
However, I think WordPress should go a similar route like the (opinionated and controversial) Laravel. Laravel has pretty much the exact same abstractions and architectures behind the scenes than Symfony (and even uses most of Symfony Core as is). But it provides its clever Facades for people that don't care about any of this and just want to solve their problem in a few lines of code. More advanced developers, however, can still get direct access to the dependency injection container or create completely custom handlers.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;You can always solve a simple problem with a too complex architecture (and preferably wrap a simplification around it). But you will not be able to solve a complex problem with a too simple architecture.&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12056 (target="_blank" being stripped from Profile Bio and Category Description) updated</title>
      
        <dc:creator>harmr</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12056#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12056#comment:13/1472811338440729</guid>
      <description>&lt;p&gt;
+1 for enabling href/target by default for $allowedtags
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:6/1472811320703574</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:162</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:162/1472809738067780</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:160" title="Comment 160"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:158" title="Comment 158"&gt;dnaber-de&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm perfectly fine with the direction the ticket goes (until the discussion went somehow off topic), but thanks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then let me elaborate on my primary reason for wanting another ticket; to ensure that we can get one clear proposal about the direction that is evidently now being proposed because comments don't work well to establish the primary thesis to evaluate. You mention @schlessera' proposal, but he has posted 25 messages in this thread with 159 messages, and it is unclear to me which of his messages was his proposal.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The "proposal" is presented in &lt;a class="ext-link" href="https://www.alainschlesser.com/adding-central-autoloader-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this post&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Worse case, if sticking with this ticket makes sense, can we nominate someone to write up the new thesis in a concise form and post it here as a revised proposal, because as I said it is not longer clear what is actually currently being proposed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would also welcome this. However, there will still be several ways to do this, and several opinions about how to do this "right".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:46:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:161</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:161/1472809619758839</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:159" title="Comment 159"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:157" title="Comment 157"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure I follow or agree here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.  you are again not following my objections and thus are misrepresented them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Mike, I'm afraid he's not the only one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:160/1472809444730104</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:158" title="Comment 158"&gt;dnaber-de&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm perfectly fine with the direction the ticket goes (until the discussion went somehow off topic), but thanks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then let me elaborate on my primary reason for wanting another ticket; to ensure that we can get one clear proposal about the direction that is evidently now being proposed because comments don't work well to establish the primary thesis to evaluate. You mention @schlessera' proposal, but he has posted 25 messages in this thread with 159 messages, and it is unclear to me which of his messages was his proposal.
&lt;/p&gt;
&lt;p&gt;
Worse case, if sticking with this ticket makes sense, can we nominate someone to write up the new thesis in a concise form and post it here as a revised proposal, because as I said it is not longer clear what is actually currently being proposed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:195</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:195/1472808935597664</guid>
      <description>&lt;p&gt;
@pento Latest diff isn't working for me. It seems to be the issue of the pointer losing the correct position. (I think the loop on line &lt;code&gt;class-wp-hook.php:293&lt;/code&gt;)
&lt;/p&gt;
&lt;p&gt;
Interestingly though, if I remove all references of &lt;code&gt;$nesting_level&lt;/code&gt; (or rather, keep it at 0 always), it works perfectly for my initial issue &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37679" title="#37679: defect (bug): Actions that remove and add themselves again, break other actions (closed: duplicate)"&gt;#37679&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:34:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:159</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:159/1472808844400630</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:157" title="Comment 157"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure I follow or agree here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.  you are again not following my objections and thus are misrepresented them.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I maintain that the vast majority whom are new to WordPress and to PHP _really_ don't care how an auto loader in core gets constructed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.  But my issue is not people &lt;em&gt;"New to WordPress" (I only mentioned ""new to WP"" because you said you were new to WP.)&lt;/em&gt;  My issue is that there are many skill levels of people who extend WP, and many of those people are not skilled PHP programmers even though they end up writing PHP.  And most of these people are definitely not new to WP.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The vast majority that touch PHP just tweak themes, and maybe right a simple functional plugins. Nothing about that space changes with an autoloader in core, let alone how an auto loader gets constructed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On this we disagree.  An autoloader for core should not be added to core that does not at least contemplate being used for themes and plugins too. And for that &lt;a class="ext-link" href="http://www.joelonsoftware.com/items/2008/05/01.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Composer is too complicated&lt;/a&gt; for many of the people who are currently empowered by WordPress because it is easy. IMO.
&lt;/p&gt;
&lt;p&gt;
BTW, if the core developers decide to choose Composer I will accept it and move on. But as long as they have not spoken and informed us of a concrete decision I feel the need to provide an opposing voice to what otherwise appears to be group-think based on an unvalidated assumption that using Composer is the best approach to take.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37918 (wp_remote_get skips first line under some cirumstances) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37918#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37918#comment:3/1472808021860802</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37919 (Mess with plugins) created</title>
      
        <dc:creator>anatolt</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37919/1472807584850765</guid>
      <description>&lt;p&gt;
The names of plugins on search page
/wp-admin/plugin-install.php
&lt;a style="padding:0; border:none" href="http://anatolt.ru/i/2016-09-02_140300.jpg"&gt;&lt;img src="http://anatolt.ru/i/2016-09-02_140300.jpg" alt="http://anatolt.ru/i/2016-09-02_140300.jpg" crossorigin="anonymous" title="http://anatolt.ru/i/2016-09-02_140300.jpg" /&gt;&lt;/a&gt;
and on installed page
/wp-admin/plugins.php?plugin_status=all&amp;amp;paged=1&amp;amp;s
&lt;a style="padding:0; border:none" href="http://anatolt.ru/i/2016-09-02_140439.jpg"&gt;&lt;img src="http://anatolt.ru/i/2016-09-02_140439.jpg" alt="http://anatolt.ru/i/2016-09-02_140439.jpg" crossorigin="anonymous" title="http://anatolt.ru/i/2016-09-02_140439.jpg" /&gt;&lt;/a&gt;
is different. No pictures in installed plugins. Sometimes it hard to find a new installed plugin after installation.
Need to make them look similar.
Need to name them same on different pages.
Need to add pictures to installed plugins page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37918 (wp_remote_get skips first line under some cirumstances) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:53:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37918#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37918#comment:2/1472806416515168</guid>
      <description>&lt;p&gt;
Thanks for reporting this @tastenchris - this is being tracked in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37839" title="#37839: defect (bug): wp_remote_get sometimes mutilates the response body (closed: fixed)"&gt;#37839&lt;/a&gt;. It's actually a bug in library being used by WordPress (since 4.6). There's a patch for that bug, and it's now just a matter of updating the library when that patch is merged in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37839,​37918 batch updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37839%2C37918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37839%2C37918/1472806305713268</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37839" title="#37839: defect (bug): wp_remote_get sometimes mutilates the response body (closed: fixed)"&gt;#37839&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37782 (Duplicate Page Entry in View All Pages when generating a Menu) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37782#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37782#comment:4/1472806024250769</guid>
      <description>&lt;p&gt;
I agree this is rather confusing. In my case there is no visual indication as to why the additional reference to "Home" has been added to the list of pages (because my front page is also called "Home" - see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25410#comment:11" title="Comment 11 for #25410: defect (bug): In Admin navigation menu manager Page &amp;gt; View All section, home link ... (closed: fixed)"&gt;comment:11:ticket:25410&lt;/a&gt;). The customizer, on the other hand adds an additional reference to "Home" but this time it is identified as a custom link rather than a page link, which is at least clearer. Both of these features still persist with the "home" and "front page" confusion, however as the link being added is actually a reference to the "front page" (often the site home) rather than the WP concept of "home".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37918 (wp_remote_get skips first line under some cirumstances) created</title>
      
        <dc:creator>tastenchris</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37918/1472805583278593</guid>
      <description>&lt;p&gt;
I am using a WP plugin called "amr event lists with ical files" to display an event list from a google calendar. The plugin uses wp_remote_get to get the calendars ics data. Under some circumstances the return value of wp_remote_get lacks the first line of the calendar ("BEGIN:VCALENDAR"). The plugins author and I tried to figure out in what circumstances this happens, but without success.
There is an example URL showing the described effect used in my WP page: &lt;a class="ext-link" href="https://calendar.google.com/calendar/ical/ldncnjg2a0tjv7f36p4kri9eqg%40group.calendar.google.com/public/basic.ics"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://calendar.google.com/calendar/ical/ldncnjg2a0tjv7f36p4kri9eqg%40group.calendar.google.com/public/basic.ics&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Getting this URL with wget or curl results in consistent calendar data, getting it via wp_remote_get the first line is missing. This happens since WP 4.6, no problem in earlier versions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:20:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:158</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:158/1472804404396320</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:154" title="Comment 154"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Minimally I think if we are going to discuss an autoloader based on Composer we should respect @dnaber-de and not hijack his ticket.  Instead we should discuss his proposal &lt;em&gt;(which I think is mostly good)&lt;/em&gt; and give it a thumbs up or a thumbs down.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm perfectly fine with the direction the ticket goes (until the discussion went somehow off topic), but thanks. My intention was to have a single autoloader instance for performance reasons. If that would have been a custom implementation I'd have to write a composer plugin that uses this WordPress own implementation. If WordPress uses Composer itself, it's even better. I read opposed arguments, thought about it and finally let them convince me that this is the best way to go.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:152" title="Comment 152"&gt;TJNovel&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As an aside, Core could include a Composer autoloader if it exists, even if it doesn't make use of it internally. This would be a great help for those of us who use Composer, eliminating an extra step in the setup, and standardising when the autoloader is added.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly. That would be the next step to take, to make WordPress configurable to include an external composer autoload file if WordPress is installed via composer. So let's focus on the topic and discuss @schlessera 's proposal and move the &lt;code&gt;composer.json&lt;/code&gt; back to the root of the repository.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Fri, 02 Sep 2016 07:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:11/1472800274578682</guid>
      <description>&lt;p&gt;
Thank you, I did not realize that! So the only way to add draft item is publish some post, add it to menu and then unpublish it? It is only callback for unpublished items which were part of menu?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37708 (`wp_http_supports()` doesn't reflect what Requests can do) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2016 07:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37708#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37708#comment:2/1472800040411896</guid>
      <description>&lt;p&gt;
I couldn't see anything in Requests that we could use, but I also feel that adding a method for checking to see if we can *maybe* support SSL wouldn't be out of the question..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:157</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:157/1472799159919095</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:156" title="Comment 156"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You are definitely not in the majority of people working with WordPress and thus I did not include your archetype in the list above. My experience you represent a very tiny percent of people who are new to WordPress; most people new to WordPress were not previously PHP developers.   AND you also represent a group of people who &lt;em&gt;(hopefully would)&lt;/em&gt; have the skills to figure things out vs. those who first learned PHP in order to theme WordPress or write a plugin for WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure I follow or agree here.  I maintain that the vast majority whom are new to WordPress and to PHP _really_ don't care how an auto loader in core gets constructed.  They just care that core works, full stop.  Nothing about an autoloader in core increases the technical hurdle for the vast majority doing all the things they do with WordPress. By the time they care about core, they're at least at my level (Unrelated but you probably over-estimate my PHP skills, I've been around WP a long time and can figure things out by I'm a hack).
&lt;/p&gt;
&lt;p&gt;
The vast majority that touch PHP just tweak themes, and maybe right a simple functional plugins. Nothing about that space changes with an autoloader in core, let alone how an auto loader gets constructed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I do think to discuss Composer it should be done on a ticket that provides the proposal clearly in the title and description of the ticket.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Certainly, adding composer for composer's sake should get discussed elsewhere and I certainly didn't mean to derail into that. Just as I said above, I don't think a composer vs non-composer autoloader makes a technical difference for anyone looking into core for the first time.
&lt;/p&gt;
&lt;p&gt;
FWIW, the interface vs. implementation abstraction seems way more complicated to me but I could figure it out and after a lot of years I've learned to embrace such abstractions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:194</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:194/1472798139973389</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472798137001089"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:10/1472798031638676</guid>
      <description>&lt;p&gt;
@pavelevap that is speaking of the &lt;code&gt;nav_menu_item&lt;/code&gt; post itself, not the status of the underlying &lt;code&gt;object&lt;/code&gt; that is being referenced. See my &lt;a href="https://core.trac.wordpress.org/ticket/33742#comment:5"&gt;comment above&lt;/a&gt; about “draft nav menu items”. There is no UI to create such draft nav menu items, but there is a UI to show them if they are in a draft (pending) status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:26/1472798013937040</guid>
      <description>&lt;p&gt;
Hey @remedy17 Daniel with SiteGround here :) The patch that needs to be applied is:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/37696/37696.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/37696/37696.diff&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you cannot apply it open a support ticket and our support team will apply the patch for you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:31:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705#comment:5/1472797899400440</guid>
      <description>&lt;p&gt;
I think stubbing &lt;code&gt;WP_Http::buildCookieHeader&lt;/code&gt; makes sense.  Agree with the other two pieces.  These should get a dev note when this goes in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:193</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:193/1472797887354994</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.12.diff" title="Attachment '17817.12.diff' in Ticket #17817"&gt;17817.12.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.12.diff" title="Download"&gt;​&lt;/a&gt; fixes some unit tests, and updates the &lt;code&gt;@since&lt;/code&gt; docs.
&lt;/p&gt;
&lt;p&gt;
There was a bug I've been running into, triggered by this code. It's kind of ugly, but not insane.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
Plugin Name: lol
 */&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;remove_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When &lt;code&gt;remove_filter()&lt;/code&gt; is called, it eventually gets to &lt;code&gt;WP_Hook::resort_active_iterations()&lt;/code&gt;. While the logic in this method was sound, the &lt;code&gt;foreach()&lt;/code&gt; was resetting the array pointer for each item in &lt;code&gt;$this-&amp;gt;iterations&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In the above example, the result was that, when &lt;code&gt;foo()&lt;/code&gt; returned to &lt;code&gt;WP_Hook::apply_filters()&lt;/code&gt;, the internal pointer of &lt;code&gt;$this-&amp;gt;iterations[ $nesting_level ]&lt;/code&gt; had been reset to the first element, instead of staying where it was supposed to.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.13.diff" title="Attachment '17817.13.diff' in Ticket #17817"&gt;17817.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.13.diff" title="Download"&gt;​&lt;/a&gt; fixes this bug by operating on a reference to each element in the &lt;code&gt;WP_Hook::resort_active_iterations()&lt;/code&gt; loop.
&lt;/p&gt;
&lt;p&gt;
It also bails on the loop early when the &lt;code&gt;current()&lt;/code&gt; element is &lt;code&gt;false&lt;/code&gt;, there's no need to loop through an array that we're already at the end of.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.13.diff" title="Attachment '17817.13.diff' in Ticket #17817"&gt;17817.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.13.diff" title="Download"&gt;​&lt;/a&gt; needs unit tests to confirm that this behaviour is fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:9/1472797627680416</guid>
      <description>&lt;p&gt;
Interesting, but I do not think that it is a bug, but expected feature? See for example string &lt;code&gt;pendingTitleTpl&lt;/code&gt; with comment &lt;code&gt;/* translators: %s: title of menu item in draft status */&lt;/code&gt; This string will be no longer needed in this case? And what about users using this feature? It can be used for scheduled posts added to menu before publication or it does not work this way?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.13.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:21:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.13.diff/1472797318837031</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705#comment:4/1472797216157424</guid>
      <description>&lt;p&gt;
Judging by that list, I think we can..
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Keep &lt;code&gt;WP_Http::is_ip_address()&lt;/code&gt; as a util
&lt;/li&gt;&lt;li&gt;Stub &lt;code&gt;_get_first_available_transport()&lt;/code&gt; / &lt;code&gt;$wp_http-&amp;gt;_get_first_available_transport&lt;/code&gt; and &lt;code&gt;return null&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Possibly keep &lt;code&gt;WP_Http::buildCookieHeader&lt;/code&gt; or stub it out and &lt;code&gt;return null&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Looking at a few uses where &lt;code&gt;WP_Http::buildCookieHeader&lt;/code&gt; was used, the HTTP api has been extended in such a way that it's broken under 4.6 or they're replacing large chunks of it anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:18:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:5/1472797092568381</guid>
      <description>&lt;p&gt;
@dlh Good question. I think the idea on not checking for a modified &lt;code&gt;notification.message&lt;/code&gt; is that generally the message would just be a human-readable version of the &lt;code&gt;notification.code&lt;/code&gt;. But since this was unexpected for you, it's probably not something that should in fact be assumed. I've updated the patch to also check for a difference in &lt;code&gt;message&lt;/code&gt;: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37890/37890.3.diff" title="Attachment '37890.3.diff' in Ticket #37890"&gt;37890.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37890/37890.3.diff" title="Download"&gt;​&lt;/a&gt;. If that works for you, I'll commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37890.3.diff attached to Ticket #37890</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:16:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37890/37890.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37890/37890.3.diff/1472797008732523</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705#comment:3/1472796692538059</guid>
      <description>&lt;p&gt;
&lt;code&gt;ack-grep --php --ignore-dir=Aws --ignore-dir=Guzzle --ignore-dir=guzzle --ignore-dir=aws "_get_first_available_transport|processResponse|buildCookieHeader|chunkTransferDecode|handle_redirects|is_ip_address"&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Returned a bunch of results (attached above).  Digging through, here is what I found ( besides a number of people that include copies of WP_Http :( )
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/stream/trunk/classes/class-filter-input.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/fakerpress/trunk/inc/class-fp-variable.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/placester/trunk/lib/http.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::buildCookieHeader&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/core-control/trunk/modules/core_control_http_log.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;$wp_http-&amp;gt;_get_first_available_transport&lt;/a&gt; &amp;lt;-- @dd32
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/litespeed-cache/trunk/admin/class-litespeed-cache-admin.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/google-app-engine/trunk/modules/urlfetch.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::buildCookieHeader&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/coschedule-by-todaymade/trunk/tm-scheduler.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;$http-&amp;gt;_get_first_available_transport&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/picasa-express-x2/trunk/picasa-express-2.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::_get_first_available_transport&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/all-in-one-wp-security-and-firewall/trunk/classes/wp-security-utility-ip-address.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/anybackup/trunk/includes/class-persistent-http.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::buildCookieHeader and WP_HTTP::handle_redirects&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/wpgform/trunk/wpgform-core.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;_get_first_available_transport&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/diagnostic-tool/lib/DTOutboundConnection.class.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;_get_first_available_transport&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/mainwp-child-reports/trunk/includes/filter-input.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/feedwordpress/trunk/feedwordpresshttpauthenticator.class.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::_get_first_available_transport (in one other file as well)&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/facebook/trunk/admin/settings-debug.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;$http_obj-&amp;gt;_get_first_available_transport&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:58:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:8/1472795899083114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm inclined to agree with @welcher that it is a bug to be able to add non-publish posts to a nav menu, and so &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/33742.diff" title="Attachment '33742.diff' in Ticket #33742"&gt;33742.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/33742.diff" title="Download"&gt;​&lt;/a&gt; is the way to go. But actually, the underlying issue here is that the following logic isn't getting applied to searches like it is for when &lt;code&gt;wp_nav_menu_item_post_type_meta_box&lt;/code&gt; runs:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$box&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'args'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;_default_query&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$box&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'args'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;_default_query&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So the fix I think is to make sure the same &lt;code&gt;_default_query&lt;/code&gt; is merged with the query vars when a search as done, just as when the list generated. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/33742.2.diff" title="Attachment '33742.2.diff' in Ticket #33742"&gt;33742.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/33742.2.diff" title="Download"&gt;​&lt;/a&gt; which does this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33742.2.diff attached to Ticket #33742</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:56:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33742/33742.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33742/33742.2.diff/1472795789044374</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37705.txt attached to Ticket #37705</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:36:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37705/37705.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37705/37705.txt/1472794588117023</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:27:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:156/1472794039277604</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:155" title="Comment 155"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As one of the those in the "different levels of programmers" group. I don't see how adding an autoloader to core would hurt my ability, or my fellow novice and intermediates, from working with WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You misunderstood my comments. I would definitely like to see an autoloader added to WordPress. I proposed one 22 months ago &lt;a href="https://core.trac.wordpress.org/ticket/30203"&gt;here on Trac&lt;/a&gt;.  Instead I have an objection to the use of Composer as I believe it is a poor fit for use with WordPress.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In fact I feel like most new developers are coming to WP having learned current best practices elsewhere (Zend/Laravelle) so they are more confused when they discover WP doesn't do things more modern (advanced) way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are definitely not in the majority of people working with WordPress and thus I did not include your archetype in the list above. My experience you represent a very tiny percent of people who are new to WordPress; most people new to WordPress were not previously PHP developers.   AND you also represent a group of people who &lt;em&gt;(hopefully would)&lt;/em&gt; have the skills to figure things out vs. those who first learned PHP in order to theme WordPress or write a plugin for WordPress.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A point I'm unclear on at this point in the discussion is about use outside of core which I think needs at least superficial consideration....If the answer is based on composer. Is the thought that plugin/theme developers could then leverage composer directly from core to create their own auto-loader, or is the thought that they would directly use a Core autoloader class?  As a middle level dev, I only really care about two things, 1) that how core does it works seamlessly and painlessly, and 2) if I can/can't/should/shouldn't leverage how core does it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those are great questions, and ones I am definitely not clear on either.
&lt;/p&gt;
&lt;p&gt;
But I do think to discuss Composer it should be done on a ticket that provides the proposal clearly in the title and description of the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:21:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:7/1472793671972904</guid>
      <description>&lt;p&gt;
@welcher would you be willing to investigate and look into what is going on here? This definitely feels like a bug to me at first glance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37822 (Text area misaligned on network setting.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37822#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37822#comment:4/1472793509998841</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by jorbin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472793507000054"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37822 (Text area misaligned on network setting.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37822#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37822#comment:3/1472793484494378</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:155/1472793209990933</guid>
      <description>&lt;p&gt;
First, I read this whole thread and learned a lot. I really wish more trac tickets had such intelligent discussion. TY to all of you.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:150" title="Comment 150"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is an effort to bring de facto PHP best practices to WordPress, trying to get it out of the "legacy software" drawer it keeps getting put into more and more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a href="http://core.trac.wordpress.org/ticket/37699#comment:66"&gt;my comments ''(to you)'' here&lt;/a&gt; about there being different levels of programmers and how we should not be forcing all of them to be at the highest skill level.
&lt;/p&gt;
&lt;p&gt;
Think of them as diffferent constituents, all of which we should guard their interests and not forsake any of them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As one of the those in the "different levels of programmers" group. I don't see how adding an autoloader to core would hurt my ability, or my fellow novice and intermediates, from working with WordPress.  For the most part novice and intermediate level developers expect core to "just work" out fo the box and it does so with or without an autoloader.
&lt;/p&gt;
&lt;p&gt;
In fact I feel like most new developers are coming to WP having learned current best practices elsewhere (Zend/Laravelle) so they are more confused when they discover WP doesn't do things more modern (advanced) way. Adopting an auto-loader might even help the them.  Really though my point is I don't think developer expertise issue really comes into play when we're talking about core until you get really freaky.
&lt;/p&gt;
&lt;p&gt;
If/when plugin devs can later leverage a core loader I think it would further help those same programmers since they'd start seeing things done in a similar way across multiple plugins, rather than the anarchy that currently exists (most often seems to be using Composer, but I see weird bespoke systems too).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
While it sounds like the goal of this ticket is simply an auto loader for core (yay for narrow focus) and that the likely candidate for the is Composer while still considering other options.  A point I'm unclear on at this point in the discussion is about use outside of core which I think needs at least superficial consideration.
&lt;/p&gt;
&lt;p&gt;
If the answer is based on composer. Is the thought that plugin/theme developers could then leverage composer directly from core to create their own auto-loader, or is the thought that they would directly use a Core autoloader class?  As a middle level dev, I only really care about two things, 1) that how core does it works seamlessly and painlessly, and 2) if I can/can't/should/shouldn't leverage how core does it.
&lt;/p&gt;
&lt;p&gt;
From what I've read here, it sounds like there would be a lot of value to using composer in a way that plugin/theme devs could leverage it directly, but as a middle level developer, I'll certainly defer to the experienced folks here just thought an opinion from a "different group" might help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37875 (Admin sidebar (parent) links don't work when clicked before sub-menu ...) updated</title>
      
        <dc:creator>mklusak</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:10:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37875#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37875#comment:5/1472793006633841</guid>
      <description>&lt;p&gt;
@adamsilverstein Ha, I didn't notice there is a new version (53) of Chrome, but updating it did not change this behavior. I have Windows 10 Pro OS.
&lt;/p&gt;
&lt;p&gt;
Today I will have another PC with Win10, and will check it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34113 (Add a 'View Archive' link to admin bar for post types.) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34113#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34113#comment:13/1472790653595079</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:49/1472790582428071</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:48" title="Comment 48"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:47" title="Comment 47"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Sorry I didn't explain this here but I made the above plugin so changes to the editor buttons can be tested easily. You can modify what buttons are shown and the ordering, then even upload the modified plugin here so other can test it. There is a list of all supported buttons in the plugin source.
&lt;/p&gt;
&lt;p&gt;
Currently the plugin changes the buttons to what iseulde proposed. To modify it, simply rearrange or remove the button names from the two arrays.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh cool! I'll do that. Thank you for the info Andrew.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37061 (Use `get_sites()` in `get_blogs_of_user()`) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37061#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37061#comment:2/1472790556194532</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37061#comment:1" title="Comment 1"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A minor issue is that on a non-multisite, the array will still contain a raw object since &lt;code&gt;WP_Site&lt;/code&gt; is not available there, so one has to be aware of that. However, I still think we should do this as it's an improvement for Multisite setups.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think having something different returned under MS from single site is a good decision. Seems like something that could cause plugins to have bugs only under one or the other. Or for code originally written for MS to not work and cause confusion when run on single site installs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37053 (Ensure `get_site_by_path()` returns a `WP_Site`) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37053#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37053#comment:3/1472790317819710</guid>
      <description>&lt;p&gt;
@jeremyfelt what are you thoughts on this one?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37596 (Update Press This' `normalize.css` 3rd party external library) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37596#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37596#comment:4/1472790266427142</guid>
      <description>&lt;p&gt;
What about moving normalize into its own file and then having press-this.css include it?  Seems like that will make it easier to keep this up to date going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37553 (Deprecate `wp_get_network()`) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37553#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37553#comment:5/1472790097147993</guid>
      <description>&lt;p&gt;
Should there be a comment about why the function is located here rather than with the other deprecated functions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35774 (WordPress admin &lt;title&gt; structure) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35774#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35774#comment:14/1472789969031005</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch needs translator comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34105 (kses strips tags with hyphens in the name) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:16:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34105#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34105#comment:5/1472789761316234</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38511" title="Formatting: Allow KSES custom elements with hyphens
The W3C Custom ..."&gt;38511&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Formatting: Allow KSES custom elements with hyphens&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The W3C Custom Elements spec (&lt;a class="ext-link" href="http://www.w3.org/TR/custom-elements/#concepts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/custom-elements/#concepts&lt;/a&gt;) allows you to use your own custom DOM elements/tags. One of the main requirements is that the tag name "must contain a U+002D HYPHEN-MINUS character". This adjusts KSES to allow it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34105" title="#34105: defect (bug): kses strips tags with hyphens in the name (closed: fixed)"&gt;#34105&lt;/a&gt;.&lt;br /&gt;
Props batmoo.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38511]: Formatting: Allow KSES custom elements with hyphens  The W3C Custom ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38511</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38511/1472789760851780</guid>
      <description>&lt;p&gt;
Formatting: Allow KSES custom elements with hyphens
&lt;/p&gt;
&lt;p&gt;
The W3C Custom Elements spec (&lt;a class="ext-link" href="http://www.w3.org/TR/custom-elements/#concepts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/custom-elements/#concepts&lt;/a&gt;) allows you to use your own custom DOM elements/tags. One of the main requirements is that the tag name "must contain a U+002D HYPHEN-MINUS character". This adjusts KSES to allow it.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34105" title="#34105: defect (bug): kses strips tags with hyphens in the name (closed: fixed)"&gt;#34105&lt;/a&gt;.
Props batmoo.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37792 (Error messages in wp-includes/class-wp-xmlrpc-server.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37792#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37792#comment:5/1472789573112507</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38510" title="I18N: Add translator comments for XML-RPC strings with placeholders.
 ..."&gt;38510&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Add translator comments for XML-RPC strings with placeholders.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37792" title="#37792: defect (bug): Error messages in wp-includes/class-wp-xmlrpc-server.php (closed: fixed)"&gt;#37792&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38510]: I18N: Add translator comments for XML-RPC strings with placeholders.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38510</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38510/1472789572652707</guid>
      <description>&lt;p&gt;
I18N: Add translator comments for XML-RPC strings with placeholders.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37792" title="#37792: defect (bug): Error messages in wp-includes/class-wp-xmlrpc-server.php (closed: fixed)"&gt;#37792&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:4/1472788936912735</guid>
      <description>&lt;p&gt;
@westonruter &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37890/37890.2.diff" title="Attachment '37890.2.diff' in Ticket #37890"&gt;37890.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37890/37890.2.diff" title="Download"&gt;​&lt;/a&gt; looks good to me. While I don't have a real-world case to hand that I could test against the change to &lt;code&gt;from_server&lt;/code&gt;, I agree with you generally about not mutating the error data.
&lt;/p&gt;
&lt;p&gt;
One other thing I noticed while testing the patch: &lt;code&gt;$data&lt;/code&gt; is optional in &lt;code&gt;WP_Error::add()&lt;/code&gt;, but, in practice, it seems like the Customizer sometimes requires it because it compares the &lt;code&gt;data&lt;/code&gt; property in JS before determining whether the notification &lt;code&gt;needsReplacement&lt;/code&gt;. Just adding a different &lt;code&gt;$message&lt;/code&gt; to the &lt;code&gt;WP_Error&lt;/code&gt; isn't enough to replace the notification if &lt;code&gt;$code&lt;/code&gt; is unchanged and  &lt;code&gt;$data&lt;/code&gt; is a blank string each time (or the same of whatever value).
&lt;/p&gt;
&lt;p&gt;
Again, not a huge issue, and it might be intentional -- just took me a minute to realize why my error message wasn't changing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37806 (Attachment Details - Edit: uneven height between input field and ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37806#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37806#comment:2/1472788704491082</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35390 (image_constrain_size_for_editor() should not affect images generated ...) updated</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:58:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35390#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35390#comment:23/1472788683311399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37792 (Error messages in wp-includes/class-wp-xmlrpc-server.php) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37792#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37792#comment:4/1472788582917948</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38509" title="Text Changes: Improve Error messages in XML-RPC
Three changes to the ..."&gt;38509&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Text Changes: Improve Error messages in XML-RPC&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Three changes to the error message strings:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add some missing periods.
&lt;/li&gt;&lt;li&gt;merge similar translation strings.
&lt;/li&gt;&lt;li&gt;remove the "Something wrong happened" suffix.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37792" title="#37792: defect (bug): Error messages in wp-includes/class-wp-xmlrpc-server.php (closed: fixed)"&gt;#37792&lt;/a&gt;.&lt;br /&gt;
Props ramiy.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38509]: Text Changes: Improve Error messages in XML-RPC  Three changes to the ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38509</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38509/1472788582456510</guid>
      <description>&lt;p&gt;
Text Changes: Improve Error messages in XML-RPC
&lt;/p&gt;
&lt;p&gt;
Three changes to the error message strings:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add some missing periods.
&lt;/li&gt;&lt;li&gt;merge similar translation strings.
&lt;/li&gt;&lt;li&gt;remove the "Something wrong happened" suffix.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37792" title="#37792: defect (bug): Error messages in wp-includes/class-wp-xmlrpc-server.php (closed: fixed)"&gt;#37792&lt;/a&gt;.
Props ramiy.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22247 (Ensure post ID evaluates to true before adding "Edit post" tab in admin bar) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:51:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22247#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22247#comment:8/1472788261622622</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38508" title="Toolbar: Add unit tests for edit links.
When there is no post ID, ..."&gt;38508&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Toolbar: Add unit tests for edit links.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When there is no post ID, there should be no edit link. This adds unit tests for it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22247" title="#22247: defect (bug): Ensure post ID evaluates to true before adding &amp;#34;Edit post&amp;#34; tab in admin bar (closed: fixed)"&gt;#22247&lt;/a&gt;.&lt;br /&gt;
Props akibjorklund.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38508]: Toolbar: Add unit tests for edit links.  When there is no post ID, ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:51:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38508</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38508/1472788261123712</guid>
      <description>&lt;p&gt;
Toolbar: Add unit tests for edit links.
&lt;/p&gt;
&lt;p&gt;
When there is no post ID, there should be no edit link. This adds unit tests for it.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22247" title="#22247: defect (bug): Ensure post ID evaluates to true before adding &amp;#34;Edit post&amp;#34; tab in admin bar (closed: fixed)"&gt;#22247&lt;/a&gt;.
Props akibjorklund.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37653 (customizer sections with 'active_callback' set to 'is_front_page' ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37653#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37653#comment:5/1472787867674517</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some unit tests might be able to help demonstrate this and get this fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>drtonyb</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:17:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:5/1472786264952350</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37901#comment:4" title="Comment 4"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hmm, I could not reproduce the original issue though.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/admin-bar.php#L683"&gt;wp_admin_bar_comments_menu()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-includes/admin-bar.php#L683" title="Download"&gt;​&lt;/a&gt; is only used in the main toolbar, not in "My Sites" menu.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/admin-bar.php#L494"&gt;Manage Comments item&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-includes/admin-bar.php#L494" title="Download"&gt;​&lt;/a&gt; in &lt;code&gt;wp_admin_bar_my_sites_menu()&lt;/code&gt; does not have a duplicate ID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My mistake - on further investigation I have found that the problem is not in the core function &lt;code&gt;wp_admin_bar_my_sites_menu()&lt;/code&gt;. I've tracked to problem to a plugin called &lt;code&gt;multisite-enhancements&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34981 (Usage of `image_size_names_choose` breaks JS attachment model attributes) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34981#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34981#comment:4/1472785804554029</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thought for a second that maybe the &lt;code&gt;image_size_names_choose&lt;/code&gt; filter could just be removed, but that would reintroduce &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22598" title="#22598: defect (bug): Not using image_downsize() in wp_prepare_attachment_for_js() can break ... (closed: fixed)"&gt;#22598&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think context is going to be the key, but I agree with @dnaber-de that it shouldn't be tied to the name of the function, but to the actual context.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:192</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:192/1472785335275263</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472785331001061"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34981.2.diff attached to Ticket #34981</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:00:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34981/34981.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34981/34981.2.diff/1472785221805373</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34335 (URL shorteners ( redirects) should to be supported by the embed ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 02:08:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34335#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34335#comment:9/1472782120002309</guid>
      <description>&lt;p&gt;
@swissspidy what improvements would you like to see on this patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2016 01:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:7/1472780490834286</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37904#comment:6" title="Comment 6"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32 It's not a 4.6 regression, and not even a 4.1 regression, strictly - it was an oversight when the feature was first introduced. That said, it's minor and perfectly safe for 4.6.x inclusion, if you think it's warranted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I misread it and thought that &lt;code&gt;orderby=include&lt;/code&gt; was a 4.6 thing, never mind, this doesn't need to be in a 4.6.x
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 02 Sep 2016 01:39:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:6/1472780369829436</guid>
      <description>&lt;p&gt;
@dd32 It's not a 4.6 regression, and not even a 4.1 regression, strictly - it was an oversight when the feature was first introduced. That said, it's minor and perfectly safe for 4.6.x inclusion, if you think it's warranted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.12.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 01:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.12.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.12.diff/1472779593674236</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:191</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:191/1472777535282956</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472777530001021"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:5/1472775969299829</guid>
      <description>&lt;p&gt;
@boonebgorges Do you want to target this for a potential 4.6.x?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:48/1472775794463481</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:47" title="Comment 47"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Sorry I didn't explain this here but I made the above plugin so changes to the editor buttons can be tested easily. You can modify what buttons are shown and the ordering, then even upload the modified plugin here so other can test it. There is a list of all supported buttons in the plugin source.
&lt;/p&gt;
&lt;p&gt;
Currently the plugin changes the buttons to what iseulde proposed. To modify it, simply rearrange or remove the button names from the two arrays.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37660 (RegEx in wpdb::get_table_from_query( $q ) in wp-db.php returns ...) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37660#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37660#comment:3/1472775529673716</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38507" title="Database: Find the correct table names in `DELETE` queries with table ..."&gt;38507&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Find the correct table names in &lt;code&gt;DELETE&lt;/code&gt; queries with table aliases&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, &lt;code&gt;wpdb::get_table_from_query()&lt;/code&gt; would not find the correct table name in the query &lt;code&gt;DELETE a FROM table a&lt;/code&gt;, due to not recognising the table alias immediately after the &lt;code&gt;DELETE&lt;/code&gt; as correct syntax.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37660" title="#37660: defect (bug): RegEx in wpdb::get_table_from_query( $q ) in wp-db.php returns ... (closed: fixed)"&gt;#37660&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38507]: Database: Find the correct table names in `DELETE` queries with table ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38507</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38507/1472775529208086</guid>
      <description>&lt;p&gt;
Database: Find the correct table names in &lt;code&gt;DELETE&lt;/code&gt; queries with table aliases
&lt;/p&gt;
&lt;p&gt;
Previously, &lt;code&gt;wpdb::get_table_from_query()&lt;/code&gt; would not find the correct table name in the query &lt;code&gt;DELETE a FROM table a&lt;/code&gt;, due to not recognising the table alias immediately after the &lt;code&gt;DELETE&lt;/code&gt; as correct syntax.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37660" title="#37660: defect (bug): RegEx in wpdb::get_table_from_query( $q ) in wp-db.php returns ... (closed: fixed)"&gt;#37660&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37875 (Admin sidebar (parent) links don't work when clicked before sub-menu ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37875#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37875#comment:4/1472775513919588</guid>
      <description>&lt;p&gt;
@mklusak  - what operating system are you using? on a mac, I'm seeing 53 as current stable release of chrome, can you try upgrading your chrome? i am still unable to reproduce.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:9/1472775036988027</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you very much for your work, @ideag!
&lt;/p&gt;
&lt;p&gt;
I made some minor naming and formatting adjustments to the tests, but otherwise, it all looked good!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:8/1472774982508375</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38506" title="Shortcodes: Add the `pre_do_shortcode_tag` filter.
This filter allows ..."&gt;38506&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Shortcodes: Add the &lt;code&gt;pre_do_shortcode_tag&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This filter allows the shortcode generation process to be short-circuited, so expensive short codes can be cached and returned immediately.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ideag.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37906" title="#37906: enhancement: Filter to short-circuit do_shortcode_tag (closed: fixed)"&gt;#37906&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38506]: Shortcodes: Add the `pre_do_shortcode_tag` filter.  This filter allows ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38506</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38506/1472774982051059</guid>
      <description>&lt;p&gt;
Shortcodes: Add the &lt;code&gt;pre_do_shortcode_tag&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
This filter allows the shortcode generation process to be short-circuited, so expensive short codes can be cached and returned immediately.
&lt;/p&gt;
&lt;p&gt;
Props ideag.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37906" title="#37906: enhancement: Filter to short-circuit do_shortcode_tag (closed: fixed)"&gt;#37906&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35905 (Filter to filter default smilies) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35905#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35905#comment:7/1472774842566083</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38505" title="Docs: Correct `@since` entry for the `smilies` filter added in ..."&gt;38505&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Correct &lt;code&gt;@since&lt;/code&gt; entry for the &lt;code&gt;smilies&lt;/code&gt; filter added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38504" title="Smilies: Add the `smilies` filter.
This new filter allows the smilies ..."&gt;[38504]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35905" title="#35905: enhancement: Filter to filter default smilies (closed: fixed)"&gt;#35905&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38505]: Docs: Correct `@since` entry for the `smilies` filter added in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38505</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38505/1472774842063759</guid>
      <description>&lt;p&gt;
Docs: Correct &lt;code&gt;@since&lt;/code&gt; entry for the &lt;code&gt;smilies&lt;/code&gt; filter added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38504" title="Smilies: Add the `smilies` filter.
This new filter allows the smilies ..."&gt;[38504]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35905" title="#35905: enhancement: Filter to filter default smilies (closed: fixed)"&gt;#35905&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>