<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43113 (Multiple custom item classes are returned as single string when using ...) updated</title>
      
        <dc:creator>lrdn</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43113#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43113#comment:2/1519429873037989</guid>
      <description>&lt;p&gt;
Weston, thanks for taking a look. Simply add a &lt;code&gt;nav_menu_link_attributes&lt;/code&gt; filter function and log the classes array of the item object. I am using the default logger in my example.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;custom_link_attributes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wp_attributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$wp_item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$wp_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wp_item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON_PRETTY_PRINT&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$wp_attributes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'nav_menu_link_attributes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'custom_link_attributes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Now edit an existing menu item using the Customizer and define at least 2 custom CSS classes. The log output will show both classes located within the same array item.
&lt;/p&gt;
&lt;pre class="wiki"&gt;[
    "custom-class-1 custom-class-2",
    "menu-item",
    ...
]
&lt;/pre&gt;&lt;p&gt;
As soon as the changes are published, or whenever the menu items are modified in the appearance settings, the item classes will be located in separate array items as expected.
&lt;/p&gt;
&lt;pre class="wiki"&gt;[
    "custom-class-1",
    "custom-class-2",
    "menu-item",
    ...
]
&lt;/pre&gt;&lt;p&gt;
My patch is the earliest point at which I could locate and correct the malformed data, but I am guessing the cause is actually located where the string is handed over by the JavaScript request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40678 (Editing menus in WP admin for blind people) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40678#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40678#comment:20/1519429503573621</guid>
      <description>&lt;p&gt;
As said during last accessibility team meeting, I'm splitting this ticket into smaller tickets to make it easier to fix step by step.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Related:  &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43397" title="#43397: enhancement: Add columns titles to menu screen and a help text about data saving (closed: fixed)"&gt;#43397&lt;/a&gt; – Columns title and hint about data saving
&lt;/li&gt;&lt;li&gt;Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43398" title="#43398: enhancement: Avoid using visual tabs when it's irrelevant: menu screen, about.php ... (new)"&gt;#43398&lt;/a&gt; – Tabs that are not actual tabs
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43397 (Add columns titles to menu screen and a help text about data saving) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43397#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43397#comment:1/1519429323563018</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43397.diff attached to Ticket #43397</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43397/43397.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43397/43397.diff/1519429247702483</guid>
      <description>&lt;p&gt;
Adds columns titles to menu screen and a small hint at the top of the screen concerning data saving in this screen ;)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>columns_titles.png attached to Ticket #43397</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43397/columns_titles.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43397/columns_titles.png/1519429137648892</guid>
      <description>&lt;p&gt;
Columns titles rendering after 43397.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43397 (Add columns titles to menu screen and a help text about data saving) created</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43397</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43397/1519429078407748</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40678" title="#40678: defect (bug): Editing menus in WP admin for blind people (new)"&gt;#40678&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The menu screen is a bit complicated to understand at a glance, and it's even more complicated for assistive technologies users. Since there is two main sections in &lt;code&gt;wp-admin/nav-menus.php&lt;/code&gt; I suggest to add titles too clearly identify each section role.
&lt;/p&gt;
&lt;p&gt;
This ticket is a part of a bigger one: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40678" title="#40678: defect (bug): Editing menus in WP admin for blind people (new)"&gt;#40678&lt;/a&gt;. During the last accessibility team meeting, we suggested to separate the different tasks of 40678 in separate tickets to make it easier to commit.
&lt;/p&gt;
&lt;p&gt;
Concerning this ticket, we used &lt;code&gt;screen-reader-text&lt;/code&gt; on these titles at first, but it appears to be relevant to make it visible for everyone.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43396 (Use HTTPS for dashboard_primary_feed) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:42:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43396</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43396/1519425734669234</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27115" title="#27115: task (blessed): HTTPS links to wordpress.org (closed: fixed)"&gt;#27115&lt;/a&gt; changed most of wordpress.org links in WordPress core to HTTPS.
&lt;/p&gt;
&lt;p&gt;
For some reason, &lt;code&gt;dashboard_primary_feed&lt;/code&gt; was missed and still links to &lt;code&gt;http://wordpress.org/news/feed/&lt;/code&gt;, while &lt;code&gt;dashboard_secondary_feed&lt;/code&gt; links to &lt;code&gt;https://planet.wordpress.org/feed/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The primary feed URL should use HTTPS as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43045 (Trigger events equivalent to editor:image-edit and editor:image-update ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43045#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43045#comment:1/1519425420434092</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Discovery should be done to see why these events aren't firing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43064 (wordpress on different port doesn't run customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:22:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43064#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43064#comment:2/1519424556242904</guid>
      <description>&lt;p&gt;
Is the &lt;code&gt;home&lt;/code&gt;/&lt;code&gt;site_url&lt;/code&gt; option set to &lt;code&gt;http://wordpress.dev:3000&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43063 (wp customizer is missing core events) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43063#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43063#comment:1/1519423994679459</guid>
      <description>wontfix: &lt;p&gt;
You can listen for controls being added via &lt;code&gt;wp.customize.control.bind( 'add', function( control ) { /* ... */ } )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
So just check if &lt;code&gt;control.id&lt;/code&gt; begins with &lt;code&gt;widget_&lt;/code&gt; or &lt;code&gt;nav_menu_item&lt;/code&gt; and that will tell you when a menu item or widget is added.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43113 (Multiple custom item classes are returned as single string when using ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43113#comment:1/1519423759889006</guid>
      <description>&lt;p&gt;
Do you have an example of some code causes the bug to appear?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43197 (Nesting @media rule inside @supports rule fails CSS validation) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43197#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43197#comment:2/1519423499297747</guid>
      <description>&lt;p&gt;
Or rather, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43105" title="#43105: defect (bug): CSS editor in customizer doesn't support everything (closed: worksforme)"&gt;#43105&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43105 (CSS editor in customizer doesn't support everything) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43105#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43105#comment:4/1519423433127894</guid>
      <description>&lt;p&gt;
Yes, as CSSLint adds support for more features, and CSSLint is updated in core, then the new CSS features will be supported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43139 (Gallery widget preview incorrectly updated after one image gets deleted) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43139#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43139#comment:3/1519422895006482</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43139 (Gallery widget preview incorrectly updated after one image gets deleted) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43139#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43139#comment:2/1519422884061397</guid>
      <description>&lt;p&gt;
It would be better to use &lt;code&gt;_.filter&lt;/code&gt;. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43139/43139.2.diff" title="Attachment '43139.2.diff' in Ticket #43139"&gt;43139.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43139/43139.2.diff" title="Download"&gt;​&lt;/a&gt; for an untested patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43139.2.diff attached to Ticket #43139</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43139/43139.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43139/43139.2.diff/1519422861050288</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42409 (Add LIKE support to meta_key comparisons in WP_Meta_Query) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42409#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42409#comment:12/1519421887168367</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff" title="Attachment '42409.3.diff' in Ticket #42409"&gt;42409.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.3.diff" title="Download"&gt;​&lt;/a&gt; cleans up documentation and adds unit tests that demonstrate &lt;code&gt;compare_key&lt;/code&gt; and &lt;code&gt;meta_compare_key&lt;/code&gt; behavior. Unfortunately, the test in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.test.diff" title="Attachment '42409.test.diff' in Ticket #42409"&gt;42409.test.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.test.diff" title="Download"&gt;​&lt;/a&gt; doesn't work after recent changes to the way that SQL queries are generate by &lt;code&gt;$wpdb&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I agree with the comments above that we ought to keep the behavior consistent with &lt;code&gt;LIKE&lt;/code&gt; for values. It's unfortunately that it's poorly named, but it'd be worse to have it inconsistent between keys and values.
&lt;/p&gt;
&lt;p&gt;
I agree with @kokers that &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42409#comment:4" title="Comment 4"&gt;we should add support for other compare operators&lt;/a&gt; if we're going to introduce &lt;code&gt;compare_key&lt;/code&gt;. Again, this is for consistency with &lt;code&gt;compare&lt;/code&gt; (also, why not?). An updated version of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff" title="Attachment '42409.3.diff' in Ticket #42409"&gt;42409.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.3.diff" title="Download"&gt;​&lt;/a&gt; with less hardcoded logic regarding  &lt;code&gt;LIKE&lt;/code&gt; / &lt;code&gt;=&lt;/code&gt; would be welcome. If not, we can handle this additional enhancement as part of a separate ticket.
&lt;/p&gt;
&lt;p&gt;
More general wildcard support - ie, proper "LIKE" behavior with &lt;code&gt;%&lt;/code&gt; - will probably have to be produced with a new operator name. Unfortunately it can't be "LIKE". "RAW_LIKE" is clunky but I'm having a hard time coming up with a better option. (The confusing thing here is that the upper-case convention implies that it corresponds to an actual MySQL operator, which &lt;code&gt;RAW_LIKE&lt;/code&gt; does not.) Perhaps it'd be more semantically correct to add a parameter, something like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;'meta_query' =&amp;gt; array(
    array(
        'key' =&amp;gt; 'foo\_%\_bar',
        'compare_key' =&amp;gt; 'LIKE',
        'escape_wildcards_key' =&amp;gt; false,
    ),
    // For values
    array(
        'key' =&amp;gt; 'foo',
        'value' =&amp;gt; 'foo%bar',
        'compare' =&amp;gt; 'LIKE',
        'escape_wildcards' =&amp;gt; false,
    ),
),
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;escape_wildcards&lt;/code&gt; and &lt;code&gt;escape_wildcards_key&lt;/code&gt; would default to &lt;code&gt;true&lt;/code&gt;, for compatibility.
&lt;/p&gt;
&lt;p&gt;
I am loath to introduce another parameter, but this feels more accurate to me than something like &lt;code&gt;RAW_LIKE&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Two questions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;What do others think of this suggested syntax?
&lt;/li&gt;&lt;li&gt;Is there any reason to hold off on the improvement in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff" title="Attachment '42409.3.diff' in Ticket #42409"&gt;42409.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.3.diff" title="Download"&gt;​&lt;/a&gt; before making a decision about wildcard support?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
2 is especially important because it's likely that "true" &lt;code&gt;LIKE&lt;/code&gt; support is going to be very difficult (if even possible) to implement from a security point of view, so I don't want it to hold up the much more straightforward improvement being suggested in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff" title="Attachment '42409.3.diff' in Ticket #42409"&gt;42409.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43197 (Nesting @media rule inside @supports rule fails CSS validation) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43197#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43197#comment:1/1519421617115201</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42528" title="#42528: defect (bug): Customizer CSS can’t save CSS grid (closed: fixed)"&gt;#42528&lt;/a&gt;. It's probably a bug with CSSLint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42409.3.diff attached to Ticket #42409</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:22:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff/1519420959579054</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 23 Feb 2018 20:11:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:1/1519416669360518</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My idea for the route to solving this is slightly complicated, but I think does the best job of ensuring that automatic updates work.
&lt;/p&gt;
&lt;p&gt;
1) Create a docker container for running the tests. We may be able to use some prior art from Gutenberg.  This should include file permissions where auto updates will work. We should install the latest stable version of wordpress (though it may make sense in the future to also do this on a branch by branch basis)
2) Include and activate the beta tester plugin. Configure it for minor version nightly updates.
3) Trigger an autoupdate via a hit to wp-cron.
4) Confirm that the site doesn’t fatal and the site is updated. Maybe also confirm that the error log is empty.
&lt;/p&gt;
&lt;p&gt;
cc/ @dd32 and @pento to see if they agree.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 23 Feb 2018 20:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395/1519416648156921</guid>
      <description>&lt;p&gt;
This is a follow up to the issues introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43103" title="#43103: defect (bug): Reduce Plugin/theme API calls during core release windows (closed: fixed)"&gt;#43103&lt;/a&gt; and described in &lt;a class="ext-link" href="https://make.wordpress.org/core/2018/02/06/wordpress-4-9-4-release-the-technical-details/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2018/02/06/wordpress-4-9-4-release-the-technical-details/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Essentially, due to the way automated updates work, we need automated tests that can confirm they are working. Due to the code loading path differences between phpunit, wp-cli, wp-cron, and the WordPress UI, it's important that this test work as close as possible to the way the majority of sites are autoupdated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43394 (wpautop inserts extraneous line breaks if hard return around commented ...) created</title>
      
        <dc:creator>davidshq</dc:creator>

      <pubDate>Fri, 23 Feb 2018 20:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43394</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43394/1519416139137164</guid>
      <description>&lt;p&gt;
Problem: If one has code comments before content in a WordPress post/page and there are hard returns before and after the code comment, WordPress will insert an extraneous line break. Further, if there are hard returns between multiple comments an extraneous line break will be added.
&lt;/p&gt;
&lt;p&gt;
This problem can be reproduced by doing the following:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Edit a WordPress post or page.
&lt;/li&gt;&lt;li&gt;Add a code comment with hard returns before and after it such as:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;
&amp;lt;!-- My Code Comment--&amp;gt;
&lt;/pre&gt;&lt;ol start="3"&gt;&lt;li&gt;Publish/preview the page.
&lt;/li&gt;&lt;li&gt;Use Inspect to examine the area where you placed the above comment and you'll notice an extra line break.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This may seem like a very edge case and a minor annoyance, but we ran into this issue recently when we had multiple code comments following each other like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;Some regular content here.&amp;lt;/p&amp;gt;
&amp;lt;!-- This is Important --&amp;gt;
&amp;lt;!-- Don't Forget This --&amp;gt;
&amp;lt;!-- Why are you Forgetting? --&amp;gt;
&amp;lt;!-- Adding individual comments for each line is --&amp;gt;
&amp;lt;!-- fun! --&amp;gt;
&amp;lt;p&amp;gt;Some regular content here.&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
An extraneous line break now becomes four line breaks.
&lt;/p&gt;
&lt;p&gt;
This becomes quite confusing for editors as when they look at the post the extra returns are not apparent yet inserted when the page is actually posted.
&lt;/p&gt;
&lt;p&gt;
I'm thinking that resolving this issue might also resolve many other cases of wpautop gone rogue.
&lt;/p&gt;
&lt;p&gt;
My suggestion would be that wpautop be changed so that:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;If there is a code comment with a hard return before and after the comment, it does not automatically add wpautop. (one can argue that this is behaving as expected, but I doubt many are thinking when they add a code comment that it will add a nice line break for them...and in any case, this can be much more obviously/easily remedied by inserting a &amp;lt;br&amp;gt; in the editor if one truly did want a line break caused in this manner, whereas it can be quite time consuming to discover why extra line breaks are mysteriously appearing)
&lt;/li&gt;&lt;li&gt;Similarly, with shortcodes, if the shortcode is tested valid then don't add line breaks with wpautop around the shortcode.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43386 (render-partials-init similar to render-partials-response in customiser ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 17:53:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43386#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43386#comment:3/1519408384767033</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43386 (render-partials-init similar to render-partials-response in customiser ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 17:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43386#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43386#comment:2/1519408370684596</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, I think in general it is better to extend the &lt;code&gt;Partial&lt;/code&gt; class to override the &lt;code&gt;preparePlacement&lt;/code&gt; method in JS to achieve this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33979 (Add filter for 'post_gallery_item') updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 23 Feb 2018 16:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33979#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33979#comment:8/1519401883478478</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33979#comment:6" title="Comment 6"&gt;tristangemus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Similar? &lt;a href="https://core.trac.wordpress.org/attachment/ticket/38228/patch_38228.3.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/38228/patch_38228.3.diff&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is similar but a different context. That ticket aims to filter the entire generated output of the shortcode whereas this one is being used for just a single image within the gallery. Love both of these tickets, but we should definitely keep them separate :)
&lt;/p&gt;
&lt;p&gt;
I would also like to see the ability to modify more than just classes using a filter. Adding data attributes to the tag, or changing the image size for the current image would be great. That could allow more creative gallery layouts, such as the tiled gallery in Jetpack. &lt;a class="ext-link" href="https://jetpackme.files.wordpress.com/2013/11/example-gallery-tiled.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jetpackme.files.wordpress.com/2013/11/example-gallery-tiled.jpg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43393 (get_user_by can return wrong user info) updated</title>
      
        <dc:creator>hberberoglu</dc:creator>

      <pubDate>Fri, 23 Feb 2018 15:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43393#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43393#comment:2/1519399602155551</guid>
      <description>&lt;p&gt;
@ocean90 thanks for fast response. I agree with you and to solve this I'll do a code change on drop-in side. I do not know how WordPress's approach is in such cases.
&lt;/p&gt;
&lt;p&gt;
If you say; the drop-in should solve this, then okay, you can close this ticket.
&lt;/p&gt;
&lt;p&gt;
If you say; we can make changes on our code so that our users do not experience this problem, then keep this ticket open.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43393 (get_user_by can return wrong user info) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:49:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43393#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43393#comment:1/1519397394859121</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is actually a bug in the drop-in caused by this line:
&lt;code&gt;return preg_replace('/\s+/', '', WP_CACHE_KEY_SALT . "$prefix$group:$key"); &lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Using a placeholder in cache keys rather than simply stripping out spaces would solve this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11302 (Bulk editing posts should pre-fill fields with the same value / allow ...) updated</title>
      
        <dc:creator>pannelars</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11302#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11302#comment:43/1519397286820938</guid>
      <description>&lt;p&gt;
Still no plan for a release?? Miss this function
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43393 (get_user_by can return wrong user info) created</title>
      
        <dc:creator>hberberoglu</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:38:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43393</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43393/1519396693655972</guid>
      <description>&lt;p&gt;
I am using memcached object cache dropin (I use &lt;a class="ext-link" href="https://tr.wordpress.org/plugins/memcached/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://tr.wordpress.org/plugins/memcached/&lt;/a&gt;) and there is two user record on wp_users table; one user's user_login is 'AlbertEinstein' other one's is 'Albert Einstein'. So there is two different user.
&lt;/p&gt;
&lt;p&gt;
But these codes below are returning always same user's info; AlbertEinstein's info.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user_data = get_user_by('login', 'Albert Einstein');
&lt;/pre&gt;&lt;pre class="wiki"&gt;$user_data = get_user_by('login', 'AlbertEinstein');
&lt;/pre&gt;&lt;p&gt;
It happens because of memcached protocol;
&lt;/p&gt;
&lt;p&gt;
For installs that use the memcache/memcached object-cache drop-in (and possibly others), the resulting wp_cache_get always returns false since a memcached key "... must not include control characters or whitespace." (per &lt;a class="ext-link" href="https://github.com/memcached/memcached/blob/master/doc/protocol.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/memcached/memcached/blob/master/doc/protocol.txt&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
(this copied from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39034" title="#39034: defect (bug): WP_Site_Query-&amp;gt;get_sites() constructs an invalid key... (closed: worksforme)"&gt;#39034&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:1/1519396662224343</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) created</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392/1519396596654697</guid>
      <description>&lt;p&gt;
Currently, &lt;code&gt;register_meta()&lt;/code&gt; is used to expose meta data by setting &lt;code&gt;show_in_rest =&amp;gt; true&lt;/code&gt;. If you want to work with custom metadata on Gutenberg (by setting an attribute with &lt;code&gt;source: 'meta'&lt;/code&gt;), you need to use &lt;code&gt;register_meta()&lt;/code&gt;. Now, this function also has the parameter &lt;code&gt;type&lt;/code&gt;, where you set the metadata object type. Currently, allowed types are simple things like &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
While I was working with Gutenberg, I felt the need to create nested attributes (that would translate into JSON objects). Here is an example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;attributes: {
    navigationStyles: {
        type: 'object',
	default: {
	    fontSize: {
                type: 'number',
                default: 10,
            },
	    fontColor: {
                type: 'string',
                default: '#ccc',
            },
	},
        source: 'meta',
        meta: 'navigation_styles',
    },
},
&lt;/pre&gt;&lt;p&gt;
Now, when Gutenberg tries to save this attribute on the database, the attribute will be a JSON object, which will translate into an associative array to be handled in PHP. But, currently, there's no support for registering a metadata with &lt;code&gt;register_meta()&lt;/code&gt; that will be an associative array:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;blocks_meta_init&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;register_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'navigation_styles'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'show_in_rest'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// not possible at the moment
&lt;/span&gt;        &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'blocks_blocks_meta_init'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If you try to do that, the REST API will fail to save the metadata. My current workaround for this use case is to just register the meta as a &lt;code&gt;string&lt;/code&gt;, and handle the formatting of the metadata using &lt;code&gt;sanitize_callback&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;blocks_meta_init&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;register_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'navigation_styles'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'show_in_rest'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'sanitize_callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'blocks_sanitize_attr'&lt;/span&gt;
        &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'blocks_blocks_meta_init'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;blocks_sanitize_attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$meta_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$meta_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$meta_type&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$meta_value&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This works, but has several limitations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You need to turn your javascript object into a string (&lt;code&gt;JSON.stringify&lt;/code&gt;)if you want to store it on the database.
&lt;/li&gt;&lt;li&gt;You need to handle sanitization yourself
&lt;/li&gt;&lt;li&gt;If you get the metadata using &lt;code&gt;get_post_meta()&lt;/code&gt;, it won't apply &lt;code&gt;maybe_unserialize()&lt;/code&gt; before returning the metadata, you need to do it yourself.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I propose that we support the &lt;code&gt;'type' =&amp;gt; 'array'&lt;/code&gt; with &lt;code&gt;register_meta()&lt;/code&gt;. This way, we'll have a proper way to store arrays or JSON objects as associative arrays. This would make the REST API more flexible, and project Gutenberg would also benefit by making attributes more flexible than they currently are.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43390 (get_super_admins() should not return "admin" by default) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43390#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43390#comment:2/1519396221814448</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/16293" title="#16293: defect (bug): In multisite installs, users with id 1 can't be deleted (reopened)"&gt;#16293&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39174" title="#39174: feature request: Introduce network roles (new)"&gt;#39174&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) updated</title>
      
        <dc:creator>zkingdesign</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391#comment:4/1519394791413184</guid>
      <description>&lt;p&gt;
This is the query I get, when I dump the $query variable
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/zkingdesign/2cd5588cee6539427539f8baf34c8f38"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/zkingdesign/2cd5588cee6539427539f8baf34c8f38&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Query:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'fields'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'display_name'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'role'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'expert'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'number'&lt;/span&gt;         &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$numPosts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'offset'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;  &lt;span class="nv"&gt;$numPosts&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'DESC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_count'&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_User_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391#comment:3/1519394481670770</guid>
      <description>&lt;p&gt;
I have tested with below query. It works fine for me. I am getting correct results.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'fields'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'display_name'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'role'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'administrator'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'number'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'10'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ASC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_count'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Ref. &lt;a class="ext-link" href="https://codex.wordpress.org/Class_Reference/WP_User_Query"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Class_Reference/WP_User_Query&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) updated</title>
      
        <dc:creator>zkingdesign</dc:creator>

      <pubDate>Fri, 23 Feb 2018 13:46:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391#comment:2/1519393575377765</guid>
      <description>&lt;p&gt;
@chetan200891
&lt;/p&gt;
&lt;p&gt;
Yes, the 'expert' role is registered, and it's working OK, it only list users who have that role, but 'orderby' =&amp;gt; 'post_count' ain't working.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 23 Feb 2018 13:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391#comment:1/1519393459887823</guid>
      <description>&lt;p&gt;
@zkingdesign
&lt;/p&gt;
&lt;p&gt;
Welcome to trac! Have you added new 'expert' role?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43381 (Remove 'category' parameter from category_description function.) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 23 Feb 2018 13:41:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43381#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43381#comment:1/1519393318293433</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Feb 2018 10:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:13/1519381744301999</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
wondering if in the schema somewhere we have or can add a 'supports autosave' flag so clients know a post type supports autosaves
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Was looking at that too. But it would mean we will have to add 'autosave' to &lt;code&gt;post_type_supports()&lt;/code&gt; too, right? There is post_type_supports 'revision' already, the thing is that even if CPTs don't support revisions, we still seem to do autosaves for them. Also autosaves (with or without creating a revision) is somewhat basic functionality, not sure if we need special flag to enable it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
thinking we could add a helper to the wp.api client
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, think that would be great. Both for auto saving and retrieving autosaves.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Feb 2018 10:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:12/1519380136426715</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1519380134000315"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) created</title>
      
        <dc:creator>zkingdesign</dc:creator>

      <pubDate>Fri, 23 Feb 2018 09:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391/1519379267689563</guid>
      <description>&lt;p&gt;
I've got an issue when doing a query with WP_User_Query and trying to list from a specific role AND using 'orderby' =&amp;gt; 'post_count'. The query simply fails to list the correct results.
&lt;/p&gt;
&lt;p&gt;
Here are the query arguments:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'fields'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'display_name'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'role'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'expert'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'number'&lt;/span&gt;         &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$numPosts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'offset'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;  &lt;span class="nv"&gt;$numPosts&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'DESC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_count'&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If I remove the 'role' argument from the query it works, but with the 'role' included it doesn't.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34699 (New function: `get_query_arg()`) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 23 Feb 2018 09:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34699#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34699#comment:10/1519378144040466</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43385 (Removed meetup still appears in dashboard widget.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 23 Feb 2018 05:39:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43385#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43385#comment:1/1519364399861409</guid>
      <description>invalid: &lt;p&gt;
Hey @chetan200891
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this, but we're tracking this over in &lt;a class="ext-link" href="https://meta.trac.wordpress.org/ticket/2720"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/ticket/2720&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(I'd close as duplicate, but in order to do so it needs to be a ticket on this trac instance..)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43251 (editable_roles filter doesn't exclude role on multisite) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Fri, 23 Feb 2018 02:10:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43251#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43251#comment:1/1519351810779555</guid>
      <description>&lt;p&gt;
I think that &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-admin/user-new.php#L159"&gt;line 159&lt;/a&gt; in &lt;code&gt;wp-admin/user-new.php&lt;/code&gt; is the culprit here. It passes &lt;code&gt;$_REQUEST['role']&lt;/code&gt; to &lt;code&gt;wpmu_signup_user()&lt;/code&gt; without checking if the role is editable.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;wpmu_signup_user( $new_user_login, $new_user_email, array( 'add_to_blog' =&amp;gt; get_current_blog_id(), 'new_role' =&amp;gt; $_REQUEST['role'] ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43390 (get_super_admins() should not return "admin" by default) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Fri, 23 Feb 2018 01:42:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43390#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43390#comment:1/1519350137768361</guid>
      <description>&lt;p&gt;
Just realized that &lt;code&gt;grant_super_admin()&lt;/code&gt; and &lt;code&gt;revoke_super_admin()&lt;/code&gt; are also affected.
&lt;/p&gt;
&lt;p&gt;
Lines &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/capabilities.php#L820"&gt;820&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/capabilities.php#L867"&gt;867&lt;/a&gt; in &lt;code&gt;wp-includes/capabilities.php&lt;/code&gt; both read:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$super_admins = get_site_option( 'site_admins', array( 'admin' ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43390 (get_super_admins() should not return "admin" by default) created</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Fri, 23 Feb 2018 01:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43390</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43390/1519349384212974</guid>
      <description>&lt;p&gt;
The function &lt;code&gt;get_super_admins()&lt;/code&gt;, introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14206" title="Introduce get_super_admins().  Allow hard-coding a global super_admins ..."&gt;[14206]&lt;/a&gt;, returns an array of users with network admin capabilities. Those are stored in the &lt;code&gt;site_admins&lt;/code&gt; network option.
&lt;/p&gt;
&lt;p&gt;
If, for any reason, that network option does not exist, &lt;code&gt;get_super_admins()&lt;/code&gt; will return a one-element array containing &lt;em&gt;"admin"&lt;/em&gt; instead.
&lt;/p&gt;
&lt;p&gt;
See &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/capabilities.php#L761"&gt;line 761&lt;/a&gt; in &lt;code&gt;wp-includes/capabilities.php&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;return get_site_option( 'site_admins', array('admin') );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This goes back to a time when &lt;code&gt;admin&lt;/code&gt; was the default username for the first WordPress user. Since administrators are now discouraged from using &lt;em&gt;admin&lt;/em&gt; as a username, &lt;code&gt;get_super_admins()&lt;/code&gt; should return an empty array by default:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;return get_site_option( 'site_admins', array() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 23 Feb 2018 01:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:11/1519348204004988</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
alternative is to set post_type: 'autosave' and then to "convert" it to the proper post_type = 'revision' as soon as the request is received
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Interesting idea - this at least works within an existing field.
&lt;/p&gt;
&lt;p&gt;
wondering if in the schema somewhere we have or can add a 'supports autosave' flag so clients know a post type supports autosaves (might be there already?).... also thinking we could add a helper to the wp.api client so you could do &lt;code&gt;post.autosave();&lt;/code&gt; and handle the status change internally.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 22 Feb 2018 23:27:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:10/1519342059911432</guid>
      <description>&lt;p&gt;
Still TBD/TODO:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I agree that passing a flag in the request (when saving or retrieving autosaves) may not be the best. As far as I see the only alternative is to set &lt;code&gt;post_type: 'autosave'&lt;/code&gt; and then to "convert" it to the proper &lt;code&gt;post_type = 'revision'&lt;/code&gt; as soon as the request is received. As there is no &lt;code&gt;'autosave'&lt;/code&gt; post_type in WordPress, this may be confusing.
&lt;/li&gt;&lt;li&gt;Add few more tests (perhaps) for edge cases.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 22 Feb 2018 23:13:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:9/1519341225044380</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:8" title="Comment 8"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Great! Thanks for testing.
&lt;/p&gt;
&lt;p&gt;
In 43316.1.patch: when &lt;code&gt;is_autosave: true&lt;/code&gt; is set in the request &lt;code&gt;WP_REST_Revisions_Controller::get_item()&lt;/code&gt; and &lt;code&gt;WP_REST_Revisions_Controller::get_items()&lt;/code&gt; will return only autosaves (if any). Add couple of tests for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43316.1.patch attached to Ticket #43316</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 22 Feb 2018 23:09:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.1.patch/1519340972149918</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38025 (Query networks with meta_query) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 22 Feb 2018 21:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38025#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38025#comment:11/1519336199120368</guid>
      <description>&lt;p&gt;
I have created a feature project (plugin) for this functionality.
&lt;a class="ext-link" href="https://github.com/wp-multisite/wp-network-meta-query"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-multisite/wp-network-meta-query&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This functionality can live as a plugin...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43255 (WP_Image_Editor::make_image leaves an output buffer open on failure) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 20:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43255#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43255#comment:8/1519329826554520</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1519329824000375"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 20:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:7/1519329703580797</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1519329701000499"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42968 (Media: Grid View: new upload, file is in the wrong position in the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 20:01:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42968#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42968#comment:19/1519329670577827</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1519329668000515"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34539 (Image Sizes input fields on Media Settings page is too small) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 19:58:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34539#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34539#comment:24/1519329536108696</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1519329533000456"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42724 (Options Media page hides breaks on desktop) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 19:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42724#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42724#comment:20/1519329192191557</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1519329189000315"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9419 (WordPress and image alt tags) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 19:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9419#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9419#comment:6/1519327945145314</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1519327943000143"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34635 (WordPress image's title is not alt) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 19:32:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34635#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34635#comment:33/1519327923167640</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1519327919000633"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43380 (Made ALT and TITLE field mandatory when uploading media) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 19:28:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43380#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43380#comment:1/1519327715104466</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1519327713000070"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43386 (render-partials-init similar to render-partials-response in customiser ...) updated</title>
      
        <dc:creator>gandham</dc:creator>

      <pubDate>Thu, 22 Feb 2018 18:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43386#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43386#comment:1/1519325473101703</guid>
      <description>&lt;p&gt;
I think we can override the preparePlacement method and do the UI changes there, but still if we can fire an event in the prepare placement method it would be useful.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
/**
		 * Prepare container for selective refresh.
		 *
		 * @since 4.5.0
		 *
		 * @param {Placement} placement
		 */
		preparePlacement: function( placement ) {
			$( placement.container ).addClass( 'customize-partial-refreshing' );
			self.trigger( 'partial-content-initiated', placement );
		},
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43389 (Add a privacy policy page setting to options-reading.php) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 22 Feb 2018 18:49:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43389#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43389#comment:3/1519325380751447</guid>
      <description>&lt;p&gt;
I'm a fan of breaking work down - this piece seems fundamental to me and could actually be delivered early and independently of other GDPR related work.
&lt;/p&gt;
&lt;p&gt;
Edit: I'll be sure to mention this particular ticket/idea in next week's .org slack gdpr office hours as well
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43389 (Add a privacy policy page setting to options-reading.php) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 22 Feb 2018 18:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43389#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43389#comment:2/1519324864960148</guid>
      <description>&lt;p&gt;
This issue came out of the GDPR chats.
&lt;/p&gt;
&lt;p&gt;
We should decide if we want 1 master ticket, several smaller tickets, both, or neither based on timing, etc...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43389 (Add a privacy policy page setting to options-reading.php) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 22 Feb 2018 18:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43389#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43389#comment:1/1519323633218101</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43175" title="#43175: enhancement: Discussion - Pseudonymisation (closed: wontfix)"&gt;#43175&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Before we jump the gun here I'd heavily suggest discussing stuff like that in the GDPR compliance chats.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://make.wordpress.org/core/2018/02/19/proposed-roadmap-tools-for-gdpr-compliance/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2018/02/19/proposed-roadmap-tools-for-gdpr-compliance/&lt;/a&gt; for more information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43389 (Add a privacy policy page setting to options-reading.php) created</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 22 Feb 2018 18:16:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43389</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43389/1519323415656731</guid>
      <description>&lt;p&gt;
Proposed: Add a privacy policy page setting to options-reading.php or possibly options-general.php. The privacy policy page setting, like the home page setting, could default to un-set, and an admin could otherwise select from pages on the site.
&lt;/p&gt;
&lt;p&gt;
The selected page would be saved in the site's options and available to themes and plugins via something like get_privacy_policy_url (similar to how get_home_url works)
&lt;/p&gt;
&lt;p&gt;
We should also have a is_privacy_policy that returns true (similar to how is_home works)
&lt;/p&gt;
&lt;p&gt;
May or may not want the result filterable like home_url supports.
&lt;/p&gt;
&lt;p&gt;
Rationale for adding to core: with the EU GDPR coming into effect, more sites are required to have a published privacy policy. Having a standard means of fetching a site's privacy policy url will be great help to themes and widgets that need to expose that information.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43024 (Twenty Fifteen: ul li &gt; blockquote has styling issues) closed</title>
      
        <dc:creator>ketanumretiya030</dc:creator>

      <pubDate>Thu, 22 Feb 2018 17:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43024#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43024#comment:8/1519321615434451</guid>
      <description>invalid: &lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
i have check in all browser never found issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43388 (Long string without spaces in wptexturize() breaks layout in ...) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 22 Feb 2018 17:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43388#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43388#comment:1/1519321037607569</guid>
      <description>wontfix: &lt;p&gt;
Closing as wontfix since it's just a UI issue which actually doesn't happen in Chrome but in Firefox.
&lt;/p&gt;
&lt;p&gt;
There's already a related GlotPress issue: &lt;a class="ext-link" href="https://github.com/GlotPress/GlotPress-WP/issues/875"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/GlotPress/GlotPress-WP/issues/875&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40560 (REST API: Unicode characters are escaped in the response) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 22 Feb 2018 16:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40560#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40560#comment:8/1519317167567175</guid>
      <description>invalid: &lt;p&gt;
@hwgehring sorry, but your claim that "Unicode-escaped text is only valid JSON in certain exceptional cases" is a misreading of the RFC you quoted.
&lt;/p&gt;
&lt;p&gt;
From &lt;a class="ext-link" href="https://tools.ietf.org/html/rfc8259#section-7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://tools.ietf.org/html/rfc8259#section-7&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any character may be escaped.  If the character is in the Basic Multilingual Plane (U+0000 through U+FFFF), then it may be represented as a six-character sequence ... Alternatively, there are two-character sequence escape representations of some popular characters.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So even the string &lt;code&gt;"\u0048\u0065\u006c\u006c\u006f"&lt;/code&gt; is perfectly valid JSON, equivalent to &lt;code&gt;"Hello"&lt;/code&gt;.  Proof: &lt;a class="ext-link" href="https://jsonlint.com/?json=%22\u0048\u0065\u006c\u006c\u006f%22"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jsonlint.com/?json=%22\u0048\u0065\u006c\u006c\u006f%22&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Again, if this is an issue for you, it means the library or technique you are using to parse JSON is incorrect.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>2018-02-22.png attached to Ticket #43388</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Thu, 22 Feb 2018 16:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43388/2018-02-22.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43388/2018-02-22.png/1519316402278788</guid>
      <description>&lt;p&gt;
Screenshot of broken layout on translation platform
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43388 (Long string without spaces in wptexturize() breaks layout in ...) created</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Thu, 22 Feb 2018 16:19:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43388</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43388/1519316354042014</guid>
      <description>&lt;p&gt;
Whenever I open &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev&lt;/a&gt; for translation, I get broken layout in the main core translation project.
(Yes, I've selected to show the whole translation project on one page, and this particular project always has a broken (non-responsive) layout.
&lt;/p&gt;
&lt;p&gt;
The reason is a long string without any spaces in function wptexturize().
Namely:
&lt;code&gt;&amp;amp;#8217;tain&amp;amp;#8217;t,&amp;amp;#8217;twere,&amp;amp;#8217;twas,&amp;amp;#8217;tis,&amp;amp;#8217;twill,&amp;amp;#8217;til,&amp;amp;#8217;bout,&amp;amp;#8217;nuff,&amp;amp;#8217;round,&amp;amp;#8217;cause,&amp;amp;#8217;em&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
String is used to populate cockneyreplace matrix.
&lt;/p&gt;
&lt;p&gt;
Would it be possible to have that list separated by spaces, or comma and space, or use comma+space and then throw away the spaces before exploding into an array?
&lt;/p&gt;
&lt;p&gt;
Location: &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/formatting.php?marks=141#L141"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/formatting.php?marks=141#L141&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 22 Feb 2018 16:01:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:8/1519315263511496</guid>
      <description>&lt;p&gt;
@azaozz I did some local testing and this seems to work well. I tested in the console after opening a page with wp-api loaded:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var post = new wp.api.models.Post();
post.set( 'title', 'autosave test' );
post.save();
post.set( 'status', 'publish' );
post.save();
post.set( 'title', 'updated autosave test' );
post.save( { is_autosave: true } );
&lt;/pre&gt;&lt;p&gt;
I then logged in as a different user and created a new autosave as that user:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var post = new wp.api.models.Post();
post.set('id',[previous_id]);
post.fetch();
post.save( { is_autosave: true } );
&lt;/pre&gt;&lt;p&gt;
At this point, checking the database, the rows look as I expect them to:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cl.ly/0m3I2H3H0k2j/Image%202018-02-22%20at%2010.58.00%20AM.png"&gt;&lt;img src="https://cl.ly/0m3I2H3H0k2j/Image%202018-02-22%20at%2010.58.00%20AM.png" alt="https://cl.ly/0m3I2H3H0k2j/Image%202018-02-22%20at%2010.58.00%20AM.png" crossorigin="anonymous" title="https://cl.ly/0m3I2H3H0k2j/Image%202018-02-22%20at%2010.58.00%20AM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Running tests here: &lt;a class="ext-link" href="https://travis-ci.org/adamsilverstein/wordpress-develop-fork/builds/344856533"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/adamsilverstein/wordpress-develop-fork/builds/344856533&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18136 (WordPress Adding Spurious &lt;/p&gt;) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 22 Feb 2018 15:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18136#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18136#comment:21/1519314869780325</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43387" title="#43387: defect (bug): wpautop() adds &amp;#34;&amp;lt;/p&amp;gt;&amp;#34; where it should not (new)"&gt;#43387&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43387 (wpautop() adds "&lt;/p&gt;" where it should not) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 22 Feb 2018 15:54:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43387#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43387#comment:1/1519314846469940</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/18136" title="#18136: defect (bug): WordPress Adding Spurious &amp;lt;/p&amp;gt; (reopened)"&gt;#18136&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43387 (wpautop() adds "&lt;/p&gt;" where it should not) created</title>
      
        <dc:creator>1994rstefan</dc:creator>

      <pubDate>Thu, 22 Feb 2018 15:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43387</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43387/1519312830069818</guid>
      <description>&lt;p&gt;
There are a few cases where &lt;code&gt;wpautop()&lt;/code&gt; creates invalid HTML code by inserting just a closing p tag. (Opening tag is missing)
&lt;/p&gt;
&lt;p&gt;
The problem exists with all block elements (defined inside wpautop function)
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$allblocks = '(?:table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary)';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I have found two cases where this happens but there may be more.
&lt;/p&gt;
&lt;p&gt;
Minimal Examples:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;echo wpautop('&amp;lt;div&amp;gt;X&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;');
echo PHP_EOL;
echo wpautop('&amp;lt;div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;'); // note the space in front of the tag
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div&amp;gt;X&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The problem is relevant because &lt;code&gt;wpautop&lt;/code&gt; is used to filter &lt;code&gt;the_content()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Examples what the user could insert inside the backend editor which results in this error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h1&amp;gt;Heading&amp;lt;div class="subheading"&amp;gt;Subheading&amp;lt;/div&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;div class="allign-center"&amp;gt;
    &amp;lt;div class="image-wrap"&amp;gt;
        &amp;lt;img src="about:blank" alt="example"&amp;gt;
        &amp;lt;div class="image-description"&amp;gt;just an example&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43386 (render-partials-init similar to render-partials-response in customiser ...) created</title>
      
        <dc:creator>gandham</dc:creator>

      <pubDate>Thu, 22 Feb 2018 14:22:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43386</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43386/1519309373400751</guid>
      <description>&lt;p&gt;
These are the events that are triggered when a selective refresh takes place.
&lt;/p&gt;
&lt;pre class="wiki"&gt;render-partials-response
partial-content-rendered
partial-placement-moved
widget-updated
sidebar-updated
&lt;/pre&gt;&lt;p&gt;
But there is no event to identify the start of the partial request. This is required if we want to make some changes (like display a loader) to the UI while the request in progress.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;.customize-partial-refreshing&lt;/strong&gt; class is added while the partial refresh is in progress, but a javascript event will be handy.
Use case: Partial used to update a style tag in the head.
&lt;/p&gt;
&lt;p&gt;
adding the following event after initiating the request in
wp-includes/js/customize-selective-refresh.js at line 773 works, but not sure if it the right way.
&lt;/p&gt;
&lt;pre class="wiki"&gt;self.trigger( 'render-partials-init', data );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 22 Feb 2018 13:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:7/1519307615375511</guid>
      <description>&lt;p&gt;
@azaozz haven't tested yet, but planning on it soon!
&lt;/p&gt;
&lt;p&gt;
I'm fine not adding another controller for autosaves and added it here only as a point of comparison to show what it would take to implement (I had already created it in a PR for Gutenberg).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 22 Feb 2018 12:53:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:6/1519304039681947</guid>
      <description>&lt;p&gt;
@adamsilverstein did you have a chance to test &lt;a href="http://core.trac.wordpress.org/attachment/ticket/43316/43316.patch"&gt;43316.patch&lt;/a&gt;?
&lt;/p&gt;
&lt;p&gt;
Don't think we need separate controller for autosaves. They are standard revisions, the only difference is when saving they are either created or updated.
&lt;/p&gt;
&lt;p&gt;
Planning to add the same flag &lt;code&gt;is_autosave: true&lt;/code&gt; to &lt;code&gt;WP_REST_Revisions_Controller::get_item()&lt;/code&gt; and &lt;code&gt;WP_REST_Revisions_Controller::get_items()&lt;/code&gt; for explicitly requesting autosaves.
&lt;/p&gt;
&lt;p&gt;
Also see &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/4218#issuecomment-367643571"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/4218#issuecomment-367643571&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43384 (wp_enqueue_script:require authors to document these in the readme.txt ...) closed</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 22 Feb 2018 12:52:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43384#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43384#comment:2/1519303966421832</guid>
      <description>invalid: &lt;p&gt;
Hi, welcome to Core Trac! :)
&lt;/p&gt;
&lt;p&gt;
This site is for WordPress Core, anything related to the plugin directory is more Meta Trac territory however this isn't something that really fits into a Meta issue because it comes down to how plugin authors build their plugins.
&lt;/p&gt;
&lt;p&gt;
Plugins in general should allow lazy loading to be turned off rather than forcing it on, Jetpack gives people a setting for this making it optional. The easiest thing to do is to just search for &lt;code&gt;wp_enqueue_script&lt;/code&gt; in the new plugin files and then dequeuing the ones you don't want.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>removed-meetup.png attached to Ticket #43385</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Thu, 22 Feb 2018 12:50:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43385/removed-meetup.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43385/removed-meetup.png/1519303806427989</guid>
      <description>&lt;p&gt;
Showing removed meetup.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43385 (Removed meetup still appears in dashboard widget.) created</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Thu, 22 Feb 2018 12:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43385</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43385/1519303777161976</guid>
      <description>&lt;p&gt;
We have removed Meetup last month which is created by mistake with series option. But still meetups appear in dashboard widget, which is no more exist. I have attached screenshot.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43384 (wp_enqueue_script:require authors to document these in the readme.txt ...) updated</title>
      
        <dc:creator>design_dolphin</dc:creator>

      <pubDate>Thu, 22 Feb 2018 12:44:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43384#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43384#comment:1/1519303495927637</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43384 (wp_enqueue_script:require authors to document these in the readme.txt ...) created</title>
      
        <dc:creator>design_dolphin</dc:creator>

      <pubDate>Thu, 22 Feb 2018 12:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43384</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43384/1519303374896608</guid>
      <description>&lt;p&gt;
&lt;strong&gt;A. Problem description:&lt;/strong&gt;
Too often finding a script not to run on certain locations is too cumbersome. wp_enqueue_script becomes a hunt for where a script is coming from, and then how to dequeue (under which name for example) it can be a time costing adventure. Still some authors don't use the wp_enqueue_script but a different way of declaring. Getting into (de)registering a script as well, and when to choose which if you want to offload a script, it's time consuming. This adds to development cost and time.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;B. Real world example:&lt;/strong&gt;
Take LazyLoad, quite a number of plugin authors are using this now (including JetPack), and so one can have multiple LazyLoad scripts to dequeue. Add in caching on multiple levels, and it is quite the mess to clean up.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;C. Performance Influence &lt;/strong&gt;
I have some concerns about how many scripts/styles get loaded all over the place, as a basic design premise. Loading scripts and styles only where they are needed can result in significant benefits such as improved load times. This can be done manually, and there are some plugins working with and on this as well.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;D. Proposed solutions:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Make it best practices/requirement to document scripts/styles enqueed in the plugin/theme read me file, or at the top of the style.css for example for css (where would JS go?)
&lt;/li&gt;&lt;li&gt;Check automatically plugins/themes hosted on wordpress.org whether they comply or not and refuse to publish until they do. With a transition period for existing plugins. (This doesn't solve plugins/themes hosted elsewhere)
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43101 (Test to ensure MediaElement SWFs aren't accidentally added to build) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 22 Feb 2018 09:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43101#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43101#comment:7/1519292607501319</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43101/43101.3.diff" title="Attachment '43101.3.diff' in Ticket #43101"&gt;43101.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43101/43101.3.diff" title="Download"&gt;​&lt;/a&gt; is without the need for &lt;code&gt;glob_recursive()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43101.3.diff attached to Ticket #43101</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 22 Feb 2018 09:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43101/43101.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43101/43101.3.diff/1519292425584860</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37584 (Add SHORTINIT Options) updated</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Thu, 22 Feb 2018 08:46:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37584#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37584#comment:8/1519289209844265</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37584#comment:6" title="Comment 6"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So many files in WordPress are cross dependent that an autoloader is the best way to ensure things get loaded.  Once that is in place, custom &lt;code&gt;SHORTINIT&lt;/code&gt; such as just handling sessions will be much more possible.  &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt; is the best route for this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
sorry for replying on closed topic, but can you (anyone) tell me that a bit simpler - is that possible to use SHORTINIT, but also load ONLY user/session-functions , i.e. to check for &lt;code&gt;current_user_can("manage_options")&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
is that possible? i cant understand that linked ticket well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43370 (Consider to make the `Format` taxonomy name plural) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 22 Feb 2018 08:16:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43370#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43370#comment:7/1519287418398008</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43370 (Consider to make the `Format` taxonomy name plural) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 22 Feb 2018 08:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43370#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43370#comment:6/1519287173852278</guid>
      <description>&lt;p&gt;
Yes, sorry the patch was generated from the stable version (4.9.4) rather than trunk, apologises. In favour of this changing though for English reasons and consistencies as well. Looks good to me anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43351 (Themes page: consider to improve the hover and focus styling) updated</title>
      
        <dc:creator>anilhada</dc:creator>

      <pubDate>Thu, 22 Feb 2018 06:51:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43351#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43351#comment:2/1519282284289831</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40123 (Improve media uploading flow) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Feb 2018 01:05:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40123#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40123#comment:5/1519261553046180</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by raajtram. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1519261551000102"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40123 (Improve media uploading flow) updated</title>
      
        <dc:creator>raajtram</dc:creator>

      <pubDate>Thu, 22 Feb 2018 01:02:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40123#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40123#comment:4/1519261351379874</guid>
      <description>&lt;p&gt;
I feel like there should be a better way to allow copying the data for the uploaded files.
&lt;/p&gt;
&lt;p&gt;
In its present state, to copy the media's URL, you need to right-click and copy the Image URL and that URL is for the thumbnail size (150x150 by default) which involves one more step of editing the URL manually.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://share.raajtram.com/phZh/Screen%20Recording%202018-02-21%20at%2007.42%20PM.gif"&gt;&lt;img src="http://share.raajtram.com/phZh/Screen%20Recording%202018-02-21%20at%2007.42%20PM.gif" alt="http://share.raajtram.com/phZh/Screen%20Recording%202018-02-21%20at%2007.42%20PM.gif" crossorigin="anonymous" title="http://share.raajtram.com/phZh/Screen%20Recording%202018-02-21%20at%2007.42%20PM.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
To copy/edit any other attributes of the media, you need to click on the "Edit" link which is a _blank link.
&lt;/p&gt;
&lt;p&gt;
While the use for direct URLs might not be very popular for images, users do need direct URLs for media such as PDFs and ZIP files.
&lt;/p&gt;
&lt;p&gt;
A good solution IMO would be to divide the media-item div into columns of data (URL, ID, SIZE?) for the uploaded media
&lt;/p&gt;
&lt;p&gt;
Here's a quick mockup of what I'm thinking (not a designer, so pardon the inconsistencies):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://share.raajtram.com/ph5w/media-uploader-idea.png"&gt;&lt;img src="http://share.raajtram.com/ph5w/media-uploader-idea.png" alt="http://share.raajtram.com/ph5w/media-uploader-idea.png" crossorigin="anonymous" title="http://share.raajtram.com/ph5w/media-uploader-idea.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42707 (Show taxonomy visibility information in the REST API) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42707#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42707#comment:9/1519261093582996</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42730" title="REST API: Translate the taxonomy visibility description strings.
This ..."&gt;42730&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Translate the taxonomy visibility description strings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This was missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42729" title="REST API: Show taxonomy visibility settings.
For Gutenberg and other ..."&gt;[42729]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props TimothyBlynJacobs.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42707" title="#42707: enhancement: Show taxonomy visibility information in the REST API (closed: fixed)"&gt;#42707&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42730]: REST API: Translate the taxonomy visibility description strings.  This ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:58:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42730</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42730/1519261092978308</guid>
      <description>&lt;p&gt;
REST API: Translate the taxonomy visibility description strings.
&lt;/p&gt;
&lt;p&gt;
This was missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42729" title="REST API: Show taxonomy visibility settings.
For Gutenberg and other ..."&gt;[42729]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props TimothyBlynJacobs.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42707" title="#42707: enhancement: Show taxonomy visibility information in the REST API (closed: fixed)"&gt;#42707&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42707 (Show taxonomy visibility information in the REST API) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42707#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42707#comment:8/1519260856950052</guid>
      <description>&lt;p&gt;
Whee!
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #42707 (Show taxonomy visibility information in the REST API) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42707#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42707#comment:7/1519260604315742</guid>
      <description>&lt;p&gt;
Strings aren't translated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43101 (Test to ensure MediaElement SWFs aren't accidentally added to build) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43101#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43101#comment:6/1519260109506336</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43101#comment:3" title="Comment 3"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't this already covered by &lt;code&gt;Tests_Admin_IncludesUpdateCore:: test_new_files_are_not_in_old_files_array_compiled()&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a good point, I hadn't thought of that. It would catch the case of re-adding the currently known SWF files, but it wouldn't catch the case of MEjs adding new SWF files, like &lt;code&gt;mediaelement-flash-video-foo.swf&lt;/code&gt;. It also makes it explicitly clear that there are security implications of restoring them, which isn't indicated in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42462" title="External Libraries: Remove unnecessary / obsoleted MediaElement.js ..."&gt;r42462&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm leaning towards it still being a good idea to add it. What do you think, @ocean90 ?
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@group 42720 should be @ticket 42720.
@since 4.9.2 should be updated to 5.0.0.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catches, thanks Sergey. Fixed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43101/43101.2.diff" title="Attachment '43101.2.diff' in Ticket #43101"&gt;43101.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43101/43101.2.diff" title="Download"&gt;​&lt;/a&gt; . That also updates it to look at the &lt;code&gt;build&lt;/code&gt; folder, like &lt;code&gt;test_new_files_are_not_in_old_files_array_compiled()&lt;/code&gt; does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43101.2.diff attached to Ticket #43101</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43101/43101.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43101/43101.2.diff/1519260005345058</guid>
      <description>&lt;p&gt;
Look at &lt;code&gt;build&lt;/code&gt; rather than &lt;code&gt;src&lt;/code&gt;, update &lt;code&gt;@since&lt;/code&gt;, use &lt;code&gt;@ticket&lt;/code&gt; instead of &lt;code&gt;@group&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42707 (Show taxonomy visibility information in the REST API) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:24:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42707#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42707#comment:6/1519259040871438</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42729" title="REST API: Show taxonomy visibility settings.
For Gutenberg and other ..."&gt;42729&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Show taxonomy visibility settings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For Gutenberg and other admin-type interfaces, it's useful to be able to see the visibility settings for taxonomies.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joehoyle, pento.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42707" title="#42707: enhancement: Show taxonomy visibility information in the REST API (closed: fixed)"&gt;#42707&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42729]: REST API: Show taxonomy visibility settings.  For Gutenberg and other ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:24:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42729</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42729/1519259040356900</guid>
      <description>&lt;p&gt;
REST API: Show taxonomy visibility settings.
&lt;/p&gt;
&lt;p&gt;
For Gutenberg and other admin-type interfaces, it's useful to be able to see the visibility settings for taxonomies.
&lt;/p&gt;
&lt;p&gt;
Props joehoyle, pento.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42707" title="#42707: enhancement: Show taxonomy visibility information in the REST API (closed: fixed)"&gt;#42707&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42282 (Provide means of executing PHPUnit continuously over watched files in ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 22 Feb 2018 00:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42282#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42282#comment:16/1519258104977496</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think removing the &lt;code&gt;--files&lt;/code&gt; option is a good move, watching everything and running a specified group definitely makes it easier to manage. Let's call that the v1, and see how it's used by folks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>