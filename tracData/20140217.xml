<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #26503 ($found_themes filter in wp-includes/theme.php) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 17 Feb 2014 23:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26503#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26503#comment:2/1392680990596707</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22414 (validate_current_theme() should validate cached theme roots) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 17 Feb 2014 23:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22414#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22414#comment:1/1392679374289009</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27143 (Product Categories Selection Menu Uncategorized) created</title>
      
        <dc:creator>davidfhannes</dc:creator>

      <pubDate>Mon, 17 Feb 2014 23:15:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27143</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27143/1392678939423694</guid>
      <description>&lt;p&gt;
Please refer to this screen shot attached.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://162.144.54.1/wp-content/uploads/ss_reply_to_Jody_2-16-14.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://162.144.54.1/wp-content/uploads/ss_reply_to_Jody_2-16-14.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
What is attached is a screen shot of my Toggle Menu, applied via a widget to the sidebar on the site. The Toggle Menu is built under Appearances...Menus.
&lt;/p&gt;
&lt;p&gt;
Note: I still need to build up the bulk of this menu.
&lt;/p&gt;
&lt;p&gt;
Notice that the first group in my toggle menu is Filter by Category. The menu options on here were selected by me from the Product Categories menu under Appearances...Menus.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, now that I have added almost 200 categories, the Product Categories menu is incurring a root level glitch, it is near impossible to select the correct child menu categories and to place them under the parent categories which I have selected prior when building Filter by Categories under for the Toggle Menu.
&lt;/p&gt;
&lt;p&gt;
Example: notice the Category ‘Alvin’ exists FOUR TIMES in the example screen shot under View All. This is not a typo. Alvin is a brand for multiple sub-sub categories. It is a brand that should exist as a product category under the child category of a parent category three levels down the tree. I should be able to clearly identify this child’s parent and grandparent category…I can’t! This is because all four grandchild product categories for Alvin exist under the Root, A-Z, in the Product Categories selection menu. It is a mess.
&lt;/p&gt;
&lt;p&gt;
This isthe problem at hand. Product Categories selection menu is not working as it should and is not showcasing a tiered menu of parent and child categories and it should. There is something amiss.
&lt;/p&gt;
&lt;p&gt;
NOTE: my Category structure tree is just fine if I go to Products...Categories in the dashboard where my parent and child categories were created, the structure is sound.
&lt;/p&gt;
&lt;p&gt;
Please refer to the following screenshot of the dashboard on this page: &lt;a class="ext-link" href="http://162.144.54.1/wp-content/uploads/ss_product_categories.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://162.144.54.1/wp-content/uploads/ss_product_categories.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It's an accurate depiction of a tree menu.
&lt;/p&gt;
&lt;p&gt;
Please advise.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21791 (Enhancement: locate_template() support for multiple file types (not ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 17 Feb 2014 23:13:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21791#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21791#comment:4/1392678837430283</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;locate_template()&lt;/code&gt; is not specific to PHP files. It can be passed an array of any file names and it will go through them, check if they exist, and include them.
&lt;/p&gt;
&lt;p&gt;
The scenario described above could be managed by either the &lt;code&gt;template_include&lt;/code&gt; or the &lt;code&gt;{$type}_template&lt;/code&gt; filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18324 (after adding new template file, "Template" drop-down disappears) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18324#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18324#comment:2/1392677759390106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I could not reproduce the bug in my test install. Does it still occur for you in the latest version of WordPress?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25889 (Use selected() in touch_time(), page_template_dropdown(), ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:46:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25889#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25889#comment:7/1392677189263967</guid>
      <description>&lt;p&gt;
EEK. Removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27189" title="Remove code from a previous patch. See [27188].
"&gt;[27189]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27189]: Remove code from a previous patch. See [27188].  </title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27189</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27189/1392677152577873</guid>
      <description>&lt;p&gt;
Remove code from a previous patch. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27188" title="Use `selected()` where appropriate in `touch_time()`, ..."&gt;[27188]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #25889 (Use selected() in touch_time(), page_template_dropdown(), ...) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25889#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25889#comment:6/1392677042090776</guid>
      <description>&lt;p&gt;
@wonderboymusic: Seems like you (accidentally?) added &lt;code&gt;get_the_permalink()&lt;/code&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24164" title="#24164: enhancement: Deprecate `get_permalink()` (closed: fixed)"&gt;#24164&lt;/a&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27188" title="Use `selected()` where appropriate in `touch_time()`, ..."&gt;[27188]&lt;/a&gt;?
Well, as the discussion in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24164" title="#24164: enhancement: Deprecate `get_permalink()` (closed: fixed)"&gt;#24164&lt;/a&gt; agrees, closing that as fixed with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27188" title="Use `selected()` where appropriate in `touch_time()`, ..."&gt;[27188]&lt;/a&gt; should also be ok.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25889 (Use selected() in touch_time(), page_template_dropdown(), ...) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25889#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25889#comment:5/1392675974946219</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27188" title="Use `selected()` where appropriate in `touch_time()`, ..."&gt;27188&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use &lt;code&gt;selected()&lt;/code&gt; where appropriate in &lt;code&gt;touch_time()&lt;/code&gt;, &lt;code&gt;page_template_dropdown()&lt;/code&gt;, and &lt;code&gt;parent_dropdown()&lt;/code&gt;. Also, add proper docs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props meloniq, DrewAPicture.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25889" title="#25889: enhancement: Use selected() in touch_time(), page_template_dropdown(), ... (closed: fixed)"&gt;#25889&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27188]: Use `selected()` where appropriate in `touch_time()`, ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27188</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27188/1392675974021703</guid>
      <description>&lt;p&gt;
Use &lt;code&gt;selected()&lt;/code&gt; where appropriate in &lt;code&gt;touch_time()&lt;/code&gt;, &lt;code&gt;page_template_dropdown()&lt;/code&gt;, and &lt;code&gt;parent_dropdown()&lt;/code&gt;. Also, add proper docs.
&lt;/p&gt;
&lt;p&gt;
Props meloniq, DrewAPicture.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25889" title="#25889: enhancement: Use selected() in touch_time(), page_template_dropdown(), ... (closed: fixed)"&gt;#25889&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24164 (Deprecate `get_permalink()`) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24164#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24164#comment:27/1392675575240658</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24164/24164.diff" title="Attachment '24164.diff' in Ticket #24164"&gt;24164.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24164/24164.diff" title="Download"&gt;​&lt;/a&gt; just wraps &lt;code&gt;get_permalink()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24164.diff attached to Ticket #24164</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24164/24164.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24164/24164.diff/1392675528434971</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24257 (is_attachment() should accept $attachment parameter) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24257#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24257#comment:11/1392675058433321</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27187" title="Add some more assertions to `Tests_Query_Conditionals`, specifically ..."&gt;27187&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add some more assertions to &lt;code&gt;Tests_Query_Conditionals&lt;/code&gt;, specifically for &lt;code&gt;is_single()&lt;/code&gt;, &lt;code&gt;is_page()&lt;/code&gt;, and &lt;code&gt;is_attachment()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27016" title="Let `is_attachment()` accept an $attachment parameter, similar to ..."&gt;[27016]&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24257" title="#24257: enhancement: is_attachment() should accept $attachment parameter (closed: fixed)"&gt;#24257&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27187]: Add some more assertions to `Tests_Query_Conditionals`, specifically ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27187</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27187/1392675057410342</guid>
      <description>&lt;p&gt;
Add some more assertions to &lt;code&gt;Tests_Query_Conditionals&lt;/code&gt;, specifically for &lt;code&gt;is_single()&lt;/code&gt;, &lt;code&gt;is_page()&lt;/code&gt;, and &lt;code&gt;is_attachment()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27016" title="Let `is_attachment()` accept an $attachment parameter, similar to ..."&gt;[27016]&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24257" title="#24257: enhancement: is_attachment() should accept $attachment parameter (closed: fixed)"&gt;#24257&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 17 Feb 2014 22:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:19/1392674902646739</guid>
      <description>&lt;p&gt;
We should take &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26403" title="#26403: defect (bug): Convert path to lower case before matching for blog (closed: fixed)"&gt;#26403&lt;/a&gt; into consideration while determining the requested path. I don't think a &lt;code&gt;strtolower()&lt;/code&gt; would hurt anything here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27133 (Redundant type casting in wp_get_object_terms) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:55:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27133#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27133#comment:5/1392674142716754</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27186" title="Remove extraneous type-casting in `wp_get_object_terms()`.
Props ..."&gt;27186&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove extraneous type-casting in &lt;code&gt;wp_get_object_terms()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props OriginalEXE.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27133" title="#27133: enhancement: Redundant type casting in wp_get_object_terms (closed: fixed)"&gt;#27133&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27186]: Remove extraneous type-casting in `wp_get_object_terms()`.  Props ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:55:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27186</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27186/1392674141705178</guid>
      <description>&lt;p&gt;
Remove extraneous type-casting in &lt;code&gt;wp_get_object_terms()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props OriginalEXE.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27133" title="#27133: enhancement: Redundant type casting in wp_get_object_terms (closed: fixed)"&gt;#27133&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24512 (Add user ID to query vars after adding a user) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24512#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24512#comment:9/1392673437578314</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21119 (Make WP_User_Query::prepare_query() public) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21119#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21119#comment:5/1392673205321675</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27185" title="Make `WP_User_Query::prepare_query()` public by allowing it to be ..."&gt;27185&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Make &lt;code&gt;WP_User_Query::prepare_query()&lt;/code&gt; public by allowing it to be passed an array of args. Previously, if the &lt;code&gt;WP_User_Query&lt;/code&gt; constructor was not passed args, the object was basically unusable. Adds unit tests, all other tests pass.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props scribu, for the initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21119" title="#21119: enhancement: Make WP_User_Query::prepare_query() public (closed: fixed)"&gt;#21119&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27185]: Make `WP_User_Query::prepare_query()` public by allowing it to be ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27185</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27185/1392673204811004</guid>
      <description>&lt;p&gt;
Make &lt;code&gt;WP_User_Query::prepare_query()&lt;/code&gt; public by allowing it to be passed an array of args. Previously, if the &lt;code&gt;WP_User_Query&lt;/code&gt; constructor was not passed args, the object was basically unusable. Adds unit tests, all other tests pass.
&lt;/p&gt;
&lt;p&gt;
Props scribu, for the initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21119" title="#21119: enhancement: Make WP_User_Query::prepare_query() public (closed: fixed)"&gt;#21119&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19 (Atom generator creates extra attributes) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19#comment:7/1392672362200975</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by kadamwhite. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-17&amp;amp;sort=asc#m793264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #73 (Tags should be stripped from &lt;title /&gt; element) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:26:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/73#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/73#comment:12/1392672361961261</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by kadamwhite. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-17&amp;amp;sort=asc#m793263"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26042 (wp_save_post_revision() can compare against the wrong $last_revision post) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:22:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26042#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26042#comment:9/1392672146757720</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27184" title="`wp_get_post_revisions()` should have a default `orderby` of `date ID` ..."&gt;27184&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
&lt;code&gt;wp_get_post_revisions()&lt;/code&gt; should have a default &lt;code&gt;orderby&lt;/code&gt; of &lt;code&gt;date ID&lt;/code&gt; to tie-break rapidly added revisions - namely, when unit tests are run. There is a test that occasionally fails when running all tests, and always fails when running &lt;code&gt;phpunit tests/phpunit/tests/post/revisions.php &lt;/code&gt;. This fixes that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26042" title="#26042: defect (bug): wp_save_post_revision() can compare against the wrong $last_revision post (closed: fixed)"&gt;#26042&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27184]: `wp_get_post_revisions()` should have a default `orderby` of `date ID` ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:22:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27184</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27184/1392672145760482</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_get_post_revisions()&lt;/code&gt; should have a default &lt;code&gt;orderby&lt;/code&gt; of &lt;code&gt;date ID&lt;/code&gt; to tie-break rapidly added revisions - namely, when unit tests are run. There is a test that occasionally fails when running all tests, and always fails when running &lt;code&gt;phpunit tests/phpunit/tests/post/revisions.php &lt;/code&gt;. This fixes that.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26042" title="#26042: defect (bug): wp_save_post_revision() can compare against the wrong $last_revision post (closed: fixed)"&gt;#26042&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:13/1392671025144467</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27183" title="Reset `$wp_query` and `$post` during `WP_UnitTestCase::tearDown()` to ..."&gt;27183&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Reset &lt;code&gt;$wp_query&lt;/code&gt; and &lt;code&gt;$post&lt;/code&gt; during &lt;code&gt;WP_UnitTestCase::tearDown()&lt;/code&gt; to avoid spillage of globals between tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26321" title="#26321: defect (bug): Warning message for update_post_thumbnail_cache() (closed: invalid)"&gt;#26321&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27183]: Reset `$wp_query` and `$post` during `WP_UnitTestCase::tearDown()` to ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 21:03:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27183</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27183/1392671023859501</guid>
      <description>&lt;p&gt;
Reset &lt;code&gt;$wp_query&lt;/code&gt; and &lt;code&gt;$post&lt;/code&gt; during &lt;code&gt;WP_UnitTestCase::tearDown()&lt;/code&gt; to avoid spillage of globals between tests.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26321" title="#26321: defect (bug): Warning message for update_post_thumbnail_cache() (closed: invalid)"&gt;#26321&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26877 (Allow get_post() to accept a custom post object instead of only WP_Post) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 17 Feb 2014 20:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26877#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26877#comment:3/1392670482381476</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26877#comment:2" title="Comment 2"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This isn't very convincing, and wasn't on the other ticket you pasted the same code example.
Is this really worth 2 separate tickets?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I assume you are replying to me, the OP?  If yes, what other ticket are you talking about?  In my memory I only posted this one ticket on this topic.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You want to subclass a model so that you can use a theme function on one of the global &lt;code&gt;$post&lt;/code&gt;'s properties?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't understand what you mean by &lt;em&gt;"use a theme function"&lt;/em&gt;;  Are you saying that because I chose &lt;code&gt;title()&lt;/code&gt; as the one methods I showed &lt;em&gt;(vs. one of the other 25+ methods in my actual class)&lt;/em&gt; that I am &lt;em&gt;"using a theme function?"&lt;/em&gt; If yes, note that rather than overwhelm the reader I was trying to show the smallest example I could, and yes &lt;code&gt;$post-&amp;gt;title()&lt;/code&gt; is not that beneficial. But &lt;code&gt;$post-&amp;gt;the_video_embed()&lt;/code&gt;, &lt;code&gt;$post-&amp;gt;the_featured_image()&lt;/code&gt; and &lt;code&gt;$post-&amp;gt;do_show_excerpt()&lt;/code&gt; might help you visualize it better.
&lt;/p&gt;
&lt;p&gt;
What I want to do is be able to add properties and behavior to the &lt;code&gt;$post&lt;/code&gt; object so that when I pass the &lt;code&gt;$post&lt;/code&gt; object around, especially through other people's code that the properties and behavior follow along with it. This is just OOP 101 and wasn't something I though needed to be made highly convincing.
&lt;/p&gt;
&lt;p&gt;
I understand and appreciate &lt;a href="http://core.trac.wordpress.org/ticket/24672#comment:3"&gt;@nacin's reluctance to remove final&lt;/a&gt; which is why my patch did not propose &lt;code&gt;final&lt;/code&gt; but instead used containment. The problem is we can't use containment if all the methods that would work with posts throw away our instances when they call &lt;code&gt;get_post()&lt;/code&gt; which is the reason for my proposal.
&lt;/p&gt;
&lt;p&gt;
If someone wants to add their own functionality like this they can't do it compatibly with WordPress; they have to write a fully custom theme vs. just add their own selected theme template files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24672 (Remove final from WP_Post class) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 17 Feb 2014 20:43:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24672#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24672#comment:7/1392669834529051</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26877" title="#26877: enhancement: Allow get_post() to accept a custom post object instead of only WP_Post (closed: duplicate)"&gt;#26877&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26877 (Allow get_post() to accept a custom post object instead of only WP_Post) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 17 Feb 2014 20:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26877#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26877#comment:2/1392669206485113</guid>
      <description>&lt;p&gt;
This isn't very convincing, and wasn't on the other ticket you pasted the same code example. You want to subclass a model so that you can use a theme function on one of the global &lt;code&gt;$post&lt;/code&gt;'s properties? Is this really worth 2 separate tickets?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26877 (Allow get_post() to accept a custom post object instead of only WP_Post) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 17 Feb 2014 20:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26877#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26877#comment:1/1392667607274369</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just ran into a very similar use-case. &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/24672" title="#24672: enhancement: Remove final from WP_Post class (reopened)"&gt;#24672&lt;/a&gt; looks related to me. I suspect we need to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Finish classes for the other WordPress objects.
&lt;/li&gt;&lt;li&gt;Remove the &lt;code&gt;final&lt;/code&gt; from &lt;code&gt;WP_Post&lt;/code&gt; et all so they can be properly subclassed.
&lt;/li&gt;&lt;li&gt;Allow &lt;code&gt;WP_Query&lt;/code&gt; and similar to return subclass instances.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25394 (On failure to upload theme, response parses "&lt;","&gt;" to "&amp;lt;","&amp;gt;") updated</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Mon, 17 Feb 2014 19:15:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25394#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25394#comment:2/1392664509764556</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not sure of the best approach here, but it seems like a feasible one would be to simply remove the &amp;lt;code&amp;gt; tags.  Patch attached with that approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25394.diff attached to Ticket #25394</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Mon, 17 Feb 2014 19:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25394/25394.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25394/25394.diff/1392664455100175</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27140 (possible bug in pre_comment_approved filter) updated</title>
      
        <dc:creator>realblueorange</dc:creator>

      <pubDate>Mon, 17 Feb 2014 18:47:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27140#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27140#comment:7/1392662844183512</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27140#comment:6" title="Comment 6"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is a bit odd that we don't have a means of discarding a comment completely. &lt;code&gt;wp_insert_comment()&lt;/code&gt; is called regardless of the return value of the &lt;code&gt;pre_comment_approved&lt;/code&gt; filter, and there's nothing else in &lt;code&gt;wp-comments-post.php&lt;/code&gt; or &lt;code&gt;wp_new_comment()&lt;/code&gt; that can be used to discard a comment without inserting it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I couldn't agree more. I would love to have this added to the core. It would make writing a spam checker so much easier. All you can do right now is wait for the comment to be inserted and delete it later on somewhere. Right now I am throwing a wp_die() when my criteria aren't met, but that doesn't seem like the way to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 17 Feb 2014 18:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:18/1392661429124356</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25169#comment:16" title="Comment 16"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This causes numerous issues with &lt;code&gt;npm install&lt;/code&gt; on Windows installs :(
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Installs properly here on Win7.
&lt;/p&gt;
&lt;p&gt;
However I'm 50/50 on whether this should be running automatically on each build. We are up to 46MB! of build tools (node_modules), 7,428 files in 1,699 directories... The chances for failed updates, platform specific bugs, local and platform differences, different output because of different version of the build tools, etc. are quite high. Our build process shouldn't be "fragile".
&lt;/p&gt;
&lt;p&gt;
Considering that new images are added to core only a few times per cycle, seems this can be a "manual" task, i.e. should be run with &lt;code&gt;grunt imagemin&lt;/code&gt; only when needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27140 (possible bug in pre_comment_approved filter) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 17 Feb 2014 18:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27140#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27140#comment:6/1392660747457384</guid>
      <description>&lt;p&gt;
It is a bit odd that we don't have a means of discarding a comment completely. &lt;code&gt;wp_insert_comment()&lt;/code&gt; is called regardless of the return value of the &lt;code&gt;pre_comment_approved&lt;/code&gt; filter, and there's nothing else in &lt;code&gt;wp-comments-post.php&lt;/code&gt; or &lt;code&gt;wp_new_comment()&lt;/code&gt; that can be used to discard a comment without inserting it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27140 (possible bug in pre_comment_approved filter) updated</title>
      
        <dc:creator>realblueorange</dc:creator>

      <pubDate>Mon, 17 Feb 2014 15:46:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27140#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27140#comment:5/1392652019155215</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27140#comment:4" title="Comment 4"&gt;danielbachhuber&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ah, in that case I think the codex needs changing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Codex is a wiki that anyone can edit. Feel free to change it :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
OK, will give that a shot.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't it an idea to have another returncode that has as an effect that the comment is totally disregarded?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think the &lt;code&gt;pre_comment_approved&lt;/code&gt; filter is the right thing to modify in this case. What you could do instead is mark the comment as "spam" if it doesn't meet the criteria you want, and then automatically delete spam comments on the &lt;code&gt;wp_insert_comment&lt;/code&gt; action. Or, you can store some marker to "delete just this comment" in a global variable that you can access in your later action.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the idea. I'll go that way. This filter sounded like the perfect place for such a thing, and after some googling I thought there might be a big demand for such a simple solution.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's not a perfect solution, but I think you'll find working with WordPress to be full of imperfect solutions that work well-enough.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh, yes. But it still is a great system. I like it a lot.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
sorry, this is my first time on trac
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No worries — welcome to WordPress Trac!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27140 (possible bug in pre_comment_approved filter) closed</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 17 Feb 2014 15:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27140#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27140#comment:4/1392651677430080</guid>
      <description>wontfix: &lt;blockquote class="citation"&gt;
&lt;p&gt;
Ah, in that case I think the codex needs changing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Codex is a wiki that anyone can edit. Feel free to change it :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't it an idea to have another returncode that has as an effect that the comment is totally disregarded?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think the &lt;code&gt;pre_comment_approved&lt;/code&gt; filter is the right thing to modify in this case. What you could do instead is mark the comment as "spam" if it doesn't meet the criteria you want, and then automatically delete spam comments on the &lt;code&gt;wp_insert_comment&lt;/code&gt; action. Or, you can store some marker to "delete just this comment" in a global variable that you can access in your later action.
&lt;/p&gt;
&lt;p&gt;
It's not a perfect solution, but I think you'll find working with WordPress to be full of imperfect solutions that work well-enough.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
sorry, this is my first time on trac
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No worries — welcome to WordPress Trac!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27142 (Issues with pagination when offset is set) updated</title>
      
        <dc:creator>alkinfotech</dc:creator>

      <pubDate>Mon, 17 Feb 2014 15:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27142#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27142#comment:2/1392651194115099</guid>
      <description>&lt;p&gt;
The issue is identified with the code at wp-includes/query.php.
&lt;/p&gt;
&lt;p&gt;
The paging code is as follows:
&lt;/p&gt;
&lt;p&gt;
if ( empty($q&lt;a class="missing wiki"&gt;nopaging?&lt;/a&gt;) &amp;amp;&amp;amp; !$this-&amp;gt;is_singular ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$page = absint($q&lt;a class="missing wiki"&gt;paged?&lt;/a&gt;);
if ( !$page )
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$page = 1;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( empty($q&lt;a class="missing wiki"&gt;offset?&lt;/a&gt;) ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$pgstrt = ($page - 1) * $q&lt;a class="missing wiki"&gt;posts_per_page?&lt;/a&gt; . ', ';
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
} else { &lt;em&gt; we're ignoring $page and using 'offset'
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$q&lt;a class="missing wiki"&gt;offset?&lt;/a&gt; = absint($q&lt;a class="missing wiki"&gt;offset?&lt;/a&gt;);
$pgstrt = $q&lt;a class="missing wiki"&gt;offset?&lt;/a&gt; . ', ';
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
$limits = 'LIMIT ' . $pgstrt . $q&lt;a class="missing wiki"&gt;posts_per_page?&lt;/a&gt;;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Note, when offset is there, $pgstrt = $q&lt;a class="missing wiki"&gt;offset?&lt;/a&gt; . ', ';
&lt;/p&gt;
&lt;p&gt;
That means eg. offset = 4, the pgstrt will always be 4 and hence the limit will be LIMIT 4,[posts_per_page], irrespective of the page selected.
&lt;/p&gt;
&lt;p&gt;
The solution is to modify this line as :
&lt;/p&gt;
&lt;p&gt;
$pgstrt = $q&lt;a class="missing wiki"&gt;offset?&lt;/a&gt; + ($page - 1) * $q&lt;a class="missing wiki"&gt;posts_per_page?&lt;/a&gt; . ', ';
&lt;/p&gt;
&lt;p&gt;
So for page = 2, offset = 4 &amp;amp; posts_per_page = 10, pgstrt = 14 &amp;amp; limit will be LIMIT 14,10 which will be ideal for page 2 with offset 4.
&lt;/p&gt;
&lt;p&gt;
I am currently using this and it is working perfectly fine.
&lt;/p&gt;
&lt;p&gt;
Wanted to raise the bug so that in the next release, it is covered up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27140 (possible bug in pre_comment_approved filter) reopened</title>
      
        <dc:creator>realblueorange</dc:creator>

      <pubDate>Mon, 17 Feb 2014 15:32:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27140#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27140#comment:3/1392651173505589</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27140 (possible bug in pre_comment_approved filter) updated</title>
      
        <dc:creator>realblueorange</dc:creator>

      <pubDate>Mon, 17 Feb 2014 15:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27140#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27140#comment:2/1392651002949411</guid>
      <description>&lt;p&gt;
Ah, in that case I think the codex needs changing. 'Disapproved' suggests something different.
&lt;/p&gt;
&lt;p&gt;
the wording "0 if the comment should be disapproved" might be clearer worded as "0 if the comment is unapproved".
&lt;/p&gt;
&lt;p&gt;
Sorry for the mixup. I guess there is no bug, and this filter cannot be used to prevent the comment from making it into the database.
&lt;/p&gt;
&lt;p&gt;
Isn't it an idea to have another returncode that has as an effect that the comment is totally disregarded? Or do I need to make another ticket for this (sorry, this is my first time on trac).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27140 (possible bug in pre_comment_approved filter) closed</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 17 Feb 2014 15:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27140#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27140#comment:1/1392650288887779</guid>
      <description>worksforme: &lt;blockquote class="citation"&gt;
&lt;p&gt;
I would think a return of 0 means that the comment is ignored, no e-mail is sent and it certainly is not in the database. Or am I wrong??
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Returning "0" means the comment will be marked as &lt;em&gt;unapproved&lt;/em&gt; and triggers the comment moderation email. "Unapproved" comments appear for you to either approve or mark as spam in the admin. If you do the former, then the comment will appear on the post.
&lt;/p&gt;
&lt;p&gt;
Returning "spam" means the comment will be marked as spam. No comment moderation email will be sent.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27142 (Issues with pagination when offset is set) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 17 Feb 2014 15:02:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27142#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27142#comment:1/1392649346178407</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi alkinfotech,
&lt;/p&gt;
&lt;p&gt;
Are you using Twenty Thirteen or Twenty Fourteen? If not, can you switch to one of them, and disable all of your plugins, to confirm the bug is in WordPress core and not your theme?
&lt;/p&gt;
&lt;p&gt;
If you do think the bug is in WordPress core, then it would be great to have more detail about how to reproduce. I'd recommend writing the reproduction steps as though you're setting up WordPress for the first time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25834 (WP_Date_Query not allowed values possible) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 17 Feb 2014 12:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25834#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25834#comment:11/1392639121823980</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by cs_shadow. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-17&amp;amp;sort=asc#m793020"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27012 (Make it possible to install WP multisite directly) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 17 Feb 2014 10:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27012#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27012#comment:4/1392633209303664</guid>
      <description>&lt;p&gt;
For the record, WP-CLI has the &lt;a class="ext-link" href="http://wp-cli.org/commands/core/multisite-install/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp core multisite-install&lt;/a&gt; command, which installs multisite from scratch.
&lt;/p&gt;
&lt;p&gt;
It relies on various ugly hacks, such as:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/pull/598/files#diff-d5c3b8c65ee5ccc5dd15286817c05a2cR462"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;faking the `$current_site` and `$current_blog` globals&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/pull/598/files#diff-97e24ceb3b4ab63c888f11417f6f356fR199"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;duplicating code from `populate_network()`&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/pull/598/files#diff-d261a7cd15f3c94c139a32b01ec4e3d8R62"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;faking a bunch of options&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25395 (Potential bug of uploading images using media-upload) closed</title>
      
        <dc:creator>alucard001</dc:creator>

      <pubDate>Mon, 17 Feb 2014 09:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25395#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25395#comment:6/1392631180039008</guid>
      <description>invalid: &lt;p&gt;
Understood, thanks.  I miss the "mapping" part.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #25395 (Potential bug of uploading images using media-upload) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 17 Feb 2014 09:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25395#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25395#comment:5/1392628430297104</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your reason about post and attachment is understood, what I am going after is the name: there is no such right as "edit_post", only "edit_posts".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
'edit_post' is a meta capability which is mapped to edit_posts and/or edit_private_posts and/or edit_others_posts here:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/capabilities.php#L1104"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/capabilities.php#L1104&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The actual caps it maps to are found here:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/post.php#L1396"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/post.php#L1396&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It's hard to explain how the latter is setup, to truly understand it reading the Documentation in the file around that area, and adding some debugging cases in is really needed.
&lt;/p&gt;
&lt;p&gt;
basically what I'm saying, is that 'edit_post' is a special "Meta" capability which is mapped onto another "real" capability during the cap checks, checking for edit_post with a context of $post_id will check for 'edit_posts' for an administrator, and for another user would check 'edit_others_posts'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 17 Feb 2014 08:27:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:11/1392625664758048</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27122#comment:10" title="Comment 10"&gt;dunglas&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This new patch (&lt;code&gt; shutdown_flush.diff &lt;/code&gt;) includes @Denis-de-Bernardy improvements but calls &lt;code&gt; wp_ob_end_flush_all() &lt;/code&gt; only if necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think you're misunderstanding or misinterpreting what &lt;code&gt;wp_ob_end_flush_all()&lt;/code&gt; was initially about.
&lt;/p&gt;
&lt;p&gt;
The function was introduced due to a change in the way PHP handles object destruction around 5.1 or 5.2: global variables that were garbage collected after all code had run suddenly began to get garbage collected prior to calling output buffer callbacks. This triggered fatal errors as a result, and to the best of my knowledge the behavior has remained unchanged since.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3354" title="#3354: defect (bug): PHP 5.2 &amp;amp; Fatal error in cache.php (closed: fixed)"&gt;#3354&lt;/a&gt; and this (rejected) PHP bug I reported back then:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=40104"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.php.net/bug.php?id=40104&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Therefor my suggestion for the more conservative approach, i.e. a completely separate and independent function, that addresses the php-fpm optimization and nothing else.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25395 (Potential bug of uploading images using media-upload) reopened</title>
      
        <dc:creator>alucard001</dc:creator>

      <pubDate>Mon, 17 Feb 2014 08:16:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25395#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25395#comment:4/1392624980587826</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25395#comment:1" title="Comment 1"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In this case the capability name is correct. In this case it checks if the user can attach the image to a post. So users aren't allowed to upload images unless they have the capability 'upload_files'. When they want to attach the image to a post it needs 'edit_posts' or 'edit_others_posts' if it isn't their post
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for your reply, Mark.
&lt;/p&gt;
&lt;p&gt;
Your reason about post and attachment is understood, what I am going after is the name:  there is no such right as "&lt;strong&gt;edit_post&lt;/strong&gt;", only "&lt;strong&gt;edit_posts&lt;/strong&gt;".
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Roles_and_Capabilities#edit_posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Roles_and_Capabilities#edit_posts&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And this problem still exists in 3.8.1, line 37
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 17 Feb 2014 07:10:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:18/1392621024634874</guid>
      <description>&lt;p&gt;
Some thoughts on function naming:
&lt;/p&gt;
&lt;p&gt;
wp_get_network() without any arguments could replace get_current_site(). It would be lovely to ditch "$current_site" absolutely everywhere. Even in this file; we could possibly make it a reference to a new variable.
&lt;/p&gt;
&lt;p&gt;
wp_get_site() is probably a bit too broadly named. Though we don't use it all that much, the "ms" prefix here could help. but, this function isn't yet a must-have. We could wait for some cleanups and deprecations for when "site" actually refers to "network". We already have is_main_site() but also get_current_blog_id()... we're getting there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26763 (Tool tip for dashboard menus) updated</title>
      
        <dc:creator>shahpranaf</dc:creator>

      <pubDate>Mon, 17 Feb 2014 05:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26763#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26763#comment:5/1392615231058117</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
Yes icons are not clear enough. For eg. On desktop, when we collapse menu, the icons for post, page and custom post types are same. User have to hover that portion to know what that icon indicates. So its true that title attribute will not be useful. So have to think some other solution for it.
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 17 Feb 2014 05:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:17/1392614608105499</guid>
      <description>&lt;p&gt;
At the time of these new filters, plugin.php and functions.php are loaded — and little else. jeremyfelt points out that these filters mean you won't need to do much domain/path/network/site manipulation in sunrise anymore, but you'll need to use a sunrise file to actually register your plugin callbacks. I find that to be OK. It ends up being much easier in some respects.
&lt;/p&gt;
&lt;p&gt;
Say make.wordpress.org was our network and /core/ was our site, and then we wanted to add a /core/handbook/ site. (I had to do this at one point via a nice hack; though they're merged now.) It'd be easy for me to use the site_by_path_segments_count filter to change the 1 segment to a 2 when the requested path starts with /core, or more so /core/handbook. Or I could use the pre_* filter to actually return a site object (we'll need a wp_get_site() to match wp_get_network() and to replace basic usage of get_blog_details()) for exact matches.
&lt;/p&gt;
&lt;p&gt;
Of course, you could also just do $current_site = wp_get_network( X ) and $current_blog = wp_get_site( X ). It really depends what kind of lifting you want to do and where you want it done. If you had a second level of path segments you wanted considered on a dynamic basis (so not simply "handbook") then passing this off to find_site_by_path() will make your life easier.
&lt;/p&gt;
&lt;p&gt;
And then there's the question: why limit it to just one path segment by default? Mainly because it's so dang hard to predict and optimize for all of the setups out there. You might have a network with thousands of sites, all with a path of / (so, domains or subdomains), yet you'll need to take the entire URL (/2012/01/05/something/page/2/feed/whatever/) and check to see if any of those path segments add up to a site. That means a unique query for every single URL hitting the install, which is a nightmare to cache.
&lt;/p&gt;
&lt;p&gt;
Now, you could query for all sites on that domain, cache those results, and then simply see if any of the paths match up, but how do I know if it's one site with a path of /, or if *every* one of those thousands of sites are on that particular domain?
&lt;/p&gt;
&lt;p&gt;
There are only so many "large" networks out there (networks with &amp;gt; 10,000 sites) that would run into performance issues; it's possible we could have different optimization "tracks" depending on the kind and size of install you're running. That's kind of what the proposed filters start to get at, by letting you control the path segments.
&lt;/p&gt;
&lt;p&gt;
I do think we can get smarter here, and these patches make some headway, but it's not straightforward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27142 (Issues with pagination when offset is set) created</title>
      
        <dc:creator>alkinfotech</dc:creator>

      <pubDate>Mon, 17 Feb 2014 05:03:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27142</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27142/1392613381294796</guid>
      <description>&lt;p&gt;
When the offset is set to display latest posts, the first page displays the posts perfectly. But the issue is for the second page onwards. It displays the first page contents only.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 17 Feb 2014 04:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:16/1392612707406187</guid>
      <description>&lt;p&gt;
Yeah, so, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27003/27003.13.diff" title="Attachment '27003.13.diff' in Ticket #27003"&gt;27003.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27003/27003.13.diff" title="Download"&gt;​&lt;/a&gt; is a pretty sharp departure from how multisite site detection works now, which starts with identifying the network. The patch tries hard to find the site first, then use the site's network ID to set the current network. To find a site, it takes the domain plus the first path segment. Now, that doesn't always work:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If we're dealing with a "subdirectory" install, our network may have a path. (A "subdomain" install, which really is an "anything goes" install, ideally does not have a network path.) So we need to identify the network first, then use the first path segment following the network's path segment to identify the site.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If constants are defined for the network (as they are per instructions), then we can simply use those first. Note the patch doesn't currently then restrict the resulting site to that network. In fact in 3.8 if the located site isn't on the declared network, then it resets the network object anyway. (There was actually no reason to find the network first in 3.8.) I've updated that in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27003/27003.14.diff" title="Attachment '27003.14.diff' in Ticket #27003"&gt;27003.14.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27003/27003.14.diff" title="Download"&gt;​&lt;/a&gt;, otherwise the same as 13.diff.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It also tries to optimize for some common situations. Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If it's a "subdirectory" situation where constants are not defined, it queries the DB to see if there are even two networks installed. If there's just one, then that's obviously our network, and it caches it (just as it did in 3.8). While constants are going to be in place almost always, when they're not, jeremyfelt and I had agreed in IRC that it's going to be more common for a single network to be used.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If you're running an external object cache, it caches whether any network has a path. If none do, then it can bypass querying the networks table for paths all together, which results in a much cleaner (and much more easily cached) query.
&lt;/li&gt;&lt;li&gt;It's probable that these should be network transients.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Filters are in place to not only short-circuit the site-finding code all together, but to also specifically declare how many path segments are in play. So an install could say that domain X actually has sites for two path segments, while domain Y has none. If we're dealing with a "subdomain" only install, then trying to query for every single path is a terrible query. To avoid that, a future patch should use the external object cache to see if any sites at all have a path. This is more or less necessary to maintain the same performance of subdomains pre-patch.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;It requires additional caching, and needs a review from pento for how to best make these queries. I went for fewest queries possible when in reality it might make more sense to add a few more queries but be sure they are being cached to a T.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Because this code opens up the possibility that *any* initial path segment is actually a site, this can cause some performance issues. At least with subdomains you have DNS to prevent essentially random strings in a URL from causing a boatload of queries — and, yes, even flooding memcache. (If using a wildcard DNS, then the whole redirect-to-signup kicks in.) These queries are not the absolute cheapest and haven't been tested against a massive blogs table, yet.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are likely further optimizations to make (not to mention a number of declared @todo's), there are likely some assumptions made that will need to be challenged (for example — can a subdomain install have a network path, as it exists now?), and it needs a lot of unit tests. Also, the &lt;code&gt;*_by_path_segments_count&lt;/code&gt; filter names aren't great. But it's a great step forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26856 (Twenty Thirteen: Adjust background size of header image(s) with media query) updated</title>
      
        <dc:creator>senlin</dc:creator>

      <pubDate>Mon, 17 Feb 2014 04:51:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26856#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26856#comment:7/1392612669204922</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26856-adjust-background-size-header-images.diff attached to Ticket #26856</title>
      
        <dc:creator>senlin</dc:creator>

      <pubDate>Mon, 17 Feb 2014 04:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26856/26856-adjust-background-size-header-images.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26856/26856-adjust-background-size-header-images.diff/1392612647156688</guid>
      <description>&lt;p&gt;
Adjust background size of header image(s) with media query
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27003.14.diff attached to Ticket #27003</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 17 Feb 2014 04:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003.14.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003.14.diff/1392612525013336</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21143 (Add a hook for when no blog is found (in addition to NOBLOGREDIRECT)) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 17 Feb 2014 04:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21143#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21143#comment:13/1392611864454142</guid>
      <description>&lt;p&gt;
Bringing forward to 3.9, lest we end up forgetting this again. :)
&lt;/p&gt;
&lt;p&gt;
IMO, we should hit the low-hanging fruit of adding the filter, and rewriting &lt;code&gt;ms-settings.php&lt;/code&gt; can happen independently in another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27141 (XML-RPC API does not accept login parameters(solved)) updated</title>
      
        <dc:creator>lucasdaddiego</dc:creator>

      <pubDate>Mon, 17 Feb 2014 03:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27141#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27141#comment:2/1392607631135238</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ohh, sorry, I feel so silly.
&lt;/p&gt;
&lt;p&gt;
Indeed, I was passing the parameters as an associative array, not as a plain array.
&lt;/p&gt;
&lt;p&gt;
Again, I'm sorry.
&lt;/p&gt;
&lt;p&gt;
Thank you for your response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27141 (XML-RPC API does not accept login parameters(solved)) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 17 Feb 2014 03:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27141#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27141#comment:1/1392606157105990</guid>
      <description>invalid: &lt;p&gt;
Howdy lucasdaddiego,
&lt;/p&gt;
&lt;p&gt;
From your bug report, it sounds like you're specifying the parameters to the API as an associative array, for example, like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;request: {
  blog_id: 1
  username: dd32
  password: mysupersecretpassword
  payload_fields: xxxx
}
&lt;/pre&gt;&lt;p&gt;
The base fields, including the credentials, are however root elements, they have no field name, for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;request: [
  1,
  dd32,
  mysupersecretpassword,
  payload_data_here
]
&lt;/pre&gt;&lt;p&gt;
I hope this helps get you on track, I'm marking this as invalid, but you're free to reply without needing to re-open it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27141 (XML-RPC API does not accept login parameters(solved)) created</title>
      
        <dc:creator>lucasdaddiego</dc:creator>

      <pubDate>Mon, 17 Feb 2014 02:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27141</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27141/1392604346620132</guid>
      <description>&lt;p&gt;
Hi, i was trying to use the XML-RPC api, but I couldn't make it work.
&lt;/p&gt;
&lt;p&gt;
I'm using a xml-rpc client for Chrome, (but i think that this happens with any client, because it's a php thing). The method i was trying was wp.getPosts(but it's general for all the methods). I passed the blog_id, the username, and the password, but the response was always a message with "Invalid username or password", but the username and password combination was right.
&lt;/p&gt;
&lt;p&gt;
I enabled the debug logging, and in the log (wp-content/debug.log) appeared the following text:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Notice:  Undefined offset: 0 in /opt/lampp/htdocs/test1/wp-includes/class-wp-xmlrpc-server.php on line 1443
PHP Notice:  Undefined offset: 1 in /opt/lampp/htdocs/test1/wp-includes/class-wp-xmlrpc-server.php on line 1444
PHP Notice:  Undefined offset: 2 in /opt/lampp/htdocs/test1/wp-includes/class-wp-xmlrpc-server.php on line 1445
&lt;/pre&gt;&lt;p&gt;
Then I discovered that in the methods(for example, in line 1444) of the file /wp-includes/class-wp-xmlrpc-server.php the args are read in the following way:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;escape( $args );
$username = $args[0];
$password = $args[1];
&lt;/pre&gt;&lt;p&gt;
But, that doesn't work.
Then, I tried changing the code like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$username   = $args['username'];
$password   = $args['password'];
&lt;/pre&gt;&lt;p&gt;
And it worked!
&lt;/p&gt;
&lt;p&gt;
I'm running wordpress in a dev environment, with latest XAMPP, PHP 5.5.6,
and Kubuntu 13.10 x64.
&lt;/p&gt;
&lt;p&gt;
I hope i'm not breaking any rule, and this might be helpful.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26882 (TinyMCE 4 buttons don't wrap on small screens) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 17 Feb 2014 02:12:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26882#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26882#comment:2/1392603128706640</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27182" title="TinyMCE: wrap the toolbars buttons on narrow screens, props ..."&gt;27182&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: wrap the toolbars buttons on narrow screens, props mikemanger, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26882" title="#26882: defect (bug): TinyMCE 4 buttons don't wrap on small screens (closed: fixed)"&gt;#26882&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27182]: TinyMCE: wrap the toolbars buttons on narrow screens, props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 17 Feb 2014 02:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27182</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27182/1392603127921880</guid>
      <description>&lt;p&gt;
TinyMCE: wrap the toolbars buttons on narrow screens, props mikemanger, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26882" title="#26882: defect (bug): TinyMCE 4 buttons don't wrap on small screens (closed: fixed)"&gt;#26882&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27140 (possible bug in pre_comment_approved filter) created</title>
      
        <dc:creator>realblueorange</dc:creator>

      <pubDate>Mon, 17 Feb 2014 01:48:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27140</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27140/1392601732965397</guid>
      <description>&lt;p&gt;
When using the pre_comment_approved filter, it seems the return value of 0 does not function. A return value of 'spam' does what can be expected.
&lt;/p&gt;
&lt;p&gt;
This is what the codex says:
&lt;a class="ext-link" href="http://codex.wordpress.org/Plugin_API/Filter_Reference/pre_comment_approved"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Plugin_API/Filter_Reference/pre_comment_approved&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is the code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function check_for_spam( $approved, $commentdata ) {
	if( !empty( $commentdata['comment_author_url'] ) ) {
		return 0; // disapproved
	}
	return $approved;
}
add_filter('pre_comment_approved', 'check_for_spam', '99', 2);
&lt;/pre&gt;&lt;p&gt;
Tested in WP 3.8.1, 2012 theme.
&lt;/p&gt;
&lt;p&gt;
This code is in functions.php and when I add a comment with a URL filled in the comment makes it into the database and I receive a "Please moderate" e-mail.
I would think a return of 0 means that the comment is ignored, no e-mail is sent and it certainly is not in the database. Or am I wrong??
&lt;/p&gt;
&lt;p&gt;
If I return 'spam' in stead of 0 everything works as expected. There is no e-mail and the comment is stored in the database, and can be found in the spam bin when in admin.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26881 (Multiple wp_editor() on one page and link button broken) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 17 Feb 2014 01:34:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26881#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26881#comment:2/1392600840245967</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26952 (Style TinyMCE modals to match WordPress admin styling) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 16 Feb 2014 23:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26952#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26952#comment:25/1392592686452950</guid>
      <description>&lt;p&gt;
@melchoyce I'm not sure if it's possible to style the Charmap sidebar like in your mock up since TinyMCE doesn't provide any ids and styling it might affect other elements in other modals.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26952 (Style TinyMCE modals to match WordPress admin styling) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26952#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26952#comment:24/1392591431466225</guid>
      <description>&lt;p&gt;
First attempt:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Removes text-shadow from dashicons.
&lt;/li&gt;&lt;li&gt;Removes weird border radius from Quicklinks toolbar.
&lt;/li&gt;&lt;li&gt;Fixes arrow border and replaces arrow with dashicon.
&lt;/li&gt;&lt;li&gt;Inherit colours and font (i.e. Open Sans).
&lt;/li&gt;&lt;li&gt;Makes tooltip shadows lighter and font a bit bigger (11px -&amp;gt;12px).
&lt;/li&gt;&lt;li&gt;Also adds some margin between the tooltip and buttons.
&lt;/li&gt;&lt;li&gt;Restyles Charmap and Help modals.
&lt;/li&gt;&lt;li&gt;Added &lt;code&gt;cursor: pointer;&lt;/code&gt; to Charmap table cells.
&lt;/li&gt;&lt;li&gt;Removed the close button from the Help modal, because the button will be too big when enqueuing button styles (iframe is small and triggers responsive styles) and I think it's cleaner like this anyway.
&lt;/li&gt;&lt;li&gt;Restyles the format button (but I'm not sure if it's good enough). I think it'd be good if buttons with an arrow all have the same style though.
&lt;/li&gt;&lt;li&gt;Flips the arrow when the menu is open.
&lt;/li&gt;&lt;li&gt;Restyles the format and colour menus.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
TODO
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I'd be easier if the Help modal wasn't an iframe. Maybe remove it? Not sure if it's possible.
&lt;/li&gt;&lt;li&gt;Style TinyMCE buttons (e.g. in the plain text modal). It's probably easiest to add &lt;code&gt;button[type="button"]&lt;/code&gt;to buttons.css, though TinyMCE wraps it in a div and styles that. Not sure which solution is best and doesn't add too much CSS.
&lt;/li&gt;&lt;li&gt;Test other TinyMCE plugins.
&lt;/li&gt;&lt;li&gt;Test on the front-end (wp_editor).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26952.patch attached to Ticket #26952</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:56:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26952/26952.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26952/26952.patch/1392591383607387</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:15/1392591206905810</guid>
      <description>&lt;p&gt;
I like where &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27003/27003.13.diff" title="Attachment '27003.13.diff' in Ticket #27003"&gt;27003.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27003/27003.13.diff" title="Download"&gt;​&lt;/a&gt; is going. To sum up:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;If the network and site is defined, use it.
&lt;/li&gt;&lt;li&gt;If additional sites are paths of a primary network domain, lookup the network before finding the site.
&lt;/li&gt;&lt;li&gt;If additional sites are different domains (or subdomains), lookup the site before finding the network. (The site tells us what its parent network is)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So much cleaner.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_site_by_path()&lt;/code&gt; and the changes to &lt;code&gt;get_network_by_path()&lt;/code&gt; look great so far. I'm still parsing in detail. Seems it would be fairly straightforward to add caching to each of these based on the requested args. The filters are going to go a ways toward reducing the use of sunrise entirely for domain lookups.
&lt;/p&gt;
&lt;p&gt;
I wonder if there's a place for a "every thing you're looking for" cache key after step 1 and before steps 2/3 that is able to retrieve site and network information based on the requested domain/path or if the processing required to extract the requested domain/path makes it not worth the effort.
&lt;/p&gt;
&lt;p&gt;
The patch also addresses the no networks issue raised by @TobiasBg with a &lt;code&gt;ms_not_installed()&lt;/code&gt; if 0 rows are found.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25623 (The design of update_option etc makes race conditions likely to happen) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25623#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25623#comment:5/1392590228711486</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25623#comment:2" title="Comment 2"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be possible for you to create a unit test demonstrating this issue, potentially with a fix?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMO this is too early to start writing any code - it was more about the discussion to see if this is something that _should_ be tackled. The problem is not necessarily a "bug" in the usual sense that there is something that can be fixed. Running code in parallel is always going to be a problem with WordPress, however it's more that &lt;code&gt;all_options&lt;/code&gt; makes overwrites a lot more likely. I was hoping to get some dev feedback as to whether this issue is "serious" enough to warrant at upheaval of how the &lt;code&gt;options&lt;/code&gt; object caching is handled.
&lt;/p&gt;
&lt;p&gt;
Unit tests would at least be good to demonstrate the issue to side-effects when calling &lt;code&gt;update_option&lt;/code&gt; with a race condition. However, I am not sure exactly how we do that from PHPUnit with the current setup. One idea: use a remote request back to the install to update an option, then call &lt;code&gt;update_option&lt;/code&gt; after the script has returning, and observe that the remote request's &lt;code&gt;update_option&lt;/code&gt; is lost form the object cache. This requires a web server in the unit test (which I don't *think* we currently have) and also running the tests with Persistent Object Caching (which I am not sure we currently have).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27139 (Image caption disappears if images are rearranged immediately after ...) updated</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27139#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27139#comment:3/1392588216662064</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27139#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd be curious to know if this is reproducible in 3.5, or if it regressed at some point since then.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, confirmed just now that it is reproducible in 3.5 as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22694 (Can't upload a file with an apostrophe in name) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Sun, 16 Feb 2014 21:26:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22694#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22694#comment:9/1392586014722642</guid>
      <description>&lt;p&gt;
I can duplicate this one, ran into it on a clean 3.8.1 with very little else :(
&lt;/p&gt;
&lt;p&gt;
magic_quotes_gpc is off (verified it). PHP 5.4.24
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27086 (Make auth-check logins work with 1Password) updated</title>
      
        <dc:creator>mannieschumpert</dc:creator>

      <pubDate>Sun, 16 Feb 2014 18:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27086#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27086#comment:5/1392576818299439</guid>
      <description>&lt;p&gt;
The problem with filling in every text input does seem to have been solved, but yes, auto-submitting seems to be disabled.
&lt;/p&gt;
&lt;p&gt;
Definitely an improvement though!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27003.13.diff attached to Ticket #27003</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 17:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003.13.diff/1392571887968125</guid>
      <description>&lt;p&gt;
Adds hypothetical filters for short-circuiting, for governing how many path segments to consider, etc.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Sun, 16 Feb 2014 14:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:10/1392559868995802</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27116#comment:9" title="Comment 9"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The updated &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/27116.4.patch" title="Attachment '27116.4.patch' in Ticket #27116"&gt;27116.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/27116.4.patch" title="Download"&gt;​&lt;/a&gt; takes care of the background spill seen in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/nav-tab-active-background-shine-through.png" title="Attachment 'nav-tab-active-background-shine-through.png' in Ticket #27116"&gt;nav-tab-active-background-shine-through.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/nav-tab-active-background-shine-through.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll manually apply the patch after &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt; is done - I'm most of the way through it so can't apply patches to wp-admin.css right now :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26675 (Rewrite of get_media_embedded_in_content() function to produce ...) updated</title>
      
        <dc:creator>Kopepasah</dc:creator>

      <pubDate>Sun, 16 Feb 2014 13:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26675#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26675#comment:4/1392555633733861</guid>
      <description>&lt;p&gt;
Nacin, great suggestions. I will submit another patch based on those.
&lt;/p&gt;
&lt;p&gt;
For the images, should I add an additional parameter or a filter. I personally vote filter, as this will allow users to not only add additional media types to search for (e.g. img), but also search for a specific media type (e.g. iframe) or multiple types (e.g. audio &amp;amp; video). With that being said, it will also allow for searching for any HTML element if a users sets the filter that way, but that could be edge case.
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26674 (The get_tag_regex() function is a too greedy when searching for a ...) updated</title>
      
        <dc:creator>Kopepasah</dc:creator>

      <pubDate>Sun, 16 Feb 2014 12:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26674#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26674#comment:9/1392555165450626</guid>
      <description>&lt;p&gt;
Hey Nacin, sorry for the delayed reply. Just moved to Korea and finally getting settled in.
&lt;/p&gt;
&lt;p&gt;
The initial patch for this ticket is still my suggestion. I am going to make some changes on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26675" title="#26675: enhancement: Rewrite of get_media_embedded_in_content() function to produce ... (closed: fixed)"&gt;#26675&lt;/a&gt; based on your suggestions, but that does not affect how get_tag_regex() should work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Sun, 16 Feb 2014 12:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:9/1392554088080627</guid>
      <description>&lt;p&gt;
nacin fixed the media uploader thickbox issue in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27181" title="Rename the old media.css file, used for the pre-3.5 media library. ..."&gt;[27181]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt; in the meantime.
&lt;/p&gt;
&lt;p&gt;
The updated &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/27116.4.patch" title="Attachment '27116.4.patch' in Ticket #27116"&gt;27116.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/27116.4.patch" title="Download"&gt;​&lt;/a&gt; takes care of the background spill seen in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/nav-tab-active-background-shine-through.png" title="Attachment 'nav-tab-active-background-shine-through.png' in Ticket #27116"&gt;nav-tab-active-background-shine-through.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/nav-tab-active-background-shine-through.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27116.4.patch attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Sun, 16 Feb 2014 12:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.4.patch/1392554070554919</guid>
      <description>&lt;p&gt;
Fix remaining background color spill
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>patch.diff attached to Ticket #26827</title>
      
        <dc:creator>bansod_deven</dc:creator>

      <pubDate>Sun, 16 Feb 2014 09:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26827/patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26827/patch.diff/1392542610762239</guid>
      <description>&lt;p&gt;
Patch for the Bug ! Hope it Works ! Just Changed the Delimiter from ' ! ' to ' ` '
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27003.12.diff attached to Ticket #27003</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 08:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003.12.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003.12.diff/1392540266927913</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27086 (Make auth-check logins work with 1Password) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 08:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27086#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27086#comment:4/1392537607126714</guid>
      <description>&lt;p&gt;
Some news! 1Password extension 4.2 Beta is out, and it appears to fix this. Please test and leave feedback here!
&lt;/p&gt;
&lt;p&gt;
You can get the beta at &lt;a class="ext-link" href="https://agilebits.com/browsers/index.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://agilebits.com/browsers/index.html&lt;/a&gt;, clicking "Enable betas" below the big install button. In Chrome you end up with two extensions installed, so it's easy to switch back to stable.
&lt;/p&gt;
&lt;p&gt;
Note that I can't get the extension to auto-submit logins, but that may be like that for debugging the beta. I've asked that question upstream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27139 (Image caption disappears if images are rearranged immediately after ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 07:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27139#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27139#comment:2/1392537303425370</guid>
      <description>&lt;p&gt;
I'd be curious to know if this is reproducible in 3.5, or if it regressed at some point since then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 07:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:13/1392536784657212</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:11" title="Comment 11"&gt;lisota&lt;/a&gt;:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We'll will recreate the load in a semi-controlled manner by starting with no post editing and then suddenly editing lots of post simultaneously so that we can demonstrate the effect that the post locking heartbeat is having on our CPU.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please don't waste too much time simulating this. I believe you that you're having problems, but a CPU graph alone won't help us. We need to know what specifically is causing the problem.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:10" title="Comment 10"&gt;heydonovan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
That's exactly what we were thinking. Instead of writing to the database, check for persistent caching, and write the &lt;code&gt;_edit_lock&lt;/code&gt; modifications straight to memcached.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
We do know that when a ton of authors are editing a bunch of different posts, the load average on the server almost quadruples. I've enabled POST logging, and about 95% of the requests within that time period are from "wp-refresh-post-lock". Looking at some of our logs, I can see it was requested more than 5000+ times, so that would account for a lot of posts being edited at once. I'll see if I can dig up some more data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Each call has up to three SELECT queries and one UPDATE query for the request, as a result of get_post() and update_postmeta(). The SELECT queries (and the WHERE clause of the UPDATE) all hit indexes that are both well-established and small. The UPDATE query does not write to an indexed field and thus won't force an update of the index. These counts do not include the loading of WordPress, which depending on the environment, setup, plugins, etc., could range anywhere from dirt cheap to absurdly expensive.
&lt;/p&gt;
&lt;p&gt;
At the moment, I am more inclined to think this problem is peculiar to the site or environment, and not to the load. I have no qualms with being proven wrong, but I haven't heard a complaint from other hosting companies and this is the first inkling I've heard from WPEngine. 5000 times a day is still only one request every 17 seconds and just 5000 UPDATE queries, which even a crappy shared hosting box would absorb without blinking. I ran these queries on a site with a few tens of thousands of postmeta records and the indexes laughed at me. How fast are these queries running for you? How many rows are in the wp_postmeta table? I don't have access to my massive test database until I'm home later this week, but I don't expect it to be a problem; these are some of the most basic queries WordPress runs. Does the table CHECK out okay? Is the table optimized?
&lt;/p&gt;
&lt;p&gt;
The issue I see here with going to memcached (which, from an API perspective, is totally doable) is that would imply the DB write queries are the problem. The limited evidence thus far only points to generic load issues. We need to know what's actually causing that load. Is it the FPM (?) process that's taking a long time, or is MySQL the bottleneck? Is it network lag in hitting the DB server? (Assuming the DB is on a separate server.) Is it somehow fetching and invalidating data from memcached that's actually somehow slow?
&lt;/p&gt;
&lt;p&gt;
If you remove the post locking action, are other heartbeat requests affected? Are other admin-ajax requests affected? Are other POST requests affected? I've heard stories of people having post saves take forever, and then a developer goes in and realizes that about fifteen seconds worth of queries and calculations are being performed on every save by a plugin, entirely accidentally. Is it even *these* requests that are the slow ones, or is the issue cache invalidation and then some kind of race condition for frontend requests (which is one way traffic could play a role in this)?
&lt;/p&gt;
&lt;p&gt;
A periodic POST request that results in a few select queries and a single, simple write query should not in and of itself cause problems. Many different avenues to pursue here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27139 (Image caption disappears if images are rearranged immediately after ...) updated</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Sun, 16 Feb 2014 05:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27139#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27139#comment:1/1392528093106508</guid>
      <description>&lt;p&gt;
Oh, browser details: The screencast and described behavior are in Firefox 27 on Mac OS X 10.9.1.
&lt;/p&gt;
&lt;p&gt;
In Chrome 32 on Mac OS X 10.9.1, the behavior is a little different: If you drag and drop the image that you just added the caption to, the caption is not lost. However, if you drag and drop another image, even if it doesn't change the location of the captioned image, the caption is lost.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27139 (Image caption disappears if images are rearranged immediately after ...) created</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Sun, 16 Feb 2014 05:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27139</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27139/1392527584708986</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Steps to reproduce (screencast here: &lt;a class="ext-link" href="http://youtu.be/MF2SEn_lMeQ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://youtu.be/MF2SEn_lMeQ&lt;/a&gt;):&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;While editing a post, open the Add Media dialog.
&lt;/li&gt;&lt;li&gt;Upload (or select) two images and choose "Create Gallery."
&lt;/li&gt;&lt;li&gt;Click "Create New Gallery".
&lt;/li&gt;&lt;li&gt;Add a caption to the first image in the text field underneath the image preview in the main "Edit Gallery" area.
&lt;/li&gt;&lt;li&gt;Drag the second image so that it is reordered in front of the first image.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;What I expected:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The images would be reordered and the image captions would not be changed.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What actually happened:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The images were reordered, but the image caption I had just entered reverted to its previous state.
&lt;/p&gt;
&lt;p&gt;
Clicking in any other text field before reordering images seems to "cement" the caption, but you can click on multiple images before dragging an image, and the caption will still revert.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #9775,​27138 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 16 Feb 2014 05:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=9775%2C27138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=9775%2C27138/1392527353957575</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9775" title="#9775: enhancement: Duplicate comment check is too strict (closed: fixed)"&gt;#9775&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #22694 (Can't upload a file with an apostrophe in name) reopened</title>
      
        <dc:creator>sfoxe</dc:creator>

      <pubDate>Sun, 16 Feb 2014 04:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22694#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22694#comment:8/1392524514440188</guid>
      <description>&lt;p&gt;
I just encountered this bug using Wordpress 3.8.1, and uploading a file with an apostrophe in the filename. Removing the apostrophe allowed the file to be uploaded.
&lt;/p&gt;
&lt;p&gt;
Has this bug crept back into the codebase somehow??
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/22694" title="#22694: defect (bug): Can't upload a file with an apostrophe in name (reopened)"&gt;ianatkins&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When uploading a file with an apostrophe in the filename wordpress returns a 'HTTP Error' message.
&lt;/p&gt;
&lt;p&gt;
I have replicated this on two separate installs of wordpress, on different LAMP hosting environments.
&lt;/p&gt;
&lt;p&gt;
The filename used for testing was Trend_Forecaster's_Handbook_1.jpg
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>webaware</dc:creator>

      <pubDate>Sun, 16 Feb 2014 03:19:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:24/1392520794331475</guid>
      <description>&lt;p&gt;
A further complication: CloudFlare Rocketscript. This is a service that compresses and bundles scripts from your website into a single download. It does this by replacing your script elements with ones that look like this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;script type='text/rocketscript' data-rocketsrc='http://example.com/path/to/src.js?ver=1.0'&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
After the page has loaded, Rocketscript collects those elements all together and loads / executes the scripts. Which means scripts that don't like being loaded asynchronously break of course.
&lt;/p&gt;
&lt;p&gt;
To disable Rocketscript for specific scripts, you can add an attribute &lt;code&gt;data-cfasync="false"&lt;/code&gt; as per this support note:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://support.cloudflare.com/hc/en-us/articles/200169436"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://support.cloudflare.com/hc/en-us/articles/200169436&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;However&lt;/strong&gt;: it only works if the attribute comes &lt;strong&gt;before&lt;/strong&gt; the src attribute.
&lt;/p&gt;
&lt;p&gt;
So I like Toscho's solution, but with &lt;code&gt;$extra&lt;/code&gt; added into the script element before the src attribute, not after it.
&lt;/p&gt;
&lt;p&gt;
FYI: this is how I solved the problem for a plugin user, without such extra attribute support; nasty but effective. I'd love to offer a better solution :)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/webaware/8949605"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/webaware/8949605&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27138 (Disable duplicate trigger) created</title>
      
        <dc:creator>RSalnikov</dc:creator>

      <pubDate>Sun, 16 Feb 2014 02:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27138/1392518077052951</guid>
      <description>&lt;p&gt;
Add opportunity to disabled check a duplicate commentaries. When trying to check action "comment_duplicate_trigger", show that function is not exist. Check of function is placed in functions.php
Thx for help and sorry for my english;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23805 (wp_ajax_add_menu_item() closed to user-created menu item types) updated</title>
      
        <dc:creator>GregLone</dc:creator>

      <pubDate>Sun, 16 Feb 2014 02:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23805#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23805#comment:2/1392517942315359</guid>
      <description>&lt;p&gt;
I second that.
&lt;/p&gt;
&lt;p&gt;
I have a plugin (&lt;a class="ext-link" href="http://wordpress.org/plugins/sf-archiver/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/plugins/sf-archiver/&lt;/a&gt;) that builds a custom type, like @GaryJ. So far I couldn't find a way to avoid 2 php notices because of that problem (the variable &lt;code&gt;$_object&lt;/code&gt; is not set).
Another way would be to add a filter in the switch, in a &lt;code&gt;default:&lt;/code&gt; statement. Perhaps something like that:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    default :
        $_object = apply_filters( 'ajax_' . $menu_item_data['menu-item-type'] . '_menu_item_object', false, $menu_item_data );
    break;
}
if ( $_object ) {
    $_menu_item = wp_setup_nav_menu_item( $_object );
    // Restore the missing menu item properties
    $menu_item_data['menu-item-description'] = $_menu_item-&amp;gt;description;
}
&lt;/pre&gt;&lt;p&gt;
I guess something else would be needed for non-ajax.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 16 Feb 2014 01:32:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:12/1392514375743564</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We will recreate the load in a semi-controlled manner by starting with no post editing and then suddenly editing lots of post simultaneously...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be good if you could repeat this test with and without post locking enabled so there is a straight comparison.
&lt;/p&gt;
&lt;p&gt;
It is still strange that increasing these AJAX requests by about 60% has such effect. Is there anything else running only when &lt;code&gt;DOING_AJAX&lt;/code&gt; is defined?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>lisota</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:11/1392511650496595</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
The reply from heydonovan is from our ISP (WPEngine). We'll will recreate the load in a semi-controlled manner by starting with no post editing and then suddenly editing lots of post simultaneously so that we can demonstrate the effect that the post locking heartbeat is having on our CPU. Will post results here when we've completed that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27073 (Can not see Themes in Live Preview) updated</title>
      
        <dc:creator>sbr1115</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:44:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27073#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27073#comment:6/1392511499571261</guid>
      <description>&lt;p&gt;
the problem is NOT a specific theme or plugin in MY case. It doesn't work with any. All plugins were off. I do not understand why I can not see any theme active or not with live preview. When I first started with all of this it was working fine. Nothing changed from the time it worked to the next time I went to use it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27136 (Installed plugin and theme search searched html) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27136#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27136#comment:1/1392511265078550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Heh, nice find! Tested and confirmed the fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:15/1392510913495853</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27181" title="Rename the old media.css file, used for the pre-3.5 media library. ..."&gt;27181&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Rename the old media.css file, used for the pre-3.5 media library. Clean up script-loader CSS registrations.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27181]: Rename the old media.css file, used for the pre-3.5 media library. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27181</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27181/1392510912470617</guid>
      <description>&lt;p&gt;
Rename the old media.css file, used for the pre-3.5 media library. Clean up script-loader CSS registrations.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>heydonovan</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:10/1392510687227082</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
That's exactly what we were thinking. Instead of writing to the database, check for persistent caching, and write the
&lt;code&gt;_edit_lock&lt;/code&gt; modifications straight to memcached.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
We do know that when a ton of authors are editing a bunch of different posts, the load average on the server almost quadruples. I've enabled POST logging, and about 95% of the requests within that time period are from "wp-refresh-post-lock". Looking at some of our logs, I can see it was requested more than 5000+ times, so that would account for a lot of posts being edited at once. I'll see if I can dig up some more data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26580 (Add filters to WP_MS_Sites_List_Table::prepare_items()) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26580#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26580#comment:3/1392510563795234</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25338" title="#25338: enhancement: Comments of password-protected posts should not be shown to logged-in ... (new)"&gt;#25338&lt;/a&gt; is related in the sense that there's this general trend of wanting to be able to easily filter &lt;code&gt;prepare_items()&lt;/code&gt;. I think it would be interesting to see a patch (that would also solve pagination, total items, etc.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18400 (Suggested label change for "Stick this post to the front page") updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18400#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18400#comment:6/1392510152521522</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18400.2.diff attached to Ticket #18400</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18400/18400.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18400/18400.2.diff/1392510117384743</guid>
      <description>&lt;p&gt;
Refresh patch against trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15397 (redirect_guess_404_permalink() doesn't guess posts with updated dates) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15397#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15397#comment:12/1392509569330249</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like the idea of storing some small number of date changes in post meta, and only performing the redirect if the post has an old matching date. It seems like the least magic option.
&lt;/p&gt;
&lt;p&gt;
We can offer some level of customization by allowing the number of dates store to be configurable (&lt;code&gt;__return_zero&lt;/code&gt; would disable completely)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25338 (Comments of password-protected posts should not be shown to logged-in ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25338#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25338#comment:1/1392509033928653</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report. At this time, it wouldn't be easy to filter out comments from password-protected posts because &lt;code&gt;get_comments()&lt;/code&gt; is relatively decoupled from the state of whether or not a post requires a password.
&lt;/p&gt;
&lt;p&gt;
Technically-speaking, the most straightforward way to do this would be to join on the posts table and filter based on the value of the &lt;code&gt;post_password&lt;/code&gt; column. The performance of this approach would need to be assessed. Additionally, I'd recommend this change be made within &lt;code&gt;WP_Comments_List_Table-&amp;gt;prepare_items()&lt;/code&gt;, instead of being added as a new feature of &lt;code&gt;WP_Comment_Query&lt;/code&gt;. It's a better pattern to perform the capability check outside of the API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27133 (Redundant type casting in wp_get_object_terms) updated</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27133#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27133#comment:4/1392509021768497</guid>
      <description>&lt;p&gt;
Yeah you're right about that, good point, thanks for clearing it up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>