<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10514 (Allow plugins to advertise its XML APIs in RSD) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 06 Aug 2009 23:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10514#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10514#comment:1/1249601109000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm curious to know what other APIs besides XML-RPC and AtomPub would plugins likely be using that do discovery via RSD?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10559 (Allow a custom subdir in wp_upload_dir) closed</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 06 Aug 2009 23:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10559#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10559#comment:6/1249600418000000</guid>
      <description>invalid: &lt;p&gt;
Good point.  I don't know why I missed the obvious.  Here is what I did for anyone else ending up here with a similar issue:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('upload_dir', 'my_upload_dir');
$upload = wp_upload_dir();
remove_filter('upload_dir', 'my_upload_dir');
funcion my_upload_dir($upload) {
	$upload['subdir']	= '/sub-dir-to-use' . $upload['subdir'];
	$upload['path']		= $upload['basedir'] . $upload['subdir'];
	$upload['url']		= $upload['baseurl'] . $upload['subdir'];
	return $upload;
}
&lt;/pre&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>xmlrpc.php.diff attached to Ticket #10513</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 06 Aug 2009 23:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10513/xmlrpc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10513/xmlrpc.php.diff/1249599704000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10513 (Custom XML-RPC methods can't reuse functions in WordPress' XML-RPC ...) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 06 Aug 2009 23:01:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10513#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10513#comment:1/1249599694000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This sounds fine.  I did have a problem with seg faulting with your patch though.  Seems it didn't like having a class method called serve.  I've created a new patch changing this to serve_request and it stopped seg faulting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10487 (Improved meta API) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 06 Aug 2009 22:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10487#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10487#comment:3/1249599278000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10562 (Bulk delete spam comments deletes comments just approved) updated</title>
      
        <dc:creator>ronitb</dc:creator>

      <pubDate>Thu, 06 Aug 2009 22:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10562#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10562#comment:1/1249598993000000</guid>
      <description>&lt;p&gt;
This seems to be only happening when the admin approving comments is using Google Chrome. The issue does not occur in Firefox.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10562 (Bulk delete spam comments deletes comments just approved) created</title>
      
        <dc:creator>ronitb</dc:creator>

      <pubDate>Thu, 06 Aug 2009 22:35:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10562</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10562/1249598145000000</guid>
      <description>&lt;p&gt;
View spam comments. Use the Approve action link to approve a single comment. Select all of the rest using the checkbox at the top of the page, and then use the bulk Delete. The spam comments as well as the comment just approved are deleted.
&lt;/p&gt;
&lt;p&gt;
This same issue appears to have been fixed previously - see ticket 8520 - but it is now back in version 2.8 and needs to be fixed again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10240 (Contact Info needs to be filterable) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 21:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10240#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10240#comment:15/1249595996000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11784" title="Make it much easier to filter contact methods from user profiles ..."&gt;[11784]&lt;/a&gt;) Make it much easier to filter contact methods from user profiles adding and removing at will. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10240" title="#10240: enhancement: Contact Info needs to be filterable (closed: fixed)"&gt;#10240&lt;/a&gt; props joostdevalk.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11784]: Make it much easier to filter contact methods from user profiles ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 21:59:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11784/1249595992176025</guid>
      <description>&lt;p&gt;
Make it much easier to filter contact methods from user profiles adding and removing at will. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10240" title="#10240: enhancement: Contact Info needs to be filterable (closed: fixed)"&gt;#10240&lt;/a&gt; props joostdevalk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10240 (Contact Info needs to be filterable) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 21:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10240#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10240#comment:14/1249595963000000</guid>
      <description>&lt;p&gt;
Cool.
&lt;/p&gt;
&lt;p&gt;
Only found one little buglet to do with not setting default values on the WP_User object when loaded for the new contact types which I've fixed in the commit.
&lt;/p&gt;
&lt;p&gt;
This meant you got a notice in the value field for your new contact info item.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10240 (Contact Info needs to be filterable) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 21:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10240#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10240#comment:13/1249594646000000</guid>
      <description>&lt;p&gt;
Excellent.
&lt;/p&gt;
&lt;p&gt;
This is something I expected to be there when writing this:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://blog.ftwr.co.uk/archives/2009/07/19/adding-extra-user-meta-fields/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.ftwr.co.uk/archives/2009/07/19/adding-extra-user-meta-fields/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Was disappointed to find it wasn't.
&lt;/p&gt;
&lt;p&gt;
This patch makes that plugin into just a filter which is what I hoped I needed at the time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10561 (Improve do_action(): Make $wp_actions an assoc array.) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 21:01:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10561#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10561#comment:2/1249592488000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cool.
&lt;/p&gt;
&lt;p&gt;
Would be good to get a patch to add your performance tests to wordpress-tests
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://svn.automattic.com/wordpress-tests/wp-testcase/test_actions.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://svn.automattic.com/wordpress-tests/wp-testcase/test_actions.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like we have some performance tests there but these would be good to add.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10561 (Improve do_action(): Make $wp_actions an assoc array.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 06 Aug 2009 21:00:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10561#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10561#comment:1/1249592431000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin.patch attached to Ticket #10561</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Thu, 06 Aug 2009 20:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10561/plugin.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10561/plugin.patch/1249591796000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11782" title="Limit wp-mail blog by email checks to every 5 minutes. Fixes #7245 ..."&gt;r11782&lt;/a&gt;, patch for do_action, did_action, and do_action_ref_array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10510 (XMLRPC wp.getComments 'spam' status returned as 'hold') closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 20:49:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10510#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10510#comment:2/1249591742000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11783" title="Ensure that XMLRPC clients can tell the difference between unapproved ..."&gt;[11783]&lt;/a&gt;) Ensure that XMLRPC clients can tell the difference between unapproved and spam comments. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10510" title="#10510: defect (bug): XMLRPC wp.getComments 'spam' status returned as 'hold' (closed: fixed)"&gt;#10510&lt;/a&gt; props josephscott.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11783]: Ensure that XMLRPC clients can tell the difference between unapproved ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 20:48:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11783</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11783/1249591739774957</guid>
      <description>&lt;p&gt;
Ensure that XMLRPC clients can tell the difference between unapproved and spam comments. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10510" title="#10510: defect (bug): XMLRPC wp.getComments 'spam' status returned as 'hold' (closed: fixed)"&gt;#10510&lt;/a&gt; props josephscott.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10561 (Improve do_action(): Make $wp_actions an assoc array.) created</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Thu, 06 Aug 2009 20:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10561/1249591699000000</guid>
      <description>&lt;p&gt;
I was benchmarking a few functions in wp-includes/plugin.php and came across some strange results: for 10000 blank hooks, do_action took 8.75 seconds to run, while apply_filters took only 0.04 seconds. I found the bottleneck in do_action, and wrote a patch that brought the 8.75 seconds down to 0.05 seconds.
&lt;/p&gt;
&lt;p&gt;
Currently, $wp_actions is an unordered array of action $tags (strings).
&lt;/p&gt;
&lt;p&gt;
do_action, did_action, and do_action_ref_array all have a time complexity of O(n) (where n is the size of $wp_action), while their counterparts have a time complexity of O(1). While this doesn't affect performance for low values of n, as the size of $wp_action increases, the performance of the do_action family drastically decreases.
&lt;/p&gt;
&lt;p&gt;
This time complexity can be attributed to two things in do_action: is_array($wp_actions) and $wp_actions[] = $tag. Both calls traverse the entirety of $wp_actions—this is what bogs do_action down. In did_action, we run into the same problem by using array_keys.
&lt;/p&gt;
&lt;p&gt;
is_array can easily be changed to isset, since the $wp_actions global is only used by do_action, did_action, and do_action_ref_array. If $wp_action is converted to an associative array with $wp_action[$tag] = number_of_times_$tag_called, we'll no longer have to traverse the array to get or set values. The time complexity will drop to the ideal O(1). As a side effect, the array will also be smaller.
&lt;/p&gt;
&lt;p&gt;
Current Benchmark:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Benchmark take 1: do_action, 10000 blank actions.		Time elapsed: 8.75771
Benchmark take 1: apply_filters, 10000 blank filters.		Time elapsed: 0.03978
Benchmark take 1: has_action, 10000 blank actions. 		Time elapsed: 0.02783
Benchmark take 1: has_filter, 10000 blank filters. 		Time elapsed: 0.01878
Benchmark take 1: did_action, run 1000x, 10000 actions. 	Time elapsed: 3.27091
Benchmark take 2: do_action, 10000 blank actions. 		Time elapsed: 29.29273
Benchmark take 2: apply_filters, 10000 blank filters. 		Time elapsed: 0.03888
Benchmark take 2: has_action, 10000 blank actions. 		Time elapsed: 0.02708
Benchmark take 2: has_filter, 10000 blank filters. 		Time elapsed: 0.01924
Benchmark take 2: did_action, run 1000x, 20000 actions. 	Time elapsed: 6.901
&lt;/pre&gt;&lt;p&gt;
Patch Benchmark:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Benchmark take 1: do_action, 10000 blank actions. 		Time elapsed: 0.0474
Benchmark take 1: apply_filters, 10000 blank filters. 		Time elapsed: 0.04281
Benchmark take 1: has_action, 10000 blank actions. 		Time elapsed: 0.03405
Benchmark take 1: has_filter, 10000 blank filters. 		Time elapsed: 0.02335
Benchmark take 1: did_action, run 1000x, 10000 actions. 	Time elapsed: 0.00214
Benchmark take 2: do_action, 10000 blank actions. 		Time elapsed: 0.04876
Benchmark take 2: apply_filters, 10000 blank filters. 		Time elapsed: 0.03999
Benchmark take 2: has_action, 10000 blank actions. 		Time elapsed: 0.0312
Benchmark take 2: has_filter, 10000 blank filters. 		Time elapsed: 0.02353
Benchmark take 2: did_action, run 1000x, 20000 actions. 	Time elapsed: 0.00213
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>xmlrpc.php.diff attached to Ticket #10510</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 06 Aug 2009 20:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10510/xmlrpc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10510/xmlrpc.php.diff/1249589408000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10510 (XMLRPC wp.getComments 'spam' status returned as 'hold') updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 06 Aug 2009 20:09:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10510#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10510#comment:1/1249589392000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm able to reproduce this.
&lt;/p&gt;
&lt;p&gt;
After looking through the path for the comment status it turns out that it is the value comparison checking in the wp_getComment function that was causing the confusion:
&lt;/p&gt;
&lt;pre class="wiki"&gt;        if ( 0 == $comment-&amp;gt;comment_approved )
            $comment_status = 'hold';
        else if ( 'spam' == $comment-&amp;gt;comment_approved )
            $comment_status = 'spam';
        else if ( 1 == $comment-&amp;gt;comment_approved )
            $comment_status = 'approve';
        else
            $comment_status = $comment-&amp;gt;comment_approved;
&lt;/pre&gt;&lt;p&gt;
The comment approved field is a string.  This was tripping up comments with 'spam' status and indicating that there were 'hold'.  By quoting the numeric comparisons for the zero and one values the conditional checks work as expected.  After making this change my tests show that the XML-RPC method wp.getComment (and wp.getComments) return the correct status values of hold, approve and spam.
&lt;/p&gt;
&lt;p&gt;
I've attached a diff to make this change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10559 (Allow a custom subdir in wp_upload_dir) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 06 Aug 2009 20:09:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10559#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10559#comment:5/1249589389000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10559#comment:3" title="Comment 3"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not all uploads have a post.
&lt;/p&gt;
&lt;p&gt;
Also, the second patch was just to add the documentation.  I meant to have it overwrite the first upload...oops.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
in this case, you don't need the patch at all.
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('upload_dir', 'foobar');
$dir = upload_dir()l
remove_filter('upload_dir', 'foobar');
&lt;/pre&gt;&lt;p&gt;
and have foobar() amend the dir as needed. what's desperately needed in that function is a post_id argument; not a subdir argument.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7245 (Keep certain interval to fetch mail message) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7245#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7245#comment:12/1249588730000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11782" title="Limit wp-mail blog by email checks to every 5 minutes. Fixes #7245 ..."&gt;[11782]&lt;/a&gt;) Limit wp-mail blog by email checks to every 5 minutes. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7245" title="#7245: enhancement: Keep certain interval to fetch mail message (closed: fixed)"&gt;#7245&lt;/a&gt; based on patches from lilyfan and Denis-de-Bernardy.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11782]: Limit wp-mail blog by email checks to every 5 minutes. Fixes #7245 ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11782</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11782/1249588727280536</guid>
      <description>&lt;p&gt;
Limit wp-mail blog by email checks to every 5 minutes. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7245" title="#7245: enhancement: Keep certain interval to fetch mail message (closed: fixed)"&gt;#7245&lt;/a&gt; based on patches from lilyfan and Denis-de-Bernardy.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>wordpress_import_meta_serialized.patch attached to Ticket #4028</title>
      
        <dc:creator>JonathanRogers</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4028/wordpress_import_meta_serialized.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4028/wordpress_import_meta_serialized.patch/1249588565000000</guid>
      <description>&lt;p&gt;
Avoids serializing meta values when importing from WXR
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10559 (Allow a custom subdir in wp_upload_dir) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:52:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10559#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10559#comment:4/1249588356000000</guid>
      <description>&lt;p&gt;
I'm sorry, I should be more specific.  I'm using my custom wp_upload_dir function to upload files to the right place which aren't associated with any post.  They are just for a plugin.  For example, a plugin like blog icons by Joost could use this to put the icons in wp-content/uploads/blog-icons and my attachment manager plugin could upload the icons used for attachments to wp-content/uploads/attachment-manager.  Those examples both assume that the blog is using the default wp-content/uploads, but if the blog has a different upload dir, that would be used (%%upload_dir%%/%%subdir%%/ or %%upload_dir%%/%%subdir%%/YYYY/MM/)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10559 (Allow a custom subdir in wp_upload_dir) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10559#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10559#comment:3/1249588050000000</guid>
      <description>&lt;p&gt;
Not all uploads have a post.
&lt;/p&gt;
&lt;p&gt;
Also, the second patch was just to add the documentation.  I meant to have it overwrite the first upload...oops.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7245 (Keep certain interval to fetch mail message) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:45:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7245#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7245#comment:11/1249587948000000</guid>
      <description>&lt;p&gt;
Current patch is a little broken.
&lt;/p&gt;
&lt;p&gt;
Tidying up and will commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10559.001.2.diff attached to Ticket #10559</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:45:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10559/10559.001.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10559/10559.001.2.diff/1249587926000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10560 (XHTML validation error in options-misc.php) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10560#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10560#comment:2/1249587869000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11781" title="Remove errant &amp;lt;tr&amp;gt; to fix validation error. Fixes #10560 props wahgnube."&gt;[11781]&lt;/a&gt;) Remove errant &amp;lt;tr&amp;gt; to fix validation error. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10560" title="#10560: defect (bug): XHTML validation error in options-misc.php (closed: fixed)"&gt;#10560&lt;/a&gt; props wahgnube.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11781]: Remove errant  to fix validation error. Fixes #10560 props wahgnube.</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11781</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11781/1249587865149735</guid>
      <description>&lt;p&gt;
Remove errant &amp;lt;tr&amp;gt; to fix validation error. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10560" title="#10560: defect (bug): XHTML validation error in options-misc.php (closed: fixed)"&gt;#10560&lt;/a&gt; props wahgnube.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10560 (XHTML validation error in options-misc.php) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10560#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10560#comment:1/1249587696000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10559 (Allow a custom subdir in wp_upload_dir) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:38:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10559#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10559#comment:2/1249587506000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10559 (Allow a custom subdir in wp_upload_dir) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10559#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10559#comment:1/1249587499000000</guid>
      <description>&lt;p&gt;
I'd be disagreeable on that one. passing the post_id to the upload_dir filter would be a *much* better implementation. it's then the plugin's job to determine if any subdir applies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4028 (Importing WXR breaks serialized postmeta value) reopened</title>
      
        <dc:creator>JonathanRogers</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:30:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4028#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4028#comment:5/1249587026000000</guid>
      <description>&lt;p&gt;
Unfortunately, this bug seems to have been re-introduced by Ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7347" title="#7347: defect (bug): maybe_serialize() should serialize strings that are already serialized (closed: fixed)"&gt;#7347&lt;/a&gt;. Now, serialized post meta values are doubly serialized after importing. Since Ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7347" title="#7347: defect (bug): maybe_serialize() should serialize strings that are already serialized (closed: fixed)"&gt;#7347&lt;/a&gt; indicates there might be some reason for maybe_serialize() to doubly serialize (though I can't fathom what it might be) and add_post_meta() calls maybe_serialize(), I'm not sure where this should be fixed.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10540 (Typo in l10n.php) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10540#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10540#comment:5/1249586876000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11780" title="Correct the name of the filter in _nx(). Fixes #10540 props CalebKniffen."&gt;[11780]&lt;/a&gt;) Correct the name of the filter in _nx(). Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10540" title="#10540: defect (bug): Typo in l10n.php (closed: fixed)"&gt;#10540&lt;/a&gt; props CalebKniffen.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11780]: Correct the name of the filter in _nx(). Fixes #10540 props CalebKniffen.</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:27:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11780</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11780/1249586872922230</guid>
      <description>&lt;p&gt;
Correct the name of the filter in _nx(). Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10540" title="#10540: defect (bug): Typo in l10n.php (closed: fixed)"&gt;#10540&lt;/a&gt; props CalebKniffen.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>options-misc.php.patch attached to Ticket #10560</title>
      
        <dc:creator>wahgnube</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:27:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10560/options-misc.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10560/options-misc.php.patch/1249586859000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10560 (XHTML validation error in options-misc.php) created</title>
      
        <dc:creator>wahgnube</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:27:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10560</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10560/1249586833000000</guid>
      <description>&lt;p&gt;
I have attached a tiny patch for wp-admin/options-misc.php. This removes an errant &amp;lt;tr&amp;gt; which breaks xhtml validation and prevents my browser from rendering the miscellaneous options page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>10559.001.diff attached to Ticket #10559</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10559/10559.001.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10559/10559.001.diff/1249586758000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10191 (WordPress not determining if a request is a 404) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10191#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10191#comment:5/1249586563000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10559 (Allow a custom subdir in wp_upload_dir) created</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:21:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10559</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10559/1249586486000000</guid>
      <description>&lt;p&gt;
Sometimes it's nice to keep a certain set of uploaded files separate from the rest.  Especially if you're not allowing direct access to them.  I usually do this by putting the files in a subdirectory of the uploads directory with a .htaccess rule to block access.  I've been using a modified version of the wp_upload_dir which allows you to specify a sub-directory.  For example, &lt;code&gt;wp_upload_dir( null, 'premiums')&lt;/code&gt; would use a directory like &lt;code&gt;wp-content/uploads/premiums/2009/08&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10556 (Add a checked_array() to compare arrays like checked()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:21:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10556#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10556#comment:1/1249586476000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could you give a more detailed example of what you are trying to do that the checked function doesn't support.
&lt;/p&gt;
&lt;p&gt;
An example simple plugin which has an page with a check box on would be fine.
&lt;/p&gt;
&lt;p&gt;
I would like to get a clear understanding of the issue that presents.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-filesystem-ftpext_and_file_without_timeout_error_message.php.patch attached to Ticket #10522</title>
      
        <dc:creator>ntm</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:20:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10522/class-wp-filesystem-ftpext_and_file_without_timeout_error_message.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10522/class-wp-filesystem-ftpext_and_file_without_timeout_error_message.php.patch/1249586413000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10522 (timeout for ftp connections as a constant in config.php) updated</title>
      
        <dc:creator>ntm</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10522#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10522#comment:10/1249586358000000</guid>
      <description>&lt;p&gt;
I have thought about my last patch file for the &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/class-wp-filesystem-ftpext.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;class-wp-filesystem-ftpext.php&lt;/a&gt; file during the last days. Maybe it was a little bit to much to the additional error message in there as part of this ticket. Maybe it is more correct to open a separate ticket for this issue.
&lt;/p&gt;
&lt;p&gt;
Should I open a new ticket for that?
&lt;/p&gt;
&lt;p&gt;
(I have made another patch without it that message but with the described changes for class-wp-filesystem-ftpext.php and file.php.)
&lt;/p&gt;
&lt;p&gt;
Further I'm not sure if my changes (in class-wp-filesystem-ftpext.php) are ok or not.
&lt;/p&gt;
&lt;p&gt;
DD32 has said:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
i'd use the define directly there, ie:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;if ( defined('TIMEOUT..') )
$this-&amp;gt;timeout = TIMEOUT...;
&lt;/pre&gt;&lt;p&gt;
Should I create a patch which changes only class-wp-filesystem-ftpext.php like this (but with the constant name FTP_CONNECT_TIMEOUT)?
&lt;/p&gt;
&lt;p&gt;
What should i do?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10486 (404 Template Pages) closed</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:12:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10486#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10486#comment:5/1249585928000000</guid>
      <description>duplicate</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10191 (WordPress not determining if a request is a 404) updated</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10191#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10191#comment:4/1249585845000000</guid>
      <description>&lt;p&gt;
To close the dupe at 10486, pasting in dcole07's notes from that ticket here:
&lt;/p&gt;
&lt;p&gt;
"There is something wrong with how WordPress desides whether to use the 404 template or not. There are a lot of cases where it uses other templates went there is not content.
&lt;/p&gt;
&lt;p&gt;
How to reproduce: Install Wordpress 2.8.X Use the Default theme Go to ?p=404 or any made up page that isn't real. It doesn't go to the 404 template, which it should. It instead uses the single template, even though there is no content.
&lt;/p&gt;
&lt;p&gt;
Themes can do a work-a-around by using an if/else statement and checking for content, but that's dumb, when we have a is_404() check. WordPress should default to using 404.php (if there is one) and make is_404() true before any template file is loaded.
&lt;/p&gt;
&lt;p&gt;
If this is how the core developers want the 404 to work, then another template and template functions should be made, so people can have one template to manage URLs that don't have content."
&lt;/p&gt;
&lt;p&gt;
"To summarize this problem, WordPress is able to find a template based on URL information, but it turns out to be the wrong template, because there is not content."
&lt;/p&gt;
&lt;p&gt;
"I'll pick up this ticket or the one it's a dup of, if no one else will and someone is willing to mentor me or give feedback to my ideas. I'd like to suggest a solution, but I don't know enough about the WordPress template system at the moment... I'll look into it."
&lt;/p&gt;
&lt;p&gt;
"I read though the WordPress code and it's not like the code has a bug, it's just lacking the feature to pickup on missing content. The problem with generating a solution for this "bug" is that we don't know there is no content until we're half way though the template it did match. What I don't get, is that this problem can be avoided with the right non-default permalink structure. So, does that mean we can patch this problem, so visitors don't use a template that doesn't have content available? I'm thinking we could check for content based on what the URL says it's going to be when WordPress is deciding what template to use and give a 404 if nothing is found... basically. We'd have to be careful, because some templates may be designed to not have content."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7347 (maybe_serialize() should serialize strings that are already serialized) updated</title>
      
        <dc:creator>JonathanRogers</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7347#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7347#comment:4/1249585730000000</guid>
      <description>&lt;p&gt;
This has to be one of the dumbest things I've come across in a while. Why would it ever be a good idea to serialize an already serialized string? I came across this trying to figure out why custom fields with serialized strings stored in them were showing up doubly serialized.
&lt;/p&gt;
&lt;p&gt;
Specifically, I'd export a page, then import it using the built-in Wordpress UI and the plugin using the custom field no longer worked as intended because the value was doubly serialized. Ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4028" title="#4028: defect (bug): Importing WXR breaks serialized postmeta value (closed: fixed)"&gt;#4028&lt;/a&gt; seems to indicate this very bug was fixed 2 years ago, only to be re-introduced a year later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Thu, 06 Aug 2009 19:02:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:14/1249585371000000</guid>
      <description>&lt;p&gt;
@JohnMyr Yes, working out how to approach canonical plugins logistically, but what you suggest is pretty much how it'll go. If most people agree this feature is better served as plugin, will close the ticket as wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_link_pages-both.diff attached to Ticket #10558</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Thu, 06 Aug 2009 16:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10558/wp_link_pages-both.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10558/wp_link_pages-both.diff/1249576327000000</guid>
      <description>&lt;p&gt;
Diff to introduce an argument of both into wp_link_pages whereupon WP would use both next/prev links AND the page number links (Edited to introduce spacing rather than have the links hard against one another
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10558 (wp_link_pages could allow for both page numbers and next/prev links) created</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Thu, 06 Aug 2009 16:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10558/1249576019000000</guid>
      <description>&lt;p&gt;
The attached patch does exactly that.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10557 (html_entity_decode for emails) created</title>
      
        <dc:creator>.fay</dc:creator>

      <pubDate>Thu, 06 Aug 2009 15:18:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10557/1249571887000000</guid>
      <description>&lt;p&gt;
Apostrophe's code is not well converted in email notifications.
eg : This is how we receive the notification : "Un nouveau commentaire sur l&lt;strong&gt;&amp;amp;rsquo;&lt;/strong&gt;article"
&lt;/p&gt;
&lt;p&gt;
Can you please add html_entity_decode($var, ENT_QUOTES) to email's $subject &amp;amp; $notify_message in pluggable.php
&lt;/p&gt;
&lt;p&gt;
Best regards
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>template.patch attached to Ticket #10556</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Thu, 06 Aug 2009 12:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10556/template.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10556/template.patch/1249560197000000</guid>
      <description>&lt;p&gt;
patch for checked function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10556 (Add a checked_array() to compare arrays like checked()) created</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Thu, 06 Aug 2009 12:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10556</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10556/1249560142000000</guid>
      <description>&lt;p&gt;
The checked() function checks whether two parameters passed to it are equal and then outputs checked='checked', which can be used in forms having checkboxes or radio buttons.
&lt;/p&gt;
&lt;p&gt;
Sometimes (particularly for checkboxes), we might need to check for multiple values. So I am proposing a change to the checked() function.
&lt;/p&gt;
&lt;p&gt;
It can first check whether the default value is an array and if yes, it can return checked='checked' if the current value is present in the default array.
&lt;/p&gt;
&lt;p&gt;
I have attached a patch with this change.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9698 (WordPress back end is not accessible) updated</title>
      
        <dc:creator>rudolflai</dc:creator>

      <pubDate>Thu, 06 Aug 2009 11:21:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9698#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9698#comment:9/1249557708000000</guid>
      <description>&lt;p&gt;
It seems that without Javascript the Wordpress backend ceases to function in many ways. For example, the insert posts page relies heavily on Javascript, for example the TinyMCE editor, all the things that require a modal JS popup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9642 (Database Schema Optimizations) updated</title>
      
        <dc:creator>dbuser123</dc:creator>

      <pubDate>Thu, 06 Aug 2009 10:49:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9642#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9642#comment:26/1249555760000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9642#comment:25" title="Comment 25"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Probably because its not a query WordPress makes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see, sorry for the disturbance.
&lt;/p&gt;
&lt;p&gt;
A minor improvement for the comments table: the first index is redundant since it is a prefix of the second one.
KEY comment_approved (comment_approved),
KEY comment_approved_date_gmt (comment_approved,comment_date_gmt),
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.php.diff attached to Ticket #10555</title>
      
        <dc:creator>chombium</dc:creator>

      <pubDate>Thu, 06 Aug 2009 10:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10555/functions.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10555/functions.php.diff/1249553777000000</guid>
      <description>&lt;p&gt;
functions.php diff file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10555 (number_format_i18n function doesn't check if the number is float or ...) created</title>
      
        <dc:creator>chombium</dc:creator>

      <pubDate>Thu, 06 Aug 2009 10:15:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10555</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10555/1249553719000000</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Problem description:
&lt;/p&gt;
&lt;p&gt;
I've noticed that there are problems in representation of decimal numbers. The number representation is defined by the following three values in the wordpress.pot translation file: number_format_decimals, number_format_decimal_point and number_format_thousands_sep.
&lt;/p&gt;
&lt;p&gt;
In the Macedonian language translation of wordpress.pot which I
maintain, I've set this values to:&lt;br /&gt;
number_format_decimals = 3&lt;br /&gt;
number_format_decimal_point = ,&lt;br /&gt;
number_format_thousands_sep = .&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This means that the proper decimal number representation would be 1.234,567&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've noticed that all the numbers including integers are shown with this format, so for example, I get "23,000" posts on the dashboard instead of "23".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I can fix this behavior by setting:
number_format_decimals = 0
in the translation, but if a floating point number has to be formated it will be truncated to its integer part.
&lt;/p&gt;
&lt;p&gt;
This way all the floating point numbers are not formated correctly, but as I was told by Nikolay Bachiyski, this is the safe way to solve this issue because this function is called only with integers.
&lt;/p&gt;
&lt;p&gt;
I dig trough the code of wp 2.8.3 and I've noticed that the problematic function is number_format_i18n located in wp-includes/functions.php
This function is the only place where php number_format function is
called with the parameters from the translation file.
&lt;/p&gt;
&lt;p&gt;
Solution:
&lt;/p&gt;
&lt;p&gt;
The function number_format_i18n has to be patched so that first it checks what kind of number should be formated (integer or float) and then to do the formating. This means it has to set the correct number of decimal places before calling the php number_format function.
&lt;/p&gt;
&lt;p&gt;
This can be done by adding the line:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if (!is_float($number)) $decimals = 0;
&lt;/pre&gt;&lt;p&gt;
after setting the number of decimals, the line:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$decimals = ( is_null( $decimals ) ) ? $wp_locale-&amp;gt;number_format['decimals'] : intval( $decimals );
&lt;/pre&gt;&lt;p&gt;
The proposed patch simply checks if the number which has to be formated is not float and if that is the case it sets the number of decimals to 0 ($decimals = 0)
&lt;/p&gt;
&lt;p&gt;
I don't know if the file: wp-content/plugins/akismet/akismet.php has to be patched as well because it redeclares the number_format_i18n function if it doesn't exist. I see that the function is called with one parameter in this file, which means decimals = 0.
&lt;/p&gt;
&lt;p&gt;
The diff file of wp-includes/functions.php is in the attachment.
&lt;/p&gt;
&lt;p&gt;
Jovan
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9642 (Database Schema Optimizations) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 06 Aug 2009 08:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9642#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9642#comment:25/1249548404000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Posted before but still not fixed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Probably because its not a query WordPress makes.
&lt;/p&gt;
&lt;p&gt;
I believe that belongs to the &lt;code&gt;Subscribe to comments&lt;/code&gt; plugin
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10554 (Duplicate filter for pre-update option modification) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 06 Aug 2009 08:43:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10554#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10554#comment:1/1249548194000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;sanitize_option_{$option&lt;/code&gt;} is for sanitizing the content of an option, And is only run if the function doesnt sanitize it itself.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;pre_update_option_&lt;/code&gt; can be used to prevent the option from being updated, as well as having a standard filter layout over all the *_option() functions.
&lt;/p&gt;
&lt;p&gt;
has-patch: Just to move it through the workflow, I dont think submitting a patch is worth anyones time, quicker to just update the code directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10554 (Duplicate filter for pre-update option modification) created</title>
      
        <dc:creator>Adrian Lang</dc:creator>

      <pubDate>Thu, 06 Aug 2009 08:01:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10554</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10554/1249545670000000</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/8247" title="pre_update_option_* filter from DD32. fixes #7233"&gt;[8247]&lt;/a&gt;, the filter „pre_update_option_{$option_name}“ has been introduced after request in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7233" title="#7233: defect (bug): add filter to update_option to allow modifications to option prior to ... (closed: fixed)"&gt;#7233&lt;/a&gt;. Yet there already is „sanitize_option_{$option}“ that serves the same purpose as has been pointed out in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5208" title="#5208: enhancement: New filter: pre_update_option_{option-name} (closed: wontfix)"&gt;#5208&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Please clarify which of those should be used and deprecate/remove the other one. In any case, please change „'pre_update_option_' . $option_name“ to „"pre_update_option_{$option_name}"“ for automatic documentation tools.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10553 (Movable Elements in the Widgets Page) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Thu, 06 Aug 2009 07:15:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10553#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10553#comment:2/1249542912000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10553 (Movable Elements in the Widgets Page) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Thu, 06 Aug 2009 07:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10553#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10553#comment:1/1249542893000000</guid>
      <description>&lt;p&gt;
Available Widgets description as tooltip or hidden as expandable would also save a lot of screen estate, and the css of widget drag buttons may be tweaked to better utilize screen estate. If widget area panel at right may move as a user scroll the page on small resolution screens usability will be better when theres only one column of widgets at left.
&lt;/p&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10550 (nofollow attribute added to comment_reply_link function) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 06 Aug 2009 05:06:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10550#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10550#comment:3/1249535204000000</guid>
      <description>&lt;p&gt;
One way to address this would be to make the reply "links" into separate POST-submitting forms.  For those using JavaScript, the experience would be the same: instead of an inline click event listener, an inline submit listener would move the form.
&lt;/p&gt;
&lt;p&gt;
For the case in which JavaScript doesn't stop the event, the logic would just have to check &lt;code&gt;$_POST&lt;/code&gt; instead of &lt;code&gt;$_GET&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In addition to side-stepping the PageRank issues, this approach would have the positive side effect of making things more inline with HTTP protocol, for which GET requests are supposed to be idempotent. (I realize WP admin violates this all over the place, but WP does usually try to do better on the public-facing side of things.)
&lt;/p&gt;
&lt;p&gt;
I'll write a patch to that effect if no one brings any serious objections.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10546 (Change VARCHAR keys to SMALLINT) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Thu, 06 Aug 2009 04:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10546#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10546#comment:4/1249532826000000</guid>
      <description>&lt;p&gt;
For what it's worth I've never seen this be a bottleneck in a real life scenario.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10488 (Navigation For Already Installed Page) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 06 Aug 2009 03:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10488#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10488#comment:4/1249528031000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10516 (Force Another Widgets Page Sidebar To Be Open By Default.) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 06 Aug 2009 03:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10516#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10516#comment:8/1249527829000000</guid>
      <description>&lt;p&gt;
I've tested patch 10515.diff under WordPress 2.9 revision 11779. The patch is only a couple lines of code and is very passive, i.e. isn't going to be effected by other patches. The sidebars continue to work as they did before under the normal mode and under the accessibility mode. Then links are clicked that contain something like &lt;strong&gt;?sidebar=sidebar-2&lt;/strong&gt;, that sidebar is opened on page load. Everything works properly and like expected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10516 (Force Another Widgets Page Sidebar To Be Open By Default.) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 06 Aug 2009 02:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10516#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10516#comment:7/1249527312000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10553 (Movable Elements in the Widgets Page) created</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 06 Aug 2009 02:47:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10553</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10553/1249526840000000</guid>
      <description>&lt;p&gt;
It's hard to make a widgets management page that is to everyone's liking, but it'd be easier to please people if we allowed then to customize the Widgets page a little. This same kind of functionality is already in the Post and Pages editor pages.&lt;br /&gt;
&lt;br /&gt;
I think we should allow them to set a maximum number of widget columns the Available Widgets and Inactive Widgets will expand to. Then allow the sidebars (Widget Areas) to fill the available space, meaning they could have two sidebar columns if they wanted. &lt;br /&gt;
&lt;br /&gt;
It'd also be nice if people could swap the position of the sidebars and the two widget holding sections.&lt;br /&gt;
&lt;br /&gt;
This could likely be done with a plugin, but it'd be nice if it was added to core. The options could be hidden away in the &lt;strong&gt;Screen Options&lt;/strong&gt; tab along with the &lt;strong&gt;Enable Accessibility Mode&lt;/strong&gt;.&lt;br /&gt;
&lt;br /&gt;
Does anyone want to own this ticket and create the patch? I'm for someone else doing it, but I could end up doing it if no one else will. I'll take ownership until someone else steps forward.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10550 (nofollow attribute added to comment_reply_link function) updated</title>
      
        <dc:creator>seo-dave</dc:creator>

      <pubDate>Thu, 06 Aug 2009 01:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10550#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10550#comment:2/1249523703000000</guid>
      <description>&lt;p&gt;
noindex wouldn't be suitable since you do want the main content of what the reply to links point to, yes the content is theoretically duplicate, (same page with a different URL) the major search engines normally combine the results of duplicate URLs, meaning it's not a problem to have these links without a nofollow attribute. I've had it running this way on one of my sites for well over a month and some of the pages have 100s of comments and the site is doing very well in Google (2,000+ unique visitors a day, most from Google).
&lt;/p&gt;
&lt;p&gt;
The site in question has about 2,000 post with about 650 pages indexed in Google. The site in total has 2,600+ approved comments so that's a LOT of those reply to links. A search of the 600+ indexed pages turns up three pages that are indexed with the reply links, they have the url structure with the replytocom variable within it, though all three pages also are indexed normally and checking the main search phrase (title of the page) finds the original pages listed in Google, not the extra pages. For one of the pages the url corresponded to a paginated comments pages as well, so like this
&lt;/p&gt;
&lt;p&gt;
domain.com/post-name.html/comment-page-2?replytocom=12345
&lt;/p&gt;
&lt;p&gt;
So on my site Google is combining 2,600+ links into the original URLs and only partially failing in three instances.
&lt;/p&gt;
&lt;p&gt;
From an SEO perspective there is no harm in principle in having multiple links back to the page the links are on, so having 50+ reply to comment links isn't a problem in itself&lt;strong&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt; Although this isn't really the place to discuss this: I've done a lot of SEO research over the last 10 years or so and the anchor text of links is considered much more important than standard body text, so having 50+ links with the anchor text "reply to this comment" is potentially damaging from an SEO perspective since it "waters down" the SEO benefits of the other anchor text on the page (which hopefully will have some keywords in them). This is true whether a nofollow attribute is used or not since the anchor text is indexed either way. In an ideal situation all anchor text would support the SERPs of the page the links are on, this is why I would like to edit the Reply to comment text and change it to something like
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
"Reply to this comment on post name"
&lt;/p&gt;
&lt;p&gt;
By doing this we've added relevant keywords to that anchor text, that is assuming the title of the post contains relevant keywords. I've done this with other WordPress functions and it works quite well.
&lt;/p&gt;
&lt;p&gt;
David Law
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 06 Aug 2009 00:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:73/1249519247000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11779" title="Notice fixes, props mrmist, see #4529"&gt;[11779]&lt;/a&gt;) Notice fixes, props mrmist, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11779]: Notice fixes, props mrmist, see #4529</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 06 Aug 2009 00:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11779</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11779/1249519239697021</guid>
      <description>&lt;p&gt;
Notice fixes, props mrmist, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 05 Aug 2009 23:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:72/1249516233000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11778" title="Show Empty Trash button only when the user has cap. props mrmist, see #4529"&gt;[11778]&lt;/a&gt;) Show Empty Trash button only when the user has cap. props mrmist, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11778]: Show Empty Trash button only when the user has cap. props mrmist, see #4529</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 05 Aug 2009 23:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11778</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11778/1249516229346171</guid>
      <description>&lt;p&gt;
Show Empty Trash button only when the user has cap. props mrmist, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10550 (nofollow attribute added to comment_reply_link function) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 05 Aug 2009 23:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10550#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10550#comment:1/1249515462000000</guid>
      <description>&lt;p&gt;
perhaps noindex would suit better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10551 (wp_die() triggers block when using ModSecurity Core Rules) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 05 Aug 2009 23:26:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10551#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10551#comment:3/1249514804000000</guid>
      <description>&lt;p&gt;
I have a feeling  its recently released, see &lt;a class="ext-link" href="http://blog.modsecurity.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.modsecurity.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If i recall correctly, Its due to some security people disliking 500 errors for web app error handling, and wanting people to use the 40x error set. But theres not a 400 error code for all cases either.. IMO, the rule is pointless.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9825 (Enforce permalink history, outright) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 05 Aug 2009 23:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9825#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9825#comment:15/1249514211000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 05 Aug 2009 23:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:51/1249513594000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could probably do something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$old = normalize_whitespace( $old_post['post_content'] );
$new = normalize_whitespace( $new_post['post_content'] );
if ( $old != $new || $old_post['post_title'] != $new_post['post_title'] || $old_post['post_excerpt'] != $new_post['post_excerpt'] )
    do_pings...
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9825 (Enforce permalink history, outright) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Wed, 05 Aug 2009 23:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9825#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9825#comment:14/1249513399000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10531 (Intermediate image file naming scheme) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 05 Aug 2009 21:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10531#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10531#comment:1/1249509572000000</guid>
      <description>&lt;p&gt;
Perhaps the proper way to handle this would be to leave the old image intact and save the new image as separate file, updating the attachment meta. This will keep everything working properly when the old image was already used in a post.
&lt;/p&gt;
&lt;p&gt;
One of the feature requests for media is support for custom image sizes, i.e. more intermediate image sizes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10552 (Add get_search_link()) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Wed, 05 Aug 2009 21:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10552/1249507343000000</guid>
      <description>&lt;p&gt;
WP_Rewrite class provides get_search_permastruct() method, but it is not used. It will be good to add get_search_link() function for completness. I am not sure where it should go (which file), so I post it here:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_search_link( $query = null ) {
	global $wp_rewrite;
	$searchlink = $wp_rewrite-&amp;gt;get_search_permastruct();
	if ( is_null( $query ) )
		$query = get_search_query();
	$query = rawurlencode( $query );
	if ( empty( $searchlink ) ) {
		$file = trailingslashit( get_option( 'home' ) );
		$searchlink = $file . '?s=' . $query;
	} else {
		$searchlink = str_replace( '%search%', $query, $searchlink );
		$searchlink = trailingslashit( get_option( 'home' ) ) . user_trailingslashit( $searchlink, 'category' );
	}
	return apply_filters( 'search_link', $searchlink, $query );
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10551 (wp_die() triggers block when using ModSecurity Core Rules) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 05 Aug 2009 21:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10551#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10551#comment:2/1249507158000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looking at &lt;a class="ext-link" href="http://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_Project#tab=About"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_Project#tab=About&lt;/a&gt; these rules are only Alpha quality.
&lt;/p&gt;
&lt;p&gt;
Do you have more info on what the rule is trying to prevent?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10551 (wp_die() triggers block when using ModSecurity Core Rules) updated</title>
      
        <dc:creator>cstrosser</dc:creator>

      <pubDate>Wed, 05 Aug 2009 20:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10551#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10551#comment:1/1249503706000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10551 (wp_die() triggers block when using ModSecurity Core Rules) created</title>
      
        <dc:creator>cstrosser</dc:creator>

      <pubDate>Wed, 05 Aug 2009 19:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10551</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10551/1249501648000000</guid>
      <description>&lt;p&gt;
wp_die() causes ModSecurity (using Core Rules), a commonly used Apache plugin, to throw a 406 error, blocking the message from displaying.
&lt;/p&gt;
&lt;p&gt;
This seems to be triggered by the fact that a 500 error is thrown.  I went and changed the default status code to 401 (Unauthorized) and it worked like a charm.  I just wonder if there is a better fix for this issue... or simply a better status code to use.
&lt;/p&gt;
&lt;p&gt;
Perhaps making a group of functions to make the error codes more focused.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die_auth( __('You do not have sufficient permissions to access this page.') );
/**
 * Exits WordPress with Unauthorized status code.
 *
 * @see wp_die()
 */
function wp_die_auth($message, $title = '') {
	wp_die( $message, $title, 401 );
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10157 (Plugin Upgrade Failure) updated</title>
      
        <dc:creator>ryan_accuwebhosting</dc:creator>

      <pubDate>Wed, 05 Aug 2009 18:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10157#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10157#comment:4/1249498578000000</guid>
      <description>&lt;p&gt;
yes, using the local host IP 127.0.0.1 worked. Thanks..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10550 (nofollow attribute added to comment_reply_link function) created</title>
      
        <dc:creator>seo-dave</dc:creator>

      <pubDate>Wed, 05 Aug 2009 18:51:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10550</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10550/1249498306000000</guid>
      <description>&lt;p&gt;
Wasn't sure if to list this as a defect or enhancement, it's a defect IMHO.
&lt;/p&gt;
&lt;p&gt;
Within wp-includes/comment-template.php there are nofollow attributes added to the "reply to comment" links.
&lt;/p&gt;
&lt;p&gt;
For search engine ranking reasons this is not a good idea. Since I've had trouble explaining this to non-SEO's (I'm a search engine optimization consultant) I'll explain the problem in detail also see &lt;a class="ext-link" href="http://wordpress.org/support/topic/287704?replies=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/287704?replies=1&lt;/a&gt; and &lt;a class="ext-link" href="http://codex.wordpress.org/Talk:Template_Tags/comment_reply_link"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Talk:Template_Tags/comment_reply_link&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The original use of nofollow was to stop PR/link benefit passing through a link in effect saving the PR/link benefit. For WordPress that meant you could by default add nofollow links to commenter's links and to some degree protect WordPress blog owners from link comment spammers.
&lt;/p&gt;
&lt;p&gt;
Google has recently reported &lt;a class="ext-link" href="http://www.mattcutts.com/blog/pagerank-sculpting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mattcutts.com/blog/pagerank-sculpting/&lt;/a&gt; that they now treat nofollow links differently, rather than protecting the PR/link benefit of a nofollow link, they delete the PR/link benefit!
&lt;/p&gt;
&lt;p&gt;
What this means to the average WordPress blog owner is a LOT of PR/link benefit is lost through nofollow links and a lot of this could be through the relatively new reply to comment links.
&lt;/p&gt;
&lt;p&gt;
If you have a highly commented site and have WordPress set to have  50 comments per page, that's 50 reply to comment links with nofollow added. Since Google now deletes the PR/link benefit that would normally go through those links (if it lacked nofollow) a page/site could easily loose over half it's PR/link benefit just because of implementing the reply to comment links!
&lt;/p&gt;
&lt;p&gt;
For those who don't understand PR/link benefit: PR/link benefit is shared equally through all links (internal and external) from a page, so if there are in total 100 links on a page and 50 are nofollow, 50% of the PR/link benefit from that page will now be deleted by Google, it used to go to the non nofollow links!
&lt;/p&gt;
&lt;p&gt;
In a perfect world we'd no longer use nofollow anywhere, unfortunately I don't have an easy to implement solution for this problem regarding commenter's links, but there is one for the nofollow attribute on the reply to comment links and that is remove the nofollow attribute or at least make it easier to remove at theme level (I understand there's a way, but I couldn't find it/figure it out).
&lt;/p&gt;
&lt;p&gt;
David Law
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10546 (Change VARCHAR keys to SMALLINT) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 05 Aug 2009 18:29:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10546#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10546#comment:3/1249496977000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10546#comment:2" title="Comment 2"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving to SMALLINT does not have a huge benefit and just makes things less obvious.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, it potentially makes things faster with large amounts of data, due to the much smaller index. But leaving this closed, as it goes against the general philosophy of WP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9642 (Database Schema Optimizations) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 05 Aug 2009 18:25:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9642#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9642#comment:24/1249496722000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9642#comment:23" title="Comment 23"&gt;dbuser123&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why is autoload in the options table not an enum field?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For legacy reasons and/or far away compatibility with other DB engines?
&lt;/p&gt;
&lt;p&gt;
Else, agreed. It should be a tinyint(1).
&lt;/p&gt;
&lt;p&gt;
D.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10115 (Support rel=canonical) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 05 Aug 2009 16:44:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10115#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10115#comment:1/1249490640000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11777" title="rel=canonical for singular pages. see #10115"&gt;[11777]&lt;/a&gt;) rel=canonical for singular pages. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10115" title="#10115: task (blessed): Support rel=canonical (closed: fixed)"&gt;#10115&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11777]: rel=canonical for singular pages. see #10115</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 05 Aug 2009 16:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11777</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11777/1249490631024036</guid>
      <description>&lt;p&gt;
rel=canonical for singular pages. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10115" title="#10115: task (blessed): Support rel=canonical (closed: fixed)"&gt;#10115&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9642 (Database Schema Optimizations) updated</title>
      
        <dc:creator>dbuser123</dc:creator>

      <pubDate>Wed, 05 Aug 2009 16:32:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9642#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9642#comment:23/1249489938000000</guid>
      <description>&lt;p&gt;
Why is autoload in the options table not an enum field?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10546 (Change VARCHAR keys to SMALLINT) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 05 Aug 2009 16:14:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10546#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10546#comment:2/1249488872000000</guid>
      <description>wontfix: &lt;p&gt;
-1 to this and closing as WONTFIX.
&lt;/p&gt;
&lt;p&gt;
Moving to SMALLINT does not have a huge benefit and just makes things less obvious.
&lt;/p&gt;
&lt;p&gt;
It makes it much harder for plugins to create something for themselves as you now need a central registry for the type information and makes it all less obvious.
&lt;/p&gt;
&lt;p&gt;
I don't see that there is a performance issue with the way we doing things now - if there is an actual performance issue (not a theoretical one) then there would be a case for investigating something different but the current solution has worked fine for posts and comment types for a long time.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #9642 (Database Schema Optimizations) updated</title>
      
        <dc:creator>dbuser123</dc:creator>

      <pubDate>Wed, 05 Aug 2009 16:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9642#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9642#comment:22/1249488685000000</guid>
      <description>&lt;p&gt;
Posted before but still not fixed.
&lt;/p&gt;
&lt;p&gt;
Another slow query (0.30s for a 50 MB comments table) I regularly encounter is this one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT comment_post_ID
FROM comments
WHERE LCASE(comment_author_email) = 'user@host.com' AND comment_subscribe='Y' AND comment_approved = '1'
GROUP BY comment_post_ID
&lt;/pre&gt;&lt;p&gt;
It would be better to always store e-mail as lowercase, stop using the LCASE function, and add an index on (comment_author_email, comment_post_ID).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10549 (Sticky not working with query_posts()) updated</title>
      
        <dc:creator>kingjeffrey</dc:creator>

      <pubDate>Wed, 05 Aug 2009 15:29:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10549#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10549#comment:1/1249486198000000</guid>
      <description>&lt;p&gt;
It appears that even &lt;code&gt;query_posts('showposts=9');&lt;/code&gt; returns unexpected results.  While sticky posts do rise to the top, the number of posts returned is 9 plus the sticky count.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10410 (Secondary RSS feeds use the wrong function to acquire post titles) updated</title>
      
        <dc:creator>kingjeffrey</dc:creator>

      <pubDate>Wed, 05 Aug 2009 15:18:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10410#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10410#comment:11/1249485496000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10549 (Sticky not working with query_posts()) created</title>
      
        <dc:creator>kingjeffrey</dc:creator>

      <pubDate>Wed, 05 Aug 2009 15:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10549</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10549/1249485426000000</guid>
      <description>&lt;p&gt;
Sticky posts do not always float to the top when using query_posts().
&lt;/p&gt;
&lt;p&gt;
Things work as expected in this simple case:
&lt;code&gt;query_posts('showposts=9');&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
But sticky posts cease to work as soon as you filter by category_name, like this:
query_posts('category_name=portfolio&amp;amp;showposts=9');
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10532 (Changes to hook image_make_intermediate_size) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 05 Aug 2009 06:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10532#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10532#comment:1/1249454010000000</guid>
      <description>&lt;p&gt;
Perhaps it would be better to add another filter before saving the new image in &lt;code&gt;image_resize()&lt;/code&gt;. This would allow more processing while the image is still in memory and also catch instances where the function is called directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11776]: Sanitize $include and $exclude in the gallery shortcode</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 05 Aug 2009 05:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11776</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11776/1249451760438073</guid>
      <description>&lt;p&gt;
Sanitize $include and $exclude in the gallery shortcode
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 05 Aug 2009 03:24:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:8/1249442687000000</guid>
      <description>&lt;p&gt;
Yes, was looking at ImageMagick too. It seems less web hosts offer it and generally it's available in addition to GD. Still the proper way would probably be to check for &lt;code&gt;imagerotate&lt;/code&gt; and &lt;code&gt;Imagick&lt;/code&gt;, then disable rotation if neither is present. Will also need to compare them (less server resources, better quality, faster).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Wed, 05 Aug 2009 00:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:7/1249432042000000</guid>
      <description>&lt;p&gt;
Image rotation is also available through another commonly-provided/easily-installed suite, ImageMagick. There is already a php class that is extremely simple to use and can be substituted in case the GD imagerotate is unavailable. See &lt;a class="ext-link" href="http://us2.php.net/manual/en/function.imagick-rotateimage.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us2.php.net/manual/en/function.imagick-rotateimage.php&lt;/a&gt; for details. I think it would be nice to fall back on the imagick version of rotation and whatever else imagick supports that can't be accomplished without a bundled GD library, rather than leaving such functions unavailable. ImageMagick can be easier to install in cases where the bundled GD library is not readily available as a package.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>