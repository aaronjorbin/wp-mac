<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43546 (Add to the privacy tools UX a means to export personal data by ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43546#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43546#comment:5/1522972631567065</guid>
      <description>&lt;p&gt;
Worked with @allendav, @mikejolley, and @karmatosed on the export screen. &lt;a class="missing attachment"&gt;Data Export screen.png&lt;/a&gt; shows what the Personal Data Export screen should look like, while &lt;a class="missing attachment"&gt;data button flow.png&lt;/a&gt; and &lt;a class="missing attachment"&gt;data flow.png&lt;/a&gt; go into specific flows around the downloading and emailing of data exports.
&lt;/p&gt;
&lt;p&gt;
Let me know if y'all have any questions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43706 (Email with link to change admin email does not include proposed new ...) created</title>
      
        <dc:creator>sshanky</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43706</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43706/1522972582027513</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39112" title="#39112: defect (bug): Email address change notification doesn't include the new email address (closed: fixed)"&gt;#39112&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This can be precarious -- I've received this note twice since locking out the previous administrator (not sure how he is attempting to change the address yet) and there's no way to determine who is requesting the admin email change. The email with the link to change the admin email follows.
&lt;/p&gt;
&lt;p&gt;
Howdy [name],
&lt;/p&gt;
&lt;p&gt;
You recently requested to have the administration email address on
your site changed.
&lt;/p&gt;
&lt;p&gt;
If this is correct, please click on the following link to change it:
&lt;a class="ext-link" href="https://siteurl.com/wp-admin/options.php?adminhash=[hash"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://siteurl.com/wp-admin/options.php?adminhash=[hash&lt;/a&gt;]
&lt;/p&gt;
&lt;p&gt;
You can safely ignore and delete this email if you do not want to
take this action.
&lt;/p&gt;
&lt;p&gt;
This email has been sent to [current admin email]
&lt;/p&gt;
&lt;p&gt;
Regards,
All at sitename
&lt;a class="ext-link" href="http://siteurl.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://siteurl.com&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Download data flow.png attached to Ticket #43546</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/Download%20data%20flow.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/Download%20data%20flow.png/1522972516928062</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Email data button flow.png attached to Ticket #43546</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:55:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/Email%20data%20button%20flow.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/Email%20data%20button%20flow.png/1522972504017344</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Personal Data Export screen.png attached to Ticket #43546</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/Personal%20Data%20Export%20screen.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/Personal%20Data%20Export%20screen.png/1522972466891694</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:3/1522972223151301</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43700#comment:2" title="Comment 2"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How has this been implemented on WordPress.org?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've not looked at it personally but the code is here: &lt;a class="ext-link" href="https://meta.trac.wordpress.org/browser/sites/trunk/wordpress.org/public_html/wp-content/themes/pub/wporg-login"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/browser/sites/trunk/wordpress.org/public_html/wp-content/themes/pub/wporg-login&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 23:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:6/1522969667006922</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43602#comment:4" title="Comment 4"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43602#comment:3" title="Comment 3"&gt;allendav&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
We discussed this a bit more on Slack.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;user contacts admin to request erasure of their data (can be by email, phone call, postal mail, etc)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
For registered users it makes sense to have a button on the Profile screen that would trigger the verification email.
&lt;/p&gt;
&lt;p&gt;
For commenters (no-priv users) we may need to add some minimal UI to be able to trigger the verification email themselves from the front-end. Alternatively can leave these requests to be made through the site's contact form or other method.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could we make a non-admin UX a ticket separate from the admin UX please? It will be a fair bit of work itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39318.4.patch attached to Ticket #39318</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Thu, 05 Apr 2018 21:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39318/39318.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39318/39318.4.patch/1522964052658333</guid>
      <description>&lt;p&gt;
Fix indentation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39318.3.patch attached to Ticket #39318</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Thu, 05 Apr 2018 21:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39318/39318.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39318/39318.3.patch/1522963602890729</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39318 (Assign a theme when creating a site (Multisite)) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Thu, 05 Apr 2018 21:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39318#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39318#comment:8/1522963581743402</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @flixos90,
&lt;/p&gt;
&lt;p&gt;
Thank you for your review.
&lt;/p&gt;
&lt;p&gt;
I have updated my patch to fit your suggestions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43310 (Generic "HTTP Error" when uploading PDFs via Media area) updated</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Thu, 05 Apr 2018 21:21:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43310#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43310#comment:8/1522963277429039</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding some additional observations: This apparently centers around the thumbnail creation (GD module)... or lack there of.
&lt;/p&gt;
&lt;p&gt;
Ironically, I found this thread (for a plugin) that may shed some light on this issue:
&lt;a class="ext-link" href="https://wordpress.org/support/topic/pdf-thumbnails-not-generated-php7-0/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/pdf-thumbnails-not-generated-php7-0/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I do have the test environment set up for additional testing, so if one of the devs (@johnbillion, perhaps?) needs access, see my comment above. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 20:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:23/1522958975115004</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by allendav. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522958973000210"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 20:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:22/1522958831297559</guid>
      <description>&lt;p&gt;
@azaozz - I added IPV4 and IPV6 anonymization and unit tests for the lot. I also modified the domains to example.com and the time stamp to a more appropriate default
&lt;/p&gt;
&lt;p&gt;
To run the unit tests, run
&lt;/p&gt;
&lt;p&gt;
phpunit tests/phpunit/tests/functions/anonymization.php
&lt;/p&gt;
&lt;p&gt;
Please let me know if adding a unit test file will be a no-no for a minor release and i can add these somewhere else
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43545.diff attached to Ticket #43545</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 20:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43545/43545.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43545/43545.diff/1522958617874243</guid>
      <description>&lt;p&gt;
Adds IPV4 and IPV6 anonymization functions and unit tests for everything
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24672 (Remove final from WP_Post class) updated</title>
      
        <dc:creator>Andy Schmidt</dc:creator>

      <pubDate>Thu, 05 Apr 2018 19:05:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24672#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24672#comment:26/1522955153840251</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24672#comment:21" title="Comment 21"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
when a plugin adds a method that returns unescaped data and handles the escaping later and later core adds a method with the same name where it is returned escaped
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds more like "name spacing" issue? That same potential exists if a plug-in creates a regular function in the root name space and later WordPress adding a function by that same name?
&lt;/p&gt;
&lt;p&gt;
If developers add methods or properties, it is their responsibility to choose member names for which there is a reasonable expectation that they are highly unique to avoid future name clashes.
&lt;/p&gt;
&lt;p&gt;
And as far as escaping - I've come across filters/hooks in WordPress that expressly instruct developers that the return value should be escaped. So the potential of someone not reading carefully (or copying imperfect code samples somewhere) and NOT escaping the return values is also not specific to the ability to extending the WP_Post class?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43705 (Respect custom taxonomy term order on admin edit page when show_ui and ...) updated</title>
      
        <dc:creator>seanleavey</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:44:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43705#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43705#comment:1/1522953878648581</guid>
      <description>&lt;p&gt;
It should be added that using the &lt;code&gt;get_the_terms&lt;/code&gt; filter in &lt;code&gt;get_the_terms&lt;/code&gt; in &lt;code&gt;wp-includes/category-template.php&lt;/code&gt; does not allow this behaviour to be added via a plugin (without completely requerying the terms), because the filter does not supply the &lt;code&gt;term_order&lt;/code&gt; column from the &lt;code&gt;term_relationships&lt;/code&gt; database table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24672 (Remove final from WP_Post class) updated</title>
      
        <dc:creator>Andy Schmidt</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24672#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24672#comment:25/1522953874773182</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24672#comment:22" title="Comment 22"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Beyond that if two plugins subclass a &lt;code&gt;WP_Post&lt;/code&gt; and both plugins want to use in the same context — such as in a theme template page — only one of them can win.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not certain that I understand your concern (but that might be due to my lack of experience).
&lt;/p&gt;
&lt;p&gt;
The possibility of an ill-behaved plug-in interfering with another plug-in already exists today with the "posts_pre_query" hook, and always does so in many other hooks.
&lt;/p&gt;
&lt;p&gt;
Specifically, if the first plug-in decides it needs to populate the $posts array with WP_Post instances - and the next plug-in simply assumes to be the "only one" and  DISCARDS the existing array and returns a hard-coded "null", or substitutes its own array - then it doesn't matter if the so discarded post instances had been created by the native WP_Post class or any subclass thereof?
&lt;/p&gt;
&lt;p&gt;
Being able to properly sub-class WP_Post does not alter the potential of a conflict?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;That said&lt;/strong&gt;, I am more and more concerned about my prior advocacy for this.  It only works to subclass WP_Post when there can be only one, e.g. that the code is in the theme or specific to a site.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If at any given time a plug-in or theme decides to hook into "posts_pre_query" and conditionally instantiate its own WP_Post subclass to emulate external data as "posts", or to handle a certain Custom-Post-Type, then it would do so after narrowly defining the case in which this occurs.
&lt;/p&gt;
&lt;p&gt;
That wouldn't prevent a different plug-in to equally focus on its particular type of posts before creating its specialized WP_Post subclass.
&lt;/p&gt;
&lt;p&gt;
Once the different instances have been created by their respective plug-ins, the only thing that matters is that they will be recognized as "instance of" WP_Post throughout the subsequent core code. This way method calls and property references by the core will continue to function throughout the subsequent code like as if they were instances of the native WP_Post class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43705 (Respect custom taxonomy term order on admin edit page when show_ui and ...) created</title>
      
        <dc:creator>seanleavey</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:40:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43705/1522953616326712</guid>
      <description>&lt;p&gt;
This is identical to the report in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40436" title="#40436: defect (bug): Custom taxonomy terms order lost under wp-admin/post.php edit action ... (new)"&gt;#40436&lt;/a&gt;, but that has been awaiting review for 12 months and might have fallen under the radar due to being set to version 4.7. The issue is still present in 4.9.5. The order of terms is not respected on e.g. the admin post list. It displays alphabetically even when &lt;code&gt;sort&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;register_taxonomy&lt;/code&gt; (in addition to &lt;code&gt;show_ui&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; to make it show on the post list).
&lt;/p&gt;
&lt;p&gt;
The order is not respected because the call to &lt;code&gt;wp_get_object_terms&lt;/code&gt; via &lt;code&gt;column_default&lt;/code&gt; in &lt;code&gt;WP_Posts_List_Table&lt;/code&gt; does not supply an &lt;code&gt;$args&lt;/code&gt; array telling it how to sort. WordPress should probably supply this array with the &lt;code&gt;order_by&lt;/code&gt; key set if the taxonomy's &lt;code&gt;sort&lt;/code&gt; attribute is &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43704 (pre_option_{$option} filter is case sensitive although options are not.) created</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:38:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43704</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43704/1522953524168035</guid>
      <description>&lt;p&gt;
I noticed the filter "pre_option_{$option}" for myOption wouldn't filter get_option('MYOption') for example, yet get_option(name) and MySql in general does not seem to care what case the option is. Perhaps it should also do pre_option_(strtolower($option)) when necessary?
&lt;/p&gt;
&lt;p&gt;
Was there a reason this particular filter is case-sensitive?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 05 Apr 2018 18:19:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:102/1522952362306684</guid>
      <description>&lt;p&gt;
Thanks @chrislema. I really like the concept. I think you're right to include some more information and clarify the whole process. Let me take this concept and try out a couple ideas!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43703 (Edit Category screen - Error shown in green and admin notice not ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43703#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43703#comment:1/1522951026762841</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43703/43703.diff" title="Attachment '43703.diff' in Ticket #43703"&gt;43703.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43703/43703.diff" title="Download"&gt;​&lt;/a&gt; is a suggested patch that:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;let's the admin notice have the &lt;code&gt;error&lt;/code&gt; class (displayed as red) if the &lt;code&gt;$msg&lt;/code&gt; index is 5 (for not updated), else the &lt;code&gt;updated&lt;/code&gt; class (displayed as green).
&lt;/li&gt;&lt;li&gt;adds the &lt;code&gt;notice is-dismissible&lt;/code&gt; classes to the admin notice.
&lt;/li&gt;&lt;li&gt;escapes the message output.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43703.diff attached to Ticket #43703</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43703/43703.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43703/43703.diff/1522950612859605</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>error-red.jpg attached to Ticket #43703</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43703/error-red.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43703/error-red.jpg/1522950211504334</guid>
      <description>&lt;p&gt;
Here's the error shown in red, as expected
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>error-green.jpg attached to Ticket #43703</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43703/error-green.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43703/error-green.jpg/1522950159967714</guid>
      <description>&lt;p&gt;
The update error is currently shown in green.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>dismissible.jpg attached to Ticket #43703</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:41:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43703/dismissible.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43703/dismissible.jpg/1522950115552343</guid>
      <description>&lt;p&gt;
Dismissible admin notice
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43703 (Edit Category screen - Error shown in green and admin notice not ...) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43703</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43703/1522949962874689</guid>
      <description>&lt;p&gt;
When we edit a category, on the &lt;em&gt;Edit Category&lt;/em&gt; screen, then there are two things that need adjustments:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The &lt;code&gt;"Category updated."&lt;/code&gt; admin notice is currently not dismissible.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;"Category not updated."&lt;/code&gt; admin notice is currently shown in green (not red).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
To replicate part 2, one can e.g. disable JS and update the term without a name.
&lt;/p&gt;
&lt;p&gt;
Example location:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/wp-admin/term.php?taxonomy=category&amp;amp;tag_ID=123
&lt;/pre&gt;&lt;p&gt;
The corresponding part that displays the message for categories, tags and other terms:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/edit-tag-form.php#L73-L82"&gt;https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/edit-tag-form.php#L73-L82&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:21/1522949609923120</guid>
      <description>&lt;p&gt;
Instead of example.test, could we use example.com or example.org per &lt;a class="ext-link" href="https://www.iana.org/domains/reserved"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.iana.org/domains/reserved&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:84/1522949601751828</guid>
      <description>&lt;p&gt;
In order to get you design feedback could we have a little video or screenshot of the latest patch please to allow all designers, even those that don't run patches to see? Also can we have screens of all the states, for example closed and open actions.
&lt;/p&gt;
&lt;p&gt;
Once we have those, we can ensure you get feedback from the team. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:83/1522949238970850</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by boemedia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1522949237000141"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 05 Apr 2018 17:18:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:26/1522948730372920</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:25" title="Comment 25"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:24" title="Comment 24"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
43443.4.diff looks good, but weren't you preparing another (larger) patch on gh together with @allendav?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The larger patch (on gh at &lt;a class="ext-link" href="https://github.com/allendav/wp-privacy-requests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/allendav/wp-privacy-requests&lt;/a&gt; ) is the next layer up - which uses this patch to do its work. This patch can land by itself. See the README.md on that repo in particular - it prompts you to install 43443.4.diff in order to work with the repo.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43702 (Default Posts &amp; Pages screen when there is no content) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43702#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43702#comment:1/1522946490986169</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot 2018-04-06 00.28.29.png attached to Ticket #43702</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43702/Screenshot%202018-04-06%2000.28.29.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43702/Screenshot%202018-04-06%2000.28.29.png/1522946228020099</guid>
      <description>&lt;p&gt;
Enhanced Default Interface
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screenshot 2018-04-06 00.28.05.png attached to Ticket #43702</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:36:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43702/Screenshot%202018-04-06%2000.28.05.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43702/Screenshot%202018-04-06%2000.28.05.png/1522946207459280</guid>
      <description>&lt;p&gt;
Current Default Interface
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>woocommerce-add-new-product.png attached to Ticket #43702</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43702/woocommerce-add-new-product.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43702/woocommerce-add-new-product.png/1522946141707824</guid>
      <description>&lt;p&gt;
WooCommerce Default Product
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43702 (Default Posts &amp; Pages screen when there is no content) created</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43702</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43702/1522946104462803</guid>
      <description>&lt;p&gt;
The default screen people see when they first visit the Posts, Pages, etc., dashboard sections is quite uninspiring.
&lt;/p&gt;
&lt;p&gt;
Taking a cue from WooCommerce's default product screen (screenshot included), we can enhance the default Posts &amp;amp; Pages screens to make it a bit more welcoming to new users.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:29/1522946056357694</guid>
      <description>&lt;p&gt;
Announce it on the Make Themes blog with plenty of advanced notice.  Within the next week is fine.  This is set for a 5.0 milestone.  That's plenty of time for theme authors to get on board.  If a theme looks a little off, WordPress.org has a built-in forum and ratings system for users to communicate with theme authors.
&lt;/p&gt;
&lt;p&gt;
But, for the love of all that is holy, please don't add any extra styles (inline or otherwise) that I have to disable in my themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0001-Make-the-read_private-cap-accessible-over-the-REST-A.patch attached to Ticket #43701</title>
      
        <dc:creator>twoelevenjay</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43701/0001-Make-the-read_private-cap-accessible-over-the-REST-A.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43701/0001-Make-the-read_private-cap-accessible-over-the-REST-A.patch/1522945206882075</guid>
      <description>&lt;p&gt;
Amends /wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php line 2286 to allow reading of private post types when current user caps only allow reading the private post type but not editing it.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43701 (Make the "read_private” cap accessible over the REST API) updated</title>
      
        <dc:creator>twoelevenjay</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43701#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43701#comment:1/1522944906224533</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:2/1522944847815089</guid>
      <description>&lt;p&gt;
How has this been implemented on WordPress.org?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43701 (Make the "read_private” cap accessible over the REST API) created</title>
      
        <dc:creator>twoelevenjay</dc:creator>

      <pubDate>Thu, 05 Apr 2018 16:02:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43701</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43701/1522944141241094</guid>
      <description>&lt;p&gt;
When it comes to the "private" status of a post type, WordPress has a separate capability for editing post types and reading private post types. It so happens that default user roles and capabilities do not include one user who can only read a private post type without also having the ability to edit the post type.
&lt;/p&gt;
&lt;p&gt;
When adding the "status" parameter to a rest route, the &lt;code&gt;WP_REST_Posts_Controller&lt;/code&gt; checks to see if the current user can edit the private post type. If s user role is set to view a private post type but not edit the post type then a rest route intended to return a private post type on GET for read only purposes will fail.
&lt;/p&gt;
&lt;p&gt;
I propose amending &lt;code&gt;/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php&lt;/code&gt; line &lt;code&gt;2286&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Changing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( current_user_can( $post_type_obj-&amp;gt;cap-&amp;gt;edit_posts ) ) {
&lt;/pre&gt;&lt;p&gt;
to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( current_user_can( $post_type_obj-&amp;gt;cap-&amp;gt;edit_posts ) || current_user_can( $post_type_obj-&amp;gt;cap-&amp;gt;read_private_posts ) ) {
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43685 (wp post meta missing options) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:33:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43685#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43685#comment:2/1522942428364903</guid>
      <description>&lt;p&gt;
By the way, you probably want &lt;code&gt;wp post meta get 203 _thumbnail_id&lt;/code&gt; which will give you just the meta field value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:1/1522941320966496</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700/1522941292233813</guid>
      <description>&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41692" title="I18N: Allow the login screen language to be specified via a `wp_lang` ..."&gt;[41692]&lt;/a&gt; it's possible to control the language of the login screen using the &lt;code&gt;wp_lang&lt;/code&gt; query variable (eg. &lt;code&gt;wp-login.php?wp_lang=it_IT&lt;/code&gt;). This is a hidden feature that's only used by the interim login modal.
&lt;/p&gt;
&lt;p&gt;
A language switcher should be introduced on the login screen that makes use of this so users can use the login screen, the password reset screens, and the registration screen in their own language. The behaviour would be the same as the language choosers that are used elsewhere in core, for example on the General Settings screen and on the Multisite registration screens.
&lt;/p&gt;
&lt;p&gt;
One thing that needs to be considered is how the language persists between screens, how to persist POSTed values such as &lt;code&gt;redirect_to&lt;/code&gt;, and whether it should persist in user meta once the user successfully logs in. Suggestions welcome.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43699 (if i remove image from a post &gt;  wp-json return it again as a media) updated</title>
      
        <dc:creator>adalenv</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:04:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43699#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43699#comment:1/1522940688220146</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43699 (if i remove image from a post &gt;  wp-json return it again as a media) created</title>
      
        <dc:creator>adalenv</dc:creator>

      <pubDate>Thu, 05 Apr 2018 15:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43699/1522940660296346</guid>
      <description>&lt;p&gt;
i got this response from
&lt;/p&gt;
&lt;p&gt;
wp-json/wp/v2/media?parent=7 but i have deleted image from post and from media:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[
    {
        "id": 19,
        "date": "2018-04-04T09:16:41",
        "date_gmt": "2018-04-04T09:16:41",
        "guid": {
            "rendered": "http://example.com/wp-content/uploads/2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png"
        },
        "modified": "2018-04-04T09:16:41",
        "modified_gmt": "2018-04-04T09:16:41",
        "slug": "a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646",
        "status": "inherit",
        "type": "attachment",
        "link": "http://example.com/2018/04/04/lorem-ipsum-dolor-sit-amet-consectetur-adipisicing-elit-minus-dicta-ad-explicabo-ipsa-repellat-atque-dolore-voluptatibus-doloribus-a-molestias/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646/",
        "title": {
            "rendered": "a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646"
        },
        "author": 1,
        "comment_status": "open",
        "ping_status": "closed",
        "template": "",
        "meta": [],
        "description": {
            "rendered": "&amp;lt;p class=\"attachment\"&amp;gt;&amp;lt;a href='http://example.com/wp-content/uploads/2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png'&amp;gt;&amp;lt;img width=\"75\" height=\"17\" src=\"http://example.com/wp-content/uploads/2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png\" class=\"attachment-medium size-medium\" alt=\"\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;\n"
        },
        "caption": {
            "rendered": ""
        },
        "alt_text": "",
        "media_type": "image",
        "mime_type": "image/png",
        "media_details": {
            "width": 75,
            "height": 17,
            "file": "2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png",
            "sizes": {},
            "image_meta": {
                "aperture": "0",
                "credit": "",
                "camera": "",
                "caption": "",
                "created_timestamp": "0",
                "copyright": "",
                "focal_length": "0",
                "iso": "0",
                "shutter_speed": "0",
                "title": "",
                "orientation": "0",
                "keywords": []
            }
        },
        "post": 17,
        "source_url": "http://example.com/wp-content/uploads/2018/04/a5d13887-7884-4b2b-b7fc-efa111e2b024_image5667478565766995646.png",
        "_links": {
            "self": [
                {
                    "href": "http://example.com/wp-json/wp/v2/media/19"
                }
            ],
            "collection": [
                {
                    "href": "http://example.com/wp-json/wp/v2/media"
                }
            ],
            "about": [
                {
                    "href": "http://example.com/wp-json/wp/v2/types/attachment"
                }
            ],
            "author": [
                {
                    "embeddable": true,
                    "href": "http://example.com/wp-json/wp/v2/users/1"
                }
            ],
            "replies": [
                {
                    "embeddable": true,
                    "href": "http://example.com/wp-json/wp/v2/comments?post=19"
                }
            ]
        }
    }
]
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38332 ("Cheating" message insults; needs changing) updated</title>
      
        <dc:creator>sevensoutbill</dc:creator>

      <pubDate>Thu, 05 Apr 2018 14:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38332#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38332#comment:52/1522938675867316</guid>
      <description>&lt;p&gt;
Hi John. Will do. Thanks for setting me straight.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38332#comment:51" title="Comment 51"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@sevensoutbill Please keep your comments constructive, otherwise you waste your own time and that of others.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 05 Apr 2018 14:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:44/1522938325450985</guid>
      <description>&lt;p&gt;
Of interest:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/anonymous-wordpress-plugin-updates/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/anonymous-wordpress-plugin-updates/&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/5066"&gt;https://core.trac.wordpress.org/ticket/5066&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As a random thought - a centralised database of all WP plugin/theme installs in the world is presumably quite interesting to quite a lot of people, from script kiddies right up to nation states.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 05 Apr 2018 14:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:43/1522937341176697</guid>
      <description>&lt;p&gt;
@DavidAnderson I tend to agree. I think its pretty clear that as a package this telemetry is personal data as defined by the GDPR - but it is necessary to make the distinction, because we are building a system here.
&lt;/p&gt;
&lt;p&gt;
I guess I should explain a bit what I am thinking: maybe an option, in WordPress might say "this is a personal website | business website". A business website - this never applies. Go for your life. Collect and store away... well, actually, not in my view (I say why not be transparent about this anyway, regardless of the legal case?!).
&lt;/p&gt;
&lt;p&gt;
A personal website - that is when the IP and URL etc become... well problematic. By problematic, I think, yes its personal data. So we'd need to know where its being stored, and by whom, etc etc.
&lt;/p&gt;
&lt;p&gt;
But probably, regardless of which framework we are applying, I'd like to know this anyway. It should not be a mystery.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38332 ("Cheating" message insults; needs changing) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38332#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38332#comment:51/1522936445083417</guid>
      <description>&lt;p&gt;
@sevensoutbill Please keep your comments constructive, otherwise you waste your own time and that of others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:42/1522936354369091</guid>
      <description>&lt;p&gt;
@robscott Is there really still an open question that a large number of website URLs will be classified by the GDPR as PII? The GDPR text says:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
‘personal data’ means any information relating to an identified or identifiable natural person (‘data subject’); an identifiable natural person is one who can be identified, directly or indirectly
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see any ambiguity there. They've written "directly or indirectly" to clarify that it doesn't matter what means are being used to perform the identification (i.e. we can't say "ah, but we'd have to manually browse their website to read their 'About' page to do it, and that's hard to automate") - they've covered that. They don't specify particular types of data - once *any* of the data can lead to identification, *all* the data is then PII ("any information relating to [a person]").
&lt;/p&gt;
&lt;p&gt;
But on your major point - I'm very interested in that too. How does wordpress.org storing (assuming I've understood rightly) your number of users, and site URL, and various other things, and explicitly linking those to your site URL, and storing it all, without anonymization, do anything for security, given that the security updates mechanism in WP is pull (polling) based and has no facility at all for push-based? (The 'automatic' updates on core and sometimes on plugins are still pull/polling based).
&lt;/p&gt;
&lt;p&gt;
The GDPR is explicitly designed to force granularity - it's not a by-product, it's one of their core aims. If you get piece of data A as something necessary for purpose X, then you can't process it for purpose Y - that needs separate/sufficient justification before your allowed to touch it, even if it's stored on your servers and you got it legitimately for purpose X. On my understanding of the WP updates mechanism (code which on the client side I've studied and interacted with at some length), the site URL is never used in the updates response at all. And things like the number of registered users certainly make zero difference to the returned results. So things of that sort surely need explicit opt-in, even if other things are deemed essential to the normal operation of WP (on which I don't have a specific opinion).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42678 (Add documentation for custom-header.js) updated</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42678#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42678#comment:5/1522935583058392</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42962" title="Docs: Fix JS Docs for `custom-header.js`.
Amends [42385].
Props ..."&gt;42962&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Fix JS Docs for &lt;code&gt;custom-header.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Amends &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42385" title="Docs: Improve JS Docs for `custom-header.js`.
The `custom-header.js` ..."&gt;[42385]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props herregroen.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42678" title="#42678: enhancement: Add documentation for custom-header.js (closed: fixed)"&gt;#42678&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42962]: Docs: Fix JS Docs for `custom-header.js`.  Amends [42385].  Props ...</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42962/1522935582588053</guid>
      <description>&lt;p&gt;
Docs: Fix JS Docs for &lt;code&gt;custom-header.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Amends &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42385" title="Docs: Improve JS Docs for `custom-header.js`.
The `custom-header.js` ..."&gt;[42385]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props herregroen.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42678" title="#42678: enhancement: Add documentation for custom-header.js (closed: fixed)"&gt;#42678&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:56/1522935396235328</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is particular important, as grunt watch has awful performance in any environment that uses a VM and shared folders.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not if you run it on the host machine. Part of the opposition of VVV to auto running &lt;code&gt;grunt watch&lt;/code&gt; is that not every user is interested in developing core, yet an instance is installed out of the box. Running grunt watch in the provisioner would add overhead to every VVV users installs unless they disabled the core dev sites and imo that's an unreasonable ask.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Automated development environment setup scripts. The Gutenberg setup script walks the user through setting up their development environment. It would obviously need to be written to work on Windows, too, before it was a valid option for Core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I began work on a VVV tool to do this automatically once Vagrant/VirtualBox were installed:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/tomjn/vvv-cd-installer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tomjn/vvv-cd-installer&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
the goal being that you could copy it off a USB drive and run it, and it would step through every stage of setting up an environment: &lt;a class="ext-link" href="https://github.com/tomjn/vvv-cd-installer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tomjn/vvv-cd-installer&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But I see no reason the docker call in the GB script couldn't be a &lt;code&gt;git clone ... cd vvv.. vagrant up --provision&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
As an aside, if we're moving more to webpack, should we not make use of npm scripts so that we maintain the same commands regardless of the tools behind the scenes? &lt;code&gt;npm run watch&lt;/code&gt; &lt;code&gt;npm run build&lt;/code&gt; etc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:41/1522935162403005</guid>
      <description>&lt;p&gt;
Here is what is stored: &lt;a class="ext-link" href="https://github.com/gdpr-compliance/info/blob/master/Synched-info.md"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/gdpr-compliance/info/blob/master/Synched-info.md&lt;/a&gt; @DavidAnderson - I think you and I are asking the same thing... why? Why is it being stored?
&lt;/p&gt;
&lt;p&gt;
From a GDPR conversation in Slack, yesterday, I am given to understand the answer to this question is "security".
&lt;/p&gt;
&lt;p&gt;
Some clarification on that would be helpful.
&lt;/p&gt;
&lt;p&gt;
Further - regarding data storage, who (data controller) and where (outside the EU?) is this data stored would appear to be very important under GDPR.
&lt;/p&gt;
&lt;p&gt;
But only - only - if this is Personal Data. Which is the root question.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:30:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:40/1522935050689547</guid>
      <description>&lt;p&gt;
I've looked at the list of tickets tagged for GDPR, but don't see one concerning the right to download all PII held by the WP Foundation. Based on &lt;a href="https://core.trac.wordpress.org/ticket/43492#comment:23"&gt;https://core.trac.wordpress.org/ticket/43492#comment:23&lt;/a&gt;, it appears that there is PII being stored (at least in the cases of stored website URLs that can be visited to identify a specific person whom the website belongs to). What will be the mechanism for site owners to be able to exercise the GDPR's mandated right to download that PII? Does a new ticket need to be created to track that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:23:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:39/1522934636435771</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The IP / domain is needed to actually... well do the WordPress update!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not the case - updates are pulled, not pushed. wordpress.org doesn't need to know or care about which site is asking the question about update availability for specified plugins, in order to advise on that availability. For the URL/domain, you can verify that by editing the updates check routine in WP core to send fake info. For the IP, you can verify it by connecting a site behind a firewall that does not allow incoming connections (e.g. a localhost site) - updates still work.
&lt;/p&gt;
&lt;p&gt;
BTW - back in &lt;a href="https://core.trac.wordpress.org/ticket/43492#comment:23"&gt;https://core.trac.wordpress.org/ticket/43492#comment:23&lt;/a&gt; some things are marked as "not stored". Presumably that means that the other things are currently stored? So, wordpress.org have a database that records things like what plugins, and many users, every WP site in the world (that makes updates checks) has, indexed by site URL? Or are some of the things not marked as "not stored" in fact, not stored?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40428 (Introduce best practices to hide CSS generated content from assistive ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:23:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40428#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40428#comment:11/1522934612554670</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1522934610000210"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:55/1522934364889028</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
@omarreiss has done an amazing job keeping the patch up to date, lets not burden him further.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely, lets move forward with this! I mentioned the CSS idea this late on the ticket because thats when I thought of it and certainly don't want to block this work! Lets discuss further in chats or another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38332 ("Cheating" message insults; needs changing) updated</title>
      
        <dc:creator>sevensoutbill</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38332#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38332#comment:50/1522934321936491</guid>
      <description>&lt;p&gt;
Wow, this is a ticket? What a waste of time. People find an response from an automated script, insulting? Haha. Thanks, but I'll be writing my own error messages that actually help make using WordPress fun.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2018-04-05 14_57_00-Edytuj wpis ‹ Nolife Style — WordPress.jpg attached to Ticket #43642</title>
      
        <dc:creator>marcinmichno</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43642/2018-04-05%2014_57_00-Edytuj%20wpis%20%E2%80%B9%20Nolife%20Style%20%E2%80%94%20WordPress.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43642/2018-04-05%2014_57_00-Edytuj%20wpis%20%E2%80%B9%20Nolife%20Style%20%E2%80%94%20WordPress.jpg/1522933379564628</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43642 (Gallery titles and labels erasing) updated</title>
      
        <dc:creator>marcinmichno</dc:creator>

      <pubDate>Thu, 05 Apr 2018 13:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43642#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43642#comment:3/1522933355902882</guid>
      <description>&lt;p&gt;
Hello @antpb
Desired goal is to create gallery without any titles and labels.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:8/1522933038891858</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;43632.diff&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add a musical note ASCII character
&lt;/li&gt;&lt;li&gt;Add a screen-reader-text to help to understand what is this text
&lt;/li&gt;&lt;li&gt;Add some paddings to the musical quote from Hello Dolly (see screenshots above)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Cheers,
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43632.diff attached to Ticket #43632</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43632/43632.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43632/43632.diff/1522932887190827</guid>
      <description>&lt;p&gt;
Add a musical note, screen-reader-text and some padding to the musical quote from Hello Dolly
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43632diff-nice-behaviour.png attached to Ticket #43632</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43632/43632diff-nice-behaviour.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43632/43632diff-nice-behaviour.png/1522932862510879</guid>
      <description>&lt;p&gt;
43632.diff full correction including paddings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43632diff-bad-behaviour.png attached to Ticket #43632</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43632/43632diff-bad-behaviour.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43632/43632diff-bad-behaviour.png/1522932829344951</guid>
      <description>&lt;p&gt;
In 43632.diff, I noticed there is a missing padding left (or right, depends on rtl/ltr) on widget admin screen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43698 (4.9.5 broke site behind load balancer, forwards to localhost) updated</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43698#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43698#comment:3/1522931299031375</guid>
      <description>&lt;p&gt;
spoke too soon, all kinds of badly formatted page if connecting to load balancer, despite ssl insecure content fixer. Reverted to 4.9.4 and undid changes and problem went away.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40020 (Customizer fails to load in Safari due to X-Origin Header mismatch) updated</title>
      
        <dc:creator>Oclair</dc:creator>

      <pubDate>Thu, 05 Apr 2018 12:06:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40020#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40020#comment:7/1522929984342840</guid>
      <description>&lt;p&gt;
Hey all, so from my understanding using CSP with nginx (an appropriate security measure to undertake) breaks customizer for safari (in my case Safari 11.1).  This creates an incentive to make wordpress installs insecure.
&lt;/p&gt;
&lt;p&gt;
Closing this ticket sends the wrong message to everyone.
&lt;/p&gt;
&lt;p&gt;
I am a server admin and am affected by this bug, CSP is very important, please make sure features do not break security.
&lt;/p&gt;
&lt;p&gt;
thanks for your contributions to opensource!
OC
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43698 (4.9.5 broke site behind load balancer, forwards to localhost) updated</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Thu, 05 Apr 2018 11:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43698#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43698#comment:2/1522926225730276</guid>
      <description>&lt;p&gt;
I was able to work around this and update by changing my wp-config directives to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('WP_SITEURL', 'https://' . $_SERVER['SERVER_NAME']);
define('WP_HOME', 'https://' . $_SERVER['SERVER_NAME']);
&lt;/pre&gt;&lt;p&gt;
And also adding a param to my nginx conf to properly account for variable server names:
&lt;/p&gt;
&lt;pre class="wiki"&gt;fastcgi_param SERVER_NAME $host;
&lt;/pre&gt;&lt;p&gt;
without both of the above, my particular setup would not work properly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42937 (Success Message should display on insertion of new category in ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:47:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42937#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42937#comment:10/1522925247871629</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>42937.4.diff attached to Ticket #42937</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42937/42937.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42937/42937.4.diff/1522924847153045</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:39:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:15/1522924778092968</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522924775000300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1658 ("Submitting draft for review" model) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:25:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1658#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1658#comment:10/1522923950522777</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by mindmantra. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1522923948000118"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:25/1522922766449900</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:24" title="Comment 24"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
43443.4.diff looks good, but weren't you preparing another (larger) patch on gh together with @allendav?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27399 (Filter the HTML output of wp_get_attachment_image) updated</title>
      
        <dc:creator>thomas.mery</dc:creator>

      <pubDate>Thu, 05 Apr 2018 10:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27399#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27399#comment:28/1522922727587018</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
any chance to see this merged before 5.0 ?
&lt;/p&gt;
&lt;p&gt;
as it seems to be the case for others (I gather) this would be very convenient to have a one fit all lazy load solution that filters images html outputs
&lt;/p&gt;
&lt;p&gt;
rather than having to have a separate solution targeting &lt;code&gt;attributes&lt;/code&gt; via the &lt;code&gt;wp_get_attachment_image_attributes&lt;/code&gt; hook
&lt;/p&gt;
&lt;p&gt;
which won't allow the addition of a &lt;code&gt;noscript&lt;/code&gt; version of an image in any case
&lt;/p&gt;
&lt;p&gt;
and as for the name of the requested filter would it make sense to name it &lt;code&gt;attachment_image_html&lt;/code&gt; so that one immediately gets a sense on what he/she is filtering and as has been hinted at before match the &lt;code&gt;post_thumbnail_html&lt;/code&gt; format?
&lt;/p&gt;
&lt;p&gt;
thanks for any feedback on this
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:24/1522922371203315</guid>
      <description>&lt;p&gt;
@azaozz Anything left to do on this before it can be considered for merge?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43698 (4.9.5 broke site behind load balancer, forwards to localhost) updated</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:45:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43698#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43698#comment:1/1522921517768972</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:45:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:20/1522921507319382</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:19" title="Comment 19"&gt;pputzer&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Have you got any source for this? I know of no such ruling and have not been able to find any German article that mentions it. All German articles on the topic of IP anonymization seem talk about killing the last octet (or using Google's standard &lt;code&gt;_anonymizeIp()&lt;/code&gt; function).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Somebody mentioned this few weeks ago in Slack (I think) but can't find anything more about it either. Thinking we can consider this as "not real unless proven otherwise" :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43698 (4.9.5 broke site behind load balancer, forwards to localhost) created</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43698</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43698/1522921243176403</guid>
      <description>&lt;p&gt;
I have 2 wordpress web servers behind a load balancer. When updating from 4.9.4 to 4.9.5, these sites broke if accessed from the main domain (but continue to be accessible if I use their alternate addresses which is obvi not possible for our end users). Instead of the site loading by going to the main domain &lt;a class="ext-link" href="https://example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://example.com&lt;/a&gt;, everyone who accesses the domain is instead directed to &lt;a class="ext-link" href="https://localhost"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://localhost&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As I said, if someone accessed &lt;a class="ext-link" href="https://wp1.example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wp1.example.com&lt;/a&gt; or &lt;a class="ext-link" href="https://wp2.example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wp2.example.com&lt;/a&gt; (the direct addresses), the sites work. For now, I have reverted to 4.9.4 which fixes the problem, but I would like to figure out a long term fix. Any suggestions?
&lt;/p&gt;
&lt;p&gt;
FYI inside my wp-config files I am using these directives:
&lt;/p&gt;
&lt;p&gt;
define('WP_SITEURL', '&lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;' . $_SERVER&lt;a class="missing wiki"&gt;HTTP_HOST?&lt;/a&gt;);
define('WP_HOME', '&lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;' . $_SERVER&lt;a class="missing wiki"&gt;HTTP_HOST?&lt;/a&gt;);
&lt;/p&gt;
&lt;p&gt;
Which I need in place to be able to address the machines directly as well as having them work with the main domain via the load balancer.
&lt;/p&gt;
&lt;p&gt;
I think I found the changeset responsible for this behaviour (&lt;a href="https://core.trac.wordpress.org/changeset/42894"&gt;https://core.trac.wordpress.org/changeset/42894&lt;/a&gt;) but still have no workable fix.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43697 (Add theme update counter in admin theme menu item) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43697#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43697#comment:1/1522920160061873</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43697.patch attached to Ticket #43697</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43697/43697.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43697/43697.patch/1522920132665537</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>theme-update.png attached to Ticket #43697</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:21:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43697/theme-update.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43697/theme-update.png/1522920110317627</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43697 (Add theme update counter in admin theme menu item) created</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 05 Apr 2018 09:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43697/1522920072068036</guid>
      <description>&lt;p&gt;
Add theme update counter in admin theme menu item as we show for plugin menu item.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:16:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:19/1522916209251796</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:14" title="Comment 14"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could maybe create a Ip_zero, and a IP_partially...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually think there was a court ruling in Germany requiring anonymized IPs to be cut to only the first two octets, i.e. 192.168.0.0. This makes them really useless for any purpose :(
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Have you got any source for this? I know of no such ruling and have not been able to find any German article that mentions it. All German articles on the topic of IP anonymization seem talk about killing the last octet (or using Google's standard &lt;code&gt;_anonymizeIp()&lt;/code&gt; function).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43696 (Can't save updates in version 4.9.5) closed</title>
      
        <dc:creator>David Turnbull</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:12:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43696#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43696#comment:1/1522915930775606</guid>
      <description>invalid: &lt;p&gt;
Bizarre, this issue has now resolved itself?!?  Is it possible this could have been caused by the hosting?
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:06:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:54/1522915600309710</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1522915598000113"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:53/1522915453216891</guid>
      <description>&lt;p&gt;
Here's a brief outline of what I'm currently thinking for this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There are a handful of bugs that I'm still running into, @omarreiss has the list, and is working through them.
&lt;/li&gt;&lt;li&gt;We still need to maintain the &lt;code&gt;build&lt;/code&gt; folder, as the place where the built version of WordPress lands. The build process also modifies PHP files, so we wouldn't be able to use the &lt;code&gt;src&lt;/code&gt; folder as the place where &lt;code&gt;wordpress.zip&lt;/code&gt; is created from.
&lt;/li&gt;&lt;li&gt;I'm okay with moving CSS around, &lt;em&gt;if&lt;/em&gt; there's an argument for it to be moved. Moving the JavaScript makes sense, particularly with our JS development practices moving to a modern, modular style. I'm not sure that the same argument applies to CSS, though. Either way, I think there needs to be a larger discussion on that, adding it onto this ticket will just hold it up longer. @omarreiss has done an amazing job keeping the patch up to date, lets not burden him further. 🙂 This ticket is going to require several follow up tickets, so a discussion of how we manage CSS files can quite easily fit into there.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
On the topic of follow ups! Taken by itself, this change makes developing for WordPress harder. Moving to a compiled methodology for &lt;em&gt;all&lt;/em&gt; contributions is a big shift for WordPress, and this change doesn't have the polish we need to be presenting to encourage new contributors. So, while I'm fine with this reorganisation landing in &lt;code&gt;trunk&lt;/code&gt;, there are several other changes that I think will be necessary.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Better, opinionated dev environment documentation. We currently offer a variety of options, but don't really give people a "if you're not sure, do this" document. Rather than encouraging contributors to choose a tool (particular non-technical contributors who have no way to evaluate those tools), we should be doing it for them. Decisions, not options. 😉 This is particular important, as &lt;code&gt;grunt watch&lt;/code&gt; has awful performance in any environment that uses a VM and shared folders. Choosing the wrong development environment can give a terrible experience.
&lt;/li&gt;&lt;li&gt;Automated development environment setup scripts. The &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/master/bin/setup-local-env.sh"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Gutenberg setup script&lt;/a&gt; walks the user through setting up their development environment. It would obviously need to be written to work on Windows, too, before it was a valid option for Core. That will be fun. 🙂
&lt;/li&gt;&lt;li&gt;Modernising build tools. We currently use a little bit of webpack, and a whole lot of Grunt. This reorg adds a little more webpack usage, and Gutenberg will add a whole lot more. I believe we can standardise everything on webpack, reducing the number of tools we rely on.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So, while &lt;code&gt;trunk&lt;/code&gt; will be a little harder to work with after this change lands, the aim is to rapidly iterate on the experience, so we ultimately end up with a simpler, friendlier, more modern development environment that welcomes a wider range of contributors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43696 (Can't save updates in version 4.9.5) created</title>
      
        <dc:creator>David Turnbull</dc:creator>

      <pubDate>Thu, 05 Apr 2018 08:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43696/1522915206579472</guid>
      <description>&lt;p&gt;
I have two separate websites that have both just been updated to wordpress 4.9.5 and I have an issue whereby on both sites I can no longer make updates to pages, products or posts.  On clicking Update nothing is saved and the posts page is displayed (website-url/wp-admin/edit.php).  I have disabled all plugins and used the strorefront theme, but the problem persists.  Please advise.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>cezariuszmarek</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:45/1522914792242507</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42814#comment:44" title="Comment 44"&gt;qbaf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Upgraded today to 4.9.5 and no changes
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Update 4.9.5 fixed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43201" title="#43201: defect (bug): PHP Warning:  count(): Parameter must be an array or an object that ... (closed: fixed)"&gt;#43201&lt;/a&gt;, not this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39734 (Add ability to define file path of "wp-tests-config.php") updated</title>
      
        <dc:creator>clarinetlord</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:47:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39734#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39734#comment:7/1522914439939960</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39734#comment:6" title="Comment 6"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Hey @johnbillion, any chance we could get this into 5.0?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43558.2.diff attached to Ticket #43558</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43558/43558.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43558/43558.2.diff/1522912543637903</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:9/1522912525519997</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42961" title="Build Tools: Update the description in package.json and composer.json. ..."&gt;42961&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: Update the description in package.json and composer.json.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The description now matches the tagline on the front page of WordPress.org.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ocean90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42961]: Build Tools: Update the description in package.json and composer.json. ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42961</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42961/1522912525063501</guid>
      <description>&lt;p&gt;
Build Tools: Update the description in package.json and composer.json.
&lt;/p&gt;
&lt;p&gt;
The description now matches the tagline on the front page of WordPress.org.
&lt;/p&gt;
&lt;p&gt;
Props ocean90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:8/1522912137127129</guid>
      <description>&lt;p&gt;
Minor, but can we update the description to match the new tagline on w.org?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress is open source software you can use to create a beautiful website, blog, or app.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:7/1522912049998251</guid>
      <description>&lt;p&gt;
@netweb: could you open a new ticket for:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixing the coding standards issues that &lt;code&gt;compose run-script format&lt;/code&gt; finds.
&lt;/li&gt;&lt;li&gt;Adding a &lt;code&gt;grunt precommit&lt;/code&gt; task to run the &lt;code&gt;format&lt;/code&gt; script.
&lt;/li&gt;&lt;li&gt;Adding a new Travis job that checks that running the &lt;code&gt;format&lt;/code&gt; script doesn't change anything.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:6/1522911849428372</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42960" title="Build Tools: Add a composer.json for development environments.
This ..."&gt;42960&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: Add a composer.json for development environments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This allows Core developers to more easily run coding standards checks on PHP code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props netweb.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42960]: Build Tools: Add a composer.json for development environments.  This ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 05 Apr 2018 07:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42960</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42960/1522911848971897</guid>
      <description>&lt;p&gt;
Build Tools: Add a composer.json for development environments.
&lt;/p&gt;
&lt;p&gt;
This allows Core developers to more easily run coding standards checks on PHP code.
&lt;/p&gt;
&lt;p&gt;
Props netweb.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43695 ($depth and $args are switched when using custom callback in ...) created</title>
      
        <dc:creator>vincurekf</dc:creator>

      <pubDate>Thu, 05 Apr 2018 05:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43695/1522907731605345</guid>
      <description>&lt;p&gt;
For the custom function I am using the [latest function from walker](&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-comment.php#L343"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-comment.php#L343&lt;/a&gt;) as a base.
&lt;/p&gt;
&lt;p&gt;
When you use custom callback in comments.php template:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// comments.php
&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'comment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'format'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'html5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'style'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ol'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'short_ping'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// Use our custom callback if it's available
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'custom_render_comment'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'format'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'custom'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'callback'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'custom_render_comment'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;wp_list_comments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The arguments that get passed to custom_render_comment function are switched:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// custom_render_comment.php
&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;custom_render_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$depth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/*
var_dump($depth):
array(15) { ["walker"]=&amp;gt; NULL ["max_depth"]=&amp;gt; string(1) "5" ["style"]=&amp;gt; string(2) "ol" ["callback"]=&amp;gt; string(21) "faeiv2_render_comment" ["end-callback"]=&amp;gt; NULL ["type"]=&amp;gt; string(7) "comment" ["page"]=&amp;gt; int(0) ["per_page"]=&amp;gt; int(0) ["avatar_size"]=&amp;gt; int(32) ["reverse_top_level"]=&amp;gt; bool(false) ["reverse_children"]=&amp;gt; string(0) "" ["format"]=&amp;gt; string(6) "faeiv2" ["short_ping"]=&amp;gt; bool(true) ["echo"]=&amp;gt; bool(true) ["has_children"]=&amp;gt; bool(true) }
}
var_dump($args):
int(1)
*/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The result is this error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: array_merge(): Argument #1 is not an array in [...]/wp-content/themes/mytheme/inc/render-comment.php on line 56
&lt;/pre&gt;&lt;p&gt;
I haven't found any mention of switching arguments in the WordPressCodex.
&lt;/p&gt;
&lt;p&gt;
The fix is easy, just switch those variables, but I think it should be addressed somewhere in the documentation.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 05 Apr 2018 04:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:28/1522902640701445</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by rabmalin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1522902638000192"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Thu, 05 Apr 2018 04:26:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:27/1522902382655584</guid>
      <description>&lt;p&gt;
I understand that this checkbox is important but lets try to avoid breaking themes. We are not talking about few default themes only, we are talking about thousands of themes. And, unfortunately we are breaking themes in the minor release of WordPress. Like everyone, expectation is that there wont be any breaking changes in the minor release and I believe that is the philosophy of releases of WordPress also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40361 (Improvements for wp-signup.php and wp-activate.php markup and CSS) updated</title>
      
        <dc:creator>allisonplus</dc:creator>

      <pubDate>Wed, 04 Apr 2018 23:58:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40361#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40361#comment:13/1522886329586515</guid>
      <description>&lt;p&gt;
I'm unable to replicate this on my end multi-site-wise so if someone else is able to, please feel free to transfer ownership.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 04 Apr 2018 23:42:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:26/1522885354588162</guid>
      <description>&lt;p&gt;
Looks good. I think &lt;code&gt;site URL&lt;/code&gt; in this message should say &lt;code&gt;website URL&lt;/code&gt; so it matches the phrase used for the &lt;code&gt;Website&lt;/code&gt; field in the comment form.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 22:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:45/1522881285854249</guid>
      <description>&lt;p&gt;
@bryomedia Well that is working on my site, as the posted plugin fixes the category-lookup. Instead of just looking at the last part of the URL, then it uses the entire URL to determine hierarchy.
&lt;/p&gt;
&lt;p&gt;
Have the following permalink logic:
&lt;/p&gt;
&lt;p&gt;
Custom structure: /article/%postname%.html
Category base: articles
Tag base:
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>bryomedia</dc:creator>

      <pubDate>Wed, 04 Apr 2018 22:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:44/1522880930239297</guid>
      <description>&lt;p&gt;
@snakefoot , that's correct. I have 2 categories with an identical slug, but which sit at different levels in the hierarchy. But when accessed, both query the same data even though one of them does not have any posts associated with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43694 (Chrome Lighthouse Audit - jQuery Vulnerabilities) created</title>
      
        <dc:creator>joellisenby</dc:creator>

      <pubDate>Wed, 04 Apr 2018 22:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43694/1522880534637200</guid>
      <description>&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/IhSOQBb.png"&gt;&lt;img src="https://i.imgur.com/IhSOQBb.png" alt="https://i.imgur.com/IhSOQBb.png" crossorigin="anonymous" title="https://i.imgur.com/IhSOQBb.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As you can see, with Google Chrome 65.0.3325.181 when running a Lighthouse (&lt;a class="ext-link" href="https://github.com/GoogleChrome/lighthouse"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/GoogleChrome/lighthouse&lt;/a&gt;) 2.8.0 audit, there is a new test which claims there is a vulnerability in the version of jQuery (jQuery@1.12.4) included with WordPress.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Includes front-end JavaScript libraries with known security vulnerabilities.
Some third-party scripts may contain known security vulnerabilities  that are easily identified and exploited by attackers.
https://snyk.io/vuln/npm:jquery?lh@1.12.4
&lt;/pre&gt;&lt;p&gt;
Is this something to be concerned about and are there any plans to update the version of jQuery included with WordPress to one without the linked vulnerabilities?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 22:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:43/1522879285216377</guid>
      <description>&lt;p&gt;
@bryomedia I have uploaded the plugin that I'm using right now. Because the Wordpress GUI does not allow duplicate category-slugs, then you have to fix the slugs by editing the database directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>category-slug-hierarchy_v11.php.txt attached to Ticket #5034</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5034/category-slug-hierarchy_v11.php.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5034/category-slug-hierarchy_v11.php.txt/1522879156812779</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43693 (Add pre filter in count user function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43693#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43693#comment:1/1522878701891988</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>bryomedia</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:42/1522878636259838</guid>
      <description>&lt;p&gt;
Has there been any update, workaround or temporary way to reuse slugs under different parent terms? There's no alternative that I was able to find anywhere on the Internet. @snakefoot, the plugin doesn't seem to work? did you end up finding an alternative at all? Any help would be greatly appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43642 (Gallery titles and labels erasing) updated</title>
      
        <dc:creator>antpb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43642#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43642#comment:2/1522878503532916</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @marcinmichno ! Thank you so much for submitting your first ticket! Feedback like yours is integral to the success of WordPress.
&lt;/p&gt;
&lt;p&gt;
I want to understand a little better what it is you are trying to accomplish with this issue. Is the desired goal to create a gallery without any titles or are you looking more to have the ability to bulk replace all titles and labels in a gallery?
&lt;/p&gt;
&lt;p&gt;
Any screenshots of your workflow would be super helpful in seeing the problem we're looking to solve here.
&lt;/p&gt;
&lt;p&gt;
I'm going to set the workflow status of this ticket to &lt;code&gt;reporter-feedback&lt;/code&gt; which simply means we would like to get more information from you before moving forward on this issue. :) Again, thanks for taking that first step in making WordPress better for all!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>qbaf</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:44/1522876770759524</guid>
      <description>&lt;p&gt;
Upgraded today to 4.9.5 and no changes
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42937 (Success Message should display on insertion of new category in ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42937#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42937#comment:9/1522875799828797</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42937/42937.4.diff" title="Attachment '42937.4.diff' in Ticket #42937"&gt;42937.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42937/42937.4.diff" title="Download"&gt;​&lt;/a&gt; is a suggested way to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Reuse the translated strings from the &lt;code&gt;$messages&lt;/code&gt; array (i.e. with index 3).
&lt;/li&gt;&lt;li&gt;Allow the message to be filterable with &lt;code&gt;term_updated_messages&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Add tests within the new &lt;code&gt;Tests_Ajax_AddTag&lt;/code&gt; class with methods:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;test_add_category()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_add_post_tag()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_add_category_should_work_with_message_filtering()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_adding_category_without_capability_should_error()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_adding_existing_category_should_error()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43693.diff attached to Ticket #43693</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43693/43693.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43693/43693.diff/1522875633724663</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43693 (Add pre filter in count user function) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 20:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43693</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43693/1522875583954351</guid>
      <description>&lt;p&gt;
Add filter to the count user function, so the count can changed or filtered.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37392 (Multisite "Sites" screen: Add links to filter websites by status) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Wed, 04 Apr 2018 20:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37392#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37392#comment:20/1522874917293869</guid>
      <description>&lt;p&gt;
Here's a screenshot of what this patch adds:
&lt;a class="ext-link" href="https://drive.google.com/a/eventespresso.com/file/d/1GKiN9SNXs0aU4hEXcqsWVX9MWOFw8fev/view?usp=drivesdk"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://drive.google.com/a/eventespresso.com/file/d/1GKiN9SNXs0aU4hEXcqsWVX9MWOFw8fev/view?usp=drivesdk&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And here's a video: &lt;a class="ext-link" href="https://drive.google.com/file/d/1F8djO1CnkU21MMlmwPqNESNdbASAQds1/view"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://drive.google.com/file/d/1F8djO1CnkU21MMlmwPqNESNdbASAQds1/view&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34353 (redirect_canonical() – Undefined indexes 'host' and 'scheme') updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Wed, 04 Apr 2018 20:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34353#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34353#comment:13/1522874018829577</guid>
      <description>&lt;p&gt;
While we're waiting for this fix, I'm also seeing a similar issue in &lt;code&gt;wp-includes/class-wp-http-ixr-client.php&lt;/code&gt;.
&lt;/p&gt;
&lt;pre class="wiki"&gt;ErrorException: Undefined index: host
#7 wp-includes/class-wp-http-ixr-client.php(27): handleError
#6 wp-includes/class-wp-http-ixr-client.php(27): __construct
#5 wp-includes/comment.php(2652): pingback
#4 wp-includes/comment.php(2486): do_all_pings
#3 wp-includes/class-wp-hook.php(286): apply_filters
#2 wp-includes/class-wp-hook.php(310): do_action
#1 wp-includes/plugin.php(515): do_action_ref_array
#0 wp-cron.php(126): null
&lt;/pre&gt;&lt;p&gt;
Same for
&lt;/p&gt;
&lt;pre class="wiki"&gt;Undefined index: scheme
&lt;/pre&gt;&lt;p&gt;
Examining the &lt;code&gt;$bits&lt;/code&gt; variable, I see this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;bits
{
    path: /wordpress/xmlrpc.php
}
&lt;/pre&gt;&lt;p&gt;
The function this happens in:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// Assume we have been given a URL instead
&lt;/span&gt;                        &lt;span class="nv"&gt;$bits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parse_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;scheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'scheme'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'host'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'port'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'port'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
All such errors are caused by &lt;code&gt;wordpress/wp-cron.php?doing_wp_cron&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Perhaps the fix here can also be applied to &lt;code&gt;class-wp-http-ixr-client.php&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42362 (WordPress database error Unknown column 'wp_mywordpresssite' in 'field ...) updated</title>
      
        <dc:creator>blackawxs</dc:creator>

      <pubDate>Wed, 04 Apr 2018 20:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42362#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42362#comment:9/1522872866974906</guid>
      <description>&lt;p&gt;
An unexpected behavior occurred...I went into my php.ini file and set an error_log directory, and set display_errors = On.  From that moment, the wp-config.php was created and I was able to complete the installation process.  I'm not sure if this solved it, but I'm working again now.
&lt;/p&gt;
&lt;p&gt;
...I also made sure IUSR AND IIS_IUSRS had proper permissions on the directory....
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43123 (Default captions should NOT use max-width) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 19:53:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43123#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43123#comment:21/1522871593720700</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by ipstenu. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1522871591000338"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 19:52:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:12/1522871531708425</guid>
      <description>&lt;p&gt;
Thinking that individual comments containing personal data can be handled directly. The commenter can contact the admin and ask a comment to be edited or deleted. Then the admin can use the email verification/confirmation.
&lt;/p&gt;
&lt;p&gt;
Was mostly thinking to give the site owners the option to also delete the comments completely. In that case we may have to keep comments that have child comments. Currently when a comment parent is deleted we hide all children.
&lt;/p&gt;
&lt;p&gt;
On the other hand the current behavior also makes sense. Yes, child comments are not displayed, but if they were, they will probably be out of context.
&lt;/p&gt;
&lt;p&gt;
This also can be fixed when displaying the comments. Maybe we should leave it as-is for now :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42362 (WordPress database error Unknown column 'wp_mywordpresssite' in 'field ...) updated</title>
      
        <dc:creator>blackawxs</dc:creator>

      <pubDate>Wed, 04 Apr 2018 19:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42362#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42362#comment:8/1522871530928761</guid>
      <description>&lt;p&gt;
I'm also having this issue as of today. Please let me know if anything appears as a red flag but I believe I have done everything correctly....
&lt;/p&gt;
&lt;p&gt;
My Specs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I'm working within a Windows 2016 Server.
&lt;/li&gt;&lt;li&gt;I have MySQL Community (Server only installed). Version 5.7.2.1.0 Tested it and its running
&lt;/li&gt;&lt;li&gt;I have PHP 5.6.35 installed. Tested it and its running
&lt;/li&gt;&lt;li&gt;I have IIS10 running with FastCgiModule running to serve the PHP. No issues there.
&lt;/li&gt;&lt;li&gt;I created a virtual directory on my development machine, so I am able to go to &lt;code&gt;mysite.sanbox/v01/wordpress&lt;/code&gt; and see the default wordpress page to pick a language. That is fine. I click next.
&lt;/li&gt;&lt;li&gt;I then use phpmyadmin to create my new database table. That is fine.
&lt;/li&gt;&lt;li&gt;I then go back to &lt;code&gt;mysite.sanddbox/v01/wordpress&lt;/code&gt; and I put in my database information.
&lt;/li&gt;&lt;li&gt;I then click next. The next page is white and says &lt;code&gt;WordPress database error Unknown column 'wp_' in 'field list' for query SELECT wp_&lt;/code&gt;. I have attempted a different database name and different prefix, but no luck.
&lt;/li&gt;&lt;li&gt;I have attempted to install WordPress versions &lt;code&gt;wordpress-4.9.5.zip&lt;/code&gt;, &lt;code&gt;wordpress-4.9.4.zip&lt;/code&gt; and also tried &lt;code&gt;wordpress-4.8.1.zip&lt;/code&gt;. Same issue in all three cases.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Would anyone have a clue as to why this is happening?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:28:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:52/1522866501942584</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by aduth. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1522866499000563"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:20:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:9/1522866049852497</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Together with anonymizing the IP address we should probably delete the browser UA. It is used for pretty much the same purpose and has no other role.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree with deleting the browser UA. As a site owner, I want to know my mix of mobile vs non-mobile users for example so I can know where to invest my marketing.  Other site owners may want to know what mix of browsers are visiting their site to determine where to prioritize bug fixes (e.g. we have bug X on Opera - but how many users are visiting our site with that vs fixing bug Y on Edge)
&lt;/p&gt;
&lt;p&gt;
If anything, could we have a separate issue for UA erasure please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:17:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:8/1522865824263032</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:7" title="Comment 7"&gt;idea15&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Together with anonymizing the IP address we should probably delete the browser UA. It is used for pretty much the same purpose and has no other role.
&lt;/p&gt;
&lt;p&gt;
However this has to be done after some time. Sometimes comments are "approved" but the user marks them as spam later, or the other way around. In both cases all comment data is still submitted to spam detection services together with the user action. If we remove some of the data before this, it may cause errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree.
&lt;/p&gt;
&lt;p&gt;
What retention period do you propose?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's do 30 days and make it filterable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:38/1522865797517964</guid>
      <description>&lt;p&gt;
@DavidAnderson the domain and IP I kind of packaged together there... for brevity. The original point stands - if its being stored, as a package, along with IP &amp;amp; domain, consent is &lt;strong&gt;probably&lt;/strong&gt; required.
&lt;/p&gt;
&lt;p&gt;
If consent is required, it must be opt in. It cannot be opt out.
&lt;/p&gt;
&lt;p&gt;
If the data is necessary for security purposes - this does matter in terms of consent etc - it is still necessary to do the other stuff, like identify the data controller.
&lt;/p&gt;
&lt;p&gt;
Ideally, shed the personally identifiable stuff before storing it. Then you are not "controlling" this data. You're using it for the purposes of the transaction. Which is fine. As far as the GDPR and my understanding of it are concerned.
&lt;/p&gt;
&lt;p&gt;
Its worth remembering its about Data Protection. The step of not storing this data (longer than was necessary) would be precisely to protect it. The IP / domain is needed to actually... well do the WordPress update!
&lt;/p&gt;
&lt;p&gt;
It may well be important, if consulting legal teams, if they were trained in the USA or in Europe. Long arguments about the existence of a "Right to Privacy" may otherwise ensue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:11/1522865416898649</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43442#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also wondering if we should support deleting the comment text here. This may be required in some cases.
&lt;/p&gt;
&lt;p&gt;
Thinking we should still keep the comment row in the db when the comment has "child comments". Can replace the text with something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;This content was deleted by the author.
&lt;/pre&gt;&lt;p&gt;
That would mean running a lot more complex db queries. I'll run couple of tests to see which would be faster.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see your point - we can't know if a given comment has personal data or not - i.e. it would be difficult to detect things like "I've lived on such and such street for the last 20 years, and this was the best parade yet!"
&lt;/p&gt;
&lt;p&gt;
So... the _expectation_ that comment text _could_ be erased (and replaced with a placeholder, not unlike what you've suggested) is probably there, if not a legal requirement.
&lt;/p&gt;
&lt;p&gt;
So... maybe this should be a checkbox on the erasure UX - checked by default - to erase the comment text as well. What do you think?
&lt;/p&gt;
&lt;p&gt;
(The reason for checking this by default is, 1) like i said, the expectation is probably there in general that comment text will be erased when you erase me from your site and 2) once personal data is erased from comments, finding a user's comments to then erase their comments' content could be impossible
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:37/1522865011994448</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can someone make a case for opt-in vs opt-out for this? That's where things are not clear for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As far as I've seen there is no more opt-out under the GDPR. It is gone for good, eradicated, and banished :)
&lt;/p&gt;
&lt;p&gt;
Every user consent has to be opt-in, and as we well know most users don't bother changing the default options:
&lt;a class="ext-link" href="https://www.propublica.org/article/set-it-and-forget-it-how-default-settings-rule-the-world"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.propublica.org/article/set-it-and-forget-it-how-default-settings-rule-the-world&lt;/a&gt;
&lt;a class="ext-link" href="https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/&lt;/a&gt;
&lt;a class="ext-link" href="https://service-design.co/95-of-the-people-stick-to-the-default-option-9e16316a64e1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://service-design.co/95-of-the-people-stick-to-the-default-option-9e16316a64e1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So the GDPR compliance will introduce a pretty bad UX. The only option would be to keep nagging users to click a checkbox :)
&lt;/p&gt;
&lt;p&gt;
Perhaps we can "work something out" on installation (or first login after installation) where we show a modal and don't dismiss it until the user makes a decision. It'd still be annoying for most, but as @xkon mentions above that's what most (closed source) software does when it asks the user to accept its license.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:36/1522864932776132</guid>
      <description>&lt;p&gt;
@robscott Does it hinge on the IP address? I was thinking that the site URL was more problematic. For any individual with a website with an "About" page or other identifying information, that seems much more likely to be PII, under the GDPR's criteria of information that can be directly or indirectly be linked back to a particular individual.
&lt;/p&gt;
&lt;p&gt;
But yes, my own view (IANAL...) is that if the code on the wordpress.org mothership immediately drops the IP address down a black hole, then the GDPR's anonymization criteria then come into play (unless it could be argued that the IP combined with a list of installed plugins is sufficient to de-anonymize - that is possible, as you can look up the IP on any number of public "which sites are hosted here?" sites, and then run a quick automated scan on all the sites to see which ones have that same plugin combination installed. There's probably quite a lot of bits of entropy in the info sent that could allow de-anonymization).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:35/1522864725079975</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43492#comment:34" title="Comment 34"&gt;DavidAnderson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@robscott
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
3 If we do not store the data, I don't feel we need to obtain consent. (opinion!!).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the paragraph from the GDPR which you just quoted clearly states that "processing" is the boundary (and makes no reference to "storage"). As such, "Using the data for the purposes of processing the transaction (ephemeral storage) is not storage" is not germane, because the GDPR doesn't divide at that point, and does specifically identify "processing".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm using that in reference to consent. Consent cannot be opt out. It must be opt in. Its not related to my opinion on storage - which is about WHY is the data being stored? The only way this data can be personal data is as a package. The IP address is what it hinges on. If you shed this element, you've anonymized it.
&lt;/p&gt;
&lt;p&gt;
I can dig out one on "suitably anonymized data" if you'd like.
&lt;/p&gt;
&lt;pre class="wiki"&gt;GDPR doesn’t apply to suitably anonymised data [Article 6, 4(e), Article 25, 1, Article 32, 1(a)].
&lt;/pre&gt;&lt;p&gt;
I would argue that the removal of IP / domain (anything else deemed potentially personal data) would be necessary process to suitably anonymize the data. For which, no consent is necessary.
&lt;/p&gt;
&lt;p&gt;
Not really sure we need a semantic argument on this point. I just made it poorly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:50:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:34/1522864245959917</guid>
      <description>&lt;p&gt;
@robscott
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
3 If we do not store the data, I don't feel we need to obtain consent. (opinion!!).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the paragraph from the GDPR which you just quoted clearly states that "processing" is the boundary (and makes no reference to "storage"). As such, "Using the data for the purposes of processing the transaction (ephemeral storage) is not storage" is not germane, because the GDPR doesn't divide at that point, and does specifically identify "processing".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:33/1522863674978350</guid>
      <description>&lt;p&gt;
Maybe now I should disclose my 3 years of legal education... which certainly do not qualify me to anything other than passing commentary.
&lt;/p&gt;
&lt;p&gt;
Just to be clear about opt in vs opt out. If the "opt in" is relating to personal data, then the GDPR specifically says:
&lt;/p&gt;
&lt;pre class="wiki"&gt;"Consent should be given by a clear affirmative act establishing a freely given, specific, informed and unambiguous indication of the data subject’s agreement to the processing of personal data relating to him or her, such as by a written statement, including by electronic means, or an oral statement. This could include ticking a box when visiting an internet website, choosing technical settings for information society services or another statement or conduct which clearly indicates in this context the data subject’s acceptance of the proposed processing of his or her personal data. Silence, pre-ticked boxes or inactivity should not therefore constitute consent. "
&lt;/pre&gt;&lt;p&gt;
So if the consent is "opt out" then we should shelve it if it is personal data and the ticket relates to GDPR.
&lt;/p&gt;
&lt;p&gt;
My personal view would be this test:
&lt;/p&gt;
&lt;p&gt;
1 is this personal data? Yes or no.
2 If yes - do we need to &lt;strong&gt;store&lt;/strong&gt; it?
3 If we do not &lt;strong&gt;store&lt;/strong&gt; the data, I don't feel we need to obtain consent. (opinion!!).
4 If the data is stored - why? What is it stored for? (beyond the actual transaction I mean)
&lt;/p&gt;
&lt;p&gt;
We (might) need consent for the "why" - what is being done with this (potentially identifiable) and (potentially) personal data?
&lt;/p&gt;
&lt;p&gt;
Using the data for the purposes of processing the transaction (ephemeral storage) is not storage. The only way this data can be considered personal data would be if it were collected together as a package and stored. Again, all my opinion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:32/1522862897215599</guid>
      <description>&lt;p&gt;
@azaozz wrote:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For that reason think this ticket should focus on providing that information, including what data is sent on update checks, how it is used, and what it would mean for their site if these checks are disabled.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+100
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd also really like to hear a lawyer's opinion on whether domain names and websites IP addresses constitute "personal data" under the GDPR.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I really don't like abstract discussions - I think they go on for ever. So, here's the only way I can think that a server IP could be used to identify a person - what if a person keeps the server in their home or their small business (and not in a hosting provider like bluehost). If a user does that, and their server contacts WordPress.org to check for updates, WordPress.org has the means to "unmask" (identify) that user you even if they have things have privacy on their domain registration.
&lt;/p&gt;
&lt;p&gt;
So... my $0.02... the privacy docs for WordPress core should disclose that 1) WordPress.org servers will be contacted to check for updates and 2) that the server IP is unavoidably shared with them when that happens and 3) that should be opt-in/out before communication happens since that communication can unmask a user
&lt;/p&gt;
&lt;p&gt;
Can someone make a case for opt-in vs opt-out for this? That's where things are not clear for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:06:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:101/1522861584085166</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #hosting-community by danielbachhuber. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/hosting-community/p1522861582000234"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43555 (Keep Hello Dolly from displaying sexist text in the admin) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43555#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43555#comment:37/1522861567960620</guid>
      <description>&lt;p&gt;
Hi @dawesi, we welcome all opinions and any constructive criticism, but we also require that everybody act respectfully and professionally. We're a community, and we work hard to make sure that all of our spaces are friendly and welcoming environments. In the future, please express your opinions without resorting to insults and ad hominem attacks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43680 (Add new filter to WP_User_Query) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43680#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43680#comment:4/1522858359402006</guid>
      <description>&lt;p&gt;
Updated the patch with coding standard fixes. cc @SergeyBiryukov
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43680.2.diff attached to Ticket #43680</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43680/43680.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43680/43680.2.diff/1522858232615099</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43679 (Add $this to found_users_query filter) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43679#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43679#comment:3/1522858053283601</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@danieltj Thanks for the feedback. I have updated the patch, to improve the docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43679.2.diff attached to Ticket #43679</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43679/43679.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43679/43679.2.diff/1522857972846038</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43692.diff attached to Ticket #43692</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:00:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43692/43692.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43692/43692.diff/1522857601212625</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43692 (Add Limit 1 to User query) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43692</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43692/1522857551492412</guid>
      <description>&lt;p&gt;
Add limit 1 to SQL query in WP_User class, as only one row is requested.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:37:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:31/1522856239318858</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522856236000658"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:25/1522855618023148</guid>
      <description>&lt;p&gt;
The lovely folks from #themereview after a little chat we had told me that we can create a Make post informing the authors of this change so we can spread it a bit, but apart from that it'll be up to the authors to take care of it at the end.
&lt;/p&gt;
&lt;p&gt;
If in any case we 'have' to add something I'd personally go for the inline even if I'm not a fan as well. I don't like the idea of outputting a full extra &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; in the header no matter how small it could be at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>category-added-ajax-message-with-42937.3.diff.jpg attached to Ticket #42937</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:12:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42937/category-added-ajax-message-with-42937.3.diff.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42937/category-added-ajax-message-with-42937.3.diff.jpg/1522854723330590</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42937 (Success Message should display on insertion of new category in ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:06:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42937#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42937#comment:8/1522854363565880</guid>
      <description>&lt;p&gt;
I had another look at this and I would suggest we limit the scope of the ticket to the existing "added" messages. We can see the existing messages here:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/edit-tag-messages.php"&gt;https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/edit-tag-messages.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are only three variations for "added":
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Category added.
&lt;/li&gt;&lt;li&gt;Tag added.
&lt;/li&gt;&lt;li&gt;Item added.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
where the last one is for a taxonomy that's neither a &lt;code&gt;category&lt;/code&gt; or a &lt;code&gt;post_tag&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I also think we should have the "added" ajax admin notice dismissable.
&lt;/p&gt;
&lt;p&gt;
Usually that's done via CSS classes like: &lt;code&gt;notice is-dismissible&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
But that's not triggered here via ajax. I think a workaround for that is to trigger the &lt;code&gt;'wp-updates-notice-added'&lt;/code&gt; event.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42937/42937.3.diff" title="Attachment '42937.3.diff' in Ticket #42937"&gt;42937.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42937/42937.3.diff" title="Download"&gt;​&lt;/a&gt; is a suggested patch that:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds a message according to the three existing variations, mentioned above.
&lt;/li&gt;&lt;li&gt;Adds CSS classes to the admin notice.
&lt;/li&gt;&lt;li&gt;Makes the admin notice dismissable, by triggering the &lt;code&gt;'wp-updates-notice-added'&lt;/code&gt; event.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Todo:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Find a way to use the translated strings from the &lt;code&gt;$messages&lt;/code&gt; array and make the ajax "added" message filterable by &lt;code&gt;term_updated_messages&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Further:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If we want to modify the "added" message, then I think a new ticket would serve it better.
&lt;/li&gt;&lt;li&gt;I wonder if the "deleted" message should be considered too? (If so then in another ticket).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 14:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:10/1522852956211822</guid>
      <description>&lt;p&gt;
Also wondering if we should support deleting the comment text here. This may be required in some cases.
&lt;/p&gt;
&lt;p&gt;
Thinking we should still keep the comment row in the db when the comment has "child comments". Can replace the text with something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;This content was deleted by the author.
&lt;/pre&gt;&lt;p&gt;
That would mean running a lot more complex db queries. I'll run couple of tests to see which would be faster.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42937.3.diff attached to Ticket #42937</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 04 Apr 2018 14:27:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42937/42937.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42937/42937.3.diff/1522852064262883</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 14:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:9/1522851695575882</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522851692000907"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 14:13:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:24/1522851219106192</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@xkon thanks for the patch! Looks good.
&lt;/p&gt;
&lt;p&gt;
The last thing I'm thinking about is if we should add an inline style &lt;code&gt;display: inline;&lt;/code&gt; for the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I know, --everybody-- hates inline styles, but really don't see good way to fix this for all themes.
&lt;/p&gt;
&lt;p&gt;
Alternatively can output a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag in the head with something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#commentform .comment-form-cookies-consent label[for="wp-comment-cookies-consent"] {
    display: inline;
}
&lt;/pre&gt;&lt;p&gt;
Which is the "lesser evil"? :)
&lt;/p&gt;
&lt;p&gt;
Moving this to the "Bundled Themes" component as it mostly concerns the theme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42700 (Figure captions not inheriting max-width from figures) updated</title>
      
        <dc:creator>bahead</dc:creator>

      <pubDate>Wed, 04 Apr 2018 13:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42700#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42700#comment:7/1522849277844407</guid>
      <description>&lt;p&gt;
Just in case someone lands here, the issue I reported in this ticket is more elegantly explained at &lt;a href="https://core.trac.wordpress.org/ticket/43123"&gt;https://core.trac.wordpress.org/ticket/43123&lt;/a&gt; and was fixed in 4.9.5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5315 (Awaiting Moderation (#): # is not always updated correctly in JS) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 13:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5315#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5315#comment:2/1522849047168231</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by notnownikki. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1522849045000106"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 13:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:66/1522847011821540</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:64" title="Comment 64"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(If it's easier to read, &lt;a class="ext-link" href="https://github.com/WP-API/proposals/pull/3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;there's also a PR for the proposal&lt;/a&gt;; I don't want to split the conversation, but might be easier to hash out smaller things there.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, agreed. Best is to not fragment the conversation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43691 (class-wp-rest-server sends response body regardless of actual response ...) created</title>
      
        <dc:creator>matthias.thiel</dc:creator>

      <pubDate>Wed, 04 Apr 2018 11:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43691</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43691/1522843145375707</guid>
      <description>&lt;p&gt;
The WP Rest Server always echoes the result of &lt;code&gt;wp_json_encode&lt;/code&gt; unless there is an error.
&lt;/p&gt;
&lt;p&gt;
See line &lt;code&gt;410&lt;/code&gt; of class-wp-rest-server.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo $result;
&lt;/pre&gt;&lt;p&gt;
A use case where this leads to an undesired behaviour is when using the HTTP Status Code 204 which implies no response body being sent. Returning a rest response with a status code 204 will send a body at the moment.
&lt;/p&gt;
&lt;p&gt;
There are two problems with this behaviour:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;A response status 204 should not send any body content
&lt;/li&gt;&lt;li&gt;A response data of &lt;code&gt;null&lt;/code&gt; (&lt;code&gt;new \WP_REST_Response( null, 204 )&lt;/code&gt;)  will be sent as the (string) &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Most clients are pretty forgiving and will ignore the request body but MacOS Safari will not complete the request in this situation and will try to parse the &lt;code&gt;null&lt;/code&gt; response as JSON. I found the behaviour is also server configuration specific as some configurations will strip the response body automatically and some will not.
&lt;/p&gt;
&lt;p&gt;
Since there is no consistency in treating a 204 response by servers and browsers, I would suggest to stick to the spec (&lt;a class="ext-link" href="https://tools.ietf.org/search/rfc2616#section-4.3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://tools.ietf.org/search/rfc2616#section-4.3&lt;/a&gt;) and not return a response at all.
&lt;/p&gt;
&lt;p&gt;
I can see two ways to achieve this:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Consult the response status to decide whether or not to return a response body, which is spec compliant
&lt;/li&gt;&lt;li&gt;Consult the response data and treat &lt;code&gt;null&lt;/code&gt; by not sending a response body, which honours the semantic of &lt;code&gt;null&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43687 (Ensure changes to 'Hello Dolly' words don't violate copyright) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 04 Apr 2018 10:57:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43687#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43687#comment:2/1522839435107303</guid>
      <description>invalid: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43555" title="#43555: enhancement: Keep Hello Dolly from displaying sexist text in the admin (closed: fixed)"&gt;#43555&lt;/a&gt; changed the lyrics to more closely match how they were sung by Louis Armstrong. If the copyright holder wishes to discuss these changes, they should contact the &lt;a class="ext-link" href="https://wordpressfoundation.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Foundation&lt;/a&gt; directly, as Trac isn't the appropriate place to discuss it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:5/1522835778046913</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23165 (Admin validation errors on form nonce element IDs (_wpnonce)) updated</title>
      
        <dc:creator>thomas_hoadley</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:55:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23165#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23165#comment:12/1522835701320042</guid>
      <description>&lt;p&gt;
Still have issues with this. Updates needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) closed</title>
      
        <dc:creator>tnkaoua</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:53:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:4/1522835604766914</guid>
      <description>invalid: &lt;p&gt;
Thanks @audrasjb and @swissspidy for so fast answers!!
&lt;/p&gt;
&lt;p&gt;
After some investigations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the "default" does not appear on another website I manage
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;it apparently comes from the Theme that is is used that is a quite rich and "complex" theme
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So it is not a wordpress bug
&lt;/p&gt;
&lt;p&gt;
Kind regards
Thierry
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Capture d’écran 2018-04-04 à 11.42.54.png attached to Ticket #43690</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:46:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43690/Capture%20d%E2%80%99%C3%A9cran%202018-04-04%20%C3%A0%2011.42.54.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43690/Capture%20d%E2%80%99%C3%A9cran%202018-04-04%20%C3%A0%2011.42.54.png/1522835187181602</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:3/1522835164031489</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
That looks a lot like it's caused by one of your plugins. "to see changes first update/publish the page" is not a string that exists in WordPress. Does this still happen with all plugins disabled?
&lt;/p&gt;
&lt;p&gt;
If not, you're better off asking this in the support forums: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:2/1522835155323362</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @tnkaoua, welcome to Trac and thanks for your ticket,
&lt;/p&gt;
&lt;p&gt;
Which Safari version are you using?
Can you please test it on a fresh install?
&lt;/p&gt;
&lt;p&gt;
I did not manage to reproduce the bug (see screenshot below).
&lt;/p&gt;
&lt;p&gt;
Thanks,
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) updated</title>
      
        <dc:creator>tnkaoua</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:1/1522834797730378</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Wordpress 4.9.5 Safari.jpeg attached to Ticket #43690</title>
      
        <dc:creator>tnkaoua</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43690/Wordpress%204.9.5%20Safari.jpeg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43690/Wordpress%204.9.5%20Safari.jpeg/1522834662851994</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) created</title>
      
        <dc:creator>tnkaoua</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690/1522834629068877</guid>
      <description>&lt;p&gt;
Hi
&lt;/p&gt;
&lt;p&gt;
Since last night update to 4.9.5, on Mac OSX Safari, admin pages seem broken as you can see in the attached image.
Safari cache has been emptied.
&lt;/p&gt;
&lt;p&gt;
The issue does not appear on Chrome.
&lt;/p&gt;
&lt;p&gt;
Regards
Thierry
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43688 ([4.9.5] [Widgets] Visibility - options disappearing?!) updated</title>
      
        <dc:creator>Kiezkicker</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43688#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43688#comment:2/1522834437470668</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43688#comment:1" title="Comment 1"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Widget Visibility is not a core feature. You're probably using &lt;a class="ext-link" href="https://jetpack.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Jetpack&lt;/a&gt; or a similar plugin that adds this feature. You have to ask their support.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Indeed, sorry. After updating jetpack the plugin doesn´t change back to "active" status. Afterr activating it everything is back to normal. Thanks for your quick response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43688 ([4.9.5] [Widgets] Visibility - options disappearing?!) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:16:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43688#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43688#comment:1/1522833405481693</guid>
      <description>invalid: &lt;p&gt;
Widget Visibility is not a core feature. You're probably using &lt;a class="ext-link" href="https://jetpack.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Jetpack&lt;/a&gt; or a similar plugin that adds this feature. You have to ask their support.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43689 (next_post_link()/previous_post_link() broken for custom post types in ...) created</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43689</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43689/1522833073604651</guid>
      <description>&lt;p&gt;
The link to the next post is being displayed however the third parameter $in_same_term seems to be completely ignored even though parameter $taxonomy is correct (&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/next_post_link"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/next_post_link&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
E.g. you are on singular pages of a custom post type "Job". You want to have the next post link of "Jobs" which are in the same "Job Group" (a custom taxonomy) e.g. "Developer". However next post link will deliver a next Job which is in the "Job Group" "Graphic Designer" even though $in_same_term was set to true.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43688 ([4.9.5] [Widgets] Visibility - options disappearing?!) created</title>
      
        <dc:creator>Kiezkicker</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43688</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43688/1522832919903933</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I wonder - after updating to 4.9.5 - all my "visibility" rules which I had set for my widgets are out of function, and each widget was displayed always.
&lt;/p&gt;
&lt;p&gt;
Additionally there is no more an option in the widget config section to set the visibility of the widget again?!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:65/1522832168096271</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:63" title="Comment 63"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:62" title="Comment 62"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right. The current (non-API) logic is:
Save:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User edits the post (a post is always edited as we start with an auto-draft).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It doesn't seem like this is necessarily true; wp_create_post_autosave shortcircuits if the post is the exact same, so it seems like an autodraft can only be created once there is a change?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, currently the auto-draft is created right before the user loads the Add New (post) screen. This is done so we have a post_ID for the brand new post and covers cases where the user may upload files or add tags, categories, post meta, etc. before they actually start writing the post (we need a post_ID to "attach" the meta). I'm not sure how that works through the API at the moment, or if it is possible at all. (That has nothing to do with auto-saving as there is nothing in the post to save yet.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We do already provide the functionality to delete revisions via the REST API, so they're not really usable for an audit trail, but rather as a sort of long-term undo.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I'm not sure why this was added to the API. IMHO we shouldn't be removing the functionality of the audit trail. This changes the purpose and functionality of revisions quite a bit...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Their (revisions) primary use is to see the evolution of a post over time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps we should look at removing the delete revision endpoint. It makes them "unreliable" and their purpose becomes "to maybe see the evolution of a post over time, or maybe see only some of it, or not see anything".
&lt;/p&gt;
&lt;p&gt;
If I understand the general logic behind a REST API correctly, it should care about the "client" and the "view", not overtake the server "business logic". The client is generally "untrusted" in handling low level logic, that should be handled by the server. There is a good reason why revisions cannot be deleted from the UI :)
&lt;/p&gt;
&lt;p&gt;
I'm aware that revisions can be limited or disabled altogether but that is a "server logic" decision on per site basis. Also note that this doesn't disable autosave revisions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right now, there's no way to say "update this post, but don't create a revision". The basic thing we want for autosaves is the ability to do this, but providing this functionality so allows any REST API client to do so, which I'm a little uncomfortable about (and which would totally destroy any concept of revisions being usable as an audit trail, since now changes can be made without being recorded anywhere).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. Thinking more about this, it should stay this way (no way to save without a revision). Changing that would make revisions totally untrustworthy.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The proposed autosave process I'm talking about here would allow this, but in a very controlled way. Each change would still get a revision, but clients would now have the ability to temporarily persist changes while the user is still working on them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So basically you want to move the server auto-saving logic to the client. Not sure this is a good idea. The client can store "persistent backup data" by itself, for example in browser storage. This has nothing to do with server auto-saving. This is how autosaves work at the moment for non-API. There are server autosaves and client (in browser storage) autosaves.
&lt;/p&gt;
&lt;p&gt;
Once the client decides to push a server auto-save, the logic for it should be on the server.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main thing that seems strange is the special-casing of the post's author. If we can remove that special-casing, I think the rest is reasonably straightforward to model. Is there a reason for this special-casing?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is mainly needed for post locking (not implemented through the API yet). It prevents data loss when more than one client tries to edit the same post. It also keeps the audit trail more consistent.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If clients don't want to use the autosave process, then they can keep using the existing process, they'll just potentially end up with lots of revisions. I see this autosave concept as similar to database transactions: you queue up and persist a bunch of changes, then commit them all in one revision at once. This preserves the process of always creating revisions, while reducing the amount of noise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this is a possible saving workflow. A client can decide to not use the server autosave process and instead store backups locally. Then "once in a while" sync these local backups with the server. Few years ago there was an idea to make the non-API autosave work this way too. It didn't materialize as browser storage was somewhat unreliable/limited back then.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This will generally mean that a post will always have an autosaved revision. That revision will usually be more recent than the post content, and the user will have to manually "restore" that autosave revision before continuing to edit. That's not a good UX :) This can happen now too, but is relatively rare.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The client can implement the functionality themselves to automatically "restore" the autosave. This is essentially what we're doing already with the special-case for the post author, but editors can do it in a more consistent way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps but there are some edge cases like when there are several autosaves authored by different users that have edited the post at different times. Then it can get really messy :) Thinking that restoring/overwriting a post from a revision should always be user-controlled.
&lt;/p&gt;
&lt;p&gt;
The current logic is that the post author is "the boss" and other users that edit the post leave audit trail with their changes. This is essential for larger sites that have many authors and many editors.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the part: "User hits save: &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt;" would be an actual save, i.e. &lt;code&gt;POST /wp/v2/posts/{id}&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was thinking this would be a cleaner way of the client actually "committing" the autosaved changes. It avoids the problem where an update to a somewhat-unrelated resource (the post) affects a bunch of others (all the autosaves). This is the current behaviour though: &lt;code&gt;wp_save_post_revision()&lt;/code&gt; is called by &lt;code&gt;wp_insert_post()&lt;/code&gt;, and it wipes out all the autosaves.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, &lt;code&gt;wp_save_post_revision()&lt;/code&gt; doesn't wipe autosave revisions. It has some logic to keep a max number of revisions if they are limited by a plugin. The default is &lt;code&gt;-1&lt;/code&gt; (unlimited). Also note that this logic specifically bypasses (keeps) autosave revisions, even when they are over the max.
&lt;/p&gt;
&lt;p&gt;
Also, the post is not an "unrelated resource" in this case. Generally we can view a WordPress post as consisting of several rows in the db: the actual post row plus all the revisions rows. They are the same "resource" from logical point of view. It doesn't matter how exactly the "post resource" is stored. As @schlessera mentions above, at some point the storage schema may change and perhaps post revisions may be stored as incremental diffs in the actual post row in the db. Well, at last in theory :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is a "disaster recovery" for a rare edge case that was planned for the current (non-API) autosave too. We can remove it if need be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it's a global change, that makes sense; I'd rather track and implement it separately I think :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure, lets separate that. But maybe first get the server autosaves logic/endpoint in.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(Sorry for the long post again; this is a complex topic.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, sorry for the long post too, very complex topic indeed :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:5/1522832085833355</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I discussed this with @pento today, and we are both in agreement in landing this for WP 5.0
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43558/43558.diff" title="Attachment '43558.diff' in Ticket #43558"&gt;43558.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43558/43558.diff" title="Download"&gt;​&lt;/a&gt; patch installs the following &lt;code&gt;require-dev&lt;/code&gt; packages:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;squizlabs/php_codesniffer&lt;/code&gt; - PHPCS
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-coding-standards/wpcs&lt;/code&gt; WordPress PHP Coding Standards for - PHPCS
&lt;/li&gt;&lt;li&gt;&lt;code&gt;dealerdirect/phpcodesniffer-composer-installer&lt;/code&gt; - PHPCS ruleset installer
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Additional Composer &lt;em&gt;&lt;code&gt;require-dev&lt;/code&gt;&lt;/em&gt; packages can be considered in new tickets on a case-by-case basis.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43218" title="#43218: defect (bug): PHPUnit 7.x support (accepted)"&gt;#43218&lt;/a&gt; PHPUnit 7.x support
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a href="https://core.trac.wordpress.org/attachment/ticket/41057/41057-grunt.diff"&gt;41057-grunt.diff&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:23/1522831936930405</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt; Add &lt;code&gt;composer.json&lt;/code&gt; file for development dependencies
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43558.diff attached to Ticket #43558</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43558/43558.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43558/43558.diff/1522830939989826</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:4/1522830866283098</guid>
      <description>&lt;p&gt;
Copying in @GaryJ's &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:98" title="#23912: enhancement: Add Composer package description (new)"&gt;ticket:23912#comment:98&lt;/a&gt; for further context:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Treating WordPress as a dependency of a site may not be the prevalent use case across all WP installs, but it is popular and handy for those that have taken that approach. I personally use &lt;a class="ext-link" href="http://wecodemore.github.io/wpstarter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPStarter&lt;/a&gt; but other wrappers of WP are available too.
&lt;/p&gt;
&lt;p&gt;
Something not mentioned so far, and that has changed since this ticket has started, is the use of PHP_CodeSniffer. Obviously, PHPUnit has been in use since before this ticket as well.
&lt;/p&gt;
&lt;p&gt;
These core development dependencies should be documented in the &lt;code&gt;composer.json&lt;/code&gt; &lt;code&gt;require-dev&lt;/code&gt; section, so that we &lt;a class="ext-link" href="https://12factor.net/dependencies"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;explicitly declare and isolate dependencies&lt;/a&gt;. Running versions earlier than PHP_CodeSniffer 3.2 will cause different results than 3.2+, for instance. WP should not be relying on globally installed dependencies of varying versions.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;.travis.yml&lt;/code&gt; files shows PHPUnit can be used at version 4, 5 or 6, depending on the PHP version available - and that's great, but get it down in a &lt;code&gt;composer.json&lt;/code&gt;, and a &lt;code&gt;composer install&lt;/code&gt; means that the switch statement can be dropped, and developers working locally can get the right version too.
&lt;/p&gt;
&lt;p&gt;
Whatever the rest of the &lt;code&gt;composer.json&lt;/code&gt; does or doesn't do for the external benefit of those &lt;em&gt;consuming&lt;/em&gt; this package, having a simple &lt;code&gt;composer.json&lt;/code&gt; which lists the development dependencies gives internal benefit to &lt;em&gt;contributors&lt;/em&gt; and automated tools.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43658 (Media attachment filter drop-down mime types in grid mode is not ...) updated</title>
      
        <dc:creator>itzmekhokan</dc:creator>

      <pubDate>Wed, 04 Apr 2018 07:27:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43658#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43658#comment:4/1522826861419215</guid>
      <description>&lt;p&gt;
I have tested the flow thoroughly with the &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43658/43658.1.patch"&gt;43658.1.patch&lt;/a&gt; and it is working properly, as expected and changes the return from &lt;code&gt;wp_enqueue_media&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
However, I faced an issue with unit testing. Can you please guide me with the flow, i need to follow for the same.
&lt;/p&gt;
&lt;p&gt;
Looking for your co-operation dearly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43658.1.patch attached to Ticket #43658</title>
      
        <dc:creator>itzmekhokan</dc:creator>

      <pubDate>Wed, 04 Apr 2018 06:01:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43658/43658.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43658/43658.1.patch/1522821680455403</guid>
      <description>&lt;p&gt;
Corrected coding standards by added whitespace
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 04:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:8/1522817064895422</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522817063000023"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 04 Apr 2018 04:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:64/1522814979520483</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
(If it's easier to read, &lt;a class="ext-link" href="https://github.com/WP-API/proposals/pull/3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;there's also a PR for the proposal&lt;/a&gt;; I don't want to split the conversation, but might be easier to hash out smaller things there.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 04 Apr 2018 04:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:63/1522814916436326</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:62" title="Comment 62"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right. The current (non-API) logic is:
Save:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User edits the post (a post is always edited as we start with an auto-draft).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It doesn't seem like this is necessarily true; wp_create_post_autosave shortcircuits if the post is the exact same, so it seems like an autodraft can only be created once there is a change?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When saving, the post is always updated and an identical revision is always created. Note that revisions (including autosave revisions) also provide an "audit trail". That's another reason revisions are not editable directly by the users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We do already provide the functionality to delete revisions via the REST API, so they're not really usable for an audit trail, but rather as a sort of long-term undo. Their primary use is to see the evolution of a post over time.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Auto-save:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User edits the post.
&lt;/li&gt;&lt;li&gt;Periodically the client checks for changes. If there are any, the client saves the post.
&lt;/li&gt;&lt;li&gt;The server has different logic for this save:
&lt;ul&gt;&lt;li&gt;If the post is a draft, it is updated in the db without creating another revision.
&lt;/li&gt;&lt;li&gt;If the post is a draft but the post author is different than the current user, the post is not updated and a revision is created.
&lt;/li&gt;&lt;li&gt;If the post is published a revision is created without updating the post.
&lt;/li&gt;&lt;li&gt;When creating a revision following the above logic, if an autosaved revision already exists, it is updated instead of creating another autosaved revision. Additionally if the post content is identical to the new content that is being auto-saved, the previous autosave revision is deleted to prevent having a redundant revision (i.e. if the update of the previous autosaved revision will make it identical to the current post, there is no need of it).
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
When auto-saving the post may be updated (most common case), or a revision may be created, updated or deleted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right now, there's no way to say "update this post, but don't create a revision". The basic thing we want for autosaves is the ability to do this, but providing this functionality so allows any REST API client to do so, which I'm a little uncomfortable about (and which would totally destroy any concept of revisions being usable as an audit trail, since now changes can be made without being recorded anywhere).
&lt;/p&gt;
&lt;p&gt;
The proposed autosave process I'm talking about here would allow this, but in a very controlled way. Each change would still get a revision, but clients would now have the ability to temporarily persist changes while the user is still working on them.
&lt;/p&gt;
&lt;p&gt;
The main thing that seems strange is the special-casing of the post's author. If we can remove that special-casing, I think the rest is reasonably straightforward to model. Is there a reason for this special-casing?
&lt;/p&gt;
&lt;p&gt;
Changing these I think would make the whole process more predictable for clients, and easier to model.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This differs a lot from the current workflow. Generally when auto-saving in any app (not WP), the actual item is being updated. In WP the logic is more complex as we have revisions and states, draft vs. published. If we create and update a revision directly instead of updating the current item, it will be unexpected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think in order to preserve the concept of revisions as a useful thing, we need to do this; the alternative is to allow any client to update a post without creating a revision (unless I'm missing something there).
&lt;/p&gt;
&lt;p&gt;
If clients don't want to use the autosave process, then they can keep using the existing process, they'll just potentially end up with lots of revisions. I see this autosave concept as similar to database transactions: you queue up and persist a bunch of changes, then commit them all in one revision at once. This preserves the process of always creating revisions, while reducing the amount of noise.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This will generally mean that a post will always have an autosaved revision. That revision will usually be more recent than the post content, and the user will have to manually "restore" that autosave revision before continuing to edit. That's not a good UX :) This can happen now too, but is relatively rare.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The client can implement the functionality themselves to automatically "restore" the autosave. This is essentially what we're doing already with the special-case for the post author, but editors can do it in a more consistent way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't mind changing how saving and auto-saving works in WP, but we'll need to come up with a nice workflow. Unsure if now is the best time as this ticket is urgent, but if you think we can manage it in the next 2-3 days, I'm all for trying :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm working on the implementation for this at the moment based on the latest, so we should have a working example to study.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the part: "User hits save: &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt;" would be an actual save, i.e. &lt;code&gt;POST /wp/v2/posts/{id}&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was thinking this would be a cleaner way of the client actually "committing" the autosaved changes. It avoids the problem where an update to a somewhat-unrelated resource (the post) affects a bunch of others (all the autosaves). This is the current behaviour though: &lt;code&gt;wp_save_post_revision()&lt;/code&gt; is called by &lt;code&gt;wp_insert_post()&lt;/code&gt;, and it wipes out all the autosaves.
&lt;/p&gt;
&lt;p&gt;
(Autosaves are conceptually difficult to model as a resource because of this.)
&lt;/p&gt;
&lt;p&gt;
I'll update the proposal to reflect this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is a "disaster recovery" for a rare edge case that was planned for the current (non-API) autosave too. We can remove it if need be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it's a global change, that makes sense; I'd rather track and implement it separately I think :)
&lt;/p&gt;
&lt;p&gt;
(Sorry for the long post again; this is a complex topic.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43687 (Ensure changes to 'Hello Dolly' words don't violate copyright) updated</title>
      
        <dc:creator>dawesi</dc:creator>

      <pubDate>Wed, 04 Apr 2018 02:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43687#comment:1/1522810228426339</guid>
      <description>&lt;p&gt;
Should we rename word press as some sites don't use words but only have pictures, or just an api?
&lt;/p&gt;
&lt;p&gt;
Can we also change Word--press because press is discriminatory to people who dont like things that violently push things into others (aka press).
&lt;/p&gt;
&lt;p&gt;
Wordpress logo is blue, when men prefer and women don't so it should be pink?
&lt;/p&gt;
&lt;p&gt;
Any other nutjobs with low self esteem want to read 'NOTHING' into something, then pretend it's ok to butcher copyright?
&lt;/p&gt;
&lt;p&gt;
They (those disorders) think we can change a song words (illegal), but still run this on PHP, because the architecture already isn't slow? Please hire people who love programming, so they can ignore illegal changes like this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43687 (Ensure changes to 'Hello Dolly' words don't violate copyright) created</title>
      
        <dc:creator>dawesi</dc:creator>

      <pubDate>Wed, 04 Apr 2018 02:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43687</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43687/1522809673579742</guid>
      <description>&lt;p&gt;
This ER &lt;a href="https://core.trac.wordpress.org/ticket/43555"&gt;https://core.trac.wordpress.org/ticket/43555&lt;/a&gt; (the most PC change ever made to WordPress), may now be violating copyright law.
&lt;/p&gt;
&lt;p&gt;
Can you change the words of a song to suit yourself without ramification?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43555 (Keep Hello Dolly from displaying sexist text in the admin) updated</title>
      
        <dc:creator>dawesi</dc:creator>

      <pubDate>Wed, 04 Apr 2018 02:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43555#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43555#comment:36/1522809270270391</guid>
      <description>&lt;p&gt;
I'm putting this ER on my wall for the most PC fix ever.
&lt;/p&gt;
&lt;p&gt;
Seriously, let's change the lyrics of a copyrighted song? Is that even legal? Is the complaint even in line with the original meaning of the words?
&lt;/p&gt;
&lt;p&gt;
Just because you say it should be changed, doesn't mean it should. Sick of people with low self esteem putting cotton wool everywhere, how about fixing your issues, and self pity, instead of breaking the law by changing words to someone elses song to suit your disorder?
&lt;/p&gt;
&lt;p&gt;
This is the start of the end of Wordpress, bring on the lawyers. (this is going to make tech news for sure)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>