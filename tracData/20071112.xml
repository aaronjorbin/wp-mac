<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #5148 (XMLRPC interface should support custom fields) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 12 Nov 2007 22:57:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5148#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5148#comment:4/1194908228000000</guid>
      <description>&lt;p&gt;
The attached diff exposes custom fields via wp.getPage and metaWeblog.getPost (and their friends).  The new field is called "custom_fields" and an array of structs, with each struct containing three entries: id, key and value.  Something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    "custom_fields" = (
        {id = 129; key = city; value = Sacramento; },
        {id = 130; key = city; value = Sandy; }
    )
&lt;/pre&gt;&lt;p&gt;
Custom fields can be added via wp.newPost/editPost and metaWeblog.newPost/editPost following the same general format.  If a custom field entry included with a post contains an "id" value then an update is done.  If there is no "id" then an add is done.  If there is an "id" value and no "key" value then the custom field with that id is deleted.
&lt;/p&gt;
&lt;p&gt;
I'm also open to the possibility of a wp.addCustomField(blog_id, post_id, key, value) style methods if discussions show that there is an interest and a reasonable use for them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>current_theme.diff attached to Ticket #5346</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 22:55:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5346/current_theme.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5346/current_theme.diff/1194908123000000</guid>
      <description>&lt;p&gt;
Adds switch_theme() and caches current theme in options
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5346 (Cache current theme in options) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 22:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5346</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5346/1194908094000000</guid>
      <description>&lt;p&gt;
get_theme_mod() calls get_current_theme() which in turn calls get_themes().  get_themes() scans and parses all themes.  This means that themes that call get_theme_mod() scan and parse all themes on every page load.  This includes themes that use the custom image header library. Profiling on my testbed revealed that 10% of the load time for the front page was due to get_theme_mod() and friends.  Saving the current theme in options eliminates the need to rescan themes on every load.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>xmlrpc.php.diff attached to Ticket #5148</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 12 Nov 2007 22:51:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5148/xmlrpc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5148/xmlrpc.php.diff/1194907902000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5330 (wxr import inserts tags with numbers instead of names) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 12 Nov 2007 22:11:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5330#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5330#comment:4/1194905519000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5344 (Users without comment moderation priv's shouldn't be able to see ...) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 12 Nov 2007 21:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5344#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5344#comment:1/1194901344000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5337 (Wrong timezone with comment_time and the_time since DST ended) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 12 Nov 2007 20:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5337#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5337#comment:2/1194901199000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5341 (New wp.getCommentModerationCount XML-RPC method) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 12 Nov 2007 20:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5341#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5341#comment:2/1194901094000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5340 (Regex warning in convert_smilies) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 12 Nov 2007 20:57:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5340#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5340#comment:2/1194901030000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5335 (Performance tweak for apply_filters loop) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 12 Nov 2007 20:52:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5335#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5335#comment:5/1194900750000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6333]: Check publish_posts not edit_published_posts when setting pending ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6333</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6333/1194897489634549</guid>
      <description>&lt;p&gt;
Check publish_posts not edit_published_posts when setting pending status.  Props jeremyclarke. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5329" title="#5329: defect (bug): &amp;#34;submit for review&amp;#34; feature checks wrong permission and publishes (closed: fixed)"&gt;#5329&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5329 ("submit for review" feature checks wrong permission and publishes) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5329#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5329#comment:1/1194897489000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6333" title="Check publish_posts not edit_published_posts when setting pending ..."&gt;[6333]&lt;/a&gt;) Check publish_posts not edit_published_posts when setting pending status.  Props jeremyclarke. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5329" title="#5329: defect (bug): &amp;#34;submit for review&amp;#34; feature checks wrong permission and publishes (closed: fixed)"&gt;#5329&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5330 (wxr import inserts tags with numbers instead of names) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5330#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5330#comment:3/1194897103000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6332" title="Make sure term id is an int. Props tellyworth. fixes #5330"&gt;[6332]&lt;/a&gt;) Make sure term id is an int. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5330" title="#5330: defect (bug): wxr import inserts tags with numbers instead of names (closed: fixed)"&gt;#5330&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6332]: Make sure term id is an int. Props tellyworth. fixes #5330</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:51:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6332</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6332/1194897102924594</guid>
      <description>&lt;p&gt;
Make sure term id is an int. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5330" title="#5330: defect (bug): wxr import inserts tags with numbers instead of names (closed: fixed)"&gt;#5330&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [6331]: Eliminate warnings in convert_smilies. Props tellyworth. fixes #5340</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6331</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6331/1194895986134019</guid>
      <description>&lt;p&gt;
Eliminate warnings in convert_smilies. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5340" title="#5340: defect (bug): Regex warning in convert_smilies (closed: fixed)"&gt;#5340&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5340 (Regex warning in convert_smilies) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5340#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5340#comment:1/1194895986000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6331" title="Eliminate warnings in convert_smilies. Props tellyworth. fixes #5340"&gt;[6331]&lt;/a&gt;) Eliminate warnings in convert_smilies. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5340" title="#5340: defect (bug): Regex warning in convert_smilies (closed: fixed)"&gt;#5340&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6330]: Remove unused variable. Props epper. fixes #5339</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6330</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6330/1194895909530573</guid>
      <description>&lt;p&gt;
Remove unused variable. Props epper. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5339" title="#5339: enhancement: Unused $pwd variable in wp_login() function (closed: fixed)"&gt;#5339&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5339 (Unused $pwd variable in wp_login() function) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5339#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5339#comment:2/1194895909000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6330" title="Remove unused variable. Props epper. fixes #5339"&gt;[6330]&lt;/a&gt;) Remove unused variable. Props epper. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5339" title="#5339: enhancement: Unused $pwd variable in wp_login() function (closed: fixed)"&gt;#5339&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5345 (Post Pending problems) updated</title>
      
        <dc:creator>angelic007</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:29:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5345#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5345#comment:1/1194895747000000</guid>
      <description>&lt;p&gt;
Well, I guess this has something to do with &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/5329"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.wordpress.org/ticket/5329&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>postpending.png attached to Ticket #5345</title>
      
        <dc:creator>angelic007</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5345/postpending.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5345/postpending.png/1194895491000000</guid>
      <description>&lt;p&gt;
write new article
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5345 (Post Pending problems) created</title>
      
        <dc:creator>angelic007</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5345</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5345/1194895463000000</guid>
      <description>&lt;p&gt;
I'm using IE7 and WP 2.3.1. To reproduce this bug (it's my first one i hope i'm doing right) log-in as an author, go to write -&amp;gt; Article, input some test content, choose a category and the "post pending" radiobutton. I'm sorry I use it in Italian and don't know the exact translation, I include a screenshot it should be clear.
&lt;/p&gt;
&lt;p&gt;
Then I click "Save" and close the browser window. Every sign of the saved post is then lost, i can't find it nowhere, neiher as admin nor as the normal user who wrote it, not on the top of write page (the review article shortcut) neither on the article manager page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [6329]: Output WP_Error message when adding categories via AJAX. fixes #5342</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6329/1194894769558634</guid>
      <description>&lt;p&gt;
Output WP_Error message when adding categories via AJAX. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5342" title="#5342: defect (bug): Output WP_Error message when adding categories via AJAX (closed: fixed)"&gt;#5342&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5342 (Output WP_Error message when adding categories via AJAX) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5342#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5342#comment:2/1194894769000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6329" title="Output WP_Error message when adding categories via AJAX. fixes #5342"&gt;[6329]&lt;/a&gt;) Output WP_Error message when adding categories via AJAX. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5342" title="#5342: defect (bug): Output WP_Error message when adding categories via AJAX (closed: fixed)"&gt;#5342&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5336 (TinyMCE Mangles &lt;object&gt; tag's) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 12 Nov 2007 19:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5336#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5336#comment:1/1194894570000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5343 (Users without comment moderation priv's shouldn't be able to see ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 12 Nov 2007 17:07:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5343#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5343#comment:2/1194887220000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5343 (Users without comment moderation priv's shouldn't be able to see ...) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 12 Nov 2007 17:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5343#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5343#comment:1/1194887214000000</guid>
      <description>duplicate: &lt;p&gt;
Dupe of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5344" title="#5344: enhancement: Users without comment moderation priv's shouldn't be able to see ... (closed: duplicate)"&gt;#5344&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>selective_comment_viewing_ban.patch attached to Ticket #5344</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Mon, 12 Nov 2007 16:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5344/selective_comment_viewing_ban.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5344/selective_comment_viewing_ban.patch/1194886720000000</guid>
      <description>&lt;p&gt;
Patch altering the comment selection SQL on edit.php to not return comments if user cannot moderate comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5344 (Users without comment moderation priv's shouldn't be able to see ...) created</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Mon, 12 Nov 2007 16:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5344</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5344/1194886709000000</guid>
      <description>&lt;p&gt;
Currently users without comment moderation privileges can see the comments in moderation. This could be inappropriate for certain users.
&lt;/p&gt;
&lt;p&gt;
I am working on a Wordpress Mu blogging system for a series of primary school classes and we'll necessarily be giving young children logins to the WP admin area. We want to allow commenting on the blog, and will be using Akismet and the standard comment moderation filters to ensure that spam comments or comments with an adult subject matter are not published and are not visible to the young students.
&lt;/p&gt;
&lt;p&gt;
My proposed patch inserts some additional filters into the comment selection SQL on edit.php comments to ensure that unapproved comments are not selected if the current user cannot moderate_comments. I've only patched wp-admin/edit.php, which is the only place I can find where this problem exists.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5343 (Users without comment moderation priv's shouldn't be able to see ...) created</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Mon, 12 Nov 2007 16:53:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5343</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5343/1194886416000000</guid>
      <description>&lt;p&gt;
Currently users without comment moderation privileges can see the comments in moderation. This could be inappropriate for certain users.
&lt;/p&gt;
&lt;p&gt;
I am working on a Wordpress Mu blogging system for a series of primary school classes and we'll necessarily be giving young children logins to the WP admin area. We want to allow commenting on the blog, and will be using Akismet and the standard comment moderation filters to ensure that spam comments or comments with an adult subject matter are not published and are not visible to the young students.
&lt;/p&gt;
&lt;p&gt;
My proposed patch inserts some additional filters into the comment selection SQL on edit.php comments to ensure that unapproved comments are not selected if the current user cannot moderate_comments.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5189 (Widgets with non-english character in their name are not saved) updated</title>
      
        <dc:creator>nyuhuhuu</dc:creator>

      <pubDate>Mon, 12 Nov 2007 16:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5189#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5189#comment:1/1194885650000000</guid>
      <description>&lt;p&gt;
I cannot reproduce it, it works nice for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 12 Nov 2007 12:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:15/1194872350000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5338#comment:14" title="Comment 14"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We need to profile it to see if its worthwhile.  Is losing the need to sort the priorities worth it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5337 (Wrong timezone with comment_time and the_time since DST ended) updated</title>
      
        <dc:creator>jrawle</dc:creator>

      <pubDate>Mon, 12 Nov 2007 09:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5337#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5337#comment:1/1194861136000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
From the PHP manual &lt;a class="ext-link" href="http://www.php.net/mktime"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.php.net/mktime&lt;/a&gt; :
&lt;/p&gt;
&lt;p&gt;
is_dst
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
This parameter can be set to 1 if the time is during daylight savings time (DST), 0 if it is not, or -1 (the default) if it is unknown whether the time is within daylight savings time or not. If it's unknown, PHP tries to figure it out itself. This can cause unexpected (but not incorrect) results.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The parameter is deprecated in PHP 5.1.0 and "the new timezone handling features should be used instead."
&lt;/p&gt;
&lt;p&gt;
For servers in the UK, it seems PHP is "figuring out" that they are on British time in the summer, but in the winter it gets it slightly wrong and assumes the machine is permanently on UTC (hence UTC not GMT).
&lt;/p&gt;
&lt;p&gt;
Perhaps this should be addressed in Wordpress along with other issues surrounding timezones, for example automatic DST?
&lt;/p&gt;
&lt;p&gt;
Other timezones could be affected if PHP makes the wrong guess as to the timezone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5341 (New wp.getCommentModerationCount XML-RPC method) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Mon, 12 Nov 2007 08:15:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5341#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5341#comment:1/1194855352000000</guid>
      <description>&lt;p&gt;
I applaud the enthusiasm to add new support to the API, but I'm worried that jumping right on ideas like this might not be the way to go about it. Developing and adding to the API should come with some deliberation, and should strive to expose as much information from the system as possible, in a way that is consistent with the rest of the API.
&lt;/p&gt;
&lt;p&gt;
I feel like the plugin is cool, and allowed the author to achieve something cool. But it's such a pinpointed piece of information, it seems really weird to expose just this through the API without thinking about all the other related information that might be exposed along with it. Why just the moderated comment count? Why not the comment details that go along with it? Why not the UNmoderated comments?
&lt;/p&gt;
&lt;p&gt;
I don't think you should let the very narrow goals of the plugin dictate what your API looks like. The development of the API over the years has been frustratingly slow at times, but surely this can wait for more than a few days after the plugin was released before it creeps into the supported API?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5342 (Output WP_Error message when adding categories via AJAX) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 05:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5342#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5342#comment:1/1194846312000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>inset_cat_wp_err.diff attached to Ticket #5342</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 05:44:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5342/inset_cat_wp_err.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5342/inset_cat_wp_err.diff/1194846262000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5342 (Output WP_Error message when adding categories via AJAX) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 05:44:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5342</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5342/1194846255000000</guid>
      <description>&lt;p&gt;
Currently, adding categories via AJAX outputs a generic error message when something goes wrong in wp_insert_category() since that function does not return WP_Error.  Let's add an option to wp_insert_category() that tells it to return WP_Error instead of 0.  We must maintain returning 0 by default for back-compat reasons.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 12 Nov 2007 05:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:14/1194845823000000</guid>
      <description>&lt;p&gt;
We need to profile it to see if its worthwhile.  Is losing the need to sort the priorities worth it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>xmlrpc.php.diff attached to Ticket #5341</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 12 Nov 2007 04:36:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5341/xmlrpc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5341/xmlrpc.php.diff/1194842168000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5341 (New wp.getCommentModerationCount XML-RPC method) created</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 12 Nov 2007 04:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5341</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5341/1194842162000000</guid>
      <description>&lt;p&gt;
The WordPress Comment Moderation Notifier &lt;a class="ext-link" href="http://www.howtogeek.com/howto/the-geek-blog/how-to-geek-software-wordpress-comment-moderation-notifier/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.howtogeek.com/howto/the-geek-blog/how-to-geek-software-wordpress-comment-moderation-notifier/&lt;/a&gt;
is a Windows app that notifies users about the number of comments in the moderation queue.  It does this by requiring a plugin that adds an XML-RPC method called geek.getCommentModerationCount.
&lt;/p&gt;
&lt;p&gt;
This seems like a helpful bit of information to expose, so I put together a patch against -trunk to implement this.  It is basically the same code as the plugin with only a few modifications.
&lt;/p&gt;
&lt;p&gt;
The included patch calls the method wp.getCommentModerationCount, other WordPress specific methods are under wp.* so this seemed like the best place for it.  It also includes an alias for the geek.getCommentModerationCount method so that this app and others based on it will work unmodified.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 12 Nov 2007 03:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:13/1194837971000000</guid>
      <description>&lt;p&gt;
Yeah, I too personally prefer the flexibility of no limit, but then again, you don't really need 10000 filters/actions.
&lt;/p&gt;
&lt;p&gt;
I think it's worth imposing a cap only if it gives us a performance increase and if that's the case, see my previous comment about the suggested cap.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 12 Nov 2007 02:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:12/1194833589000000</guid>
      <description>&lt;p&gt;
I think no cap is best, since this is sounding like a WTF (&lt;a class="ext-link" href="http://worsethanfailure.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Worse Than Failure&lt;/a&gt;). The story about the guy who kept trying to check the database connection and try to reconnect, up to 5000 times.
&lt;/p&gt;
&lt;p&gt;
I don't think the wiki should be updated. Adding the checks in might hinder plugin developers and would only slow down the Plugin API. I think Plugin developers should give be given faith in that what they've written is what they meant and not mangle and slap their hand when we feel they've done something wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 12 Nov 2007 01:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:11/1194831904000000</guid>
      <description>&lt;p&gt;
The cap &lt;strong&gt;can't&lt;/strong&gt; be 10 as that'd break tons of plugins. Many, many of my plugins need to run after &lt;code&gt;wpautop()&lt;/code&gt; slaughters the post for example.
&lt;/p&gt;
&lt;p&gt;
Personally, I think a cap of 20 would be best. This would put the default of 10 right in the middle and allow for enough post-10 room to run enough filters to do most anything in the right order.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [81]: add mask_input_value() util function</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Sun, 11 Nov 2007 22:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/81/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/81/tests/1194820737814566</guid>
      <description>&lt;p&gt;
add mask_input_value() util function
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5339 (Unused $pwd variable in wp_login() function) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Sun, 11 Nov 2007 22:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5339#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5339#comment:1/1194820060000000</guid>
      <description>&lt;p&gt;
Perhaps &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2244" title="#2244: defect (bug): Make login error check case-sensitive (closed: fixed)"&gt;#2244&lt;/a&gt; should be decided upon too, I think i removed that variable in the patch there too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>empty-smilie-regex-r6307.patch attached to Ticket #5340</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Sun, 11 Nov 2007 22:04:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5340/empty-smilie-regex-r6307.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5340/empty-smilie-regex-r6307.patch/1194818654000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5340 (Regex warning in convert_smilies) created</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Sun, 11 Nov 2007 22:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5340</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5340/1194818641000000</guid>
      <description>&lt;p&gt;
It's possible for convert_smilies() to produce warnings if the $wp_smiliessearch global is empty.  The enclosed patch is a simple defensive conditional to guard against that possbility.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 11 Nov 2007 21:32:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:10/1194816726000000</guid>
      <description>&lt;p&gt;
We've documented 1 - 10 in the past, but it was never enforced in code and some places in WP use values like 15, 20, 25, and 50.  We could probably go to a 0 - 15 scale and set values &amp;gt; 15 to 15.  I think 0-15 would cover most current uses.  The priorities used in default-filters can be changed to fall in this range. There's no reason for priorities as high as 50.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 11 Nov 2007 21:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:9/1194815915000000</guid>
      <description>&lt;p&gt;
FWIW, here's the patch I've been playing with.  It adds a feed_type arg to wp_list_authors() and wp_list_categories().  It deprecates old _rss_link() functions and moves all feed_link functions to link-template.php so that they are not so scattered.  No template changes are made.  That's for later.
&lt;/p&gt;
&lt;p&gt;
This patch still uses get_default_feed() rather than an option.  I'll bring up adding an option for this in the next dev meeting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>default_feed.diff attached to Ticket #5328</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 11 Nov 2007 21:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5328/default_feed.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5328/default_feed.diff/1194815696000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 21:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:9/1194815269000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/add_action"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Wiki&lt;/a&gt;. Apply_filter does not have a corresponding limit. This should go to a new bug; it's tangential to the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5339 (Unused $pwd variable in wp_login() function) created</title>
      
        <dc:creator>epper</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:57:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5339</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5339/1194814632000000</guid>
      <description>&lt;p&gt;
I was looking the code of wp_login() in wp-includes/pluggable.php and I've seen that there's an unused variable: $pwd on line 305:
&lt;/p&gt;
&lt;pre class="wiki"&gt;303 	        } else {
304 	            $error = __('&amp;lt;strong&amp;gt;ERROR&amp;lt;/strong&amp;gt;: Incorrect password.');
305 	            $pwd = '';
306 	            return false;
307 	        }
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:8/1194814545000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5338#comment:3" title="Comment 3"&gt;Quandary&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... because the documentation &lt;strong&gt;specifically&lt;/strong&gt; states that priority levels are 1-10. Anyone doing otherwise is broken.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Where do you see that?  Even the default filters in wp-includes/default-filters.php have much higher numbers than that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:7/1194814482000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:6/1194811995000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Look at the taxonomy. Apply filters are used on objects. Therefore the documentation is correct.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5338#comment:5" title="Comment 5"&gt;Quandary&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You also need to pre-define it if you take out the array sort (I don't see any sorting being done on $wp_filters anymore). Otherwise, the priorities will get all screwed up. Pri-10 will likely wind up running first, because it'll usually be the first level created.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
$example = array();
$example[10] = "This is supposed to be last";
$example[1] = "This is supposed to be first";
foreach($example as $text)
    echo "$text\n";
?&amp;gt;
&lt;/pre&gt;&lt;h3 id="Output"&gt;Output&lt;/h3&gt;
&lt;pre class="wiki"&gt;This is supposed to be last
This is supposed to be first
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
This the reason I had keywords 'needs-testing', I had thought this is the case. Without testing, it is unknown whether this would be the case. I will submit a new patch that fixes this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:5/1194811808000000</guid>
      <description>&lt;p&gt;
You also need to pre-define it if you take out the array sort (I don't see any sorting being done on $wp_filters anymore). Otherwise, the priorities will get all screwed up. Pri-10 will likely wind up running first, because it'll usually be the first level created.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
$example = array();
$example[10] = "This is supposed to be last";
$example[1] = "This is supposed to be first";
foreach($example as $text)
    echo "$text\n";
?&amp;gt;
&lt;/pre&gt;&lt;h3 id="Output"&gt;Output&lt;/h3&gt;
&lt;pre class="wiki"&gt;This is supposed to be last
This is supposed to be first
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:04:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:4/1194811472000000</guid>
      <description>&lt;p&gt;
Yeah, then it should lock those numbers in, which it doesn't. It allows for any number, therefore unofficially, any priority number must be supported. The documentation states that to keep things standard, but without checks in the code, then it really is just an &lt;strong&gt;suggestion&lt;/strong&gt; on what the plugin authors should do and not what they must do. If it was something they must do, then an error would have been thrown.
&lt;/p&gt;
&lt;p&gt;
The point is, if I hook into 11, then I mostly know that it will be processed last and if I hook into '0' I can guess that it will be run before anything else.
&lt;/p&gt;
&lt;p&gt;
There is no point arguing this, either we add in the checks or we don't, but unless we do, then filling the priority list manually is not an option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:3/1194810903000000</guid>
      <description>&lt;p&gt;
... because the documentation &lt;strong&gt;specifically&lt;/strong&gt; states that priority levels are 1-10. Anyone doing otherwise is broken.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:45:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:2/1194810342000000</guid>
      <description>&lt;p&gt;
I can't and will not advocate something so hackish. What about plugins that hook into at priority of '11' or '12'? Plugins that want to execute after everything else would want to hook into priority of 11, as I have done before with 'init'.
&lt;/p&gt;
&lt;p&gt;
If that is the case, then everything else is pointless and should be reverted back, since it has been known to work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5335 (Performance tweak for apply_filters loop) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:44:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5335#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5335#comment:4/1194810292000000</guid>
      <description>&lt;p&gt;
For the record, this patch is written and tested against &lt;em&gt;2.3.1&lt;/em&gt;, not 2.4/trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4595 (Format of feed (RSS, Atom) should be an option) updated</title>
      
        <dc:creator>rubys</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4595#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4595#comment:8/1194809716000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:30:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:1/1194809422000000</guid>
      <description>&lt;p&gt;
The foreach setup breaks in this implementation, because the priority array is not pre-filled; you'll get a bug if, e.g., a pri-1 callback adds a pri-2 callback on the currently-executing hook, and there are no pri-2 callbacks yet. Please see the &lt;em&gt;second&lt;/em&gt; patch attached to bug &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5335" title="#5335: enhancement: Performance tweak for apply_filters loop (closed: invalid)"&gt;#5335&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm also pretty sure that filters (as implemented for apply_filters) are applicable to strings &lt;em&gt;only&lt;/em&gt;. do_action is more generic, but it has a completely separate implementation for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>rubys</dc:creator>

      <pubDate>Sun, 11 Nov 2007 18:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:8/1194806876000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5328#comment:6" title="Comment 6"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's split this into two parts.The first part would make it possible to change the default feed in the guts of WP.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would be &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/4595"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Ticket 4595&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The second would allow themes to be feed type neutral, which is the bigger change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once of the various patches to ticket 4595 is committed, I'll gladly generate a new patch for 5328 which builds upon this.  Making a subset of the various names translatable and/or actually translating them could be a third ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>jasonadamyoung</dc:creator>

      <pubDate>Sun, 11 Nov 2007 18:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:7/1194805363000000</guid>
      <description>&lt;p&gt;
If this is going to be part of core - is there any reason why this shouldn't be part of the wp_options?  I admittedly haven't traced the execution of this everywhere, but it seems like get_option('default_feed_format') would be preferred over get_default_feed and still hardcoding 'rss2' in that (or even hardcoding it in a sense in a wp_feed_selector).
&lt;/p&gt;
&lt;p&gt;
I might be missing something in the overhead of the options use, but it looks like the options already have filter hooks - and sticking this in wp_options leaves open the door for a interface plugin to set the default feed format from within the admin interface.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin.r6328.patch attached to Ticket #5338</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 17:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5338/plugin.r6328.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5338/plugin.r6328.patch/1194802773000000</guid>
      <description>&lt;p&gt;
Based off of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6328" title="phpdoc for get_category_feed_link(). see #5173"&gt;r6328&lt;/a&gt; for the Plugin API
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) created</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 17:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338/1194802742000000</guid>
      <description>&lt;p&gt;
Clean up Plugin API functions and some optimization tweaks based on WP-Hackers discussion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use Foreach instead of while loops
&lt;/li&gt;&lt;li&gt;Move 'all' hook call to its own function
&lt;/li&gt;&lt;li&gt;Set current filter tag variable after the check for the hook's existence.
&lt;/li&gt;&lt;li&gt;Remove merged_filters variable
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5337 (Wrong timezone with comment_time and the_time since DST ended) created</title>
      
        <dc:creator>jrawle</dc:creator>

      <pubDate>Sun, 11 Nov 2007 17:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5337</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5337/1194802478000000</guid>
      <description>&lt;p&gt;
I am designing a theme where I want the current timezone to be displayed after the time in comment and post timestamps. For example, I use &amp;lt;?php comment_time() ?&amp;gt; with my default time format set to H:i T.
&lt;/p&gt;
&lt;p&gt;
I am in the UK, and until the clocks changed on 28 October everything was fine. Posts or comments written during a summer gave the time as e.g. "14:00 BST" while those written in the winter said "13:00 GMT".
&lt;/p&gt;
&lt;p&gt;
However, since BST ended, I now see "UTC" for all datestamps, irrespective of whether they were posted during the summer or winter. So the two examples given above would now show "14:00 UTC" and "13:00 UTC" respectively, despite the fact that the first one is incorrect. I also don't understand why it switched from using GMT to UTC.
&lt;/p&gt;
&lt;p&gt;
I do not know whether this bug is present in other timezones.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5336 (TinyMCE Mangles &lt;object&gt; tag's) created</title>
      
        <dc:creator>DaveHope</dc:creator>

      <pubDate>Sun, 11 Nov 2007 10:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5336</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5336/1194776470000000</guid>
      <description>&lt;p&gt;
I'm trying to embed some flash to a page on my site, I'm entering the correct &amp;lt;object&amp;gt; &amp;amp; &amp;lt;enbed&amp;gt; code into the page, which displays fine.
&lt;/p&gt;
&lt;p&gt;
However, If I goto edit the page at a later date the code gets mangled, wordpress inserts a &amp;lt;/object&amp;gt; before the &amp;lt;embed&amp;gt; and replaces me closing /&amp;gt; with &amp;gt;&amp;lt;/embed&amp;gt;
&lt;/p&gt;
&lt;p&gt;
This is a real pain, as it means I have to re-edit my flash every time i alter the page.
&lt;/p&gt;
&lt;p&gt;
Is there a tag to prevent wordpress altering html, or should this be reported as a bug? - I'm guessing the html tidy process doesn't like &amp;lt;object&amp;gt; &amp;amp; &amp;lt;embed&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The HTML i'm adding to the code window can be seen here:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0" height="600" width="500"&amp;gt;
&amp;lt;param name="movie" value="/Files/polaroid.swf" /&amp;gt;
&amp;lt;param name="menu" value="false" /&amp;gt;
&amp;lt;param name="quality" value="high" /&amp;gt;
&amp;lt;param name="flashvars" value="flickrID=17378729@N00" /&amp;gt;&amp;lt;embed src="/Files/polaroid.swf" menu="false" quality="high" bgcolor="#fff" flashvars="flickrID=17378729@N00" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="600" width="500" /&amp;gt;&amp;lt;/object&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I know that as a wordaround I could probably disable the TinyMCE editor, but 95% of the time it's fine.
&lt;/p&gt;
&lt;p&gt;
Dave
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 11 Nov 2007 02:49:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:6/1194749370000000</guid>
      <description>&lt;p&gt;
My patch marks the long name for translation.  Realistically, for translation to be useful, feed info for all feeds need to be in core so that the strings will be in the default message catalog.  Otherwise, the plugin will need to ship with its own translations.  i18n theme authors probably won't bother changing their themes to use feed info if it means relying on an outside catalog. The fact that this requires theme changes and has i18n impact makes this more involved than if we were just changing the default feed links to do atom instead of rss2. comments_feed_link(), for example, is useless for an i18n-ready theme.  Such themes would have to do something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;&amp;lt;a href="&amp;lt;?php echo get_post_comments_feed_link($post-&amp;gt;ID); ?&amp;gt;"&amp;gt;&amp;lt;?php printf(__("%s feed for comments on this post."), get_bloginfo('feed_format_long_name'); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Let's split this into two parts.  The first part would make it possible to change the default feed in the guts of WP.  The second would allow themes to be feed type neutral, which is the bigger change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5335 (Performance tweak for apply_filters loop) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Sun, 11 Nov 2007 00:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5335#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5335#comment:3/1194739668000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>