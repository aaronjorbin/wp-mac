<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 07 Oct 2014 23:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:24/1412724281298617</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 07 Oct 2014 23:24:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:23/1412724267395923</guid>
      <description>&lt;p&gt;
Been testing/playing with &lt;a class="ext-link" href="https://github.com/avryl/focus"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the plugin&lt;/a&gt;, trying to "get a feel for it" when using it for extended periods of time:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The menu sliding is quite distracting even though it happens on hover/mouse move. This is something I really hate: any moving "things" while trying to concentrate reading, even worse when writing. IMHO fading out is a lot less distracting.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I like the idea to have two steps fade-out and quite fast fade-in (about 150-200ms). The whole fade out could be:
&lt;ul&gt;&lt;li&gt;Wait for 3 sec.
&lt;/li&gt;&lt;li&gt;Fade to about 25%.
&lt;/li&gt;&lt;li&gt;Wait for 2-3 sec. (can be longer).
&lt;/li&gt;&lt;li&gt;Fade out completely.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Hiding the Add Media and editor switching buttons on scrolling down seems good but makes it a bit uncomfortable when you need to use them. The direction you normally scroll while writing is down. You need to scroll a bit up to show them, that "looses" the current place on the screen where the caret is.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;A good enhancement would be to keep the caret a bit higher than the editor bottom (have some white space at the end). IMHO it's uncomfortable when typing near the bottom of the screen.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25775 (WP_Date_Query table prefixing) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 07 Oct 2014 23:24:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25775#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25775#comment:36/1412724245923440</guid>
      <description>&lt;p&gt;
nacin, Viper007Bond - Thanks, guys. You're right.
&lt;/p&gt;
&lt;p&gt;
So, the current state of affairs is that we check column names against a whitelist, but the whitelist is filtered, and no sanitization happens after that. So a plugin author could do damage by using this filter, but of course an installed plugin can do all sorts of damage. In the name of being conservative, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25775/25775.3.patch" title="Attachment '25775.3.patch' in Ticket #25775"&gt;25775.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25775/25775.3.patch" title="Download"&gt;​&lt;/a&gt; improves the current situation by stripping &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.0/en/identifiers.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;forbidden characters&lt;/a&gt; from column names - even those added to the whitelist via filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25775.3.patch attached to Ticket #25775</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 07 Oct 2014 23:12:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25775/25775.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25775/25775.3.patch/1412723541434162</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10551 (wp_die() triggers block when using ModSecurity Core Rules) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 07 Oct 2014 22:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10551#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10551#comment:22/1412722516113784</guid>
      <description>&lt;p&gt;
I see what you mean. I think given that the second argument is so seldom used, I can get on board with having the second arg be used for the code.
&lt;/p&gt;
&lt;p&gt;
IMO this is too far: &lt;code&gt;wp_die( int $response_code = 500 )&lt;/code&gt; I'd be worried about it giving unexpected behaviour, e.g.:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_die( $request-&amp;gt;error_message ); // could unknowingly be an int, and do something unexpected&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
+1 for nacin's  patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10551 (wp_die() triggers block when using ModSecurity Core Rules) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 22:50:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10551#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10551#comment:21/1412722203978161</guid>
      <description>&lt;p&gt;
This function already has a ton of "magic", I'll give you that. Example: for &lt;code&gt;wp_die( $wp_error_object )&lt;/code&gt;, that &lt;code&gt;WP_Error&lt;/code&gt; object could also have a title in its error data, and it'd magically work.
&lt;/p&gt;
&lt;p&gt;
But we're already giving this function a new prototype. Existing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die( string|WP_Error $message = '', $title = '', array $args = array() )
&lt;/pre&gt;&lt;p&gt;
New:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die( string|WP_Error $message = '', $title = '', int $response_code = 500 )
&lt;/pre&gt;&lt;p&gt;
I've been convinced to be conservative on method overloading because it really damages IDE usage (example: &lt;code&gt;add_query_arg()&lt;/code&gt;) but as long as "standard" arguments are listed (in &lt;code&gt;add_query_arg()&lt;/code&gt;'s case, they are not, and &lt;code&gt;func_get_arg()&lt;/code&gt; is used), then I'm more for it. Why not an additional prototype of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die( string|WP_Error $message = '', int $response_code = 500 )
&lt;/pre&gt;&lt;p&gt;
If we had a default message (which we don't), I'd even be OK with even allowing this, too:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die( int $response_code = 500 )
&lt;/pre&gt;&lt;p&gt;
I dunno. I can be convinced either way. Check out &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/10551/10551.diff" title="Attachment '10551.diff' in Ticket #10551"&gt;10551.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/10551/10551.diff" title="Download"&gt;​&lt;/a&gt; as a sample.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15930 (Make trashed posts/pages still readable) updated</title>
      
        <dc:creator>wpkonsulent</dc:creator>

      <pubDate>Tue, 07 Oct 2014 22:35:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15930#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15930#comment:6/1412721355152930</guid>
      <description>&lt;p&gt;
I'm surprised this hasn't gained more traction. I have lots of clients with huge sites and many, many editors who have this problem all the time. Suppose someone trashes a page and the head editor wants to see the content of the trashed page, just to make sure it wasn't trashed by accident. She can't do that without untrashing it and thereby publishing it again, which could bring all sorts of trouble on a large site. Some times there are even several trashed pages with the same name which only makes the problem worse.
&lt;/p&gt;
&lt;p&gt;
Why can't we preview trashed pages, just like we can preview drafts? I'm curious what the reason might be, you know, design-wise.
&lt;/p&gt;
&lt;p&gt;
Always setting post status to draft when untrashing (as suggested by &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/23022" title="#23022: enhancement: Always set posts to draft status when untrashing (assigned)"&gt;#23022&lt;/a&gt;) is sort of fine, but IMO it would be a nice addition if we could also just preview the page without untrashing it. Just to be clear, I'm only suggesting the page to be &lt;strong&gt;previewed&lt;/strong&gt; on the front end. Being able to actually edit trashed pages would probably lead to confusion, so that's not what I'm proposing.
&lt;/p&gt;
&lt;p&gt;
I'd be interested in making a patch for this, btw.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10551.diff attached to Ticket #10551</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 22:27:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10551/10551.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10551/10551.diff/1412720835765839</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Tue, 07 Oct 2014 22:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:28/1412720581989568</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jeremyfelt. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-10-07&amp;amp;sort=asc#m935898"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29557 (PHP ≤ 5.4.8 Crashes on '[' Character in Posts) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 22:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29557#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29557#comment:88/1412720469206552</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29557#comment:87" title="Comment 87"&gt;kovshenin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;If we're going to match shortcodes, why aren't we using the existing cached shortcode regex?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29557#comment62" title="#29557: defect (bug): PHP ≤ 5.4.8 Crashes on '[' Character in Posts (closed: fixed)"&gt;#comment62&lt;/a&gt; through &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29557#comment67" title="#29557: defect (bug): PHP ≤ 5.4.8 Crashes on '[' Character in Posts (closed: fixed)"&gt;#comment67&lt;/a&gt;. Unregistered shortcodes are allowed in order not to break Jetpack Contact.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;"Adding preg_split() inside a loop does not seem like a good direction for performance." - why not? How is it different from using preg_match() inside a loop?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Don't know, maybe due to the larger arrays created. It's more like &lt;code&gt;preg_match_all&lt;/code&gt;. The heuristic is to get the next match.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;I like @azaozz's idea of splitting the regex into smaller managable, consistent and possibly reusable chunks
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Would have to change the spec. The &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; parsing must occur at the same time, as it is now, as far as I know.
&lt;/p&gt;
&lt;p&gt;
I do have a simplified algorithm if you want it:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;parse for html comments
&lt;/li&gt;&lt;li&gt;parse for shortcodes
&lt;/li&gt;&lt;li&gt;parse for html tags
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
It fails three tests now in trunk:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Test:   '&amp;lt;br [gallery ...] ... /&amp;gt;'
Expect: '&amp;lt;br [gallery ...] ... /&amp;gt;'
Actual: '&amp;lt;br [gallery ...] &amp;amp;#8230; /&amp;gt;'
Test:   '&amp;lt;br [[gallery ...]] ... /&amp;gt;'
Expect: '&amp;lt;br [[gallery ...]] ... /&amp;gt;'
Actual: '&amp;lt;br [[gallery ...]] &amp;amp;#8230; /&amp;gt;'
Test:   '[ regex catches this &amp;lt;a href="[quote]"&amp;gt;here&amp;lt;/a&amp;gt; ]'
Expect: '[ regex catches this &amp;lt;a href="[quote]"&amp;gt;here&amp;lt;/a&amp;gt; ]'
Actual: '[ regex catches this &amp;lt;a href=&amp;amp;#8221;[quote]&amp;amp;#8220;&amp;gt;here&amp;lt;/a&amp;gt; ]'
&lt;/pre&gt;&lt;p&gt;
I don't consider those tests important, by the way. But &lt;code&gt;[]&lt;/code&gt; are common in PHP links, and my patch would break:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;a href="http://example.com/?action[string]=1"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
A compromise would be to restrict what can go in that &lt;code&gt;string&lt;/code&gt; to be considered a possible shortcode.
&lt;/p&gt;
&lt;p&gt;
There is an active ticket on allowing shortcodes in &lt;em&gt;more&lt;/em&gt; places, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/24990" title="#24990: defect (bug): Nested Shortcode Inside [caption] (new)"&gt;24990&lt;/a&gt;, which my 3-way algorithm would also break I think.
&lt;/p&gt;
&lt;p&gt;
Other re-arrangements of parsing comments, shortcodes and tags break more important tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28551 (Add Better Debugging Documentation Into wp-config.php) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Tue, 07 Oct 2014 22:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28551#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28551#comment:37/1412719695286492</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28551#comment:36" title="Comment 36"&gt;grantpalin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I agree. (...) renaming one file.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28551#comment:35" title="Comment 35"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The name &lt;code&gt;wp-config-debug.php&lt;/code&gt; would not cause confusion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To both of: Please read my note again. You are addressing (a) a single config file and (b) the name of this single file. I addressed completely different things: Having multiple config files all named similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10551 (wp_die() triggers block when using ModSecurity Core Rules) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 07 Oct 2014 21:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10551#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10551#comment:20/1412718735413966</guid>
      <description>&lt;p&gt;
Ping nacin, I know we discussed this in wceu - how do you feel about this patch? I know there was talk about the second param of &lt;code&gt;''&lt;/code&gt; being a pain, however - I was thinking over this, I think introducing a similarly named function like &lt;code&gt;wp_die_forbidden&lt;/code&gt; or something just increases the amount of inconsistency with having different params.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29833 (Update to jQuery UI 1.11.2) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 07 Oct 2014 21:24:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29833#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29833#comment:10/1412717070322745</guid>
      <description>&lt;p&gt;
We've always included the "official" builds of external libraries. Not happy at all that we have to rebuild jQuery UI and bypass the official build on every update. This method is closest to our current setup but might introduce problems if/when the upstream build process changes. Even using different versions of the build tools might be problematic at some point.
&lt;/p&gt;
&lt;p&gt;
It may be possible to split the official build in four parts/files: UI Core, Interactions, Widgets, Effects. The same way as the &lt;a class="ext-link" href="http://jqueryui.com/download/#!version=1.11.1&amp;amp;themeParams=none&amp;amp;components=0000000000000000000000000000000000000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;sections on the download page&lt;/a&gt;. However not sure this will be better.
&lt;/p&gt;
&lt;p&gt;
As we will be rebuilding UI, we loose the "real life" testing of the builds (i.e. in production we will be running a slightly different code than everybody else). In that terms it is imperative that we adapt and implement the UI's automated tests: &lt;a class="ext-link" href="https://github.com/jquery/jquery-ui/tree/master/tests/unit"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jquery/jquery-ui/tree/master/tests/unit&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #29881 (Better abstraction for WP_*_List_Table so they are easier to subclass) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 07 Oct 2014 21:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29881#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29881#comment:2/1412716482025746</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
column_taxonomy() should probably be protected. Also, it should probably have a name other than column_ because it could otherwise be invoked by single_row_columns().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed, I did originally have this as private, but then moved to public for other to use it - though I think realistically it's only subclasses that will use it so protected it good. As for naming, it's a workaround for avoiding accidental calling via &lt;code&gt;single_row_columns&lt;/code&gt; so though as much as I hate underscored methods, &lt;code&gt;protected function _column_taxonomy&lt;/code&gt; might make the most sense here. &lt;code&gt;get_taxonomy_column&lt;/code&gt; doesn't follow as it outputs data, &lt;code&gt;output_taxonomy_column&lt;/code&gt; -- perhaps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25775 (WP_Date_Query table prefixing) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 07 Oct 2014 21:13:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25775#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25775#comment:35/1412716403409528</guid>
      <description>&lt;p&gt;
Yeah, the validation was there for security reasons not to prevent invalid columns from being used. A whitelist seemed like the best way to do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29154 (plugin_basename() doesn't normalize the file path before unresolving ...) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 21:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29154#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29154#comment:2/1412716278811414</guid>
      <description>&lt;p&gt;
Refreshed for current trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29154.2.diff attached to Ticket #29154</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 21:08:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29154/29154.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29154/29154.2.diff/1412716109957270</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28092 (Ability to filter or remove error codes from WP_Error class) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28092#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28092#comment:12/1412715569228883</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28092 (Ability to filter or remove error codes from WP_Error class) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28092#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28092#comment:11/1412715546766870</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25775 (WP_Date_Query table prefixing) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25775#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25775#comment:34/1412715471193093</guid>
      <description>&lt;p&gt;
Fairly important note: esc_sql() is useless, security-wise, for column names.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25775 (WP_Date_Query table prefixing) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25775#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25775#comment:33/1412714241169870</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25775#comment:32" title="Comment 32"&gt;Viper007Bond&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for your work on this! :)
&lt;/p&gt;
&lt;p&gt;
One quick question: why set &lt;code&gt;$dotpos&lt;/code&gt; if you aren't going to use it? Why not just do &lt;code&gt;false === strpos( $column, '.' )&lt;/code&gt; ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Whoops - this was a remnant of a different strategy I'd tried. Fixed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25775/25775.2.patch" title="Attachment '25775.2.patch' in Ticket #25775"&gt;25775.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25775/25775.2.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Viper007Bond and others - I'd like some feedback on the following:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Does the patch deal adequately with the situations listed above? Does it resolve the original problem of taxonomy/meta JOINs? Does it maintain compatibility with real-world uses of the 'date_query_valid_columns' filter that you're familiar with? I think the unit tests show that it does all of these things, but a sanity check would be nice.
&lt;/li&gt;&lt;li&gt;The one potential downside of my approach is that &lt;code&gt;validate_column()&lt;/code&gt; does a bit less than it did before. It used to be that you could circumvent its logic only by filtering 'date_query_valid_columns'. Now you can also pass a table-prefixed value. Do we care? Note that we are *sanitizing* the value (ie against SQL injection). The "validation" in question is merely a developer service: we try to make sure that no one attempts to do a date_query against an incompatible column. My personal opinion is that it's actually *better* to do less validation, because it means that passing a bad column name will result in SQL errors rather than mysteriously falling back to the value of 'post_date', which might silently return unintended results. So, with my patch, the real purpose of the method is not so much validation as it is convenience: it allows you to pass merely 'post_date' instead of requiring you to concatenate &lt;code&gt;$wpdb-&amp;gt;posts . '.post_date'&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26268 (Add UI to Category page to indicate default category) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:37:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26268#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26268#comment:20/1412714227808235</guid>
      <description>&lt;p&gt;
@helen: First glance, not pretty.
&lt;/p&gt;
&lt;p&gt;
What is your thinking behind floating it to the top? Add visibility? Quicker to find to edit? Would linking the "Default Category: X" text added in 26268.4.diff to the edit terms page meet the objective?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28551 (Add Better Debugging Documentation Into wp-config.php) updated</title>
      
        <dc:creator>grantpalin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:37:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28551#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28551#comment:36/1412714224360229</guid>
      <description>&lt;p&gt;
I agree. If someone is already downloading WordPress and has to open the config file to make edits, the same person can handle renaming one file.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28551#comment:35" title="Comment 35"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The name &lt;code&gt;wp-config-debug.php&lt;/code&gt; would not cause confusion.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28551#comment:33" title="Comment 33"&gt;F J Kaiser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see your point and it's valid. My 2 cents: By now we already got an example file where the user has to fill the blanks. I'd really not like to see three different config files shipped in the root dir. This is error prone (renaming the wrong file).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29881 (Better abstraction for WP_*_List_Table so they are easier to subclass) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:28:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29881#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29881#comment:1/1412713735660634</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I absolutely love this.
&lt;/p&gt;
&lt;p&gt;
Sadly the list tables were all implemented in slightly different ways, which is probably why we all hate them so much. But there *is* something to salvage here, and single_row_columns() can help with that. It's a nice abstraction we should be using everywhere.
&lt;/p&gt;
&lt;p&gt;
column_taxonomy() should probably be protected. Also, it should probably have a name other than column_ because it could otherwise be invoked by single_row_columns().
&lt;/p&gt;
&lt;p&gt;
I see no back compat concerns here, either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25775.2.patch attached to Ticket #25775</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:27:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25775/25775.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25775/25775.2.patch/1412713670295348</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>wp-posts-list-table.diff attached to Ticket #29881</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29881/wp-posts-list-table.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29881/wp-posts-list-table.diff/1412713012824637</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29881 (Better abstraction for WP_*_List_Table so they are easier to subclass) created</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:16:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29881</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29881/1412712981642950</guid>
      <description>&lt;p&gt;
Currently &lt;code&gt;WP_Posts_List_Table&lt;/code&gt; is a bit of a complicated mess as all columns are in a big switch statement in the &lt;code&gt;single_row()&lt;/code&gt; method. This annoying for a couple of reasons.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The code is a messy, huge method making it difficult to maintain and understand.
&lt;/li&gt;&lt;li&gt;Subclassing is a pain as you can't override a single column the way the magic method calling of &lt;code&gt;column_$column_name&lt;/code&gt; should work.
&lt;/li&gt;&lt;li&gt;Subclasses don't automatically get the &lt;code&gt;column_$column_name&lt;/code&gt; functionality as &lt;code&gt;WP_Posts_List_Table&lt;/code&gt; (for whatever reason) closes out this functionality by overriding the &lt;code&gt;single_row()&lt;/code&gt; method.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'm not a fan of changing things for the sake of it, but I think this is an important cleanup. &lt;code&gt;WP_Comment_List_Table&lt;/code&gt; is pretty well implemented in comparison, but I imagine &lt;code&gt;WP_Posts_List_Table&lt;/code&gt; is the most often subclassed due to the heavy use of custom post types.
&lt;/p&gt;
&lt;p&gt;
Apologies if this has been discussed before and/or rejected. I tried to use search... which I seem to kind of fail at finding tickets.
&lt;/p&gt;
&lt;p&gt;
I attached a preliminary path that is functional but needs a couple of edge cases cleaned up. It basically splits out all the columns into their own method which are automatically called from &lt;code&gt;single_row_columns()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25775 (WP_Date_Query table prefixing) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 07 Oct 2014 20:01:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25775#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25775#comment:32/1412712097905883</guid>
      <description>&lt;p&gt;
Thanks for your work on this! :)
&lt;/p&gt;
&lt;p&gt;
One quick question: why set &lt;code&gt;$dotpos&lt;/code&gt; if you aren't going to use it? Why not just do &lt;code&gt;false === strpos( $column, '.' )&lt;/code&gt; ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29880 (wp_insert_user() wiping out user_pass when one isn't provided and the ...) created</title>
      
        <dc:creator>cartpauj</dc:creator>

      <pubDate>Tue, 07 Oct 2014 19:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29880</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29880/1412711942828363</guid>
      <description>&lt;p&gt;
This is similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21495" title="#21495: defect (bug): wp_insert_user allows a user to be created with empty passwords (closed: wontfix)"&gt;#21495&lt;/a&gt; but not identical.
&lt;/p&gt;
&lt;p&gt;
Passing wp_insert_user() the following for example, will cause the Users password to be nullified if the user already exists:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(6) {
  ["role"]=&amp;gt;
  string(10) "subscriber"
  ["user_login"]=&amp;gt;
  string(15) "test"
  ["user_email"]=&amp;gt;
  string(15) "test@example.com"
  ["first_name"]=&amp;gt;
  string(3) "John"
  ["last_name"]=&amp;gt;
  string(3) "Doe"
  ["ID"]=&amp;gt;
  int(123)
}
&lt;/pre&gt;&lt;p&gt;
I propose changing (found here: &lt;a class="ext-link" href="http://cspf.co/XvqW"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cspf.co/XvqW&lt;/a&gt;)
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user_pass = $userdata['user_pass'];
&lt;/pre&gt;&lt;p&gt;
to this or something similar
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user_pass = (isset($userdata['user_pass']) &amp;amp;&amp;amp; !empty($userdata['user_pass']))?$userdata['user_pass']:$old_user_data-&amp;gt;user_pass;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29879 (theme_mod option length) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Tue, 07 Oct 2014 19:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29879#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29879#comment:1/1412711357847040</guid>
      <description>&lt;p&gt;
I assume that this is hitting the limit of 64 characters for the &lt;code&gt;option_name&lt;/code&gt; column in the options table. I would imagine this scenario happening with other premium themes too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29879 (theme_mod option length) created</title>
      
        <dc:creator>aubreypwd</dc:creator>

      <pubDate>Tue, 07 Oct 2014 18:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29879/1412707748349179</guid>
      <description>&lt;p&gt;
Today I uploaded a theme that had a rather long name: &lt;code&gt;andrew-vista-surgicalcloud-scheduleperfect-hybrid-wordpress-theme-3b5734edbcc7.zip&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
It was downloaded from a BitBucket Repository and automatically included this long name with SHA's, etc, so the folder in the .zip was named &lt;code&gt;andrew-vista-surgicalcloud-scheduleperfect-hybrid-wordpress-theme-3b5734edbcc7&lt;/code&gt;, thus the uploaded theme folder created on the server was named &lt;code&gt;andrew-vista-surgicalcloud-scheduleperfect-hybrid-wordpress-theme-3b5734edbcc7&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
All was fine until I ran into a problem. Anything saved via &lt;code&gt;'type' =&amp;gt; 'theme_mod'&lt;/code&gt;, including menus, was not saving. I did a look in my DB and found that the key for the option was shorter than the folder name, see &lt;a class="ext-link" href="http://prntscr.com/4tyxio"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://prntscr.com/4tyxio&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Not sure what the fix is, but this at least happened on two WordPress installs.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28092 (Ability to filter or remove error codes from WP_Error class) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 18:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28092#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28092#comment:10/1412706692566263</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28092/28092.2.diff" title="Attachment '28092.2.diff' in Ticket #28092"&gt;28092.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28092/28092.2.diff" title="Download"&gt;​&lt;/a&gt; added some more tests and also moved them to general/errors.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28092.2.diff attached to Ticket #28092</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 18:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28092/28092.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28092/28092.2.diff/1412706595556312</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29670 (Admin cannot use own password to log in) updated</title>
      
        <dc:creator>pranav_hivarekar</dc:creator>

      <pubDate>Tue, 07 Oct 2014 18:00:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29670#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29670#comment:3/1412704857182935</guid>
      <description>&lt;p&gt;
This looks to be fixed. As user can use any password. Good to see that in 4.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29840 (Use Moment.js to show dates) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29840#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29840#comment:3/1412704242901009</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Counterpoint - content that is tied to the date (and possibly time) of the originating poster. That is, when the publish date is just as much a part of the content as anything else.
&lt;/p&gt;
&lt;p&gt;
Feels more like a theme-level thing for the moment, at any rate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_get_attachment_url.patch attached to Ticket #26992</title>
      
        <dc:creator>wpdavis</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26992/wp_get_attachment_url.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26992/wp_get_attachment_url.patch/1412703795013822</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26992 (Failing to make new yyyy/mm for uploads affects existing URLs ...) updated</title>
      
        <dc:creator>wpdavis</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26992#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26992#comment:7/1412703778924777</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed: This is a stupid, annoying thing. Attached is a patch that only checks for a permissions error if it's a newly-uploaded file. Else the script is just using the basedir piece of wp_upload_dir, and the fact that there is a permissions error is completely irrelevant.
&lt;/p&gt;
&lt;p&gt;
Edit: Not trying to call anyone stupid, just frustrated after spending 15 minutes tracking that one down.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23144 (Non writeable uploads folder may result in URLs to existing ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:39:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23144#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23144#comment:3/1412703567483892</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #23144,​26992 batch updated</title>
      
        <dc:creator>wpdavis</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23144%2C26992</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23144%2C26992/1412703485498260</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23144" title="#23144: defect (bug): Non writeable uploads folder may result in URLs to existing ... (closed: duplicate)"&gt;#23144&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #26843 (Let jQuery UI 1.11 handle touch-action compatibility for IE Touch) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:23:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26843#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26843#comment:7/1412702596715817</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Okay, let's use this ticket then to update our CSS copies for jQuery UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26843 (Let jQuery UI 1.11 handle touch-action compatibility for IE Touch) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:08:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26843#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26843#comment:6/1412701688621060</guid>
      <description>&lt;p&gt;
jQuery UI 1.11.1 has landed in core thanks to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29833" title="#29833: enhancement: Update to jQuery UI 1.11.2 (closed: fixed)"&gt;#29833&lt;/a&gt; &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29847" title="Update jQuery UI to 1.11.1.
Because jQUI's build process no longer ..."&gt;[29847]&lt;/a&gt; so this should be mergeable now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24990 (Nested Shortcode Inside [caption]) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:04:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24990#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24990#comment:8/1412701461470106</guid>
      <description>&lt;p&gt;
pputzer, I was able to replicate the issue above (wasn't clear for me at first) and the shortcode is not the problem there as a literal would be skipped as well.
&lt;/p&gt;
&lt;p&gt;
IIRC we only support 2 versions before the current release, so probably removing the regex test at all?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29071 (Make it easier to include an instance of the Customizer outside of ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 07 Oct 2014 17:01:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29071#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29071#comment:12/1412701319701031</guid>
      <description>&lt;p&gt;
Another idea, one which would make the Customizer even more reusable, even to allow multiple instances appearing on the same page: instead of adding a &lt;code&gt;wp.customize.init()&lt;/code&gt;, which is kinda following a “singletony” paradigm, it would be interesting to explore if the Customizer was a function prototype that could be instantiated. For instance:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.customize = new wp.Customizer( window._wpCustomizeSettings );
&lt;/pre&gt;&lt;p&gt;
A challenge here, of course, is that there is a lot of code that adds stuff to &lt;code&gt;wp.customize&lt;/code&gt; as a global namespace. So it could be difficult to encapsulate the Customizer in this way. So something like this might need to be used instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.customize = $.extend( new wp.Customizer( window._wpCustomizeSettings ), wp.customize );
&lt;/pre&gt;&lt;p&gt;
In this way, other instances of the Customizer could be created but assigned to other variables to live alongside any primary customizer. Any pieces of code that refer to &lt;code&gt;wp.customize&lt;/code&gt; (i.e. &lt;code&gt;api&lt;/code&gt;) would need to be updated to be explicitly passed a Customizer instance that they should be referring to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22301 (Performance problem with Recent Comments widget) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 16:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22301#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22301#comment:10/1412701018376575</guid>
      <description>&lt;p&gt;
Took a stab in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22301/22301.2.diff" title="Attachment '22301.2.diff' in Ticket #22301"&gt;22301.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22301/22301.2.diff" title="Download"&gt;​&lt;/a&gt;. The idea is the same and it also accounts for multiple instances of the widget.
&lt;/p&gt;
&lt;p&gt;
It's not perfect. I think there's still potential for race conditions because the lock is not guaranteed, i.e. if the hard work (comment query) has been done, we save the data in cache, regardless of any locks + the fact that there's no easy way to force &lt;code&gt;wp_cache_get&lt;/code&gt; not to use local cache.
&lt;/p&gt;
&lt;p&gt;
Also, what happens if the comment query times out and halts the php process? We'll end up with a lock that will never be released. How can we clean that up or should we even attempt to? Would scheduling a single event instead solve these issues? Are there other areas in core that could benefit from a similar approach?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22301.2.diff attached to Ticket #22301</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 16:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22301/22301.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22301/22301.2.diff/1412699466775207</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15459 (Need Better Page Hierarchy Display Algorithm) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 16:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15459#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15459#comment:32/1412698137259891</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
All of that sounds like a good reason to be writing tests for this. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28321 (Media uploader confuses user with description, caption, alt and title, ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 16:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28321#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28321#comment:9/1412697936316117</guid>
      <description>&lt;p&gt;
As much as I agree about the field confusion, if we have to introduce inline help, then we need to work on the UI expectations, not just help text. Like accessibility, we need to balance aesthetics with functionality, and this is aesthetically not good.
&lt;/p&gt;
&lt;p&gt;
Also, themes and plugins can do different things with the various fields. There is no unified expectation around them beyond that they've been there for a long time and a significant percentage of users squeal when we remove them, and that is precisely what is so difficult.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28551.4.patch attached to Ticket #28551</title>
      
        <dc:creator>Sidney Harrell</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:42:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28551/28551.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28551/28551.4.patch/1412696539937876</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29833 (Update to jQuery UI 1.11.2) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29833#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29833#comment:9/1412695861693669</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29847" title="Update jQuery UI to 1.11.1.
Because jQUI's build process no longer ..."&gt;29847&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Update jQuery UI to 1.11.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Because jQUI's build process no longer provides individual minified files we need some additional changes:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rename all files, remove the "jquery.ui." prefix. Add old files to &lt;code&gt;$_old_files&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Add and use non-minified files in /src.
&lt;/li&gt;&lt;li&gt;Add grunt task to minify jQuery UI files.
&lt;/li&gt;&lt;li&gt;(Non-minified files will not be shipped.)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Changelogs:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://jqueryui.com/changelog/1.11.0/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://jqueryui.com/changelog/1.11.0/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://jqueryui.com/changelog/1.11.1/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://jqueryui.com/changelog/1.11.1/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
props Fab1en, ocean90.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29833" title="#29833: enhancement: Update to jQuery UI 1.11.2 (closed: fixed)"&gt;#29833&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28551 (Add Better Debugging Documentation Into wp-config.php) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28551#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28551#comment:35/1412695702677313</guid>
      <description>&lt;p&gt;
The name &lt;code&gt;wp-config-debug.php&lt;/code&gt; would not cause confusion.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28551#comment:33" title="Comment 33"&gt;F J Kaiser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see your point and it's valid. My 2 cents: By now we already got an example file where the user has to fill the blanks. I'd really not like to see three different config files shipped in the root dir. This is error prone (renaming the wrong file).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29847]: Update jQuery UI to 1.11.1.  Because jQUI's build process no longer ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29847</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29847/1412695676192862</guid>
      <description>&lt;p&gt;
Update jQuery UI to 1.11.1.
&lt;/p&gt;
&lt;p&gt;
Because jQUI's build process no longer provides individual minified files we need some additional changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rename all files, remove the "jquery.ui." prefix. Add old files to &lt;code&gt;$_old_files&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Add and use non-minified files in /src.
&lt;/li&gt;&lt;li&gt;Add grunt task to minify jQuery UI files.
&lt;/li&gt;&lt;li&gt;(Non-minified files will not be shipped.)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Changelogs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://jqueryui.com/changelog/1.11.0/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://jqueryui.com/changelog/1.11.0/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://jqueryui.com/changelog/1.11.1/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://jqueryui.com/changelog/1.11.1/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
props Fab1en, ocean90.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29833" title="#29833: enhancement: Update to jQuery UI 1.11.2 (closed: fixed)"&gt;#29833&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29876 (Document default arguments for WP_Meta_Query) updated</title>
      
        <dc:creator>Oxymoron</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:21:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29876#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29876#comment:1/1412695307625412</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry if the patch isn't exactly right (first attempt at a patch!). I looked at the codex page for the WP_Meta_Query and copied over the arguments using the hash notation style you requested.
&lt;/p&gt;
&lt;p&gt;
Let me know if something's messed up and I can submit an updated patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>meta-29876.diff attached to Ticket #29876</title>
      
        <dc:creator>Oxymoron</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29876/meta-29876.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29876/meta-29876.diff/1412695134186060</guid>
      <description>&lt;p&gt;
meta.php patch for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29876" title="#29876: defect (bug): Document default arguments for WP_Meta_Query (closed: duplicate)"&gt;#29876&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29641 (Password protected posts not working - secure cookie flag) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29641#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29641#comment:6/1412695081342315</guid>
      <description>&lt;p&gt;
In addition to dd32's question, what is the URL you access when you log in to the site? Is it on the same domain and protocol, or a different one?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22301 (Performance problem with Recent Comments widget) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:14:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22301#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22301#comment:9/1412694874744217</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22301/22301.diff" title="Attachment '22301.diff' in Ticket #22301"&gt;22301.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22301/22301.diff" title="Download"&gt;​&lt;/a&gt; won't work because regardless of whether the lock was acquired, the &lt;code&gt;widget()&lt;/code&gt; method will output the data from the _old cache and return, leaving us with a lock that will never be released.
&lt;/p&gt;
&lt;p&gt;
Also, I think that this approach will not work when multiple instances of the same widget are used. We're storing all the cached data under the same key which holds an array with multiple widget IDs, so with the proposed patch it looks like we'll acquire a lock and update only the first instance of the widget.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15459 (Need Better Page Hierarchy Display Algorithm) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15459#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15459#comment:31/1412694392837806</guid>
      <description>&lt;p&gt;
Even when applied properly (small fixes), there are some records that are missing. For example:
&lt;/p&gt;
&lt;p&gt;
Items number 4, 5, 6 are children of item 3 (imagine 3 child pages of a parent page). Like the following structure:
&lt;/p&gt;
&lt;p&gt;
Parent1
Parent2
Parent3
-Child1
-Child2
-Child3
Parent4
&lt;/p&gt;
&lt;p&gt;
If you set the "posts per page" to 5, with the original implementation you'll see the following results.
&lt;/p&gt;
&lt;p&gt;
First page from pagination:
&lt;/p&gt;
&lt;p&gt;
Parent1
Parent2
Parent3
-Child1
-Child2
&lt;/p&gt;
&lt;p&gt;
Second page from pagination:
&lt;/p&gt;
&lt;p&gt;
Parent3
-Child3
Parent4
&lt;/p&gt;
&lt;p&gt;
The patch skips the Child3 display (which is tricky itself to get the right number of entries transferred to the second page).
&lt;/p&gt;
&lt;p&gt;
That said, the second page would actually display 6 items instead of 5 due to Parent3 being duplicated in both pages 1 and 2.
&lt;/p&gt;
&lt;p&gt;
The other problem is that there are different types of ordering - by name, date etc., so I'm not sure that the patch would handle all of them gracefully even if we delegate the search queries to SQL and fetch the IDs only as we do now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29071 (Make it easier to include an instance of the Customizer outside of ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 07 Oct 2014 15:00:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29071#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29071#comment:11/1412694054880128</guid>
      <description>&lt;p&gt;
man, those iOS-length method names...
&lt;/p&gt;
&lt;p&gt;
I like the @westonruter approach. For most of our JS in WP, we should be creating libraries, and then have the page they are loaded on instantiate them, either inline or a new file for the instance. That way, something like post.js or whatever just instantiates instances, instead of the library file having a docReady blob.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15459 (Need Better Page Hierarchy Display Algorithm) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Tue, 07 Oct 2014 14:45:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15459#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15459#comment:30/1412693109979779</guid>
      <description>&lt;p&gt;
The last patch version doesn't work for pages after the first one, which breaks the default WordPress functionality. I believe that we could build the tree of IDs, offset based on the page number * posts per page (from the screen options) and query only the posts that are needed. I'll give it some thought, based on your patch which looks elegant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24990 (Nested Shortcode Inside [caption]) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Tue, 07 Oct 2014 14:30:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24990#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24990#comment:7/1412692205113211</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24990#comment:6" title="Comment 6"&gt;nofearinc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure what's the issue with calling &lt;code&gt;do_shortcode&lt;/code&gt; for the caption, whether it's set via the media popup or as an attribute, so a simple call added to the caption callback.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm pretty sure that this patch is only a partial fix. The problem is the regex line &lt;code&gt;if ( preg_match( '#((?:&amp;lt;a [^&amp;gt;]+&amp;gt;\s*)?&amp;lt;img [^&amp;gt;]+&amp;gt;(?:\s*&amp;lt;/a&amp;gt;)?)(.*)#is', $content, $matches ) ) {&lt;/code&gt; that throws out any shortcode enclosing the image and/or link tag in the &lt;code&gt;$content&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29557 (PHP ≤ 5.4.8 Crashes on '[' Character in Posts) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 07 Oct 2014 14:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29557#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29557#comment:87/1412692186125119</guid>
      <description>&lt;p&gt;
Per @miqrogroove's comment my assumption in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12690" title="#12690: defect (bug): Square brackets breaking links that contain square brackets (closed: fixed)"&gt;#12690&lt;/a&gt; was indeed wrong. The greediness did apply to the matched group, but the alteration within the group still allowed unnecessary backtracking, and without some of the newer optimizations in older PHP versions we get a segfault. Making &lt;code&gt;[^\[\]&amp;lt;&amp;gt;]&lt;/code&gt; greedy in all three expressions should solve this specific backtracking issue.
&lt;/p&gt;
&lt;p&gt;
However, I think we need to take a step back, revert everything to 3.9 behavior in 4.0.1 and revisit some of these ideas in 4.1:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If we're going to match shortcodes, why aren't we using the existing cached shortcode regex?
&lt;/li&gt;&lt;li&gt;"Adding preg_split() inside a loop does not seem like a good direction for performance." - why not? How is it different from using preg_match() inside a loop?
&lt;/li&gt;&lt;li&gt;I like @azaozz's idea of splitting the regex into smaller managable, consistent and possibly reusable chunks
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29878 (More Sample Options in wp-config-sample.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 07 Oct 2014 14:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29878#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29878#comment:5/1412692083631563</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24990 (Nested Shortcode Inside [caption]) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Tue, 07 Oct 2014 14:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24990#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24990#comment:6/1412691872406578</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not sure what's the issue with calling &lt;code&gt;do_shortcode&lt;/code&gt; for the caption, whether it's set via the media popup or as an attribute, so a simple call added to the caption callback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24990.diff attached to Ticket #24990</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Tue, 07 Oct 2014 14:23:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24990/24990.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24990/24990.diff/1412691801104800</guid>
      <description>&lt;p&gt;
do_shortcode on caption attr
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #28551,​29878 batch updated</title>
      
        <dc:creator>danielpataki</dc:creator>

      <pubDate>Tue, 07 Oct 2014 13:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28551%2C29878</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28551%2C29878/1412689846452415</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28551" title="#28551: enhancement: Add Better Debugging Documentation Into wp-config.php (closed: fixed)"&gt;#28551&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to ocean90:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please no. Some options are just too advanced and can break an install, if it's used wrong. I don't want to scare new users.
&lt;/p&gt;
&lt;p&gt;
BTW: WPLANG is deprecated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I kind of agree with you, I just included all that to see everything in one place, it's easier to take away than to add, I din't find the related issue during a casual search.
&lt;/p&gt;
&lt;p&gt;
I use some of these often but as I mentioned as well the risk factor is high with some of them. Plenty of good discussion on this in the other issue, I'll just shut up for now :)
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 07 Oct 2014 13:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708#comment:11/1412687655049464</guid>
      <description>&lt;p&gt;
CloudFlare have announced &lt;a class="ext-link" href="https://blog.cloudflare.com/introducing-universal-ssl/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;SSL for everyone&lt;/a&gt; which, by default, uses Flexible SSL. Anyone who decides to use SSL for their CloudFlare proxied WordPress 4.0 site will see this infinite redirect if they change their site URL to the &lt;code&gt;https&lt;/code&gt; version.
&lt;/p&gt;
&lt;p&gt;
To that end, I'll revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28610" title="Force SSL on the frontend via canonical when the home URL uses the ..."&gt;[28610]&lt;/a&gt; for 4.0.1. I suspect we may have to live with it.
&lt;/p&gt;
&lt;p&gt;
This plugin provides a simple fix in the interim: &lt;a class="ext-link" href="https://wordpress.org/plugins/cloudflare-flexible-ssl/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/cloudflare-flexible-ssl/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13339 (Add hook on network admin user forms) updated</title>
      
        <dc:creator>Bueltge</dc:creator>

      <pubDate>Tue, 07 Oct 2014 12:25:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13339#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13339#comment:4/1412684728557403</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13339#comment:3" title="Comment 3"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's possible that we still want to let this ride for a while until a newer UI is imagined, but I do agree on the usefulness of a hook here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't know about a new UI, no timeline. Give it more information about the new UI and when will go live?
&lt;/p&gt;
&lt;p&gt;
The hook is important for a lot of enterprise solutions and actually create a lot of developers not clean enhancements, because she miss this hook. I will address for this hook, there is useful for a lot of scenarios.
&lt;/p&gt;
&lt;p&gt;
But I understand the statement, because we have markup inside the function and maybe this is a topic on a new UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29833.3.patch attached to Ticket #29833</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 07 Oct 2014 11:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29833/29833.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29833/29833.3.patch/1412683023850163</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29878 (More Sample Options in wp-config-sample.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 07 Oct 2014 11:24:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29878#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29878#comment:3/1412681045271206</guid>
      <description>&lt;p&gt;
Please no. Some options are just too advanced and can break an install, if it's used wrong. I don't want to scare new users.
&lt;/p&gt;
&lt;p&gt;
BTW: WPLANG is deprecated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29878 (More Sample Options in wp-config-sample.php) updated</title>
      
        <dc:creator>kpdesign</dc:creator>

      <pubDate>Tue, 07 Oct 2014 11:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29878#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29878#comment:2/1412680408531679</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29878 (More Sample Options in wp-config-sample.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 07 Oct 2014 08:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29878#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29878#comment:1/1412668833081775</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28551" title="#28551: enhancement: Add Better Debugging Documentation Into wp-config.php (closed: fixed)"&gt;#28551&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29071 (Make it easier to include an instance of the Customizer outside of ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 07 Oct 2014 07:17:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29071#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29071#comment:10/1412666264536858</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29071#comment:8" title="Comment 8"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29071/29071.3.diff" title="Attachment '29071.3.diff' in Ticket #29071"&gt;attachment:29071.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29071/29071.3.diff" title="Download"&gt;​&lt;/a&gt;, wrap bootstrapping code for the default customizer experience into a function, and return early if its not the default customizer instance (customize.php).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's an awful lot of code that is going to be unreusable if we go this route. The majority of the code in &lt;code&gt;bootstrapDefaultCustomizerInstance&lt;/code&gt; would only be usable on the main Customizer page.
&lt;/p&gt;
&lt;p&gt;
Should &lt;code&gt;bootstrapDefaultCustomizerInstance()&lt;/code&gt; perhaps instead be replaced with something like &lt;code&gt;wp.customize.init()&lt;/code&gt;? The &lt;code&gt;customizer.php&lt;/code&gt; page could then manually invoke it at the end after all scripts are printed, something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script type="text/javascript"&amp;gt;
var _wpCustomizeSettings = &amp;lt;?php echo json_encode( $settings ); ?&amp;gt;;
&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
$(function () {
    wp.customize.init({
        settings: window._wpCustomizeSettings, // or 'config' instead
        l10n: window._wpCustomizeControlsL10n // not 100% sure on this one
    }); // or window._wpCustomizeSettings could be the only argument passed into init
});
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This would keep &lt;code&gt;customize-controls.js&lt;/code&gt; from attempting to bootstrap itself, which would improve reusability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29071 (Make it easier to include an instance of the Customizer outside of ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 07 Oct 2014 07:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29071#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29071#comment:9/1412665574647501</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29071#comment:5" title="Comment 5"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29071/29071.2.diff" title="Attachment '29071.2.diff' in Ticket #29071"&gt;attachment:29071.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29071/29071.2.diff" title="Download"&gt;​&lt;/a&gt;, move the settings array building to a single-responsibility method &lt;code&gt;WP_Customize_Manager-&amp;gt;get_settings_for_js()&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Might I suggest something other than “settings” in the naming of &lt;code&gt;get_settings_for_js&lt;/code&gt;. The term has been unfortunately overloaded in the Customizer to not only refer to the configuration of the customizer, but also the models (settings) which are being customized. Case in point: &lt;code&gt;wp.customize.settings.setting&lt;/code&gt;. For the former sense of “settings” I think “config” makes more sense. So perhaps &lt;code&gt;WP_Customize_Manager-&amp;gt;get_config_for_js()&lt;/code&gt; or &lt;code&gt;WP_Customize_Manager-&amp;gt;export_js_config()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22114 (Propagating password on change) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 07:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22114#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22114#comment:8/1412665304930028</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch seems sane to me, so +1 from me (although a filter rename to &lt;code&gt;user_password_updated&lt;/code&gt; wouldn't go astray IMHO)
&lt;/p&gt;
&lt;p&gt;
There's no way around it - If you're implementing a SSO system where WordPress users exist elsewhere, you need access to the plaintext password, which you currently have by checking a variety of &lt;code&gt;$_POST&lt;/code&gt; fields.
&lt;/p&gt;
&lt;p&gt;
Adding an action, clearly intended as a way to perform an action upon user password updating (be it auditing, SSO, or invalidation) seems sane, and having the users password available on that hook seems appropriate.
&lt;/p&gt;
&lt;p&gt;
Plugins have full reign over the environment already, it's not worth pretending that the password is protected data that plugins shouldn't see, we don't have the ability to hide it, or control what plugins do with it, so instead we trust plugins that a user has installed on their site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-config-sample.diff attached to Ticket #29878</title>
      
        <dc:creator>danielpataki</dc:creator>

      <pubDate>Tue, 07 Oct 2014 06:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29878/wp-config-sample.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29878/wp-config-sample.diff/1412664204991881</guid>
      <description>&lt;p&gt;
Some added documentation for the wp-config-sample.php file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29878 (More Sample Options in wp-config-sample.php) created</title>
      
        <dc:creator>danielpataki</dc:creator>

      <pubDate>Tue, 07 Oct 2014 06:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29878</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29878/1412664105542370</guid>
      <description>&lt;p&gt;
I thought it would be a good idea to add some direction on some of the constants that may be defined in wp-config. While putting so many in the proposed patch may be overkill, perhaps adding things like the autosave interval and trash emptying constant would be helpful.
&lt;/p&gt;
&lt;p&gt;
The only downside I can think of is overzealous users starting to edit things like WP_SITEURL, WP_ALLOW_REPAIR and such without proper reason.
&lt;/p&gt;
&lt;p&gt;
Not sure this is the best way to go, just throwing it out there :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21140 ("Display name publicly as" setting not set until a change is made in ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 06:18:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21140#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21140#comment:2/1412662731190337</guid>
      <description>worksforme: &lt;p&gt;
Can't reproduce, default is the user login, and setting it to Firstname works as expected.
&lt;/p&gt;
&lt;p&gt;
Must be a conflict with a plugin which set defaults for new users (which seems likely given it's a BuddyPress site)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>kkalvaa</dc:creator>

      <pubDate>Tue, 07 Oct 2014 06:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:27/1412662465731927</guid>
      <description>&lt;p&gt;
I just tried the 29692.diff and everything works as it should.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24668 (Password manually entered during setup is stored in the database ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 06:09:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24668#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24668#comment:5/1412662192060340</guid>
      <description>worksforme: &lt;p&gt;
Tested with a password of [a-zA-Z0-9]+, 100 characters long, works for me.
&lt;/p&gt;
&lt;p&gt;
Potentially there could've been issues with trailing/leading whitespace.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29536 (Toggle excerpt/list view buttons appear on users list page in network admin) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 07 Oct 2014 05:54:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29536#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29536#comment:4/1412661286467302</guid>
      <description>&lt;p&gt;
I went digging. :)
&lt;/p&gt;
&lt;p&gt;
The "registered" column on the users list table included the full date with no list/excerpt option when it was MU - &lt;code&gt;&amp;lt;td&amp;gt;&amp;lt;?php echo mysql2date(__('Y-m-d \&amp;lt;\b\r \/\&amp;gt; g:i a'), $user['user_registered']); ?&amp;gt;&amp;lt;/td&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/12460/codeispoetry.patch"&gt;A most epic patch&lt;/a&gt; in Trac history added the list/excerpt option and output the only the day by default. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13918" title="Huge MS refactoring and code cleanup. see #12460. props ocean90."&gt;[13918]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The switch between list/excerpt is captured in a &lt;code&gt;$mode&lt;/code&gt; global. Because of this, I don't think we can remove the toggle without the possibility of breaking somebody's custom extension of the users list table.
&lt;/p&gt;
&lt;p&gt;
I could see coming up with additional data to display in an excerpt view.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26938 (3.8.1 auto update caused white screen - deleted most of functions.php) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 05:26:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26938#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26938#comment:3/1412659611140310</guid>
      <description>invalid: &lt;p&gt;
Although we do take failures such as this seriously, unfortunately without further reports of the issue or the ability to duplicate it, there's very little to do here.
&lt;/p&gt;
&lt;p&gt;
We've been continuously improving the update processes, and hopefully one of those will fix whatever happened in your case.
&lt;/p&gt;
&lt;p&gt;
I'm marking this ticket as invalid for now until something shows up to confirm it as a reproducible bug.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27758 (WP_Error data is false in _unzip_file_ziparchive) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 05:20:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27758#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27758#comment:5/1412659231230355</guid>
      <description>&lt;p&gt;
One option here is to simply strip &lt;code&gt;WP_CONTENT_DIR&lt;/code&gt; out of the &lt;code&gt;$_dir&lt;/code&gt;, another is to just use the basename() but that'll be possibly just as confusing.
&lt;/p&gt;
&lt;p&gt;
For example, this would return 'wp-content/upgrade' as the error data if it failed to create that directory:
&lt;/p&gt;
&lt;pre class="wiki"&gt;return new WP_Error(
     'mkdir_failed_ziparchive',
     __( 'Could not create directory.' ),
     ( $_dir == $to ) ? str_replace( dirname( WP_CONTENT_DIR ), '', $_dir ) : substr( $_dir, strlen( $to ) )
);
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
I assumed with 'actually aggregated by WordPress.org' that you meant that the error codes where somehow submitted/returned to wordpress.org for analysis and such.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is correct, it's handled far above the underlying upgrade functions for things like auto updates.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29641 (Password protected posts not working - secure cookie flag) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 05:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29641#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29641#comment:5/1412658112465562</guid>
      <description>&lt;p&gt;
What's the value of &lt;code&gt;home_url()&lt;/code&gt; in your configuration?
&lt;/p&gt;
&lt;p&gt;
home_url() returns the URL used to view the site, if you don't have SSL configured, that should be a http url, and the cookie code you refer to should set the secure flag to false.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29594 (Basic Cookie Authentication from External Database) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 04:53:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29594#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29594#comment:6/1412657587858150</guid>
      <description>&lt;p&gt;
I can't duplicate this either.
&lt;/p&gt;
&lt;p&gt;
This code in a mu-plugin works for me, and allows me to edit existing posts, create new posts, nonces pass, etc.
&lt;/p&gt;
&lt;pre class="wiki"&gt;// http://example.com/wordpress/?login=admin
add_action( 'init', function() {
	if ( isset( $_GET['login'] ) ) {
		$user = get_user_by( 'login', $_GET['login'] );
		wp_set_current_user( $user-&amp;gt;ID );
		wp_set_auth_cookie( $user-&amp;gt;ID , 1 );
	}
} );
&lt;/pre&gt;&lt;p&gt;
@kburkhardt: I notice you're using this: &lt;code&gt;get_user_by('uid', $uidHeader);&lt;/code&gt; which won't work, WordPress has no 'uid' field, it's 'id' that you want there.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For example, XenWord bridges XenForo and WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.tuxreports.com/community/threads/wordpress-4-0-and-xenword.519547/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Appears that theres a new release of XenWord in beta testing with 4.0 compatibility&lt;/a&gt; - It seems it was calling &lt;code&gt;wp_update_user()&lt;/code&gt; after login which was invalidating the sessions, I don't have access to the code so I can't determine how it was failing, or if it was a WordPress issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13339 (Add hook on network admin user forms) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 07 Oct 2014 04:46:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13339#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13339#comment:3/1412657187834315</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18709" title="#18709: enhancement: Hooks in user-new.php (closed: fixed)"&gt;#18709&lt;/a&gt;, in which the &lt;code&gt;user_new_form&lt;/code&gt; action was added for additional user fields in single site.
&lt;/p&gt;
&lt;p&gt;
The example in this ticket description mentions "instances", which I read as new sites. One possible use case of a hook in the new user form is to provide a method for adding a new (or existing) user to multiple sites.
&lt;/p&gt;
&lt;p&gt;
It's possible that we still want to let this ride for a while until a newer UI is imagined, but I do agree on the usefulness of a hook here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18709 (Hooks in user-new.php) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 07 Oct 2014 04:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18709#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18709#comment:43/1412657027901206</guid>
      <description>&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/13339" title="#13339: enhancement: Add hook on network admin user forms (new)"&gt;#13339&lt;/a&gt;, which requests a hook for the network admin new user form.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29820,​29877 batch updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 07 Oct 2014 04:39:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29820%2C29877</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29820%2C29877/1412656789341317</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29820" title="#29820: task (blessed): Smooth installation and updating of plugins and themes (closed: fixed)"&gt;#29820&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Oops, I didn't know about that one.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #29877 (Remove interposting screen when updating/installing plugins/themes/core) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 07 Oct 2014 04:38:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29877#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29877#comment:1/1412656713913079</guid>
      <description>&lt;p&gt;
Related/duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29820" title="#29820: task (blessed): Smooth installation and updating of plugins and themes (closed: fixed)"&gt;#29820&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29877 (Remove interposting screen when updating/installing plugins/themes/core) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 07 Oct 2014 04:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29877</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29877/1412656383507446</guid>
      <description>&lt;p&gt;
As has been noted, the install/update progress screen is &lt;a class="ext-link" href="https://make.wordpress.org/flow/2014/07/21/updating-a-plugin-from-plugins-php-macnchrome-4-0-beta2-20140720/screen-shot-2014-07-21-at-12-49-59-pm/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;pretty ugly&lt;/a&gt;, we can do better.
&lt;/p&gt;
&lt;p&gt;
There's a &lt;a class="ext-link" href="https://github.com/pento/shiny-updates"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;proof of concept plugin&lt;/a&gt; for this idea, but the feature doesn't lend itself to being written as a plugin. This ticket is for tracking development.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22367 (Usernames with "@" char are assumed email addresses, causing incorrect ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 04:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22367#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22367#comment:13/1412655742942550</guid>
      <description>&lt;p&gt;
Perhaps the best option here is to optimize for what we think it is, but fall back to login search:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user = false;
if ( $search contains '@' )
  $user = get_user_by( 'email', $search );
if ( ! $user )
  $user = get_user_by( 'login', $search );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27224 (Multisite upload settings are inconsistent) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 07 Oct 2014 04:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27224#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27224#comment:8/1412654434291117</guid>
      <description>&lt;p&gt;
This feels strange. It would be nice to store the value as bytes and not have to do the math in multiple places. For that we'd have to deprecate the &lt;code&gt;fileupload_maxk&lt;/code&gt; setting and go with &lt;code&gt;fileupload_max&lt;/code&gt; or something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29872 (Permalink Structure Tags buttons) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 07 Oct 2014 03:50:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29872#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29872#comment:4/1412653857450238</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20956 (Navigation changes: Posts/Pages) updated</title>
      
        <dc:creator>bahia0019</dc:creator>

      <pubDate>Tue, 07 Oct 2014 03:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20956#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20956#comment:37/1412652941643532</guid>
      <description>&lt;p&gt;
No coincidence finding Marty Thornly in here. I think he and I may have a cloned brain, since we think so much alike.
&lt;/p&gt;
&lt;p&gt;
I would also stray away from calling it Blog. Posts seems more appropriate.
&lt;/p&gt;
&lt;p&gt;
I also would like to second the idea of having Pages be above Posts. As others have mentioned, pushing WordPress as a CMS is of importance, and I think this UI change would be a small touch, with big gains towards that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 07 Oct 2014 03:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:26/1412652786205735</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29692#comment:19" title="Comment 19"&gt;kkalvaa&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When I then delete these half created sites it seems to also delete the contents of the uploads folder for the main site.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed. The sites have an empty &lt;code&gt;upload_path&lt;/code&gt;, so &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.0/src/wp-admin/includes/ms.php#L45"&gt;wpmu_delete_blog()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.0/src/wp-admin/includes/ms.php#L45" title="Download"&gt;​&lt;/a&gt; leaves the whole &lt;code&gt;wp-content/uploads&lt;/code&gt; directory empty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25775 (WP_Date_Query table prefixing) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 07 Oct 2014 03:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25775#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25775#comment:31/1412652658829247</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25775/25775.patch" title="Attachment '25775.patch' in Ticket #25775"&gt;25775.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25775/25775.patch" title="Download"&gt;​&lt;/a&gt; is an attempt at fixing the problem that maintains backward compatibility with the filter and with existing use of &lt;code&gt;WP_Date_Query&lt;/code&gt;. Much of the patch is making some minor alterations to existing unit tests so that they work with the modified &lt;code&gt;validate_column()&lt;/code&gt;. Here's the executive summary:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When you pass a value to &lt;code&gt;validate_column()&lt;/code&gt; that contains a dot, it's trusted - no validation takes place.
&lt;/li&gt;&lt;li&gt;Return results of &lt;code&gt;validate_column()&lt;/code&gt; are run through &lt;code&gt;esc_sql()&lt;/code&gt;, since we're no longer so strictly checking against a whitelist (though tbh the whitelist check that's currently there does not look very airtight to me).
&lt;/li&gt;&lt;li&gt;When a non-dotted value is passed to &lt;code&gt;validate_column()&lt;/code&gt;, check to see if it's a core date column (&lt;code&gt;$known_columns&lt;/code&gt;), and if so, add the appropriate prefix.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
How this fixes the problem:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;test_date_query_with_taxonomy_join()&lt;/code&gt; demonstrates the problem raised in the original ticket. Since no column is passed to the query, 'post_date' is assumed; 'post_date' then validates to &lt;code&gt;$wpdb-&amp;gt;posts.post_date&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_validate_column_with_date_query_valid_columns_filter()&lt;/code&gt; shows that the filter continues to work. If you are using this filter to add a custom column, it will continue to be validated. &lt;code&gt;validate_column()&lt;/code&gt; won't add a table prefix, because it's not a "known column". But (a) this is not a regression - currently, if you add a custom column like this and then do a table join, you'll probably break something; and (b) devs using the filter should be encouraged to add table-prefixed columns to the list. (ie `$columns[] = 'my_table_name.my_column_name')
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Some of the changes suggested by wonderboymusic &lt;a href="https://core.trac.wordpress.org/ticket/25775#comment:9"&gt;https://core.trac.wordpress.org/ticket/25775#comment:9&lt;/a&gt; are interesting and worth pursuing (would you expect any less? &amp;lt;3 &amp;lt;3 &amp;lt;3) but are beyond the scope of this ticket. I also think his patch misunderstands what &lt;code&gt;WP_Comments_Query::$date_query&lt;/code&gt; is supposed to do - we don't need to join against the posts table because we only care about the 'comment_date', as passed to &lt;code&gt;get_sql()&lt;/code&gt; here &lt;a href="https://core.trac.wordpress.org/browser/tags/4.0/src/wp-includes/comment.php#L441"&gt;https://core.trac.wordpress.org/browser/tags/4.0/src/wp-includes/comment.php#L441&lt;/a&gt;. (If his tests were converting &lt;code&gt;comment_date&lt;/code&gt; to &lt;code&gt;post_date&lt;/code&gt;, it must be because he had one of the other patches on this ticket applied to his build - they broke date queries for comments.)
&lt;/p&gt;
&lt;p&gt;
In the future might look for a more robust syntax for table-specific support in &lt;code&gt;WP_Date_Query&lt;/code&gt;. See &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/29823" title="#29823: enhancement: WP_Date_Query across tables (accepted)"&gt;#29823&lt;/a&gt;. But that's not necessary to fix the problem at hand.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29670 (Admin cannot use own password to log in) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 07 Oct 2014 03:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29670#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29670#comment:2/1412652527839568</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This should be fixed in 3.9 already via &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26573" title="#26573: defect (bug): Passwords with apostrophes not accepted on install (closed: fixed)"&gt;#26573&lt;/a&gt; (Fixes the handling of &lt;code&gt;"&lt;/code&gt; and &lt;code&gt;'&lt;/code&gt; in passwords)
&lt;/p&gt;
&lt;p&gt;
I can't reproduce this on trunk, the password &lt;code&gt;"&amp;gt;&amp;lt;iframe src=javascript:alert(1)/&amp;gt;&lt;/code&gt; works for me, however, it's worth noting that spaces after the password are trim()'d, so since you're probably copy-pasting it, that seems like a likely cause.
&lt;/p&gt;
&lt;p&gt;
Can you reproduce this on 4.0 or trunk?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25775.patch attached to Ticket #25775</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 07 Oct 2014 03:14:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25775/25775.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25775/25775.patch/1412651643527946</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25849 (Better Error Messages for the Media Uploader) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Tue, 07 Oct 2014 02:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25849#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25849#comment:4/1412647694185871</guid>
      <description>&lt;p&gt;
One of the plugins I wrote lets users upload files on the frontend using the core WordPress Media Uploader. From our experience in support, there are probably at least a dozen different ways to trigger the exact same generic message listed above, and the only way to find the actual causation for the issue on a site is a very time consuming 1 by 1 crossing off the list of ways we know we can trigger it approach. With better error messages, when the error message is shown, it would let developers, users, and site owners know exactly what the problem is.
&lt;/p&gt;
&lt;p&gt;
Here's a partial of our list of the ways you can trigger that message:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;lack of permissions (capabilities)
&lt;/li&gt;&lt;li&gt;lack of memory (overload during upload process)
&lt;/li&gt;&lt;li&gt;lack of permissions on the upload folder
&lt;/li&gt;&lt;li&gt;another plugin moving the upload location using the filter to another place that isn't supported (permissions)
&lt;/li&gt;&lt;li&gt;any sort of blocking to admin-ajax.php (extreme caching, security plugin, htaccess rule) when the upload tab has been defined as the default open to tab in JS
&lt;/li&gt;&lt;li&gt;the user being logged out during the upload
&lt;/li&gt;&lt;li&gt;some versions of PHP 5.2 apparently don't play nice with the uploader
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There's only 2 ways (at least that I've seen) to get a unique error message:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;non-supported file type
&lt;/li&gt;&lt;li&gt;filesize over upload limit
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The current error system is really frustrating to work with, as there's no guidance on what the error is. If an error message is to be shown, it should say what triggered it (even if it just wants to give us a list of reasons), so we have some place to start debugging.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29876 (Document default arguments for WP_Meta_Query) created</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 07 Oct 2014 02:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29876</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29876/1412647637274038</guid>
      <description>&lt;p&gt;
The default arguments for &lt;a class="ext-link" href="https://developer.wordpress.org/reference/classes/wp_meta_query/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Meta_Query&lt;/a&gt; need to be documented in the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/inline-documentation-standards/php-documentation-standards/#1-1-parameters-that-are-arrays"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;hash notation&lt;/a&gt; style. The actual docs would go into the docblock for &lt;code&gt;WP_Meta_Query::__construct()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Here are a couple of good example of documenting default arguments in hash notations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/user.php#L496"&gt;docs&lt;/a&gt; for &lt;code&gt;WP_User_Query::prepare_query()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/query.php#L1446"&gt;docs&lt;/a&gt; for &lt;code&gt;WP_Query::parse_query()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If it helps, you can use the &lt;code&gt;WP_Meta_Query&lt;/code&gt; &lt;a class="ext-link" href="http://codex.wordpress.org/Class_Reference/WP_Meta_Query"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Codex article&lt;/a&gt; to find more information on the default arguments.
&lt;/p&gt;
&lt;p&gt;
This ticket is reserved for new contributors on the good-first-bug keyword.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29744 (Media Library: type dropdown in grid mode different form list mode + ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 02:02:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29744#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29744#comment:3/1412647372814189</guid>
      <description>&lt;p&gt;
I think we should remove the counts - it's confusing when you filter by more than one thing, which is actually possible now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29825 (text or tags within of video shortcode causes editor preview to autoplay) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 02:00:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29825#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29825#comment:1/1412647225428853</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
wonderboymusic - can you take a look?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29841 (Don't replace non embeddable URLs with a loading placeholder) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Tue, 07 Oct 2014 01:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29841#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29841#comment:5/1412647171108986</guid>
      <description>&lt;p&gt;
Nah, we just shouldn't use a loading placeholder. Only replace the URL when there's something to replace it with. We'll need to change the way wpviews load though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25849 (Better Error Messages for the Media Uploader) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Tue, 07 Oct 2014 01:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25849#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25849#comment:3/1412647089833011</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd love to see the error codes included. We get this problem with one of our extensions for Easy Digital Downloads all the time. Usually it's related to another plugin or theme causing an issue of some kind, but without error codes it's excruciatingly difficult to troubleshoot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29841 (Don't replace non embeddable URLs with a loading placeholder) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 01:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29841#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29841#comment:4/1412645822676266</guid>
      <description>&lt;p&gt;
I think we can keep the two tickets separate - the other for if you want to turn off oEmbed (although perhaps there's a better/different way to accomplish that?), and this for this issue that was noted pre-release but not addressed. Not sure what our options are - whitelisting in JS, a la wpautop? Something else?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26268 (Add UI to Category page to indicate default category) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 01:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26268#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26268#comment:19/1412645423767734</guid>
      <description>&lt;p&gt;
What are the chances we can float the default term to the top of the list? I have a feeling it might not be pretty, given paging.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24071 (Allow users to set three columns on Add Post/Add Page screen) closed</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 07 Oct 2014 01:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24071#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24071#comment:5/1412645322038290</guid>
      <description>wontfix: &lt;p&gt;
With the scrolling changes introduced in 4.0 that affect the side meta boxes, I think this ship has sailed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 06 Oct 2014 23:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:15/1412639179260090</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:11" title="Comment 11"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:1" title="Comment 1"&gt;x2048&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
1) all media queries will need to be rewritten to not include spaces between parentheses, or CSSLint will show errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No thanks. :) I patched CSSLint for this: &lt;a class="ext-link" href="https://github.com/CSSLint/parser-lib/pull/125"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/CSSLint/parser-lib/pull/125&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Media Queries are &lt;em&gt;currently&lt;/em&gt; defined in WP Core CSS coding standards as to &lt;strong&gt;not&lt;/strong&gt; include spaces between parentheses:
Source: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/coding-standards/css/#media-queries"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/coding-standards/css/#media-queries&lt;/a&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="nt"&gt;all&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;max-width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;699px&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;min-width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;520px&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;/* Your selectors */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;strong&gt;Note&lt;/strong&gt;: This WP Core CSS Standard will need updating once safe to do so, currently updates/changes to the CSS Handbook are not allowed, see &lt;a class="ext-link" href="https://docs.google.com/spreadsheets/d/1MDBSBavs1fzLpw2MYAT2FCxS3tLBCe6MgUr39753fyw/edit#gid=0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Core Contributor Handbook&lt;/a&gt; spreadsheet. CC: Ping @samuelsidler
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28709 (Improve/introduce Customizer JS models for Controls, Sections, and Panels) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 06 Oct 2014 22:53:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28709#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28709#comment:10/1412635998537217</guid>
      <description>&lt;p&gt;
This is a great start, Weston!
&lt;/p&gt;
&lt;p&gt;
I think we should make sure that we support custom sections and panels as fully as we support custom controls. Whether that's through something similar to how controls do it, or something a little more intuitive, that's an important component of the API as a whole, even if it's not used as commonly.
&lt;/p&gt;
&lt;p&gt;
As much as I'd love for everything to be rendered from JS, I don't think we're quite there yet. I see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29572" title="#29572: enhancement: Customizer: add a framework for rendering controls from JS templates (closed: fixed)"&gt;#29572&lt;/a&gt; and this ticket as the first steps, then in 4.2 we could introduce a more comprehensive API for dynamically creating controls, then maybe in 4.3 render everything from JS by default. If we could build out some structure for sections and panels in JS, and maybe the ability to dynamically create sections, at least for now, I think that would be best. We're going to have to do a lot for back-compatibility once we get to that stage, so I think we'll need to move carefully with the more radical changes.
&lt;/p&gt;
&lt;p&gt;
Some of the things I'd like to see done in the first-pass here:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove all customizer-specific logic from accordion.js, in favor of open/closing/state functions internally (ie, stop using accordion.js in the Customizer). Also with the thought that we may move away from using an accordion for sections sooner rather than later. This would also facilitate deep-linking.
&lt;/li&gt;&lt;li&gt;Support for deep-linking, or a logical way that that would be implemented once this initial API is in, coordinating with the expanding/collapsing of sections.
&lt;/li&gt;&lt;li&gt;JS-side support for contextual sections and panels (or a logical way to add that), I already did the PHP side on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29758" title="#29758: enhancement: Contextual Customizer Panels and Sections (closed: fixed)"&gt;#29758&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Things that should probably wait, but that we should keep in mind:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rendering all sections and panels from JS by default.
&lt;/li&gt;&lt;li&gt;Changes to how custom sections and panels work in PHP.
&lt;/li&gt;&lt;li&gt;I'm thinking it might be best to avoid significant changes to the control models for now, other than the ability to associate them with sections in some way, so that we can scope this appropriately for 4.1 and start building off of it.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29775 (Media manager bug) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 06 Oct 2014 22:23:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29775#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29775#comment:18/1412634215862350</guid>
      <description>&lt;p&gt;
There are two different views for the media library that do two quite different things behind the scenes. If you experience the loading spinner in both list and grid views, then we are facing something quite unknown. I suspect you have not, in fact, tried the list view. The view switcher is on the left side of the bar with the search and other filters in it. Also, based on your PDF, I take it the "Add New" link you are referring to is the one at the top of the screen, not the separate menu item.
&lt;/p&gt;
&lt;p&gt;
I would also like to know if this is the case in the "Add Media" modal when editing a post/page/content, as it shares a significant amount of code.
&lt;/p&gt;
&lt;p&gt;
We are attempting to figure out consistent steps to reproduce. By continuing to ask you for more feedback, we are looking into it. I am not personally looking at whether or not this is related to &lt;code&gt;mod_lsapi&lt;/code&gt;, and it is unclear to me whether or not anybody else is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25775 (WP_Date_Query table prefixing) updated</title>
      
        <dc:creator>webbistro</dc:creator>

      <pubDate>Mon, 06 Oct 2014 22:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25775#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25775#comment:30/1412634079360483</guid>
      <description>&lt;p&gt;
Hello, I added taxonomies to the attachment post type and now get "WordPress database error: [Column 'post_date' in where clause is ambiguous]" when trying to use 'tax_query' and 'date_query' for 'post_type' =&amp;gt; 'attachment' and 'post_status' =&amp;gt; 'inherit'. WP 4.0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24148 (Add aria-labelledby attributes to comment form) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 22:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24148#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24148#comment:15/1412633408881594</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29846" title="Add aria-describedby attributes to comment_form().
props joedolson, ..."&gt;29846&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add aria-describedby attributes to comment_form().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props joedolson, bramd.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24148" title="#24148: enhancement: Add aria-labelledby attributes to comment form (closed: fixed)"&gt;#24148&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29846]: Add aria-describedby attributes to comment_form().  props joedolson, ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 22:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29846/1412633408391254</guid>
      <description>&lt;p&gt;
Add aria-describedby attributes to comment_form().
&lt;/p&gt;
&lt;p&gt;
props joedolson, bramd.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24148" title="#24148: enhancement: Add aria-labelledby attributes to comment form (closed: fixed)"&gt;#24148&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24148 (Add aria-labelledby attributes to comment form) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 22:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24148#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24148#comment:14/1412633371490533</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 22:04:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:11/1412633052180459</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29845" title="In get_terms(), select term taxonomy count for all values of 'fields'. ..."&gt;29845&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
In get_terms(), select term taxonomy count for all values of 'fields'.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Not having the count caused queries with 'fields' values of 'id=&amp;gt;name' and&lt;br /&gt;
'id=&amp;gt;slug' to return incorrect results when querying a hierarchical taxonomy&lt;br /&gt;
with 'hide_empty=true'.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Includes unit tests for get_terms() when using various combinations of 'fields',&lt;br /&gt;
'hide_empty', and 'hierarchical' arguments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props technical_mastermind.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29859" title="#29859: defect (bug): get_terms on hierarchical taxonomy fails when 'fields' arg contains ... (closed: fixed)"&gt;#29859&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29845]: In get_terms(), select term taxonomy count for all values of 'fields'. ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 22:04:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29845</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29845/1412633051616927</guid>
      <description>&lt;p&gt;
In get_terms(), select term taxonomy count for all values of 'fields'.
&lt;/p&gt;
&lt;p&gt;
Not having the count caused queries with 'fields' values of 'id=&amp;gt;name' and
'id=&amp;gt;slug' to return incorrect results when querying a hierarchical taxonomy
with 'hide_empty=true'.
&lt;/p&gt;
&lt;p&gt;
Includes unit tests for get_terms() when using various combinations of 'fields',
'hide_empty', and 'hierarchical' arguments.
&lt;/p&gt;
&lt;p&gt;
Props technical_mastermind.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29859" title="#29859: defect (bug): get_terms on hierarchical taxonomy fails when 'fields' arg contains ... (closed: fixed)"&gt;#29859&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:10/1412632177727532</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29859#comment:8" title="Comment 8"&gt;technical_mastermind&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just looked at this again boonebgorges, you are correct that only 2 fail. That was an error on my part, I incorrectly stated the number of tests that fail. Sorry about the confusion. That's what I get for learning PHPUnit the same night I submit a patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great - thanks for verifying. And really, thank you so much for these unit tests - I appreciate them more than the fix itself :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) updated</title>
      
        <dc:creator>technical_mastermind</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:9/1412631939399179</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) updated</title>
      
        <dc:creator>technical_mastermind</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:45:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:8/1412631916308921</guid>
      <description>&lt;p&gt;
Just looked at this again boonebgorges, you are correct that only 2 fail. That was an error on my part, I incorrectly stated the number of tests that fail. Sorry about the confusion. That's what I get for learning PHPUnit the same night I submit a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29875 (Inconsistent button styles for install) created</title>
      
        <dc:creator>iandstewart</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29875</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29875/1412631041306042</guid>
      <description>&lt;p&gt;
The language pack selection screen features a blue button aligned to the right like so.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://cloudup.com/cvOk27SYJij"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cvOk27SYJij&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
While the next few steps of the install process feature a grey button aligned to the left, at least for Canadian English.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://cloudup.com/cgi_-PW5Ot1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cgi_-PW5Ot1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The alignment may be language specific. Not sure if that can be corrected in some way to be less jarring, maybe with centred alignment. The colour shift seemed odd enough to report.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29775 (Media manager bug) updated</title>
      
        <dc:creator>rudybrinkman</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29775#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29775#comment:17/1412630903723153</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29775#comment:16" title="Comment 16"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29775#comment:15" title="Comment 15"&gt;rudybrinkman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It doesn't matter i I choose list or grid. In both cases the icon keeps rotating, it doesn't show any images.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That seems strange - the list mode is generated in PHP, not JS, and there's nothing there that would show a spinner while loading. I suspect that's why kitchin asked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The trouble starts &lt;strong&gt;as soon as the 'media'-link is clicked&lt;/strong&gt; in the left menu bar in the admin panel (see the updated report including screen shot and several tests in the PDF-file). You need to do that first i'm afraid and as soon as that's clicked, the server (Apache httpd-proces for that task) runs wild.
&lt;/p&gt;
&lt;p&gt;
Ps, just a question and with all due respect, but is anyone looking into this matter? Or are we still discussing it if it's an error or not? It's clearly an issue with the code, if you ask me? Esp. since the previous version(s), including very old ones, don't have this issue. It's only in Wordpress 4.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>Michael Arestad</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:19:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:14/1412630379159536</guid>
      <description>&lt;p&gt;
CSSlint is pretty handy for error-checking. I use it in Atom with several of the checks turned off. It's a good thing to include.
&lt;/p&gt;
&lt;p&gt;
What would really be handy: A tool that tracked the number of each type of selector, the speed of each page, and potentially framerate, and the slowest selectors. I will buy whoever builds/implements this a nice bottle of your favorite type of alcohol.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29754,​29874 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29754%2C29874</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29754%2C29874/1412630233974268</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29754" title="#29754: defect (bug): Filtering plugin reviews does not work (closed: fixed)"&gt;#29754&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:7/1412630069119629</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29859#comment:6" title="Comment 6"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29859#comment:5" title="Comment 5"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The duplicated setup code required by the split tests is a bit annoying
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can we move it into a separate private function?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29859/29859.2.patch" title="Attachment '29859.2.patch' in Ticket #29859"&gt;29859.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29859/29859.2.patch" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29859.2.patch attached to Ticket #29859</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29859/29859.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29859/29859.2.patch/1412630021261605</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29874 (Link to Star Ratings/Review for Plugins Not Working) created</title>
      
        <dc:creator>dkozar</dc:creator>

      <pubDate>Mon, 06 Oct 2014 21:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29874</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29874/1412629899679000</guid>
      <description>&lt;p&gt;
Under 4.0 and the new Plugins listing pages, when you click the Detail of a particular plugin and then click the Review tab and then filter reviews by star rating, all reviews are shown. Filtering does not work in 4.0
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29871 (Select post category without select parent category) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29871#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29871#comment:5/1412629004675829</guid>
      <description>&lt;p&gt;
I agree that it's confusing if you have multiple subcategories with the same name. It's a usability issue, as noted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10982#comment:12" title="Comment 12 for #10982: defect (bug): Category hierarchy in list of categories do not display correctly when ... (closed: wontfix)"&gt;comment:12:ticket:10982&lt;/a&gt;. However, that's how the current implementation works.
&lt;/p&gt;
&lt;p&gt;
Use the plugin linked above if you need to keep the original hierarchy visible.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29871#comment:4" title="Comment 4"&gt;Bonesnap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The plugin that's linked says it's compatible up to 3.7.1... can anyone confirm that it works for 4.0?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:6/1412628605038646</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29859#comment:5" title="Comment 5"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The duplicated setup code required by the split tests is a bit annoying
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can we move it into a separate private function?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29775 (Media manager bug) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29775#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29775#comment:16/1412628358591831</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29775#comment:15" title="Comment 15"&gt;rudybrinkman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It doesn't matter i I choose list or grid. In both cases the icon keeps rotating, it doesn't show any images.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That seems strange - the list mode is generated in PHP, not JS, and there's nothing there that would show a spinner while loading. I suspect that's why kitchin asked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:44:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:5/1412628243902951</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29859/29859.patch" title="Attachment '29859.patch' in Ticket #29859"&gt;29859.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29859/29859.patch" title="Download"&gt;​&lt;/a&gt; breaks up technical_mastermind's tests so that only one assertion happens per test. (The duplicated setup code required by the split tests is a bit annoying, but it's important to ensure that the assertions are actually independent of one another. Separating them out also means that one test can fail while the rest continue to run.)
&lt;/p&gt;
&lt;p&gt;
Before going ahead with this fix: technical_mastermind, in your original post you mentioned that *4* of the tests fail without the fix to &lt;code&gt;get_terms()&lt;/code&gt;. I'm only seeing two failures: &lt;code&gt;test_get_terms_hierarchical_tax_hide_empty_true_fields_idslug()&lt;/code&gt; and &lt;code&gt;test_get_terms_hierarchical_tax_hide_empty_true_fields_idname()&lt;/code&gt;. Your diagnosis of the problem - that the 'tt.count' column wasn't being selected when 'hierarchical=true' on hierarchical taxonomies - suggests that there should only be failures when 'hierarchical=true' *and* 'hide_empty=true', since when 'hide_empty=false' the count value is never used. So, 2 seems like the correct number of failing tests. Can you clarify where your 4 is coming from?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21243.5.diff attached to Ticket #21243</title>
      
        <dc:creator>convissor</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21243/21243.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21243/21243.5.diff/1412627857111297</guid>
      <description>&lt;p&gt;
Add docblock for filter hook call.  Fix @since on main function.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:36:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:41/1412627818305270</guid>
      <description>&lt;p&gt;
Comment 34 is referring to specific cases, so it's not reflecting the general case.
&lt;/p&gt;
&lt;p&gt;
The general case is that any image that contains text or contributes content to the site must have an alt attribute. Any image that links anywhere must also have an alt attribute, regardless of whether the image itself contributes content.
&lt;/p&gt;
&lt;p&gt;
In order to conform with ATAG guidelines (Authoring Tool Accessibility Guidelines), we need to provide the ability for authors to define alternate text for an image. There's obviously no way to do this and force it to work for all existing themes, but we can create the ability to add it in theme updates and future themes.
&lt;/p&gt;
&lt;p&gt;
I think that adding it as a new argument to theme support for custom headers is a great solution.
&lt;/p&gt;
&lt;p&gt;
Having a default alt attribute for linked images is fine, but it doesn't solve the general case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29859.patch attached to Ticket #29859</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:36:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29859/29859.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29859/29859.patch/1412627768372809</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24049 (Make Plugin Editor's file list alphabetical by full path) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24049#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24049#comment:7/1412627501619445</guid>
      <description>&lt;p&gt;
Attached patch resolves the issued stated above by placing the main plugin file name at the start of the returned array.
&lt;/p&gt;
&lt;p&gt;
I've also dropped the root file sorting section with the preg_match - it doesn't seem to change the returned values and also causes errors as the regex is not properly contained - I was getting lots of errors log about invalid operators.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24049v2.diff attached to Ticket #24049</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:29:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24049/24049v2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24049/24049v2.diff/1412627399447714</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>29833.grunt-task.2.patch attached to Ticket #29833</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29833/29833.grunt-task.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29833/29833.grunt-task.2.patch/1412626354969336</guid>
      <description>&lt;p&gt;
Don't ship non-minified jUI files
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21243 (move password hint text to a function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21243#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21243#comment:6/1412626042082839</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The filter needs to be documented as per the &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/inline-documentation-standards/php-documentation-standards/#4-hooks-actions-and-filters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;documentation standards&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29790 (Widgets don't know the widget area context they're in) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29790#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29790#comment:14/1412625987233514</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29790#comment:13" title="Comment 13"&gt;ruud@…&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How about dropping 'sidebar' in favor of 'widget-area'? What's the general verdict on this?
&lt;/p&gt;
&lt;p&gt;
get_widget_area_context();
set_widget_area_context();
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While “sidebar” has been replaced with “widget area” in the user-facing admin pages, the term “sidebar” is still used exclusively in the WordPress API, so I think it should be used here too.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Widget {
        /* ... */
        public function get_sidebar_id() {
                foreach ( wp_get_sidebars_widgets() as $sidebar_id =&amp;gt; $widgets_ids ) {
                        if ( in_array( $this-&amp;gt;id, $widgets_ids ) ) {
                                return $sidebar_id;
                        }
                }
                return null;
        }
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29682 (Travis CI: Remove PHP 5.6 from 'allowed to fail' section) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29682#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29682#comment:3/1412625655982816</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29844" title="PHP 5.6 test failures shouldn't be allowed.
PHP 5.6 was released on ..."&gt;29844&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
PHP 5.6 test failures shouldn't be allowed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP 5.6 was released on 28 August 2014 and thus tests on it should be on the same level as all of our other PHP tests pass.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29682" title="#29682: defect (bug): Travis CI: Remove PHP 5.6 from 'allowed to fail' section (closed: fixed)"&gt;#29682&lt;/a&gt;&lt;br /&gt;
Props netweb&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29844]: PHP 5.6 test failures shouldn't be allowed.  PHP 5.6 was released on ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 06 Oct 2014 20:00:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29844</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29844/1412625654448225</guid>
      <description>&lt;p&gt;
PHP 5.6 test failures shouldn't be allowed.
&lt;/p&gt;
&lt;p&gt;
PHP 5.6 was released on 28 August 2014 and thus tests on it should be on the same level as all of our other PHP tests pass.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29682" title="#29682: defect (bug): Travis CI: Remove PHP 5.6 from 'allowed to fail' section (closed: fixed)"&gt;#29682&lt;/a&gt;
Props netweb
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24049 (Make Plugin Editor's file list alphabetical by full path) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:48:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24049#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24049#comment:6/1412624885104890</guid>
      <description>&lt;p&gt;
Sorry to report on further testing that this doesn't work fully.
&lt;/p&gt;
&lt;p&gt;
By returning a sorted list of plugin files the 'first' entry returned may not be the main plugin file and it may also not be a file supported in the editor - resulting in unusual behaviour.
&lt;/p&gt;
&lt;p&gt;
The sort needs to return the array with the main file at the start of the array or somehow that file needs to be 'selected' by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29833.grunt-task.patch attached to Ticket #29833</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29833/29833.grunt-task.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29833/29833.grunt-task.patch/1412624648357945</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:40/1412624384001232</guid>
      <description>&lt;p&gt;
I've reviewed the previous patches that add the UI for setting the alt attribute, and patching the bundled themes appeared to be the only feasible solution here.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;As &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/15926/15926.3.diff" title="Attachment '15926.3.diff' in Ticket #15926"&gt;15926.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/15926/15926.3.diff" title="Download"&gt;​&lt;/a&gt; shows, even if we add the UI to the Custom Header screen or the Customizer, it won't work out of the box if the theme does not support it, which would be confusing. We could probably add &lt;code&gt;alt&lt;/code&gt; as a &lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/add_theme_support#Custom_Header"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;new argument&lt;/a&gt; for &lt;code&gt;add_theme_support( 'custom-header' )&lt;/code&gt; though, and only display the alt text input if the theme declares support for it.
&lt;/li&gt;&lt;li&gt;&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15926#comment:34" title="Comment 34"&gt;comment:34&lt;/a&gt; suggests that only header images linked to the home page should have a non-empty alt text, and the site title seems to be the best option in that case. Is there a use case for a different alt text?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29873 (Nickname is auto-set as same as username, but then get an error ...) updated</title>
      
        <dc:creator>jdaviescoates</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29873#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29873#comment:2/1412622833689565</guid>
      <description>&lt;p&gt;
Aha, thanks for spotting that @SergeyBiryukov!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29873 (Nickname is auto-set as same as username, but then get an error ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29873#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29873#comment:1/1412622596118044</guid>
      <description>invalid: &lt;p&gt;
The message comes from &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/better-wp-security/tags/4.4.13/modules/free/tweaks/class-itsec-tweaks.php#L165"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;iThemes Security plugin&lt;/a&gt;, not WordPress core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #26457 (Long live the oxford comma) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26457#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26457#comment:6/1412622543497122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by DanielConvissor. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-10-06&amp;amp;sort=asc#m935034"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21243 (move password hint text to a function) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21243#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21243#comment:5/1412622543255567</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by DanielConvissor. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-10-06&amp;amp;sort=asc#m935033"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) reopened</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:39/1412622453689590</guid>
      <description>&lt;p&gt;
The patches provided by Rian are fine, as they are, but don't answer the question raised by this ticket. This ticket is about allowing an alt attribute to be set as part of the standard custom header functionality of the customizer, which that patch doesn't address.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #29873 (Nickname is auto-set as same as username, but then get an error ...) created</title>
      
        <dc:creator>jdaviescoates</dc:creator>

      <pubDate>Mon, 06 Oct 2014 19:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29873</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29873/1412622112351579</guid>
      <description>&lt;p&gt;
When I create a new user on my multi-site install all I have to complete is their username and email.
&lt;/p&gt;
&lt;p&gt;
Then, if I go to edit that user (say, to change their password, or change anything) and hit save, then I get an error message which states:
&lt;/p&gt;
&lt;p&gt;
"Your Nickname must be different than your login name. Please choose a different Nickname."
&lt;/p&gt;
&lt;p&gt;
If they &lt;em&gt;must&lt;/em&gt; be different then why does wordpress automatically make them the same?!?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17904 (Multisite has more restrictions on user login character set) updated</title>
      
        <dc:creator>jdaviescoates</dc:creator>

      <pubDate>Mon, 06 Oct 2014 18:23:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17904#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17904#comment:28/1412619782996521</guid>
      <description>&lt;p&gt;
I would LOVE this issue to be resolved asap. This has been reported since 3.0 and now we're on 4.0! When setting up stand alone installs of wordpress I nearly always use email addresses for usernames when setting new users because they tend to be both a lot longer and more varied (and hence a lot harder to guess/ more secure) than the short a-z 0-9 restricted user names currently possible with mulitisite installs. I just tried to create new user on a multisite install using an email address but hit this issue.  My work around for now is to use &lt;a class="ext-link" href="https://wordpress.org/plugins/force-email-login/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this plugin&lt;/a&gt; that requires people use their email address instead of their username to login.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29833 (Update to jQuery UI 1.11.2) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 06 Oct 2014 18:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29833#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29833#comment:8/1412619542368557</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by ocean90. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-10-06&amp;amp;sort=asc#m934962"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 06 Oct 2014 18:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:13/1412618956292608</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:12" title="Comment 12"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That seems less like syntax checking to me and more like stylistic checking.  Much like we use jsvalidate and jshint separately, I think this is two different separate tasks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hence the difference between ERROR and WARNING in CSSLint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 06 Oct 2014 18:01:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:12/1412618510085561</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:11" title="Comment 11"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With my patch applied to parserlib, this results in:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;errors for unknown moz-document and ms-keyframes
&lt;/li&gt;&lt;li&gt;no other errors
&lt;/li&gt;&lt;li&gt;65 warnings
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The warnings all seem like good things to fix:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;non-adjacent duplicate properties (5)
&lt;/li&gt;&lt;li&gt;unknown property values (3)
&lt;/li&gt;&lt;li&gt;no fallback colors for RGBA usage (18)
&lt;/li&gt;&lt;li&gt;one vendor-prefixed property without the standard property
&lt;/li&gt;&lt;li&gt;one verbose property usage when shorthand will do (1)
&lt;/li&gt;&lt;li&gt;zero units (17)
&lt;/li&gt;&lt;li&gt;some display property grouping warnings (19)
&lt;/li&gt;&lt;li&gt;one unqualified attribute (this one may be a bug)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
That seems less like syntax checking to me and more like stylistic checking.  Much like we use jsvalidate and jshint separately, I think this is two different separate tasks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24148 (Add aria-labelledby attributes to comment form) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24148#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24148#comment:13/1412618282590760</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by RianRietveld. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-10-06&amp;amp;sort=asc#m202218"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24148 (Add aria-labelledby attributes to comment form) updated</title>
      
        <dc:creator>bramd</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:57:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24148#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24148#comment:12/1412618236455356</guid>
      <description>&lt;p&gt;
Last patch has been tested by me and others in NVDA + Firefox, JAWS + IE and VoiceOver on Mac + Safari. I think this is ready to be commited.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:57:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:11/1412618235923170</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:1" title="Comment 1"&gt;x2048&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
1) all media queries will need to be rewritten to not include spaces between parentheses, or CSSLint will show errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No thanks. :) I patched CSSLint for this: &lt;a class="ext-link" href="https://github.com/CSSLint/parser-lib/pull/125"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/CSSLint/parser-lib/pull/125&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think CSSLint is actually feasible here. Here's what I'm using, with good effect:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
	// I used jQuery UI as a starting point
	"adjoining-classes": false,
	"box-sizing": false,
	"compatible-vendor-prefixes": false,
	"duplicate-background-images": false,
	"import": false,
	"important": false,
	"outline-none": false,
	"overqualified-elements": false,
	"text-indent": false,
	// Additional
	"ids": false,
	"box-model": false,
	"qualified-headings": false,
	"unique-headings": false,
	"universal-selector": false,
	"regex-selectors": false,
	"floats": false,
	"font-sizes": false
}
&lt;/pre&gt;&lt;p&gt;
With my patch applied to parserlib, this results in:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;errors for unknown moz-document and ms-keyframes
&lt;/li&gt;&lt;li&gt;no other errors
&lt;/li&gt;&lt;li&gt;65 warnings
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The warnings all seem like good things to fix:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;non-adjacent duplicate properties (5)
&lt;/li&gt;&lt;li&gt;unknown property values (3)
&lt;/li&gt;&lt;li&gt;no fallback colors for RGBA usage (18)
&lt;/li&gt;&lt;li&gt;one vendor-prefixed property without the standard property
&lt;/li&gt;&lt;li&gt;one verbose property usage when shorthand will do (1)
&lt;/li&gt;&lt;li&gt;zero units (17)
&lt;/li&gt;&lt;li&gt;some display property grouping warnings (19)
&lt;/li&gt;&lt;li&gt;one unqualified attribute (this one may be a bug)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21243 (move password hint text to a function) updated</title>
      
        <dc:creator>convissor</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21243#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21243#comment:4/1412618159908110</guid>
      <description>&lt;p&gt;
The minor grammar change in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26457" title="#26457: defect (bug): Long live the oxford comma (closed: fixed)"&gt;#26457&lt;/a&gt; / &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27246" title="Add Oxford comma to password hint.
props trepmal.
fixes #26457."&gt;r27246&lt;/a&gt; "breaking" &lt;a class="ext-link" href="http://wordpress.org/plugins/login-security-solution/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Login Security Solution&lt;/a&gt; reaffirms the need for this patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24148.3.patch attached to Ticket #24148</title>
      
        <dc:creator>bramd</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24148/24148.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24148/24148.3.patch/1412618102792808</guid>
      <description>&lt;p&gt;
Use aria-describedby for the help text on the comment field and remove aria-labeledby attribute since the relation is already made using &amp;lt;label for="..."&amp;gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>21243.4.diff attached to Ticket #21243</title>
      
        <dc:creator>convissor</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21243/21243.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21243/21243.4.diff/1412617700834492</guid>
      <description>&lt;p&gt;
clean, patch updated to 4.1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21243 (move password hint text to a function) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:14:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21243#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21243#comment:3/1412615645032498</guid>
      <description>&lt;p&gt;
+1 for this. Refreshed patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21243.diff attached to Ticket #21243</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:13:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21243/21243.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21243/21243.diff/1412615617753928</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:10/1412615490342380</guid>
      <description>&lt;p&gt;
Thanks for the start on this x2048!
&lt;/p&gt;
&lt;p&gt;
I think error checking is something we can do just by using something like &lt;a class="ext-link" href="https://github.com/reworkcss/css"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/reworkcss/css&lt;/a&gt; to see if the AST is built properly and if it errors, we know that we have an error. This seems to be the base of what you are using x2048.
&lt;/p&gt;
&lt;p&gt;
Having a style checker seems like a separate issue and thus should be a separate ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:38/1412615341929446</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by RianRietveld. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-10-06&amp;amp;sort=asc#m202147"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17552 (Plugin editor incorrectly calls some files inactive.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 17:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17552#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17552#comment:9/1412614830370988</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17552/17552-2.patch" title="Attachment '17552-2.patch' in Ticket #17552"&gt;17552-2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17552/17552-2.patch" title="Download"&gt;​&lt;/a&gt; appears to fix both this ticket and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24122" title="#24122: defect (bug): When opening a file in Plugin Editor, show correct plugin in the ... (closed: fixed)"&gt;#24122&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Need to resolve the @todo's left there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24122 (When opening a file in Plugin Editor, show correct plugin in the ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24122#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24122#comment:10/1412614675698277</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24122/" title="Attachments of Ticket #24122"&gt;#24122_fix_logic.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24122/" title="Download"&gt;​&lt;/a&gt; still doesn't work if you click the Update File button.
&lt;/p&gt;
&lt;p&gt;
The patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17552" title="#17552: defect (bug): Plugin editor incorrectly calls some files inactive. (closed: fixed)"&gt;#17552&lt;/a&gt;, however, appears to resolve both tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29816 (Some Versions Can't Upgrade to 4.0) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:55:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29816#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29816#comment:21/1412614550573784</guid>
      <description>fixed: &lt;p&gt;
This was fixed on Thursday.
&lt;/p&gt;
&lt;p&gt;
Before 3.7, all WP installs communicated over HTTP with wordpress.org. After 3.7, they communicate securely if we think they are able. As of 3.7.1, they then also fall back to HTTP if the SSL request fails, because just because we think they are able doesn't mean they *are* able. (The primary example was bad OpenSSL.) Missing or broken OpenSSL is supported because allowing them to update is ultimately way more important.
&lt;/p&gt;
&lt;p&gt;
Anyway, the API endpoints that pre-3.7 installs used were getting back &lt;a class="ext-link" href="http://wordpress.org/*.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/*.zip&lt;/a&gt; URLs which now redirect. While that redirect is followed, it would break any install without OpenSSL or with a broken OpenSSL. I've moved those downloads to come from downloads.wordpress.org, which has no redirect.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29871 (Select post category without select parent category) updated</title>
      
        <dc:creator>Bonesnap</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29871#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29871#comment:4/1412614324943218</guid>
      <description>&lt;p&gt;
I agree that this behaviour is both confusing and unintuitive. A project I have created recently for a client relies heavily on a parent/sub category structure. Several of the subcategories have the same name ("Other" for example), so it can be quite confusing. The client actually contacted us thinking there was a bug and they had ruined their categories on some of their posts. I'm glad I saw this ticket because I told them it was WordPress behaviour and I'd have to look into it. I was considering making a ticket but saw this one this morning.
&lt;/p&gt;
&lt;p&gt;
The plugin that's linked says it's compatible up to 3.7.1... can anyone confirm that it works for 4.0?
&lt;/p&gt;
&lt;p&gt;
It does strike me as odd that this was the consensus for expected behaviour regarding this, but I guess that's what the community wanted, though seeing the number of duplicate tickets is compelling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24044 (Add index to wp_options to aid/improve performance) updated</title>
      
        <dc:creator>brokentone</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:30:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24044#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24044#comment:36/1412613055495354</guid>
      <description>&lt;p&gt;
Even without thousands of rows, we found benefits in adding this index ourselves. I'd advocate for it to be added in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>x2048</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:9/1412612176428247</guid>
      <description>&lt;p&gt;
Nice :)
&lt;/p&gt;
&lt;p&gt;
So, I started building this after looking over the WP issues at "Contributor Day" at WordCamp 2014.
The submitted patch installs a grunt task that calls wp-css-check.
&lt;/p&gt;
&lt;p&gt;
I'd be happy to continue developing it, if there's interest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:14:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:8/1412612048905627</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:6" title="Comment 6"&gt;x2048&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@helen What steps do I need to take in order to have &lt;a class="ext-link" href="https://github.com/x1024/wp-css-check"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/x1024/wp-css-check&lt;/a&gt; be considered as a solution for the task?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Mention it here, as you've done :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:7/1412611938264277</guid>
      <description>&lt;p&gt;
CSSComb does have a &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--lint&lt;/code&gt; option, but it's not very helpful at the moment, not reporting lines and columns etc. CSSLint would be favourable over CSSComb just for error checking of specific non-standards issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>x2048</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:10:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:6/1412611806047629</guid>
      <description>&lt;p&gt;
@helen What steps do I need to take in order to have &lt;a class="ext-link" href="https://github.com/x1024/wp-css-check"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/x1024/wp-css-check&lt;/a&gt; be considered as a solution for the task?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 06 Oct 2014 16:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:5/1412611572422353</guid>
      <description>&lt;p&gt;
I realized that the mention of our standards in the ticket description is probably a little misleading, but in essence I'd like to start with error checking here and then move on to tasks that would actually make changes separately.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 06 Oct 2014 15:58:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:4/1412611091136376</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:3" title="Comment 3"&gt;GaryJ&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Specifically not tackling standards here, rather syntax checking, but good to know for future reference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29846 (Document default arguments for WP_User_Query::prepare_query()) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 06 Oct 2014 15:35:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29846#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29846#comment:12/1412609750530174</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29843" title="Add inline documentation for `WP_User_Query` default arguments in the ..."&gt;29843&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add inline documentation for &lt;code&gt;WP_User_Query&lt;/code&gt; default arguments in the form of a hash notation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds documentation pointers from the class-level doc for &lt;code&gt;WP_User_Query&lt;/code&gt;, as well as the &lt;code&gt;get_users()&lt;/code&gt; doc.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props tschutter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29846" title="#29846: defect (bug): Document default arguments for WP_User_Query::prepare_query() (closed: fixed)"&gt;#29846&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29843]: Add inline documentation for `WP_User_Query` default arguments in the ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 06 Oct 2014 15:35:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29843</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29843/1412609749782269</guid>
      <description>&lt;p&gt;
Add inline documentation for &lt;code&gt;WP_User_Query&lt;/code&gt; default arguments in the form of a hash notation.
&lt;/p&gt;
&lt;p&gt;
Adds documentation pointers from the class-level doc for &lt;code&gt;WP_User_Query&lt;/code&gt;, as well as the &lt;code&gt;get_users()&lt;/code&gt; doc.
&lt;/p&gt;
&lt;p&gt;
Props tschutter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29846" title="#29846: defect (bug): Document default arguments for WP_User_Query::prepare_query() (closed: fixed)"&gt;#29846&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29846 (Document default arguments for WP_User_Query::prepare_query()) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 06 Oct 2014 15:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29846#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29846#comment:11/1412609638086148</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29846/doc-wp-user-query-args.29846.2.diff" title="Attachment 'doc-wp-user-query-args.29846.2.diff' in Ticket #29846"&gt;doc-wp-user-query-args.29846.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29846/doc-wp-user-query-args.29846.2.diff" title="Download"&gt;​&lt;/a&gt; looks great. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29872 (Permalink Structure Tags buttons) updated</title>
      
        <dc:creator>Apiweb</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29872#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29872#comment:3/1412607576364564</guid>
      <description>&lt;p&gt;
I thought if we used some drag-drop like the one used in the management of menus or widgets, it could work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27195 (Disappearing image captions on pasted images from Google Docs) updated</title>
      
        <dc:creator>TobiasKjrsgaard</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27195#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27195#comment:7/1412607371355086</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27195#comment:6" title="Comment 6"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you take a look?
&lt;/p&gt;
&lt;p&gt;
I can copy paste from all over the place no problem, but Google Docs' images do get stripped.
&lt;/p&gt;
&lt;p&gt;
4.0.21 Release Notes:
"and a bunch of bug fixes regarding paste from Word/Open office/Google docs etc."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just tested this in 4.0 and it seems that the bug is back :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29872 (Permalink Structure Tags buttons) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:53:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29872#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29872#comment:2/1412607200468432</guid>
      <description>&lt;p&gt;
Drag-and-drop is not a great starting point (touch, accessibility), but an autocomplete-y method could be interesting. Probably worth a small proof of concept plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29872 (Permalink Structure Tags buttons) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29872#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29872#comment:1/1412606346421157</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29872 (Permalink Structure Tags buttons) created</title>
      
        <dc:creator>Apiweb</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29872</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29872/1412606254819693</guid>
      <description>&lt;p&gt;
I think it would be interesting, in the customization of permalinks screen, display a box with all the available structures, where the user could drag and drop them.
&lt;/p&gt;
&lt;p&gt;
With that, he would not need to open a new page, view the documentation and check what are the available structures. He could already build your own structure on the page by dragging and dropping.
&lt;/p&gt;
&lt;p&gt;
I made a mockup:
&lt;a style="padding:0; border:none" href="http://i.imgur.com/25U4K5Y.png"&gt;&lt;img src="http://i.imgur.com/25U4K5Y.png" alt="http://i.imgur.com/25U4K5Y.png" crossorigin="anonymous" title="http://i.imgur.com/25U4K5Y.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29840 (Use Moment.js to show dates) updated</title>
      
        <dc:creator>Apiweb</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29840#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29840#comment:2/1412605983129502</guid>
      <description>&lt;p&gt;
Where it is displayed date, we could display them in the format and timezone of the User. So we would have a more globalized product.
And yet unless we would have two settings.
&lt;/p&gt;
&lt;p&gt;
example:
When viewing a post, for me the "post date" would be shown in European format with timezone here.
For someone in japan would be the date displayed in the Japanese format and the timezone of there.
This not only for "dates of posts", but also for the dates of comments, dates inside WP-Admin, etc ...
&lt;/p&gt;
&lt;p&gt;
With this, users would have a globalized website, and decrease a bit of the confusion that happens involving date formats and timezones.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29871 (Select post category without select parent category) reopened</title>
      
        <dc:creator>pavelthq</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:32:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29871#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29871#comment:3/1412605977832446</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #29871 (Select post category without select parent category) updated</title>
      
        <dc:creator>pavelthq</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:32:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29871#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29871#comment:2/1412605958441694</guid>
      <description>&lt;p&gt;
Okay, what if I have following structure:
&lt;/p&gt;
&lt;p&gt;
Armani
---Shirts
Nike
---Shirts
&lt;/p&gt;
&lt;p&gt;
I checked both this cat. and after page reload I have two same name cats, how to detect to disable armani shirts category for example?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>same_name.png attached to Ticket #29871</title>
      
        <dc:creator>pavelthq</dc:creator>

      <pubDate>Mon, 06 Oct 2014 14:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29871/same_name.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29871/same_name.png/1412605813370070</guid>
      <description>&lt;p&gt;
two same category names with different parrents
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29846 (Document default arguments for WP_User_Query::prepare_query()) updated</title>
      
        <dc:creator>tschutter</dc:creator>

      <pubDate>Mon, 06 Oct 2014 13:41:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29846#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29846#comment:10/1412602918102117</guid>
      <description>&lt;p&gt;
Added &lt;code&gt;doc-wp-user-query-args.29846.2.diff&lt;/code&gt; with your proposed changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>doc-wp-user-query-args.29846.2.diff attached to Ticket #29846</title>
      
        <dc:creator>tschutter</dc:creator>

      <pubDate>Mon, 06 Oct 2014 13:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29846/doc-wp-user-query-args.29846.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29846/doc-wp-user-query-args.29846.2.diff/1412602676809276</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29793 (Author Archives not Generated for users who create Gravatar Profile ...) updated</title>
      
        <dc:creator>hopetommola</dc:creator>

      <pubDate>Mon, 06 Oct 2014 13:34:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29793#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29793#comment:3/1412602455408031</guid>
      <description>&lt;p&gt;
I am duplicating the current live site to the dev server and testing more extensively. Will update. Note that completely removing an existing author (with existing gravatar) with existing posts, reattributing those posts to a new author, deleting the original author as a user, re-adding and re-attributing the posts to the author did NOT solve the problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #10982,​29871 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 13:27:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=10982%2C29871</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=10982%2C29871/1412602062601881</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10982" title="#10982: defect (bug): Category hierarchy in list of categories do not display correctly when ... (closed: wontfix)"&gt;#10982&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14723" title="#14723: defect (bug): Category hierarchy is not respected in admin section (closed: duplicate)"&gt;#14723&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14916" title="#14916: defect (bug): Seleceted subcategories in admin panels not appear in &amp;#34;tree&amp;#34; view (closed: duplicate)"&gt;#14916&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16475" title="#16475: defect (bug): Displaying submenus in custom taxonomy of active parent (closed: duplicate)"&gt;#16475&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17135" title="#17135: defect (bug): Selecting Category Breaks Child's Hierarchy (closed: duplicate)"&gt;#17135&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17317" title="#17317: defect (bug): Parent/child categories losing displayed hierarchy in post edit (closed: invalid)"&gt;#17317&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17835" title="#17835: defect (bug): Subcategories won't show indented in edit page (closed: duplicate)"&gt;#17835&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19880" title="#19880: enhancement: Hierarchial categories don't behave logically in admin sidebar (closed: duplicate)"&gt;#19880&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20160" title="#20160: defect (bug): Category listing looses hierarchy when parents are selected (closed: duplicate)"&gt;#20160&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21544" title="#21544: defect (bug): Custom Taxonomy terms tree view not displayed correctly in backend (closed: duplicate)"&gt;#21544&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21127" title="#21127: defect (bug): Selected categories displayed out of order on main edit screen (closed: duplicate)"&gt;#21127&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This is intentional, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10982" title="#10982: defect (bug): Category hierarchy in list of categories do not display correctly when ... (closed: wontfix)"&gt;#10982&lt;/a&gt;. A filter was introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20054" title="#20054: enhancement: No way to filter wp_terms_checklist() to prevent checked taxonomies ... (closed: fixed)"&gt;#20054&lt;/a&gt;, allowing plugins to change that behaviour.
&lt;/p&gt;
&lt;p&gt;
This plugin implements the change: &lt;a class="ext-link" href="https://wordpress.org/plugins/category-checklist-tree/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/category-checklist-tree/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #29808 (Post/paging navigation template tags) updated</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Mon, 06 Oct 2014 13:15:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29808#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29808#comment:4/1412601329293282</guid>
      <description>&lt;p&gt;
I would recommend that we remove the HTML and the hardcoded arrows from the code. If theme developers want arrows, they could use an icon font and CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29871 (Select post category without select parent category) created</title>
      
        <dc:creator>pavelthq</dc:creator>

      <pubDate>Mon, 06 Oct 2014 13:10:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29871</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29871/1412601044958358</guid>
      <description>&lt;p&gt;
Hello, i'm noticed that if I selected some child cat after saving post it moves this category to TOP level. this is missunderstading and this is not happening in quick edit.
&lt;/p&gt;
&lt;p&gt;
Also a lot of tickets with Selecting Sub-category should select parent category, is this work's as expected? &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16397" title="#16397: feature request: Selecting Sub-Category should select parent category. (closed: wontfix)"&gt;#16397&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 12:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:37/1412599437243846</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29842" title="Bundled themes: Add an alt attribute with the site title for header ..."&gt;29842&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bundled themes: Add an alt attribute with the site title for header images linked to the home page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props rianrietveld.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15926" title="#15926: defect (bug): Add alt attribute support for Custom Header functionality (closed: fixed)"&gt;#15926&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29842]: Bundled themes: Add an alt attribute with the site title for header ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 12:43:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29842</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29842/1412599435956034</guid>
      <description>&lt;p&gt;
Bundled themes: Add an alt attribute with the site title for header images linked to the home page.
&lt;/p&gt;
&lt;p&gt;
props rianrietveld.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15926" title="#15926: defect (bug): Add alt attribute support for Custom Header functionality (closed: fixed)"&gt;#15926&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Mon, 06 Oct 2014 12:20:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:36/1412598004911730</guid>
      <description>&lt;p&gt;
I think you want
&lt;/p&gt;
&lt;pre class="wiki"&gt;alt="&amp;lt;?php echo esc_attr( get_bloginfo( 'name', 'display' ) ); ?&amp;gt;"
&lt;/pre&gt;&lt;p&gt;
based on what's already in twentyten/header.php and twentytwelve/header.php for &lt;code&gt;title&lt;/code&gt; attributes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 06 Oct 2014 10:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:35/1412590648408614</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>15926.4.diff attached to Ticket #15926</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 06 Oct 2014 10:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15926/15926.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15926/15926.4.diff/1412590257684058</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 06 Oct 2014 10:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:34/1412590207002800</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Why don't we solve the alt text like this:
&lt;/p&gt;
&lt;p&gt;
The heading image is inside an &amp;lt;a&amp;gt; element linking to home_url( '/') (except for twenty ten).
&lt;/p&gt;
&lt;p&gt;
Because the alt text of the header image is actually a link text this way, we could replace the empty alt="" into an alt="&amp;lt;?php bloginfo( 'name ' ); ?&amp;gt;.
Using an alt text with a description of what's on the images is not a good alt in this case.
&lt;/p&gt;
&lt;p&gt;
For the themes:
Twenty fourteen: in header.php alt="&amp;lt;?php bloginfo( 'name ' ); ?&amp;gt;
Twenty thirteen: header image is a background image, so no alt text in needed
Twenty twelve: in header.php  alt="&amp;lt;?php bloginfo( 'name ' ); ?&amp;gt;
Twenty eleven: in header.php  alt="&amp;lt;?php bloginfo( 'name ' ); ?&amp;gt;
Twenty ten: here the image is not inside a link to the homepage, so a alt="" can be used here.
&lt;/p&gt;
&lt;p&gt;
This way it works by default correctly.
&lt;/p&gt;
&lt;p&gt;
Attached 15926.4.diff with the changes for Twenty fourteen, Twenty twelve and Twenty eleven.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>garubi</dc:creator>

      <pubDate>Mon, 06 Oct 2014 10:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:25/1412590103644498</guid>
      <description>&lt;p&gt;
Just applied the 29692.diff
Now everithing is ok: I can create new sites and they are ok.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26072 (Bundle the Open Sans font) updated</title>
      
        <dc:creator>igmoweb</dc:creator>

      <pubDate>Mon, 06 Oct 2014 09:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26072#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26072#comment:32/1412588533148946</guid>
      <description>&lt;p&gt;
If Open Sans is going to stay, shouldn't we add the possibility to change the font URL? Maybe a filter in wp-includes/script-loader.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;$open_sans_font_url = apply_filters( 'wp_open_sans_whatever', "//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,300,400,600&amp;amp;subset=$subsets" );
&lt;/pre&gt;&lt;p&gt;
At least it makes more sense that unregistering and registering a new one. We could add a comment for the filter that would indicate that setting the URL to an empty one would not break the admin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 06 Oct 2014 08:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:3/1412582752989576</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/cedaro/grunt-wp-css"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;grunt-wp-css&lt;/a&gt; is a wrapper for CSSComb (and &lt;a class="ext-link" href="https://github.com/cedaro/grunt-wp-css/issues/3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;currently&lt;/a&gt; CSSBeautify until an issue in csscomb.js is fixed) and includes a couple of configs (same, other than default vs alphabetical sort order).
&lt;/p&gt;
&lt;p&gt;
Whether it's csslint or csscomb, I'd like to see a standalone grunt package ( like grunt-wp-css) which then core and plugins and themes could use, with minimal configuration, rather than have to set up csslint / csscomb grunt packages with duplicitous configs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21899 (Missing class identifier for password protected posts) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 06 Oct 2014 06:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21899#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21899#comment:2/1412578418307290</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While "interesting from a CSS styling perspective" is not the strongest reason to add it, a case could be made for consistency with status classes.
&lt;/p&gt;
&lt;p&gt;
They should probably entail all three visibility statuses, public, protected, and private. I also like the idea about prefixing them with &lt;code&gt;visibility-&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 03:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:4/1412566438799114</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fix looks good at a glance - thanks, technical_mastermind. I'll review the patch in more detail in the upcoming days.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29859 (get_terms on hierarchical taxonomy fails when 'fields' arg contains ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 03:33:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29859#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29859#comment:3/1412566381212666</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19623 (Use Comment API in comments_template, rather than hardcoded SQL) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 06 Oct 2014 03:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19623#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19623#comment:17/1412566211893786</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Circling back around to this, because I'd like to get another opinion or two before moving forward with the fix suggested in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19623/19623.03.patch" title="Attachment '19623.03.patch' in Ticket #19623"&gt;19623.03.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19623/19623.03.patch" title="Download"&gt;​&lt;/a&gt;. IMHO, the params 'unapproved_user_id', 'unapproved_author', and 'unapproved_author_email' are very clunky. Their semantics overlap with each other and with 'status' in awkward ways, and it will be very important to document how they override other params (so that, eg, passing 'unapproved_author' with 'status=approve' means that not all the returned comments will actually be approved).
&lt;/p&gt;
&lt;p&gt;
A much more elegant - but more complicated - solution would be to allow more fine-grained 'status' queries. Let's say (and here I'm just tossing out a possible syntax) your status argument looked like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'status' =&amp;gt; array(
    'relation' =&amp;gt; 'OR',
    array(
        'status' =&amp;gt; 'approve',
    ),
    array(
        'status' =&amp;gt; '0',
        'author_email' =&amp;gt; 'foo@example.com',
    ),
),
&lt;/pre&gt;&lt;p&gt;
This would be a general framework for complex status queries, and would simultaneously fix &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29612" title="#29612: enhancement: Query for multiple comment statuses (closed: fixed)"&gt;#29612&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think that this kind of framework is probably more than is feasible for 4.1. But I want the record to show that I think it's probably the kind of thing we should be shooting for in the medium to long term. And I don't want the decisions made in the short term to affect these longer term plans. In the current case, it's fairly easy to see how 'unapproved_author_email' etc could, at some point in the future, be translated into a query of the syntax above. So, I do think that the suggested fix is probably good enough for us to fix the problem for 4.1 (and it's definitely better than doing nothing at all). But I wanted to throw this comment out there to see if anyone had ideas for a slightly more elegant approach to the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22813 (Media Uploader doesn't escape "+" in filenames and doesn't upload file) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 06 Oct 2014 03:18:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22813#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22813#comment:20/1412565498106998</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22813 (Media Uploader doesn't escape "+" in filenames and doesn't upload file) updated</title>
      
        <dc:creator>jamescollins</dc:creator>

      <pubDate>Mon, 06 Oct 2014 03:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22813#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22813#comment:19/1412565035609147</guid>
      <description>&lt;p&gt;
Is it possible to change the Milestone of this ticket to 4.0 ?
&lt;/p&gt;
&lt;p&gt;
Thanks :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 06 Oct 2014 02:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:22/1412562877054142</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29806#comment:20" title="Comment 20"&gt;avryl&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Right. Most of the time the menu is position:fixed because of &lt;code&gt;.sticky-menu&lt;/code&gt; which also adds z-index. May as well add the z-index as default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 06 Oct 2014 02:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:21/1412561351817920</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29841" title="Add default z-index to the admin menu, see #29806"&gt;[29841]&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Add default z-index to the admin menu, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29806" title="#29806: task (blessed): Focus (continued) (closed: fixed)"&gt;#29806&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29841]: Add default z-index to the admin menu, see #29806</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 06 Oct 2014 01:59:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29841</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29841/1412560786390703</guid>
      <description>&lt;p&gt;
Add default z-index to the admin menu, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29806" title="#29806: task (blessed): Focus (continued) (closed: fixed)"&gt;#29806&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Screen Shot 2014-10-05 at 18.29.09.png attached to Ticket #29806</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 06 Oct 2014 01:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29806/Screen%20Shot%202014-10-05%20at%2018.29.09.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29806/Screen%20Shot%202014-10-05%20at%2018.29.09.png/1412559007322924</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 06 Oct 2014 01:26:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:20/1412558760973921</guid>
      <description>&lt;p&gt;
@azaozz, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29835" title="Pin the admin menu on scrolling similarly to how the side metaboxes ..."&gt;[29835]&lt;/a&gt; seems to break z-indexes when the menu wrap has a fixed position. Setting the z-index of the wrap to 9999 instead of the submenus seems to fix it, but I'm not sure what the cause is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 06 Oct 2014 01:23:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:19/1412558627355036</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29806#comment:18" title="Comment 18"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I find it way clearer and easier on the eyes with the &lt;code&gt;#f1f1f1&lt;/code&gt; background - having &lt;em&gt;some&lt;/em&gt; contrast makes it a lot easier to look at. And it also makes it easier to focus on the editable portions of the screen, which seems to be the primary goal here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. It's also less of a change form the "default", so the transition is less likely to annoy people.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 06 Oct 2014 00:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:18/1412556332205109</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29806#comment:16" title="Comment 16"&gt;nphaskins&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think there's enough of a break with the border around the editor to define the editable areas, with the overlay done in white. Just feels a bit more clean than the default #f1 remaining in place.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I find it way clearer and easier on the eyes with the &lt;code&gt;#f1f1f1&lt;/code&gt; background - having &lt;em&gt;some&lt;/em&gt; contrast makes it a lot easier to look at. And it also makes it easier to focus on the editable portions of the screen, which seems to be the primary goal here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28709 (Improve/introduce Customizer JS models for Controls, Sections, and Panels) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 06 Oct 2014 00:01:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28709#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28709#comment:9/1412553701252845</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28709/28709.wip.diff" title="Attachment '28709.wip.diff' in Ticket #28709"&gt;28709.wip.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28709/28709.wip.diff" title="Download"&gt;​&lt;/a&gt;, first stab at JS-driven panels, sections, and controls.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28709.wip.diff attached to Ticket #28709</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 06 Oct 2014 00:00:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28709/28709.wip.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28709/28709.wip.diff/1412553658110323</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/x-team/wordpress-develop/pull/29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/x-team/wordpress-develop/pull/29&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item>
   </channel>
</rss>