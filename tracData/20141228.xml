<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #30827 (wp_can_install_language_pack(): Direct access to ...) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 22:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30827#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30827#comment:2/1419805987081507</guid>
      <description>&lt;p&gt;
@ocean90 What are the steps to reproduce the notices? I want to test your patch but am having trouble getting PHP to throw a notice during language pack installation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30465 (Dashboard alert if a plugin was removed from WordPress plugins repo) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 22:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30465#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30465#comment:8/1419805121221595</guid>
      <description>&lt;p&gt;
Well even if this patch is a wash and never makes it into the core, at the very least it's starting a conversation that needs to take place. The way we handle notifications for outdated plugins, or lack of notifications, needs to change. I agree there are many reasons for a plugin being removed and assuming that its a security reason is not the best approach, but there should be at minimum a set of returned messages for a handful of reasons explaining why the plugin no longer is in the directory i.e. security, user removed, abandoned, etc. that would go a long way to making the UX much better. As well, I would be more than happy to rewrite this patch to use the API and strip out all the extra code that tries to detect plugin removal if we could agree on how the future implementation should work.
&lt;/p&gt;
&lt;p&gt;
@nacin How do we go about making changes to the procedures and policies that govern the Directory? Is this a good first step or do we need to discuss this somewhere else?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30856.diff attached to Ticket #30856</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Sun, 28 Dec 2014 21:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30856/30856.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30856/30856.diff/1419803251347723</guid>
      <description>&lt;p&gt;
Adds a str_replace in wptexturize to replace curly quotes with straight quotes in shortcodes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30856 (Automatically replace erroneous curly quotes with straight quotes in ...) created</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Sun, 28 Dec 2014 21:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30856/1419803041767200</guid>
      <description>&lt;p&gt;
A common error among users I found is that some shortcodes they include in posts contain curly quotes rather than straight quotes for attributes.
&lt;/p&gt;
&lt;p&gt;
An example of this that I just received this weekend from work:
[ione_social_wall id="544aa6d44b76c”]
&lt;/p&gt;
&lt;p&gt;
As you can see, the second quote is a curly quote and can be easily missed if you don't look at it carefully.
&lt;/p&gt;
&lt;p&gt;
I've included a diff for this. I placed the code in formatting.php in wptexturize. If there's a better place, let me know and I'll supply another diff.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30826 (Spaces sometimes disappear when pasting text into TinyMCE) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Dec 2014 21:36:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30826#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30826#comment:3/1419802588235885</guid>
      <description>&lt;p&gt;
This looks like Chrome bug. The number and position of the missing spaces depend on the text wrapping on the web page where the content is copied from. Perhaps worth it opening a &lt;a class="ext-link" href="https://code.google.com/p/chromium/issues/list"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Chromium bug report&lt;/a&gt; (needs reduced example).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30318 (WP 4.0 default_editor bug) updated</title>
      
        <dc:creator>wpxritter</dc:creator>

      <pubDate>Sun, 28 Dec 2014 21:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30318#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30318#comment:5/1419801850925585</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30318#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi wpxritter. If I understand you correctly, you're proposing to add a checkbox to the user settings that disables wpautop. Currently this can be done with a plugin and several plugins handle it in a slightly different way.
&lt;/p&gt;
&lt;p&gt;
Disabling wpautop() is not recommended for most users. This functionality has existed since the very beginning. Some parts of core and many plugins expect post_content to have double line breaks instead of &amp;lt;p&amp;gt; tags.
&lt;/p&gt;
&lt;p&gt;
In my opinion leaving this to plugins is the right thing to do.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
Hello azaozz :) thx for your answer!
&lt;/p&gt;
&lt;p&gt;
Yes, that would be nice, if there will be a checkbox in the settings.
I hope I understand you too, you won´t have this update on default settings..
I think the selection for developers to have an wpautop() or not would be very good
for a better handling.
&lt;/p&gt;
&lt;p&gt;
Why must this have only by the plugins? I googled so much people, which have my problem too.. I have asked shortly a german top level WPdesigner from Berlin and himself has no answer out of use the raw-plugin. For my example the TinyMCE-Plugin have the checkbox to stop wpauto but it don´t solve this Problem, it don´t run exactly!?
&lt;/p&gt;
&lt;p&gt;
Can you perhaps show me a good plugin by a link, which have this function?
Sorry my english pronunciation..
&lt;/p&gt;
&lt;p&gt;
with best greetings
wpxritter
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30463 (Adding second link to a text in Visual editor doesn't work within a table) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Dec 2014 21:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30463#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30463#comment:1/1419801406227524</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi Dumian, thanks for the bug report.
&lt;/p&gt;
&lt;p&gt;
I can reproduce it inconsistently and is somewhat browser dependent. Doesn't happen in IE. In Firefox and Chrome usually the first attempt fails, but the second attempt succeeds. Depends on what is selected when you try to select all text inside a &amp;lt;td&amp;gt;. If the &amp;lt;td&amp;gt; node is selected, you cannot wrap it in a link, if only text node(s) is/are selected, or &amp;lt;img&amp;gt;, &amp;lt;span&amp;gt;, etc. it works as expected.
&lt;/p&gt;
&lt;p&gt;
Seems we will have to look at the current selection in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/wplink.js#L265"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/wplink.js#L265&lt;/a&gt; in non-IE browsers.
&lt;/p&gt;
&lt;p&gt;
Currently cannot reproduce this for any other tags, so perhaps a fix is needed only for &amp;lt;td&amp;gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30855 (wp_get_update_data() calls are not pluggable) created</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Sun, 28 Dec 2014 21:06:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30855/1419800770935351</guid>
      <description>&lt;p&gt;
Up to 4.1 I was able to disable core, themes and plugin updates and related HTTP traffic.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/szepeviktor/wordpress-plugin-construction/blob/7b64d0ca4981b163b2f08adbe14a5b5238800bd8/mu-disable-updates/disable-updates.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/szepeviktor/wordpress-plugin-construction/blob/7b64d0ca4981b163b2f08adbe14a5b5238800bd8/mu-disable-updates/disable-updates.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In 4.1 new wp_get_update_data() calls are much like hardcoded than pluggable, I wasn't able to disable them all. Especially not the ones in wp-admin/menu.php
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-admin/menu.php#L33-L34"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-admin/menu.php#L33-L34&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-admin/menu.php#L183-L187"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-admin/menu.php#L183-L187&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Could you make wp_get_update_data() calls pluggable? Or give me an advise to disable them?
&lt;/p&gt;
&lt;p&gt;
My current workaround is to fiddle with the transients:
&lt;a class="ext-link" href="https://github.com/szepeviktor/wordpress-plugin-construction/blob/master/mu-disable-updates/disable-updates.php#L98"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/szepeviktor/wordpress-plugin-construction/blob/master/mu-disable-updates/disable-updates.php#L98&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30318 (WP 4.0 default_editor bug) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 28 Dec 2014 20:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30318#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30318#comment:4/1419800200710213</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30854 (`wp_insert_post` doesn't save revision for new published post) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 28 Dec 2014 19:57:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30854#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30854#comment:1/1419796632959004</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30318 (WP 4.0 default_editor bug) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Dec 2014 19:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30318#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30318#comment:3/1419796536831915</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi wpxritter. If I understand you correctly, you're proposing to add a checkbox to the user settings that disables wpautop. Currently this can be done with a plugin and several plugins handle it in a slightly different way.
&lt;/p&gt;
&lt;p&gt;
Disabling wpautop() is not recommended for most users. This functionality has existed since the very beginning. Some parts of core and many plugins expect post_content to have double line breaks instead of &amp;lt;p&amp;gt; tags.
&lt;/p&gt;
&lt;p&gt;
In my opinion leaving this to plugins is the right thing to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29974 (Focus handle at wrong place when you click reply) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 28 Dec 2014 18:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29974#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29974#comment:7/1419793011605306</guid>
      <description>&lt;p&gt;
I think I disagree with a change here. If there are accessibility reasons, I'm all ears, but in terms of usability, when you hit "Reply" the first thing you want to do is type your comment, not enter your name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30465 (Dashboard alert if a plugin was removed from WordPress plugins repo) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 28 Dec 2014 18:55:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30465#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30465#comment:7/1419792921764938</guid>
      <description>wontfix: &lt;p&gt;
We need to get a lot better about how we handle plugin removals. Most of the time, it &lt;em&gt;isn't&lt;/em&gt; for security. But users are still left in the cold simply because someone has decided to stop wanting to maintain it. I actually dislike this practice, and would rather see it be put into some kind of "abandoned and waiting to be adopted" mode. Perhaps preventing new downloads and notifying users, but not outright closing the page. Once you put it in the directory, you don't really have the option to make it seem like it never existed. Other app stores usually resolve this by allowing people to still access the app's page (and even install it on new devices) as long as you installed it via your account before it was removed.
&lt;/p&gt;
&lt;p&gt;
When it &lt;em&gt;is&lt;/em&gt; for security, well, we need to do better at this. But I'm not inclined to change anything in core without first establishing better .org procedures and policies. This is a much larger discussion and doesn't lend itself well to a bug report.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30465 (Dashboard alert if a plugin was removed from WordPress plugins repo) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Dec 2014 18:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30465#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30465#comment:6/1419791624264709</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30465#comment:5" title="Comment 5"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Also that "removed for x reason" should be shown on the Plugins screen, similarly to "update available" notices. Then if it is a security reason, perhaps show on the Dashboard (index.php) and possibly send email to the admin.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30465#comment:4" title="Comment 4"&gt;valendesigns&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Looking at 30465.diff: most of this would be handled on the API side. We will only need to add some UI to display these notices. Also &lt;code&gt;debug_backtrace()&lt;/code&gt; shouldn't be used in production (as the name suggests). It's very "heavy"/slow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29974 (Focus handle at wrong place when you click reply) reopened</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 28 Dec 2014 18:13:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29974#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29974#comment:6/1419790390225582</guid>
      <description>&lt;p&gt;
Thank you for testing davideugeneprat, however the worksforme status is for the ticket as a whole, not for the patch working.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #29974 (Focus handle at wrong place when you click reply) closed</title>
      
        <dc:creator>davideugenepratt</dc:creator>

      <pubDate>Sun, 28 Dec 2014 18:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29974#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29974#comment:5/1419789792501050</guid>
      <description>worksforme: &lt;p&gt;
I've tested this patch in IE, Firefox, and Chrome and it works as it should.
&lt;/p&gt;
&lt;p&gt;
Edit: Got it. Thanks Jorbin.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30854 (`wp_insert_post` doesn't save revision for new published post) created</title>
      
        <dc:creator>JamesDiGioia</dc:creator>

      <pubDate>Sun, 28 Dec 2014 16:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30854</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30854/1419784885180450</guid>
      <description>&lt;p&gt;
Calling &lt;code&gt;wp_insert_post&lt;/code&gt; with &lt;code&gt;post_status&lt;/code&gt; of &lt;code&gt;publish&lt;/code&gt; or any other status on a new post doesn't save a new revision.
&lt;/p&gt;
&lt;p&gt;
The reason for this is the &lt;code&gt;$update&lt;/code&gt; check at the beginning:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.1/src/wp-includes/post.php#L3085"&gt;https://core.trac.wordpress.org/browser/tags/4.1/src/wp-includes/post.php#L3085&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
checks whether or not the args include an ID, indicating that we're updating a post. Further down, that update check is what calls &lt;code&gt;post_updated&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.1/src/wp-includes/post.php#L3473"&gt;https://core.trac.wordpress.org/browser/tags/4.1/src/wp-includes/post.php#L3473&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
which &lt;code&gt;wp_save_post_revision&lt;/code&gt; is hooked to. Therefore, if we call &lt;code&gt;wp_insert_post&lt;/code&gt; in a plugin to insert a post with a&lt;code&gt;post_status&lt;/code&gt; of &lt;code&gt;publish&lt;/code&gt;, WordPress doesn't save a post revision.
&lt;/p&gt;
&lt;p&gt;
Post revisions are supposed to be up-to-date with the latest post data, but we don't get a revision if we insert a post in this manner. I think the reason we ended up with this is to avoid saving a revision of the auto-draft that is created when opening up post-new.php, but that isn't necessary now, as &lt;code&gt;wp_save_post_revision&lt;/code&gt; checks whether the &lt;code&gt;post_status&lt;/code&gt; is an auto-draft.
&lt;/p&gt;
&lt;p&gt;
I think the easiest solution is to move the &lt;code&gt;wp_save_post_revision&lt;/code&gt; to the &lt;code&gt;save_post&lt;/code&gt; hook, but I'm not sure if there are other places in the codebase this would cause issues.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30788 (Media library views: inconsistent behaviour with mime type groups) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Sun, 28 Dec 2014 16:13:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30788#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30788#comment:4/1419783198127757</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
So wp_match_mime_types() is not matching correctly, but some other code is?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Some other code??? Welcome to the wonderful world of WordPress media handling :-)
&lt;/p&gt;
&lt;p&gt;
I ran up fresh copies of WP3.5.2 and WP3.9.3 today and the problem still occurs in both of those releases, although at that time the mime type groups are just displayed in a simple list rather than a drop down on the Media Library screen.  Again the JavaScript code works correctly, as does the PHP if there is only a single MIME type in the group.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17725 (wp_convert_hr_to_bytes() fails on large numeric values) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 28 Dec 2014 15:27:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17725#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17725#comment:9/1419780435996997</guid>
      <description>wontfix: &lt;p&gt;
The logic in the new patch is also var too obtuse (and fragile).
&lt;/p&gt;
&lt;p&gt;
Hypothetically, this function should indeed work for any human-readable size value, based on what it is named and currently documented. This works fine for values using "K", "KB", or "KiB" etc. It should hypothetically be able to convert a 500GB hard drive to bytes. But in practice, if this fails on a 32-bit system, I don't really care.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30579 (wp_enqueue_style in footer) updated</title>
      
        <dc:creator>kevdotbadger</dc:creator>

      <pubDate>Sun, 28 Dec 2014 14:31:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30579#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30579#comment:11/1419777106011226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17725 (wp_convert_hr_to_bytes() fails on large numeric values) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sun, 28 Dec 2014 11:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17725#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17725#comment:8/1419765616708732</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://php.net/manual/en/ini.core.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/ini.core.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This even specifies a signed integer limit on post_max_size &amp;gt; upload_max_filesize, both of which are directly referenced in wp_max_upload_size().
&lt;/p&gt;
&lt;p&gt;
The description, "It shows that the last byte is missing," is invalid considering PHP will limit the post payload to 2GB - 1 in that situation.
&lt;/p&gt;
&lt;p&gt;
I vote wontfix.  However, it might be helpful to update the docs to indicate this function is specifically tied to the INI syntax and corresponding limitations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17725 (wp_convert_hr_to_bytes() fails on large numeric values) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sun, 28 Dec 2014 11:05:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17725#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17725#comment:7/1419764705811965</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would be curious if 32-bit servers are even capable of receiving uploads larger than 2 GB.  This strikes me as a very trivial issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30465 (Dashboard alert if a plugin was removed from WordPress plugins repo) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 28 Dec 2014 10:40:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30465#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30465#comment:5/1419763234454293</guid>
      <description>&lt;p&gt;
Worth noting here, that we'd probably add a "removed for x" line to the plugins update-check API response here if we were to go ahead with this.
&lt;/p&gt;
&lt;p&gt;
Realistically, plugins get disabled/removed for a variety of reasons, becoming unlisted in the plugin directory doesn't simply signify security issue / insecure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30853 (adding a file containing ' in media manager causes an http error) updated</title>
      
        <dc:creator>Albator57</dc:creator>

      <pubDate>Sun, 28 Dec 2014 10:22:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30853#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30853#comment:2/1419762146849290</guid>
      <description>&lt;p&gt;
Yes, I just desactivated all the plugins and choosed fifteen theme, same error. You can try on &lt;a class="ext-link" href="http://www.goall.fr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.goall.fr&lt;/a&gt; by posting an article.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30853 (adding a file containing ' in media manager causes an http error) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 10:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30853#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30853#comment:1/1419761510423470</guid>
      <description>&lt;p&gt;
I was able to upload your file into WordPress without any issues. Did you test with one of the default themes and all plugins deactivated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30465 (Dashboard alert if a plugin was removed from WordPress plugins repo) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 10:03:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30465#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30465#comment:4/1419761031335597</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This patch requests data from the Plugins API about the active plugins and then save the ones that exist to the &lt;code&gt;found&lt;/code&gt; array in the &lt;code&gt;directory_plugins&lt;/code&gt; option. When a plugin is removed it will be added to the &lt;code&gt;removed&lt;/code&gt; array, in &lt;code&gt;directory_plugins&lt;/code&gt; option, so the nag can be displayed. However, it will only show when the plugin is active. Any feedback from the core devs would be much appreciated.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Derek
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30465.diff attached to Ticket #30465</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 09:52:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30465/30465.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30465/30465.diff/1419760348677921</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Conference d'hommage à Foucault du 24 octobre 2014.pdf attached to Ticket #30853</title>
      
        <dc:creator>Albator57</dc:creator>

      <pubDate>Sun, 28 Dec 2014 09:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30853/Conference%20d'hommage%20%C3%A0%20Foucault%20du%2024%20octobre%202014.pdf</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30853/Conference%20d'hommage%20%C3%A0%20Foucault%20du%2024%20octobre%202014.pdf/1419759787324421</guid>
      <description>&lt;p&gt;
File that I can't add with the media manager
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30853 (adding a file containing ' in media manager causes an http error) created</title>
      
        <dc:creator>Albator57</dc:creator>

      <pubDate>Sun, 28 Dec 2014 09:42:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30853/1419759752307004</guid>
      <description>&lt;p&gt;
When I want to add a file containing a ' with the media manager, I get "http error".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30465 (Dashboard alert if a plugin was removed from WordPress plugins repo) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 05:46:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30465#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30465#comment:3/1419745596284941</guid>
      <description>&lt;p&gt;
The hardest part would be deciding on how to tell if the plugin was ever in the repository once it's been removed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30812 (Remove unnecessary spaces of `ms_cookie_constants()`) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Dec 2014 05:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30812#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30812#comment:1/1419743848042580</guid>
      <description>wontfix: &lt;p&gt;
Please note that formatting cleanup tickets are generally discouraged. Coding style fixes should be a result of more substantial changes to reduce undue churn in the codebase: &lt;a class="ext-link" href="https://make.wordpress.org/core/2011/03/23/code-refactoring/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2011/03/23/code-refactoring/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30413 (WordPress Media View – Library autoSelect option fails to display new ...) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:59:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30413#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30413#comment:4/1419742784767760</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@NullLogic where is that code example coming from? It isn't in the Core. Please expand on how to go about reproducing this issue.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Derek
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30472 (get_terms_to_edit() can return a WP_Error, but used as a string) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30472#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30472#comment:2/1419742092971650</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This patch should stop fatal PHP errors from being thrown when the value of &lt;code&gt;get_terms_to_edit()&lt;/code&gt; is a &lt;code&gt;WP_Error&lt;/code&gt; or &lt;code&gt;boolean&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@dd32 could you please provide some information on how you caused the error in the first place so I can properly test the patch and also write unit tests if needed.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Derek
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30838 (Internal server error during wordpress import) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30838#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30838#comment:2/1419741787354098</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you check your server's error logs to see what the error message is?
&lt;/p&gt;
&lt;p&gt;
I suspect that your server is timing out or running out of memory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30472.diff attached to Ticket #30472</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:39:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30472/30472.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30472/30472.diff/1419741566527734</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #19373,​30389 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:36:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=19373%2C30389</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=19373%2C30389/1419741407930667</guid>
      <description>duplicate: &lt;p&gt;
Replying to collinsinternet:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While I was able to duplicate your issue with your code, I do not feel that this is a WP Core issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is definitely a core issue.
&lt;/p&gt;
&lt;p&gt;
This is a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/19373" title="#19373: enhancement: wp_insert_post() should not contain current_user_can() checks (new)"&gt;#19373&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In addition, the tests added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1174/tests" title="Unit tests for wp_publish_post(). Ensure that:
 * A future-dated post ..."&gt;[1174/tests]&lt;/a&gt; aren't adequate because the current user object is present, unlike when scheduled posts are published via WP-Cron.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17725 (wp_convert_hr_to_bytes() fails on large numeric values) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17725#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17725#comment:6/1419740633105297</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30767 (Non-repo plugins with updates available not listed on updates screen) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30767#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30767#comment:3/1419740160543093</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Possible culprit: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30696" title="Ensure the theme and plugin update checks are always in sync with the ..."&gt;[30696]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30351 (Input field with HTML tag as default value) closed</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30351#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30351#comment:6/1419740123192457</guid>
      <description>worksforme: &lt;p&gt;
I was able to create a widget that works correctly by building off the example code from &lt;a class="ext-link" href="http://codex.wordpress.org/Widgets_API"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Widgets_API&lt;/a&gt;. As well, I sanitized &lt;code&gt;message&lt;/code&gt;, because the way you had it would allow unwanted code injections.
&lt;/p&gt;
&lt;p&gt;
I believe the underlying issue was the way you wrote your &lt;code&gt;form&lt;/code&gt; method which does not allow the default value to be saved, because the value of &lt;code&gt;message&lt;/code&gt; was always an empty string. I didn't want to take too much time hunting down the exact reason when there is an obvious solution, but it has something to do with &lt;code&gt;wp_parse_args&lt;/code&gt; and the order of your arrays. If you change it to use &lt;code&gt;$instance = wp_parse_args( $defaults, $instance );&lt;/code&gt; or &lt;code&gt;$instance = array_merge( $instance, $defaults );&lt;/code&gt; everything works. However, the first fix feels wrong, and the second fix will work, but there are other ways to accomplish your goals.
&lt;/p&gt;
&lt;p&gt;
I don't believe this is an issue with the Core as much as how the code is written to save/display the form values.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Derek
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29839 (Enhance get_terms to return only bottom child terms (terms without ...) updated</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:05:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29839#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29839#comment:60/1419739523884472</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29839#comment:58" title="Comment 58"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the &lt;code&gt;foreach&lt;/code&gt; loop in the patch can be replaced with something simpler, like this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$terms_to_exclude = implode( ', ', array_map( 'absint', array_keys( $term_hierarchy ) ) );&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This seems neither simpler nor clearer to me. Is there a performance issue with how it was done in the submitted patch?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Finally, I'm not entirely convinced this argument is very useful. It can be manually implemented with minimal code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$terms = get_terms( $taxonomy, array(
  'exclude' =&amp;gt; array_keys( _get_term_hierarchy( $taxonomy ) )
) );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;_get_term_hierarchy&lt;/code&gt; is marked as a private function. Doesn't that mean it shouldn't be used in userland?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30852 (Incorrect docs for `user_has_cap` filter) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Dec 2014 04:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30852#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30852#comment:1/1419739430182349</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The &lt;code&gt;allcaps&lt;/code&gt; property of the &lt;code&gt;WP_User&lt;/code&gt; class does indeed represent all of the caps of the user, not the caps of the user's role. Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26126" title="Inline documentation for hooks in wp-includes/capabilities.php.
props ..."&gt;r26126&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29839 (Enhance get_terms to return only bottom child terms (terms without ...) updated</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Sun, 28 Dec 2014 03:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29839#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29839#comment:59/1419739027955153</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29839#comment:58" title="Comment 58"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This will need unit tests.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The unit tests are attached to this ticket already. The most recent attachment that covers the unit tests is 20141116_05-getTerms.diff. Did you mean something else?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29839 (Enhance get_terms to return only bottom child terms (terms without ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Dec 2014 03:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29839#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29839#comment:58/1419738827941997</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This will need unit tests.
&lt;/p&gt;
&lt;p&gt;
Also, the &lt;code&gt;foreach&lt;/code&gt; loop in the patch can be replaced with something simpler, like this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$terms_to_exclude = implode( ', ', array_map( 'absint', array_keys( $term_hierarchy ) ) );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, I'm not entirely convinced this argument is very useful. It can be manually implemented with minimal code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$terms = get_terms( $taxonomy, array(
  'exclude' =&amp;gt; array_keys( _get_term_hierarchy( $taxonomy ) )
) );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>foo_widget.php attached to Ticket #30351</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 03:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30351/foo_widget.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30351/foo_widget.php/1419737116256849</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>30852.patch attached to Ticket #30852</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 28 Dec 2014 03:23:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30852/30852.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30852/30852.patch/1419737000522766</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30852 (Incorrect docs for `user_has_cap` filter) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 28 Dec 2014 03:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30852</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30852/1419736941023640</guid>
      <description>&lt;p&gt;
The &lt;code&gt;WP_User::allcaps&lt;/code&gt; property is "all capabilities the user has, including individual and role based," but the &lt;code&gt;$allcaps&lt;/code&gt; parameter in the "user_has_cap" filter is documented as a role's capabilities. This patch updates the filter to match.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30851 (Incorrect docs for `$taxonomies` in `get_terms()` filters) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 28 Dec 2014 01:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30851#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30851#comment:2/1419731029422371</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30994" title="Correct $taxonomies parameter description in get_terms() filters.
 ..."&gt;30994&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Correct $taxonomies parameter description in get_terms() filters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props dlh.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30851" title="#30851: defect (bug): Incorrect docs for `$taxonomies` in `get_terms()` filters (closed: fixed)"&gt;#30851&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [30994]: Correct $taxonomies parameter description in get_terms() filters.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 28 Dec 2014 01:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/30994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/30994/1419731027477337</guid>
      <description>&lt;p&gt;
Correct $taxonomies parameter description in get_terms() filters.
&lt;/p&gt;
&lt;p&gt;
props dlh.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30851" title="#30851: defect (bug): Incorrect docs for `$taxonomies` in `get_terms()` filters (closed: fixed)"&gt;#30851&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #30851 (Incorrect docs for `$taxonomies` in `get_terms()` filters) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 28 Dec 2014 01:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30851#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30851#comment:1/1419730896409114</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>30851.patch attached to Ticket #30851</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 28 Dec 2014 01:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30851/30851.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30851/30851.patch/1419730141757740</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30851 (Incorrect docs for `$taxonomies` in `get_terms()` filters) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 28 Dec 2014 01:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30851</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30851/1419729949824473</guid>
      <description>&lt;p&gt;
The &lt;code&gt;$taxonomies&lt;/code&gt; parameter is documented as &lt;code&gt;string|array&lt;/code&gt;, but it's always an array.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27776 (WordPress API timeouts should be cached to avoid slowing down the admin) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 01:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27776#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27776#comment:5/1419729090214210</guid>
      <description>&lt;p&gt;
I think caching for an entire day could be overkill, since the problem could be intermittent and not last 24 hours. Something along the lines of 30 minutes seems reasonable enough to free up resources and still be actively looking for an API connection.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30556 (Modern widgets default wrapper) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 00:30:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30556#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30556#comment:13/1419726654978600</guid>
      <description>&lt;p&gt;
I've added a simpler and more backwards compatible patch to address this tickets concerns and move it forward.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Derek
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30556.1.diff attached to Ticket #30556</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sun, 28 Dec 2014 00:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30556/30556.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30556/30556.1.diff/1419726305676172</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30850 (Audio/video previews for media controls in the Customizer) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 28 Dec 2014 00:06:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30850/1419725177068759</guid>
      <description>&lt;p&gt;
These were mostly in place but missing whatever's needed to trigger MediaElement.js, so they got pulled in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30712" title="Customizer: Enhance Background Image/Upload controls.
* Adopt the ..."&gt;[30712]&lt;/a&gt;. Turns out we just need to do something along the lines of &lt;code&gt;control.container.find('audio,video').mediaelementplayer(_wpmejsSettings );&lt;/code&gt; after rendering it from the JS template.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26577 (Unable to compare post with single revision) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 27 Dec 2014 23:31:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26577#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26577#comment:4/1419723069566644</guid>
      <description>wontfix: &lt;p&gt;
With only one revision, the stored post content matches the stored revision; linking to the revisions screen would be useless as far as I can tell.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21645 (Documentation for "Rewrite API" and flush_rules) updated</title>
      
        <dc:creator>here</dc:creator>

      <pubDate>Sat, 27 Dec 2014 21:35:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21645#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21645#comment:7/1419716119878546</guid>
      <description>&lt;p&gt;
Sounds good, I will followup.  Feel free to close after 2015-01-01 if no further action.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29853 (Introduce parity to 'taxonomy_parent_dropdown_args' filter.) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sat, 27 Dec 2014 19:21:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29853#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29853#comment:8/1419708096344259</guid>
      <description>&lt;p&gt;
boonebgorges do you think this can go into 4.2?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30846 (Custom query using tag__in sets query_var tag_id) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 27 Dec 2014 19:16:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30846#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30846#comment:5/1419707819415654</guid>
      <description>&lt;p&gt;
philbirnie - Aha, thanks for the update. This is the same problem (and solution) as what I described here: &lt;a href="https://core.trac.wordpress.org/ticket/27193#comment:10"&gt;https://core.trac.wordpress.org/ticket/27193#comment:10&lt;/a&gt; In short, when you set up a new &lt;code&gt;WP_Query&lt;/code&gt; object, the &lt;code&gt;get_posts()&lt;/code&gt; method is automatically called internally during the setup process. Invoking that method again can cause the kinds of query_var stomping that you've described here. We ought to have better documentation of this behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23314 (Allow published posts to be revised without being updated immediately) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 27 Dec 2014 18:57:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23314#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23314#comment:18/1419706652820463</guid>
      <description>&lt;p&gt;
Refreshed 23314.2.diff against trunk in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23314/23314.3.diff" title="Attachment '23314.3.diff' in Ticket #23314"&gt;23314.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23314/23314.3.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23314.3.diff attached to Ticket #23314</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 27 Dec 2014 18:54:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23314/23314.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23314/23314.3.diff/1419706486758868</guid>
      <description>&lt;p&gt;
refresh against trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>unittest-updated.28026.diff attached to Ticket #28026</title>
      
        <dc:creator>lektro</dc:creator>

      <pubDate>Sat, 27 Dec 2014 18:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28026/unittest-updated.28026.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28026/unittest-updated.28026.diff/1419703984213940</guid>
      <description>&lt;p&gt;
Updated unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sat, 27 Dec 2014 18:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:50/1419703927960219</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sat, 27 Dec 2014 18:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:49/1419703887407401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>refresh.28026.diff attached to Ticket #28026</title>
      
        <dc:creator>lektro</dc:creator>

      <pubDate>Sat, 27 Dec 2014 18:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28026/refresh.28026.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28026/refresh.28026.diff/1419703303445546</guid>
      <description>&lt;p&gt;
Refresh of initial patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>unittest.28026.diff attached to Ticket #28026</title>
      
        <dc:creator>lektro</dc:creator>

      <pubDate>Sat, 27 Dec 2014 17:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28026/unittest.28026.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28026/unittest.28026.diff/1419703145846801</guid>
      <description>&lt;p&gt;
Unit Test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15058 (Validate option and transient name lengths) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Sat, 27 Dec 2014 16:26:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15058#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15058#comment:41/1419697575611482</guid>
      <description>&lt;p&gt;
I've proposed a schema change and attached a patch over at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13310" title="#13310: enhancement: Extend option_name to varchar(255) (closed: fixed)"&gt;#13310&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30849 (rearrangement and limitations in the vertical list in wp-admin) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 27 Dec 2014 16:09:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30849#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30849#comment:1/1419696586349456</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30679 (Clicking "Restore this Revision" publishes immediately) updated</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Sat, 27 Dec 2014 14:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30679#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30679#comment:7/1419692177945294</guid>
      <description>&lt;p&gt;
You're right. Whatever the case scenario is (working on incremental changes or restore a previous version), both actions should be available.
&lt;/p&gt;
&lt;p&gt;
Like pointed, this ticket is related to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27244" title="#27244: defect (bug): 'Restore This Autosave' immediately updates a published post (new)"&gt;27244&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23314" title="#23314: enhancement: Allow published posts to be revised without being updated immediately (new)"&gt;23314&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The current "Restore this revision" will update current published post with revision content and redirect to the edit screen with a message "{Post} restored and published".
&lt;/p&gt;
&lt;p&gt;
The "Edit this revision" points to the edit screen with the revision content loaded. The difference here might be how the "publish" metabox will behave: display a "publish" or "update" button ?! Then this becomes related to this ticket I suppose: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23352" title="#23352: enhancement: Revision changes on post edit screen - add revision count and link to ... (closed: wontfix)"&gt;23352&lt;/a&gt; and this post: &lt;a class="ext-link" href="https://make.wordpress.org/core/2013/01/29/editorial-flow-office-hours-today-tuesday-at-1800/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2013/01/29/editorial-flow-office-hours-today-tuesday-at-1800/&lt;/a&gt; Working on a unified publish/revision metabox ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30845.patch attached to Ticket #30845</title>
      
        <dc:creator>luciole135</dc:creator>

      <pubDate>Sat, 27 Dec 2014 13:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30845/30845.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30845/30845.patch/1419686325692399</guid>
      <description>&lt;p&gt;
number of weeks in a given year
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>13310-420.patch attached to Ticket #13310</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Sat, 27 Dec 2014 09:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13310/13310-420.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13310/13310-420.patch/1419672021744385</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13310 (Extend option_name to varchar(255)) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Sat, 27 Dec 2014 09:19:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13310#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13310#comment:47/1419671988145368</guid>
      <description>&lt;p&gt;
In hopes of getting this resolved for 4.2, I am attaching a full patch (against trunk) which covers both schema change for new installations as well as schema update for existing installations. I have tested this on multiple sites without any issues. Feedback welcome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30846 (Custom query using tag__in sets query_var tag_id) closed</title>
      
        <dc:creator>philbirnie</dc:creator>

      <pubDate>Sat, 27 Dec 2014 04:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30846#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30846#comment:4/1419654845551347</guid>
      <description>invalid: &lt;p&gt;
Thanks for the unit test - I'll use that in the future. I figured it out.
&lt;/p&gt;
&lt;p&gt;
I was attempting to run &lt;code&gt;$query-&amp;gt;get_posts()&lt;/code&gt; after instantiating the query.  This was what was causing the extra 'AND' in the MySQL query mentioned in my previous remarks.
&lt;/p&gt;
&lt;p&gt;
I assumed that &lt;code&gt;$query-&amp;gt;get_posts&lt;/code&gt; would &lt;em&gt;not&lt;/em&gt; modify the query when run after instantiation, but that doesn't seem to be the case.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>demo-page.php attached to Ticket #30846</title>
      
        <dc:creator>philbirnie</dc:creator>

      <pubDate>Sat, 27 Dec 2014 03:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30846/demo-page.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30846/demo-page.php/1419651696538668</guid>
      <description>&lt;p&gt;
Demo page template containing query with tag&lt;span class="underline"&gt;in.
&lt;/span&gt;&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30846 (Custom query using tag__in sets query_var tag_id) updated</title>
      
        <dc:creator>philbirnie</dc:creator>

      <pubDate>Sat, 27 Dec 2014 03:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30846#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30846#comment:3/1419651454628222</guid>
      <description>&lt;p&gt;
boonebgorges - Thank you very much for the reply and unit test.  It is possible that I'm doing something out of context and that could be causing the issue.  If so, I'm sorry in advance for wasting everyone's time!
&lt;/p&gt;
&lt;h3 id="Setup"&gt;Setup&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;This is a completely clean install with no additional plugins.  I am using theme Twenty Fifteen.
&lt;/li&gt;&lt;li&gt;I placed the custom query outlined above on a custom page template; again, so I could isolate the problem.   I have attached that file for reference.  I created a new page that uses this template and loaded the page.
&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="UnitTest"&gt;Unit Test&lt;/h3&gt;
&lt;p&gt;
Thank you for the unit test - it looks like the first assertion in the unit test should cover the issue that I'm seeing because the first tag does not contain any posts.  I will install the test suite and verify that the test passes.
&lt;/p&gt;
&lt;h3 id="QueryIssue"&gt;Query Issue&lt;/h3&gt;
&lt;p&gt;
It does indeed appear that the &lt;code&gt;term_id&lt;/code&gt; (by way of &lt;code&gt;term_taxonomy_id&lt;/code&gt;) is getting added to the query, assuming that &lt;code&gt;$query-&amp;gt;request&lt;/code&gt; is the actual request that fetches the posts.   Below is an echo of &lt;code&gt;$query-&amp;gt;request&lt;/code&gt;.  You'll notice that &lt;code&gt;wp_term_relationships.term_taxonomy_id IN (5)&lt;/code&gt; is added - and because there are no posts associated with &lt;code&gt;term_taxonomy_id&lt;/code&gt; 5, this results in an empty set.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If I remove this from the query (and the subsequent &lt;code&gt;AND&lt;/code&gt; of course), I get the results I would expect -- all posts associated with 3, 4 and 5.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS  wp_posts.ID FROM wp_posts  INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id)  INNER JOIN wp_term_relationships AS tt1 ON (wp_posts.ID = tt1.object_id) WHERE 1=1  AND (
  wp_term_relationships.term_taxonomy_id IN (5)
  AND
  tt1.term_taxonomy_id IN (3,4,5)
) AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10
&lt;/pre&gt;&lt;p&gt;
I will report back after completing the testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29839 (Enhance get_terms to return only bottom child terms (terms without ...) updated</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Sat, 27 Dec 2014 03:22:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29839#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29839#comment:57/1419650536977688</guid>
      <description>&lt;p&gt;
I'm unfamiliar with the process of what happens now, or what the status is of this one. Do I need to do anything to get this into 4.2?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 27 Dec 2014 02:41:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:48/1419648103984884</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by eric. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1419648101003666"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sat, 27 Dec 2014 02:41:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:47/1419648069216934</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/6481/6481.3.diff" title="Attachment '6481.3.diff' in Ticket #6481"&gt;attachment:6481.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/6481/6481.3.diff" title="Download"&gt;​&lt;/a&gt;, I iterated on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/6481/wp-admin_includes_upgrade.php.diff" title="Attachment 'wp-admin_includes_upgrade.php.diff' in Ticket #6481"&gt;attachment:wp-admin_includes_upgrade.php.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/6481/wp-admin_includes_upgrade.php.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I believe pluggable functions are considered an anti-pattern at this point (correct me if I'm wrong) because of the headache in backwards compatibility they proffer, and if we want to offer flexibility in our API we can do it in more forward-thinking ways (e.g. hooks API).
&lt;/li&gt;&lt;li&gt;Instead of setting the permalink structure here, let's set it at the options defaults, which delightfully brings together a fork of functionality between multisite and single site.
&lt;/li&gt;&lt;li&gt;For now, keep this smoke testing separate from multisite. Preferably single and multi share this functionality, but for reasons I haven't dug into yet, the smoke test failed for a fresh multisite.
&lt;/li&gt;&lt;li&gt;General code clean-up - &lt;code&gt;wp_install_verify_permalink_structure()&lt;/code&gt; is a single-responsibility function to smoke test the "Hello World" HTTP response code, use &lt;code&gt;wp_remote_head()&lt;/code&gt; instead of &lt;code&gt;wp_remote_request&lt;/code&gt;, etc.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>6481.3.diff attached to Ticket #6481</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sat, 27 Dec 2014 02:34:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/6481/6481.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/6481/6481.3.diff/1419647671986708</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30843 (get_ancestors filter: Parameter is missing) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 27 Dec 2014 01:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30843#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30843#comment:9/1419643939206894</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Actually, it's not just a bit of documentation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, the documentation was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30141" title="Allow resource_type to be specified in `get_ancestors()`.
Being ..."&gt;[30141]&lt;/a&gt;. But there is no regression in the code, because the filter here appears exactly as it did in 4.0. That being said, it was definitely a mistake not to have fixed the filter, so a point release fix is fine with me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30679 (Clicking "Restore this Revision" publishes immediately) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 27 Dec 2014 00:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30679#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30679#comment:6/1419640413764531</guid>
      <description>&lt;p&gt;
'Restore this Revision' is actually pretty safe, you can always restore the previous revision to undo the restore action!
&lt;/p&gt;
&lt;p&gt;
I think &lt;strong&gt;&lt;em&gt;restoring is the primary action&lt;/em&gt;&lt;/strong&gt; people want to take when visiting the revisions screen (many people head there to undo a published mistake), and the diff view shows the changes, helping the user pick the correct revision to restore (although I'd prefer a preview or customizer integration).
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30679#comment:5" title="Comment 5"&gt;jlambe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
'Edit this revision' sounds better and clear. But as how this should be shown visually I do not know. For me, the 'Edit this revision' button should get the style of a primary button and the actual button could align on the left but only simple text (maybe underlined) in order to show it as secondary action.
&lt;/p&gt;
&lt;p&gt;
The fact that 'Edit this revision' becomes visually the primary button gives the user the "safety" of not publishing its revision and allows him to perhaps edit it before publishing. But we don't forget confident users which want to publish immediately the revision by providing the actual button but less present visually.
&lt;/p&gt;
&lt;p&gt;
Not sure if my explanations are clear :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30679#comment:4" title="Comment 4"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe an 'Edit this Revision' button next to 'Restore this Revision'?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30679#comment:3" title="Comment 3"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Julien,
&lt;/p&gt;
&lt;p&gt;
Thanks for your offer of help!
&lt;/p&gt;
&lt;p&gt;
I agree, this would be a great feature to have. &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23314" title="#23314: enhancement: Allow published posts to be revised without being updated immediately (new)"&gt;#23314&lt;/a&gt; is very close to this ticket, almost a duplicate? A good fix would solve both cases.
&lt;/p&gt;
&lt;p&gt;
There are actually several related tickets, including &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23314" title="#23314: enhancement: Allow published posts to be revised without being updated immediately (new)"&gt;#23314&lt;/a&gt; and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20299" title="#20299: defect (bug): Preview changes on a published post makes all post meta &amp;#34;live&amp;#34; (assigned)"&gt;#20299&lt;/a&gt; - all these tickets would benefit from something missing from core - the revisioning of post meta (see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20564" title="#20564: enhancement: Framework for storing revisions of Post Meta (assigned)"&gt;#20564&lt;/a&gt;) - without that feature, the data stored for each revision is limited to the primary editor fields (title, content, excerpt, etc.). We got the hooks needed for this feature into 4.1, leveraged by the plugin linked from the ticket.
&lt;/p&gt;
&lt;p&gt;
If the button were to restore the content only to the editor and not publish the restored revision, how would you change the button text to indicate that action? 'Restore revision data to editor' ? (thats a mouthful!)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30679#comment:2" title="Comment 2"&gt;jlambe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This could be a great feature. I'm having a situation where I need to maintain documentation pages (saved as WordPress pages post type). One revision is published but now we need to update its content with new features for example.
&lt;/p&gt;
&lt;p&gt;
So start typing and adding new lines in the editor of the current published revision. What would be great is a "Save as a revision" kind of button which will save the new changes but without publishing them. Then allow a user to logout and come back anytime edit the revision and when everything seems good, have the choice to publish it.
&lt;/p&gt;
&lt;p&gt;
Like @paulshriber explains, it's not clear what the "Restore this revision" button is doing. As a end-user, I expected it to load its content inside the editor, allow me to edit it and perhaps publish it immediately right after.
&lt;/p&gt;
&lt;p&gt;
Really looking into this feature and I can help too ;)
&lt;/p&gt;
&lt;p&gt;
Was looking at older tickets for this component and it looks like this could be related with this ticket: &lt;a href="https://core.trac.wordpress.org/ticket/23314"&gt;https://core.trac.wordpress.org/ticket/23314&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30843 (get_ancestors filter: Parameter is missing) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 27 Dec 2014 00:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30843#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30843#comment:8/1419640244414260</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30843#comment:6" title="Comment 6"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30993" title="Pass `$resource_type` to 'get_ancestors' filter.
The `$resource_type` ..."&gt;[30993]&lt;/a&gt; missed the ticket. It fixes the issue for trunk.
&lt;/p&gt;
&lt;p&gt;
While DrewAPicture is correct that this was an error in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30141" title="Allow resource_type to be specified in `get_ancestors()`.
Being ..."&gt;[30141]&lt;/a&gt;, I'm unsure whether this should count as a regression that needs to go in 4.1.1, since technically the only thing currently "broken" is a bit of incorrect inline documentation. I'll mark the ticket fixed-major and let the leads decide.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, it's not just a bit of documentation. The parameter doc was added in the original &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30141" title="Allow resource_type to be specified in `get_ancestors()`.
Being ..."&gt;[30141]&lt;/a&gt; commit. The only reason I marked this 4.1.1 was because the variable was never added, which would, imo, constitute a bug worth fixing in a point release :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30849 (rearrangement and limitations in the vertical list in wp-admin) created</title>
      
        <dc:creator>Kniebremser</dc:creator>

      <pubDate>Sat, 27 Dec 2014 00:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30849</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30849/1419639916608963</guid>
      <description>&lt;p&gt;
Hi Girls and Boys from Wordpress!
&lt;/p&gt;
&lt;p&gt;
Can rearrangement and limitations in the vertical list introduced in wp-admin backend?
The list is getting longer !!!
It is wonderful that there is always new and better plugins are developed by developers. But forgetting the developers often expressing the value of the plugin. There are plugins that embed themselves in the vertical list, although I do once the settings and it's good. Important plugins that I use daily are partly in the list below.
With a 21 "monitor, it is still in order. But with a tablet or smartphone it sucks enormous.
I know there are plugins that you can manage the list. But there must be a fundamental structure in which all have to keep !!!
&lt;/p&gt;
&lt;p&gt;
This has a touch of "anarchy" for me. Each developer can put its plugin to where he wants it, even though it has no place there normally.
&lt;/p&gt;
&lt;p&gt;
That would be an idea for a featured plugin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30679 (Clicking "Restore this Revision" publishes immediately) updated</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Sat, 27 Dec 2014 00:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30679#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30679#comment:5/1419639234364095</guid>
      <description>&lt;p&gt;
'Edit this revision' sounds better and clear. But as how this should be shown visually I do not know. For me, the 'Edit this revision' button should get the style of a primary button and the actual button could align on the left but only simple text (maybe underlined) in order to show it as secondary action.
&lt;/p&gt;
&lt;p&gt;
The fact that 'Edit this revision' becomes visually the primary button gives the user the "safety" of not publishing its revision and allows him to perhaps edit it before publishing. But we don't forget confident users which want to publish immediately the revision by providing the actual button but less present visually.
&lt;/p&gt;
&lt;p&gt;
Not sure if my explanations are clear :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30679#comment:4" title="Comment 4"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe an 'Edit this Revision' button next to 'Restore this Revision'?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30679#comment:3" title="Comment 3"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Julien,
&lt;/p&gt;
&lt;p&gt;
Thanks for your offer of help!
&lt;/p&gt;
&lt;p&gt;
I agree, this would be a great feature to have. &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23314" title="#23314: enhancement: Allow published posts to be revised without being updated immediately (new)"&gt;#23314&lt;/a&gt; is very close to this ticket, almost a duplicate? A good fix would solve both cases.
&lt;/p&gt;
&lt;p&gt;
There are actually several related tickets, including &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23314" title="#23314: enhancement: Allow published posts to be revised without being updated immediately (new)"&gt;#23314&lt;/a&gt; and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20299" title="#20299: defect (bug): Preview changes on a published post makes all post meta &amp;#34;live&amp;#34; (assigned)"&gt;#20299&lt;/a&gt; - all these tickets would benefit from something missing from core - the revisioning of post meta (see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20564" title="#20564: enhancement: Framework for storing revisions of Post Meta (assigned)"&gt;#20564&lt;/a&gt;) - without that feature, the data stored for each revision is limited to the primary editor fields (title, content, excerpt, etc.). We got the hooks needed for this feature into 4.1, leveraged by the plugin linked from the ticket.
&lt;/p&gt;
&lt;p&gt;
If the button were to restore the content only to the editor and not publish the restored revision, how would you change the button text to indicate that action? 'Restore revision data to editor' ? (thats a mouthful!)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30679#comment:2" title="Comment 2"&gt;jlambe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This could be a great feature. I'm having a situation where I need to maintain documentation pages (saved as WordPress pages post type). One revision is published but now we need to update its content with new features for example.
&lt;/p&gt;
&lt;p&gt;
So start typing and adding new lines in the editor of the current published revision. What would be great is a "Save as a revision" kind of button which will save the new changes but without publishing them. Then allow a user to logout and come back anytime edit the revision and when everything seems good, have the choice to publish it.
&lt;/p&gt;
&lt;p&gt;
Like @paulshriber explains, it's not clear what the "Restore this revision" button is doing. As a end-user, I expected it to load its content inside the editor, allow me to edit it and perhaps publish it immediately right after.
&lt;/p&gt;
&lt;p&gt;
Really looking into this feature and I can help too ;)
&lt;/p&gt;
&lt;p&gt;
Was looking at older tickets for this component and it looks like this could be related with this ticket: &lt;a href="https://core.trac.wordpress.org/ticket/23314"&gt;https://core.trac.wordpress.org/ticket/23314&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>