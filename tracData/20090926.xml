<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 23:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:10/1254008870000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 10861_wp-dependencies.patch added
WP_Dependencies was full of logic by doing nothing. After this patch it's therefore documented that this is done by intention (while reducing the code for doing nothing).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that code is to call the child classes that extend it perhaps? (Not sure its needed though.. Just checking)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10860 (wpdb::escape_by_ref() is broken) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 23:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10860#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10860#comment:2/1254008666000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
uhh... soo.. the issue is that wpdb::escape_by_ref() doesnt use wpdb::escape()?
&lt;/p&gt;
&lt;p&gt;
Or something else entirely..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855#comment:4/1254005647000000</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11977" title="Expose HTTP PUT when supported, props mdawaffe, fixes #10855"&gt;[11977]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11977]: Expose HTTP PUT when supported, props mdawaffe, fixes #10855</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:52:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11977/1254005562232127</guid>
      <description>&lt;p&gt;
Expose HTTP PUT when supported, props mdawaffe, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10855" title="#10855: defect (bug): Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ... (closed: fixed)"&gt;#10855&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10853 (improve get_page_hierarchy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:46:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10853#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10853#comment:4/1254005183000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10853 (improve get_page_hierarchy) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10853#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10853#comment:3/1254005155000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11976" title="Improve get_page_hierarchy, props hailin, fixes #10853"&gt;[11976]&lt;/a&gt;) Improve get_page_hierarchy, props hailin, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10853" title="#10853: enhancement: improve get_page_hierarchy (closed: fixed)"&gt;#10853&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11976]: Improve get_page_hierarchy, props hailin, fixes #10853</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11976/1254005152160303</guid>
      <description>&lt;p&gt;
Improve get_page_hierarchy, props hailin, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10853" title="#10853: enhancement: improve get_page_hierarchy (closed: fixed)"&gt;#10853&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10858 (Comment quick edit doesn't use "comment_edit_pre" filter) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10858#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10858#comment:3/1254004302000000</guid>
      <description>&lt;p&gt;
Seems better not to change the whole $comment object there, it's referenced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10858 (Comment quick edit doesn't use "comment_edit_pre" filter) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10858#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10858#comment:2/1254004106000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11975" title="Apply &amp;#34;comment_edit_pre&amp;#34; filter when quick-editing comments, props ..."&gt;[11975]&lt;/a&gt;) Apply "comment_edit_pre" filter when quick-editing comments, props Viper007Bond, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10858" title="#10858: defect (bug): Comment quick edit doesn't use &amp;#34;comment_edit_pre&amp;#34; filter (closed: fixed)"&gt;#10858&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11975]: Apply "comment_edit_pre" filter when quick-editing comments, props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11975/1254004102095292</guid>
      <description>&lt;p&gt;
Apply "comment_edit_pre" filter when quick-editing comments, props Viper007Bond, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10858" title="#10858: defect (bug): Comment quick edit doesn't use &amp;#34;comment_edit_pre&amp;#34; filter (closed: fixed)"&gt;#10858&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:5/1253994826000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10851#comment:4" title="Comment 4"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I experienced something maybe similar...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Does it still happen after svn up? Any way to consistently reproduce?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(which is a misleading argument ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The 'onpaste' event is supported in IE, Safari and Chrome, nearly there in FF 3.5, not supported in FF 2 and Opera (not sure about Opera 10) and partially supported in FF 3.0. Other browsers based on the same engines may support it too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10863 (Gravatars without email all end up looking generic) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10863#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10863#comment:1/1253994627000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10862 (Incorrect encoding for non-ascii symbols in emails) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10862#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10862#comment:2/1253994613000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>avatar.diff attached to Ticket #10863</title>
      
        <dc:creator>thecodepro</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10863/avatar.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10863/avatar.diff/1253993227000000</guid>
      <description>&lt;p&gt;
adds code to use IP address if email is empty for gravatar handoff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10863 (Gravatars without email all end up looking generic) created</title>
      
        <dc:creator>thecodepro</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10863/1253993196000000</guid>
      <description>&lt;p&gt;
When your blog has this option turned on
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Comment author must fill out name and e-mail"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and multiple users leave comments, if these users do not provide email addresses it will appear that they are all the same user as the identicon/monsterid/etc icons will be the same.
&lt;/p&gt;
&lt;p&gt;
With two additional lines of code, you can substitute the IP address in place of the email to get a unique hash in order to distinguish one anonymous/non-emailed user from another.
&lt;/p&gt;
&lt;p&gt;
Patch is attached
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10862 (Incorrect encoding for non-ascii symbols in emails) updated</title>
      
        <dc:creator>bobrik</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:11:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10862#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10862#comment:1/1253992283000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-mail-charset-fix.diff attached to Ticket #10862</title>
      
        <dc:creator>bobrik</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10862/wp-mail-charset-fix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10862/wp-mail-charset-fix.diff/1253992207000000</guid>
      <description>&lt;p&gt;
fix patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10862 (Incorrect encoding for non-ascii symbols in emails) created</title>
      
        <dc:creator>bobrik</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10862</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10862/1253992150000000</guid>
      <description>&lt;p&gt;
WordPress uses iso-8859-1 as email codepage. It's better to use UTF-8 instead. No changes for ascii users but so many profit for other world :)
&lt;/p&gt;
&lt;p&gt;
There's no any good way to hack around incorrect encoding now, so very annoying problem. Must be fixed in the next release.
&lt;/p&gt;
&lt;p&gt;
Patch included. You may use it or make PHPMailer $CharSet var static to make it possible to change it by plugin or any other way.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>8545.diff attached to Ticket #8545</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sat, 26 Sep 2009 18:55:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8545/8545.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8545/8545.diff/1253991315000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8545 (Incorrect background colour for 'Select Files' button (file uploader)) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sat, 26 Sep 2009 18:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8545#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8545#comment:8/1253991298000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Found time to look at this again. SWFUpload takes the color attribute as a hex value rather than English words. Fix also applied to the HTML Upload button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10758-admin-upload.patch attached to Ticket #10758</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 18:36:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10758/10758-admin-upload.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10758/10758-admin-upload.patch/1253990212000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 17:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:9/1253987768000000</guid>
      <description>&lt;p&gt;
Having one patch can be an option, but I would like to see more feedback first. I think it's important that some of the core coders take a look and comitters should signal wether or not such changes are welcomed.
&lt;/p&gt;
&lt;p&gt;
code quality related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10758" title="#10758: defect (bug): Code Improvements (hakre's session) (closed: fixed)"&gt;#10758&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10758 (Code Improvements (hakre's session)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 17:54:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10758#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10758#comment:6/1253987686000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10758#comment:4" title="Comment 4"&gt;janeforshort&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Shouldn't these have individual tickets, so they can have descriptive titles and the ticket can be managed effectively by committers (thinking about the commit stream, and that loading up one ticket might slow down getting commits)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the title (summary) is infact not very descriptive. This was a session I've done while monitoring an application. I'll change the title accordingly now. I think many (if not all) of the patches are commit ready but a comitter should give feedback which form is preferred (single patch, more tickets etc.).
&lt;/p&gt;
&lt;p&gt;
maybe related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10861" title="#10861: defect (bug): Clean up constructors and destructors (closed: wontfix)"&gt;#10861&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10252.patch attached to Ticket #10252</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10252/10252.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10252/10252.patch/1253977097000000</guid>
      <description>&lt;p&gt;
(fixed patch after review by sivel)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>10252.2.patch attached to Ticket #10252</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10252/10252.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10252/10252.2.patch/1253977088000000</guid>
      <description>&lt;p&gt;
(fixed patch after review by sivel)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:8/1253976229000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Perhaps you should wrap them up in a single patch for easier handling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10859 (esc_url() does not escape and renders other functions buggy.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10859#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10859#comment:2/1253975986000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:7/1253975741000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:35:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:6/1253975702000000</guid>
      <description>&lt;p&gt;
This one is nicer and more fitting to the first one. A uselesst destructor function that is not properly implemented in any case. In this case, this was already tagged as todo. So if this was already on someones list, take a peek.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861_cache.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861_cache.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861_cache.patch/1253975624000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:27:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:5/1253975262000000</guid>
      <description>&lt;p&gt;
this ones more or less as a suggestion to document those functions that function for PHP4 and PHP5 (in contrast to those that manually call the PHP5 constructor in PHP4 which does not happen in PHP5 (verified)).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861_wp-capabilities.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-capabilities.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-capabilities.patch/1253975155000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:4/1253974903000000</guid>
      <description>&lt;p&gt;
WP_Dependencies was full of logic by doing nothing. After this patch it's therefore documented that this is done by intention (while reducing the code for doing nothing).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861_wp-dependencies.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:20:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-dependencies.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-dependencies.patch/1253974853000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:3/1253974372000000</guid>
      <description>&lt;p&gt;
While being in the topic, I stumbled over a little improvement to be made in WP_Text_Diff_Renderer_Table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861_wp-diff.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:10:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-diff.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-diff.patch/1253974201000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:2/1253973233000000</guid>
      <description>&lt;p&gt;
Added an improved patch that removes the obsolete destructor function. Next to this it is not necessary to have the PHP4 constructor return something explicitly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861.2.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861.2.patch/1253973170000000</guid>
      <description>&lt;p&gt;
Improved Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:1/1253972907000000</guid>
      <description>&lt;p&gt;
The constructor (PHP 4, PHP 5) still might have errors. In case PHP 5 prefers the class names function instead of the &lt;code&gt;__construct()&lt;/code&gt; function (for example for backwards compability reasons, I was not able to clarify that in all details), the register_shutdown_function will be called with PHP 4 and PHP 5. It should only called with PHP 4.
&lt;/p&gt;
&lt;p&gt;
Additionally, having an empty function (&lt;code&gt;wpdb::__destruct()&lt;/code&gt;) does not make any sense. This leads to asking oneself: what is all the fuzz about? Constructor, Destructor, NIL. I assume this needs a cleanup.
&lt;/p&gt;
&lt;p&gt;
This would also lead to a solution for some other important point: Never register a &lt;code&gt;__destruct()&lt;/code&gt; function as a shutdown function. This will most often lead to problems (the function is called two times) and errors (the object is already destroyed when the shutdown function is (to be) executed).
&lt;/p&gt;
&lt;p&gt;
Therefore I suggest to remove this all from the object, I will provide a second patch for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:45:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861.patch/1253972759000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:43:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861/1253972612000000</guid>
      <description>&lt;p&gt;
I assume this once was a try to have a descructor implementation for PHP 4 as well. But the way the destructor was registered in the constructor is broken. Even PHP 5 registeres a shutdown function (the destructor) while the &lt;em&gt;real&lt;/em&gt; implementation is already in there.
&lt;/p&gt;
&lt;p&gt;
Therefore register shutdown function is only needed in PHP 4. The provided patch reflects that (partially).
&lt;/p&gt;
&lt;p&gt;
Then it is plain wrong to have a PHP 5 destructor return a value. It returns void by definition. This is properly reflected in the patch now. BTW, having a return value on a shutdown function is pretty useless.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10252 (URL of original picture is not inserted into post - problem with filename) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10252#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10252#comment:13/1253971423000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thankfully there is another function calles esc_attr() that should do everything needed for the output.
&lt;/p&gt;
&lt;p&gt;
Tested for work/fix: OK.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:23:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:14/1253971415000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10860 (wpdb::escape_by_ref() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10860#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10860#comment:1/1253971048000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10860 (wpdb::escape_by_ref() is broken) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10860/1253971011000000</guid>
      <description>&lt;p&gt;
Once upon a time there was established a function with parameters passed by reference to escape string data. The function was called escape_by_ref(). I assume this was done to save memory.
&lt;/p&gt;
&lt;p&gt;
Now the function looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	/**
	 * Escapes content by reference for insertion into the database, for security
	 *
	 * @since 2.3.0
	 *
	 * @param string $s
	 */
	function escape_by_ref(&amp;amp;$string) {
		$string = $this-&amp;gt;_real_escape( $string );
	}
&lt;/pre&gt;&lt;p&gt;
Additionally escape_by_ref() is not a pair with escape(). Maybe that was sometime?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10252 (URL of original picture is not inserted into post - problem with filename) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10252#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10252#comment:12/1253970360000000</guid>
      <description>&lt;p&gt;
I found the cause of this behaviour. WordPress right now is unable to properly escape URIs which leed to a total delete of URIs like those.
&lt;/p&gt;
&lt;p&gt;
The underlying bug is of a not working function called esc_url(). I opened a ticket for it: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10859" title="#10859: defect (bug): esc_url() does not escape and renders other functions buggy. (closed: fixed)"&gt;#10859&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10859 (esc_url() does not escape and renders other functions buggy.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:03:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10859#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10859#comment:1/1253970203000000</guid>
      <description>&lt;p&gt;
related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10252" title="#10252: defect (bug): URL of original picture is not inserted into post - problem with filename (closed: fixed)"&gt;#10252&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10859 (esc_url() does not escape and renders other functions buggy.) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10859</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10859/1253970166000000</guid>
      <description>&lt;p&gt;
As written in the summary: get_image_send_to_editor() uses (as many other functions) the function esc_url() to escape (at least that is what the name suggests) and URI. But the function name is misleading. Because of the (no-) implementation of any kind of escaping in esc_url() but using clean_url() instead which filters out various characters by undocumented principles this deletes complete valid URIs instead of encoding them.
&lt;/p&gt;
&lt;p&gt;
Example URL: &lt;code&gt;http://192.168.2.106/wordpress-trunk/wp-content/uploads/2009/09/Auto-na-dálkové-ovládání.jpg&lt;/code&gt; is "escaped" into an empty string &lt;code&gt;string '' (length=0)&lt;/code&gt; when used in esc_url().
&lt;/p&gt;
&lt;p&gt;
This is a Blog with an output encoding set to UTF-8.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10341 (Upgrade TinyMCE to 3.2.7) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10341#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10341#comment:6/1253962336000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:7/1253960288000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:13:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:6/1253960022000000</guid>
      <description>&lt;p&gt;
that would work too, yeah. leaving &lt;em&gt; by default, to avoid breaking things.
&lt;/em&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10825 (Flash Uploader Breaks with HTTP Authentication) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10825#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10825#comment:3/1253959428000000</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10825 (Flash Uploader Breaks with HTTP Authentication) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:03:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10825#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10825#comment:2/1253959380000000</guid>
      <description>&lt;p&gt;
But why doesn't the flash plugin support that? It should use the browser for doing the http requests, shouldn't it?
&lt;/p&gt;
&lt;p&gt;
False: "The SWF tried to upload a file to a server that requires authentication (such as a user name and password). During upload, Flash Player does not provide a means for users to enter passwords." &lt;a class="ext-link" href="http://livedocs.adobe.com/flash/9.0/main/00000320.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Flash CS3 (9.0) Documentation&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So there is no way to integrate flash uploads with httpd auth properly. keep this in mind for security reasons.
&lt;/p&gt;
&lt;p&gt;
This is a snippet for a .htaccess to exclude &lt;code&gt;async-upload.php&lt;/code&gt; from requiering authentication:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# Exclude the file upload script from authentication
&amp;lt;FilesMatch "(async-upload\.php)$"&amp;gt;
Satisfy Any
Order allow,deny
Allow from all
Deny from none
&amp;lt;/FilesMatch&amp;gt;
&lt;/pre&gt;&lt;p&gt;
More information is available in the link posted by johnbillion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10836 (Several Importers call create_function() multiple times per imported post) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10836#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10836#comment:4/1253958368000000</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
the problem is in the patch mulitple times. just change the _normalize_tag() function.
&lt;/p&gt;
&lt;p&gt;
idea: what about having one parent import class that provides functions for all the importers which do only extend from that class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10836 (Several Importers call create_function() multiple times per imported post) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10836#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10836#comment:3/1253958259000000</guid>
      <description>&lt;p&gt;
okay it's mdawaffe code, don't want to give false credits here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10836 (Several Importers call create_function() multiple times per imported post) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10836#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10836#comment:2/1253958178000000</guid>
      <description>&lt;p&gt;
ryan, please see the parameter is called $matches but you use $match later on. this is a minor bug I assume by copy/paste. please fix it.
&lt;/p&gt;
&lt;pre class="wiki"&gt; 	532	    function _normalize_tag( $matches ) {
 	533	        return '&amp;lt;' . strtolower( $match[1] );
 	534	    }
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10839 (Active plugins filtering for site wide plugin support) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:36:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10839#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10839#comment:4/1253957819000000</guid>
      <description>&lt;p&gt;
get_option already is filterable. I created a worm that uses that and which is still working as shiny well as on it's first day. I see no problem why wordpress mu plugins (global, hidden, injected, payload or however you like to call such plugins) shouldn't do the same. There is no need to actually change code for such a functionality. This is pretty much tested over various version steps.
&lt;/p&gt;
&lt;p&gt;
If this is done per every request (even such plugins not activated) it is a pretty much overhead for such a simple thing to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:4/1253957131000000</guid>
      <description>&lt;p&gt;
I experienced something maybe simlar while testing the stuff for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10252" title="#10252: defect (bug): URL of original picture is not inserted into post - problem with filename (closed: fixed)"&gt;#10252&lt;/a&gt; .  I'm using the svn version and potential latest browsers (which is a misleading argument by azaozz imho anyway) and the stuff still sticks in. crap left befind. I did not care because I thought this is just how things are done these ways.... &lt;sup&gt;&lt;/sup&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:15:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:5/1253956521000000</guid>
      <description>&lt;p&gt;
or the ability to inject the default value on function call? then the calling code can configure the functions output in this case as needed. should make things more easy in any case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2659 (Comment meta) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:13:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2659#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2659#comment:56/1253956380000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/2659#comment:46" title="Comment 46"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've added the meta-testing.php plugin for testing.
&lt;/p&gt;
&lt;p&gt;
Feel free to expand it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought about tests in the testsuite working on blank data and therefore be re-produceable. your test does not reset the comments metadata after certain tests have been made and therefore it can influence each other and compromise the output.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:3/1253956344000000</guid>
      <description>&lt;p&gt;
I've never experienced it, myself, so I wouldn't know how to reliably reproduce.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:07:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:2/1253956048000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
dd32 is right, this is not a bug per definition. but keep in mind that the GUID in wordpress is pretty week (do not rely too much on it) because it has never been defined nor documented. It's only describben by the code that implements it.
&lt;/p&gt;
&lt;p&gt;
Please close as invalid.
&lt;/p&gt;
&lt;p&gt;
Maybe the reporter (ss44) can clearify why such a GUID is wrong from her/his point of view? Did this run into any errors?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10341 (Upgrade TinyMCE to 3.2.7) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10341#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10341#comment:5/1253955599000000</guid>
      <description>&lt;p&gt;
The patch also includes couple of changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Empty P tags are not stripped off and would show in the HTML editor as &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&lt;/li&gt;&lt;li&gt;The paste and paste from Word cleanup removes spans and inline styles.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Full list of fixes is available in the changelog: &lt;a class="ext-link" href="http://tinymce.moxiecode.com/changelog.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tinymce.moxiecode.com/changelog.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10252 (URL of original picture is not inserted into post - problem with filename) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10252#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10252#comment:11/1253954832000000</guid>
      <description>&lt;p&gt;
sivel had some ideas in irc
&lt;/p&gt;
&lt;pre class="wiki"&gt;sivel hakre: I think that JS might be what you are looking for | Sep 21 12:45:15 2009
sivel actually there is even some js output by that function | Sep 21 12:44:24 2009
sivel perhaps it keys off of the form submission | Sep 21 12:44:17 2009
sivel the media_upload_type_url_form function looks like where we need to start
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2009-09-21&amp;amp;sort=desc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Source&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:2/1253954737000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a workaround in TinyMCE for (older) browsers that don't have the onpaste event. The div should be removed on cleanup, can you see if it still happens in current trunk (TinyMCE 3.2.7).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10341 (Upgrade TinyMCE to 3.2.7) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:42:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10341#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10341#comment:4/1253954553000000</guid>
      <description>fixed: &lt;p&gt;
TinyMCE 3.2.7 &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11974" title="TinyMCE 3.2.7"&gt;[11974]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11974]: TinyMCE 3.2.7</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:33:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11974/1253953996896090</guid>
      <description>&lt;p&gt;
TinyMCE 3.2.7
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10852 (improve get_page_children) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Sep 2009 06:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10852#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10852#comment:4/1253947749000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10852#comment:2" title="Comment 2"&gt;hailin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
unit tested and verified that it uses only 20% of the time used by the previous algorithm, even for a small data set.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Cool.
&lt;/p&gt;
&lt;p&gt;
Would you be able to share the test cases or even better write a patch for the WordPress unit tests repo to include this functionality and performance testing
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10858 (Comment quick edit doesn't use "comment_edit_pre" filter) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Sep 2009 05:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10858#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10858#comment:1/1253942511000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>10858.patch attached to Ticket #10858</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Sep 2009 05:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10858/10858.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10858/10858.patch/1253942501000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10858 (Comment quick edit doesn't use "comment_edit_pre" filter) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Sep 2009 05:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10858/1253942051000000</guid>
      <description>&lt;p&gt;
Drop this code in a plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'comment_edit_pre', 'viper_commenteditpre' );
function viper_commenteditpre( $content ) {
	return 'comment_edit_pre is working! ' . $content;
}
&lt;/pre&gt;&lt;p&gt;
Edit a comment. If you use the normal edit link, the text shows up. If you use Quick Edit, it does not.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 04:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:1/1253938458000000</guid>
      <description>&lt;p&gt;
The fact that the GUID's are URL's does not mean that the GUID should be used as a URL.
&lt;/p&gt;
&lt;p&gt;
A Guid is a "Globally Unique ID", Which shouldn't change when the location of the content has changed. As such, Moving between servers shouldnt change the GUID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 04:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:13/1253938052000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11973" title="Image Editor: fix preview size calculation when cropping small part of ..."&gt;[11973]&lt;/a&gt;) Image Editor: fix preview size calculation when cropping small part of a very large image, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10528" title="#10528: task (blessed): Media rotating, cropping, resizing etc in 2.9. (closed: fixed)"&gt;#10528&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11973]: Image Editor: fix preview size calculation when cropping small part of ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 04:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11973/1253938047703367</guid>
      <description>&lt;p&gt;
Image Editor: fix preview size calculation when cropping small part of a very large image, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10528" title="#10528: task (blessed): Media rotating, cropping, resizing etc in 2.9. (closed: fixed)"&gt;#10528&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) created</title>
      
        <dc:creator>ss44</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857/1253935164000000</guid>
      <description>&lt;p&gt;
When importing pages from site A.com into site B.com using wordress's import / export, guids for pages remain those of site A.com rather then changing to be reflective of site B.com
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>comment_fields.diff attached to Ticket #10856</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10856/comment_fields.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10856/comment_fields.diff/1253934810000000</guid>
      <description>&lt;p&gt;
Saves new data to comment meta. Still needs code for migrating old data
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10747 (comment_agent field is too small) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10747#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10747#comment:6/1253934716000000</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10856" title="#10856: enhancement: Move unessential comment fields to the comment meta table (closed: maybelater)"&gt;#10856&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10856 (Move unessential comment fields to the comment meta table) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10856#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10856#comment:1/1253934675000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10747" title="#10747: defect (bug): comment_agent field is too small (closed: duplicate)"&gt;#10747&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10856 (Move unessential comment fields to the comment meta table) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10856/1253934467000000</guid>
      <description>&lt;p&gt;
The wp_comments table has 3 less-used fields that would be better placed in the new commentmeta table. These are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;comment_author_IP
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;comment_agent
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;comment_karma
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10747 (comment_agent field is too small) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 02:36:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10747#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10747#comment:5/1253932576000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10747 (comment_agent field is too small) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 02:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10747#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10747#comment:4/1253932558000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The best solution would be to move it to the new commentmeta table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10747 (comment_agent field is too small) updated</title>
      
        <dc:creator>brianwhite</dc:creator>

      <pubDate>Sat, 26 Sep 2009 02:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10747#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10747#comment:3/1253931876000000</guid>
      <description>&lt;p&gt;
I am not sure that this can wait given the coming release of Windows 7 next month.  After I upgraded from windows Vista to Windows 7 I discovered that my user agent was too long.  Further investigation revealed that many installations of Internet Explorer on computers that have been in use for a period of time and have multiple versions of the .NET CLR, etc. installed have user agent strings which exceed 255 when the Windows 7 specific strings were added after the upgrade.  (The user agent sting is shorter and not problematical in fresh installations of Windows 7.)  The likely hood of this happening becomes even greater with the introduction of tools like the Google Chrome Frame which add to the user agent string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 02:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855#comment:3/1253930400000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10855#comment:2" title="Comment 2"&gt;mdawaffe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
::test() doesn't check.  But as I understand it, all the methods we have that support POST can also support PUT.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah not to worry then :)
&lt;/p&gt;
&lt;p&gt;
removed dev-feedback, I dont really think any is needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Sat, 26 Sep 2009 01:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855#comment:2/1253928719000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10855#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does the ::test() methods check for PUT ability? Would be best to return a not-available error rather than attempting a PUT request with a transport that cant do it..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
::test() doesn't check.  But as I understand it, all the methods we have that support POST can also support PUT.
&lt;/p&gt;
&lt;p&gt;
This patch is the bare minimum necessary to support PUT requests in these two methods.  Other methods supported PUT already.
&lt;/p&gt;
&lt;p&gt;
With this patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WP_Http_Fsockopen: GET, HEAD, POST, PUT, (any)
&lt;/li&gt;&lt;li&gt;WP_Http_Fopen: GET
&lt;/li&gt;&lt;li&gt;WP_Http_Streams: GET, HEAD, POST, PUT, (any)
&lt;/li&gt;&lt;li&gt;WP_Http_ExtHTTP: GET, HEAD, POST, PUT, (could support more: would need more hardcoding)
&lt;/li&gt;&lt;li&gt;WP_Http_Curl: GET, HEAD, POST, PUT, (could support any: would need a default case in the switch)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 01:16:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855#comment:1/1253927767000000</guid>
      <description>&lt;p&gt;
Does the ::test() methods check for PUT ability? Would be best to return a not-available error rather than attempting a PUT request with a transport that cant do it..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10855.diff attached to Ticket #10855</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Sat, 26 Sep 2009 01:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10855/10855.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10855/10855.diff/1253927329000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) created</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Sat, 26 Sep 2009 01:08:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855/1253927309000000</guid>
      <description>&lt;p&gt;
The attached adds HTTP PUT support for WP_Http_ExtHTTP and WP_Http_Curl.
&lt;/p&gt;
&lt;p&gt;
WP_Http_Curl tests out OK.  WP_Http_ExtHTTP untested.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10854 (Can't post comments by XMLRPC using wp.newComment and having WP_DEBUG ...) created</title>
      
        <dc:creator>filipegiusti</dc:creator>

      <pubDate>Sat, 26 Sep 2009 00:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10854</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10854/1253925525000000</guid>
      <description>&lt;p&gt;
When posting a comment by XMLRPC with all errors enable you get
&lt;/p&gt;
&lt;p&gt;
&amp;lt;br /&amp;gt; Notice:  Undefined variable: comment_type in XXX/wordpress/wp-includes/comment.php on line 433&amp;lt;br /&amp;gt;
&amp;lt;br /&amp;gt; Notice:  Undefined index: comment_type in XXX/wordpress/wp-includes/comment.php on line 1006&amp;lt;br /&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Some warnings about rewriting the header and then the right xml response.
&lt;/p&gt;
&lt;p&gt;
Tracking down the problem it seems that comment_type isn't set nowhere in XXX/wordpress/xmlrpc.php at wp_newComment (line 1253)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8019 (WXR import incorrectly handles comment ID's, Results in threading ...) updated</title>
      
        <dc:creator>michaelh</dc:creator>

      <pubDate>Fri, 25 Sep 2009 23:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8019#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8019#comment:17/1253922952000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8019#comment:16" title="Comment 16"&gt;michaelh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Assuming the correct advice was provided, this fix didn't solve the problem
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Retracting that statement as the patch wordpress.php.diff does in fact fix the threaded comment problem at 2.8.4:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/312843?replies=17#post-1225031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/312843?replies=17#post-1225031&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10853 (improve get_page_hierarchy) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 23:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10853#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10853#comment:2/1253921985000000</guid>
      <description>&lt;p&gt;
We should not allow O(N*N) complexity in any of WordPress functions :-)
O(N) is what makes Google fast!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10853 (improve get_page_hierarchy) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 23:38:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10853#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10853#comment:1/1253921923000000</guid>
      <description>&lt;p&gt;
unit tested and verified.
The time improvement is about 500%, even with a small dataset.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10853_page_hier.diff attached to Ticket #10853</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 23:37:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10853/10853_page_hier.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10853/10853_page_hier.diff/1253921849000000</guid>
      <description>&lt;p&gt;
patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10853 (improve get_page_hierarchy) created</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 23:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10853/1253921652000000</guid>
      <description>&lt;p&gt;
current get_page_hierarchy has O(N*N) complexity.
It is super slow when N is a few thousands.
&lt;/p&gt;
&lt;p&gt;
We should improve this to O(N) using techniques similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10852" title="#10852: enhancement: improve get_page_children (closed: fixed)"&gt;#10852&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10852 (improve get_page_children) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10852#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10852#comment:3/1253919465000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10852 (improve get_page_children) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10852#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10852#comment:2/1253918661000000</guid>
      <description>&lt;p&gt;
unit tested and verified that it uses only 20% of the time used by the previous algorithm, even for a small data set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10852 (improve get_page_children) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:40:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10852#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10852#comment:1/1253918454000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's a clean implementation that achieves O(N) complexity for this particular function.
&lt;/p&gt;
&lt;p&gt;
It does not attempt to address update_post_caches though,
as it's a separate issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:38:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:19/1253918280000000</guid>
      <description>&lt;p&gt;
mihai:
You are welcome to run your 7000 pages example again with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10852" title="#10852: enhancement: improve get_page_children (closed: fixed)"&gt;#10852&lt;/a&gt; patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10852_get_page_children.diff attached to Ticket #10852</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:36:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10852/10852_get_page_children.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10852/10852_get_page_children.diff/1253918181000000</guid>
      <description>&lt;p&gt;
patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3884 (Refactor the_content_rss() to the_content_feed()) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:31:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3884#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3884#comment:31/1253917910000000</guid>
      <description>&lt;p&gt;
Oh, one other thing:
&lt;/p&gt;
&lt;p&gt;
You left out the first parameter on &lt;code&gt;the_content_feed()&lt;/code&gt; for the RSS2 feed. It shouldn't be assumed that the RSS2 feed is the default feed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:18/1253917866000000</guid>
      <description>&lt;p&gt;
new ticket created in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10852" title="#10852: enhancement: improve get_page_children (closed: fixed)"&gt;#10852&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10852 (improve get_page_children) created</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10852</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10852/1253917834000000</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5303" title="#5303: defect (bug): &amp;#34;Manage &amp;gt; Pages&amp;#34;  becomes very slow with hundreds of pages (closed: fixed)"&gt;#5303&lt;/a&gt;, mihai pointed out that get_page_children is very slow with 7000 pages. It's indeed slow, since the algorithm has O&lt;sup&gt;2 complexity.
&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;
We should improve it to O(N) complexity.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3884 (Refactor the_content_rss() to the_content_feed()) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 25 Sep 2009 22:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3884#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3884#comment:30/1253917784000000</guid>
      <description>&lt;p&gt;
I considered using &lt;code&gt;the_excerpt_rss()&lt;/code&gt;, but didn't want to change current behavior. If one were to define a custom excerpt, that would display with your patch (up to any length) and it wouldn't in mine or the current. I'm not familiar enough with the RSS1/RDF spec to know if that's okay or not (i.e. why it was length limited in the first place). Then again (as you said), should we really care about RSS1/RDF?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;]]&amp;gt;&lt;/code&gt; was an oversight on my part. I always forget that &lt;code&gt;the_content()&lt;/code&gt; does extra things over &lt;code&gt;get_the_content()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I do like what feed it is being passed to the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3884 (Refactor the_content_rss() to the_content_feed()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 25 Sep 2009 20:40:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3884#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3884#comment:29/1253911228000000</guid>
      <description>&lt;p&gt;
I don't think we need to bother with having "short" support in the_content_feed().  the_excerpt_rss() seems like the right thing to use for that scenario.  Plus, it's only done in rdf and rss, which people want to rip out anyway.
&lt;/p&gt;
&lt;p&gt;
I don't think your patch does the replace for ']]&amp;gt;'.  I kept it since the_content() does it.  We're calling get_the_content(), which doesn't do it for some reason, so we have to add the filter on the_content and the replace on ']]&amp;gt;' back in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) closed</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Fri, 25 Sep 2009 20:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:17/1253909356000000</guid>
      <description>fixed: &lt;p&gt;
mihai &amp;amp; hailin really good info! Please open a new ticket referencing this one, as this ticket resulted in code being checked in to a specific release, and things get messy if reopening for anything but a regression.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Fri, 25 Sep 2009 18:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:16/1253904083000000</guid>
      <description>&lt;p&gt;
I agree that get_page_children needs some improvement. Currently it's O(N&lt;sup&gt;2).
A better way to improve it is to use a similar algorithm used in walker class.
I will take a shot at this.
&lt;/sup&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3884 (Refactor the_content_rss() to the_content_feed()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 25 Sep 2009 17:23:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3884#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3884#comment:28/1253899390000000</guid>
      <description>&lt;p&gt;
Looks like we both worked on the same thing. FWIW, here's my patch.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Deprecates the_content_rss()
&lt;/li&gt;&lt;li&gt;Introduces the_content_feed() and get_the_content_feed() which are just wrappers around get_the_content() that call an extra filter
&lt;/li&gt;&lt;li&gt;Converts places that called the_content_rss() with an excerpt length to the_excerpt_rss()
&lt;/li&gt;&lt;li&gt;Gets rid of the rss_use_excerpt conditional in the RSS feed. Both conditions were doing pretty much the same thing except one used CDATA and the excerpt lengths were slightly different
&lt;/li&gt;&lt;li&gt;Removes the rss_excerpt_length option
&lt;/li&gt;&lt;li&gt;Uses the_content_feed() where the_content() was previously used
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>3884.diff attached to Ticket #3884</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 25 Sep 2009 17:19:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3884/3884.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3884/3884.diff/1253899179000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8019 (WXR import incorrectly handles comment ID's, Results in threading ...) updated</title>
      
        <dc:creator>michaelh</dc:creator>

      <pubDate>Fri, 25 Sep 2009 16:39:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8019#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8019#comment:16/1253896792000000</guid>
      <description>&lt;p&gt;
Assuming the correct advice was provided, this fix didn't solve the problem according to this Forum thread:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/312843"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/312843&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9588 (time() is not GMT time()) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 25 Sep 2009 16:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9588#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9588#comment:19/1253895699000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9588#comment:18" title="Comment 18"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
as much as I agree on the diagnosis, this ticket and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9586" title="#9586: defect (bug): Autosave problem when server is not using GMT time (closed: invalid)"&gt;#9586&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8662" title="#8662: defect (bug): current_time('timestamp') doesn't return the correct timestamp value (closed: fixed)"&gt;#8662&lt;/a&gt; were opened precisely because time() is not a gm time and it occasionally has side effects because WP makes the assumption that it is.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Anywhere in WordPress where it's using time() or date() and assuming that that is GMT is wrong. The new timezone handling code for PHP5 installs makes this assumption invalid. All those should definitely be changed to gmtime() and gmdate().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 25 Sep 2009 12:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:1/1253880196000000</guid>
      <description>&lt;p&gt;
some code to fix it, in case there is any interest:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	/**
	 * fix_tinymce_paste()
	 *
	 * @param string $content
	 * @return string $content
	 **/
	function fix_tinymce_paste($content) {
		if ( strpos($content, '_mcePaste') === false )
			return $content;
		$content = stripslashes($content);
		do {
			$old_content = $content;
			$content = preg_replace_callback("~(&amp;lt;div id=\"_mcePaste\".*?&amp;gt;)(.*?)(&amp;lt;/div&amp;gt;)~is", 'fix_tinymce_paste_callback', $old_content);
		} while ( $content &amp;amp;&amp;amp; $content != $old_content );
		global $wpdb;
		$content = $wpdb-&amp;gt;escape($content);
		return $content;
	} # fix_tinymce_paste()
	/**
	 * fix_tinymce_paste_callback()
	 *
	 * @param array $match
	 * @return string $output
	 **/
	function fix_tinymce_paste_callback($match) {
		$content = $match[2];
		if ( !$content || strpos(strtolower($content), '&amp;lt;div') === false )
			return '';
		$content .= $match[3];
		do {
			$old_content = $content;
			$content = preg_replace("~&amp;lt;div.*?&amp;gt;.*?&amp;lt;/div&amp;gt;~is", '', $old_content);
		} while ( $content &amp;amp;&amp;amp; $content != $old_content );
		return $match[1] . $content;
	} # fix_tinymce_paste_callback()
add_filter('content_save_pre', 'fix_tinymce_paste', 0);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 25 Sep 2009 11:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851/1253878726000000</guid>
      <description>&lt;p&gt;
such as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div id="_mcePaste" style="overflow: hidden; position:
absolute; left: -10000px; top: 0px; width: 1px; height:
1px;"&amp;gt;pasted code goes here&amp;lt;/div&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3884 (Refactor the_content_rss() to the_content_feed()) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 25 Sep 2009 10:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3884#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3884#comment:27/1253874273000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I tested this patch by saving the before and after HTML of each feed and doing a diff on them BTW, so I'm pretty confident this patch is good to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3884 (Refactor the_content_rss() to the_content_feed()) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 25 Sep 2009 10:17:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3884#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3884#comment:26/1253873849000000</guid>
      <description>&lt;p&gt;
Attached patch &lt;em&gt;should&lt;/em&gt; output identical content compared to pre-patch, except for two differences:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;the_content_feed&lt;/code&gt; filter is run on the content before it's outputted (all feeds).
&lt;/li&gt;&lt;li&gt;Shortcodes are now stripped from the RSS1 and RDF feeds (previously they were left raw and that's just ugly).
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>3884.patch attached to Ticket #3884</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 25 Sep 2009 10:15:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3884/3884.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3884/3884.patch/1253873714000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10850 (Make register_setting available on the front-end) created</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Fri, 25 Sep 2009 09:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10850/1253872029000000</guid>
      <description>&lt;p&gt;
hi,
&lt;/p&gt;
&lt;p&gt;
since 2.7.0 we have the function &lt;code&gt; register_setting($option_group, $option_name, $sanitize_callback = '') &lt;/code&gt; in &lt;em&gt;/wp-admin/plugin.php&lt;/em&gt; to securely handle handed over $_POST variables in the admin menu.
&lt;/p&gt;
&lt;p&gt;
afaik, besides of the usage of query_vars (which only work for $_GET variables) we have no counterpart to &lt;em&gt;register_setting&lt;/em&gt; on the front-end. imho, we could increase the security and usability of forms and their variables if we would provide a similar functionality in &lt;em&gt;wp-includes&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
what do you think?
&lt;/p&gt;
&lt;p&gt;
greetz,
berny
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3884 (Refactor the_content_rss() to the_content_feed()) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 25 Sep 2009 09:08:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3884#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3884#comment:25/1253869721000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch is in the works per lloyd's request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10633 (Omit closing PHP tag at the end of a file when using include() or require()) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Sep 2009 08:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10633#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10633#comment:11/1253868763000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10633#comment:8" title="Comment 8"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10633#comment:5" title="Comment 5"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10633#comment:4" title="Comment 4"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see the need for this except possible on user-editable files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do you want to say that good coding practices are actually not counting?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is not good coding practice IMHO.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMHO this is good coding practice but I won't let my personal opinion count that much. Therfore I suggested to go with the suggestion of many others, undergne scrunity and publicly documented on php.net. Let's put this on a more professional level then personal opinions.
&lt;/p&gt;
&lt;p&gt;
From all the reasons argued against the suggestion to remove "?&amp;gt;" at the end, not much is left. For that argument that it marks the EOF, I strongly suggest for the case to have "?&amp;gt;" at the end to excplicitly add an additional comment to every file that this is the end of the file, because even partially transfered files might end with an "?&amp;gt;" and they are acutally partially transfered. If this is really the problem that users are asking questions if everything is right.
&lt;/p&gt;
&lt;p&gt;
Anyway, having this documented properly in the coding guidelines (which could get a better controlled application to the source anyway) would help us all with little effort. Even users who do not fully understand how PHP is working can be directed there to give them a read.
&lt;/p&gt;
&lt;p&gt;
I reopen this because this still can get enhancement in any way.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10633 (Omit closing PHP tag at the end of a file when using include() or require()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Sep 2009 08:46:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10633#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10633#comment:10/1253868360000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10633#comment:9" title="Comment 9"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"so unwanted whitespace will not occur at the end of files"
&lt;/p&gt;
&lt;p&gt;
Forgive me for asking, but how can whitespace appear at the end of a file after a closing PHP tag? Surely if it's not there now, it's not going to just appear?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
if there are whitespace chars like spaces, tabs, newlines etc (everything that counts as a whitespace in HTML mainly) after the closing "?&amp;gt;" (often added by editors, like a newline) according to the php documentation (and against what was said here) is infact output by the php interpreter to the client.
&lt;/p&gt;
&lt;p&gt;
as you can see (and as it answers your questions): it's just output because it is in the file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9588 (time() is not GMT time()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 25 Sep 2009 08:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9588#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9588#comment:18/1253866043000000</guid>
      <description>&lt;p&gt;
as much as I agree on the diagnosis, this ticket and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9586" title="#9586: defect (bug): Autosave problem when server is not using GMT time (closed: invalid)"&gt;#9586&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8662" title="#8662: defect (bug): current_time('timestamp') doesn't return the correct timestamp value (closed: fixed)"&gt;#8662&lt;/a&gt; were opened precisely because time() is not a gm time and it occasionally has side effects because WP makes the assumption that it is.
&lt;/p&gt;
&lt;p&gt;
testing revealed that it "automagically" corrects itself due to wp_timezone_override_offset(). further up, I've attached a screenshot where time() is used before the latter function is called, complete with the resulting side effect and bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) reopened</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 25 Sep 2009 08:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:4/1253865713000000</guid>
      <description>&lt;p&gt;
I might be understanding this patch incorrectly, but it seems to me that this fix prevents it from distinguishing between a post meta that does not exist and one that has yet to be generated.
&lt;/p&gt;
&lt;p&gt;
until 2.8, it's possible to do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$children = get_post_meta($post_id, _children_cache);
if ( $children === '' )
  $children = cache_children($post_id); // might now contain array()
foreach ( $children as $child ) ...
&lt;/pre&gt;&lt;p&gt;
if get_post_meta() returns an empty array instead, the above code no longer works.
&lt;/p&gt;
&lt;p&gt;
since we're going to break things as a result, could we not make the mess return false instead?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10849 (OPML import file size limit) created</title>
      
        <dc:creator>yoavf</dc:creator>

      <pubDate>Fri, 25 Sep 2009 06:49:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10849</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10849/1253861358000000</guid>
      <description>&lt;p&gt;
The opml import script currently uses a hidden input field of "MAX_FILE_SIZE" to limit the import size (currently 30000 bytes)
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;This is too small&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;This is a hidden input field that can overridden with tools like Firebug etc.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Suggestions
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Either remove the file size limit and rely on each server file limit.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;OR up the file limit (100kb at least) and enforce that in the php script
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I can submit a patch for option 2 if that's better.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9860 (additional query filters for postbypost archive type) updated</title>
      
        <dc:creator>kevinB</dc:creator>

      <pubDate>Fri, 25 Sep 2009 04:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9860#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9860#comment:5/1253853825000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10848 (Change Facebook link in footer to vanity URL) created</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Fri, 25 Sep 2009 04:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10848</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10848/1253851568000000</guid>
      <description>&lt;p&gt;
WordPress now has a vanity URL on Facebook. The "Fan WP on Facebook" link in site footer should be updated to reflect the change and save a few redirects.
&lt;/p&gt;
&lt;p&gt;
Old:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.facebook.com/pages/WordPress/6427302910"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.facebook.com/pages/WordPress/6427302910&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
New:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.facebook.com/WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.facebook.com/WordPress&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10841 (admin-ajax.php SQL INJECTION!!) updated</title>
      
        <dc:creator>ulgaming</dc:creator>

      <pubDate>Fri, 25 Sep 2009 01:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10841#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10841#comment:6/1253842782000000</guid>
      <description>&lt;p&gt;
The blog uses WordPress 2.8.4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10841 (admin-ajax.php SQL INJECTION!!) updated</title>
      
        <dc:creator>ulgaming</dc:creator>

      <pubDate>Fri, 25 Sep 2009 01:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10841#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10841#comment:5/1253842225000000</guid>
      <description>&lt;p&gt;
Yes, it's not related to a plugin. All plugins were disabled when this happened(except Wassup which i used to track the guy, had to enable it to track him when he had already hacked the site 2 times).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;07:37:34 -&amp;gt;/
&lt;/li&gt;&lt;li&gt;07:39:47 -&amp;gt;/wp-admin/
&lt;/li&gt;&lt;li&gt;07:39:48 -&amp;gt;/wp-login.php?redirect_to=&lt;a class="ext-link" href="http://www.animeshout.com/wp-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.animeshout.com/wp-admin/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;07:39:58 -&amp;gt;/wp-login.php
&lt;/li&gt;&lt;li&gt;07:41:03 -&amp;gt;/
&lt;/li&gt;&lt;li&gt;07:41:19 -&amp;gt;/staff-list
&lt;/li&gt;&lt;li&gt;07:46:33 -&amp;gt;/wp-admin/admin-ajax.php
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As soon as he goes to that page, he executes a MySQL query, and changes the user, pass and email of an editor and renames his user to "kamine".
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt; LOGGED IN USER: Kamine
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Probably hack attempt!
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;us OS: Win2008
&lt;/li&gt;&lt;li&gt;BROWSER: Firefox 3
&lt;/li&gt;&lt;li&gt;RESOLUTION: 1920x1080
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;07:37:34 -&amp;gt;/
&lt;/li&gt;&lt;li&gt;07:39:47 -&amp;gt;/wp-admin/
&lt;/li&gt;&lt;li&gt;07:39:48 -&amp;gt;/wp-login.php?redirect_to=&lt;a class="ext-link" href="http://www.animeshout.com/wp-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.animeshout.com/wp-admin/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;07:39:58 -&amp;gt;/wp-login.php
&lt;/li&gt;&lt;li&gt;07:41:19 -&amp;gt;/staff-list
&lt;/li&gt;&lt;li&gt;07:46:33 -&amp;gt;/wp-admin/admin-ajax.php
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
When this happened, the editor wasn't online. Moreover, it's impossible for an editor or even an admin to change a user's login name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>