<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 23:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:7/1619133406895752</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/dd32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dd32&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-825255712"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Consider that there'd be a inconsistent approach needed to catch it between different classes, eg:&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's actually untrue.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're right that it would work either way, but that's not the inconsistent approach I'm pointing out, That introducing exceptions for these classes would result in some classes would be try-catch'able, and most others wouldn't.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm strongly against introducing Exceptions for a PHP behaviour. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm also against introducing Exceptions in WordPress for this specific case, where Exceptions are not used within WordPress at all anywhere else (aside from third party libraries, whose exceptions we hide from Developers behind API wrappers).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41206 (Add embed handler for GitHub gists) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 22 Apr 2021 23:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41206#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41206#comment:12/1619133104038689</guid>
      <description>maybelater: &lt;p&gt;
@desrosj it seems the answer to your question is no.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm going to close this off as &lt;code&gt;maybelater&lt;/code&gt; in the hope a documented oEmbed endpoint gets added to Gists sometime in the next five years.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 23:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077#comment:2/1619132557977476</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:56:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077#comment:1/1619132201882583</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50784" title="Build/Test Tools: Remove Internet Explorer 11 from the `browserslist`. ..."&gt;50784&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Remove Internet Explorer 11 from the &lt;code&gt;browserslist&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This officially removes support for Internet Explorer 11 in the CSS files run through the build process in Core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Individual tickets should be opened for removing each manually maintained area of the code base targeting IE11.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The resulting changes to CSS files are included in this commit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53077" title="#53077: defect (bug): Remove IE11 from the list of supported browsers (closed: fixed)"&gt;#53077&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [50784]: Build/Test Tools: Remove Internet Explorer 11 from the `browserslist`. ...</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50784/1619132200908349</guid>
      <description>&lt;p&gt;
Build/Test Tools: Remove Internet Explorer 11 from the &lt;code&gt;browserslist&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This officially removes support for Internet Explorer 11 in the CSS files run through the build process in Core.
&lt;/p&gt;
&lt;p&gt;
Individual tickets should be opened for removing each manually maintained area of the code base targeting IE11.
&lt;/p&gt;
&lt;p&gt;
The resulting changes to CSS files are included in this commit.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53077" title="#53077: defect (bug): Remove IE11 from the list of supported browsers (closed: fixed)"&gt;#53077&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53078 (Stop loading polyfills specific to Internet Explorer) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53078/1619132044708806</guid>
      <description>&lt;p&gt;
There are several polyfills included in Core that are loaded specifically for supporting Internet Explorer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now that IE11 support has been dropped, these polyfills are no longer necessary. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This ticket is for discussing when Core should stop loading them.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regardless of when Core stops enqueuing them, they will need to remain in Core in case plugins and themes are declaring them as dependencies for their own scripts.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For context, see:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/03/04/discussion-dropping-support-for-ie11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/03/04/discussion-dropping-support-for-ie11/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/03/25/discussion-summary-dropping-support-for-ie11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/03/25/discussion-summary-dropping-support-for-ie11/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/04/22/ie-11-support-phase-out-plan/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/04/22/ie-11-support-phase-out-plan/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53077" title="#53077: defect (bug): Remove IE11 from the list of supported browsers (closed: fixed)"&gt;#53077&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:51:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:18/1619131872159393</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/880#issuecomment-825231700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #880&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks, that's a great help.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I need to test the code but I am wondering if something like this could work when clearing the cache instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
if ( get_current_user_id() === (int) $user-&amp;gt;ID ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
global $current_user;&lt;br /&gt;
unset( $current_user );&lt;br /&gt;
wp_set_current_user( $user-&amp;gt;ID );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As the function is pluggable, it would be good to avoid the new parameter to avoid the need for third party developers to update it if they have replaced the function.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077/1619131200878635</guid>
      <description>&lt;p&gt;
IE11 will no longer be supported by WordPress starting in version 5.8.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;browserslist&lt;/code&gt; array needs to be updated to reflect this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For context, see:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/03/04/discussion-dropping-support-for-ie11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/03/04/discussion-dropping-support-for-ie11/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/03/25/discussion-summary-dropping-support-for-ie11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/03/25/discussion-summary-dropping-support-for-ie11/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/04/22/ie-11-support-phase-out-plan/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/04/22/ie-11-support-phase-out-plan/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53070 (Establish a Core CSS deprecation path) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 21:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53070#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53070#comment:1/1619128219527507</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by isabelbrison. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619128216482100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #444 (wp_list_cats does not support 2 instances) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 21:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/444#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/444#comment:8/1619126985283745</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by notlaura. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619126982455800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49999 (Iterating on Admin Color Schemes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 21:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49999#comment:127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49999#comment:127/1619126130151520</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by notlaura. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619126128440500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49582 (wp-admin CSS audit) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 21:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49582#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49582#comment:46/1619125788700122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by notlaura. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619125786433900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53075 (Cannot paste content in my blog) closed</title>
      
        <dc:creator>5vlast</dc:creator>

      <pubDate>Thu, 22 Apr 2021 20:28:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53075#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53075#comment:1/1619123285303440</guid>
      <description>invalid: &lt;p&gt;
Dear Lynne miller, &lt;br /&gt;
Seems from the error message you share in your post. The problem you are facing's you can't upload media files more than you can't publish a new post. It can happen because of Media folder permission(~root/wp-content/uploads), and you need to contact your hosting company to fix such an issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53076 (Press This: Add filters to allow custom Press This plugins) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53076#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53076#comment:1/1619120353444898</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1207"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1207&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/kraftbj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;kraftbj&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Adds filters to &lt;code&gt;wp-admin/press-this.php&lt;/code&gt; to allow for custom Press This plugins to be used without special hacks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53076"&gt;https://core.trac.wordpress.org/ticket/53076&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53076 (Press This: Add filters to allow custom Press This plugins) created</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53076/1619120283142538</guid>
      <description>&lt;p&gt;
The Press This feature of WordPress was spun out of Core in 4.9 as into a "canonical plugin". The Core side code presumes the canonical plugin is the only implementation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If a site owner wants a custom version of Press This, they are required to hack the plugin in some way (set the version super high and edit the files, replace it with something of a high version, etc to ensure the plugin is updated back to stock by WordPress).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also limits what site owners can do—selective versions of Press This based on who is logged in, A/B tests of different Press This's, etc.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Request a few filters added to wp-admin/press-this.php to allow for alternative implementations. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:35/1619119003390671</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50783" title="Coding Standards: Remove loose comparison in ..."&gt;50783&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Remove loose comparison in &lt;code&gt;wp-admin/includes/plugin-install.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This more closely represents how the active installations count is displayed in the Plugin Directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50783]: Coding Standards: Remove loose comparison in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50783</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50783/1619119002437888</guid>
      <description>&lt;p&gt;
Coding Standards: Remove loose comparison in &lt;code&gt;wp-admin/includes/plugin-install.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This more closely represents how the active installations count is displayed in the Plugin Directory.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>vimes1984</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:11:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:7/1619118679380035</guid>
      <description>&lt;p&gt;
As per this: &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;When making decisions these are the users we consider first. A great example of this consideration is software options. Every time you give a user an option, you are asking them to make a decision. When a user doesn’t care or understand the option this ultimately leads to frustration. As developers we sometimes feel that providing options for everything is a good thing, you can never have too many choices, right? Ultimately these choices end up being technical ones, choices that the average end user has no interest in. It’s our duty as developers to make smart design decisions and avoid putting the weight of technical choices on our end users.&lt;/code&gt;&lt;br /&gt;
from here: &lt;a class="ext-link" href="https://wordpress.org/about/philosophy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/philosophy/&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
I'd agree with Robin here this isn't a technical decision it's a question of privacy, so by offering an option we aren't "putting the weight of technical choices on our end users" we ARE and should put the weight of privacy choices on our end users though... Whether we choose to opt-in OR opt-out is a different discussion but the user SHOULD be made aware this isn't a technical decision. How that option then represents itself is a technical decision we shouldn't be asking them, do you want to opt out via Javascript or HTTP headers.... &lt;br /&gt;
&lt;br /&gt;
But I'd strongly advocate for giving the user the ability to opt in or out on the end user not us... &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53075 (Cannot paste content in my blog) created</title>
      
        <dc:creator>lynneamiller</dc:creator>

      <pubDate>Thu, 22 Apr 2021 18:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53075/1619115993577107</guid>
      <description>&lt;p&gt;
Hi, I'm unable to paste content for a new post on www.adopteerevelations.com.&lt;br /&gt;
When I try to paste text, little red lines appear in the text box. In the lower&lt;br /&gt;
right-hand corner, there's a message saying 'The site is experiencing technical&lt;br /&gt;
difficulties. Please check your site admin email inbox for instructions.' The&lt;br /&gt;
Add Media button is also not working. The last time I published a post was in&lt;br /&gt;
August 2020 and there were no problems. I don't know what to do and hope you can&lt;br /&gt;
resolve this issue. Thanks!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:6/1619114315827258</guid>
      <description>&lt;p&gt;
Yes I get it - I'm saying it's not a technical question - it's a Privacy Control. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"Would you like to opt your site out of FLoC?" - we're designing software for the majority... aren't we?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:51:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:5/1619113913382597</guid>
      <description>&lt;p&gt;
Yes, the point of this philosophy is so that site owners shouldn't need to make decisions, especially around technical concepts that they won't fully understand.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:4/1619113703327799</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53069#comment:3" title="Comment 3"&gt;jorbin&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@robscott In general, WordPress is very hesitant to add new options. It's a part of the &lt;a class="ext-link" href="https://wordpress.org/about/philosophy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Philosophies&lt;/a&gt; which specifically state "Decisions not Options".&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When making decisions these are the users we consider first. A great example of this consideration is software options. Every time you give a user an option, you are asking them to make a decision. When a user doesn’t care or understand the option this ultimately leads to frustration. As developers we sometimes feel that providing options for everything is a good thing, you can never have too many choices, right? Ultimately these choices end up being technical ones, choices that the average end user has no interest in. It’s our duty as developers to make smart design decisions and avoid putting the weight of technical choices on our end users.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This philosophy point is fairly influenced by the writing of Havoc Pennington, the two essays of value here are &lt;a class="ext-link" href="https://ometer.com/preferences.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ometer.com/preferences.html&lt;/a&gt; and &lt;a class="ext-link" href="https://ometer.com/free-software-ui.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ometer.com/free-software-ui.html&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Understood, hence my use of the word decision in this statement:  "empowering webmaster to make decision for themselves" - adding a filter to add an HTTP header to the website is not a decision most people who run WP sites can make (without a developer) and hence, it's valid privacy control; adding the header (or not adding the header) would seem to be taking the decision away from the majority of website owners?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:3/1619113473052225</guid>
      <description>&lt;p&gt;
@robscott In general, WordPress is very hesitant to add new options. It's a part of the &lt;a class="ext-link" href="https://wordpress.org/about/philosophy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Philosophies&lt;/a&gt; which specifically state "Decisions not Options".&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When making decisions these are the users we consider first. A great example of this consideration is software options. Every time you give a user an option, you are asking them to make a decision. When a user doesn’t care or understand the option this ultimately leads to frustration. As developers we sometimes feel that providing options for everything is a good thing, you can never have too many choices, right? Ultimately these choices end up being technical ones, choices that the average end user has no interest in. It’s our duty as developers to make smart design decisions and avoid putting the weight of technical choices on our end users.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This philosophy point is fairly influenced by the writing of Havoc Pennington, the two essays of value here are &lt;a class="ext-link" href="https://ometer.com/preferences.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ometer.com/preferences.html&lt;/a&gt; and &lt;a class="ext-link" href="https://ometer.com/free-software-ui.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ometer.com/free-software-ui.html&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:18:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:2/1619111922332238</guid>
      <description>&lt;p&gt;
Thanks for listing this here @helen - I was sorry I couldn't make the core dev chat, but caught up with it on Slack.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This statement:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"If WordPress were to send the explicit opt-out header by default, what sort of impact would this have on individual users (both providers and consumers) and ad/targeting technology at large?"&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think we don't need to consider this to be a be-all and end-all "we've opted everyone in WordPress in or out!" Situation. A core setting, similar in nature to the robots meta opt-out, would be an enhancement, empowering webmaster to make decision for themselves?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The question then would be if we would opt out by default - but I don't see why (should the experiment move to production) we shouldn't empower WP website owners to make this decision without having to use a filter to add the header.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is it plugin territory? Well, for me it fits with Privacy settings, regardless of political stance, we don't need to take a view: some people want to disable it, we should enable them to make this decision.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 15:32:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:9/1619105520408398</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
To clarify my concern, I just wanted to confirm that there were no autosaves of reusable blocks happening that were triggering many revisions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like the tests are good now! Feel free to commit, @matveb.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 15:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:8/1619105414231347</guid>
      <description>&lt;p&gt;
Ah yes, indeed thanks @desrosj good catch. I directly tested the code, I didn't try to apply the PR.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53072#comment:7" title="Comment 7"&gt;matveb&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To test, also go to edit the reusable block directly via "manage reusable blocks" and the selecting it from the list. Both saving flows should work.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Or go directly to &lt;code&gt;/wp-admin/edit.php?post_type=wp_block&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 15:04:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:17/1619103861861047</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/donmhico"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;donmhico&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/880#issuecomment-824922350"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #880&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@peterwilsoncc - First, thank you for looking into this and doing improvements. Really appreciate it!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regarding the addition of &lt;code&gt;$force&lt;/code&gt; param in &lt;code&gt;wp_set_current_user()&lt;/code&gt;. First we if omit the changes related to &lt;code&gt;$force&lt;/code&gt; parameter and just have this changes&lt;br /&gt;
{{{php&lt;br /&gt;
function get_user_by( $field, $value ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
global $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
$userdata = WP_User::get_data_by( $field, $value );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( ! $userdata ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return false;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( $current_user instanceof WP_User &amp;amp;&amp;amp; $current_user-&amp;gt;ID === (int) $userdata-&amp;gt;ID ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}}}&lt;br /&gt;
Running the full test suite will result to &lt;strong&gt;8 failures&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;There were 8 failures:
1) Tests_Auth::test_password_trimming
Failed asserting that WP_Error Object (...) is an instance of class "WP_User".
/var/www/tests/phpunit/tests/auth.php:98
2) Tests_Auth::test_password_length_limit
Failed asserting that WP_Error Object (...) is an instance of class "WP_User".
/var/www/tests/phpunit/tests/auth.php:217
3) Tests_Auth::test_user_activation_key_is_saved
Invalid key.
Failed asserting that WP_Error Object (...) is not an instance of class "WP_Error".
/var/www/tests/phpunit/includes/abstract-testcase.php:609
/var/www/tests/phpunit/tests/auth.php:261
4) Tests_Auth::test_user_activation_key_is_checked
Invalid key.
Failed asserting that WP_Error Object (...) is not an instance of class "WP_Error".
/var/www/tests/phpunit/includes/abstract-testcase.php:609
/var/www/tests/phpunit/tests/auth.php:286
5) WP_Test_REST_Users_Controller::test_update_item_existing_email_case
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-'Editor@example.com'
+'editor@example.com'
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:1600
6) WP_Test_REST_Users_Controller::test_user_roundtrip_as_editor
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-'\o/ ¯\_(ツ)_/¯'
+'User 0007480'
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:2122
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:2159
7) WP_Test_REST_Users_Controller::test_user_roundtrip_as_editor_html
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-'div strong'
+'User 0007480'
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:2122
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:2210
8) Tests_XMLRPC_wp_editProfile::test_subscriber_profile
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-'http://www.example.org/subscriber'
+''
/var/www/tests/phpunit/tests/xmlrpc/wp/editProfile.php:35
&lt;/pre&gt;&lt;p&gt;
Tracing what's common to these errors is &lt;code&gt;clean_user_cache()&lt;/code&gt;. What we want when &lt;code&gt;clean_user_cache( $user )&lt;/code&gt; is invoked, is if the passed &lt;code&gt;$user&lt;/code&gt; is the &lt;code&gt;global $current_user&lt;/code&gt;, we reset / refresh the $current_user so it will reflect the latest changes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now doing just something like this won't work &lt;strong&gt;(without &lt;code&gt;$force&lt;/code&gt;)&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
function clean_user_cache( $user ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( is_numeric( $user ) ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$user = new WP_User( $user );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( ! $user-&amp;gt;exists() ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
wp_cache_delete( $user-&amp;gt;ID, 'users' );&lt;br /&gt;
wp_cache_delete( $user-&amp;gt;user_login, 'userlogins' );&lt;br /&gt;
wp_cache_delete( $user-&amp;gt;user_email, 'useremail' );&lt;br /&gt;
wp_cache_delete( $user-&amp;gt;user_nicename, 'userslugs' );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
/&lt;strong&gt;&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Fires immediately after the given user's cache is cleaned.
*
&lt;/li&gt;&lt;li&gt;@since 4.4.0
*
&lt;/li&gt;&lt;li&gt;@param int     $user_id User ID.
&lt;/li&gt;&lt;li&gt;@param WP_User $user    User object.
*/
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
do_action( 'clean_user_cache', $user-&amp;gt;ID, $user );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( get_current_user_id() === (int) $user-&amp;gt;ID ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
wp_set_current_user( $user-&amp;gt;ID );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The code block above won't work because &lt;code&gt;wp_set_current_user( $id )&lt;/code&gt; is returning early the &lt;code&gt;global $current_user&lt;/code&gt; without doing anything else if the passed &lt;code&gt;$id&lt;/code&gt; is the same as the &lt;code&gt;$current_user&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
function wp_set_current_user( $id, $name = &lt;em&gt; ) {&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
global $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; If &lt;code&gt;$id&lt;/code&gt; matches the current user, there is nothing to do.&lt;br /&gt;
if ( isset( $current_user )&lt;br /&gt;
&amp;amp;&amp;amp; ( $current_user instanceof WP_User )&lt;br /&gt;
&amp;amp;&amp;amp; ( $id == $current_user-&amp;gt;ID )&lt;br /&gt;
&amp;amp;&amp;amp; ( null !== $id )&lt;br /&gt;
) {&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hence I added &lt;code&gt;$force&lt;/code&gt; param to force the &lt;strong&gt;re-&lt;/strong&gt;&lt;code&gt;setup_userdata()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
function wp_set_current_user( $id, $name = &lt;em&gt;, $force = false ) {&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
global $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; If &lt;code&gt;$id&lt;/code&gt; matches the current user, there is nothing to do.&lt;br /&gt;
if ( isset( $current_user )&lt;br /&gt;
&amp;amp;&amp;amp; ( $current_user instanceof WP_User )&lt;br /&gt;
&amp;amp;&amp;amp; ( $id == $current_user-&amp;gt;ID )&lt;br /&gt;
&amp;amp;&amp;amp; ( null !== $id )&lt;br /&gt;
&amp;amp;&amp;amp; ( ! $force )&lt;br /&gt;
) {&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
$current_user = new WP_User( $id, $name );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
setup_userdata( $current_user-&amp;gt;ID );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
/&lt;strong&gt;&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Fires after the current user is set.
*
&lt;/li&gt;&lt;li&gt;@since 2.0.1
*/
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
do_action( 'set_current_user' );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not sure if I explained my mind clearly and I hope this clarifies my reasoning why I added &lt;code&gt;$force&lt;/code&gt;. Let me know if you have any other inquiries.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53074 (Branding Foot) closed</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Thu, 22 Apr 2021 14:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53074#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53074#comment:1/1619103548769171</guid>
      <description>invalid: &lt;p&gt;
Hello, @itemz, and welcome to WordPress Core Trac!  This system is for reporting of bugs in WordPress Core only, and the question you have pertains to a third-party plugin, WooCommerce.  Try their support forums at &lt;a class="ext-link" href="https://wordpress.org/support/plugin/woocommerce/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/plugin/woocommerce/&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53074 (Branding Foot) created</title>
      
        <dc:creator>itemz</dc:creator>

      <pubDate>Thu, 22 Apr 2021 14:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53074/1619102045101116</guid>
      <description>&lt;p&gt;
Hello everyone, I want to remove the „creat with storefront &amp;amp; woocommerce“&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As woocommerce support confirm is this allowed? It’s this correct? And how I can remove &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50539 (Explore a larger icon less WP Admin menu) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Thu, 22 Apr 2021 14:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50539#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50539#comment:8/1619101601214809</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice! I kinda miss the flavor of the icons too but I'm not sure if that's because they were always there. I'd say more breathing room is more important than the icons, though maybe we can make the sidebar a little wider too? The FSE sidebar is a bit wider and I quite like that. That could give just enough space to experiment with some lighter icons, as @chrisvanpatten suggested. But if only this change shipped it'd be pretty nice already.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One thing I would do either way is lower the 'collapse' option a bit more and make the icon just the triangle, without the circle. Because it's the only icon left the eye is drawn to it more now.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 14:24:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:7/1619101482602536</guid>
      <description>&lt;p&gt;
@desrosj Ah, good to know! I was trying that flow since I've never used it before for patches :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, it should only commit revisions upon saving, and the saving flow for reusable blocks is not dependant on the post that may harbor it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To test, also go to edit the reusable block directly via "manage reusable blocks" and the selecting it from the list. Both saving flows should work.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 13:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:6/1619098596730197</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Did not mean to remove &lt;code&gt;has-unit-tests&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 13:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:5/1619098528173335</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like the &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/actions/runs/773843603"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR has a unit test failure&lt;/a&gt; that needs to just be fixed before this can be committed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, it looks like the branch was pushed directly to the mirror repository. @matveb for future reference, because &lt;code&gt;wordpress-develop&lt;/code&gt; is a mirror, any changes to that repo not found in SVN get overwritten when the repo syncs (I believe this happens every few minutes), so looks like while your PR is still open, your branch is now gone. It's best to open a PR from your fork to prevent that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've created a fresh PR on my fork with an update that should make the unit tests pass.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One question I had was when a revision would actually be created for a reusable block. I did some testing and it seems a revision is only created when the block is actually saved (which is good).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 13:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:4/1619098421529495</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1206"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1206&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/desrosj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;desrosj&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Supersedes &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1205/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/1205/&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53072"&gt;https://core.trac.wordpress.org/ticket/53072&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53071 (Website Recovery) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53071#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53071#comment:1/1619092374823499</guid>
      <description>invalid: &lt;p&gt;
Hi and welcome to WordPress Core Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry to hear you are having issues with your website. Please note that this Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You can use the WordPress support forums: &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forums/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you for understanding :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:3/1619092112988080</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ah! Thank you for opening this ticket, I completely support this proposal.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The pull request works great on my side.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Marking for &lt;code&gt;commit&lt;/code&gt; action.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52790 (Reusable blocks disappeared) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52790#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52790#comment:34/1619091702532499</guid>
      <description>&lt;p&gt;
@edragonxx I tried to follow the steps you described in your comment and I'm not able to reproduce the issue on a fresh install.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here is a video of the steps I followed: &lt;a class="ext-link" href="https://i.gyazo.com/7ea9ae3696ad89550a051fcb563865aa.mp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://i.gyazo.com/7ea9ae3696ad89550a051fcb563865aa.mp4&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you please provide more details about the issue? Does it occurs with both existing and new reusable blocks? Are you creating the reusable blocks on the same page you're converting them to regular ones? Any detail may help to reproduce the issue.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;ps: please watch your language, the last sentence of your comment is not appropriate. Thank you :)&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53073 (Custom Block Issue in 5.7.1) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53073#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53073#comment:1/1619090897657922</guid>
      <description>invalid: &lt;p&gt;
Hello and welcome to WordPress Trac @deepusurana,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry to hear you have issues with your WordPress installation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like a support question, as the issue is not reproductible on a fresh install.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You should rather open a ticket on the WordPress support forums: &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
Jb&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53073 (Custom Block Issue in 5.7.1) created</title>
      
        <dc:creator>deepusurana</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53073/1619090490809851</guid>
      <description>&lt;p&gt;
Hi,&lt;br /&gt;
All custom blocks were working fine before 5.7.1 update. &lt;br /&gt;
Now the custom block is saving the data and continuously asking for recovery.&lt;br /&gt;
It is also now difficult to save and have to publish a post with a future date.&lt;br /&gt;
 &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>reusable-block-with-revisions.png attached to Ticket #53072</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 10:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53072/reusable-block-with-revisions.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53072/reusable-block-with-revisions.png/1619087251832103</guid>
      <description>&lt;p&gt;
Sidebar with revisions enabled
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>youknowriad</dc:creator>

      <pubDate>Thu, 22 Apr 2021 10:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:2/1619087143827781</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 10:22:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:1/1619086964164161</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1205"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1205&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/mtias"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;mtias&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53072"&gt;https://core.trac.wordpress.org/ticket/53072&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) created</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 10:08:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072/1619086128501167</guid>
      <description>&lt;p&gt;
Let's enable post revisions for the &lt;code&gt;wp_block&lt;/code&gt; custom post type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This has not been pursued yet in suspense of broader improvements to block management, reusable blocks, and editorial flows. However, there's really no reason to lock this functionality out in the meantime, which can be very useful today for people.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also reported &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/19149"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/19149&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53071 (Website Recovery) created</title>
      
        <dc:creator>chanelrapallini</dc:creator>

      <pubDate>Thu, 22 Apr 2021 08:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53071</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53071/1619080244665767</guid>
      <description>&lt;p&gt;
Hi there,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I was hosting my site with HeartInternet, I moved it over to Siteground.  In the process I've lost access to my www.rapallini.co.uk website which was created on WordPress.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Neither hosts can help me retrieve my website, please can you help?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you,&lt;br /&gt;
Chanel &lt;br /&gt;
0796 020 7829&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52790 (Reusable blocks disappeared) updated</title>
      
        <dc:creator>edragonxx</dc:creator>

      <pubDate>Thu, 22 Apr 2021 08:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52790#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52790#comment:33/1619079914726695</guid>
      <description>&lt;p&gt;
Same here, updated wordpress and voila reusable blocks are useless now!!!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How to reproduce that bug? Simple, make a reusable block, now add it to your posts. Next time add it to new post, press "covert regular block" because sometimes you just want use it as template, like have block styles and stuff put in place but you want change text there, so you will use reusable blocks convert them to regular block and author was able to add their own text without changing text every other post too, worked perfectly. Not anymore, once you press convert regular block it will empty reusable block. Every fucking single time!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Thu, 22 Apr 2021 07:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:25/1619075969446068</guid>
      <description>&lt;p&gt;
@jeremyfelt, that would be ideal to go with the approach you outlined. We are discussing the same issue in &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/31027"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/31027&lt;/a&gt;. Let me share the part that worries me the most if we go this route:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;block_categories&lt;/code&gt; and other filters involved here, they have the &lt;code&gt;$post&lt;/code&gt; object as a param which is not set outside of the edit post page. More importantly, we provide examples for this filter that depend on unguarded &lt;code&gt;$post&lt;/code&gt; usage at &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/trunk/docs/reference-guides/filters/block-filters.md#managing-block-categories"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/trunk/docs/reference-guides/filters/block-filters.md#managing-block-categories&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// my-plugin.php
&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;my_plugin_block_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$categories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_type&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$categories&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nv"&gt;$categories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="s1"&gt;'slug'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'my-category'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'My category'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my-plugin'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="s1"&gt;'icon'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'wordpress'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'block_categories'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my_plugin_block_categories'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If you have some ideas on how to address it safely then we should do it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51750 (Update webpack to version 5.x) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Thu, 22 Apr 2021 05:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51750#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51750#comment:3/1619070908909514</guid>
      <description>&lt;p&gt;
I wanted to cross-reference the first failed attempt to updated webpack in Gutenberg: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/26382"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/26382&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Gutenberg build was working correctly, but some tools like Storybook and &lt;code&gt;@wordpress/scripts&lt;/code&gt; stopped working because of some compatibility issues. We should give it another try in the next weeks.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just a note that any update to Webpack needs to be a coordinated effort with the block editor team in the Gutenberg repository to ensure both spots use the same version.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@desrosj, do you anticipate any issues if we would start using different versions of webpack? As far as I can tell, Jarda landed all necessary changes to make v4 and v5 compatible in separate PRs, including changes to &lt;code&gt;@wordpress/dependency-extraction-webpack-plugin&lt;/code&gt; that Calypso uses already with webpack 5. If you look at the PR I shared the number of changes is fairly minimal.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 05:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:109/1619067955660802</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1619067952002200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 22 Apr 2021 03:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:163</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:163/1619063366029110</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35725#comment:162" title="Comment 162"&gt;spacedmonkey&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One question, in my testing, it seems like thumbnails are not generated on animated webp. Is this an expected behaviour? What is the reasoning behind this? Can we document this well in release notes. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note for the future, I would solve to solve generating thumbnails for animated webp. I would love to convert animated gifs to animated webp and generate thumbnails for this webp. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree! I'll note that animated GIFs are currently not supported by WP for resizing either, unfortunately (See: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/28474" title="#28474: defect (bug): WordPress destroys animation in animated GIF when it resizes (assigned)"&gt;#28474&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not sure about GD support (I saw in &lt;a href="https://core.trac.wordpress.org/ticket/52867#comment:11"&gt;another comment&lt;/a&gt; that Adam noted GD doesn't support resizing animated files) -- but with Imagick for GIFs, this is because WP grabs the first frame, and resizes that, rather than iterating through and resizing all of the frames. I don't know if WebP handles this in a different fashion that might make it easier.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regardless, I think it'd be a nice feature to support.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53070 (Establish a Core CSS deprecation path) created</title>
      
        <dc:creator>isabel_brison</dc:creator>

      <pubDate>Thu, 22 Apr 2021 03:31:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53070</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53070/1619062307958300</guid>
      <description>&lt;p&gt;
Problem: Core CSS is a public API, and gets used as such by plugins. This means that when a selector is no longer used in wp-admin, deleting any related CSS rules can still break third party code. However, the cautious approach of not deleting any CSS leads to bloated files, with a negative impact on performance.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Solution: define a clear deprecation path for Core CSS, announcing in advance when any selector and related rules are being deprecated. This allows third parties to update their code in a timely manner.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What will this look like in practice? As discussed in the CSS meeting: &lt;a class="ext-link" href="https://make.wordpress.org/core/2021/04/13/css-chat-summary-08-april-2021/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/04/13/css-chat-summary-08-april-2021/&lt;/a&gt;,&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When a selector is no longer used in Core, move related CSS to a &lt;code&gt;deprecated.css&lt;/code&gt; file.
&lt;/li&gt;&lt;li&gt;This file can be optionally enqueued by plugins that require any of its CSS.
&lt;/li&gt;&lt;li&gt;Deprecation is announced in the release dev notes.
&lt;/li&gt;&lt;li&gt;Linters and other automated tools can help enforce non-use of deprecated selectors.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48369 (Uploaded media files created with incorrect permissions if directory ...) updated</title>
      
        <dc:creator>jjsmithson</dc:creator>

      <pubDate>Thu, 22 Apr 2021 02:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48369#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48369#comment:3/1619058224196145</guid>
      <description>&lt;p&gt;
@SergeyBiryukov can you please change the version to 5.7.1? Thank you!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48369 (Uploaded media files created with incorrect permissions if directory ...) updated</title>
      
        <dc:creator>jjsmithson</dc:creator>

      <pubDate>Thu, 22 Apr 2021 02:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48369#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48369#comment:2/1619058177641907</guid>
      <description>&lt;p&gt;
Can confirm this issue is still present (April 2021, version 5.7.1). It entirely prevented me from viewing uploaded files. I worked around this by manually setting the correct permissions on a folder and disabling year/month folders.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 02:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:6/1619057122295616</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/jrfnl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jrfnl&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-824483379"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Consider that there'd be a inconsistent approach needed to catch it between different classes, eg:&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's actually untrue.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When this would be an Exception, both ways of calling the method - surrounded by defensive coding or using &lt;code&gt;try-catch&lt;/code&gt; - would work, so people wouldn't need to change their coding style, but they now have a _choice_, while when using &lt;code&gt;trigger_error()&lt;/code&gt;, only defensive coding will work and &lt;code&gt;try-catch&lt;/code&gt; is made impossible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The whole point of having catchable Exceptions is that they will behave the same as Fatal errors when _uncaught_, but give a developer the freedom to catch them and handle them appropriately if so desired.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
unless it's something that we're going to apply to every WP class &amp;amp; object&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd be very much in favour of such a project, though that is outside of the scope of this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 01:30:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:5/1619055054747089</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/dd32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dd32&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-824470406"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All together, it is my opinion that using an Exception will allow plugin developers more freedom in their choice of how to code, as well as allowing for them to write cleaner code.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, it does.&lt;br /&gt;
But I don't see any need to vary from the expected PHP behaviour, unless it's something that we're going to apply to every WP class &amp;amp; object.&lt;br /&gt;
I personally see it as over-engineering to alter the PHP behaviour just because it could make it easier for someone at some future date when a method will be added (despite the lack of similar methods having being added in a long time).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Consider that there'd be a inconsistent approach needed to catch it between different classes, eg:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_callable( [ $wp, 'method' ] ) ) {
    echo $wp-&amp;gt;method();
} else {
    fallback_code();
}
try {
    echo $wp_query-&amp;gt;method();
} catch( Exception $e ) {
    fallback_code();
}
// Or something out of left field, more in line with WordPress coding:
$result = $wp_user-&amp;gt;method(); //  __call(..) { return new WP_Error( 'method_does_not_exist', __( 'The called method %s does not exist on WP_User' ) ); }
if ( is_wp_error( $result ) ) {
   fallback_code();
}
&lt;/pre&gt;&lt;p&gt;
tl;dr: I believe &lt;code&gt;trigger_error()&lt;/code&gt; is appropriate in magic methods to mimic PHP behaviour, as it provides a consistent approach between classes. Exceptions are good and all, but I believe they should be used appropriately and not just because they can be used - just like you wouldn't use &lt;code&gt;WP_Error&lt;/code&gt; in this case although it's more inline with current WordPress error handling.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 01:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:4/1619053303889604</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/jrfnl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jrfnl&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-824461076"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Have you considered throwing an Exception instead of using trigger_error() ? What were the arguments to settle on trigger_error() anyway ?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I copied it verbatim from Simplepie in core.&lt;br /&gt;
It appears to mimic what the PHP behaviour would be without the &lt;span class="underline"&gt;call() method existing. If you'd like to suggest an exception instead, I can change to that no problem.&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, yes, I would like to suggest that, but with reason. If I read the ticket correctly, adding the error is intended to prevent developer error by informing them when they are _doing it wrong_, i.e. calling a non-existent method.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Consider then the situation where a new method would be introduced in one of these classes, say in WP 6.2 and a plugin wants to use this new method, but also still needs to (wants to) support WP 5.8-6.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In WP 5.8-6.1, the method doesn't exist yet, so will fall back to &lt;code&gt;__call()&lt;/code&gt; and receive the fatal error, so to prevent this, some checking needs to be done before the call to the method can be made and as the method may only be available via &lt;code&gt;__call()&lt;/code&gt;, not all typical ways to check will work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If it was an &lt;code&gt;Exception&lt;/code&gt;, however, the plugin dev could have used a &lt;code&gt;try-catch&lt;/code&gt; without a second thought, or even the &lt;code&gt;try-catch-finally&lt;/code&gt; trifecta.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Demo:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;trigger_error()&lt;/code&gt;: &lt;a class="ext-link" href="https://3v4l.org/PQvYp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/PQvYp&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;throw new [BadMethodCall]Exception&lt;/code&gt;: &lt;a class="ext-link" href="https://3v4l.org/XtmLn"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/XtmLn&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All together, it is my opinion that using an &lt;code&gt;Exception&lt;/code&gt; will allow plugin developers more freedom in their choice of how to code, as well as allowing for them to write cleaner code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@dd32 What do you think ?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you agree, we may need to discuss what Exception to use for this and/or whether to define a custom exception in WP Core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52624 (Update/Audit npm Dependencies for 5.8) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 00:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52624#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52624#comment:29/1619052885221809</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50782" title="Build/Test Tools: Update the `caniuse-lite` database.
This updates ..."&gt;50782&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Update the &lt;code&gt;caniuse-lite&lt;/code&gt; database.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This updates the &lt;code&gt;caniuse-lite&lt;/code&gt; database to the most recent version (&lt;code&gt;1.0.30001214&lt;/code&gt;) by running &lt;code&gt;npx browserslist@latest --update-db&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The resulting changes after running &lt;code&gt;grunt precommit:css&lt;/code&gt; are also included in this commit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52624" title="#52624: task (blessed): Update/Audit npm Dependencies for 5.8 (closed: fixed)"&gt;#52624&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50782]: Build/Test Tools: Update the `caniuse-lite` database.  This updates ...</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 00:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50782</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50782/1619052884198570</guid>
      <description>&lt;p&gt;
Build/Test Tools: Update the &lt;code&gt;caniuse-lite&lt;/code&gt; database.
&lt;/p&gt;
&lt;p&gt;
This updates the &lt;code&gt;caniuse-lite&lt;/code&gt; database to the most recent version (&lt;code&gt;1.0.30001214&lt;/code&gt;) by running &lt;code&gt;npx browserslist@latest --update-db&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The resulting changes after running &lt;code&gt;grunt precommit:css&lt;/code&gt; are also included in this commit.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52624" title="#52624: task (blessed): Update/Audit npm Dependencies for 5.8 (closed: fixed)"&gt;#52624&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 00:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:3/1619050188526976</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/dd32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dd32&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-824443792"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for your reply @jrfnl &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;The &lt;code&gt;return false&lt;/code&gt; after the &lt;code&gt;trigger_error()&lt;/code&gt; calls can be removed as it is dead code and will never be executed.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I agree, but I was considering that technically the error could be short circuited. I guess I should've just removed it.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Have you considered throwing an &lt;code&gt;Exception&lt;/code&gt; instead of using &lt;code&gt;trigger_error()&lt;/code&gt; ? What were the arguments to settle on &lt;code&gt;trigger_error()&lt;/code&gt; anyway ?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I copied it verbatim from Simplepie in core.&lt;br /&gt;
It appears to mimic what the PHP behaviour would be without the &lt;code&gt;__call()&lt;/code&gt; method existing. If you'd like to suggest an exception instead, I can change to that no problem.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Apr 2021 22:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:1/1619045146500906</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) created</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 21 Apr 2021 22:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069/1619043206669365</guid>
      <description>&lt;p&gt;
This is a tracking ticket to recognize the &lt;a class="ext-link" href="https://web.dev/floc/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;FLoC project and Origin Trial&lt;/a&gt;, monitor its progress, and discuss any actions that WordPress core should take and the implementation details of such. "Provider" refers to the side that is serving the site (CMS, publisher, site admin, etc.) and "consumer" refers to the side viewing the site (browser, reader, etc.).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For a high-level overview, FLoC (Federated Learning of Cohorts) is a Chrome-based initiative to calculate a cohort (henceforth referred to as "bucket") on the browser side for a user based on their browsing activity. It is meant as a replacement for third-party cookies typically used for ad targeting, providing what is supposed to be a somewhat more anonymous bucket of thousands of users to serve as a target rather than you as an individual. It is currently in an "origin trial" phase, in which some users are opted in via their usage of Chrome.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The current stated intention is for sites not to be included in the calculation of which bucket a user/browser instance is assigned to unless they specifically call the FLoC API or contain &lt;a class="ext-link" href="https://twitter.com/rowan_m/status/1383380295336878091"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ad resources&lt;/a&gt;, noting that third-party JS, such as may come with an oEmbed, can also call the FLoC API and cause a page/site to be included in the calculation. Sites can explicitly opt-out of being included in calculations regardless of the content by sending a header. Whether this current intention remains true is one item to be monitored.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Some things that likely need discussion include but are certainly not limited to:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;At what stage of the FLoC trial should WordPress consider taking any action?
&lt;/li&gt;&lt;li&gt;What level of user education should WordPress provide, either in-admin or beyond? Does this education need to extend to general advice on how to vet third-party embeds which are a potential entry point?
&lt;/li&gt;&lt;li&gt;If WordPress were to send the explicit opt-out header by default, what sort of impact would this have on individual users (both providers and consumers) and ad/targeting technology at large?
&lt;/li&gt;&lt;li&gt;What is the benefit of a broad provider-level opt-out versus the existing consumer opt-out?
&lt;/li&gt;&lt;li&gt;How are folks thinking of opt-in vs. opt-out, since you could consider this opting out of using a technology or enforcing an opt-in only model?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 21 Apr 2021 22:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:162</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:162/1619043172814764</guid>
      <description>&lt;p&gt;
One question, in my testing, it seems like thumbnails are not generated on animated webp. Is this an expected behaviour? What is the reasoning behind this? Can we document this well in release notes. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note for the future, I would solve to solve generating thumbnails for animated webp. I would love to convert animated gifs to animated webp and generate thumbnails for this webp. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52867 (Add capability to set default format for image sub-sizes.) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 21 Apr 2021 22:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52867#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52867#comment:17/1619042849256870</guid>
      <description>&lt;p&gt;
Wondering it is would be cleaner to have a filter like this. &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;return apply_filters( 'image_editor_output_format', array( $filename, $new_ext, $mime_type ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Just filter return value of &lt;code&gt;get_output_format&lt;/code&gt; method. Feels a lot more flexible. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52457 (WordPress vulnerable to search-reflected webspam) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 20:46:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52457#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52457#comment:21/1619038012230077</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1619037965105100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52628 (Docblock improvements for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 21 Apr 2021 19:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52628#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52628#comment:17/1619034327030021</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50781" title="Docs: Add a `@since` note to `wp_mail()` about using `is_email()` for ..."&gt;50781&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add a &lt;code&gt;@since&lt;/code&gt; note to &lt;code&gt;wp_mail()&lt;/code&gt; about using &lt;code&gt;is_email()&lt;/code&gt; for validation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48645" title="Mail: PHPMailer swap to use is_email for the default validator.
Prior ..."&gt;[48645]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52628" title="#52628: task (blessed): Docblock improvements for WP 5.8 (closed: fixed)"&gt;#52628&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50781]: Docs: Add a `@since` note to `wp_mail()` about using `is_email()` for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 21 Apr 2021 19:45:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50781</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50781/1619034326085070</guid>
      <description>&lt;p&gt;
Docs: Add a &lt;code&gt;@since&lt;/code&gt; note to &lt;code&gt;wp_mail()&lt;/code&gt; about using &lt;code&gt;is_email()&lt;/code&gt; for validation.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48645" title="Mail: PHPMailer swap to use is_email for the default validator.
Prior ..."&gt;[48645]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52628" title="#52628: task (blessed): Docblock improvements for WP 5.8 (closed: fixed)"&gt;#52628&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52892 (Privacy Export Personal Data: JSON encoding failure generates invalid ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 19:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52892#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52892#comment:8/1619033632507071</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/hellofromtonya"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;hellofromtonya&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1115#issuecomment-824305535"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1115&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Committed with changeset &lt;a href="https://core.trac.wordpress.org/changeset/50713"&gt;https://core.trac.wordpress.org/changeset/50713&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51423 (Fix function argument type issues reported by PHPStan) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 19:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51423#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51423#comment:102/1619033632479272</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/hellofromtonya"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;hellofromtonya&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1115#issuecomment-824305535"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1115&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Committed with changeset &lt;a href="https://core.trac.wordpress.org/changeset/50713"&gt;https://core.trac.wordpress.org/changeset/50713&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 21 Apr 2021 18:51:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:34/1619031094800284</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50780" title="Coding Standards: Use strict comparison in ..."&gt;50780&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/includes/class-wp-terms-list-table.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Includes minor code layout fixes for better readability.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50780]: Coding Standards: Use strict comparison in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 21 Apr 2021 18:51:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50780</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50780/1619031093845557</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/includes/class-wp-terms-list-table.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Includes minor code layout fixes for better readability.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Wed, 21 Apr 2021 18:29:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:33/1619029799587577</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50779" title="Coding Standards: Fix minor, inline spacing issue in ..."&gt;50779&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Fix minor, inline spacing issue in &lt;code&gt;wp-admin/setup-config.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50779]: Coding Standards: Fix minor, inline spacing issue in ...</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Wed, 21 Apr 2021 18:29:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50779</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50779/1619029798561091</guid>
      <description>&lt;p&gt;
Coding Standards: Fix minor, inline spacing issue in &lt;code&gt;wp-admin/setup-config.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52654 (Check and recommend intl extension in Site Health) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 18:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52654#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52654#comment:7/1619029477721905</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #hosting-community by jadonn. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/hosting-community/p1619029475352600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53059 (Coding Standards: Give some variables in WP_Widget_Pages a more ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 21 Apr 2021 18:17:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53059#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53059#comment:5/1619029061784550</guid>
      <description>&lt;p&gt;
Thanks so much for this ticket and patch, @mukesh27!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the future when reporting coding standards issues like this, please try to review entire files at a time and detail which files you reviewed when you discovered the issue. For example, I just reviewed the other classes in &lt;code&gt;wp-includes/widgets&lt;/code&gt; for this same issue, and it seems the only occurrence is in &lt;code&gt;WP_Widget_Pages&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Changes like this are also really great for adding the &lt;code&gt;good-first-bug&lt;/code&gt; keyword to. It's important to leave some easier tickets for contributors just getting involved with WordPress so that there are tickets they can feel confident jumping into!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, every release has a coding standards improvement task. For 5.8, it's &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;. If there are small, one off changes like this, they can be posted on the task ticket for the current release. It helps group all of the coding standards related changes in one place for future reference.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45785 (Update Underscore to the latest version) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 17:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45785#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45785#comment:26/1619027650562970</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/dream-encode"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dream-encode&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1203#issuecomment-824247601"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1203&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merged into core in &lt;a href="https://core.trac.wordpress.org/changeset/50778"&gt;https://core.trac.wordpress.org/changeset/50778&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45785 (Update Underscore to the latest version) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Wed, 21 Apr 2021 17:53:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45785#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45785#comment:25/1619027602267723</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50778" title="External Libraries: Update Underscore to version 1.13.1.
A full set ..."&gt;50778&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
External Libraries: Update Underscore to version 1.13.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A full set of changes can be found on GitHub: &lt;a class="ext-link" href="https://github.com/jashkenas/underscore/compare/1.12.1...1.13.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jashkenas/underscore/compare/1.12.1...1.13.1&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50650" title="External Libraries: Update Underscore to version 1.12.1.
Full set of ..."&gt;[50650]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props hareesh-pillai.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/45785" title="#45785: enhancement: Update Underscore to the latest version (closed: fixed)"&gt;#45785&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50778]: External Libraries: Update Underscore to version 1.13.1.  A full set ...</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Wed, 21 Apr 2021 17:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50778</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50778/1619027601240607</guid>
      <description>&lt;p&gt;
External Libraries: Update Underscore to version 1.13.1.
&lt;/p&gt;
&lt;p&gt;
A full set of changes can be found on GitHub: &lt;a class="ext-link" href="https://github.com/jashkenas/underscore/compare/1.12.1...1.13.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jashkenas/underscore/compare/1.12.1...1.13.1&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50650" title="External Libraries: Update Underscore to version 1.12.1.
Full set of ..."&gt;[50650]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props hareesh-pillai.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/45785" title="#45785: enhancement: Update Underscore to the latest version (closed: fixed)"&gt;#45785&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #45785 (Update Underscore to the latest version) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 17:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45785#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45785#comment:24/1619027015406348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1203"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1203&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/dream-encode"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dream-encode&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/45785"&gt;https://core.trac.wordpress.org/ticket/45785&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53016 (Robots API) updated</title>
      
        <dc:creator>kraevit</dc:creator>

      <pubDate>Wed, 21 Apr 2021 17:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53016#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53016#comment:7/1619026293899005</guid>
      <description>&lt;p&gt;
I am really sorry for disturbing you. The problem was actually caused by my paid wp theme - listify. I didn't expect that latest theme update will cause this issue. Also I was frustrated since my client was angry because the bug affected his entire business. Now it's solved and all works fine. Sorry again and thanks for the provided information. My bad!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53016 (Robots API) closed</title>
      
        <dc:creator>kraevit</dc:creator>

      <pubDate>Wed, 21 Apr 2021 17:26:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53016#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53016#comment:6/1619026007729825</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53016#comment:5" title="Comment 5"&gt;adamsilverstein&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@kraevit it is possible your theme is causing the issue, or perhaps some other code running in your environment (maybe an mu plugin)?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can you try switching temporarily to a core default theme, disabling all plugins and see if the issue persists? If possible can you enable logging and see if there are any errors in your logs?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As Dion points out above, this is very unlikely to be a widespread core bug or we would have had many reports of it already - it is somehow triggered by your setup.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 21 Apr 2021 17:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:24/1619025981521664</guid>
      <description>&lt;p&gt;
From &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50777" title="Editor: Shape block editor filters to work better with the Gutenberg ..."&gt;[50777]&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$block_categories = apply_filters( 'block_categories_all', $block_categories, $editor_name );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If the variable filter &lt;code&gt;block_categories_{$editor_name}&lt;/code&gt; is not needed, and nothing is changing about the &lt;code&gt;$block_categories&lt;/code&gt; parameter, then it may be that &lt;code&gt;block_categories&lt;/code&gt; does not need to be deprecated. We can just add &lt;code&gt;$editor_name&lt;/code&gt; as a new parameter. Otherwise it seems like the &lt;code&gt;block_categories_all&lt;/code&gt; and &lt;code&gt;block_categories&lt;/code&gt; filters are effectively the same thing.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51750 (Update webpack to version 5.x) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 21 Apr 2021 16:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51750#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51750#comment:2/1619024385787006</guid>
      <description>&lt;p&gt;
Related &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43731" title="#43731: task (blessed): Use Webpack + NPM scripts to build all the things (accepted)"&gt;#43731&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52867 (Add capability to set default format for image sub-sizes.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 21 Apr 2021 16:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52867#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52867#comment:16/1619021778146441</guid>
      <description>&lt;p&gt;
Just tested, and this looks to work pretty well, thank you!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Two notes:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I noticed that the default image editor on my environment, Imagick, did not support WebP. GD on the same system did support WebP, but it wasn't used because the editor is chosen on whether it supports the format being loaded. This is an existing problem, really -- but figured it was worth mentioning.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I wonder if we should name this filter &lt;code&gt;image_editor_output_format&lt;/code&gt; to line up with the existing &lt;code&gt;image_editor_default_mime_type&lt;/code&gt; and &lt;code&gt;image_editor_save_pre&lt;/code&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53067 (WordPress about page contain space) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 21 Apr 2021 16:05:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53067#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53067#comment:4/1619021142486991</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch ready.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt; * Please note that this patch shouldn't be committed into trunk but directly on branch 5.7 * &lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>53067.diff attached to Ticket #53067</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 21 Apr 2021 16:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53067/53067.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53067/53067.diff/1619020999717081</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>screencapture-localhost-8888-wordpress-develop-wordpress-develop-build-wp-admin-about-php-2021-04-21-17_58_54.png attached to Ticket #53067</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 21 Apr 2021 15:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53067/screencapture-localhost-8888-wordpress-develop-wordpress-develop-build-wp-admin-about-php-2021-04-21-17_58_54.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53067/screencapture-localhost-8888-wordpress-develop-wordpress-develop-build-wp-admin-about-php-2021-04-21-17_58_54.png/1619020796324355</guid>
      <description>&lt;p&gt;
After patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52867 (Add capability to set default format for image sub-sizes.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 21 Apr 2021 15:31:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52867#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52867#comment:15/1619019112364152</guid>
      <description>&lt;p&gt;
@adamsilverstein I like the idea of adding a filter, thank you!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'll give it a review + test.&lt;br /&gt;
Agreed that a test for the filter is a good idea.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Wanted to also add -- I think it's fine and perhaps helpful to continue to have a ticket (whether this one or a different one) for the proposed feature so that discussion can continue, even if it ends up becoming a feature project / plugin.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53016 (Robots API) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 21 Apr 2021 15:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53016#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53016#comment:5/1619018886763816</guid>
      <description>&lt;p&gt;
@kraevit it is possible your theme is causing the issue, or perhaps some other code running in your environment (maybe an mu plugin)?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can you try switching temporarily to a core default theme, disabling all plugins and see if the issue persists? If possible can you enable logging and see if there are any errors in your logs?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As Dion points out above, this is very unlikely to be a widespread core bug or we would have had many reports of it already - it is somehow triggered by your setup.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53068 (Include Site Health Status notices within a users Site Health Info) created</title>
      
        <dc:creator>jamesosborne</dc:creator>

      <pubDate>Wed, 21 Apr 2021 14:47:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53068</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53068/1619016459399216</guid>
      <description>&lt;p&gt;
From a support perspective obtaining a users Site Health information provides great insights into a users setup. &lt;em&gt;(Tools &amp;gt; Site Health &amp;gt; info &amp;gt; Copy site info to clipboard)&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In some cases some of the "Critical issues" or "Recommended improvements" would also be a good addition to a users Site Health information. At present these highlighted issues and improvements appear only in the "Site Health Status" tab. While being mindful of outputting security vulnerabilities please considering adding them to the Site Health information output. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The below notices would in particular be useful should a users site be impacted:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The REST API encountered an error
&lt;/li&gt;&lt;li&gt;Background updates are not working as expected
&lt;/li&gt;&lt;li&gt;Your site would not complete a loopback request
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/TOaXEpV.png"&gt;&lt;img src="https://i.imgur.com/TOaXEpV.png" alt="https://i.imgur.com/TOaXEpV.png" crossorigin="anonymous" title="https://i.imgur.com/TOaXEpV.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53067 (WordPress about page contain space) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 21 Apr 2021 14:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53067#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53067#comment:3/1619015014101464</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ok thanks for the feedback and the screenshot @sabernhardt.&lt;br /&gt;
Let's just remove the &lt;code&gt;is-large&lt;/code&gt; class then (just like we did for the upper &lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt; tag.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52976 (user emails comparison should be case insensitive) updated</title>
      
        <dc:creator>paaggeli</dc:creator>

      <pubDate>Wed, 21 Apr 2021 14:22:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52976#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52976#comment:6/1619014973059649</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>52976.diff attached to Ticket #52976</title>
      
        <dc:creator>paaggeli</dc:creator>

      <pubDate>Wed, 21 Apr 2021 14:21:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52976/52976.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52976/52976.diff/1619014866800655</guid>
      <description>&lt;p&gt;
case-insensitive email comparison using strcasecmp() function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53067 (WordPress about page contain space) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Wed, 21 Apr 2021 14:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53067#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53067#comment:2/1619014743968197</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The &lt;code&gt;is-large&lt;/code&gt; class gives an extra-large gap below the Maintenance and Security Releases section.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The screenshot uploaded on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52911" title="#52911: task (blessed): Update the About page for 5.7.1 (closed: fixed)"&gt;#52911&lt;/a&gt;:&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/52911/About-5.7.1.png"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/52911/About-5.7.1.png" alt="https://core.trac.wordpress.org/raw-attachment/ticket/52911/About-5.7.1.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/52911/About-5.7.1.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It wasn't enough of a problem to delay the 5.7.1 release, but I would like to reduce the spacing with the 5.7.2 update.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 13:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:16/1619011292260668</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/donmhico"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;donmhico&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/880#issuecomment-824056409"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #880&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@peterwilsoncc thanks for pinging me. It's been a while since I worked on this one so i'll take a look again why I added the &lt;code&gt;$force&lt;/code&gt; param in there. I'll get back to you as soon as I can.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53067 (WordPress about page contain space) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 21 Apr 2021 13:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53067#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53067#comment:1/1619010553450532</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello and welcome to WordPress Trac @dhrumil12,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This spacer was added on purpose during 5.7 release cycle.&lt;br /&gt;
Can you please elaborate on the reasons why we should remove it (and where exactly on the about page) ?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If it happens that this change is really necessary, it should be addressed in one of the next minor releases. But honestly, I'm not sure this is an issue. For the moment, let's keep this ticket open, though, waiting for your feedback.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52653 (Run GitHub Action workflows for testing old branches on a schedule) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 12:38:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52653#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52653#comment:38/1619008710963407</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/desrosj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;desrosj&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1194#issuecomment-824027075"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1194&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merged into Core in &lt;a href="https://core.trac.wordpress.org/changeset/50763"&gt;https://core.trac.wordpress.org/changeset/50763&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53067 (WordPress about page contain space) created</title>
      
        <dc:creator>dhrumil12</dc:creator>

      <pubDate>Wed, 21 Apr 2021 12:09:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53067</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53067/1619006942612574</guid>
      <description>&lt;p&gt;
i think &lt;strong&gt;&amp;lt;hr class = "is-large"&amp;gt;&lt;/strong&gt; this tag is not need in WordPress about page&lt;br /&gt;
(about.php)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53048 (PHPMailer uses hardcoded default sender mail address, preventing mail ...) updated</title>
      
        <dc:creator>vinc17</dc:creator>

      <pubDate>Wed, 21 Apr 2021 10:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53048#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53048#comment:7/1619002212817807</guid>
      <description>&lt;p&gt;
Note that the admin of the website is not necessarily the same as the admin in charge of e-mail. So it is important to get instructions at WordPress installation time or at least technical information. I thought that the WordPress installation was complete after following the instructions, but this actually wasn't the case, and I wasn't aware of that. In the WordPress general settings, there is an admin e-mail address, but it is not used as the default From address, so that this is surprising. One could also expect that the (Unix) login be used for the e-mail address, as this is the default for various tools (so that it should have worked). So, since WordPress uses something specific, it should have documented it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note also that there are good reasons to reject non-existing e-mail addresses, e.g. to limit phishing attempts or to detect MUA misconfigurations. Moreover, using wordpress@ is a bad idea because there may be multiple WordPress installations (with different admins) at this domain, and they shouldn't share the same address. Troubleshooting tips available on the web are not satisfactory in general (at least those I've found); they do not replace instructions.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Wed, 21 Apr 2021 09:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:23/1618997441019273</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50777" title="Editor: Shape block editor filters to work better with the Gutenberg ..."&gt;50777&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: Shape block editor filters to work better with the Gutenberg plugin&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This should allow to use new filters in the Gutenberg plugin and therefore it prevents deprecation warnings when in the debug mode.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52920" title="#52920: enhancement: Editor: Abstract block editor configuration (closed: fixed)"&gt;#52920&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50777]: Editor: Shape block editor filters to work better with the Gutenberg ...</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Wed, 21 Apr 2021 09:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50777</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50777/1618997440076759</guid>
      <description>&lt;p&gt;
Editor: Shape block editor filters to work better with the Gutenberg plugin
&lt;/p&gt;
&lt;p&gt;
This should allow to use new filters in the Gutenberg plugin and therefore it prevents deprecation warnings when in the debug mode.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52920" title="#52920: enhancement: Editor: Abstract block editor configuration (closed: fixed)"&gt;#52920&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52654 (Check and recommend intl extension in Site Health) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 09:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52654#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52654#comment:6/1618996965969709</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #hosting-community by javier. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/hosting-community/p1618996963336400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52654 (Check and recommend intl extension in Site Health) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 09:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52654#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52654#comment:5/1618996715216806</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #hosting-community by javier. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/hosting-community/p1618996712332400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Wed, 21 Apr 2021 08:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:22/1618994052666780</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Wed, 21 Apr 2021 08:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:21/1618994038254392</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 21 Apr 2021 07:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:2/1618991393400213</guid>
      <description>&lt;p&gt;
The code in the above PR was copied almost verbatim from &lt;code&gt;SimplePie::__call()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 07:40:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:1/1618990834251076</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/dd32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dd32&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53066"&gt;https://core.trac.wordpress.org/ticket/53066&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 21 Apr 2021 07:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066/1618990824392781</guid>
      <description>&lt;p&gt;
Numerous WordPress classes include a &lt;code&gt;__call()&lt;/code&gt; function for back-compat, however, simply return false on invalid calls.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example, the following code outputs 'No' even though it should be a fatal error.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_query = new WP_Query();
echo $wp_query-&amp;gt;delete_all_posts() ? 'Yes' : 'No';
&lt;/pre&gt;&lt;p&gt;
This can cause logic errors, where someone were to use something like: &lt;code&gt;WP_User::has_role( 'something' )&lt;/code&gt; and expect to receive true/false, but only ever get false. (Note that &lt;code&gt;has_role()&lt;/code&gt; doesn't exist and won't exist: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22624#comment:10" title="Comment 10 for #22624: feature request: New current_user_has_role function to work for roles like ... (closed: wontfix)"&gt;10:ticket:22624&lt;/a&gt;)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 05:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:20/1618982372211979</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/gziolo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;gziolo&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1118#issuecomment-823783832"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1118&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I merged most of the changes included in this PR with &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/commit/a19f589a5f9d5c1c44b55971fa33ddf6fda653f3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/commit/a19f589a5f9d5c1c44b55971fa33ddf6fda653f3&lt;/a&gt;. I left out &lt;code&gt;block_editor_preload_api_requests&lt;/code&gt; that requires more work.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Wed, 21 Apr 2021 05:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:19/1618981857658060</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50776" title="Editor: Abstract block editor configuration
There are several ..."&gt;50776&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: Abstract block editor configuration&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are several WordPress hooks defined on the server that depend on $post object that isn’t present on the new screens like edit site, edit widgets, or edit navigation. This patch deprecates existing filters and introduces replacements that are context-aware.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props azaozz, andraganescu, jeremyfelt, nosolosw, youknowriad.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52920" title="#52920: enhancement: Editor: Abstract block editor configuration (closed: fixed)"&gt;#52920&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50776]: Editor: Abstract block editor configuration  There are several ...</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Wed, 21 Apr 2021 05:10:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50776</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50776/1618981856700853</guid>
      <description>&lt;p&gt;
Editor: Abstract block editor configuration
&lt;/p&gt;
&lt;p&gt;
There are several WordPress hooks defined on the server that depend on $post object that isn’t present on the new screens like edit site, edit widgets, or edit navigation. This patch deprecates existing filters and introduces replacements that are context-aware.
&lt;/p&gt;
&lt;p&gt;
Props azaozz, andraganescu, jeremyfelt, nosolosw, youknowriad.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52920" title="#52920: enhancement: Editor: Abstract block editor configuration (closed: fixed)"&gt;#52920&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53065 (wp_mail return values should be filterable) created</title>
      
        <dc:creator>shawfactor</dc:creator>

      <pubDate>Wed, 21 Apr 2021 03:52:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53065</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53065/1618977120499653</guid>
      <description>&lt;p&gt;
Firstly yes I know wp_amil is a pluggable function. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But right now having to overwrite thw whole function just to be bale to change the return value of wp_mail is not only overkill but limits ofrward compatibility of any code written.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I propose that the return values be filterable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
My ow use case is that ive built an email queue and filter wp_mail attaributes to force emails onto the queue. The problem this causes is that other plugins are saying that they emails  are not sent (which is sort of true in the sense they are not sent right away, but are later)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A filter would overcome this problem and I am sure similar ones for other users&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52457 (WordPress vulnerable to search-reflected webspam) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 02:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52457#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52457#comment:20/1618972689803587</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by poena. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1618972687409600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51423 (Fix function argument type issues reported by PHPStan) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Wed, 21 Apr 2021 02:24:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51423#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51423#comment:101/1618971840020139</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/722#issuecomment-823726022"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #722&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Committed in &lt;a href="https://core.trac.wordpress.org/changeset/50775"&gt;https://core.trac.wordpress.org/changeset/50775&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52440 ("Leave site? Changes you made may not be saved" on custom taxonomy ...) updated</title>
      
        <dc:creator>yacsha</dc:creator>

      <pubDate>Wed, 21 Apr 2021 01:48:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52440#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52440#comment:57/1618969735794301</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The problem is still presented in version 5.6.3 as seen in this video (&lt;a class="ext-link" href="https://imgur.com/a/teO3WSA"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://imgur.com/a/teO3WSA&lt;/a&gt;), which I explain below:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I use the classic editor in HTML mode and edit the text of a page
&lt;/li&gt;&lt;li&gt;I add the text: "test edit", then press the Update button and the irritating "Leave Site?" is shown
&lt;/li&gt;&lt;li&gt;I click on Leave Site and the changes to the page are saved
&lt;/li&gt;&lt;li&gt;Again I make changes to the page, deleting the text "test edit", but this time I press cancel, and the Update button remains working in a infinite loop
&lt;/li&gt;&lt;li&gt;I refresh the browser page and verify that my changes were not saved
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51423 (Fix function argument type issues reported by PHPStan) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Wed, 21 Apr 2021 01:31:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51423#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51423#comment:100/1618968706218247</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50775" title="Upgrade/Install: Prevent possible type errors during installation.
 ..."&gt;50775&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade/Install: Prevent possible type errors during installation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prevent a &lt;code&gt;TypeError&lt;/code&gt; from occurring during installation if &lt;code&gt;wp-config.php&lt;/code&gt; is not writable. In PHP 8.0 this can cause a fatal error, in earlier versions of PHP a warning would be thrown.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Account for a change in type returned by &lt;code&gt;fopen()&lt;/code&gt; coming in a future version of PHP. Minor coding standards fixes in the &lt;code&gt;/wp-admin/setup-config.php&lt;/code&gt; file.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props xknown, hellofromTonya, jrf, peterwilsoncc.&lt;br /&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/51423" title="#51423: task (blessed): Fix function argument type issues reported by PHPStan (assigned)"&gt;#51423&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50775]: Upgrade/Install: Prevent possible type errors during installation.  ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Wed, 21 Apr 2021 01:31:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50775</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50775/1618968705226070</guid>
      <description>&lt;p&gt;
Upgrade/Install: Prevent possible type errors during installation.
&lt;/p&gt;
&lt;p&gt;
Prevent a &lt;code&gt;TypeError&lt;/code&gt; from occurring during installation if &lt;code&gt;wp-config.php&lt;/code&gt; is not writable. In PHP 8.0 this can cause a fatal error, in earlier versions of PHP a warning would be thrown.
&lt;/p&gt;
&lt;p&gt;
Account for a change in type returned by &lt;code&gt;fopen()&lt;/code&gt; coming in a future version of PHP. Minor coding standards fixes in the &lt;code&gt;/wp-admin/setup-config.php&lt;/code&gt; file.
&lt;/p&gt;
&lt;p&gt;
Props xknown, hellofromTonya, jrf, peterwilsoncc.
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/51423" title="#51423: task (blessed): Fix function argument type issues reported by PHPStan (assigned)"&gt;#51423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Wed, 21 Apr 2021 01:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:15/1618968582501108</guid>
      <description>&lt;p&gt;
I've pushed a couple of further changes to the pull request but super minor things.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not sure of the purpose of the new &lt;code&gt;$force&lt;/code&gt; parameter so have asked for some clarification there.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53032 (Privacy: "Retry" action link on "Export Personal Data" page does not work) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Wed, 21 Apr 2021 01:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53032#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53032#comment:2/1618967083865399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@NomNom99 Thanks for the patch!  The second approach looks better to me.  Updating the keywords here to ask for testing of your fix.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>