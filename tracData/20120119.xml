<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>19852.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 19 Jan 2012 22:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852.diff/1327013073080290</guid>
      <description>&lt;p&gt;
First pass at loading the new mo files
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19437 (Pass post type as a class to TinyMCE init) updated</title>
      
        <dc:creator>gluten</dc:creator>

      <pubDate>Thu, 19 Jan 2012 21:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19437#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19437#comment:4/1327008662732918</guid>
      <description>&lt;p&gt;
It would also be useful to have a class added with the wp_editor() $editor_id to allow for unique styling of TinyMCE editors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19437 (Pass post type as a class to TinyMCE init) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 19 Jan 2012 21:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19437#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19437#comment:3/1327008555400693</guid>
      <description>&lt;p&gt;
Just dropping a note while it's on my mind, this will become increasingly more important as plugins (like bbPress/BuddyPress) start including wp_editor() in places outside of the traditional post editor; within the theme, for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19599.diff attached to Ticket #19599</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 21:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19599/19599.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19599/19599.diff/1327007287925975</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19689 (Context for Dismiss) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 20:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19689#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19689#comment:3/1327005576543510</guid>
      <description>&lt;p&gt;
There are a number of contexts here. How exactly should they be split?
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;"Dismiss" to hide an inline error message (async-upload.php, and the second one in script-loader.php)
&lt;/li&gt;&lt;li&gt;"Dismiss" to hide a boxed area (dashboard.php, both instances — Browse Happy and the Welcome panel)
&lt;/li&gt;&lt;li&gt;"Dismiss" to close a pointer (the first one in script-loader.php)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The contexts for the first bullet point are "Cancel upload" (per the patch) and the second and third points are "Close window" (per the patch). Is there a difference between what is occurring in points 2 and 3? To me, I'd think that point 2 is aligned with point 1, not point 3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Jan 2012 19:47:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855#comment:3/1327002446083340</guid>
      <description>&lt;p&gt;
Generally wpautop should be leaving the content of the &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tags untouched. How about we replace any &lt;code&gt;&amp;lt;pre&amp;gt; ... &amp;lt;/pre&amp;gt;&lt;/code&gt; with placeholders at the beginning and put them back at the end? That would not only remove this preg_replace_callback() (and the backtracking) but also speed up wpautop as it wouldn't backtrack through these parts of the post_content.
&lt;/p&gt;
&lt;p&gt;
Coding this wouldn't be hard: &lt;code&gt;preg_split('|&amp;lt;/?pre[ &amp;gt;]|', $pee, -1, PREG_SPLIT_DELIM_CAPTURE)&lt;/code&gt;, then go through the array and replace strings starting with &lt;code&gt;&amp;lt;pre&lt;/code&gt; with incremental placeholder, keeping them for later in an &lt;code&gt;array('placeholder_#' =&amp;gt; 'string', ...)&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19852-makepot.5.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 19 Jan 2012 19:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.5.diff/1327001498590204</guid>
      <description>&lt;p&gt;
User and site admin in same pot. Dupe removal for net admin pot.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19852-makepot.4.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 19 Jan 2012 19:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.4.diff/1326999985378015</guid>
      <description>&lt;p&gt;
With some fixes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19589 (Simplify the recording of backtraces) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 18:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19589#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19589#comment:4/1326998403262966</guid>
      <description>&lt;p&gt;
I think it would be better for the function to return an array that can then be imploded. For example someone may wish to turn this into a list, or reverse it first, before printing it. The comma is a bit hard-coded in.
&lt;/p&gt;
&lt;p&gt;
Beyond that, +1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18909 (Bundled jQuery UI should have CSS) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 19 Jan 2012 17:47:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18909#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18909#comment:35/1326995221199282</guid>
      <description>&lt;p&gt;
I think that in the event of a major WP admin refresh, or a major jQuery-UI update, retracing (redoing) the steps above might be better then forking the current state of the theme and back-applying compatibility for the (possibly cryptic or even drastic) wp-admin or jquery-ui changes.
&lt;/p&gt;
&lt;p&gt;
It comes down to whether its easier redoing the two github commits or search/replacing whatever changes occur in wp-admin or jquery-ui (which really depends on how significant those changes are). With major changes the former is better; minor changes, the latter is better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18909 (Bundled jQuery UI should have CSS) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 19 Jan 2012 17:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18909#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18909#comment:34/1326993863234572</guid>
      <description>&lt;p&gt;
To follow the development so far, these are the steps taken to date:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
The original base for the CSS was "Smoothness" &lt;a class="ext-link" href="http://jqueryui.com/themeroller/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://jqueryui.com/themeroller/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Smoothness" was altered using ThemeRoller to arrive at the initial commit for github (See CSS source for the url link which shows this ThemeRoller configuration)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
"CSS3 gradients instead of images, blue gradient for progress bar" &lt;a class="ext-link" href="https://github.com/helenhousandi/wp-admin-jquery-ui/commit/ea08c09bbca3f73be325e67b879659a78dd7f882"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/helenhousandi/wp-admin-jquery-ui/commit/ea08c09bbca3f73be325e67b879659a78dd7f882&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Better matched overlay and drop shadow (per F J Kaiser)" &lt;a class="ext-link" href="https://github.com/helenhousandi/wp-admin-jquery-ui/commit/7c3c4de3e3de97aeb6be37e9274fdccaadf60ec4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/helenhousandi/wp-admin-jquery-ui/commit/7c3c4de3e3de97aeb6be37e9274fdccaadf60ec4&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You should now be all caught up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #761 (Add hook to conditionally disable comment notifications) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/761#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/761#comment:6/1326991650515873</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Epic revival.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8592 (Private Pages not listed in the Parent dropdown) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8592#comment:138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8592#comment:138/1326991523789300</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Definitely needs refresh. I discovered another issue today where if you assign a page as a child of another page, and then set that parent page's status to private, the child page is still associated with the parent but the dropdown list on the child pages shows (no parent).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19027 (XML-RPC metaWeblog.getPost and metaWeblog.getRecentPosts don't return ...) updated</title>
      
        <dc:creator>ocollet</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:42:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19027#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19027#comment:5/1326991353186713</guid>
      <description>&lt;p&gt;
I was actually trying to get consistent with the &lt;code&gt;postCreated&lt;/code&gt; property, therefore my suggestion to have the following fields:
&lt;code&gt;postCreated&lt;/code&gt;, &lt;code&gt;postModified&lt;/code&gt;, &lt;code&gt;post_date_gmt&lt;/code&gt; and &lt;code&gt;post_modified_gmt&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19027#comment:4" title="Comment 4"&gt;ericmann&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19027#comment:3" title="Comment 3"&gt;maxcutler&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you only expose the GMT version, then XML-RPC clients have to do their own datetime math (and call getOption to figure out the blog display timezone) to determine what the displayed value should be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree.  We should expose both the GMT and local post modified fields ... but we should be consistent in how we name them.  If we're using &lt;code&gt;post_modified_gmt&lt;/code&gt; we should also use &lt;code&gt;post_modified&lt;/code&gt; rather than &lt;code&gt;postModified&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13917 (wp.uploadFile cannot be attached to any post) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13917#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13917#comment:5/1326991009120935</guid>
      <description>&lt;p&gt;
Updated diff looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18683 (XMLRPC wp.getMediaLibrary doesn't return attachment ids) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18683#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18683#comment:4/1326990944985275</guid>
      <description>&lt;p&gt;
+1 On returning IDs.  I know of at least 2 XMLRPC clients that would benefit from this addition.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18126 (Expose image options on XML-RPC) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:34:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18126#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18126#comment:6/1326990867978636</guid>
      <description>&lt;p&gt;
Looks fine to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19027 (XML-RPC metaWeblog.getPost and metaWeblog.getRecentPosts don't return ...) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19027#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19027#comment:4/1326990704488302</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19027#comment:3" title="Comment 3"&gt;maxcutler&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you only expose the GMT version, then XML-RPC clients have to do their own datetime math (and call getOption to figure out the blog display timezone) to determine what the displayed value should be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree.  We should expose both the GMT and local post modified fields ... but we should be consistent in how we name them.  If we're using &lt;code&gt;post_modified_gmt&lt;/code&gt; we should also use &lt;code&gt;post_modified&lt;/code&gt; rather than &lt;code&gt;postModified&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment.php.r19734.diff attached to Ticket #761</title>
      
        <dc:creator>jeffstieler</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:16:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/761/comment.php.r19734.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/761/comment.php.r19734.diff/1326989796969402</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #761 (Add hook to conditionally disable comment notifications) reopened</title>
      
        <dc:creator>jeffstieler</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:16:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/761#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/761#comment:5/1326989782946582</guid>
      <description>&lt;p&gt;
The "just rewrite them" response needs to be reconsidered as the &lt;code&gt;wp_notify_postauthor&lt;/code&gt; function is about 100 lines long now.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19858 (Close comments on attached images) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19858#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19858#comment:2/1326989635451274</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19858/19858.diff" title="Attachment '19858.diff' in Ticket #19858"&gt;19858.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19858/19858.diff" title="Download"&gt;​&lt;/a&gt; simply adds 'attachment' to the array of post types to be closed. It's kind of weak — we should probably check the parent of the attachment to ensure it is either 0 or a post type of 'post' (the filter result) before continuing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19858.diff attached to Ticket #19858</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19858/19858.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19858/19858.diff/1326989535280013</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19858 (Close comments on attached images) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19858#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19858#comment:1/1326989493787923</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Caused by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16090" title="#16090: enhancement: _close_comments_for_old_posts should not close pages (closed: fixed)"&gt;#16090&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16090 (_close_comments_for_old_posts should not close pages) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16090#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16090#comment:12/1326989474983162</guid>
      <description>&lt;p&gt;
We forgot about attachments here. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19858" title="#19858: defect (bug): Close comments on attached images (closed: duplicate)"&gt;#19858&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19858 (Close comments on attached images) created</title>
      
        <dc:creator>dohman</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19858/1326988983868419</guid>
      <description>&lt;p&gt;
In posts, for gallery images and individual images which open in an attachment page when clicked, the image attachment page does not close comments after the designated xx days as the original post does.
&lt;/p&gt;
&lt;p&gt;
This creates a pile of spam to manage for users that rely on closed comments after xx days and post lots of images.
&lt;/p&gt;
&lt;p&gt;
You can replicate the problem with these steps:
1) In Discussion Settings: set comments to close after 1 day. 'Automatically close comments on articles older than 1 days'
&lt;/p&gt;
&lt;p&gt;
2)Create a post with publish date 2 days ago. Insert an image or gallery which opens in in an attachment page, not just as the image file.
&lt;/p&gt;
&lt;p&gt;
3) The post will have comments closed.
&lt;/p&gt;
&lt;p&gt;
4) The image attachment page will still have comments open.
&lt;/p&gt;
&lt;p&gt;
Here's a test post of mine. Notice the comments closed on the post but still open for the images.
&lt;a class="ext-link" href="http://hackhappy.wordpress.com/2012/01/17/image-attachment-comment-test/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://hackhappy.wordpress.com/2012/01/17/image-attachment-comment-test/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Bottom Line: Comments should also close after xx days for image attachments, just as the post does. Users reasonably expect this.
&lt;/p&gt;
&lt;p&gt;
Check the post type for image attachment page. It may be marked as a regular page as pages are not controlled by this setting.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19815 (Theme install and search screens should infinitely scroll) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 15:05:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19815#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19815#comment:9/1326985542409480</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19815#comment:8" title="Comment 8"&gt;garyc40&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There should be some way for the user to quickly scroll to top to navigate to other pages, or refine their search criteria.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hooray for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18578" title="#18578: defect (bug): Remove unused (?) 'hierarchical' arg from register_post_status defaults (closed: fixed)"&gt;#18578&lt;/a&gt;, then! Will keep the rest of your points in mind as we get on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10142 (Add metadata support for taxonomy terms) updated</title>
      
        <dc:creator>Mamaduka</dc:creator>

      <pubDate>Thu, 19 Jan 2012 14:50:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10142#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10142#comment:56/1326984654609644</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19232 (Smush admin images to lower file size) updated</title>
      
        <dc:creator>l3rady</dc:creator>

      <pubDate>Thu, 19 Jan 2012 14:39:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19232#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19232#comment:6/1326983951409318</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19232 (Smush admin images to lower file size) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 14:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19232#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19232#comment:5/1326983710391485</guid>
      <description>&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19857" title="#19857: enhancement: PNG Optimization or core images (closed: duplicate)"&gt;#19857&lt;/a&gt; as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19857 (PNG Optimization or core images) closed</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 14:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19857#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19857#comment:1/1326983690526273</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19232" title="#19232: enhancement: Smush admin images to lower file size (closed: fixed)"&gt;#19232&lt;/a&gt;, which has files attached from the &lt;code&gt;wp-admin&lt;/code&gt; and &lt;code&gt;wp-includes&lt;/code&gt; folders.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) updated</title>
      
        <dc:creator>AdamBackstrom</dc:creator>

      <pubDate>Thu, 19 Jan 2012 12:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855#comment:2/1326975876573065</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is affected by the &lt;code&gt;pcre.backtrack_limit&lt;/code&gt; in php.ini. The default in PHP &amp;lt; 5.3.7 was 100000, and in PHP 5.3.7 they increased limit 10x, which is still 10x lower than PCRE internal defaults.
&lt;/p&gt;
&lt;p&gt;
You observe the limit with this bit of code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function clean_pre($matches) {
	return $matches[1] . $matches[2] . "&amp;lt;/pre&amp;gt;";
}
$pee = '&amp;lt;pre&amp;gt;' . str_repeat( 'a', 99995 ) . '&amp;lt;/pre&amp;gt;';
ini_set( 'pcre.backtrack_limit', 100000 ); // php &amp;lt; 5.3.7 default
$pee = preg_replace_callback('!(&amp;lt;pre[^&amp;gt;]*&amp;gt;)(.*?)&amp;lt;/pre&amp;gt;!is', 'clean_pre', $pee );
var_dump( null == $pee );
ini_set( 'pcre.backtrack_limit', 99999 );
$pee = preg_replace_callback('!(&amp;lt;pre[^&amp;gt;]*&amp;gt;)(.*?)&amp;lt;/pre&amp;gt;!is', 'clean_pre', $pee );
var_dump( null == $pee );
&lt;/pre&gt;&lt;p&gt;
See also: PHP &lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=40846"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Request #40846 pcre.backtrack_limit too restrictive&lt;/a&gt;. Both &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8553" title="#8553: defect (bug): preg_replace_callback in do_shortcode returns empty for large posts (closed: fixed)"&gt;#8553&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15600" title="#15600: defect (bug): shortcode_unautop returns emtpy string (closed: fixed)"&gt;#15600&lt;/a&gt; reference the backtrack limit in relation to shortcodes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19589 (Simplify the recording of backtraces) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 19 Jan 2012 12:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19589#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19589#comment:3/1326974899279782</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>PNGsOptimized.patch attached to Ticket #19857</title>
      
        <dc:creator>l3rady</dc:creator>

      <pubDate>Thu, 19 Jan 2012 11:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19857/PNGsOptimized.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19857/PNGsOptimized.patch/1326973402603968</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19857 (PNG Optimization or core images) created</title>
      
        <dc:creator>l3rady</dc:creator>

      <pubDate>Thu, 19 Jan 2012 11:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19857</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19857/1326973384015244</guid>
      <description>&lt;p&gt;
Just out of curiosity I went to see if the images distributed with WordPress were optimized to give their smallest possible file size. Well after running all the PNGs through PNGGauntlet I was able to shave off 68KB of filesize.
&lt;/p&gt;
&lt;p&gt;
A small amount, but its a task that took all of two minutes to preform. I'd love to see WordPress run an optimization on images before publishing versions.
&lt;/p&gt;
&lt;p&gt;
I've attached a patch of the optimized PNGs
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19815 (Theme install and search screens should infinitely scroll) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 19 Jan 2012 08:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19815#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19815#comment:8/1326961749607444</guid>
      <description>&lt;p&gt;
Looking forward to seeing your work on this :)
&lt;/p&gt;
&lt;p&gt;
Several UX things I usually encounter with infinite scrolling in other web sites / apps:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;As the list infinitely expands, the user scrolls farther away from the top. There should be some way for the user to quickly scroll to top to navigate to other pages, or refine their search criteria.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Let's say the user navigates away from the page. If the user decides to go back by clicking the browser's "Back" button, they should be presented with the previous theme browsing state, rather than with page 1.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Some sort of indication of the range of items being displayed versus the total number of items should be presented to the user as the next page is preloaded and displayed (e.g. 120 - 145 of 20000 total).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Don't know if all of these should apply to this case, but could be some idea to consider.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19856.diff attached to Ticket #19856</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 19 Jan 2012 08:09:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19856/19856.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19856/19856.diff/1326960554837591</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19856 (wp_get_referer() doesn't return false when the referer URL is the same ...) created</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 19 Jan 2012 08:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19856/1326960533577027</guid>
      <description>&lt;p&gt;
Inside wp_get_referer(), there's this conditional statement:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( $ref &amp;amp;&amp;amp; $ref !== $_SERVER['REQUEST_URI'] )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
It is there to ensure that wp_get_referer() doesn't return the same page I'm on. This is useful when redirecting because I can detect and avoid infinite redirection.
&lt;/p&gt;
&lt;p&gt;
According to PHP documentation, &lt;code&gt;$_SERVER['REQUEST_URI']&lt;/code&gt; is only the URI on the host. As a result, the conditional statement above fails in this case:
&lt;/p&gt;
&lt;p&gt;
Let's say I was redirected from &lt;a class="ext-link" href="http://example.com/sample-uri"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/sample-uri&lt;/a&gt; to itself (either by clicking a link or a form submission). Then:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ref = 'http://example.com/sample-uri';
$_SERVER['REQUEST_URI'] = '/sample-uri';
&lt;/pre&gt;&lt;p&gt;
So technically, the referrer is the same page, but wp_get_referer() doesn't return false as expected, because &lt;code&gt;$ref !== $_SERVER['REQUEST_URI']&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
A better conditional statement would be:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( $ref &amp;amp;&amp;amp; parse_url( $ref, PHP_URL_PATH ) !== $_SERVER['REQUEST_URI']  )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Patch attached.
&lt;/p&gt;
&lt;p&gt;
I'm using PHP 5.3.6, Apache 2.2.20.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 19 Jan 2012 07:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855#comment:1/1326956859659161</guid>
      <description>&lt;p&gt;
Sounds similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15600" title="#15600: defect (bug): shortcode_unautop returns emtpy string (closed: fixed)"&gt;#15600&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 19 Jan 2012 05:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:22/1326950713228905</guid>
      <description>&lt;p&gt;
Related plugin? &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/rps-attach-caption-expand/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RPS Attach Caption Expand&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 04:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:6/1326946525790918</guid>
      <description>&lt;p&gt;
Ah, the description, file path, and tags are hidden by default in my patch on &lt;code&gt;themes.php&lt;/code&gt;. The screenshot just shows one expanded (to show what that looks like and to show where the update notice goes when details are shown).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:5/1326945085453042</guid>
      <description>&lt;p&gt;
I wouldn't remove altogether, but I'd hide them both in the default view -- the info should be available to be expanded, but if I've already searched for and installed a theme and I'm looking right at the screenshot, I don't need to know that it's white and 2-column.
&lt;/p&gt;
&lt;p&gt;
Another argument for having the description available to be expanded (or viewed somehow) is multisite users who already have a selection of themes in front of them without having gone through the search process themselves. They can filter by tag on the installed set, but they may never have had access to the description.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:43:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:4/1326944596346657</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:42:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:3/1326944579682630</guid>
      <description>&lt;p&gt;
Tags and descriptions. If you've already installed them, you know what they are. Maybe a 'click to expand'?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:41:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:2/1326944518629366</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19853/19853.diff" title="Attachment '19853.diff' in Ticket #19853"&gt;19853.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19853/19853.diff" title="Download"&gt;​&lt;/a&gt; moves the description into and the author out of the hidden details in &lt;code&gt;theme-install.php&lt;/code&gt; and moves things around on &lt;code&gt;themes.php&lt;/code&gt; to be more similar to the install screen. Could not find the same author name and link in the .org API response, so it's a little different for &lt;code&gt;theme-install.php&lt;/code&gt;, but maybe I missed it.
&lt;/p&gt;
&lt;p&gt;
Screenshot of &lt;code&gt;themes.php&lt;/code&gt; with one expanded: &lt;a class="ext-link" href="http://cl.ly/45282y440k0310113Q35"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/45282y440k0310113Q35&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Suggestion from Ipstenu and sabreuse is to remove tags from installed theme details entirely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19853.diff attached to Ticket #19853</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19853/19853.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19853/19853.diff/1326943686101783</guid>
      <description>&lt;p&gt;
Patch for themes.php and theme-install.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) created</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 01:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855/1326937451934860</guid>
      <description>&lt;p&gt;
Posting this on behalf of Sirisian in IRC who sent the question to wp-hackers on my suggestion and didn't get anywhere.
&lt;/p&gt;
&lt;p&gt;
I was writing an article on my blog with a huge code dump at the end inside of a pre tag. I noticed that this breaks wordpress. This is 100% reproducible by pasting &lt;a class="ext-link" href="http://pastebin.com/6m3RVGbr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pastebin.com/6m3RVGbr&lt;/a&gt; into a post then hitting preview (You can use blank pre tags. I just had stuff in them for a syntax highlighter plugin. It doesn't generate a page even with all plugins disabled anyway).
&lt;/p&gt;
&lt;p&gt;
I believe it's caused because there's over 64 KB of data in the pre tags. Talking to someone in the IRC and they said:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
looks like there's a preg_replace_callback called clean_pre, probably that's what's failing due to size
basically, probably wpautop()'s fault
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18909 (Bundled jQuery UI should have CSS) updated</title>
      
        <dc:creator>jaredatch</dc:creator>

      <pubDate>Thu, 19 Jan 2012 01:35:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18909#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18909#comment:33/1326936953679569</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 00:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:34/1326932924805174</guid>
      <description>&lt;p&gt;
Nevermind, sanitize_post( $post, 'raw' ) is applied in get_post() as well, before the if, which just prevents a duplicate sanitization.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 00:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:33/1326932822863602</guid>
      <description>&lt;p&gt;
I also noticed an inconsistency:
&lt;/p&gt;
&lt;p&gt;
On the one hand, we have this in get_post():
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ($filter != 'raw')
	$_post = sanitize_post($_post, $filter);
&lt;/pre&gt;&lt;p&gt;
On the other, we call &lt;code&gt;sanitize_post( $post, 'raw' ) &lt;/code&gt; in WP_Query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 00:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:32/1326931825813453</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18536/18536.3.diff" title="Attachment '18536.3.diff' in Ticket #18536"&gt;18536.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18536/18536.3.diff" title="Download"&gt;​&lt;/a&gt; does what I said in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18536#comment:30" title="Comment 30"&gt;30&lt;/a&gt;. Still don't know how to handle &lt;code&gt;'cache_results' =&amp;gt; false&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17249 (thickbox modal window dimensions are fixed in wp-admin) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 19 Jan 2012 00:03:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17249#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17249#comment:1/1326931415976802</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd like to start a dialogue about this issue as it has plagued me for years. I'm sick of telling people that our theme or plugin has a compatibility problem with a plugin simply because the conflicting plugin enqueues media-upload on every admin page.
&lt;/p&gt;
&lt;p&gt;
The core issue is that any page that has media-upload enqueued on it will cause every Thickbox on that page to be modified to work as the media uploader expects the Thickbox to be modified, even if nothing on the page uses the media uploader.
&lt;/p&gt;
&lt;p&gt;
There are three critical issues that need to be resolved in order to fix this problem:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rather than writing a custom handler to resize the media uploader's Thickbox, the media-upload script simply replaces the tb_position function that is defined by the Thickbox code. This means that the original sizing functionality offered by the Thickbox library will be completely replaced with a new one, causing drastically different Thickbox behaviors depending on whether or not the media-upload script was enqueued. While this may be technically elegant, it creates a huge number of limitations and potential conflicts when using WordPress' built-in Thickbox library.
&lt;/li&gt;&lt;li&gt;The media-upload script automatically replaces all width and height arguments of any Thickbox link with its own calculated values. Even if there were a simple way to avoid the issue of the tb_position override, this code would still cause significant changes to any Thickbox link, resulting in unexpected behavior.
&lt;/li&gt;&lt;li&gt;The media-upload script binds a call to the tb_position function to the window's resize event. This makes it very, very difficult to code around the issues created by the media-upload script.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are many possible solutions to this issue, but given that I'm very confused on why the script does certain things (such as why it changes all the width and height arguments), I figured it would be better to start a discussion to decide what a new approach would require.
&lt;/p&gt;
&lt;p&gt;
I'd like to propose two possible solutions.
&lt;/p&gt;
&lt;p&gt;
The first one is relatively-simple and is more of a fix than a solution. The core issue seems to be that it is difficult to recognize specific Thickboxes from the main page looking into the Thickbox. Thus, the code simply targets everything. I suggest reversing the way this is structured.
&lt;/p&gt;
&lt;p&gt;
Rather than housing the resize code outside of the Thickbox and modifying all of them, the resize code could be loaded by the wp-admin/media-upload.php page (the page loaded by the iFrame inside the media uploader's Thickbox) and use outward-looking checks to discover information about the window size. This will cause the code to be reliably run only on media uploader Thickboxes and removes any possible interference with other uses of Thickboxes (even if other non-media uploader Thickboxes exist on the same page).
&lt;/p&gt;
&lt;p&gt;
My biggest concern with this type of approach is that it isn't really elegant. If WordPress core needs a solution to finely control how Thickboxes size and auto-resize themselves, it stands to reason that other code probably has need to do this as well.
&lt;/p&gt;
&lt;p&gt;
My second suggestion is to improve the Thickbox code to handle a more robust set of query arguments. For example a link such as the following would emulate the current behavior of the the media-upload resize code.
&lt;/p&gt;
&lt;pre class="wiki"&gt;link?TB_iframe=1&amp;amp;width=full&amp;amp;height=full&amp;amp;max-width=720
&lt;/pre&gt;&lt;p&gt;
There would be four attributes that would be the main focus:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;width
&lt;ul&gt;&lt;li&gt;full - Expand to fill the full width of the containing window
&lt;/li&gt;&lt;li&gt;content (default) - The width automatically matches the width of the content
&lt;/li&gt;&lt;li&gt;[int value] - A specific pixel width
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;height
&lt;ul&gt;&lt;li&gt;full - Expand to fill the full height of the containing window
&lt;/li&gt;&lt;li&gt;content (default) - The height automatically matches the height of the content
&lt;/li&gt;&lt;li&gt;[int value] - A specific pixel height
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;max-width
&lt;ul&gt;&lt;li&gt;full (default) - The width will be limited to that of the "full" width
&lt;/li&gt;&lt;li&gt;[int value] - The width will be limited to a specific pixel width
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;max-height
&lt;ul&gt;&lt;li&gt;full (default) - The height will be limited to that of the "full" height
&lt;/li&gt;&lt;li&gt;[int value] - The height will be limited to a specific pixel height
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of the calculations will naturally also handle compensating sizes for necessary margin and padding sizes as well as compensating for the presence of the admin bar.
&lt;/p&gt;
&lt;p&gt;
The code will also automatically handle resize events to ensure 1) that the current attribute options are respected and 2) that the Thickbox doesn't overflow the window.
&lt;/p&gt;
&lt;p&gt;
With a setup like this, Thickboxes become much more useful to the average developer and an annoying code conflict source is removed.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 23:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:31/1326930258606855</guid>
      <description>&lt;p&gt;
Oh, unlike WP_User_Query, WP_Query has a 'cache_results' flag, which might get in the way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 23:40:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:30/1326930051916674</guid>
      <description>&lt;p&gt;
I noticed that the query that fetches the rest of the rows contains the &lt;code&gt;$orderby&lt;/code&gt; fragment again. This would obviously break when the orderby refers to any table other than wp_posts, for example when ordering by a meta key.
&lt;/p&gt;
&lt;p&gt;
Going to use an approach similar to WP_User_Query: fetch only the non-cached posts and then populate the posts array according to the order of the ids found.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19708 (get_post_custom returns no data when cache addition suspended) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 23:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19708#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19708#comment:2/1326928103624102</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This could also be a problem during imports.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 23:06:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:29/1326927975686792</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18536/18536.2.diff" title="Attachment '18536.2.diff' in Ticket #18536"&gt;18536.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18536/18536.2.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Wed, 18 Jan 2012 23:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:11/1326927974484301</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/15327/15327.2.patch" title="Attachment '15327.2.patch' in Ticket #15327"&gt;15327.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/15327/15327.2.patch" title="Download"&gt;​&lt;/a&gt; moves everything to a separate file (wp-admin/includes/admin-actions.php, name and location are debatable) and makes admin-ajax a very generic (36 lines!) ajax entry point.
&lt;/p&gt;
&lt;p&gt;
Each case statement became a new function and was hooked to the appropriate "wp_ajax_[hookname]" hook.  I scanned with "phpmd ... unusedcode" to look for any unused local variables to ensure no globals were missed in the transition.
&lt;/p&gt;
&lt;p&gt;
Should be good for 3.4 (pending other supporters?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18536.2.diff attached to Ticket #18536</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 23:05:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18536/18536.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18536/18536.2.diff/1326927917579283</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>15327.2.patch attached to Ticket #15327</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Wed, 18 Jan 2012 23:01:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15327/15327.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15327/15327.2.patch/1326927682649257</guid>
      <description>&lt;p&gt;
Refreshed for 3.4
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 18 Jan 2012 23:01:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:15/1326927678498287</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think 19810.patch is missing the js file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15861 (Sorting users by post count) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15861#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15861#comment:11/1326926886695644</guid>
      <description>&lt;p&gt;
So, it seems the "don't JOIN global tables with non-global tables" rule can be broken in the following case:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !wp_is_large_network( 'users' ) &amp;amp;&amp;amp; !defined( 'CUSTOM_USER_TABLE' ) &amp;amp;&amp;amp; !file_exists( WP_CONTENT_DIR . '/db.php' ) )
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17902 (Add a "Plugin Details" link to installed plugins.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:46:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17902#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17902#comment:11/1326926809086512</guid>
      <description>&lt;p&gt;
[wrong ticket]
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>andrewayala</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:40:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:98/1326926457746575</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19843 (Editor API + DFW) updated</title>
      
        <dc:creator>sushkov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19843#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19843#comment:2/1326926311786004</guid>
      <description>&lt;p&gt;
CSS rules that are required by DFW
&lt;a class="ext-link" href="https://github.com/scholarpress/buddypress-courseware/blob/master/static/css/courseware-editor.css"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/scholarpress/buddypress-courseware/blob/master/static/css/courseware-editor.css&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19854 (themes.php doesn't show themes if using Mac-style CR EOL markers) created</title>
      
        <dc:creator>novasource</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19854</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19854/1326926072432741</guid>
      <description>&lt;p&gt;
Apparently Macs by default only use CRs to mark end of lines.
&lt;/p&gt;
&lt;p&gt;
If a child theme's style.css file was saved using this, which can happen in Dreamweaver, WordPress won't even show the child theme at &lt;strong&gt;wp-admin/themes.php&lt;/strong&gt;. This has come up at &lt;a class="ext-link" href="http://wordpress.org/support/topic/child-themes-doesnt-show-up-in-mamp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/child-themes-doesnt-show-up-in-mamp&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If EOL only with CR isn't supported, it would be nice to at least show a warning.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17242 (Themes: Allow flexible sizes for custom header uploads) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17242#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17242#comment:28/1326926004950235</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15861 (Sorting users by post count) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:29:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15861#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15861#comment:10/1326925742869311</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15861#comment:8" title="Comment 8"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How exactly can we move users table to a separate database?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are several ways you can make queries to a separate DB: create a new WP_DB instance or use &lt;code&gt;SELECT * other_database.wp_users.*&lt;/code&gt; etc.
&lt;/p&gt;
&lt;p&gt;
Also, the HyperDB plugin enables this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:15:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:1/1326924908674641</guid>
      <description>&lt;p&gt;
Patch forthcoming, unless I'm beaten to it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) created</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:12:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853/1326924723310097</guid>
      <description>&lt;p&gt;
As per IRC discussion, the themes screens should mimic the look on .com, hiding the description along with the Details. The theme author should be shown at all times, as it is an important detail.
&lt;/p&gt;
&lt;p&gt;
Difference between installed and search list tables - &lt;code&gt;themes.php&lt;/code&gt; does not hide the details as &lt;code&gt;theme-install.php&lt;/code&gt; does and has slightly different ordering of elements. Thinking that they should be the same.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19815" title="#19815: task (blessed): Theme install and search screens should infinitely scroll (closed: fixed)"&gt;#19815&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19816" title="#19816: enhancement: Theme details should be able to include multiple screenshots (closed: duplicate)"&gt;#19816&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19619 (Simplify UI for searching in the plugin and theme installers) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 22:01:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19619#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19619#comment:5/1326924097498242</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17902 (Add a "Plugin Details" link to installed plugins.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 21:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17902#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17902#comment:10/1326923878554980</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
It would be possible to have the new function (plugin_readme_information()) to ignore the query string and force the same id as install_plugin_information(). Do you think this would be confusing for future developers?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, it's ok to have different IDs. I was referring to classes (which is what the common CSS should target).
&lt;/p&gt;
&lt;p&gt;
Sort of related to the screenshot issue: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19816" title="#19816: enhancement: Theme details should be able to include multiple screenshots (closed: duplicate)"&gt;#19816&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 21:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:28/1326923465628319</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch is stale.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19796 (Multisite installs should work with WordPress in a subdirectory) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Jan 2012 21:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19796#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19796#comment:16/1326921808736677</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Note: we use this on BuddyPress.org, Rosetta, and WordCamp.org already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19796 (Multisite installs should work with WordPress in a subdirectory) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 18 Jan 2012 21:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19796#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19796#comment:15/1326921625774302</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 21:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:13/1326921584560610</guid>
      <description>&lt;p&gt;
The current makepot patch removes thousands of strings from the frontend pot. register_admin_color_schemes() and the handful of others that introduce backend only strings into the frontend are not worth worrying about.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19796 (Multisite installs should work with WordPress in a subdirectory) updated</title>
      
        <dc:creator>Japh</dc:creator>

      <pubDate>Wed, 18 Jan 2012 21:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19796#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19796#comment:14/1326921523333404</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19796 (Multisite installs should work with WordPress in a subdirectory) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 18 Jan 2012 21:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19796#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19796#comment:13/1326921343819126</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Wed, 18 Jan 2012 21:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:12/1326920745978194</guid>
      <description>&lt;p&gt;
But then there will be also many strings from admin loaded on frontend. Main purpose of this ticket was to minimize strings loaded on frontend. And now there will be also mess for translators - some admin strings together with all frontend strings. There was another ticket related to multisite strings: &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/19831"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/19831&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There is only one good way - marking all frontend strings manually with special textdomain, I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19708 (get_post_custom returns no data when cache addition suspended) updated</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19708#comment:1/1326920140510926</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:46:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:11/1326919576870523</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19852#comment:8" title="Comment 8"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
1) function register_admin_color_schemes() - contains strings for administration.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All strings in wp-includes will be included in the main wordpress.pot, regardless of intended use. It won't add up to much.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And other problem: Some general strings are same for frontend and backend, for example "Comments", etc. So, there will be need for adding them to both textdomain files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As there will be a hierarchy of includes (wordpress.pot is always included, wordpress-admin.pot is always included in the site/network/user admins, etc.) we can keep the string in only one pot, whichever is the superset.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:10/1326919464181189</guid>
      <description>&lt;p&gt;
Let's reduce it by one and end up with wordpress.pot, wordpress-admin.pot, and wordpress-admin-network.pot?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:9/1326918873101757</guid>
      <description>&lt;p&gt;
The pots will be merged where necessary.  Network admin, for example, will load and merge wordpress-network-admin.pot, wordpress-site-admin.pot, and wordpress.pot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19852-makepot.3.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:30:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.3.diff/1326918600878783</guid>
      <description>&lt;p&gt;
Now with testing, but not much.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:8/1326918426972305</guid>
      <description>&lt;p&gt;
I think that there will be special textdomain needed, which have to be manually added to particular strings?
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;p&gt;
wp-includes/general-template.php:
&lt;/p&gt;
&lt;p&gt;
1) function register_admin_color_schemes() - contains strings for administration.
&lt;/p&gt;
&lt;p&gt;
2) function get_search_form() - contains strings for frontend.
&lt;/p&gt;
&lt;p&gt;
And other problem: Some general strings are same for frontend and backend, for example "Comments", etc. So, there will be need for adding them to both textdomain files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:7/1326917810102914</guid>
      <description>&lt;pre class="wiki"&gt;&amp;gt; grep msgid wordpress-site-admin.pot | wc -l
2460
&lt;/pre&gt;&lt;p&gt;
A fair number of strings. 1552 for wordpress.pot and 259 for wordpress-network-admin.pot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:6/1326917633526576</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832#comment:10/1326917505122792</guid>
      <description>&lt;p&gt;
Great, almost everything is blessed for 3.4 :-)
&lt;/p&gt;
&lt;p&gt;
Ad Help strings: There are several hundreds help strings (links, about, etc.) which are usually longer than other strings, so there could be really significant memory savings. I think it would be helpfull for many experienced users to turn off Help tabs (and save memory), but I am not sure if it is even possible. Is there any way to disable Help tabs throughout the whole WordPress? But it does not solve this problem, because strings will be still loaded. And when we use special help textdomain, what about strings which are multisite and also help?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:10:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:11/1326917433108221</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19852" title="#19852: task (blessed): Don't load admin strings on the frontend (closed: fixed)"&gt;#19852&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17242 (Themes: Allow flexible sizes for custom header uploads) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:09:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17242#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17242#comment:27/1326917342396985</guid>
      <description>&lt;p&gt;
I agree that supporting fully flexible sizes is the way to go with this: aside from there being good reasons to allow going both smaller and larger than a default image, we also don't want to be prematurely limiting what themes can be designed to allow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:5/1326917287213964</guid>
      <description>&lt;p&gt;
Here are the new pots and their corresponding number of lines. The user admin pot has only two translatable strings.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wordpress-network-admin.pot: 1122
&lt;/li&gt;&lt;li&gt;wordpress-site-admin.pot: 10634
&lt;/li&gt;&lt;li&gt;wordpress-user-admin.pot: 20
&lt;/li&gt;&lt;li&gt;wordpress.pot: 6701
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19825 (Bugs and modifications to localize script) updated</title>
      
        <dc:creator>bigdawggi</dc:creator>

      <pubDate>Wed, 18 Jan 2012 20:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19825#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19825#comment:5/1326916808579640</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19851 (wp_dropdown_categories should add category slug as class to each option.) updated</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Wed, 18 Jan 2012 19:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19851#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19851#comment:1/1326916100633244</guid>
      <description>&lt;p&gt;
Perhaps a better solution would be to offer an option that replaces the option value with the category slug. Patch for this solution added (category-template.slug_as_value.patch)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>category-template.slug_as_value.patch attached to Ticket #19851</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Wed, 18 Jan 2012 19:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19851/category-template.slug_as_value.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19851/category-template.slug_as_value.patch/1326916018100636</guid>
      <description>&lt;p&gt;
Patch for alternative solution to problem (details in comment)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 19:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:4/1326915957837847</guid>
      <description>&lt;p&gt;
Patch (totally untested) creates frontend, site admin, network admin, and user admin pots. The ms pot is dropped since it accounts for so few strings.  The continents-cities pot is preserved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19852-makepot.2.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 19:43:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.2.diff/1326915824669269</guid>
      <description>&lt;p&gt;
Untested makepot.php patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19852-makepot.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 19:38:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.diff/1326915522211539</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 18 Jan 2012 19:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:27/1326913777534664</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 18 Jan 2012 19:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:3/1326913731475951</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:2/1326911661665798</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:27:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832#comment:9/1326911239486218</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Removing the help strings would require a manual textdomain. And since help appears almost everywhere in the admin, it'd be loaded on every page. No huge benefit here. Ideas?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The idea was that a plugin could disable the loading of the 'help' textdomain (leaving those strings untranslated). I'm not sure if that's something we should cater for. I seriously doubt that those strings alone account for 2-3 MB of memory usage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:16:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832#comment:8/1326910608023607</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Akismet: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19597" title="#19597: task (blessed): Bundled plugins need a Text Domain header (closed: fixed)"&gt;#19597&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Admin/frontend: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19852" title="#19852: task (blessed): Don't load admin strings on the frontend (closed: fixed)"&gt;#19852&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Multisite: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19831" title="#19831: defect (bug): Multisite strings in standard translation (closed: wontfix)"&gt;#19831&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
About and help strings: no ticket. Suggesting we skip this, and close this ticket as a duplicate for the other three. pavelevap?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:15:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:1/1326910557108498</guid>
      <description>&lt;p&gt;
Here's a link to makepot.php for those not familiar with it:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://i18n.trac.wordpress.org/browser/tools/trunk/makepot.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://i18n.trac.wordpress.org/browser/tools/trunk/makepot.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852/1326910440962482</guid>
      <description>&lt;p&gt;
We should take the same approach as we did for multisite strings, and only load admin strings in the admin.
&lt;/p&gt;
&lt;p&gt;
This should be handled in load_default_textdomain(). Additionally, includes/admin.php should load the admin mo file if it is not already loaded, in the case of the frontend calling on the admin bootstrap (which we, for example, do in admin-ajax).
&lt;/p&gt;
&lt;p&gt;
This came out of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19832" title="#19832: defect (bug): Splitting translation files for better performance (closed: maybelater)"&gt;#19832&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:13:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:2/1326910382245620</guid>
      <description>&lt;p&gt;
I believe wordpress.com and some other big multisite hosts use it for managing upgrades. That's not necessarily a reason the keep the table, but core might someday find blog_versions valuable if we ever improve the currently very lame network upgrade process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:10/1326910286130726</guid>
      <description>&lt;p&gt;
We would need to do this in two ways:
&lt;/p&gt;
&lt;p&gt;
One, mark any multisite-only strings with a special textdomain, such as 'multisite'.
&lt;/p&gt;
&lt;p&gt;
Two, have the .pot generator avoid those strings when building the core pot, and merge them into the multisite pot.
&lt;/p&gt;
&lt;p&gt;
Then the strings would fall back to the default textdomain (into which ms-$locale.mo is merged) and everything would be peachy.
&lt;/p&gt;
&lt;p&gt;
What do the modifications to the pot generator look like? It may be found here: &lt;a class="ext-link" href="http://i18n.svn.wordpress.org/tools/trunk/makepot.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://i18n.svn.wordpress.org/tools/trunk/makepot.php&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:37/1326910169249379</guid>
      <description>&lt;p&gt;
Any native support we build in should fallback to the current pomo setup if the desired locale is not fully supported. The presence of the gettext extension does not mean that any given locale can be served.  Type "locale -a" on your Mac OS or Linux box and see which ones you have. Some hosts install very few locales, often just C, POSIX, and en_US*. Different environments can have different names for the same locale. Also, the directory structure required by gettext is not compatible with what we use now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Jan 2012 18:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832#comment:7/1326910047462413</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Akismet will get pulled out, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19597" title="#19597: task (blessed): Bundled plugins need a Text Domain header (closed: fixed)"&gt;#19597&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Isolating the About strings is interesting, but how much are we really talking? Let's assume only about.php, credits.php, freedoms.php. What's our memory actually saved? I doubt much.
&lt;/p&gt;
&lt;p&gt;
Removing the help strings would require a manual textdomain. And since help appears almost everywhere in the admin, it'd be loaded on every page. No huge benefit here. Ideas?
&lt;/p&gt;
&lt;p&gt;
Splitting the admin and the frontend is worthy. We would need to load the admin textdomain in includes/admin.php if it isn't already loaded, in the case of including the admin includes bootstrap on the frontend (admin-ajax, just one core example).
&lt;/p&gt;
&lt;p&gt;
I think the idea of tagging strings in is_multisite() branches with an explicit, manual textdomain is additionally intriguing.
&lt;/p&gt;
&lt;p&gt;
Since this ticket proposes a number of ideas I am going to spin off the admin/frontend split and mark it as a task.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>goto10</dc:creator>

      <pubDate>Wed, 18 Jan 2012 16:55:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:20/1326905705112745</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19845 (Drag and drop files into the Visual Editor) updated</title>
      
        <dc:creator>jayarjo</dc:creator>

      <pubDate>Wed, 18 Jan 2012 16:47:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19845#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19845#comment:5/1326905244866501</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16330 (media_sideload_image() broken with filenames containing strange ...) updated</title>
      
        <dc:creator>dancriel</dc:creator>

      <pubDate>Wed, 18 Jan 2012 16:20:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16330#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16330#comment:16/1326903629947792</guid>
      <description>&lt;p&gt;
&lt;strong&gt;kawauso&lt;/strong&gt;'s patch worked for me in WP 3.3.1, thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>category-template.diff attached to Ticket #19851</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Wed, 18 Jan 2012 15:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19851/category-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19851/category-template.diff/1326899903507280</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19851 (wp_dropdown_categories should add category slug as class to each option.) created</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Wed, 18 Jan 2012 15:17:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19851</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19851/1326899877349526</guid>
      <description>&lt;p&gt;
Portability is important for theme developers. With more and more developers using JS for enhanced functionality of their themes it's important to offer portable selectors for their use. Category ID's tend to change in the migration process, category names do not.
&lt;/p&gt;
&lt;p&gt;
While it's important to keep the class clutter low, I believe adding the slug of a category as a class to each option in wp_dropdown_categories would be very helpful for developers.
&lt;/p&gt;
&lt;p&gt;
I found this modification useful for a theme I was developing and offer this patch with hope that my solution may benefit other developers.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19848 (Function is_main_site uses $current_site-&gt;blog_id instead of ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 13:31:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19848#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19848#comment:7/1326893483463969</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19848 (Function is_main_site uses $current_site-&gt;blog_id instead of ...) closed</title>
      
        <dc:creator>mohanjith</dc:creator>

      <pubDate>Wed, 18 Jan 2012 12:26:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19848#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19848#comment:6/1326889615950967</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19848 (Function is_main_site uses $current_site-&gt;blog_id instead of ...) updated</title>
      
        <dc:creator>matslundberg</dc:creator>

      <pubDate>Wed, 18 Jan 2012 11:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19848#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19848#comment:5/1326887875718973</guid>
      <description>&lt;p&gt;
Yes, this is not a bug but for me it was type-o in a drop-in sunrise.php which made this variable undefined. Thanks for your help, and sorry for the bother.
&lt;/p&gt;
&lt;p&gt;
This issue is resolved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5305 (permalinks broken when article name is numeric) updated</title>
      
        <dc:creator>lkraav</dc:creator>

      <pubDate>Wed, 18 Jan 2012 11:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5305#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5305#comment:26/1326884788539578</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19847.patch attached to Ticket #19847</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 09:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19847/19847.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19847/19847.patch/1326879537447901</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19850 (double slash in URL when editing gallery in visual mode) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 09:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19850#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19850#comment:3/1326878913935768</guid>
      <description>&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9894" title="Move Gallery Settings to the Gallery tab in the uploader, split the ..."&gt;[9894]&lt;/a&gt;:
&lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/9894#file11"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/changeset/9894#file11&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19850 (double slash in URL when editing gallery in visual mode) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 09:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19850#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19850#comment:2/1326878436261701</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19847 (wp_mail $from_name field is removing an extra character from the name) updated</title>
      
        <dc:creator>hakanca</dc:creator>

      <pubDate>Wed, 18 Jan 2012 09:15:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19847#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19847#comment:2/1326878112433540</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It doesn't really matter if we have a space there or not. &lt;strong&gt;strpos&lt;/strong&gt; returns the numeric position of the found string; in our case "&amp;lt;" character. &lt;strong&gt;substr&lt;/strong&gt; returns as many characters specified by its length parameter; in our case the number we get from &lt;strong&gt;strpos&lt;/strong&gt;. Both functions start counting from "0" unless we specify otherwise; which is our case. So in the following cases:
&lt;/p&gt;
&lt;p&gt;
Hakan&amp;lt;hakan@…&amp;gt; --&amp;gt; strpos will return 5; the index position of "&amp;lt;" in the original string starting from "0". So substr will return "Hakan" since we are returning 5 characters from the beginning.
&lt;/p&gt;
&lt;p&gt;
If, as you asked, we have a space between the name and email like below:
&lt;/p&gt;
&lt;p&gt;
Hakan &amp;lt;hakan@…&amp;gt; --&amp;gt; then strpos will return 6, and substr will also include 6 characters and return "Hakan " -including the space-. Since we are already trimming the space in the returned string 2 lines later in the code with
&lt;/p&gt;
&lt;pre class="wiki"&gt;$from_name = trim( $from_name );
&lt;/pre&gt;&lt;p&gt;
There is no need to subtract 1 from the length of the string, since we never run into problem of accidentally including that "&amp;lt;" character. &lt;strong&gt;I think that was the false logic behind adding that -1 to substr call in the first place.
&lt;/strong&gt;
By removing that "-1" we are actually making the code more flexible, by accommodating both versions. (i.e. with or without space) And to the best of my knowledge, PHP has no problem sending the email in either case.(Tested on my server)
&lt;/p&gt;
&lt;p&gt;
As for making patches to the Wordpress core, I am not an expert PHP coder per se. I'd rather leave it to people who know what they are doing. :)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19847#comment:1" title="Comment 1"&gt;kawauso&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are you passing in the From value without a space?
&lt;/p&gt;
&lt;p&gt;
i.e. Hakan&amp;lt;hakan@…&amp;gt;
&lt;/p&gt;
&lt;p&gt;
If not, can you provide an example to reproduce?
&lt;/p&gt;
&lt;p&gt;
Also, please see patching for &lt;a class="ext-link" href="http://markjaquith.wordpress.com/2005/11/02/my-wordpress-toolbox/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Windows&lt;/a&gt; and &lt;a class="ext-link" href="http://blog.ftwr.co.uk/archives/2005/11/03/windows-wordpress-toolbox/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;*nix&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19850 (double slash in URL when editing gallery in visual mode) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 09:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19850#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19850#comment:1/1326878106866058</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
According to &lt;a class="ext-link" href="http://www.tinymce.com/wiki.php/Configuration:document_base_url"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TinyMCE documentation&lt;/a&gt;, &lt;code&gt;documentBaseURL&lt;/code&gt; must end with a slash, so the additional slash is not needed.
&lt;/p&gt;
&lt;p&gt;
Seems that the compressed file is always loaded (regardless of &lt;code&gt;SCRIPT_DEBUG&lt;/code&gt;), so in order to test the patch I had to alter &lt;code&gt;wpgallery/editor_plugin.js&lt;/code&gt; as well.
&lt;/p&gt;
&lt;p&gt;
There's also a &lt;a class="ext-link" href="http://wordpress.org/support/topic/upload-works-but-cant-edit-gallery-afterwards"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forum thread&lt;/a&gt; about this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19850.patch attached to Ticket #19850</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 09:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19850/19850.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19850/19850.patch/1326878011540526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19829 (impossible to moderate comment in custom post) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 18 Jan 2012 07:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19829#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19829#comment:5/1326872072230105</guid>
      <description>&lt;p&gt;
It looks like you have WPML installed (it's this which is adding the 'English' link to the list of filters). I've seen problems with this in the past. You should post the issue on the wpml.org forums so they can take a look at it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19850 (double slash in URL when editing gallery in visual mode) created</title>
      
        <dc:creator>h8every1</dc:creator>

      <pubDate>Wed, 18 Jan 2012 07:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19850/1326871404505328</guid>
      <description>&lt;p&gt;
reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;upload images
&lt;/li&gt;&lt;li&gt;insert gallery into the editor
&lt;/li&gt;&lt;li&gt;in "Visual" mode hover over the gallery placeholder and click the edit button
&lt;/li&gt;&lt;li&gt;a pop-up shows, which URL is 'wp-admin&lt;a href="/"&gt;//&lt;/a&gt;media-upload.php'
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
it works all right with vanilla install, but with some anti-hacker enhancements to .htaccess (5G Firewall) it breaks because of double slash.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19848 (Function is_main_site uses $current_site-&gt;blog_id instead of ...) updated</title>
      
        <dc:creator>mohanjith</dc:creator>

      <pubDate>Wed, 18 Jan 2012 07:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19848#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19848#comment:4/1326870211600525</guid>
      <description>&lt;p&gt;
This is normal when you upgrade from old WordPress MU installs (2.8.x) and do not update wp-config.php to bring it inline with new configurations.
&lt;/p&gt;
&lt;p&gt;
If you defined BLOG_ID_CURRENT_SITE and SITE_ID_CURRENT_SITE in wp-config.php issue will go away.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19730.patch attached to Ticket #19730</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 00:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19730/19730.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19730/19730.patch/1326848300664371</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19730 ("Add Media" link directs to error page after permanently deleting a ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Jan 2012 00:51:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19730#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19730#comment:4/1326847874170401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can reproduce with referers disabled. The page that says "Invalid post type" is &lt;code&gt;post-new.php?post_type=attachment&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Adding &lt;code&gt;_wp_http_referer&lt;/code&gt; to delete links in &lt;code&gt;_get_row_actions()&lt;/code&gt; (similarly to &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3.1/wp-admin/includes/class-wp-ms-users-list-table.php#L193"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_MS_Users_List_Table&lt;/a&gt;) fixes this.
&lt;/p&gt;
&lt;p&gt;
The patch also improves readability a bit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>