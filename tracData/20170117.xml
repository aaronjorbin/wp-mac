<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>23578.2.diff attached to Ticket #23578</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 23:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23578/23578.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23578/23578.2.diff/1484697466685007</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39619 (Firefox 50 is showing old "View autosave" dialog) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 23:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39619#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39619#comment:1/1484697444484956</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2017-01-18 at 10.50.18 am.png attached to Ticket #39619</title>
      
        <dc:creator>mar1in</dc:creator>

      <pubDate>Tue, 17 Jan 2017 23:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39619/Screen%20Shot%202017-01-18%20at%2010.50.18%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39619/Screen%20Shot%202017-01-18%20at%2010.50.18%20am.png/1484697064462625</guid>
      <description>&lt;p&gt;
Expected result
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2017-01-18 at 10.50.10 am.png attached to Ticket #39619</title>
      
        <dc:creator>mar1in</dc:creator>

      <pubDate>Tue, 17 Jan 2017 23:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39619/Screen%20Shot%202017-01-18%20at%2010.50.10%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39619/Screen%20Shot%202017-01-18%20at%2010.50.10%20am.png/1484697051989261</guid>
      <description>&lt;p&gt;
Actual Result
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39619 (Firefox 50 is showing old "View autosave" dialog) created</title>
      
        <dc:creator>mar1in</dc:creator>

      <pubDate>Tue, 17 Jan 2017 23:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39619</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39619/1484697027628618</guid>
      <description>&lt;p&gt;
Using Wordpress 4.6.1. Works in Chrome. Only works from time to time in Firefox:
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create new post
&lt;/li&gt;&lt;li&gt;Publish post
&lt;/li&gt;&lt;li&gt;Modify content and wait for autosaving
&lt;/li&gt;&lt;li&gt;Reload page
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Expected result: Restore backup notice including restore backup button
Actual result: Autosave notice
&lt;/p&gt;
&lt;p&gt;
After I debugged a little bit, I realized that Firefox is not able to delete the cookie 'wp-saving-post' by using wpCookies.remove('wp-saving-post'). It seems to work only when you specify the path: wpCookies.remove('wp-saving-post', '/app/wp-admin')
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39618 (Insert PDF Thumbnail into Editor) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 22:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39618#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39618#comment:2/1484691765142776</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22993 (Admin - users without a role are difficult to find) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 17 Jan 2017 22:18:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22993#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22993#comment:17/1484691533401975</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1484691531001584"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36196 (Users without a role are not being displayed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 17 Jan 2017 22:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36196#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36196#comment:11/1484691450063261</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1484691447001581"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39618 (Insert PDF Thumbnail into Editor) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Tue, 17 Jan 2017 22:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39618#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39618#comment:1/1484690548060456</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39473 (get_routes() called multiple times within single REST request causing ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Tue, 17 Jan 2017 22:01:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39473#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39473#comment:6/1484690494869618</guid>
      <description>&lt;p&gt;
The getter/setter functions should be public in case other code needs to manipulate the cached route map.
&lt;/p&gt;
&lt;p&gt;
I think we can resolve the remaining naming issues here by calling the variable inside the method &lt;code&gt;$route_map&lt;/code&gt; instead of &lt;code&gt;$endpoints&lt;/code&gt;. Think of it this way: &lt;code&gt;$endpoints&lt;/code&gt; is the raw endpoints and &lt;code&gt;$route_map&lt;/code&gt; is the parsed and sanitized map from a regex to an endpoint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2017-01-17 at 4.53.52 PM.png attached to Ticket #39618</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Tue, 17 Jan 2017 22:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39618/Screen%20Shot%202017-01-17%20at%204.53.52%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39618/Screen%20Shot%202017-01-17%20at%204.53.52%20PM.png/1484690485036574</guid>
      <description>&lt;p&gt;
Screenshot of the current Insert Media UI showing the Image Size control that could be used to control whether to insert the generated image or the document link only
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39618 (Insert PDF Thumbnail into Editor) created</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Tue, 17 Jan 2017 22:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39618</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39618/1484690429104869</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38949" title="Media: Add support for rendering PDF thumbnails.
When support for ..."&gt;[38949]&lt;/a&gt; is awesome, but the next logical move is to allow content editors to easily insert the PDF thumbnail into the Editor upon Insert Media.
&lt;/p&gt;
&lt;p&gt;
There will need to be a UI for allowing the content editor to choose whether to insert the image or the textual link. The easiest place for this to live without a major UI overhaul would be in the Insert Media workflow itself.
&lt;/p&gt;
&lt;p&gt;
In fact the "Size" pull-down menu doesn't really do anything right now for PDFs, so it would be a good place to add an option "Document Link Only", and then honour the other sizes when selected and actually insert the image.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39614 (Video header: Support free formats like .webm/vp8 and .ogv/theora) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 21:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39614#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39614#comment:1/1484690260932078</guid>
      <description>&lt;p&gt;
@fnadde42 thanks for the report. The problem with these formats is that they are not supported by all browsers. I believe that H.264 via MP4/MOV is supported by all browsers. Even if WordPress supported these additional open video formats then the user would be forced to do transcoding of the videos and upload each one and select each one in the video header to use in some kind of multi-media selection control, as WordPress cannot do the transcoding of the videos on its own.
&lt;/p&gt;
&lt;p&gt;
More details about this are in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38172" title="#38172: task (blessed): Enable Video Headers in Custom Headers (closed: fixed)"&gt;#38172&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39616 (Twenty Seventeen: Issue with Header Video) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 21:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39616#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39616#comment:1/1484687178535440</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39617 (Improve the Dashboard Screen and Welcome dashboard widget) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Tue, 17 Jan 2017 20:49:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39617#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39617#comment:5/1484686171214244</guid>
      <description>&lt;p&gt;
@SergeyBiryukov
&lt;/p&gt;
&lt;p&gt;
Good to know.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39617 (Improve the Dashboard Screen and Welcome dashboard widget) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 20:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39617#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39617#comment:4/1484685780246302</guid>
      <description>&lt;p&gt;
WordPress already tries to enable pretty permalinks on install if possible, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6481" title="#6481: enhancement: Fancy permalinks should be enabled on new sites (closed: fixed)"&gt;#6481&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39617 (Improve the Dashboard Screen and Welcome dashboard widget) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Tue, 17 Jan 2017 20:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39617#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39617#comment:3/1484685247072566</guid>
      <description>&lt;p&gt;
@hardeepasrani
&lt;/p&gt;
&lt;p&gt;
The number of sites I have come across where a user has not changed the permalinks from default from ?p=123 to sample-post always surprises me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39617 (Improve the Dashboard Screen and Welcome dashboard widget) updated</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Tue, 17 Jan 2017 20:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39617#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39617#comment:2/1484683787247994</guid>
      <description>&lt;p&gt;
You're asked to add a site title and description when installing WordPress, so don't think that needs to be there too. And for permalinks, it's more of a choice, so you don't need to change unless you want.
&lt;/p&gt;
&lt;p&gt;
But yea, making a post is more important.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39617 (Improve the Dashboard Screen and Welcome dashboard widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 17 Jan 2017 20:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39617#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39617#comment:1/1484683653209552</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by hardeepasrani. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1484683651008511"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>WP Dashboard Widgets.png attached to Ticket #39617</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Tue, 17 Jan 2017 20:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39617/WP%20Dashboard%20Widgets.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39617/WP%20Dashboard%20Widgets.png/1484683534691008</guid>
      <description>&lt;p&gt;
Dashboard Screen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>WP Welcome Dashboard Widget.png attached to Ticket #39617</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Tue, 17 Jan 2017 20:04:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39617/WP%20Welcome%20Dashboard%20Widget.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39617/WP%20Welcome%20Dashboard%20Widget.png/1484683475698731</guid>
      <description>&lt;p&gt;
Welcome Widget
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39617 (Improve the Dashboard Screen and Welcome dashboard widget) created</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Tue, 17 Jan 2017 20:04:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39617</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39617/1484683458665553</guid>
      <description>&lt;p&gt;
Currently the welcome dashboard widget only offers a few options, it does not cover making sure that a new has added a site name, site description, set permalinks or made sure that a user has created their first page and post on the site.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Dashboard_Screen#Welcome"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Dashboard_Screen#Welcome&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Giving users a better flow from the dashboard screen would help them get started on their site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39616 (Twenty Seventeen: Issue with Header Video) created</title>
      
        <dc:creator>tentblogger</dc:creator>

      <pubDate>Tue, 17 Jan 2017 19:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39616</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39616/1484683144351020</guid>
      <description>&lt;p&gt;
via &lt;a class="ext-link" href="https://wordpress.org/support/topic/issue-with-the-header-video/#post-8665585"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/issue-with-the-header-video/#post-8665585&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Upgrade of the theme and the WP (4.7.1) messed up the header video.
&lt;/p&gt;
&lt;p&gt;
Now there’s a big black bar at the top and bottom (wasn’t there in the previous version(s)).
&lt;/p&gt;
&lt;p&gt;
I've checked on a variety of browsers (all updated to the newest versions):
&lt;/p&gt;
&lt;p&gt;
firefox
&lt;a style="padding:0; border:none" href="http://john.do/wp-content/uploads/2017/01/firefox.png"&gt;&lt;img src="http://john.do/wp-content/uploads/2017/01/firefox.png" alt="http://john.do/wp-content/uploads/2017/01/firefox.png" crossorigin="anonymous" title="http://john.do/wp-content/uploads/2017/01/firefox.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
safari
&lt;a style="padding:0; border:none" href="http://john.do/wp-content/uploads/2017/01/safari.png"&gt;&lt;img src="http://john.do/wp-content/uploads/2017/01/safari.png" alt="http://john.do/wp-content/uploads/2017/01/safari.png" crossorigin="anonymous" title="http://john.do/wp-content/uploads/2017/01/safari.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
chrome
&lt;a style="padding:0; border:none" href="http://john.do/wp-content/uploads/2017/01/chrome-1.png"&gt;&lt;img src="http://john.do/wp-content/uploads/2017/01/chrome-1.png" alt="http://john.do/wp-content/uploads/2017/01/chrome-1.png" crossorigin="anonymous" title="http://john.do/wp-content/uploads/2017/01/chrome-1.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36191 (Support responsive images in WP_Customize_Media_Control) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 17 Jan 2017 19:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36191#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36191#comment:14/1484682931972855</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1484682929000272"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39473 (get_routes() called multiple times within single REST request causing ...) updated</title>
      
        <author>ruud@…</author>

      <pubDate>Tue, 17 Jan 2017 19:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39473#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39473#comment:5/1484681478442847</guid>
      <description>&lt;p&gt;
Since the $route_map is a protected variable inside this class, I thought it may be appropriate to also use the getter and setter as protected functions for this class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39473-2.patch attached to Ticket #39473</title>
      
        <author>ruud@…</author>

      <pubDate>Tue, 17 Jan 2017 19:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39473/39473-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39473/39473-2.patch/1484681356152873</guid>
      <description>&lt;p&gt;
Patch against version 4.7.1, extra level of indentation removed, made getter/setter functions protected
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2017-01-17 at 11.20.07 AM.png attached to Ticket #39615</title>
      
        <dc:creator>rjc430404</dc:creator>

      <pubDate>Tue, 17 Jan 2017 19:24:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39615/Screen%20Shot%202017-01-17%20at%2011.20.07%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39615/Screen%20Shot%202017-01-17%20at%2011.20.07%20AM.png/1484681065608821</guid>
      <description>&lt;p&gt;
Col And Line numbers
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2017-01-17 at 11.19.51 AM.png attached to Ticket #39615</title>
      
        <dc:creator>rjc430404</dc:creator>

      <pubDate>Tue, 17 Jan 2017 19:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39615/Screen%20Shot%202017-01-17%20at%2011.19.51%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39615/Screen%20Shot%202017-01-17%20at%2011.19.51%20AM.png/1484681054263698</guid>
      <description>&lt;p&gt;
Code block
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2017-01-17 at 11.19.30 AM.png attached to Ticket #39615</title>
      
        <dc:creator>rjc430404</dc:creator>

      <pubDate>Tue, 17 Jan 2017 19:24:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39615/Screen%20Shot%202017-01-17%20at%2011.19.30%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39615/Screen%20Shot%202017-01-17%20at%2011.19.30%20AM.png/1484681043887565</guid>
      <description>&lt;p&gt;
JS Stack Trace
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39615 (The JS Bootstrapping For Media Handling Breaks Due To Validation Service) created</title>
      
        <dc:creator>rjc430404</dc:creator>

      <pubDate>Tue, 17 Jan 2017 19:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39615</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39615/1484681014425566</guid>
      <description>&lt;p&gt;
There is an issue for me on 4.7.1 when I go to interact with anything media related. Your validation service isn't bound correctly so it kills the script and nothing get executed.
&lt;/p&gt;
&lt;p&gt;
Attached is the out put of chrome dev tools, the block in question, and the position of the block inside of the dev tools prettified output.
&lt;/p&gt;
&lt;p&gt;
For now I've rolled back to WP 4.7 as a work around.
&lt;/p&gt;
&lt;p&gt;
Plugins I've got installed:
&lt;/p&gt;
&lt;p&gt;
ACF Pro - 5.5.3
Duplicator - 1.1.26
S3 Uploads (Human Made Limited) - 2.0.0-beta2
Yoast SEO - 4.1
My Custom Plugin
&lt;/p&gt;
&lt;p&gt;
Let me know if you need anything else from me.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39605 (Possible wp_options autoload field optimization) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Tue, 17 Jan 2017 19:22:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39605#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39605#comment:3/1484680957442115</guid>
      <description>&lt;p&gt;
@swissspidy and @rmccue thanks for the information and the links to the other tickets. I checked the other tickets and I have one question:
&lt;/p&gt;
&lt;p&gt;
How many rows does the wp_options table need to have maximum to be considered "normal"?
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14258" title="#14258: enhancement: wp_options and MySQL's &amp;#34;log-queries-not-using-indexes&amp;#34; config (closed: wontfix)"&gt;#14258&lt;/a&gt; @pento wrote the following:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even assuming a ludicrously massive wp_options table of 5000 rows
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I am wondering what is considered to be the maximum number of rows above which the wp_options table becomes bloated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37799.1.diff attached to Ticket #37799</title>
      
        <dc:creator>gma992</dc:creator>

      <pubDate>Tue, 17 Jan 2017 19:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37799/37799.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37799/37799.1.diff/1484680479777286</guid>
      <description>&lt;p&gt;
Added translatable strings via printf()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>iamfriendly</dc:creator>

      <pubDate>Tue, 17 Jan 2017 18:55:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:3/1484679356216057</guid>
      <description>&lt;p&gt;
A list of all options created, by default, (4.7.1) when a new site is added to a network. Additionally, suggested candidates for what might move from &lt;code&gt;wp_#_options&lt;/code&gt; to &lt;code&gt;wp_blogmeta&lt;/code&gt; are indented and in bold.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://docs.google.com/document/d/1bMajucj7vVLP2xFIoTC5BdOTzF5jEfnYcrxrVEdVH5I/edit?usp=sharing"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://docs.google.com/document/d/1bMajucj7vVLP2xFIoTC5BdOTzF5jEfnYcrxrVEdVH5I/edit?usp=sharing&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Namely:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;admin_email&lt;/code&gt; - getting a list of all site's default admins seems useful (we do it regularly, for example)
&lt;code&gt;blog_public&lt;/code&gt; - finding out which sites are public more easily seems like something that would speed up other queries for the REST API for example
&lt;code&gt;blogdescription&lt;/code&gt; - seems to go in parallel with other info currently in my-sites
&lt;code&gt;blogname&lt;/code&gt; - used in my-sites
&lt;code&gt;db_version&lt;/code&gt; - I could be dissuaded on this, but seems useful to check if all sites on a network are up-to-date
Edit: Ignore. &lt;code&gt;finished_splitting_shared_terms&lt;/code&gt; - same logic as above, can be dissuaded (I dissuaded myself)
&lt;code&gt;home&lt;/code&gt; - my-sites
&lt;code&gt;siteurl&lt;/code&gt; - my-sites
&lt;/p&gt;
&lt;p&gt;
Whilst I can think of ways in which many of the other options would be useful, I've taken a somewhat minimal approach here to try and prevent a huge amount of data being transferred during the initial migration as well as simply polluting this new table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>andyimatest</dc:creator>

      <pubDate>Tue, 17 Jan 2017 18:08:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:59/1484676511522074</guid>
      <description>&lt;p&gt;
I've had the same issue in 4.7.1 with .vtt files.  Arbitrarily, they resolve as "text/plain" or "text/x-c" using finfo_file(), no matter where they came from, so I have to detect if the upload fails, then change the acceptable mimetype and try again.
&lt;/p&gt;
&lt;p&gt;
Also, error messages using async_upload are not displayed in the Media page, I have to use Firebug to get the error message.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 17 Jan 2017 17:33:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:2/1484674422229801</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1484674419001444"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39544 (REST API: Improve users endpoint in multisite) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 17 Jan 2017 17:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39544#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39544#comment:1/1484672633311249</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1484672631001331"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39512 (has_header_video() should be filtered) updated</title>
      
        <dc:creator>wpweaver</dc:creator>

      <pubDate>Tue, 17 Jan 2017 16:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39512#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39512#comment:3/1484672060898914</guid>
      <description>&lt;p&gt;
Sorry, the fix would be totally trivial, but I'm not really familiar enough with the system to provide patches.
&lt;/p&gt;
&lt;p&gt;
If I understand correctly, the has-patch tag means someone else did it. Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39564 (Notice: Undefined index: item_spacing in ...) updated</title>
      
        <dc:creator>ketuchetan</dc:creator>

      <pubDate>Tue, 17 Jan 2017 16:52:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39564#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39564#comment:7/1484671949814470</guid>
      <description>&lt;p&gt;
@bhargavbhandari90 There is no any changes but you can see my patch I have created patch from the /src/  directory of development repository.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39564 (Notice: Undefined index: item_spacing in ...) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Tue, 17 Jan 2017 16:24:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39564#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39564#comment:6/1484670243934303</guid>
      <description>&lt;p&gt;
Hi, @ketuchetan
&lt;/p&gt;
&lt;p&gt;
I saw that your patch is duplicate. Can you explain why? :-) I think you should have a better solution than the previous patch. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39614 (Video header: Support free formats like .webm/vp8 and .ogv/theora) created</title>
      
        <dc:creator>fnadde42</dc:creator>

      <pubDate>Tue, 17 Jan 2017 16:15:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39614</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39614/1484669752854397</guid>
      <description>&lt;p&gt;
It seems like the theme do not support free formats like webm or ogv. This concerns me as the web should use open standards and not closed ones. Content wise, WordPress supports the use of both mp4 and webm to provide broader support of browsers and it seems like the same practice should be applied here. As I'm not a great programmer I will just create this ticket as a suggestion.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39577 (Twenty Seventeen: Pages with sidebar) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Tue, 17 Jan 2017 16:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39577#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39577#comment:5/1484669666931613</guid>
      <description>&lt;p&gt;
@davidakennedy Thanks for giving time. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39577 (Twenty Seventeen: Pages with sidebar) closed</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Tue, 17 Jan 2017 16:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39577#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39577#comment:4/1484669226265315</guid>
      <description>wontfix: &lt;p&gt;
Hey @bhargavbhandari90! Thanks for the feature request.
&lt;/p&gt;
&lt;p&gt;
I can understand wanting a sidebar on pages. But Twenty Seventeen was built for businesses, and many of them don't want or need a sidebar on pages. Plus, the sidebar vs. one or two column layout (option in Customizer) is already tough for many to understand, so it's better to keep things simpler.
&lt;/p&gt;
&lt;p&gt;
This isn't a feature I'd want to see added to Twenty Seventeen.
&lt;/p&gt;
&lt;p&gt;
It's a perfect situation for a child theme though. That's what I'd suggest you do, and you have all the code needed for it. :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39578 (Enhancement for rest api comment controller create_item method to ...) updated</title>
      
        <dc:creator>dspilka</dc:creator>

      <pubDate>Tue, 17 Jan 2017 15:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39578#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39578#comment:7/1484667936405752</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39578#comment:4" title="Comment 4"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dspilka Thanks for the patch :) Just to note: your indentation is off in the patch, but seeing how it's only 3 lines, not a huge issue here. Something to keep in mind for future patches though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
*EDIT* Nevermind. I clearly see it now when opening/viewing the patches online! Didn't look that way in my IDE for some reason. But I got it now. Thanks.
&lt;/p&gt;
&lt;p&gt;
Thanks @rmccue. Very happy to have my first WordPress patch! &lt;del&gt;Would you mind pointing out how the indentation should be or how I can check it so I can get it right for my next patch? It seems to look like the others in my IDE, so I just want to make sure I understand it and know how to do it right.&lt;/del&gt; Thanks, Dan.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39593 (Improve DocBlocks in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 14:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39593#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39593#comment:9/1484665159320672</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39593#comment:8" title="Comment 8"&gt;carl-alberto&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do we tackle all the patches thru this ticket or separate tickets per file that don't have proper DocBlocks?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's create a separate ticket per file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32347 (Saving Menu Breaks Cyrillic Characters) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 14:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32347#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32347#comment:7/1484664914949318</guid>
      <description>worksforme: &lt;p&gt;
No other reports in almost 2 years. Feel free to reopen if there's still an issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39593 (Improve DocBlocks in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>carl-alberto</dc:creator>

      <pubDate>Tue, 17 Jan 2017 14:53:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39593#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39593#comment:8/1484664823102359</guid>
      <description>&lt;p&gt;
Hi @Soean,
&lt;/p&gt;
&lt;p&gt;
Do we tackle all the patches thru this ticket or separate tickets per file that don't have proper DocBlocks?
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32607 (Function for URL to registered scripts and styles) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 14:32:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32607#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32607#comment:4/1484663549885626</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/32607" title="#32607: feature request: Function for URL to registered scripts and styles (new)"&gt;msnewton&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The reason is this: I generate all of the HTML for special pages myself but wish to include standard scripts and styles that are built in to WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Adding &lt;code&gt;&amp;lt;?php wp_head(); ?&amp;gt;&lt;/code&gt; before &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;?php wp_footer(); ?&amp;gt;&lt;/code&gt; before &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; should do that, unless I'm missing something. Why do you need a new function?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32607 (Function for URL to registered scripts and styles) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 14:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32607#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32607#comment:3/1484663234330644</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30813 (Add a function to create a single Google font url) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 14:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30813#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30813#comment:3/1484663171483697</guid>
      <description>wontfix: &lt;p&gt;
No traction in two years. With the move to native system fonts in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36753" title="#36753: task (blessed): Use system fonts for a faster, more native-feeling admin (closed: fixed)"&gt;#36753&lt;/a&gt;, Google web fonts are no longer used in core, so adding a function to enqueue them doesn't seem suitable for core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39611 (Change message string in `wp-signup.php`) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 12:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39611#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39611#comment:2/1484657393841226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The current string is not i18n-friendly, whe should split it into several strings. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39611/39611.2.patch" title="Attachment '39611.2.patch' in Ticket #39611"&gt;39611.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39611/39611.2.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39586 (Handle absolute request URI-s) updated</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Tue, 17 Jan 2017 12:39:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39586#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39586#comment:10/1484656787783293</guid>
      <description>&lt;p&gt;
Thank you for your answers.
&lt;/p&gt;
&lt;p&gt;
I came through mpm-itk+mod-php and mpm-event+mod-fastcgi Currently
mpm-event + mod-proxy-fcgi is connected to PHP-FPM pools through Unix domain socket file.
&lt;a class="ext-link" href="https://github.com/szepeviktor/debian-server-tools/blob/master/webserver/apache-sites-available/Skeleton-site-ssl.conf#L77-L103"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/szepeviktor/debian-server-tools/blob/master/webserver/apache-sites-available/Skeleton-site-ssl.conf#L77-L103&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I set {{ProxyRequests Off}} so external proxy requests are not supported.
Although same-domain proxy requests are accepted.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Test&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Request
&lt;/p&gt;
&lt;p&gt;
GET &lt;a class="ext-link" href="http://www.XXXbeatrix.hu:80/in.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.XXXbeatrix.hu:80/in.php&lt;/a&gt; HTTP/1.1
&lt;/p&gt;
&lt;p&gt;
Response ($_SERVER)
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;array(33) {
  ["USER"]=&amp;gt;
  string(7) "XXXb"
  ["HOME"]=&amp;gt;
  string(13) "/home/XXXb"
  ["FCGI_ROLE"]=&amp;gt;
  string(9) "RESPONDER"
  ["SCRIPT_URL"]=&amp;gt;
  string(7) "/in.php"
  ["SCRIPT_URI"]=&amp;gt;
  string(34) "http://www.XXXbeatrix.hu/in.php"
  ["HTTP_HOST"]=&amp;gt;
  string(20) "www.XXXbeatrix.hu"
  ["HTTP_USER_AGENT"]=&amp;gt;
  string(77) "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20130809 Firefox/47.0"
  ["HTTP_ACCEPT"]=&amp;gt;
  string(9) "text/html"
  ["HTTP_ACCEPT_LANGUAGE"]=&amp;gt;
  string(2) "en"
  ["HTTP_CONNECTION"]=&amp;gt;
  string(5) "close"
  ["PATH"]=&amp;gt;
  string(60) "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  ["SERVER_SIGNATURE"]=&amp;gt;
  string(65) "&amp;lt;address&amp;gt;Apache Server at www.XXXbeatrix.hu Port 80&amp;lt;/address&amp;gt;"
  ["SERVER_SOFTWARE"]=&amp;gt;
  string(6) "Apache"
  ["SERVER_NAME"]=&amp;gt;
  string(20) "www.XXXbeatrix.hu"
  ["SERVER_ADDR"]=&amp;gt;
  string(14) "79.172.214.123"
  ["SERVER_PORT"]=&amp;gt;
  string(2) "80"
  ["REMOTE_ADDR"]=&amp;gt;
  string(13) "62.201.94.190"
  ["DOCUMENT_ROOT"]=&amp;gt;
  string(32) "/home/XXXb/public_html/server"
  ["REQUEST_SCHEME"]=&amp;gt;
  string(4) "http"
  ["CONTEXT_PREFIX"]=&amp;gt;
  string(0) ""
  ["CONTEXT_DOCUMENT_ROOT"]=&amp;gt;
  string(32) "/home/XXXb/public_html/server"
  ["SERVER_ADMIN"]=&amp;gt;
  string(19) "webmaster@szepe.net"
  ["SCRIPT_FILENAME"]=&amp;gt;
  string(39) "/home/XXXb/public_html/server/in.php"
  ["REMOTE_PORT"]=&amp;gt;
  string(5) "45710"
  ["GATEWAY_INTERFACE"]=&amp;gt;
  string(7) "CGI/1.1"
  ["SERVER_PROTOCOL"]=&amp;gt;
  string(8) "HTTP/1.1"
  ["REQUEST_METHOD"]=&amp;gt;
  string(3) "GET"
  ["QUERY_STRING"]=&amp;gt;
  string(0) ""
  ["REQUEST_URI"]=&amp;gt;
  string(37) "http://www.XXXbeatrix.hu:80/in.php"
  ["SCRIPT_NAME"]=&amp;gt;
  string(7) "/in.php"
  ["PHP_SELF"]=&amp;gt;
  string(7) "/in.php"
  ["REQUEST_TIME_FLOAT"]=&amp;gt;
  float(1484656326.2476)
  ["REQUEST_TIME"]=&amp;gt;
  int(1484656326)
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So the request URI stays the original: "&lt;a class="ext-link" href="http://www.XXXbeatrix.hu:80/in.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.XXXbeatrix.hu:80/in.php&lt;/a&gt;" and I suggest WordPress could strip scheme,host,port.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39593 (Improve DocBlocks in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>Soean</dc:creator>

      <pubDate>Tue, 17 Jan 2017 11:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39593#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39593#comment:7/1484651333334306</guid>
      <description>&lt;p&gt;
The other &lt;code&gt;WP_Upgrader_Skin&lt;/code&gt; classes also have incomplete DocBlocks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;WP_Upgrader_Skin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Bulk_Plugin_Upgrader_Skin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Bulk_Theme_Upgrader_Skin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Bulk_Upgrader_Skin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Language_Pack_Upgrader_Skin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Plugin_Installer_Skin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Plugin_Upgrader_Skin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Theme_Installer_Skin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Theme_Upgrader_Skin&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39603 (The more posts with similar names you have, the slower you save the ...) updated</title>
      
        <dc:creator>bisyarin</dc:creator>

      <pubDate>Tue, 17 Jan 2017 10:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39603#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39603#comment:6/1484650392132334</guid>
      <description>&lt;p&gt;
Thank you for prompt reply, @johnbillion, @pento, and @rmccue!
&lt;/p&gt;
&lt;p&gt;
You are making a good poing, @pento. I didn't even think of this situation. As a quick fix for this I would suggest 'ORDER BY post_modified DESC', but it stops working if all four events (create foo, create bar, rename foo-&amp;gt;bar, create bar) happen on the same second. So, I'll try to find another solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39604 (Consider making the 'changes lost' message within the experience) closed</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 17 Jan 2017 10:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39604#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39604#comment:2/1484648587404594</guid>
      <description>invalid: &lt;p&gt;
@westonruter thanks for the links. I can see how this means we can't customize them so I'll close this for now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39600 (Customizer: unable to remove title on navigation) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 17 Jan 2017 10:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39600#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39600#comment:2/1484648325984974</guid>
      <description>&lt;p&gt;
My screenshot refers to the 'Sample Page' navigation just so it's clear what I'm expecting gone. That's what is staying.
&lt;/p&gt;
&lt;p&gt;
I do not have a blank space. Whilst I don't, if this could get caused by a blank space can we fix that - seems potentially a common thing for users to do.
&lt;/p&gt;
&lt;p&gt;
Even if this is expected, I'd suggest maybe we should try and have something better for users?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39577 (Twenty Seventeen: Pages with sidebar) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Tue, 17 Jan 2017 09:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39577#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39577#comment:3/1484645451167864</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39577 (Twenty Seventeen: Pages with sidebar) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Tue, 17 Jan 2017 09:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39577#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39577#comment:2/1484645433970519</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39611 (Change message string in `wp-signup.php`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 17 Jan 2017 08:42:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39611#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39611#comment:1/1484642577765658</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch @jignesh.nakrani!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39613 (Use Shift + Delete to bypass Trash/Prompt) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 17 Jan 2017 08:24:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39613</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39613/1484641479221036</guid>
      <description>&lt;p&gt;
There are times where deleting many single items is necessary, but the bulk edit interface isn't desirable. For these situations, it might be nice to have a Shift + Delete interface, that bypasses the warnings and sends items straight to being permanently deleted.
&lt;/p&gt;
&lt;p&gt;
bbPress is my current example of this, where it's not uncommon to want to cherry-pick several topics/replies for different bulk actions in the same view, or mass-delete topic tags where dozens of spam tags exist and clicking "Delete" in every action-row brings up a dedicated prompt.
&lt;/p&gt;
&lt;p&gt;
Yes, you can check the boxes and use Bulk Edit to delete them, but UX wise that approach requires a bit more planning than you usually want to do when you're in cleanup mode. It isn't comfortable to queue up a bunch of internal todo's just to moderate a queue of topics &amp;amp; replies, but it does feel comfortable to have identified something needing doing, and to be able to do that think as quickly as possible.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39612 ((Resolve) Error due to Backbone.History being started again) created</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Tue, 17 Jan 2017 08:21:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39612</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39612/1484641275875251</guid>
      <description>&lt;p&gt;
When using Backbone, an error is thrown if you (try to) start the history multiple times. For regular browsers, this means that JavaScript is effectively not working at all.
&lt;/p&gt;
&lt;p&gt;
In WordPress core, the history is just started without further ado. And this leads to problems when you have a plugin (or a theme, for that matter) that uses Backbone itself (and that maybe even checks for an already started history). Depending on the dependencies of individual JavaScript files, the plugin JS might be included earlier than the core JS. The plugin checks for a running history, doesn't find one, starts one, ... and then core comes along and implicitly triggers an error.
&lt;/p&gt;
&lt;p&gt;
This could be resolved by checking the history status before starting it, and then maybe either don't do anything at all, or stop (and then restart) the history.
In my opinion, core is &lt;em&gt;allowed&lt;/em&gt; to configure Backbone as needed, so stopping an already started history and then (re)starting it like core wants it to be is totally fine in my opinion.
&lt;/p&gt;
&lt;p&gt;
So, why isn't there a check right now?
Does anyone see any problem when integrating such checks?
&lt;/p&gt;
&lt;p&gt;
Any third-party JS code is, of course, required to configure the root of the Backbone history just like core does - otherwise everything will break anyway.
And if some plugin author decides to ignore this (or maybe just doesn't know this!), this would lead in either the core JS or the plugin JS not working properly (routing wouldn't happen as expected). But it does &lt;strong&gt;not&lt;/strong&gt; result in &lt;strong&gt;no JavaScript at all&lt;/strong&gt; being functional, which is a big plus in my opinion. :)
&lt;/p&gt;
&lt;p&gt;
So, once again, instead of doing this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Backbone.history.start({ /* options */ });
&lt;/pre&gt;&lt;p&gt;
we could &lt;strong&gt;either&lt;/strong&gt; do this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! Backbone.History.started ) {
    Backbone.history.start({ /* options */ });
}
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;or&lt;/strong&gt; that:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( Backbone.History.started ) {
    Backbone.history.stop();
}
Backbone.history.start({ /* options */ });
&lt;/pre&gt;&lt;p&gt;
Any opinions?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39473 (get_routes() called multiple times within single REST request causing ...) updated</title>
      
        <author>ruud@…</author>

      <pubDate>Tue, 17 Jan 2017 07:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39473#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39473#comment:4/1484639937820011</guid>
      <description>&lt;p&gt;
Hi Ryan and James,
&lt;/p&gt;
&lt;p&gt;
Thanks for having a look at this patch.
&lt;/p&gt;
&lt;p&gt;
What is your opinion about introducing a new variable $route_map, instead of re-using $endpoints?
I this patch I did not use $endpoints with a test for it being empty because it is not, it gets initialized with the default root endpoint.
&lt;/p&gt;
&lt;p&gt;
I have time to fix any code for this patch today, so let me know.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Ruud
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39096-3-patch.png attached to Ticket #39096</title>
      
        <dc:creator>tejas5989</dc:creator>

      <pubDate>Tue, 17 Jan 2017 07:57:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39096/39096-3-patch.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39096/39096-3-patch.png/1484639877814901</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39096 (Placeholder Text in input field not fully visible) updated</title>
      
        <dc:creator>tejas5989</dc:creator>

      <pubDate>Tue, 17 Jan 2017 07:55:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39096#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39096#comment:8/1484639757843671</guid>
      <description>&lt;p&gt;
I have added the patch with the two changes regarding the Design and the color Hexa sample code. I have also attached screenshot for your review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39096.3.patch attached to Ticket #39096</title>
      
        <dc:creator>tejas5989</dc:creator>

      <pubDate>Tue, 17 Jan 2017 07:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39096/39096.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39096/39096.3.patch/1484639405830949</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39473 (get_routes() called multiple times within single REST request causing ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Tue, 17 Jan 2017 07:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39473#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39473#comment:3/1484639143534990</guid>
      <description>&lt;p&gt;
I'm not worried about this. Code really shouldn't rely on &lt;code&gt;get_routes&lt;/code&gt; being recomputed, and I'm not aware of any that does.  But if there is a need to do this in the future, said "interesting" code can call &lt;code&gt;set_route_map( null )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We should also remove the extra level of indentation and most of the whitespace changes in this patch by switching the conditional around:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( ! empty( $endpoints ) ) {
    return $endpoints;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39606 (Missing @access in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>mitraval192</dc:creator>

      <pubDate>Tue, 17 Jan 2017 07:41:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39606#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39606#comment:3/1484638898502699</guid>
      <description>&lt;p&gt;
Hey @Soean thank you.
&lt;/p&gt;
&lt;p&gt;
I have submitted my patch on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39593" title="#39593: defect (bug): Improve DocBlocks in class-automatic-upgrader-skin.php (new)"&gt;#39593&lt;/a&gt; ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39606.patch attached to Ticket #39593</title>
      
        <dc:creator>mitraval192</dc:creator>

      <pubDate>Tue, 17 Jan 2017 07:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39593/39606.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39593/39606.patch/1484638664614329</guid>
      <description>&lt;p&gt;
Added Ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39606" title="#39606: defect (bug): Missing @access in class-automatic-upgrader-skin.php (closed: duplicate)"&gt;#39606&lt;/a&gt; patch for the @access
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 17 Jan 2017 06:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:16/1484634857586487</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39309#comment:14" title="Comment 14"&gt;paragoninitiativeenterprises&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think shipping a PHP-based SHA512 implementation is worth anyones time here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Given that &lt;code&gt;hash()&lt;/code&gt; is supposed to be in PHP 5.1.2 and newer, anyone using something as old as 5.2.4 should still have it: &lt;a class="ext-link" href="http://php.net/manual/en/function.hash.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.hash.php&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Put bluntly, &lt;code&gt;--disable-all&lt;/code&gt; is standard in many linux distro's (annoyingly) and disables this sort of stuff if you don't also install the extra packages (and not all sysadmins do), later versions of PHP disable the ability to separate some of the core extensions such as &lt;code&gt;ext/hash&lt;/code&gt; and &lt;code&gt;ext/spl&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It should also be expected that core would have a minimum of 2 valid signing keys authorised, to allow for secure revocation and replacement.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is similar to Airship's requirements, where everyone has at least two keys: One master key, and one signing key. The master key can revoke or mint new (master, signing) keys. The signing keys are the ones actually used for package signing. (This is true for Paragon as it is for anyone who builds an Airship extension.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Makes sense, thanks for confirming that to be a good method.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
39309.2.patch​ doesn't actually use the libsodium extension, correct? due to it's reliance upon ParagonIE_Sodium_Compat::*()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It uses sodium_compat. If ext/libsodium is installed, sodium_compat will just kick off to the extension. If it's not installed, then sodium_compat uses the pure-PHP implemenation. This is a reasonable trade-off:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, gotcha, it's not a polyfill as such, rather a pass-through library, that makes sense. I hadn't reviewed the code other than the public interface.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 06:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:15/1484634497018572</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39309#comment:14" title="Comment 14"&gt;paragoninitiativeenterprises&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Given that &lt;code&gt;hash()&lt;/code&gt; is supposed to be in PHP 5.1.2 and newer, anyone using something as old as 5.2.4 should still have it: &lt;a class="ext-link" href="http://php.net/manual/en/function.hash.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.hash.php&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Note that it can be disabled, which is the bigger concern: &lt;a class="ext-link" href="http://php.net/manual/en/hash.installation.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/hash.installation.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That said...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Either way, I'd agree with not supporting systems without ext/hash.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
...I also agree. &lt;code&gt;--disable-hash&lt;/code&gt; seems like enough of an edge case that we need not bother thinking about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>paragoninitiativeenterprises</dc:creator>

      <pubDate>Tue, 17 Jan 2017 06:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:14/1484633863033012</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think shipping a PHP-based SHA512 implementation is worth anyones time here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Given that &lt;code&gt;hash()&lt;/code&gt; is supposed to be in PHP 5.1.2 and newer, anyone using something as old as 5.2.4 should still have it: &lt;a class="ext-link" href="http://php.net/manual/en/function.hash.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.hash.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Anyone who claims not to is either lying about their actual PHP version or running a dangerous configuration, probably by having compiled it themselves once upon a time.
&lt;/p&gt;
&lt;p&gt;
Either way, I'd agree with not supporting systems without ext/hash.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All signatures should be transparent to a user, a typical user should never be prompted to enter hashes, nor see them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Indeed, the only person who will &lt;strong&gt;ever&lt;/strong&gt; need to do anything is the release managers.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Individual w.org authors having their own keys/etc, should be kept out of scope for now and focused on later, don't complicate matters further than needed for now, focus on the W.org =&amp;gt; W link.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep. That's why the patch has a hard-coded Ed25519 public key (the exact keypair given is in my comment above).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It should also be expected that core would have a minimum of 2 valid signing keys authorised, to allow for secure revocation and replacement.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is similar to Airship's requirements, where everyone has at least two keys: One master key, and one signing key. The master key can revoke or mint new (master, signing) keys. The signing keys are the ones actually used for package signing. (This is true for Paragon as it is for anyone who builds an Airship extension.)
&lt;/p&gt;
&lt;p&gt;
This is a more robust model should the signing key ever be compromised.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Focusing on Ed25519 seems fine to me, however, I've reached out to a few others to ask if anyone has other preferences we should look at here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please do.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
39309.2.patch​ doesn't actually use the libsodium extension, correct? due to it's reliance upon ParagonIE_Sodium_Compat::*()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It uses sodium_compat. If ext/libsodium is installed, sodium_compat will just kick off to the extension. If it's not installed, then sodium_compat uses the pure-PHP implemenation. This is a reasonable trade-off:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you can install PHP extensions from PECL, you get greater performance and less risk of side-channels introduced by the PHP interpreter
&lt;/li&gt;&lt;li&gt;If you cannot install PHP extensions from PECL, you can still verify signatures etc.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
@paragoninitiativeenterprises I assume it wouldn't be possible for us to only ship the the Ed25519 crypto (&amp;amp;dependancies) with WordPress, we'd have to pull the full libsodium compat in, correct?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Strictly speaking, it is possible to isolate Ed25519 and its dependencies.
&lt;/p&gt;
&lt;p&gt;
However, that's a hack job that I don't think anyone is going to want to perform every time we release an update. Given the delicate nature of security code, I wouldn't recommend doing so. Additionally, if someone wanted to use sodium_compat in a WordPress project (e.g. an extension that communicates via the Noise protocol framework, using our ChaCha20Poly1305 implementation) and you only pulled in part of it, they'd probably have a bad time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39209 (replace 1 check with current_user_can( 'manage_network' ) in wp-signup.php) updated</title>
      
        <dc:creator>jignesh.nakrani</dc:creator>

      <pubDate>Tue, 17 Jan 2017 06:09:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39209#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39209#comment:6/1484633364267047</guid>
      <description>&lt;p&gt;
@jeremyfelt updating patch with Replaced is_super_admin() check with current_user_can( 'manage_network' ) only.
&lt;/p&gt;
&lt;p&gt;
Removed text changing from this ticket and created separate ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39611" title="#39611: defect (bug): Change message string in `wp-signup.php` (closed: fixed)"&gt;#39611&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39611.patch attached to Ticket #39611</title>
      
        <dc:creator>jignesh.nakrani</dc:creator>

      <pubDate>Tue, 17 Jan 2017 06:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39611/39611.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39611/39611.patch/1484633295215236</guid>
      <description>&lt;p&gt;
text changes as per &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39209" title="#39209: enhancement: replace 1 check with current_user_can( 'manage_network' ) in wp-signup.php (closed: fixed)"&gt;#39209&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39611 (Change message string in `wp-signup.php`) created</title>
      
        <dc:creator>jignesh.nakrani</dc:creator>

      <pubDate>Tue, 17 Jan 2017 06:05:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39611</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39611/1484633107614171</guid>
      <description>&lt;p&gt;
change the message string to &lt;code&gt;Greetings Network Administrator! The network currently allows &amp;amp;#8220;%s&amp;amp;#8221; registrations. To change or disable registration go to your &amp;lt;a href="%s"&amp;gt;Options page&amp;lt;/a&amp;gt;.&lt;/code&gt; and the &lt;code&gt;$i18n['blog']&lt;/code&gt; string to &lt;code&gt;site&lt;/code&gt; to match current naming conventions in in &lt;code&gt;wp-signup.php&lt;/code&gt; file
&lt;/p&gt;
&lt;p&gt;
Ref &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39209" title="#39209: enhancement: replace 1 check with current_user_can( 'manage_network' ) in wp-signup.php (closed: fixed)"&gt;#39209&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>39209-3.patch attached to Ticket #39209</title>
      
        <dc:creator>jignesh.nakrani</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39209/39209-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39209/39209-3.patch/1484632666511104</guid>
      <description>&lt;p&gt;
Replaced is_super_admin() check with current_user_can( 'manage_network' ) only
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39610 (Customize: Custom post types cannot be used in starter content) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:46:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39610#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39610#comment:5/1484631978170157</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39610.1.diff attached to Ticket #39610</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39610/39610.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39610/39610.1.diff/1484631966389959</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) reopened</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:8/1484631710361010</guid>
      <description>&lt;p&gt;
Reopening for backporting to 4.7.2.
&lt;/p&gt;
&lt;p&gt;
We should also consider removing the PATH_INFO fallback, which really only existed for a very old legacy use case (a separate &lt;code&gt;wp-json.php&lt;/code&gt; file). Technically, that may break backwards compatibility, but I highly doubt anyone is actually able to use it right now, so I don't think it would break any real code.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:7/1484631556124312</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39923" title="REST API: Correctly serve the index with PATH_INFO
When hitting the ..."&gt;39923&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Correctly serve the index with PATH_INFO&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When hitting the index, untrailingslashit() would make the REST route empty, which would then use the fallback inside WP_REST_Server. This isn't a problem most of the time, but WP_REST_Server contains a fallback to PATH_INFO. Combined with PATH_INFO permalinks, this would give a 404 on the API index, as it attempts to look up a route for "/wp-json/".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ccprog.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39432" title="#39432: defect (bug): index.php/wp-json/ does not work (closed: fixed)"&gt;#39432&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39923]: REST API: Correctly serve the index with PATH_INFO  When hitting the ...</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:39:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39923</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39923/1484631555664685</guid>
      <description>&lt;p&gt;
REST API: Correctly serve the index with PATH_INFO
&lt;/p&gt;
&lt;p&gt;
When hitting the index, untrailingslashit() would make the REST route empty, which would then use the fallback inside WP_REST_Server. This isn't a problem most of the time, but WP_REST_Server contains a fallback to PATH_INFO. Combined with PATH_INFO permalinks, this would give a 404 on the API index, as it attempts to look up a route for "/wp-json/".
&lt;/p&gt;
&lt;p&gt;
Props ccprog.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39432" title="#39432: defect (bug): index.php/wp-json/ does not work (closed: fixed)"&gt;#39432&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39473 (get_routes() called multiple times within single REST request causing ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39473#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39473#comment:2/1484631273058976</guid>
      <description>&lt;p&gt;
This seems OK, but could potentially break when switching between sites with multisite. I'd be curious to hear from @jnylen0 on that point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39061 (REST API pagination: Large INT passed to `paged` query arg doesn't ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39061#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39061#comment:8/1484630774250757</guid>
      <description>&lt;p&gt;
It seems like the cutoff value here is &lt;code&gt;PHP_INT_MAX&lt;/code&gt;, so could we just check &lt;code&gt;$value &amp;gt; PHP_INT_MAX&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39610.test-case.diff attached to Ticket #39610</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39610/39610.test-case.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39610/39610.test-case.diff/1484630697338193</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39610 (Customize: Custom post types cannot be used in starter content) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:22:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39610#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39610#comment:4/1484630528380556</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1484630526001543"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39610 (Customize: Custom post types cannot be used in starter content) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39610#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39610#comment:3/1484630493645419</guid>
      <description>&lt;p&gt;
A fix also was needed in Customize Posts to prevent a warning from being triggered: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/pull/340"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts/pull/340&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39578 (Enhancement for rest api comment controller create_item method to ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39578#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39578#comment:6/1484630293402542</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I pushed this forward to 4.8 instead, as I don't see a real reason to backport to a minor release. Thanks for the patch! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39578 (Enhancement for rest api comment controller create_item method to ...) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:17:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39578#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39578#comment:5/1484630236055513</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39922" title="REST API: Allow shortcircuiting rest_pre_insert_comment
 ..."&gt;39922&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Allow shortcircuiting rest_pre_insert_comment&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
rest_pre_insert_{post_type} allows returning a WP_Error from the filter to shortcircuit actually creating the object, so it makes sense to do so for comments too.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dspilka.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39578" title="#39578: enhancement: Enhancement for rest api comment controller create_item method to ... (closed: fixed)"&gt;#39578&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39922]: REST API: Allow shortcircuiting rest_pre_insert_comment  ...</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39922</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39922/1484630235580769</guid>
      <description>&lt;p&gt;
REST API: Allow shortcircuiting rest_pre_insert_comment
&lt;/p&gt;
&lt;p&gt;
rest_pre_insert_{post_type} allows returning a WP_Error from the filter to shortcircuit actually creating the object, so it makes sense to do so for comments too.
&lt;/p&gt;
&lt;p&gt;
Props dspilka.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39578" title="#39578: enhancement: Enhancement for rest api comment controller create_item method to ... (closed: fixed)"&gt;#39578&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39610 (Customize: Custom post types cannot be used in starter content) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39610#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39610#comment:2/1484630133279719</guid>
      <description>&lt;p&gt;
The problem is that &lt;code&gt;\WP_Customize_Nav_Menus::insert_auto_draft_post()&lt;/code&gt; was doing a &lt;code&gt;post_type_exists()&lt;/code&gt; check and bailing. It's clear that for the purposes of this API method there needn't be a post type existence check, especially in the case of importing starter content. Note that &lt;code&gt;post_type_exists()&lt;/code&gt; check is still present in &lt;code&gt;WP_Customize_Nav_Menus::ajax_insert_auto_draft_post()&lt;/code&gt; and so the check was actually redundant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39610 (Customize: Custom post types cannot be used in starter content) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:10:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39610#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39610#comment:1/1484629842653027</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39610.0.diff attached to Ticket #39610</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39610/39610.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39610/39610.0.diff/1484629822031970</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39610 (Customize: Custom post types cannot be used in starter content) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 05:09:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39610</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39610/1484629798137377</guid>
      <description>&lt;p&gt;
As &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1484299578000674"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;reported&lt;/a&gt; by @tiagonoronha:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
hi! I noticed that custom posts types cannot be used in Starter Content. CPTs are registered in the &lt;code&gt;init&lt;/code&gt; hook, way after starter content is loaded in &lt;code&gt;after_theme_setup&lt;/code&gt;. Is this a known issue? thanks!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1484554544000689"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;and&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi! Well, they literally cannot be used in any way. Adding a post of a CPT in starter content gives me a warning in the customizer. I’m testing this with WooCommerce that registers the CPTs on &lt;code&gt;init&lt;/code&gt;. This is not a problem with the default post types because they get registered two times, in &lt;code&gt;wp-settings.php&lt;/code&gt; and then again on the &lt;code&gt;init&lt;/code&gt; hook.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>39578.2.diff attached to Ticket #39578</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39578/39578.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39578/39578.2.diff/1484628871689596</guid>
      <description>&lt;p&gt;
Add phpDoc
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39600 (Customizer: unable to remove title on navigation) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39600#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39600#comment:1/1484628225079910</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@karmatosed I believe this is expected. When a nav menu item's label is empty it inherits its title from the object it is related with, so here “Sample Page”. However, I am confused by your screenshot because I see there is no placeholder. Do you have a blank space in there by chance?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39593 (Improve DocBlocks in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>carl-alberto</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39593#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39593#comment:6/1484627956706462</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39609 (Customizer should display "Fade" effect for entire iFrame for settings ...) updated</title>
      
        <dc:creator>AJClarke</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39609#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39609#comment:2/1484627941182928</guid>
      <description>&lt;p&gt;
Hi Weston,
&lt;/p&gt;
&lt;p&gt;
Some other examples I can think of off the top of my head may be...
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Customizing a meta tag (like viewport)
&lt;/li&gt;&lt;li&gt;Altering a stylesheet without using postMessage
&lt;/li&gt;&lt;li&gt;Inline Javascript
&lt;/li&gt;&lt;li&gt;Elements that display on hover only
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Not sure what else, I do believe the main usage would be for the style attribute.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39609#comment:1" title="Comment 1"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@AJClarke cheers for the suggestion. I think that probably makes sense, at least in the case of selective refresh for a partial whose placement container is a &lt;code&gt;style&lt;/code&gt; element since clearly the refreshed element should will cause some visual change to the page which the user should be looking for. I can't think of other cases where a partial's placement container would be hidden, so I don't know if the change you're suggesting should be applied to all or just &lt;code&gt;style&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Milestoning to 4.5 since that is when selective refresh was introduced.
&lt;/p&gt;
&lt;p&gt;
See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39389" title="#39389: enhancement: Customize: Make sure selective refreshed partial placement is scrolled ... (new)"&gt;#39389&lt;/a&gt; (Customize: Make sure selective refreshed partial placement is scrolled into view).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39593.3.diff attached to Ticket #39593</title>
      
        <dc:creator>carl-alberto</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:36:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39593/39593.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39593/39593.3.diff/1484627766268270</guid>
      <description>&lt;p&gt;
Here's another attempt
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38329 (Create positioning control for Custom Logos) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38329#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38329#comment:5/1484627623441419</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Perhaps the theme options could be amended with a &lt;code&gt;position_choices&lt;/code&gt; array?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_theme_support&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'custom-logo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'width'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'height'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'flex-width'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'position_choices'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'above'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Above'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyseventeen'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'left_side'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Left Side'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyseventeen'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'right_side'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Right Side'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyseventeen'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'below'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Below'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyseventeen'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When this &lt;code&gt;position_choices&lt;/code&gt; theme support config option is present, this could cause an additional &lt;code&gt;custom_logo_position&lt;/code&gt; setting and control to appear, with a dropdown of the choices presented in the &lt;code&gt;add_theme_support()&lt;/code&gt; call. A theme would then be responsible for looking at &lt;code&gt;get_theme_mod( 'custom_logo_position' )&lt;/code&gt; to determine where in the template that the logo should be displayed.
&lt;/p&gt;
&lt;p&gt;
Note also that the &lt;code&gt;custom_logo_position&lt;/code&gt; setting would probably need to default to have the &lt;code&gt;refresh&lt;/code&gt; transport, as the template would probably need to be refreshed as a whole to move the logo to the required position.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39389 (Customize: Make sure selective refreshed partial placement is scrolled ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39389#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39389#comment:8/1484627227783405</guid>
      <description>&lt;p&gt;
@karmatosed attached a video. Note in this example the scrolling in the preview is only done when a widget control is expanded… expanding the control acts like the inverse of the visual edit shortcut—perhaps this could be called a “preview shortcut”. For other controls that lack an expanding control, like Site Title, should this scrolling be done whenever a change is made to the setting? Should scrolling to the changed element in the preview be done in every case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>scroll widget into view upon control expansion.mov attached to Ticket #39389</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:23:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39389/scroll%20widget%20into%20view%20upon%20control%20expansion.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39389/scroll%20widget%20into%20view%20upon%20control%20expansion.mov/1484627038562014</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39578 (Enhancement for rest api comment controller create_item method to ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39578#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39578#comment:4/1484627006301256</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@dspilka Thanks for the patch :) Just to note: your indentation is off in the patch, but seeing how it's only 3 lines, not a huge issue here. Something to keep in mind for future patches though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39603 (The more posts with similar names you have, the slower you save the ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39603#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39603#comment:5/1484626769213792</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ouch. I figured MySQL would do a natural sort here, but guess not.
&lt;/p&gt;
&lt;p&gt;
The other solution I can think of would be to do &lt;code&gt;ORDER BY LENGTH(post_name) DESC, post_name&lt;/code&gt;, but a) the performance would likely suck, and b) this would fail with &lt;code&gt;foo-a-b&lt;/code&gt; and &lt;code&gt;foo-1&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Leaving open, as we should keep exploring how to improve the performance, but switching to a direct query doesn't appear to be a good solution here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39609 (Customizer should display "Fade" effect for entire iFrame for settings ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39609#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39609#comment:1/1484626394657064</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@AJClarke cheers for the suggestion. I think that probably makes sense, at least in the case of selective refresh for a partial whose placement container is a &lt;code&gt;style&lt;/code&gt; element since clearly the refreshed element should will cause some visual change to the page which the user should be looking for. I can't think of other cases where a partial's placement container would be hidden, so I don't know if the change you're suggesting should be applied to all or just &lt;code&gt;style&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Milestoning to 4.5 since that is when selective refresh was introduced.
&lt;/p&gt;
&lt;p&gt;
See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39389" title="#39389: enhancement: Customize: Make sure selective refreshed partial placement is scrolled ... (new)"&gt;#39389&lt;/a&gt; (Customize: Make sure selective refreshed partial placement is scrolled into view).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:13:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:13/1484626382350009</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39309#comment:12" title="Comment 12"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Once again, &lt;code&gt;ext/spl&lt;/code&gt; can be disabled under PHP 5.2. So no form of autoloading is possible on those systems.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
SPL can be disabled, but autoloading itself cannot be (PHP's core engine contains support for &lt;code&gt;__autoload&lt;/code&gt;). &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36926" title="#36926: enhancement: Autoloading: Introduce compatibility shim for spl_autoload_register (closed: fixed)"&gt;#36926&lt;/a&gt; (in 4.7) introduced an &lt;code&gt;spl_autoload_register&lt;/code&gt; shim, so it can be used here fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39586 (Handle absolute request URI-s) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39586#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39586#comment:9/1484626058343836</guid>
      <description>&lt;p&gt;
Per @dd32's note, it depends on your server here, but Apache/nginx _should_ be correctly passing the URL in and handling the URL parsing correctly here.
&lt;/p&gt;
&lt;p&gt;
By "What exactly in WordPress would need to handle this?", I meant more, "what exactly is breaking in WordPress?". Evidently something in &lt;code&gt;$_SERVER&lt;/code&gt; is set incorrectly, but the question is "what"? :) (My guess is &lt;code&gt;REQUEST_URI&lt;/code&gt;)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39586#comment:7" title="Comment 7"&gt;szepe.viktor&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We need to mention that browsers usually send only relative URI-s. &lt;em&gt;Actually it took me 2 weeks to find out that it is valid to send an absolute URI.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, technically speaking, it is not. Servers are split into two types in HTTP: proxy servers, and origin servers. The absolute form is only used for proxy servers, but Apache/nginx act as origin servers, so the client is acting in an invalid way.
&lt;/p&gt;
&lt;p&gt;
Specifically, per &lt;a class="ext-link" href="https://tools.ietf.org/html/rfc7230#section-5.3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RFC7230, §5.3&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When making a request directly to an origin server, other than a
CONNECT or server-wide OPTIONS request (as detailed below), a client
MUST send only the absolute path and query components of the target
URI as the request-target.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The RFC also says "all HTTP/1.1 servers MUST accept the absoluteURI form in requests, even though HTTP/1.1 clients will only generate them in requests to proxies." As far as I can tell, Apache/nginx should be converting this to the relative form before passing to PHP, but it appears it's not.
&lt;/p&gt;
&lt;p&gt;
I suspect this is probably a misconfiguration at the server level (Apache/nginx), but seeing as we can fix it on our end, we may as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39603 (The more posts with similar names you have, the slower you save the ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:04:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39603#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39603#comment:4/1484625876504166</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39603#comment:3" title="Comment 3"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39603#comment:2" title="Comment 2"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After that, create another post with slug &lt;code&gt;bar&lt;/code&gt; - it should be changed to &lt;code&gt;bar-3&lt;/code&gt;, but I think &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39603/constant-time-slug-generation.diff" title="Attachment 'constant-time-slug-generation.diff' in Ticket #39603"&gt;constant-time-slug-generation.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39603/constant-time-slug-generation.diff" title="Download"&gt;​&lt;/a&gt; will return &lt;code&gt;bar-2&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This could be fixed with &lt;code&gt;ORDER BY post_name&lt;/code&gt;, right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nope.
&lt;/p&gt;
&lt;pre class="wiki"&gt;mysql&amp;gt; DROP TABLE IF EXISTS foo;
Query OK, 0 rows affected (0.00 sec)
mysql&amp;gt; CREATE TABLE foo (
    -&amp;gt; bar VARCHAR(255)
    -&amp;gt; );
Query OK, 0 rows affected (0.01 sec)
mysql&amp;gt; INSERT INTO foo(bar) VALUES('baz'),('baz-1'),('baz-2'),('baz-10');
Query OK, 4 rows affected (0.00 sec)
Records: 4  Duplicates: 0  Warnings: 0
mysql&amp;gt; SELECT * FROM foo ORDER BY bar DESC LIMIT 1;
+-------+
| bar   |
+-------+
| baz-2 |
+-------+
1 row in set (0.00 sec)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39593 (Improve DocBlocks in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39593#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39593#comment:5/1484625752744548</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Needs a refresh to include &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39606/39606.patch" title="Attachment '39606.patch' in Ticket #39606"&gt;39606.patch:ticket:39606&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39606/39606.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34870 (dbDelta Not Specifying Key Length Duplicate Indexes) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34870#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34870#comment:21/1484625610685455</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39921" title="dbDelta: Ignore index subparts when checking for duplicate indices.
 ..."&gt;39921&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
dbDelta: Ignore index subparts when checking for duplicate indices.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If index lengths change in table definitions, we don't recreate the index - instead, we throw a database error, as &lt;code&gt;dbDelta()&lt;/code&gt; tries to create a new index with the same name.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It's better to leave the index as is, MySQL doesn't have an efficient process for resizing indices, and dropping/creating is a slow process which we don't want to trigger automatically.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34870" title="#34870: defect (bug): dbDelta Not Specifying Key Length Duplicate Indexes (closed: fixed)"&gt;#34870&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39921]: dbDelta: Ignore index subparts when checking for duplicate indices.  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 17 Jan 2017 04:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39921</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39921/1484625609992951</guid>
      <description>&lt;p&gt;
dbDelta: Ignore index subparts when checking for duplicate indices.
&lt;/p&gt;
&lt;p&gt;
If index lengths change in table definitions, we don't recreate the index - instead, we throw a database error, as &lt;code&gt;dbDelta()&lt;/code&gt; tries to create a new index with the same name.
&lt;/p&gt;
&lt;p&gt;
It's better to leave the index as is, MySQL doesn't have an efficient process for resizing indices, and dropping/creating is a slow process which we don't want to trigger automatically.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34870" title="#34870: defect (bug): dbDelta Not Specifying Key Length Duplicate Indexes (closed: fixed)"&gt;#34870&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39603 (The more posts with similar names you have, the slower you save the ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39603#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39603#comment:3/1484625412661077</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39603#comment:2" title="Comment 2"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After that, create another post with slug &lt;code&gt;bar&lt;/code&gt; - it should be changed to &lt;code&gt;bar-3&lt;/code&gt;, but I think &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39603/constant-time-slug-generation.diff" title="Attachment 'constant-time-slug-generation.diff' in Ticket #39603"&gt;constant-time-slug-generation.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39603/constant-time-slug-generation.diff" title="Download"&gt;​&lt;/a&gt; will return &lt;code&gt;bar-2&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This could be fixed with &lt;code&gt;ORDER BY post_name&lt;/code&gt;, right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34870 (dbDelta Not Specifying Key Length Duplicate Indexes) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34870#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34870#comment:20/1484625237605999</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #24044,​39605 batch updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=24044%2C39605</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=24044%2C39605/1484625189642474</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/24044" title="#24044: defect (bug): Add index to wp_options to aid/improve performance (reopened)"&gt;#24044&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39223 (Add a filter to edit $meta array in wpmu_signup_user) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39223#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39223#comment:12/1484625144698266</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39920" title="Users: Introduce `signup_site_meta` and `signup_user_meta` for ..."&gt;39920&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Users: Introduce &lt;code&gt;signup_site_meta&lt;/code&gt; and &lt;code&gt;signup_user_meta&lt;/code&gt; for filtering signup metadata in &lt;code&gt;wpmu_signup_blog()&lt;/code&gt; and &lt;code&gt;wpmu_signup_user()&lt;/code&gt;, respectively.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Mista-Flo.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39223" title="#39223: enhancement: Add a filter to edit $meta array in wpmu_signup_user (closed: fixed)"&gt;#39223&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39920]: Users: Introduce `signup_site_meta` and `signup_user_meta` for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39920</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39920/1484625144213472</guid>
      <description>&lt;p&gt;
Users: Introduce &lt;code&gt;signup_site_meta&lt;/code&gt; and &lt;code&gt;signup_user_meta&lt;/code&gt; for filtering signup metadata in &lt;code&gt;wpmu_signup_blog()&lt;/code&gt; and &lt;code&gt;wpmu_signup_user()&lt;/code&gt;, respectively.
&lt;/p&gt;
&lt;p&gt;
Props Mista-Flo.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39223" title="#39223: enhancement: Add a filter to edit $meta array in wpmu_signup_user (closed: fixed)"&gt;#39223&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39581 (Unexpected Date Modified after delete and re-import) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:48:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39581#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39581#comment:3/1484624902609233</guid>
      <description>&lt;p&gt;
It depends on how exactly you're importing here. When posts are first created, the modified time is &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4a1108b9f9da0a563402cf6c8a1cd103c441eeb3/wp-includes/post.php#L3147-L3153"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;set to the post date&lt;/a&gt;. On subsequent updates, the modified time is changed to the current time.
&lt;/p&gt;
&lt;p&gt;
If you're only calling &lt;code&gt;wp_insert_post&lt;/code&gt; a single time (to create the post), the post status is set to &lt;code&gt;publish&lt;/code&gt;, and you're passing in a post date, then the modified time will be set to the supplied post date.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39591 (Introduce wp_doing_cron()) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:43:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39591#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39591#comment:8/1484624614517715</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39591#comment:7" title="Comment 7"&gt;tfrommen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, since the constant is not defined in all situations (in fact, in WordPress core, it is only defined when doing a CRON task), noone can simply &lt;em&gt;check the constant&lt;/em&gt;. They'd have to check &lt;code&gt;defined( 'DOING_CRON' ) &amp;amp;&amp;amp; DOING_CRON&lt;/code&gt;, which is &lt;strong&gt;not&lt;/strong&gt; only looking up a constant.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My point was that the &lt;code&gt;defined&lt;/code&gt; check doesn't really cost anything, apart from the mental overhead of writing it. :) (Specifically, it's 3 PHP opcodes for `defined('X') &amp;amp;&amp;amp; X, which is basically an instant lookup.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To make that clear, I am not saying, nor assuming, to really boost anyone's WordPress site by these micro-optimizations. That's just nonsene. However, caching that kind of data clearly isn't a bad thing at all.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm more just saying that you're not saving anything by storing in a variable. The performance is never really going to matter. Saving in a variable &lt;em&gt;does&lt;/em&gt; increase the indirection though. Compare:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$foo = a();
$bar = b();
$baz = c();
echo $foo . $bar . $baz;
&lt;/pre&gt;&lt;p&gt;
vs
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo a() . b() . c();
&lt;/pre&gt;&lt;p&gt;
It's more that there's no real &lt;em&gt;need&lt;/em&gt; for a variable. If I'm reading the code, I now potentially need to read the variable declaration rather than just seeing it inline with the rest of the code. The clarity from the direct use can be better, and the performance difference is negligible, so might as well go with the clearer option. :)
&lt;/p&gt;
&lt;p&gt;
(I don't really care, but there are downsides to unneeded caching. It's not fair to say it's always a good thing. :))
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Currently, the only thing one can do is to check the constant. If the &lt;em&gt;storage&lt;/em&gt; of the CRON status definition ever were to change (I know, I know: won't happen; but still), all of the code directly working with the constant would have to be adapted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's possible already to do basically whatever you want with cron replacements, so I'm not sure I see that argument.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
The main argument against this is that it's essentially a "mode" of WordPress, and therefore shouldn't be able to change during a request. It usually doesn't really make sense to be in cron mode, then not be in cron mode.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;However&lt;/em&gt;, unit tests do occasionally want to do things like this, so having it filterable is very handy for that. This was one of the key points on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25669" title="#25669: enhancement: Introduce helper function for AJAX checks (closed: fixed)"&gt;#25669&lt;/a&gt; (&lt;code&gt;wp_doing_ajax()&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
One other thing I forgot to note: &lt;code&gt;cron&lt;/code&gt; should always be lowercase. It's an abbreviation of "chronological", not an acronym. Apart from that (and potentially the variable), patch looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39219 (Add `assertNotFalse` method to `WP_UnitTestCase`.) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39219#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39219#comment:6/1484624376931954</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39919" title="Build/Test Tools: Add `assertNotFalse()` method to `WP_UnitTestCase` ..."&gt;39919&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Add &lt;code&gt;assertNotFalse()&lt;/code&gt; method to &lt;code&gt;WP_UnitTestCase&lt;/code&gt; and use it where appropriate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props peterwilsoncc.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39219" title="#39219: enhancement: Add `assertNotFalse` method to `WP_UnitTestCase`. (closed: fixed)"&gt;#39219&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39919]: Build/Test Tools: Add `assertNotFalse()` method to `WP_UnitTestCase` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39919/1484624376425437</guid>
      <description>&lt;p&gt;
Build/Test Tools: Add &lt;code&gt;assertNotFalse()&lt;/code&gt; method to &lt;code&gt;WP_UnitTestCase&lt;/code&gt; and use it where appropriate.
&lt;/p&gt;
&lt;p&gt;
Props peterwilsoncc.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39219" title="#39219: enhancement: Add `assertNotFalse` method to `WP_UnitTestCase`. (closed: fixed)"&gt;#39219&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 17 Jan 2017 03:09:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:12/1484622555716581</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't have time to delve deeply into this right now, however, a few very rough notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Due to our old PHP support, sometimes &lt;code&gt;ext/hash&lt;/code&gt; isn't available. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29518" title="#29518: defect (bug): Fatal error in WP_Session_Tokens::hash_token() (closed: fixed)"&gt;#29518&lt;/a&gt;  We may be able to require the extension, or simply skip signature verification for those cases. I don't think shipping a PHP-based SHA512 implementation is worth anyones time here.
&lt;/li&gt;&lt;li&gt;Once again, &lt;code&gt;ext/spl&lt;/code&gt; can be disabled under PHP 5.2. So no form of autoloading is possible on those systems.
&lt;/li&gt;&lt;li&gt;Based on the above, supporting back as far as possible is good, but IMHO PHP 5.3+ is acceptable. PHP 5.2 support here isn't critical. PHP 5.3 may still be able to disable &lt;code&gt;ext/hash&lt;/code&gt; though, but once again, I'm fine not supporting that.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Testing against &lt;code&gt;https://wordpress.org/wordpress-latest.zip&lt;/code&gt; with signature verification based on  &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39309/39309.2.patch" title="Attachment '39309.2.patch' in Ticket #39309"&gt;39309.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39309/39309.2.patch" title="Download"&gt;​&lt;/a&gt;  &amp;amp; comment 5 above
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Under PHP 7.0 local VM performance was ~240ms per sign, ~255ms per verify.
&lt;/li&gt;&lt;li&gt;Under PHP 5.3.3 local VM performance was ~380ms per sign, ~330ms per verify.
&lt;ul&gt;&lt;li&gt;PHP 5.3.3 with CPU throttled to 20%, performance suffered obviously with ~830ms per sign, ~950ms per verify.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;em&gt;edit: Note: I didn't look at memory usage closely. We already have issues with memory limits during unzip; It looks like verification uses an extra ~2M of memory for an 8M file.&lt;/em&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Not super-fast, but not out of the question. I'm not sure why signing was slower than verifying in the initial PHP 5.3.3 run, I've run it over 50 iterations twice on each setup with similar results.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It should be expected that signature verification may take up to a second in the wild, hosts are likely going to be under increased load during updates and that will affect signature time. Not all WordPress sites are hosted with adequate hardware resources.
&lt;/li&gt;&lt;li&gt;It should also be expected that core would have a minimum of 2 valid signing keys authorised, to allow for secure revocation and replacement.
&lt;ul&gt;&lt;li&gt;For example; primary and secondary backup, OR one primary for Core, one primary for plugins/themes/translations/etc, single secondary to authorise key replacements, OR something else that made sense.
&lt;/li&gt;&lt;li&gt;If multiple "primary" keys are possible, a way to differentiate which keys are options for which packages would be needed.
&lt;/li&gt;&lt;li&gt;Secondary keys would add a overhead for failed verifications, but failed signature verification appears to be rather fast, as it aborts much earlier.
&lt;/li&gt;&lt;li&gt;&lt;em&gt;This does not affect initial implementation of patches, nor is an immediate blocker to be solved, it would require discussion on the w.org systems side to determine what route we would take here.&lt;/em&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A few more random thoughts and notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;All signatures should be transparent to a user, a typical user should never be prompted to enter hashes, nor see them.
&lt;/li&gt;&lt;li&gt;Individual w.org authors having their own keys/etc, should be kept out of scope for now and focused on later, don't complicate matters further than needed for now, focus on the W.org =&amp;gt; W link.
&lt;/li&gt;&lt;li&gt;Focusing on &lt;code&gt;Ed25519&lt;/code&gt; seems fine to me, however, I've reached out to a few others to ask if anyone has other preferences we should look at here.
&lt;/li&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39309/39309.2.patch" title="Attachment '39309.2.patch' in Ticket #39309"&gt;39309.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39309/39309.2.patch" title="Download"&gt;​&lt;/a&gt; doesn't actually use the libsodium extension, correct? due to it's reliance upon &lt;code&gt;ParagonIE_Sodium_Compat::*()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;@paragoninitiativeenterprises I assume it wouldn't be possible for us to only ship the the &lt;code&gt;Ed25519&lt;/code&gt; crypto (&amp;amp;dependancies) with WordPress, we'd have to pull the full libsodium compat in, correct?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Finally; Marking this as &lt;code&gt;Future Release&lt;/code&gt; as it's accepted we'll add something here, but no firm timeline for completion at this point in time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39235 (incorect @covers parm in unit test causes php covers report to fail) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 02:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39235#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39235#comment:7/1484621006492474</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39918" title="Build/Test Tools: Correctly reference function names in `@covers` ..."&gt;39918&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Correctly reference function names in &lt;code&gt;@covers&lt;/code&gt; entries.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pbearne.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39235" title="#39235: defect (bug): incorect @covers parm in unit test causes php covers report to fail (closed: fixed)"&gt;#39235&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39918]: Build/Test Tools: Correctly reference function names in `@covers` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 02:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39918/1484621005977398</guid>
      <description>&lt;p&gt;
Build/Test Tools: Correctly reference function names in &lt;code&gt;@covers&lt;/code&gt; entries.
&lt;/p&gt;
&lt;p&gt;
Props pbearne.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39235" title="#39235: defect (bug): incorect @covers parm in unit test causes php covers report to fail (closed: fixed)"&gt;#39235&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38772 (restrict_manage_posts in wp-media-list-table.php missing 2nd param) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 02:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38772#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38772#comment:7/1484620634842013</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39917" title="List Tables: Pass the `$which` parameter to `restrict_manage_posts` ..."&gt;39917&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
List Tables: Pass the &lt;code&gt;$which&lt;/code&gt; parameter to &lt;code&gt;restrict_manage_posts&lt;/code&gt; filter instance in &lt;code&gt;WP_Media_List_Table&lt;/code&gt;, missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37422" title="List Tables: Pass the `$which` parameter to `restrict_manage_posts` ..."&gt;[37422]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props wpsmith.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38772" title="#38772: defect (bug): restrict_manage_posts in wp-media-list-table.php missing 2nd param (closed: fixed)"&gt;#38772&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39917]: List Tables: Pass the `$which` parameter to `restrict_manage_posts` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 17 Jan 2017 02:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39917</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39917/1484620634364888</guid>
      <description>&lt;p&gt;
List Tables: Pass the &lt;code&gt;$which&lt;/code&gt; parameter to &lt;code&gt;restrict_manage_posts&lt;/code&gt; filter instance in &lt;code&gt;WP_Media_List_Table&lt;/code&gt;, missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37422" title="List Tables: Pass the `$which` parameter to `restrict_manage_posts` ..."&gt;[37422]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props wpsmith.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38772" title="#38772: defect (bug): restrict_manage_posts in wp-media-list-table.php missing 2nd param (closed: fixed)"&gt;#38772&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39096 (Placeholder Text in input field not fully visible) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Tue, 17 Jan 2017 02:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39096#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39096#comment:7/1484620342864752</guid>
      <description>&lt;p&gt;
1) thinking about what @westonruter proposed
2) made a new patch
3) waiting for feedback
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39096.diff attached to Ticket #39096</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Tue, 17 Jan 2017 02:32:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39096/39096.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39096/39096.diff/1484620322142925</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39608 (changes are not appearing when not logged in) updated</title>
      
        <dc:creator>dkdc77</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39608#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39608#comment:2/1484617025674754</guid>
      <description>&lt;p&gt;
Hi - thank you (and sorry for posting in the wrong location). I will create a thread there. I had contacted my host first and they cleared everything and the issues still persists. calling again....
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38340 (Prepare WordPress core to MediaElement to 3.x) updated</title>
      
        <dc:creator>isantolin</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38340#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38340#comment:2/1484616676094894</guid>
      <description>&lt;p&gt;
Now, version 3.0 is out
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39609 (Customizer should display "Fade" effect for entire iFrame for settings ...) created</title>
      
        <dc:creator>AJClarke</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39609</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39609/1484616641094057</guid>
      <description>&lt;p&gt;
When modifying the value of a setting in the customizer that uses partialRefresh for the transport, typically, the element that is being modified on the live site fades out as the customizer replaces the element with the correct output. This gives the user a nice visual letting them know to be patient as the output is modified.
&lt;/p&gt;
&lt;p&gt;
In some cases, the element being modified may not be visible in which case there is no cue to the user to let them know things are being updated.
&lt;/p&gt;
&lt;p&gt;
A good example would be an advanced setting for changing the color scheme of the site which adds inline CSS to the head tag. Here is a little video example: &lt;a class="ext-link" href="https://cl.ly/illS"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cl.ly/illS&lt;/a&gt; (I don't use postMessage for this setting because there are filters in place so developers can hook in custom elements to be modified and for 3rd party plugin support).
&lt;/p&gt;
&lt;p&gt;
I'm sure there are other circumstances where a setting may be altering a "hidden" element. This is just one example and while there is very little delay in my specific example, I believe for consistency and UI purposes it would make sense to add the extra check to see if the element is visible and if not fade-out the whole iFrame during the refresh process.
&lt;/p&gt;
&lt;p&gt;
Thank you for considering!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39608 (changes are not appearing when not logged in) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39608#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39608#comment:1/1484616531186705</guid>
      <description>invalid: &lt;p&gt;
Hi @dkdc77 and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
This WordPress Trac instance is for reporting bugs in WordPress, not for support. You may create a thread on our &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt; to help diagnose your site.
&lt;/p&gt;
&lt;p&gt;
However, in this case I can confirm that it's your hosts cache that's causing the problem as bypassing your hosts cache shows the correct data, you'll need to contact your host to solve your problem. FYI @mikehansenme
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39570 (Extra markup added to links with IE11) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39570#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39570#comment:6/1484616276533520</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39916" title="TinyMCE: strip browser inserted `&amp;lt;u&amp;gt;` and &amp;lt;font&amp;gt;` tags from inside ..."&gt;39916&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: strip browser inserted &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt; and &amp;lt;font&amp;gt;` tags from inside links when copying and pasting in IE and Edge.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39570" title="#39570: defect (bug): Extra markup added to links with IE11 (closed: fixed)"&gt;#39570&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39916]: TinyMCE: strip browser inserted `` and ` tags from inside ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39916</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39916/1484616275957525</guid>
      <description>&lt;p&gt;
TinyMCE: strip browser inserted &lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt; and &amp;lt;font&amp;gt;` tags from inside links when copying and pasting in IE and Edge.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39570" title="#39570: defect (bug): Extra markup added to links with IE11 (closed: fixed)"&gt;#39570&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39570 (Extra markup added to links with IE11) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39570#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39570#comment:5/1484615963984973</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39570#comment:4" title="Comment 4"&gt;iseulde&lt;/a&gt;:
Sure. Thinking best would be to fix it here for now, then remove when it is fixed upstream in the &lt;code&gt;paste&lt;/code&gt; plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>lbptOutdated.png attached to Ticket #39608</title>
      
        <dc:creator>dkdc77</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39608/lbptOutdated.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39608/lbptOutdated.png/1484615942943950</guid>
      <description>&lt;p&gt;
outdated content
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>lbptCurrent.png attached to Ticket #39608</title>
      
        <dc:creator>dkdc77</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39608/lbptCurrent.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39608/lbptCurrent.png/1484615923519941</guid>
      <description>&lt;p&gt;
Current Content
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39608 (changes are not appearing when not logged in) created</title>
      
        <dc:creator>dkdc77</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:18:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39608</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39608/1484615900034764</guid>
      <description>&lt;p&gt;
sample page - &lt;a class="ext-link" href="http://www.lakeburienpt.com/wellness/art/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.lakeburienpt.com/wellness/art/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
i edit the site using chrome (mac) and can see all changes no problem (either logged in or not).
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;however&lt;/strong&gt;, any other browsers (safari / firefox / windows / mac, pc, mobile) are not showing any changes i have made since December. Site seems to be stuck back then - i have a calendar on the above page and it is showing December instead of January, where it would normally auto update to the current month.
&lt;/p&gt;
&lt;p&gt;
I contacted the host - they cleared the site and server cache. I installed total w3 and cleared cache from there. I cleared all browser cache and restarted my computer. I also deactivate the plugins and theme as indicated - no effect. I tried to create new pages - doesn't appear. I tried to delete pages - no effect.
&lt;/p&gt;
&lt;p&gt;
I cannot seem to attach files to this ticket, so will describe updated versus outdated content:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;updated page content&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;shows January
&lt;/li&gt;&lt;li&gt;text in blue boxes say "Abstract Painting Classes" and "Brushes and Barrels Paint Night"
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;outdated content&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;shows December
&lt;/li&gt;&lt;li&gt;text in blue boxes say "Intuitive Be Free Painting Classes" and "Rustic Holiday Tree Making"
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
site is running Bridge theme by Qode.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39586 (Handle absolute request URI-s) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 17 Jan 2017 01:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39586#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39586#comment:8/1484615344936311</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
This "circumstance" is the above mentioned standard.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I meant specific server configurations. Web servers normalise the incoming request before providing it to PHP, most configurations would make &lt;code&gt;GET /&lt;/code&gt; (against example.com) and &lt;code&gt;GET http://example.com/&lt;/code&gt; appear the same to the application. WordPress supports &lt;code&gt;GET http://example.com/post-slug/&lt;/code&gt; properly when the web server in front of it sanitizes the incoming request correctly.
Apache and Nginx both do this by default, unless you incorrectly configure proxy functionality IIRC.
&lt;/p&gt;
&lt;p&gt;
What server environment are you running under, and are there any specific configuration settings in play?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:2/1484609905123248</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39256/39256.2.diff" title="Attachment '39256.2.diff' in Ticket #39256"&gt;39256.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39256/39256.2.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Fix the &lt;strong&gt;first&lt;/strong&gt; issue described in the original report.  The problem was that a value for the &lt;code&gt;date&lt;/code&gt; field without a timezone offset was being interpreted as a UTC date during parsing.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Improve behavior when specifying dates with timezone offsets (do not remove the timezone offset to force a date into UTC).  Previously, you could set &lt;code&gt;date_gmt&lt;/code&gt; to e.g. &lt;code&gt;2016-12-12T18:00:00-01:00&lt;/code&gt;... and this would be interpreted as &lt;code&gt;2016-12-12T18:00:00&lt;/code&gt; UTC.  I can't think of a reason why this is what you would want.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Tests for all of the above cases (and some extra ones for the &lt;code&gt;rest_parse_date&lt;/code&gt; function).  Currently there are basically no tests for REST API date handling.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Still left to do:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Allow updating the date of a draft.  I'll address that in this ticket.
&lt;/li&gt;&lt;li&gt;Figure out a way to work around the zero/null &lt;code&gt;date_gmt&lt;/code&gt; terribleness with drafts.  I have some further ideas on this, but this work can happen on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt; after this ticket is done.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This latest patch has 28 test cases for updating post dates using the API (6 failing; 22 passing).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:58/1484609343324155</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I rewrote the &lt;code&gt;blob-mimes&lt;/code&gt; library to work within the WordPress core and altered &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt; to:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
-- only pass expected image types to the image handling (i.e. fix SVG breakages)
-- run FINFO (if possible) if, after the image code, &lt;code&gt;$type&lt;/code&gt; is still false
-- FINFO checks do not trigger false if the server cannot figure out what kind of file it is, or if the MIME returned is the generic "application/octet-stream"
-- the MIME database is greatly expanded (more than 10-fold) via &lt;code&gt;blob-mimes&lt;/code&gt;, though only hooked into this one area at the moment. More work could be done to improve/expand MIME-related checks throughout the code base. But one step at a time...
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39256.2.diff attached to Ticket #39256</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:24:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39256/39256.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39256/39256.2.diff/1484609089506381</guid>
      <description>&lt;p&gt;
Fix issues with timezone conversion; add a whole bunch of tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39297 (wrong return type in WP_User_Query::get_total()) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39297#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39297#comment:5/1484608987039252</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39915" title="User Query: Cast `$user_total` as an `int`.
The `$user_total` member ..."&gt;39915&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
User Query: Cast &lt;code&gt;$user_total&lt;/code&gt; as an &lt;code&gt;int&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;$user_total&lt;/code&gt; member of &lt;code&gt;WP_User_Query&lt;/code&gt;, and corresponding &lt;code&gt;get_total()&lt;/code&gt; method, have always been documented as returning an &lt;code&gt;int&lt;/code&gt;. &lt;code&gt;$user_total&lt;/code&gt;, however, is populated by &lt;code&gt;$wpdb-&amp;gt;get_var()&lt;/code&gt;, which returns &lt;br /&gt;
a string (containing an integer value). Casting the return value from &lt;code&gt;get_var()&lt;/code&gt; as an &lt;code&gt;int&lt;/code&gt; rectifies this discrepency.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props runciters.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39297" title="#39297: defect (bug): wrong return type in WP_User_Query::get_total() (closed: fixed)"&gt;#39297&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39915]: User Query: Cast `$user_total` as an `int`.  The `$user_total` member ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39915/1484608986517667</guid>
      <description>&lt;p&gt;
User Query: Cast &lt;code&gt;$user_total&lt;/code&gt; as an &lt;code&gt;int&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;$user_total&lt;/code&gt; member of &lt;code&gt;WP_User_Query&lt;/code&gt;, and corresponding &lt;code&gt;get_total()&lt;/code&gt; method, have always been documented as returning an &lt;code&gt;int&lt;/code&gt;. &lt;code&gt;$user_total&lt;/code&gt;, however, is populated by &lt;code&gt;$wpdb-&amp;gt;get_var()&lt;/code&gt;, which returns
a string (containing an integer value). Casting the return value from &lt;code&gt;get_var()&lt;/code&gt; as an &lt;code&gt;int&lt;/code&gt; rectifies this discrepency.
&lt;/p&gt;
&lt;p&gt;
Props runciters.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39297" title="#39297: defect (bug): wrong return type in WP_User_Query::get_total() (closed: fixed)"&gt;#39297&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39087 (Customizer: Add indicator when additional widget areas are hidden) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:22:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39087#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39087#comment:7/1484608950805791</guid>
      <description>&lt;p&gt;
So I think the patch needed here is for the notification to appear at the top when there are sidebars hidden due to not being contextual/active to the current template being previewed. @karmatosed do you agree? Are you saying something more should be done? Given some sidebar X we can't provide a link in the UI to navigate to a template that features the sidebar because it's unknown which templates would have the &lt;code&gt;dynamic_sidebar()&lt;/code&gt; calls in them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch-finfo.diff attached to Ticket #39550</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/patch-finfo.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/patch-finfo.diff/1484608817865420</guid>
      <description>&lt;p&gt;
Patch to improve MIME handling/name corrections for uploads.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39096 (Placeholder Text in input field not fully visible) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:17:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39096#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39096#comment:6/1484608665653955</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Instead of the placeholder being a label, what about a sample value? Like &lt;code&gt;#21759b…&lt;/code&gt;? Then it won't vary by language and it would give users a cue to what the thing is that they should be entering there. Users may not even know what a “hex color” is, but they would probably recognize &lt;code&gt;#21759b&lt;/code&gt; as some color code thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39297 (wrong return type in WP_User_Query::get_total()) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 16 Jan 2017 23:00:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39297#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39297#comment:4/1484607657488532</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38114 (Make it easier to visualize where to put your content in a given theme ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 22:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38114#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38114#comment:52/1484606112397419</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1484606110001424"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>paragoninitiativeenterprises</dc:creator>

      <pubDate>Mon, 16 Jan 2017 21:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:11/1484603468462942</guid>
      <description>&lt;p&gt;
The original intent was to split this into several sub-tickets that address one of the items on this list, and close the parent ticket if and only if all of the items on the checklist are resolved.
&lt;/p&gt;
&lt;p&gt;
I can still do that, if that's easier to reason about.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39603 (The more posts with similar names you have, the slower you save the ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 16 Jan 2017 21:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39603#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39603#comment:2/1484603357774798</guid>
      <description>&lt;p&gt;
Another edge case to test - when a slug on an older post has been edited. Ie:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create post with slug &lt;code&gt;foo&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Create post with slug &lt;code&gt;bar&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Edit &lt;code&gt;foo&lt;/code&gt; to have the slug &lt;code&gt;bar&lt;/code&gt;, which should be changed to &lt;code&gt;bar-2&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
After that, create another post with slug &lt;code&gt;bar&lt;/code&gt; - it should be changed to &lt;code&gt;bar-3&lt;/code&gt;, but I think &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39603/constant-time-slug-generation.diff" title="Attachment 'constant-time-slug-generation.diff' in Ticket #39603"&gt;constant-time-slug-generation.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39603/constant-time-slug-generation.diff" title="Download"&gt;​&lt;/a&gt; will return &lt;code&gt;bar-2&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Mon, 16 Jan 2017 21:35:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:10/1484602502508475</guid>
      <description>&lt;p&gt;
I also worry that we may be conflating too many different aspects brought up here in one ticket.  Is there a reason that the "decentralized authenticity" is being pushed here, rather than keeping this focused more on the signing / verifying of packages and moving the decentralized aspect onto another ticket?  I'd think they could be undertaken separately, but I could easily be mistaken.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Mon, 16 Jan 2017 21:33:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:9/1484602381549903</guid>
      <description>&lt;p&gt;
It looks like in some of your changes -- notably &lt;code&gt;wp-admin/includes/file.php&lt;/code&gt; and &lt;code&gt;wp-admin/includes/class-wp-upgrader.php&lt;/code&gt; -- you're using spaces instead of tabs I think?  The indentation is looking a bit wonky as I skim the patch.
&lt;/p&gt;
&lt;p&gt;
Minor pedantism, but in the &lt;code&gt;wp-admin/includes/class-wp-upgrader.php&lt;/code&gt; changes there's some code style whitespace issues as well.  WordPress has a lot of legacy code style issues, and we just fix them as lines get changed -- it helps preserve the blame history.  So when you're changing old line 277/new line 283, it should have spaces wrapped around the variable inside the parentheses.
&lt;/p&gt;
&lt;p&gt;
Also, re: whether or not the &lt;code&gt;sodium_compat&lt;/code&gt; uses autoloader stuff -- relevant: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If it's possible for the next version of the patch to be split into two files -- one adding the library, the other containing the core file changes -- that may be easier to skim for differing code styles for each, as opposed to having to find the core files in the patch amidst the new library files.  Were there just the aforementioned two core files changed?
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
For themes and plugins, I'm assuming that we're most concerned about the authenticity of upgrades.  While installations can be important, it strikes me that upgrades -- specifically automatic ones -- are more apt to be the risk area as the user isn't explicitly choosing it.
&lt;/p&gt;
&lt;p&gt;
As such, distributing public keys would likely be simplest if it were part of the theme or plugin file header.  At that point it would be a case of adding a UI into the themes/plugins repository to enable the author to get the hash of the generated zip/tarball/whatever from the .org side, verify it independently, and then paste the signature in to the wp.org ui.
&lt;/p&gt;
&lt;p&gt;
(granted, this would also mean that anything with local filesystem write access could change the public key, but if they have local filesystem write access it's game over anyways, so *shrug*)
&lt;/p&gt;
&lt;p&gt;
This can get tricky in several relatively common edge cases, but most notably --
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Changing a release after shipping it.&lt;/strong&gt;  A lot of authors do this, even if it's bad practice.  Maybe it's tweaking a changelog, maybe it's just fixing some code that is generating fatal errors.  If the files in the package change, so would the signature.  I'm not sure what the ideal circumstance here would be -- perhaps to have WP.org append a .1 to the end of the svn-specified version number, and serve it as a new version, with the old version still archived (or at least the svn path and revision saved so it could be rebuilt)?
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Anyway, just my musings on this so far.  I'm glad we're all already in agreement that the &lt;code&gt;sodium_compat&lt;/code&gt; library would require third-party verification before it is considered for inclusion into WordPress Core.  I have no idea if this is already in discussion up the chain or not, but has there been any discussion / recommendation about individuals or organizations with sufficient relevant expertise to actually do the auditing in question?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>link editor dialog multiple pages same title.png attached to Ticket #39607</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 16 Jan 2017 21:04:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39607/link%20editor%20dialog%20multiple%20pages%20same%20title.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39607/link%20editor%20dialog%20multiple%20pages%20same%20title.png/1484600684484851</guid>
      <description>&lt;p&gt;
Example of this issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39607 (Multiple pages with the same title but different parents not ...) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 16 Jan 2017 21:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39607</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39607/1484600653099998</guid>
      <description>&lt;p&gt;
Linking to another page/post on the site is made easy by the link editor dialog, which displays a list of matching items. The type of post each item is is shown on the right, so it is easy to tell the difference between multiple items with the same name if they are different post types. However, sometimes with hierarchical post types like pages there are multiple items with the same title, but different parents. There is no way to tell them apart. (See attached image.) It would be helpful if in this case the parent of the page was also shown.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39602 (Setting a page on front and blog pages means theme options go.) updated</title>
      
        <dc:creator>laurelfulford</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:55:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39602#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39602#comment:2/1484600141465670</guid>
      <description>&lt;p&gt;
I’ve tested this as well - I’m seeing the same behaviour, but I think it may be correct. I do see why it would be confusing, though!
&lt;/p&gt;
&lt;p&gt;
The Theme Options panel will only appear when a page is previewed in the Customizer. It doesn’t show for single posts or the blog posts page -- because of this, it will show and hide when you change the blog posts page under Static Front Page.
&lt;/p&gt;
&lt;p&gt;
In the video, the Customizer preview only shows the page that will be set as the blog posts page, before and after. If you try to recreate this issue with the preview on a different page than the one you assign as the blog posts page, the Customizer will change the preview to that page, causing the Theme Options panel to hide, too.
&lt;/p&gt;
&lt;p&gt;
In Pique's case, one of the controls under Theme Options doesn't use active_callback, so the panel is always visible. (It also looks like &lt;code&gt;is_front_page&lt;/code&gt; for the front page panels, so the options for the static front page are also visible when you've set the front page to display latest posts).
&lt;/p&gt;
&lt;p&gt;
Just let me know if this doesn't make sense, or if I'm missing something!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39604 (Consider making the 'changes lost' message within the experience) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:52:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39604#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39604#comment:1/1484599955664203</guid>
      <description>&lt;p&gt;
@karmatosed Unfortunately the dialog UI and message are provided by the browser. They cannot be customized… even in the &lt;em&gt;customizer&lt;/em&gt;. See also &lt;a class="ext-link" href="http://stackoverflow.com/a/276739/93579"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/a/276739/93579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>paragoninitiativeenterprises</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:8/1484599595072748</guid>
      <description>&lt;p&gt;
@rmccue I appreciate the feedback. I was unaware of this nuance, as @dd32 usually handled the random_compat upstream synchronizing.
&lt;/p&gt;
&lt;p&gt;
When I get v0.2.0 released (probably tonight) with crypto_aead_chacha20poly1305_* (for Noise), I'll send an updated patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39353 (Customize: menu widgets lose edit shortcuts when added/refreshed) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39353#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39353#comment:4/1484599154911977</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We can assign to 4.7.2 for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37430 (Add Plugins: Improve the error messages displaying) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:25:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37430#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37430#comment:8/1484598330922378</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37430/37430.3.patch" title="Attachment '37430.3.patch' in Ticket #37430"&gt;37430.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37430/37430.3.patch" title="Download"&gt;​&lt;/a&gt; is for &lt;code&gt;theme-install.php&lt;/code&gt;, not the plugin installer as the ticket suggests.
&lt;/p&gt;
&lt;p&gt;
As for the implementation: a button should be a button, not a link with &lt;code&gt;href="#"&lt;/code&gt;. See &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since we have ajax search already on the plugin install screen — can we do the reloading without a full page refresh?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38487 (the_archive_description() doesn't output the custom post type ...) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38487#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38487#comment:4/1484598140956469</guid>
      <description>&lt;p&gt;
Further to @swissspidy's post above, you may need &lt;code&gt;is_post_type_archive()&lt;/code&gt; if your filter function is in a plugin or in your functions file.
&lt;/p&gt;
&lt;p&gt;
Ref &lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/is_post_type_archive"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/is_post_type_archive&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38487 (the_archive_description() doesn't output the custom post type ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38487#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38487#comment:3/1484597728206801</guid>
      <description>&lt;p&gt;
@swb1192 &lt;code&gt;the_archive_description()&lt;/code&gt; has a filter that you can use to display the post type description yourself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:15:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:6/1484597727594436</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39367#comment:5" title="Comment 5"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39367#comment:4" title="Comment 4"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Overriding this function in the test suite is asking for trouble.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What kind of trouble would you expect to see?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I actually ran into the trouble when I opened the issue originally. WP SAML Auth defines &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt; in its &lt;a class="ext-link" href="https://github.com/pantheon-systems/wp-saml-auth/blob/master/tests/phpunit/bootstrap.php#L37-L45"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;bootstrap.php&lt;/a&gt; to overload the behavior of &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt; in &lt;code&gt;pluggable.php&lt;/code&gt;. When core's test suite began to define &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt; too, it caused fatal errors in WP SAML Auth's tests.
&lt;/p&gt;
&lt;p&gt;
I agree with @johnbillion that defining pluggable functions in core's test suite is less than ideal.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The pluggable function should be refactored to make it testable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this could be done later, and the simple patch here is probably fine for this ticket - the function is already being overridden in trunk and 4.7.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We should undo the function being overridden sooner rather than later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39606 (Missing @access in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39606#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39606#comment:2/1484597520490006</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>ID.jpg attached to Ticket #39599</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39599/ID.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39599/ID.jpg/1484597157936142</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39599 (Customizer: when no title on page it adds weird content in navigation link) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 16 Jan 2017 20:05:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39599#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39599#comment:4/1484597138666540</guid>
      <description>&lt;p&gt;
I don't know what's the perfect solution. I assume the easiest way would be forcing the user to enter a name for any post/page - so we don't need to worry about such anymore (What's the benefit of having a nameless post besides testing purposes?). But as long as we do, here some possible permutations:
&lt;/p&gt;
&lt;p&gt;
ID:20 (no title)
ID:20 (untitled)
(no title, ID:20)
(no title) [ID:20]
...
&lt;/p&gt;
&lt;p&gt;
We could also display a helping text when an untitled post/page is detected - see screenshot
&lt;/p&gt;
&lt;p&gt;
Better ideas welcome! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39599 (Customizer: when no title on page it adds weird content in navigation link) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Mon, 16 Jan 2017 19:41:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39599#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39599#comment:3/1484595711714509</guid>
      <description>&lt;p&gt;
@Presskopp
&lt;/p&gt;
&lt;p&gt;
Depends on which type of user is seeing that in the customizer. It is not directly obvious that it is the post id then displaying no title. Or does it make sense to make post or page title be required to be able to save either?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>chrigu99</dc:creator>

      <pubDate>Mon, 16 Jan 2017 19:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:15/1484594589726256</guid>
      <description>&lt;p&gt;
Jup, agree.
Thanks for your work @freakpants
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39552#comment:14" title="Comment 14"&gt;room34&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since (as I understand it) the core team has decided not to allow SVG uploads by default, be sure not to add SVG to the returned arrays of wp_get_mime_types() or wp_get_ext_types().
&lt;/p&gt;
&lt;p&gt;
I think the best solution would take @freakpants' approach: it should be self-contained within the new wp_get_image_mime() function and just make that function capable of returning "image/svg+xml" when appropriate, instead of false.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39593,​39606 batch updated</title>
      
        <dc:creator>Soean</dc:creator>

      <pubDate>Mon, 16 Jan 2017 19:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39593%2C39606</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39593%2C39606/1484594472058811</guid>
      <description>duplicate: &lt;p&gt;
Hey @mitraval192,
there is already a ticket for the docBlocks of this class. Please update the Patch in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39593" title="#39593: defect (bug): Improve DocBlocks in class-automatic-upgrader-skin.php (new)"&gt;#39593&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #19912 (Add Widget Groups and Locations) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 19:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19912#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19912#comment:26/1484593618661389</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1484593616000979"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38624 (Allow starter content to apply after a site has already been set up ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 19:03:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38624#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38624#comment:5/1484593388248063</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1484593385000959"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38900 (Customize: Add REST API endpoints for changesets) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:44:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38900#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38900#comment:4/1484592243515403</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1484592241000889"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31089 (Customize: Add revisions for changesets) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31089#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31089#comment:18/1484592207546823</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1484592205000887"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:34:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:4/1484591680411149</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.2.diff" title="Attachment '39441.2.diff' in Ticket #39441"&gt;39441.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.2.diff" title="Download"&gt;​&lt;/a&gt; is a minor update over the first iteration.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;adds support for a new &lt;code&gt;input_class&lt;/code&gt; key in the &lt;code&gt;$args&lt;/code&gt; array of &lt;code&gt;add_settings_field()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;properly fills the &lt;code&gt;label_for&lt;/code&gt; key with the value of the &lt;code&gt;input_id&lt;/code&gt; key
&lt;/li&gt;&lt;li&gt;automatically adds an &lt;code&gt;id&lt;/code&gt; attribute to the field description and the same value to the field's &lt;code&gt;aria-describedby&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;implements &lt;code&gt;render_settings_field_select()&lt;/code&gt; (just another test implementation)
&lt;/li&gt;&lt;li&gt;moves settings field callback switch clause into &lt;code&gt;add_settings_field()&lt;/code&gt; as it should be part of the argument parsing
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The small test plugin &lt;code&gt;settings-api-tests.php&lt;/code&gt; is no longer available on the ticket. It is now available on &lt;a class="ext-link" href="https://github.com/felixarntz/settings-api-tests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/felixarntz/settings-api-tests&lt;/a&gt; for collaboration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38799 (Normalize the registration of settings and control dependencies in the ...) updated</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:31:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38799#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38799#comment:3/1484591481127940</guid>
      <description>&lt;p&gt;
fixed typos... :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38799#comment:2" title="Comment 2"&gt;nikeo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38799#comment:1" title="Comment 1"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the detailed proposal @nikeo. I think this may be a good candidate for a make/core post to gather broader feedback before determining the best approach, and that could include comparisons of current approaches to doing this (via more complex JS, &lt;code&gt;active_callback&lt;/code&gt;s, etc.) that would be improved by expanding the core API.
&lt;/p&gt;
&lt;p&gt;
@westonruter do you have any thoughts here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
OK. Yes sure. Gathering more information is a must have before deciding this kind of additions.
I've already worked on something that works quite fine.
Some key consideration are :
1) to be able to simply populate the dependency description in an object that extends the api one.
2) to make sure dynamic section / settings/ controls are taken into account ( the api.Value::when() method and the api 'change' event are our friends for that ).
3) to make sure that cross section dependencies work fine, even in a lazy load context ( which will be implemented in the future as far as I understand). For that, this dependency class has to make sure that a control not yet instantiated has to be sort of "awaken".
&lt;/p&gt;
&lt;p&gt;
Let me know if / how I can help further on this. I'll be happy to if I can.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39441.2.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.2.diff/1484591181588082</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39243 (fatal error by upgrading to WordPress 4.7 from 4.6) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:26:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39243#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39243#comment:4/1484591166082027</guid>
      <description>&lt;p&gt;
Actually I can confirm that renaming each plugin in wp-content/plugins (disabling them), and re-installing Wordpress by overwriting all but wp-content, doesn't seem to immediately fix it. Site seems fine now though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39606.patch attached to Ticket #39606</title>
      
        <dc:creator>mitraval192</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:25:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39606/39606.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39606/39606.patch/1484591138308045</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38799 (Normalize the registration of settings and control dependencies in the ...) updated</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38799#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38799#comment:2/1484590749133218</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38799#comment:1" title="Comment 1"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the detailed proposal @nikeo. I think this may be a good candidate for a make/core post to gather broader feedback before determining the best approach, and that could include comparisons of current approaches to doing this (via more complex JS, &lt;code&gt;active_callback&lt;/code&gt;s, etc.) that would be improved by expanding the core API.
&lt;/p&gt;
&lt;p&gt;
@westonruter do you have any thoughts here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
OK. Yes sure. Gathering more information is a must have before deciding this kind of additions.
I've already worked on something that works quite fine.
Some key consideration are :
1) to be able to simply populate the dependency description in an object that extends the api one.
2) to make sure dynamic section / settings/ controls are taken into account ( the api.Value::when() method and the api 'change' event are our friends for that ).
3) to make sure that cross section dependencies work fine, even in a lazy load context ( which will be implemented in the future as far as I understand). For that, this dependency class has to make sure that a control not yet instantiated has to be sort of "awaken".
&lt;/p&gt;
&lt;p&gt;
Let me know if / how I can help further on this. I'll be happy to if I can.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39606.1 attached to Ticket #39606</title>
      
        <dc:creator>mitraval192</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:15:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39606/39606.1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39606/39606.1/1484590521524847</guid>
      <description>&lt;p&gt;
@access public added
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39512 (has_header_video() should be filtered) updated</title>
      
        <dc:creator>sanket.parmar</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39512#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39512#comment:2/1484590427452786</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39512.diff attached to Ticket #39512</title>
      
        <dc:creator>sanket.parmar</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:13:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39512/39512.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39512/39512.diff/1484590400703921</guid>
      <description>&lt;p&gt;
Adding a &lt;code&gt;has_header_video&lt;/code&gt; filter.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39606 (Missing @access in class-automatic-upgrader-skin.php) created</title>
      
        <dc:creator>mitraval192</dc:creator>

      <pubDate>Mon, 16 Jan 2017 18:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39606</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39606/1484589988623980</guid>
      <description>&lt;p&gt;
Missing DocBlock @access in below funtion:
public function feedback( $data ) in
wp-admin/includes/class-automatic-upgrader-skin.php
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:18/1484589394543619</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39914" title="Tests: `wpautop()` should not add extra `&amp;lt;/p&amp;gt;` before `&amp;lt;figcaption&amp;gt;`.
 ..."&gt;39914&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: &lt;code&gt;wpautop()&lt;/code&gt; should not add extra &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; before &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pbearne.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39307" title="#39307: defect (bug): &amp;lt;/p&amp;gt; tag inserted in &amp;lt;figure&amp;gt; (closed: fixed)"&gt;#39307&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [39914]: Tests: `wpautop()` should not add extra `` before ``.  ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39914/1484589394073551</guid>
      <description>&lt;p&gt;
Tests: &lt;code&gt;wpautop()&lt;/code&gt; should not add extra &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; before &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props pbearne.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39307" title="#39307: defect (bug): &amp;lt;/p&amp;gt; tag inserted in &amp;lt;figure&amp;gt; (closed: fixed)"&gt;#39307&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:17/1484589080234466</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39307#comment:16" title="Comment 16"&gt;pbearne&lt;/a&gt;:
Was looking at "unifying" the tests for figcaption, track, source, param, as they are almost identical. But probably better to keep it simple and easier to read :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38734 (Dogfood the Settings API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:38:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38734#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38734#comment:14/1484588316172793</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by johnbillion. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1484588313005711"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:57/1484587740615862</guid>
      <description>&lt;p&gt;
+5 sites affected and it looks like updated wp4.7.2 alpha had problems uploading ogg as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38718 (Code Snippets function in core) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:21:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38718#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38718#comment:2/1484587313069128</guid>
      <description>&lt;p&gt;
@celloexpressions
&lt;/p&gt;
&lt;p&gt;
Correct something simlar to custom CSS but for PHP. Where the use case is code snippets.
&lt;/p&gt;
&lt;p&gt;
I am suggesting something similar to say &lt;a class="ext-link" href="https://wordpress.org/plugins/code-snippets/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/code-snippets/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So where a user is not using a child theme, so not adding in code snippets into the functions.php and wanted to add in code snippets for minor changes to there site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31218 (nav-menu.js menu item added event) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31218#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31218#comment:33/1484587299638216</guid>
      <description>&lt;p&gt;
I just ran the tests locally and everything seems a-ok.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39096 (Placeholder Text in input field not fully visible) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39096#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39096#comment:5/1484586891340219</guid>
      <description>&lt;p&gt;
The string is longer in some languages, yes.
&lt;/p&gt;
&lt;p&gt;
Example: Хексадекадна вредност (Macedonian)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31218.11.diff attached to Ticket #31218</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:10:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31218/31218.11.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31218/31218.11.diff/1484586624383605</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31218 (nav-menu.js menu item added event) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 16 Jan 2017 17:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31218#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31218#comment:32/1484586020924115</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31218/31218.10.diff" title="Attachment '31218.10.diff' in Ticket #31218"&gt;31218.10.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31218/31218.10.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Switch the failure callback to assert that the expected number of tests had completed. No longer tries to clear the timeout.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
With the patch, all tests pass:
&lt;a style="padding:0; border:none" href="https://cl.ly/0v183o04342Q/Image%202017-01-16%20at%2011.53.51%20AM.png"&gt;&lt;img src="https://cl.ly/0v183o04342Q/Image%202017-01-16%20at%2011.53.51%20AM.png" alt="https://cl.ly/0v183o04342Q/Image%202017-01-16%20at%2011.53.51%20AM.png" crossorigin="anonymous" title="https://cl.ly/0v183o04342Q/Image%202017-01-16%20at%2011.53.51%20AM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Without the patch, the expected events don't fire and the fail check fails:
&lt;a style="padding:0; border:none" href="https://cl.ly/0F2c251h0t1M/Image%202017-01-16%20at%2011.54.26%20AM.png"&gt;&lt;img src="https://cl.ly/0F2c251h0t1M/Image%202017-01-16%20at%2011.54.26%20AM.png" alt="https://cl.ly/0F2c251h0t1M/Image%202017-01-16%20at%2011.54.26%20AM.png" crossorigin="anonymous" title="https://cl.ly/0F2c251h0t1M/Image%202017-01-16%20at%2011.54.26%20AM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31218.10.diff attached to Ticket #31218</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31218/31218.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31218/31218.10.diff/1484585760290127</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39605 (Possible wp_options autoload field optimization) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39605#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39605#comment:1/1484585058180369</guid>
      <description>&lt;p&gt;
Previously discussed in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/8924" title="#8924: enhancement: autoload should be boolean in add_option() (reopened)"&gt;#8924&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/24044" title="#24044: defect (bug): Add index to wp_options to aid/improve performance (reopened)"&gt;#24044&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14258" title="#14258: enhancement: wp_options and MySQL's &amp;#34;log-queries-not-using-indexes&amp;#34; config (closed: wontfix)"&gt;#14258&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33747 (Reorder and Done need different context?) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33747#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33747#comment:8/1484584487594484</guid>
      <description>&lt;p&gt;
It makes more sense definitely. Changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33747.2.diff attached to Ticket #33747</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33747/33747.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33747/33747.2.diff/1484584413126657</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39096 (Placeholder Text in input field not fully visible) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39096#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39096#comment:4/1484584230577368</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This fix looks good, but I do wonder if we need a more flexible solution for translation going forward? It does fix the initial issue though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34880 (Hidden state for Site Title and Tagline) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:27:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34880#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34880#comment:14/1484584063351058</guid>
      <description>&lt;p&gt;
@rianrietveld any a11y suggestions here?
&lt;/p&gt;
&lt;p&gt;
@anevins hmm I'm not sure how many would want to edit ready. That's interesting to maybe find out? What recent discussion are you referring to so we're clear?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39603 (The more posts with similar names you have, the slower you save the ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39603#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39603#comment:1/1484583967125336</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch, @bisyarin , and welcome to Trac :-)
&lt;/p&gt;
&lt;p&gt;
This will need some testing (and unit tests) to demonstrate that the functionality continues to work as expected with edge case slugs, such as &lt;code&gt;your-subject-3-2&lt;/code&gt;, &lt;code&gt;not-your-subject-7&lt;/code&gt;, &lt;code&gt;your-subject-suffix-2&lt;/code&gt;, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39087 (Customizer: Add indicator when additional widget areas are hidden) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:24:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39087#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39087#comment:6/1484583896836569</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39087 (Customizer: Add indicator when additional widget areas are hidden) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39087#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39087#comment:5/1484583876802459</guid>
      <description>&lt;p&gt;
I think related to this, but a case that causes issues in themes is a hamburger menu for example with widgets. This is hidden as closed, you can literally add widgets and unless open won't see. You're sending them to nowhere visible.
&lt;/p&gt;
&lt;p&gt;
I am wondering if a low hanging version of this is a hidden state indicator and/or an 'other page' indication (unsure if same)? Further building on this could be scroll to section (if hidden down page), preview refresh to page when on different page or even slide out menu.
&lt;/p&gt;
&lt;p&gt;
I would add a +1 to avoiding any instance where suers are wondering where they added a widget.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #38878,​39546 batch updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38878%2C39546</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38878%2C39546/1484583661215916</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39913" title="REST API: Improve test coverage of single user endpoint for public ..."&gt;39913&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Improve test coverage of single user endpoint for public data.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add test coverage for requests of a single user resource for authors of post types registered as:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;public = true, show_in_rest = true: success without auth.
&lt;/li&gt;&lt;li&gt;public = true, show_in_rest = false: fail without auth.
&lt;/li&gt;&lt;li&gt;public = false, show_in_rest = true: success without auth.
&lt;/li&gt;&lt;li&gt;public = false, show_in_rest = false: fail without auth.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38878" title="#38878: defect (bug): REST API: Default query for users endpoint doesn't scale (new)"&gt;#38878&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39546" title="#39546: enhancement: REST API: Improve test coverage of single users endpoint for public ... (closed: fixed)"&gt;#39546&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39913]: REST API: Improve test coverage of single user endpoint for public ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:21:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39913/1484583660730737</guid>
      <description>&lt;p&gt;
REST API: Improve test coverage of single user endpoint for public data.
&lt;/p&gt;
&lt;p&gt;
Add test coverage for requests of a single user resource for authors of post types registered as:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;public = true, show_in_rest = true: success without auth.
&lt;/li&gt;&lt;li&gt;public = true, show_in_rest = false: fail without auth.
&lt;/li&gt;&lt;li&gt;public = false, show_in_rest = true: success without auth.
&lt;/li&gt;&lt;li&gt;public = false, show_in_rest = false: fail without auth.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38878" title="#38878: defect (bug): REST API: Default query for users endpoint doesn't scale (new)"&gt;#38878&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39546" title="#39546: enhancement: REST API: Improve test coverage of single users endpoint for public ... (closed: fixed)"&gt;#39546&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39605 (Possible wp_options autoload field optimization) created</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39605</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39605/1484583227176737</guid>
      <description>&lt;p&gt;
I have a quick question related to the wp_options table and the autoload. Right now it is:
&lt;/p&gt;
&lt;p&gt;
mysql&amp;gt; select distinct(autoload) from wp_options;
+----------+
| autoload |
+----------+
| no       |
| yes      |
+----------+
2 rows in set (0.00 sec)
&lt;/p&gt;
&lt;p&gt;
If the only two possible options are ‘yes’ and ‘no’ then why is this not simple 0 or 1. The way it is defined right now we use 20 bytes per record only for the autoload:
&lt;/p&gt;
&lt;p&gt;
| autoload     | varchar(20)         | NO   | MUL | yes     |                |
&lt;/p&gt;
&lt;p&gt;
I would say that in terms of performance and memory usage I think this is a good improvement. Any comments or there are other reasons for the autoload to be varchar.
&lt;/p&gt;
&lt;p&gt;
Also if someone has a huge wp_options table and the autoload is boolean then the index will be much more effective.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39578 (Enhancement for rest api comment controller create_item method to ...) updated</title>
      
        <dc:creator>dspilka</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:13:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39578#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39578#comment:3/1484583213286911</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39578.diff attached to Ticket #39578</title>
      
        <dc:creator>dspilka</dc:creator>

      <pubDate>Mon, 16 Jan 2017 16:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39578/39578.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39578/39578.diff/1484583099622870</guid>
      <description>&lt;p&gt;
Patch to check for WP Error.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39389 (Customize: Make sure selective refreshed partial placement is scrolled ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39389#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39389#comment:7/1484582356094774</guid>
      <description>&lt;p&gt;
For people to give ux-feedback (as it's tagged for that), could we have a video or gif to show what is being suggested?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33747 (Reorder and Done need different context?) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:58:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33747#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33747#comment:7/1484582290985616</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just to confirm those trying to replicate this, it only shows in some languages as an issue. For example, I can't see this as an issue in English.
&lt;/p&gt;
&lt;p&gt;
With regards to the patch, wouldn't 'done reordering' make more sense? Or is that a translation issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39586 (Handle absolute request URI-s) updated</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:58:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39586#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39586#comment:7/1484582283653078</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39586#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We'd need to document (on this ticket) the server circumstances under which the scenario is possible, and also the contents of the &lt;em&gt;unaltered&lt;/em&gt; &lt;code&gt;$_SERVER&lt;/code&gt; variables, and what we mangle them to.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This "circumstance" is the above mentioned standard.
&lt;/p&gt;
&lt;p&gt;
We need to mention that browsers usually send only relative URI-s. &lt;em&gt;Actually it took me 2 weeks to find out that it is valid to send an absolute URI.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31218 (nav-menu.js menu item added event) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:55:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31218#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31218#comment:31/1484582111185113</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31218/31218.9.diff" title="Attachment '31218.9.diff' in Ticket #31218"&gt;31218.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31218/31218.9.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Cleanup
&lt;/li&gt;&lt;li&gt;Increase timeout to 1500 ms to ensure events have a chance to fire
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39586 (Handle absolute request URI-s) updated</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:54:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39586#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39586#comment:6/1484582075754474</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39586#comment:3" title="Comment 3"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure where we should be supporting this. This is something handled above WordPress, typically by your web server (Apache/nginx). What exactly in WordPress would need to handle this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually webservers handle this type of absolute URI.
WordPress gives a 404 response as it is not able to properly parse the request URI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31218.9.diff attached to Ticket #31218</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31218/31218.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31218/31218.9.diff/1484582072579427</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:50:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:109/1484581832832719</guid>
      <description>&lt;p&gt;
Do we still want this brought to the design team @celloexpressions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38329 (Create positioning control for Custom Logos) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38329#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38329#comment:4/1484581650230396</guid>
      <description>&lt;p&gt;
+1 for this. I really think users want it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31218 (nav-menu.js menu item added event) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31218#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31218#comment:30/1484581444149322</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31218/31218.8.diff" title="Attachment '31218.8.diff' in Ticket #31218"&gt;31218.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31218/31218.8.diff" title="Download"&gt;​&lt;/a&gt; corrects the issue you were seeing @welcher, can you try again please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31218.8.diff attached to Ticket #31218</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31218/31218.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31218/31218.8.diff/1484581385450632</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38821 (REST API: Consider removing `karma` from Comment endpoint) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38821#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38821#comment:13/1484580690715995</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1484580688002649"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39157 (Feed returns 404 when there are no posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39157#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39157#comment:36/1484580249751512</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39578 (Enhancement for rest api comment controller create_item method to ...) updated</title>
      
        <dc:creator>dspilka</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39578#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39578#comment:2/1484579446089544</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39578#comment:1" title="Comment 1"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Good idea, thanks. Want to write a patch? &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/contribute/#your-first-patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/contribute/#your-first-patch&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes definitely, I am attaching a patch now. It's my first time, so hopefully I'm doing this correctly. Let me know.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Dan
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39599 (Customizer: when no title on page it adds weird content in navigation link) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:02:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39599#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39599#comment:2/1484578967843341</guid>
      <description>&lt;p&gt;
This is coded as &lt;code&gt;'#%d (no title)'&lt;/code&gt; and we have 7 occurences in 5 files. The &lt;code&gt;#%d&lt;/code&gt; is the ID of the post. It's not so weird to me, but maybe we should replace &lt;code&gt;#&lt;/code&gt; by &lt;code&gt;ID:&lt;/code&gt;. If we'd just cut it, what if there are more untitled posts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39604 (Consider making the 'changes lost' message within the experience) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 15:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39604</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39604/1484578827673998</guid>
      <description>&lt;p&gt;
I think it would be a more consistent experience to not have a default pop-up box and have this message within the Customizer:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/MEJiyCGr12.png"&gt;&lt;img src="https://cldup.com/MEJiyCGr12.png" alt="https://cldup.com/MEJiyCGr12.png" crossorigin="anonymous" title="https://cldup.com/MEJiyCGr12.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
My thinking here is a cohesive experience and means the user is emersed, we can also tailor the message.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>constant-time-slug-generation.diff attached to Ticket #39603</title>
      
        <dc:creator>bisyarin</dc:creator>

      <pubDate>Mon, 16 Jan 2017 14:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39603/constant-time-slug-generation.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39603/constant-time-slug-generation.diff/1484578502155780</guid>
      <description>&lt;p&gt;
Patch enabling constant-time slug generation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39602 (Setting a page on front and blog pages means theme options go.) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Mon, 16 Jan 2017 14:54:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39602#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39602#comment:1/1484578496184494</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can confirm this. May be related to how the front page is determined.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>generate-many-posts.php attached to Ticket #39603</title>
      
        <dc:creator>bisyarin</dc:creator>

      <pubDate>Mon, 16 Jan 2017 14:52:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39603/generate-many-posts.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39603/generate-many-posts.php/1484578329886468</guid>
      <description>&lt;p&gt;
Problem Demo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39603 (The more posts with similar names you have, the slower you save the ...) created</title>
      
        <dc:creator>bisyarin</dc:creator>

      <pubDate>Mon, 16 Jan 2017 14:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39603</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39603/1484578273905717</guid>
      <description>&lt;p&gt;
Hello, developers! Thank you for your work on Wordpress!
&lt;/p&gt;
&lt;p&gt;
While using Flamingo for saving Contact Form 7 submissions, I encountered a huge slowdown after more than 11 000 submissions had been saved. I thought it was a Flamingo problem, but it appears that all autogenerated post-types in Wordpress can cause this problem.
&lt;/p&gt;
&lt;p&gt;
Contact Form 7 saves submissions as posts with 'flamingo_inbound' type, and uses 'your-subject' slug when a form doesn't have a subject (which is my case). So, in all saved form submissions I have 'your-subject, your-subject-2, ..., your-subject-N' slugs generated by wp_unique_post_slug(). The problem is that for every new 'your-subject-N' slug wp_unique_post_slug() issues N-1 SELECT queries. In other words, wp_unique_post_slug() bruteforces a new possible slug, generating a lot of SQL queries fetching all previously saved similar posts.
&lt;/p&gt;
&lt;p&gt;
You can see it if you run the attached 'generate-many-posts.php' script from your Wordpress root (more and more queries will be used for saving every new post).
&lt;/p&gt;
&lt;p&gt;
Also, let me suggest a solution. With the attached patch we don't bruteforcing the slug suffix. We just get the last appropriate slug, increment it's suffix, and than use this suffix in a new unique slug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39602 (Setting a page on front and blog pages means theme options go.) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 14:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39602</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39602/1484577579813936</guid>
      <description>&lt;p&gt;
This seems to only be happening in my testing with Twenty Seventeen. I tried to replicate this in Pique and was unable.
&lt;/p&gt;
&lt;p&gt;
If you set a static front page and select a page for the blog posts, the theme options goes away.
&lt;/p&gt;
&lt;p&gt;
You can see here in a video: &lt;a class="ext-link" href="https://dl.dropboxusercontent.com/u/2339616/Screenflick%20Movie%2060.mp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;video link&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39581 (Unexpected Date Modified after delete and re-import) updated</title>
      
        <dc:creator>ChiefAlchemist</dc:creator>

      <pubDate>Mon, 16 Jan 2017 14:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39581#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39581#comment:2/1484577487481835</guid>
      <description>&lt;p&gt;
hello @dd32 -
&lt;/p&gt;
&lt;p&gt;
"I'm assuming that this is something wrong with your code, or how it interacts with WordPress."
&lt;/p&gt;
&lt;p&gt;
Best I can tell, I don't think so. I'm not manipulating the dates at all. Just setting some properties and using wp_insert_post().
&lt;/p&gt;
&lt;p&gt;
So I'm adding via wp_insert_post(). I manually delete and then trash (via admin). And then I "import" again using wp_insert_post().
&lt;/p&gt;
&lt;p&gt;
There's not " much to go on" because that's is the gist of what is creating the problem :)
&lt;/p&gt;
&lt;p&gt;
Can you tell me what the Date(s) should be reading for those "new" rows? Maybe what I'm seeing is correct? But seeing "last modified" when I know it's a new row makes no sense at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39601 (In get_term_link() : we should be able to filter the term link ...) created</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Mon, 16 Jan 2017 14:37:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39601</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39601/1484577466992990</guid>
      <description>&lt;p&gt;
Hi!
&lt;/p&gt;
&lt;p&gt;
We can currently filter the permalink post structure in &lt;code&gt;get_permalink()&lt;/code&gt; with &lt;code&gt;pre_post_link&lt;/code&gt;. ( &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/link-template.php#L118"&gt;https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/link-template.php#L118&lt;/a&gt; )
&lt;/p&gt;
&lt;p&gt;
It woud be useful to have the same possiblity with term links in &lt;code&gt;get_term_link()&lt;/code&gt; ( &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/taxonomy.php#L3834"&gt;https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/taxonomy.php#L3834&lt;/a&gt; ), with a filter. For example with a &lt;code&gt;pre_term_link&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
That would allow developers to easily disable fancy links for terms in a given context, which is possible right now for posts but not easy to achieve with terms.
&lt;/p&gt;
&lt;p&gt;
Hope this makes sense, thanks !
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Mon, 16 Jan 2017 13:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:16/1484573458840077</guid>
      <description>&lt;p&gt;
@azaozz do you need new unit tests for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>Joe76000</dc:creator>

      <pubDate>Mon, 16 Jan 2017 13:17:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:56/1484572636781268</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:54" title="Comment 54"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:53" title="Comment 53"&gt;Joe76000&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My issue is with the latest WP 4.7.1 when trying to upload *.OGG files I have created.
I have also tried to upload .OGG files which were previously well uploaded but now they fail too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please try installing this plugin as a workaround: &lt;a class="ext-link" href="https://wordpress.org/plugins/disable-real-mime-check/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/disable-real-mime-check/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
Thank you very much. It's working like a charm!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:3/1484571046633424</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cross-reference to the ticket was wrong in the description. It is supposed to be &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38734" title="#38734: enhancement: Dogfood the Settings API (assigned)"&gt;#38734&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39599 (Customizer: when no title on page it adds weird content in navigation link) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39599#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39599#comment:1/1484570627715813</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:2/1484570625214597</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1484570623001053"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39600 (Customizer: unable to remove title on navigation) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39600</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39600/1484570597131519</guid>
      <description>&lt;p&gt;
I went into navigation and removed title, but despite saving it stayed.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/pGfWuseefR.png"&gt;&lt;img src="https://cldup.com/pGfWuseefR.png" alt="https://cldup.com/pGfWuseefR.png" crossorigin="anonymous" title="https://cldup.com/pGfWuseefR.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>39564.2.patch attached to Ticket #39564</title>
      
        <dc:creator>ketuchetan</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39564/39564.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39564/39564.2.patch/1484570583032271</guid>
      <description>&lt;p&gt;
Added patch from the src directory
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39599 (Customizer: when no title on page it adds weird content in navigation link) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39599</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39599/1484570414617296</guid>
      <description>&lt;p&gt;
I understand that that there may need to be a title, however if you have a page and remove the title you then get the following:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/sc4tmiokFB.png"&gt;&lt;img src="https://cldup.com/sc4tmiokFB.png" alt="https://cldup.com/sc4tmiokFB.png" crossorigin="anonymous" title="https://cldup.com/sc4tmiokFB.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The output being &lt;code&gt;#20 (no title)&lt;/code&gt; does make sense but couldn't we increase the usability here and just have it say 'no title'? Do we have to have &lt;code&gt;#20&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39591 (Introduce wp_doing_cron()) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39591#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39591#comment:7/1484569916186911</guid>
      <description>&lt;p&gt;
I'm very happy this is going to get merged sometime soon. :)
&lt;/p&gt;
&lt;p&gt;
Yet I want to address a few things.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39591#comment:4" title="Comment 4"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's not querying though: as a constant, it's a constant and is basically instant; as a function, it's essentially static (small overhead of filtering, but that is never going to be significant). No point caching it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm no English native speaker, so sorry for not using the exact same words you would use here.
That being said, for me, it is querying. It is asking someone else for information. Multiple times, knowing that I'd be needing the information multiple times right from the beginning. And even more, that information isn't going to change (because it is the value of a constant, as we all know).
&lt;/p&gt;
&lt;p&gt;
Caching that information in order to look it up later (which is instant) is a good thing, in my opinion.
&lt;/p&gt;
&lt;p&gt;
Also, since the constant is not defined in all situations (in fact, in WordPress core, it is only defined when doing a CRON task), noone can simply &lt;em&gt;check the constant&lt;/em&gt;. They'd have to check &lt;code&gt;defined( 'DOING_CRON' ) &amp;amp;&amp;amp; DOING_CRON&lt;/code&gt;, which is &lt;strong&gt;not&lt;/strong&gt; only looking up a constant.
&lt;/p&gt;
&lt;p&gt;
To make that clear, I am not saying, nor assuming, to really boost anyone's WordPress site by these micro-optimizations. That's just nonsene. However, caching that kind of data clearly isn't a bad thing at all.
&lt;/p&gt;
&lt;p&gt;
Furthermore, you, Ryan, said it yourself: wrapping the check in a function will introduce some (tiny) overhead. So I don't see your reasoning in doing this multiple times, instead of only once, for the &lt;em&gt;cost&lt;/em&gt; of a local variable.
&lt;/p&gt;
&lt;p&gt;
As to the introduction of that function in general. Even if the overhead would be bigger, having a public API (that is not using implementation details!) is a good thing as well. Currently, the only thing one can do is to check the constant. If the &lt;em&gt;storage&lt;/em&gt; of the CRON status definition ever were to change (I know, I know: won't happen; but still), all of the code directly working with the constant would have to be adapted.
If there were a function, which is part of the public API, and thus to be used in favor of checking the constant, one &lt;strong&gt;could&lt;/strong&gt;, some day far far away in the future, change how doing a CRON task is defined.
&lt;/p&gt;
&lt;p&gt;
Having the possibility to filter the value, is a big plus, too, yes.
I believe this is one of the major reasons for having &lt;code&gt;wp_doing_ajax()&lt;/code&gt;, isn't it?
&lt;/p&gt;
&lt;p&gt;
Just wanted to leave this here. For discussion. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39297 (wrong return type in WP_User_Query::get_total()) updated</title>
      
        <dc:creator>runciters</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:18:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39297#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39297#comment:3/1484569135251769</guid>
      <description>&lt;p&gt;
Thank you for your reply @pento!
&lt;/p&gt;
&lt;p&gt;
Here's a new updated patch (I also added a test).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-user-query-#39297-svn-test.diff attached to Ticket #39297</title>
      
        <dc:creator>runciters</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39297/class-wp-user-query-%2339297-svn-test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39297/class-wp-user-query-%2339297-svn-test.diff/1484569002043894</guid>
      <description>&lt;p&gt;
New patch with test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39591 (Introduce wp_doing_cron()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39591#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39591#comment:6/1484568926057618</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39597 (Authtype order in class-smtp.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:07:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39597#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39597#comment:1/1484568434551243</guid>
      <description>invalid: &lt;p&gt;
Hi @bcmarius, welcome to Trac! Thanks for the ticket.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;class-smtp.php&lt;/code&gt; is a part of PHPMailer external library, this should be reported upstream:
&lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/issues&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>37926.diff attached to Ticket #37926</title>
      
        <dc:creator>gma992</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:02:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37926/37926.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37926/37926.diff/1484568150671855</guid>
      <description>&lt;p&gt;
37926.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37926 (Twenty Eleven &amp; Twenty Twelve: Dropdown category widget exceeds parent ...) updated</title>
      
        <dc:creator>gma992</dc:creator>

      <pubDate>Mon, 16 Jan 2017 12:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37926#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37926#comment:5/1484568045039843</guid>
      <description>&lt;p&gt;
@karmatosed I completely forgot about this, sorry for that. Attached 37926.diff for both themes. Looks like adding the previous line is enough for all devices.
&lt;/p&gt;
&lt;pre class="wiki"&gt;.widget #cat { max-width:100%;}
&lt;/pre&gt;&lt;p&gt;
However I cannot find a proper way to select the dropdown once it has been clicked, example images on mobile device:
&lt;/p&gt;
&lt;p&gt;
Now with long categories (fits the size): &lt;a class="ext-link" href="https://cloudup.com/cW4TzU27EiQ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cW4TzU27EiQ&lt;/a&gt;
Once we click to select the long categories (does not fit the size): &lt;a class="ext-link" href="https://cloudup.com/cv9CbzOLPVM"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cv9CbzOLPVM&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39591 (Introduce wp_doing_cron()) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 16 Jan 2017 11:58:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39591#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39591#comment:5/1484567910997920</guid>
      <description>&lt;p&gt;
Regarding the caching bit, I think it would be necessary to keep the internal workings consistent. Otherwise a function might start with &lt;code&gt;wp_doing_cron()&lt;/code&gt; giving &lt;code&gt;true&lt;/code&gt;, and later continue with it giving &lt;code&gt;false&lt;/code&gt;, because a filter might have kicked in.
&lt;/p&gt;
&lt;p&gt;
I don't think these functions are meant to be able to handle changes halfway in-between.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39598 (Twenty Seventeen: Can't scroll on iPhone 4) created</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Mon, 16 Jan 2017 11:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39598</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39598/1484567868104566</guid>
      <description>&lt;p&gt;
If I visit wp-themes.com/twentyseventeen/ on iPhone 4 Safari with iOS 7.1, I can't swipe to scroll down and read/access the text.
&lt;/p&gt;
&lt;p&gt;
It might be a general issue with touch devices, not just on iPhone 4 since the browser is high on HTML5 features and should work ideally.
&lt;/p&gt;
&lt;p&gt;
Don't know how to show a demo of this. Anyone reading has to test it herself/himself to confirm.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39591 (Introduce wp_doing_cron()) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 Jan 2017 11:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39591#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39591#comment:4/1484564979195215</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39591#comment:3" title="Comment 3"&gt;tfrommen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And, yeah, caching data that is to be used multiple times (instead of querying it multiple times) is not a bad idea, right? ;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not querying though: as a constant, it's a constant and is basically instant; as a function, it's essentially static (small overhead of filtering, but that is never going to be significant). No point caching it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34870 (dbDelta Not Specifying Key Length Duplicate Indexes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 Jan 2017 11:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34870#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34870#comment:19/1484564536330728</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1484564533005588"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34870 (dbDelta Not Specifying Key Length Duplicate Indexes) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Mon, 16 Jan 2017 11:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34870#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34870#comment:18/1484564468842939</guid>
      <description>&lt;p&gt;
The problem persist also on WP 4.7.1 but I can apply that patch to continue to work without this annoying error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39597 (Authtype order in class-smtp.php) created</title>
      
        <dc:creator>bcmarius</dc:creator>

      <pubDate>Mon, 16 Jan 2017 10:51:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39597</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39597/1484563908790003</guid>
      <description>&lt;p&gt;
i had to modify line 417 in class-smtp.php so I can use authtype LOGIN
Line 417 modified    foreach (array('LOGIN', 'PLAIN', 'CRAM-MD5') as $method) {
&lt;/p&gt;
&lt;p&gt;
original was
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
foreach (array('CRAM-MD5', 'PLAIN', 'LOGIN') as $method) {
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and it always wanted to authenticate CRAM-MD5 witch my server does not support
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39566 (WordPress ignoring previously approved comment for some comment authors) updated</title>
      
        <dc:creator>rperrett</dc:creator>

      <pubDate>Mon, 16 Jan 2017 10:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39566#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39566#comment:3/1484563259134999</guid>
      <description>&lt;p&gt;
@lukecavanagh
&lt;/p&gt;
&lt;p&gt;
I'm also testing on 4.7.1, no plugins, theme is 2017.
&lt;/p&gt;
&lt;p&gt;
After further testing, it appears this is happening only for email addresses registered on the site. Guest commenting is also enabled on the site.
&lt;/p&gt;
&lt;p&gt;
If an email address is registered as a user in wordpress and that user is a post author...
Then a comment is left by a guest using the same email address as a registered user, it goes to moderation only if the option "previously approved comment..." is selected.
For guest comments using a non-registered and post author email address, the option works normally.
&lt;/p&gt;
&lt;p&gt;
I can understand why you do not want guests posting with the same email address as a registered user and post author, however this appears to be changed functionality as my client only started complaining after the upgrade to 4.7.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39596 (Cannot import a CSV since the latest minor update) updated</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Mon, 16 Jan 2017 10:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39596#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39596#comment:4/1484562887845814</guid>
      <description>&lt;p&gt;
I've seen that the last update contains some updates to the list of allowed file types, so I guess that csv is one of the more rate types that left the list.
in addition I've seen another ticket that is being worked on with some issues around mime types. but i don't have the number.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39576 (Admin - Tag autocomplete not work - WP &gt;= 4.7) updated</title>
      
        <dc:creator>mgermani</dc:creator>

      <pubDate>Mon, 16 Jan 2017 10:29:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39576#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39576#comment:5/1484562565977510</guid>
      <description>&lt;p&gt;
I did some tests with clean Wordpress version and this bug is not present with default theme. The problem is encountered when install some custom themes like this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;MediCenter - Responsive Medical WordPress Theme (&lt;a class="ext-link" href="https://themeforest.net/item/medicenter-responsive-medical-wordpress-theme/4718613"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://themeforest.net/item/medicenter-responsive-medical-wordpress-theme/4718613&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;FlatMagazione (themeforest)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Chrome Js console report this error with this message: "Uncaught TypeError: this._each is not a function" into prototype.js?ver=1.7.1:847
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39596 (Cannot import a CSV since the latest minor update) updated</title>
      
        <dc:creator>benoitchantre</dc:creator>

      <pubDate>Mon, 16 Jan 2017 10:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39596#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39596#comment:3/1484562207703261</guid>
      <description>&lt;p&gt;
@tobifjellner Thanks for the quick feedback. As it worked previously, I thought it was a regression.
&lt;/p&gt;
&lt;p&gt;
@dd32 In my case, I had no issue to upload a CSV before the latest minor update. I tested it on some sites, even a fresh install that was using 4.7. After 4.6.2 or 4.7.1, it didn't worked anymore. Thanks for the link to the other ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39591 (Introduce wp_doing_cron()) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Mon, 16 Jan 2017 10:18:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39591#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39591#comment:3/1484561894770594</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39591#comment:2" title="Comment 2"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Only nit-pick would be that the patch assigns the &lt;code&gt;$doing_cron&lt;/code&gt; variable in some cases where it'd otherwise be called repetitively, I'm not sure that level of optimising is needed - but it can't hurt I guess.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just followed that path of the &lt;code&gt;wp_doing_ajax()&lt;/code&gt; &lt;a href="https://core.trac.wordpress.org/changeset/38334"&gt;changes&lt;/a&gt;. :) The changeset didn't introduce new variables, but where it made sense, the result of the check (using &lt;code&gt;DOING_CRON&lt;/code&gt;) was cached.
&lt;/p&gt;
&lt;p&gt;
And, yeah, caching data that is to be used multiple times (instead of querying it multiple times) is not a bad idea, right? ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39550,​39596 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 09:26:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39550%2C39596</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39550%2C39596/1484558807233945</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Marking as duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt; as it's likely caused by that if it previously was working for you.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39596 (Cannot import a CSV since the latest minor update) closed</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Mon, 16 Jan 2017 09:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39596#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39596#comment:1/1484557716846640</guid>
      <description>invalid: &lt;p&gt;
First of all: This is not a bug (but rather intended functionality), and should not have been reported here. A better place would have been the support forum at &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt; or some specialized group/topic in stackexchange, facebook, linkedin or ... (add your own favorite channel here).
&lt;/p&gt;
&lt;p&gt;
Anyway:
It seems csv is not included in the default list of allowed file types/mime types for media upload.
Codex: &lt;a class="ext-link" href="https://codex.wordpress.org/Uploading_Files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Uploading_Files&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With help of a huge search engine, I found a tutorial that discusses how to add custom file types to the list of allowed files:
&lt;a class="ext-link" href="http://www.wpbeginner.com/wp-tutorials/how-to-add-additional-file-types-to-be-uploaded-in-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.wpbeginner.com/wp-tutorials/how-to-add-additional-file-types-to-be-uploaded-in-wordpress/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39596 (Cannot import a CSV since the latest minor update) created</title>
      
        <dc:creator>benoitchantre</dc:creator>

      <pubDate>Mon, 16 Jan 2017 08:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39596</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39596/1484556202486965</guid>
      <description>&lt;p&gt;
Since the latest minor update (4.7.1), we cannot upload a CSV file in the Media.
&lt;/p&gt;
&lt;p&gt;
Here's the error message : Sorry, this file type is not permitted for security reasons.
&lt;/p&gt;
&lt;p&gt;
Same result with WordPress 4.6.2
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38374 (Null check needed for call to get_post_type_object() in ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 16 Jan 2017 06:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38374#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38374#comment:2/1484547416975938</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38374/38374.diff" title="Attachment '38374.diff' in Ticket #38374"&gt;38374.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38374/38374.diff" title="Download"&gt;​&lt;/a&gt; would confirm that &lt;code&gt;$obj&lt;/code&gt; is a post type object before accessing the property.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38374.diff attached to Ticket #38374</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 16 Jan 2017 06:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38374/38374.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38374/38374.diff/1484547221892198</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 Jan 2017 05:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:7/1484544972443442</guid>
      <description>&lt;p&gt;
I haven't reviewed the content of the patch, but in terms of structure: we don't usually bring in the entire library source, just the useful bits. In this case, it looks like we only need &lt;code&gt;sodium_compat/src&lt;/code&gt;, not the tests and Composer file. Likewise, the license should be incorporated into the credits page (&lt;code&gt;wp-admin/credits.php&lt;/code&gt;) instead.
&lt;/p&gt;
&lt;p&gt;
That's probably more of a thing for a later patch as it seems this is still under development, but something to be aware of for a final patch.
&lt;/p&gt;
&lt;p&gt;
(See also the other external libraries we include: Requests, SimplePie, Text_Diff, random_compat)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39297 (wrong return type in WP_User_Query::get_total()) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 16 Jan 2017 04:38:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39297#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39297#comment:2/1484541498824741</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for the ticket and patch, @runciters!
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;$total_users&lt;/code&gt; member is also supposed to be an &lt;code&gt;int&lt;/code&gt;, so I think the better method would be to cast the value that &lt;code&gt;$wpdb-&amp;gt;get_var()&lt;/code&gt; returns as &lt;code&gt;int&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If you'd like to update the patch, we can get this sorted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39586 (Handle absolute request URI-s) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 03:35:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39586#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39586#comment:5/1484537703331978</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39586 (Handle absolute request URI-s) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 03:33:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39586#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39586#comment:4/1484537626838816</guid>
      <description>&lt;p&gt;
IMHO this would be a candidate for &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_fix_server_vars/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp_fix_server_vars()&lt;/a&gt; if a webserver configuration is incorrectly passing the full URI in what we expect to only contain a path.
&lt;/p&gt;
&lt;p&gt;
We'd need to document (on this ticket) the server circumstances under which the scenario is possible, and also the contents of the &lt;em&gt;unaltered&lt;/em&gt; &lt;code&gt;$_SERVER&lt;/code&gt; variables, and what we mangle them to.
&lt;/p&gt;
&lt;p&gt;
There have been cases in the past where we'd mangle an otherwise good &lt;code&gt;$_SERVER&lt;/code&gt; variable to something incorrect because of something odd the server was passing in a variable though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36451 (get_rest_url() not returning SSL version of the URL when the home_url ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 Jan 2017 03:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36451#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36451#comment:13/1484537532796504</guid>
      <description>&lt;p&gt;
Worth mentioning that the Host header is user input, so can't necessarily be trusted, but I don't think that generally applies in this case.
&lt;/p&gt;
&lt;p&gt;
@johnbillion You wrote the original code for this in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34299" title="#34299: enhancement: Force the REST API endpoint to HTTPS when appropriate (closed: fixed)"&gt;#34299&lt;/a&gt;, can you take a look at this ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39586 (Handle absolute request URI-s) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 Jan 2017 03:29:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39586#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39586#comment:3/1484537350937433</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not sure where we should be supporting this. This is something handled above WordPress, typically by your web server (Apache/nginx). What exactly in WordPress would need to handle this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39591 (Introduce wp_doing_cron()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 03:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39591#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39591#comment:2/1484537243599829</guid>
      <description>&lt;p&gt;
I don't see any harm in adding this.
&lt;/p&gt;
&lt;p&gt;
It could make life easier for dropins such as cavalcade, but for BC purposes I would expect having to define the constant for a while to come yet, as it's unlikely those checking if cron is in play are going to utilise these methods until they drop support for 4.7 (which is quite some way off I wouls suspect).
&lt;/p&gt;
&lt;p&gt;
Only nit-pick would be that the patch assigns the &lt;code&gt;$doing_cron&lt;/code&gt; variable in some cases where it'd otherwise be called repetitively, I'm not sure that level of optimising is needed - but it can't hurt I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39546 (REST API: Improve test coverage of single users endpoint for public ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 16 Jan 2017 03:22:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39546#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39546#comment:5/1484536927081344</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Right, that makes more sense than whatever I was thinking, thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39591 (Introduce wp_doing_cron()) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 Jan 2017 03:16:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39591#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39591#comment:1/1484536607686502</guid>
      <description>&lt;p&gt;
+1 from me. While it's not really a huge difference between checking a constant and checking a function return (it's also likely &lt;em&gt;less&lt;/em&gt; performant), adding filterability might help with cron drop-ins (see &lt;a class="ext-link" href="https://github.com/humanmade/Cavalcade/issues/28"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this Cavalcade ticket&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
@dd32 Do you have an opinion here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Mon, 16 Jan 2017 03:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:54/1484536304781273</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:53" title="Comment 53"&gt;Joe76000&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My issue is with the latest WP 4.7.1 when trying to upload *.OGG files I have created.
I have also tried to upload .OGG files which were previously well uploaded but now they fail too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please try installing this plugin as a workaround: &lt;a class="ext-link" href="https://wordpress.org/plugins/disable-real-mime-check/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/disable-real-mime-check/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39593 (Improve DocBlocks in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 16 Jan 2017 02:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39593#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39593#comment:3/1484533828821196</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39595 (date_default_timezone_set in wp-settings.php is set prematurely and ...) updated</title>
      
        <dc:creator>mkormendy</dc:creator>

      <pubDate>Mon, 16 Jan 2017 02:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39595#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39595#comment:4/1484533512538006</guid>
      <description>&lt;p&gt;
I don't quite understand what you're attempting to state with regards to the DB time. If the time is stored as a string based on an retrieved date() call, it will be incorrect because WordPress hijacked the entire PHP timezone in that scripted process stream.
&lt;/p&gt;
&lt;p&gt;
There isn't a problem with applications choosing to base their methods in a UTC timezone. BUT, the fundamental problem I see is that WordPress hijacks the entire timezone for the underlying PHP processor for the rest of any further intermingled scripted processes, especially when other PHP applications running in the same script process may rely on defaults in php.ini.
&lt;/p&gt;
&lt;p&gt;
I might propose that the timezone method and/or the related date methods in WordPress store the original PHP timezone (if it existed), then do it's UTC change for what it needs, then switch it back, so other processes can work with PHP's default should they want to.
&lt;/p&gt;
&lt;p&gt;
That's the ideal situation. But the reverse could be done to the non-WP applications just the same I guess...
&lt;/p&gt;
&lt;p&gt;
However the longer I spend on this, I realize that this will likely never change in WordPress due to the implications that would have on a global-scale.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39593 (Improve DocBlocks in class-automatic-upgrader-skin.php) updated</title>
      
        <dc:creator>carl-alberto</dc:creator>

      <pubDate>Mon, 16 Jan 2017 02:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39593#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39593#comment:2/1484532809180308</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi Soean,
&lt;/p&gt;
&lt;p&gt;
Thanks for the advice. sent another diff file to include the DocBlock improvement of:
&lt;strong&gt;$messages&lt;/strong&gt;
&lt;strong&gt;get_upgrade_messages()&lt;/strong&gt;
&lt;strong&gt;header()&lt;/strong&gt;
&lt;strong&gt;footer()&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39593.2.diff attached to Ticket #39593</title>
      
        <dc:creator>carl-alberto</dc:creator>

      <pubDate>Mon, 16 Jan 2017 02:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39593/39593.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39593/39593.2.diff/1484532515577940</guid>
      <description>&lt;p&gt;
Another attempt to improve docblock
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #36081,​37555 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 16 Jan 2017 02:07:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36081%2C37555</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36081%2C37555/1484532425608620</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/36081" title="#36081: defect (bug): Activity dashboard widget is not using word-wrap: break-word (assigned)"&gt;#36081&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39595 (date_default_timezone_set in wp-settings.php is set prematurely and ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 02:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39595#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39595#comment:3/1484532306489205</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I'm also noticing that some plugins (major players: gravity forms, yoast seo, contact form DB) also don't store or report times correctly either because they expect the default PHP timezone to be either what is in php.ini -OR- what is stored in the WP Admin General Settings (wp_options: gmt_offset and timezone_string).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm going to assume that these are probably more likely caused by expecting the DB time returned by &lt;code&gt;NOW()&lt;/code&gt; or as the default for date fields to be a UTC timestamp - unless you're experiencing that when you remove the &lt;code&gt;date_default_timezone_set( 'UTC' );&lt;/code&gt; call in which case yes, that would probably be the expected outcome of attempting to use &lt;code&gt;date()&lt;/code&gt; functions.
MySQL doesn't store the timezone information with timestamps, so having &lt;code&gt;NOW()&lt;/code&gt; return a non-UTC timestamp is very confusing for an application.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have come across a slew of client servers (shared hosting, etc) where a reasonable amount of WP-based websites might not have a choice if the server is set to the local timezone for logging purposes and not UTC.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I fail to see what the problem is here if an application chooses to base it's timezone on UTC here. You can set the logging to anything  - the fact that PHP logs respect the timezone the application chooses is odd, but IMHO not the applications problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>Joe76000</dc:creator>

      <pubDate>Mon, 16 Jan 2017 02:01:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:53/1484532084276242</guid>
      <description>&lt;p&gt;
Hello Folks,
&lt;/p&gt;
&lt;p&gt;
After few days of searching, I found this very welcome topic.
My issue is with the latest WP 4.7.1 when trying to upload *.OGG files I have created.
I have also tried to upload .OGG files which were previously well uploaded but now they fail too.
&lt;/p&gt;
&lt;p&gt;
In both case I'm getting the following error message:
"Désolé, ce type de fichier n’est pas autorisé pour des raisons de sécurité."
i.e. "Sorry, this file type is not permitted for security reasons.".
&lt;/p&gt;
&lt;p&gt;
For example, a link to one of my previous .OGG file which cannot be uploaded anymore:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://www.linuxrouen.fr/wp/wp-content/uploads/2016/12/george-ezra_budapest-2014.ogg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.linuxrouen.fr/wp/wp-content/uploads/2016/12/george-ezra_budapest-2014.ogg&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I have no upload issue with .jpg, .png, .gif and .mp3 files.
&lt;/p&gt;
&lt;p&gt;
My site server configuration:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://www.linuxrouen.fr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.linuxrouen.fr&lt;/a&gt; hosted by OVH.com (in France)
&lt;/li&gt;&lt;li&gt;WordPress 4.7.1–fr_FR
&lt;/li&gt;&lt;li&gt;PHP 5.6.21
&lt;/li&gt;&lt;li&gt;MySQL 5.5.52-0+deb7u1-log - Linux
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39243 (fatal error by upgrading to WordPress 4.7 from 4.6) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39243#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39243#comment:3/1484531960978525</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This appears to be caused by either
a) A bad update - &lt;code&gt;wp-includes/taxonomy.php&lt;/code&gt; / &lt;code&gt;wp-includes/version.php&lt;/code&gt; updated but &lt;code&gt;wp-settings.php&lt;/code&gt; didn't
or
b) A bad plugin - which includes &lt;code&gt;wp-includes/session.php&lt;/code&gt; &amp;amp; &lt;code&gt;wp-includes/taxonomy.php&lt;/code&gt; but not their dependencies before WordPress is fully loaded.
&lt;/p&gt;
&lt;p&gt;
It's much more likely that these have been caused by failed updates IMHO, rather than a plugin, seems like an odd thing for a plugin to do - I can't rule it out though.
This would be a very common failure in the event that &lt;code&gt;wp-settings.php&lt;/code&gt; didn't get updated, or the &lt;code&gt;wp-includes/class-wp-taxonomy.php&lt;/code&gt; file didn't get created, as it's the first real piece of code which runs which has dependancies upon new files.
&lt;/p&gt;
&lt;p&gt;
Unfortunately update issues are going to happen occasionally, and I don't see anything we can do here.
&lt;/p&gt;
&lt;p&gt;
@websitenum1 Were you able to do any debugging of your site to determine the cause of your problems? I note that it's currently running WordPress 4.7.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39595 (date_default_timezone_set in wp-settings.php is set prematurely and ...) updated</title>
      
        <dc:creator>mkormendy</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39595#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39595#comment:2/1484530628157269</guid>
      <description>&lt;p&gt;
Boiling down: yes, timestamps is one reason. But I'm also noticing that some plugins (major players: gravity forms, yoast seo, contact form DB) also don't store or report times correctly either because they expect the default PHP timezone to be either what is in &lt;code&gt;php.ini&lt;/code&gt; -OR- what is stored in the WP Admin General Settings (wp_options: &lt;code&gt;gmt_offset&lt;/code&gt; and &lt;code&gt;timezone_string&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I realized that this was likely in trac for a long time and maybe a revision may be in order.
&lt;/p&gt;
&lt;p&gt;
The force in wp-settings.php just feels "hijacky" because it forces a timezone for the entire WordPress application versus just the methods where time is stored and reported. This is in conflict with the extensibility of WordPress where it often runs alongside and intermingled with other PHP applications.
&lt;/p&gt;
&lt;p&gt;
I have come across a slew of client servers (shared hosting, etc) where a reasonable amount of WP-based websites might not have a choice if the server is set to the local timezone for logging purposes and not UTC.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31218 (nav-menu.js menu item added event) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:36:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31218#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31218#comment:29/1484530617108183</guid>
      <description>&lt;p&gt;
@adamsilverstein I ran the tests locally and ran into errors. Specifically:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Uncaught TypeError: assert.done is not a function@ 122 ms
Source:
&lt;a class="ext-link" href="http://localhost:63342/src/tests/qunit/wp-admin/js/nav-menu.js:8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost:63342/src/tests/qunit/wp-admin/js/nav-menu.js:8&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and then on subsequent loads:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Uncaught TypeError: Cannot read property 'equal' of undefined@ 182 ms
Source:
&lt;a class="ext-link" href="http://localhost:63342/src/tests/qunit/wp-admin/js/nav-menu.js:7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost:63342/src/tests/qunit/wp-admin/js/nav-menu.js:7&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is my first time running the QUnit sweet so it may be my setup. I am running them in the browser.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39581 (Unexpected Date Modified after delete and re-import) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:25:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39581#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39581#comment:1/1484529938261230</guid>
      <description>invalid: &lt;p&gt;
Hi @ChiefAlchemist and welcome back to Trac.
&lt;/p&gt;
&lt;p&gt;
Unfortunately your report doesn't leave much to go on - I'm not aware of any bugs similar to what you describe, and the caches would definitely be cleared as expected.
&lt;/p&gt;
&lt;p&gt;
I'm assuming that this is something wrong with your code, or how it interacts with WordPress.
&lt;/p&gt;
&lt;p&gt;
If you can reproduce it in a short PHP function, we'd be able to look at it further, but as it stands I'm marking this as &lt;code&gt;invalid&lt;/code&gt; for now. If you can reproduce this in a consistent manner and can share some code to do so, please feel free to reopen the ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39353 (Customize: menu widgets lose edit shortcuts when added/refreshed) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39353#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39353#comment:3/1484529884135595</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39582 (Deprecate the edit_post hook) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39582#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39582#comment:1/1484529674344965</guid>
      <description>wontfix: &lt;p&gt;
I don't really see any benefit from deprecating the filter, even if it is now redundant and those who are using it aren't facing any immediate compatibility issues by using it.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;post_updated&lt;/code&gt; was probably added for consistency with other actions, it doesn't necessarily have to replace the existing hook.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:15/1484528962291638</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:07:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:14/1484528871033693</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Reopen for 4.7.2 consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:13/1484528734006445</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39912" title="Formatting: fix `wpautop()` to stop adding paragraph tags around ..."&gt;39912&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Formatting: fix &lt;code&gt;wpautop()&lt;/code&gt; to stop adding paragraph tags around &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39307" title="#39307: defect (bug): &amp;lt;/p&amp;gt; tag inserted in &amp;lt;figure&amp;gt; (closed: fixed)"&gt;#39307&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39912]: Formatting: fix `wpautop()` to stop adding paragraph tags around ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 01:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39912/1484528733525010</guid>
      <description>&lt;p&gt;
Formatting: fix &lt;code&gt;wpautop()&lt;/code&gt; to stop adding paragraph tags around &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39307" title="#39307: defect (bug): &amp;lt;/p&amp;gt; tag inserted in &amp;lt;figure&amp;gt; (closed: fixed)"&gt;#39307&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38933 (Document wp-admin/js/editor.js) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38933#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38933#comment:7/1484527729843517</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39911" title="Docs: some improvements/fixes for editor.js.
See #38933."&gt;39911&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: some improvements/fixes for editor.js.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38933" title="#38933: defect (bug): Document wp-admin/js/editor.js (closed: fixed)"&gt;#38933&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [39911]: Docs: some improvements/fixes for editor.js.  See #38933.</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39911/1484527729381809</guid>
      <description>&lt;p&gt;
Docs: some improvements/fixes for editor.js.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38933" title="#38933: defect (bug): Document wp-admin/js/editor.js (closed: fixed)"&gt;#38933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39546 (REST API: Improve test coverage of single users endpoint for public ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39546#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39546#comment:4/1484527626725465</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving to 4.7.2 - I'd like to get these tests in before we start work on multisite users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Since these are just tests, adding them to 4.7.x isn't a big issue, but also pointless as they'll not actually be "deployed" anywhere, and as you're targeting 4.8+ for the development effort, doesn't it make sense to just add new tests to trunk? It's far less work for everyone involved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39595 (date_default_timezone_set in wp-settings.php is set prematurely and ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:44:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39595#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39595#comment:1/1484527480312526</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
All I can say here, is yes, it's intentional that we force the PHP timezone to UTC. It's not a bug, it's not being set too early, it's intentional.
WordPress expects that the base timezone is set to UTC for it's own calculations, and has forcibly set the timezone for ~7years since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12315" title="Set default timezone. Props Denis-de-Bernardy. fixes #10940"&gt;[12315]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10940" title="#10940: defect (bug): Default timezone should be set for PHP5 (closed: fixed)"&gt;#10940&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Now, Can you boil down your actual issue to something much more concise so we can understand what the actual issue you face is? Is it that the PHP logs have a UTC timestamp?
&lt;/p&gt;
&lt;p&gt;
Setting a servers localdate to something other than UTC is a recipe for disaster IMHO, and probably not something we're going to really support in any manner of form anytime soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39589 (PHP Notice if nothing selected on custom bulk action in Media Library.) updated</title>
      
        <dc:creator>achbed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39589#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39589#comment:4/1484527431150473</guid>
      <description>&lt;p&gt;
Patch is revised to not check the return value, but blindly assign to &lt;code&gt;$location&lt;/code&gt;, matching behavior of non-filtered handlers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39589_b.patch attached to Ticket #39589</title>
      
        <dc:creator>achbed</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39589/39589_b.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39589/39589_b.patch/1484527376804523</guid>
      <description>&lt;p&gt;
Revised based on feedback
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39594 (Multisite Upgrade Network - cURL Attempting Port 443 on HTTP) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39594#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39594#comment:1/1484526697166635</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @michael.ecklund
&lt;/p&gt;
&lt;p&gt;
Can you please provide some extra details about your site configuration? is it available over SSL? Are any parts of the site SSL? What are the site options/domain settings set to?
&lt;/p&gt;
&lt;p&gt;
For it to attempt port 443, either the port needs to be set somewhere, or something is set as HTTPS, without knowing which it's hard to diagnose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38849 (Shortcode wpview's toolbar appears while no view is selected) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38849#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38849#comment:12/1484526090344115</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39910" title="TinyMCE: ensure the inline toolbar is shown and properly positioned ..."&gt;39910&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: ensure the inline toolbar is shown and properly positioned when there are several wpview blocks in the editor and the user selects one after the other.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props gitlost.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38849" title="#38849: defect (bug): Shortcode wpview's toolbar appears while no view is selected (closed: fixed)"&gt;#38849&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39910]: TinyMCE: ensure the inline toolbar is shown and properly positioned ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 16 Jan 2017 00:21:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39910/1484526089864494</guid>
      <description>&lt;p&gt;
TinyMCE: ensure the inline toolbar is shown and properly positioned when there are several wpview blocks in the editor and the user selects one after the other.
&lt;/p&gt;
&lt;p&gt;
Props gitlost.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38849" title="#38849: defect (bug): Shortcode wpview's toolbar appears while no view is selected (closed: fixed)"&gt;#38849&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>