<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:5/1247786495000000</guid>
      <description>&lt;p&gt;
Expanding on andrew's comment, the livequery approach has worked fine since 2.5. there was a slight issue with 2.8, since jquery got upgraded, and livequery needed version 1.1 which is still in beta (so needs to be checked out from CVS). But it totally works.
&lt;/p&gt;
&lt;p&gt;
Things end up looking like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery(document).ready(function(){
	jQuery("div.nav_menu_item_sortables").livequery(function() {
		// do stuff
	});
	jQuery("input.nav_menu_item_add").livequery('click', function() {
		// do stuff
	});
});
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:4/1247786293000000</guid>
      <description>wontfix: &lt;p&gt;
Not exactly. Using $.live() or livequery to attach events to html created by your plugin will work in all cases regardless of the other elements or scripts.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:16/1247786210000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:15/1247785956000000</guid>
      <description>&lt;p&gt;
I need an edit button here in Trac... I make typos every time.
&lt;/p&gt;
&lt;p&gt;
*It's seam that this &lt;strong&gt;not&lt;/strong&gt; the best answer...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) closed</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:14/1247785822000000</guid>
      <description>wontfix: &lt;p&gt;
This problem doesn't effect me, because I know how to program and only use my own self created themes, so I will not fight to the death for this. It's seam that this the best answer and there really isn't an out cry from end users for this theme &amp;amp; plugin incompatibility problem to be fixed, so I'll close this and move on.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) updated</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:3/1247785243000000</guid>
      <description>&lt;p&gt;
I think the ultimate problem is that all of these "solutions" are very hackish and are very dependent of the current widget interface. Plugins that needs to hook into these places will break if another plugin/admin theme make changes to the widget admin interface. Also, if a future version of wordpress changes the widgets interface again (even just the look-and-feel), maintaing backwards compatibility is going to be painful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:42:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:13/1247784139000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:12" title="Comment 12"&gt;dcole07&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How could someone insert code into the page div, before (or after) the header div, and at the same level as the header div?
How could someone insert code into the header div?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And then, how can you be sure a theme has a header at all? Not all do.
&lt;/p&gt;
&lt;p&gt;
Even if they did, there are so many possibilities here that a generic hook simply cannot work. What happens when a plugin tosses in some clunky code into a theme's header that wrecks the layout. It will happen. (I even happen on the default theme with sidebars: add a &amp;lt;div style="clear: both"&amp;gt; in the sidebar, and giggle at the mess.)
&lt;/p&gt;
&lt;p&gt;
Now, imagine we introduce a dozen more hooks in locations that are inconsistently named and styled from a theme to the next. Sadly, it's just asking for trouble...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10427 (The 'recent comments' widget needs to flush its cache on ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:34:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10427#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10427#comment:2/1247783696000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;transition_comment_status&lt;/code&gt; is called together with &lt;code&gt;wp_set_comment_status&lt;/code&gt; and runs only when the status changes. Seems the right hook to clear cache.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10427 (The 'recent comments' widget needs to flush its cache on ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10427#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10427#comment:1/1247783485000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11718" title="Flush the cache in Recent Comments widget on ..."&gt;[11718]&lt;/a&gt;) Flush the cache in Recent Comments widget on transition_comment_status, props josephscott, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10427" title="#10427: defect (bug): The 'recent comments' widget needs to flush its cache on ... (closed: fixed)"&gt;#10427&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11718]: Flush the cache in Recent Comments widget on ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11718/1247783482473559</guid>
      <description>&lt;p&gt;
Flush the cache in Recent Comments widget on transition_comment_status, props josephscott, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10427" title="#10427: defect (bug): The 'recent comments' widget needs to flush its cache on ... (closed: fixed)"&gt;#10427&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:2/1247783402000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
you can also use livequery. suggesting wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:1/1247780528000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since most widgets are multi-instance chances are that there will be more than one of each on the screen. So html IDs cannot be used anywhere in the widgets (that would break any js). In that terms using the ID of the widgets is not recommended as it needs to change for each widget added to a sidebar.
&lt;/p&gt;
&lt;p&gt;
We could add a callback to wpWidgets.addEvents() however in js it's very easy to overwrite this (like you've already done):
&lt;/p&gt;
&lt;pre class="wiki"&gt;wpWidgets._addEvents = wpWidgets.addEvents;
wpWidgets.addEvents = function(scope) {...}
&lt;/pre&gt;&lt;p&gt;
Other notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Returning "false" for an event doesn't stop other listeners attached to it, propagation or bubbling. Copying the widget's html and inserting it in a sidebar removes all previously attached events. Also when a widget is saved, the html is reloaded from the ajax return.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Unless you need some (quite) advanced functionality like ajax loading an arbitrary number of tabs, etc. it's better not to use ui.tabs. The basic tab switching/hiding/disabling is easily done directly with jQuery (and won't break next time they decide to change ui.tabs).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;You can use the jQuery.live() (new in 1.3) to attach the functions to all tabs at once, including tabs that are loaded after a widget has been saved. Then you can get the current ID (if you still need it) by doing &lt;code&gt;jQuery(this).parents('.widget').attr('id')&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>hayadan-co-il.PNG attached to Ticket #10395</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:40:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10395/hayadan-co-il.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10395/hayadan-co-il.PNG/1247780415000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:12/1247779738000000</guid>
      <description>&lt;p&gt;
If there are work-a-rounds to inserting code any where within a, then maybe we should include functions in core, so plugins can use them without having to think it up for themselves.
&lt;/p&gt;
&lt;p&gt;
How could someone insert code into the page div, before (or after) the header div, and at the same level as the header div?
How could someone insert code into the header div?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:11/1247778847000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:10" title="Comment 10"&gt;dcole07&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:9" title="Comment 9"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note the complete absence of hooks in the second one. It took me an awful lot of time to reeducate users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Inserting code manually is a bad idea in so many ways. I think it's clear we don't want just anyone doing that. Having hooks creates problems because plugins actually use them, but theme authors don't care enough to add them or something. So what's a solution to this problem? The current way is far from perfect IMO... It seams like we have to put the burden on someone, who should it be? End users? Plugin developers? Theme Developers? Were currently putting in on End users, because plugins are making end users copy and paste code in manually. (Not to mention the other side effects of them doing that.) A solution is not to force plugin developers to come up with some obscure way of adding code in automatically. It's clearly not working now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What's wrong with using widgets for most of the things plugins want to insert into themes? Widgets have been greatly enhanced and simplified with 2.8. If the plugin wants to insert something in an area that is not accessible by a dynamic sidebar, then there is likely already a hook to place it correctly anyway (such as at the end or beginning of posts, etc). If plugin developers provide widgets and options to hook onto any other areas they wish to modify in a theme, I don't see any real reason to make any standardized hooks that aren't already included.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:07:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:10/1247778446000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:9" title="Comment 9"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note the complete absence of hooks in the second one. It took me an awful lot of time to reeducate users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Inserting code manually is a bad idea in so many ways. I think it's clear we don't want just anyone doing that. Having hooks creates problems because plugins actually use them, but theme authors don't care enough to add them or something. So what's a solution to this problem? The current way is far from perfect IMO... It seams like we have to put the burden on someone, who should it be? End users? Plugin developers? Theme Developers? Were currently putting in on End users, because plugins are making end users copy and paste code in manually. (Not to mention the other side effects of them doing that.) A solution is not to force plugin developers to come up with some obscure way of adding code in automatically. It's clearly not working now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10428 (incorrect rendering of an accented character) created</title>
      
        <dc:creator>donpaolo</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10428</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10428/1247777436000000</guid>
      <description>&lt;p&gt;
I'm using wordpress in an all-unicode server.
&lt;/p&gt;
&lt;p&gt;
My browser is gnome's epiphany.
&lt;/p&gt;
&lt;p&gt;
If I put in a post an "à" at the end of a line, instead of the "à" I see a rare character in the blog, a typical rapresentation of an incorrect unicode character.
&lt;/p&gt;
&lt;p&gt;
I saw that a temporary workaround is to make the "à" not the last character, adding a dot or a no breaking space, but the bug is there.
&lt;/p&gt;
&lt;p&gt;
I see the bug with firefox and IE too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10401 (Importing future posts through WXR doesn't schedule posts) closed</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10401#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10401#comment:6/1247776803000000</guid>
      <description>invalid: &lt;p&gt;
Should have checked better, while testing the import on an unpatched version, I noticed it works already, so the server I encountered the issue on had other problems. _transition_post_status actually DOES schedule the post on insertion.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>wp-includes--default-widgets.php.diff attached to Ticket #10427</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10427/wp-includes--default-widgets.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10427/wp-includes--default-widgets.php.diff/1247776173000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10427 (The 'recent comments' widget needs to flush its cache on ...) created</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10427</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10427/1247776161000000</guid>
      <description>&lt;p&gt;
The WP iPhone app uses the wp.editComment XML-RPC method to change the status of a comment.  This uses the core wp_update_comment() function to do the actual updates to a comment.  Which in turn calls the wp_transition_comment_status() function to trigger hooks that are watching for comment status changes.
&lt;/p&gt;
&lt;p&gt;
Currently the recent comment widget only clears the cache on comment_post and wp_set_comment_status events.  So comments that get their status changed through wp_update_comment() don't cause the recent comments widget cache to get updated.  To solve this here is my one line patch that adds transition_comment_status to the list of actions that cause the recent comments widget cache to get updated.
&lt;/p&gt;
&lt;p&gt;
As a side note, I think that we could remove the wp_set_comment_status action from the flush cache list for this widget.  That event should get caught by the transition_comment_status action as well.  I didn't not verify that this was case though, so I did not remove that line in my patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10401 (Importing future posts through WXR doesn't schedule posts) updated</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10401#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10401#comment:5/1247775307000000</guid>
      <description>&lt;p&gt;
Fixed, thanks for the remarks Mark!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>import-wordpress.php.patch attached to Ticket #10401</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10401/import-wordpress.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10401/import-wordpress.php.patch/1247775286000000</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) updated</title>
      
        <dc:creator>ruslany</dc:creator>

      <pubDate>Thu, 16 Jul 2009 19:22:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425#comment:1/1247772154000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
1) Does the verbose rules options ever get used? It looks like in the rewrite.php file it is hardcoded to be off.
&lt;/p&gt;
&lt;p&gt;
2) I'll need to better understand how non_wp_rules work. Do you have an example of such rule? Or may be a plugin that uses those rules.
&lt;/p&gt;
&lt;p&gt;
3) This should be fixed. I'll try to spend some time on preparing a patch for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) created</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Thu, 16 Jul 2009 19:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426/1247771889000000</guid>
      <description>&lt;p&gt;
The new widget interface provides a very nice experience for the end-users, but not so much for the developers.
&lt;/p&gt;
&lt;p&gt;
As a developer, you will often find the need to use JavaScript in your widget controls, such as creating the tabs in our section widget (see: &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/section-widget/screenshots/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/section-widget/screenshots/&lt;/a&gt;). This, however, is really a lot more tricky than it should have been. When WP loads the widgets interface, it will create some "stub" widgets on the left. In the "stub" widgets, all HTML IDs will include a placeholder like section-widget-&lt;span class="underline"&gt;_i&lt;/span&gt;_. When the user drags the stub widget to the sidebar, WP will copy its content and then do a search and replace of all the IDs so it will look like section-widget-1 in the end.
&lt;/p&gt;
&lt;p&gt;
This ID change causes a lot of problem for other JS code. For instance, if you tab-ify your divs on document.ready using jQueryUI Tabs, it would no longer work after the stub widget is copied over to the sidebar, because the actions it uses are dependent on the actual IDs of the divs. You might think that adding an event listener for the onClick event on the expand button will solve the problem, but it won't work because WP already attached a listen to that event, which unfortunately returns "false" - which stops the event from bubbling up.
&lt;/p&gt;
&lt;p&gt;
Currently, it requires a lot of hacking to get around this problem, (see: &lt;a class="ext-link" href="http://svn.wp-plugins.org/section-widget/trunk/section-widget.dev.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://svn.wp-plugins.org/section-widget/trunk/section-widget.dev.js&lt;/a&gt;) so I am suggesting we should either: a) provide a way to register JS callbacks when a widget has been added to the sidebar, or b) trigger a custom event on the widget after it has been added to the sidebar.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Thu, 16 Jul 2009 18:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:48/1247768282000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4529#comment:47" title="Comment 47"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Oh, I think I see (looking at the logs) - you mean delete after X (configurable) days &lt;em&gt;and&lt;/em&gt; delete the oldest item in the trash when there are X (configurable) items in it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's the idea. X is only configurable by hooks, so as not to clutter the backend with extra options most won't need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9264 (Self closing shortcodes) updated</title>
      
        <dc:creator>sebastien.barre</dc:creator>

      <pubDate>Thu, 16 Jul 2009 17:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9264#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9264#comment:27/1247766912000000</guid>
      <description>&lt;p&gt;
+1 / I second that. Even with the diff above, it seems to persist. I'm surprised it's not affecting more people; within the same page, you can't have the same shortcode with and without content.
&lt;/p&gt;
&lt;p&gt;
Example/Test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function shortcode_test($atts, $content=null) {
  return '&amp;lt;p&amp;gt;Shortcode Test Content: {' . $content . '}&amp;lt;/p&amp;gt;';
}
add_shortcode('test', 'shortcode_test');
&lt;/pre&gt;&lt;p&gt;
Page:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[test/]
[test]foobar[/test]
&lt;/pre&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Shortcode Test Content: {
[test]foobar}
&lt;/pre&gt;&lt;p&gt;
i.e. the first short code completely swallowed the first half of the second shortcode. Is the regexp set to be "greedy"?
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 16 Jul 2009 16:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:47/1247761245000000</guid>
      <description>&lt;p&gt;
Oh, I think I see (looking at the logs) - you mean delete after X (configurable) days &lt;em&gt;and&lt;/em&gt; delete the oldest item in the trash when there are X (configurable) items in it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 16 Jul 2009 16:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:46/1247760938000000</guid>
      <description>&lt;p&gt;
Sorry I wasn't around for the discussion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Hooks to do what exactly? Change the time before deletion? Why not just have an option in the discussion preferences?
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;What is meant by "needs to be based on how old &lt;em&gt;and how big&lt;/em&gt;"? It is already based on how old in my patch, but where does &lt;em&gt;size&lt;/em&gt; come into it? Delete longer comments sooner? Why?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) created</title>
      
        <dc:creator>bforchhammer</dc:creator>

      <pubDate>Thu, 16 Jul 2009 14:12:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425/1247753529000000</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8974" title="#8974: enhancement: WordPress permalinks settings page should work with IIS 7.0 URL ... (closed: fixed)"&gt;#8974&lt;/a&gt; introduced a set of functions and changes which allow to automatically generate Rewrite Rules for Wordpress installs running on IIS7.
&lt;/p&gt;
&lt;p&gt;
There are some issues with that implementation that I think are worth being written down and discussed somewhere so here we go:
&lt;/p&gt;
&lt;p&gt;
1) There's no &lt;strong&gt;"Verbose" option&lt;/strong&gt; for IIS rules; while I can't say when it would make sense to have a verbose listing of all WordPress rewrite rules in &lt;code&gt;.htaccess&lt;/code&gt;/&lt;code&gt;web.config&lt;/code&gt; it might be something that should be available for both systems?
&lt;/p&gt;
&lt;p&gt;
2) IIS does not add &lt;strong&gt;non wordpress rules&lt;/strong&gt; (&lt;code&gt;$non_wp_rules&lt;/code&gt;) to the &lt;code&gt;web.config&lt;/code&gt; file (&lt;code&gt;iis7_url_rewrite_rules()&lt;/code&gt;) which means that any custom rewriting which plugins/users can do on apache don't work on IIS.
&lt;/p&gt;
&lt;p&gt;
3) At the moment it's assumed that there is only ONE single rule needed for IIS. Especially when looking at the merge with WPMU this is going to become a problem because WPMU uses &lt;strong&gt;multiple rules&lt;/strong&gt;. Every rule has to have a unique name and functions like &lt;code&gt;iis7_rewrite_rule_exists()&lt;/code&gt; and &lt;code&gt;iis7_delete_rewrite_rule()&lt;/code&gt; only look for one rule with name "wordpress". Custom Rules (see 2) also won't work without a change here. For a partial fix see misc.php in &lt;a class="ext-link" href="http://trac.mu.wordpress.org/attachment/ticket/991/991-webconfig.patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Patch on MU #991&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Any comments?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Thu, 16 Jul 2009 14:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:10/1247753159000000</guid>
      <description>&lt;p&gt;
I'm not sure how you would style individual plugins listed without some sort of unique identifier in either the class or by adding an ID?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10422 (Answering to comment from Dashboard does not update Dashboard statistics) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 16 Jul 2009 13:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10422#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10422#comment:3/1247751966000000</guid>
      <description>&lt;p&gt;
Same thing applies when you create new posts/drafts with the QuickPress box on the dashboard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10424 (change get_filesystem_method()'s code for direct to reflect actual purpose) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10424</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10424/1247744321000000</guid>
      <description>&lt;p&gt;
due to tickets such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10205" title="#10205: enhancement: getmyuid() called instead of posix_getuid() in get_filesystem_method() ... (closed: duplicate)"&gt;#10205&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10423" title="#10423: defect (bug): get_filesystem_method() uses uses wrong owner for validation (closed: duplicate)"&gt;#10423&lt;/a&gt; I propose we add some documentation, or change the code a bit to reflect to others the intended purpose of the code.
&lt;/p&gt;
&lt;p&gt;
Eg, something such as this could potentially work:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( file_owner($temp_file) !== false &amp;amp;&amp;amp; file_owner(__FILE__) === file_owner($temp_file) ) {
//use direct
}
&lt;/pre&gt;&lt;p&gt;
Too many people assume its a typo, and just a complex is_writable() call..
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:6/1247744214000000</guid>
      <description>duplicate: &lt;p&gt;
ok, i'll make a new ticket for that instead..
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:5/1247744078000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
maybe we could add a filter, though. you know... so that users who want to check this differently can do so
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then they can use the filter already present, or force it through the constant. Please stop closing things so soon.
&lt;/p&gt;
&lt;p&gt;
Re-opening pending close due to a commit to add some documentation or coding it differently to show that its not a typo.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:4/1247743426000000</guid>
      <description>&lt;p&gt;
maybe we could add a filter, though. you know... so that users who want to check this differently can do so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:3/1247743245000000</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10205" title="#10205: enhancement: getmyuid() called instead of posix_getuid() in get_filesystem_method() ... (closed: duplicate)"&gt;#10205&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:2/1247742709000000</guid>
      <description>&lt;p&gt;
see &lt;a class="ext-link" href="http://core.trac.wordpress.org/search?q=get_filesystem_method"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/search?q=get_filesystem_method&lt;/a&gt; for a tonne of previous tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:1/1247742588000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is a potential security risk.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you explain that a bit further before i just close this as duplicate and refer you to the previous tickets/explanations?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
The Wordpress files can be owned by someone else and the update system works as long as the webserver has permissions to write.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If that was the intended direction, I'd have just used an is_writable() call.
&lt;/p&gt;
&lt;p&gt;
The intended aim of that code, Is that if the owner of the Created files, Differs from that of the currently running process then to NOT use the direct setup, due to the created files being owned by someone other than the actual user.
&lt;/p&gt;
&lt;p&gt;
Another way that code could be written which may work on more hosts is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( file_owner($temp_file) !== false &amp;amp;&amp;amp; file_owner(__FILE__) === file_owner($temp_file) ) {
//use direct
}
&lt;/pre&gt;&lt;p&gt;
but that would NOT cause the direct setup to be used in your situation either..
&lt;/p&gt;
&lt;p&gt;
the usage of &lt;code&gt;getmyuid()&lt;/code&gt; was used to replace &lt;code&gt;fileowner(__FILE__)&lt;/code&gt; basically.
&lt;/p&gt;
&lt;p&gt;
Still tempted to close as duplicate, but might be worth changing the code, or at least adding a comment that its the intended code..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) created</title>
      
        <dc:creator>cyberspice</dc:creator>

      <pubDate>Thu, 16 Jul 2009 10:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423/1247741903000000</guid>
      <description>&lt;p&gt;
The function get_filesystem_method() creates a temporary file and then checks the ownership comparing it with the result of getmyuid().  getmyuid() does not return the owner of the web server process but of the file calling getmyid().  In this case wp-admin/includes/file.php.  This means that in order to support automatic update the Wordpress files have to be own by the same process as the webserver regardless of permissions on the files.  This is a potential security risk.
&lt;/p&gt;
&lt;p&gt;
If posix_getiud() is used where available then the owner of the webserver process is compared to the ownership of the temp file.  The Wordpress files can be owned by someone else and the update system works as long as the webserver has permissions to write.
&lt;/p&gt;
&lt;p&gt;
I have written more about this (together with a fix) in my bog.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.cyberspice.org.uk/blog/2009/07/15/wordpress-automatic-update-bug/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.cyberspice.org.uk/blog/2009/07/15/wordpress-automatic-update-bug/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10344 (Delete link should show up after Draft Autosave) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 10:41:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10344#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10344#comment:1/1247740914000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 that this would be nice to have.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10382 (plugins descriptions aren't localized) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 16 Jul 2009 07:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10382#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10382#comment:17/1247730313000000</guid>
      <description>&lt;p&gt;
OK, but translated plugin description is displayed only when plugin was sometimes activated. When I download fresh plugin and do not activate it, then description is not translated...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10422 (Answering to comment from Dashboard does not update Dashboard statistics) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 07:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10422#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10422#comment:2/1247729889000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Theres something similar for other counts such as plugin update count not changing upon updating, and comment count not changing upon spamming/deleting from the dashboard.
&lt;/p&gt;
&lt;p&gt;
Maybe a new function that inserts inline JS into Ajax responses about number-changes would be possible.. just a thought there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 07:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:7/1247729724000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
so having a "preferred transport" filter would be better solution.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A filter on the order would actually accomplish both parties here..
&lt;/p&gt;
&lt;p&gt;
If we keep the filter named to enforce that it should be used to re-order the list, then that'll prevent abuse by most developers.. But it would also allow for someone to return mearly 1 transport...
&lt;/p&gt;
&lt;p&gt;
I'm still -1 though, I'd rather help others who might end up in the same server circumstances than help a developer or too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10422 (Answering to comment from Dashboard does not update Dashboard statistics) updated</title>
      
        <dc:creator>honza.skypala</dc:creator>

      <pubDate>Thu, 16 Jul 2009 05:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10422#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10422#comment:1/1247721654000000</guid>
      <description>&lt;p&gt;
Just a note - of course the complex solution would update the statistics in the "Right now" box also for other actions on comments taken in Dashboard, like deleting a comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10422 (Answering to comment from Dashboard does not update Dashboard statistics) created</title>
      
        <dc:creator>honza.skypala</dc:creator>

      <pubDate>Thu, 16 Jul 2009 05:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10422</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10422/1247721528000000</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
there is a short statistics "Right now/At a Glance" box in Dashboard, containing number of posts, pages, comments etc.
&lt;/p&gt;
&lt;p&gt;
There is also a box with list of most recent comments in the Dashboard.
&lt;/p&gt;
&lt;p&gt;
If a user answers to a comment in this "Recent comments" box in Dashboard, which uses AJAX, so it does not reload the whole page, it creates a new comment, but the number of comments in the "Right now" box is not updated.
&lt;/p&gt;
&lt;p&gt;
I know this is not a critical bug, but it would be really nice if it works.
&lt;/p&gt;
&lt;p&gt;
Take care, Honza
&lt;/p&gt;
&lt;p&gt;
P.S.: As there is no "Dashboard" component in the Trac, I did not know whether to assign it to Administration or Comments component. I put it into Administration, if you think it better suits to Comments or any other component, please feel free to change it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 01:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:6/1247709354000000</guid>
      <description>&lt;p&gt;
-1 from me too in the current form. Perhaps in some cases one transport works better than another, so having a "preferred transport" filter would be better solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 01:49:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:9/1247708958000000</guid>
      <description>&lt;p&gt;
The last patch looks good but why is this needed? A plugin would be able to add the required css only while active or perhaps one plugin could highlight another? Or plugins can be hidden with js or css? Not sure if that's a good idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:8/1247705156000000</guid>
      <description>&lt;p&gt;
This works perfect for the intended goal.  Just needed a way to style individual plugins listed and this update accomplishes just that!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10390 (attachments should store the WP uploads path that was configured when ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10390#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10390#comment:6/1247705041000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10390#comment:3" title="Comment 3"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 (Like another ticket somewhere in WP) to change the url's in posts retroactively
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To do that properly at the moment a db backup has to be made, URLs replaced, then some old posts tested to confirm success and eventually the db restored on failure. Think that's best left for a plugin or for the user to do manually as it would be needed in relatively few cases.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10390#comment:5" title="Comment 5"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or rather, what needs to be done is, we store the current value of get_option(upload_dir) ... That way, if the folder is changed later on, we still have the correct url
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
But that will return the wrong URL when the folder has been moved or renamed which seem to be the most common cases.
&lt;/p&gt;
&lt;p&gt;
Perhaps we need a good "canonical" plugin that can handle the different cases when moving, copying, renaming, etc. the uploads directory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:9/1247703574000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10407#comment:8" title="Comment 8"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's actually not. It creates bugs in apply_filters() and do_action(), which were closed (as wontfix, for good reasons) when I reported them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Completely different scenario's. remove_filter will work in that case, Its only an issue when removing functions hooked to the current filter that is not the current function. (ie. As long as you're not attempting to remove a function that is going to be fired on THIS iteration of the stack)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No no, it also affects later functions on the same hook in some weird edge cases. But that's not the point of this ticket, is it? :-)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but based on the workaround code I had to use when I was maintaining my own FTP filesystem class (i.e. disconnect/reconnect after so many files), it actually is the entire sessions' timeout on a lot of platforms.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which sounds entirely possible, Just need to find a value which is going to work for all of core.. I know FTP takes sub 5 seconds in total on my new host.. I know it takes &amp;gt;120seconds on others.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It took well over 90s on Jeff's host. I've bumped it to 600s (as I did for the timeout) to see how things went. Will report back when he replies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:8/1247703368000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's actually not. It creates bugs in apply_filters() and do_action(), which were closed (as wontfix, for good reasons) when I reported them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Completely different scenario's. remove_filter will work in that case, Its only an issue when removing functions hooked to the current filter that is not the current function. (ie. As long as you're not attempting to remove a function that is going to be fired on THIS iteration of the stack)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but based on the workaround code I had to use when I was maintaining my own FTP filesystem class (i.e. disconnect/reconnect after so many files), it actually is the entire sessions' timeout on a lot of platforms.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which sounds entirely possible, Just need to find a value which is going to work for all of core.. I know FTP takes sub 5 seconds in total on my new host.. I know it takes &amp;gt;120seconds on others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:07:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:7/1247702829000000</guid>
      <description>&lt;p&gt;
Cool. So, quick question... Is this behavior the behavior we're wanting (now you're seeing why I so preferred the class to the ID):
&lt;/p&gt;
&lt;pre class="wiki"&gt;	&amp;lt;tr class='inactive plugin-Akismet'&amp;gt;
...	&amp;lt;/tr&amp;gt;
	&amp;lt;tr class='inactive plugin-Akismet second'&amp;gt;
...	&amp;lt;/tr&amp;gt;
&lt;/pre&gt;&lt;p&gt;
To me, it makes sense, based on your stated goals, i.e. style a particular plugin in the admin area.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:7/1247702244000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10407#comment:6" title="Comment 6"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
instead of using statics, a remove_filter is simpler usually :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's actually not. It creates bugs in apply_filters() and do_action(), which were closed (as wontfix, for good reasons) when I reported them.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thinking a bit more, Could it be Active vs. Passive? ..But then i think the FTPExt is set to passive mode only..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Best I'm understanding the code, both are passive always.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or maybe, when the PHP Docs refer to "Network timeout" it could also refer to the timeout for each operation, ie. Its taking &amp;gt; timeout settings to transfer the file..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's the thing. The docs make it sound as if it's for the connection (i.e. idle for X seconds = timeout), but based on the workaround code I had to use when I was maintaining my own FTP filesystem class (i.e. disconnect/reconnect after so many files), it actually is the entire sessions' timeout on a lot of platforms.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:6/1247701813000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
updated patch to add to $class variable to include plugin name
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugins.diff attached to Ticket #10421</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:49:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10421/plugins.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10421/plugins.diff/1247701782000000</guid>
      <description>&lt;p&gt;
added to $class variable to include plugin name to class
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10390 (attachments should store the WP uploads path that was configured when ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:49:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10390#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10390#comment:5/1247701744000000</guid>
      <description>&lt;p&gt;
Or rather, what needs to be done is, we store the current value of get_option(upload_dir) or whatever the useful function is, over in post_meta for that particular attachment.
&lt;/p&gt;
&lt;p&gt;
That way, if the folder is changed later on, we still have the correct url -- through wp_get_attachment_url() or whatever it is, which would then use the meta instead of the generic function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10390 (attachments should store the WP uploads path that was configured when ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:46:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10390#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10390#comment:4/1247701606000000</guid>
      <description>&lt;p&gt;
I think everyone is totally agreeing on that. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:5/1247701120000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
there's a slight typo:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;tr class='$class plugin-{$plugin_data['Name']}' second&amp;gt;
&lt;/pre&gt;&lt;p&gt;
should at least be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;tr class='$class plugin-{$plugin_data['Name']} second'&amp;gt;
&lt;/pre&gt;&lt;p&gt;
and probably:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;tr class='$class " . sanitize_html_class('plugin-' . $plugin_data['Name'], '') . " second'&amp;gt;
&lt;/pre&gt;&lt;p&gt;
or even this a bit further up:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$class .= ' ' . sanitize_html_class('plugin-' . $plugin_data['Name'], '');
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:6/1247700872000000</guid>
      <description>&lt;p&gt;
instead of using statics, a remove_filter is simpler usually :)
&lt;/p&gt;
&lt;p&gt;
Thinking a bit more, Could it be Active vs. Passive? ..But then i think the FTPExt is set to passive mode only..
&lt;/p&gt;
&lt;p&gt;
Or maybe, when the PHP Docs refer to "Network timeout" it could also refer to the timeout for each operation, ie. Its taking &amp;gt; timeout settings to transfer the file..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10390 (attachments should store the WP uploads path that was configured when ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:30:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10390#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10390#comment:3/1247700606000000</guid>
      <description>&lt;p&gt;
-1 to the ability to have 2 upload directories..
&lt;/p&gt;
&lt;p&gt;
+1 (Like another ticket somewhere in WP) to change the url's in posts retroactively
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:22:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:4/1247700149000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I updated the patch file to include the plugin name in the class as your example shows.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:5/1247700095000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10407#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm sure it's *not* timing out from inactivity, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which is why i was questioning, Surely it cant be a timeout.. FTP doesnt just timeout while you're transfering files..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually (based on what I've been seeing anyway), it does. :-(
&lt;/p&gt;
&lt;p&gt;
It transfers files, and then poof, gone. Reconnect and it works again. Still awaiting feedback from the user. I added this in a plugin, on the update_feedback hook, in case it makes any difference:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	function update_feedback($in = null) {
		static $done = false;
		global $wp_filesystem;
		if ( $done || !$_POST || !is_object($wp_filesystem) )
			return $in;
		if ( is_a($wp_filesystem, 'WP_Filesystem_FTPext') &amp;amp;&amp;amp; $wp_filesystem-&amp;gt;link ) {
			if ( @ftp_get_option($wp_filesystem-&amp;gt;link, FTP_TIMEOUT_SEC) &amp;lt; 300 )
				@ftp_set_option($wp_filesystem-&amp;gt;link, FTP_TIMEOUT_SEC, 600);
			$done = true;
		}
		return $in;
	} # update_feedback()
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:4/1247699806000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm sure it's *not* timing out from inactivity, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which is why i was questioning, Surely it cant be a timeout.. FTP doesnt just timeout while you're transfering files..
&lt;/p&gt;
&lt;p&gt;
There are a few sets of code which could do with a "check if its still alive, and if not, reconnect" however. ie. before the unziping. or before the copy_dir().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:5/1247699646000000</guid>
      <description>&lt;p&gt;
a -1 from me.
&lt;/p&gt;
&lt;p&gt;
The transports need to be fixed if there are bugs. Report the bugs so that something can be done about them.
&lt;/p&gt;
&lt;p&gt;
(One of the bugs: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10417" title="#10417: enhancement: Provide redirection follow capabilities in HTTP API when safe_mode or ... (closed: duplicate)"&gt;#10417&lt;/a&gt; - safemode and redirects)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10417 (Provide redirection follow capabilities in HTTP API when safe_mode or ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:13:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10417#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10417#comment:2/1247699582000000</guid>
      <description>&lt;p&gt;
I believe one of the transports includes a check to see if its running under safemode, and not to use it in that scenario.
&lt;/p&gt;
&lt;p&gt;
Just need some extra constraints added to the ::test(); methods IMO
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10418 (Simplepie has force_fsockopen but the WP File Class does not respect ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 15 Jul 2009 23:11:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10418#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10418#comment:2/1247699495000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
IMO we shouldnt respect the simplepie request anyway.
&lt;/p&gt;
&lt;p&gt;
SimplePie includes only.. 2 methods and little detection routines from memory, the force makes sense in that scenario.
&lt;/p&gt;
&lt;p&gt;
It doesnt make sense in WordPress however..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 22:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:3/1247697530000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 22:11:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:2/1247695900000000</guid>
      <description>&lt;p&gt;
Or better yet, something that passes through sanitize_classname(). But definitely a class, not an ID. We can't know if/when we'll have plugins listed twice on the same screen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 22:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:1/1247695838000000</guid>
      <description>&lt;p&gt;
suggesting we use a class instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class='$class' id='{$plugin_data['Name']}'
&lt;/pre&gt;&lt;p&gt;
should be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class='$class plugin-{$plugin_data['Name']}'
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 21:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:45/1247695060000000</guid>
      <description>&lt;p&gt;
Key points of the discussion on IRC:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;default should be to autoclear trash, but with hooks available
&lt;/li&gt;&lt;li&gt;auto-delete needs to be based on how old and how big
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10401 (Importing future posts through WXR doesn't schedule posts) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 15 Jul 2009 21:38:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10401#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10401#comment:4/1247693913000000</guid>
      <description>&lt;p&gt;
Check out how it's done in other places. Also, keep aware that it should be GMT, so use the GMT datetime and append ' GMT'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) created</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:51:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421/1247691081000000</guid>
      <description>&lt;p&gt;
Currently all plugins listed on the Installed Plugins SubPanel have an active or inactive class.  Would be nice for each to also have a unique ID, which could be generated from the plugin name
&lt;/p&gt;
&lt;p&gt;
example: &amp;lt;tr class="active" id="akismet"&amp;gt;
&lt;/p&gt;
&lt;p&gt;
This would allow custom designs on individual plugins listed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10420 (wp_mail fails to send to multiple recipients) updated</title>
      
        <dc:creator>patmcnally</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10420#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10420#comment:2/1247690595000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7723 (Allow filtering by author on Manage &gt; Posts) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7723#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7723#comment:5/1247690574000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/19"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/report/19&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10420-pluggable.php.diff attached to Ticket #10420</title>
      
        <dc:creator>patmcnally</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10420/10420-pluggable.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10420/10420-pluggable.php.diff/1247690519000000</guid>
      <description>&lt;p&gt;
Splits first parameter to wp_mail on commas and calls AddAddress for each
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10118 (Update styling for settings pages) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10118#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10118#comment:1/1247690383000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/19"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/report/19&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10420 (wp_mail fails to send to multiple recipients) updated</title>
      
        <dc:creator>patmcnally</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:35:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10420#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10420#comment:1/1247690142000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10380 (Unneeded (and unique) ID over in the recent comments widget) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:26:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10380#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10380#comment:2/1247689580000000</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10420 (wp_mail fails to send to multiple recipients) created</title>
      
        <dc:creator>patmcnally</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10420</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10420/1247689529000000</guid>
      <description>&lt;p&gt;
The function wp_mail as defined in wp-includes/pluggable.php does not correctly handle multiple recipients when they are passed in as a comma separated string to the first parameter($to). This is evident when using any SMTP server that strictly adheres to section 4.1.1.3 of rfc2821 (such as gmail).
&lt;/p&gt;
&lt;p&gt;
For example when the first parameter to wp_mail is "foo@…, bar@…" this string is passed directly to the SMTP server in the first and only RCPT command. Expected behavior is two separate RCPT commands, one for each email address.
&lt;/p&gt;
&lt;p&gt;
phpmailer supports the required functionality, however $phpmailer-&amp;gt;AddAddress needs to be called multiple times for each email address contained in the first parameter ($to). Instead AddAddress is called only once, borking any attempts to send to multiple recipients when using gmail's SMTP server.
&lt;/p&gt;
&lt;p&gt;
I would submit a patch, however this is my first time investigating both php and Wordpress and fear that I could only do more harm than good.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10390 (attachments should store the WP uploads path that was configured when ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:24:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10390#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10390#comment:2/1247689489000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10390#comment:1" title="Comment 1"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You mean change the uploads directory without moving the previously uploaded files so there are two different upload directories?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Pretty much so, yeah. Site is currently using wp-content/uploads, and I was looking into changing that to media. So one old upload directory, and a new one. If we store the "current" uploads directory (e.g. wp-content/uploads) as a meta, we fix this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems the more common user case is to move the uploads directory to a new location. In that case galleries continue to work properly (as long as the sub-dirs are kept intact) but the inserted images in older posts need to be corrected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. Hence the suggestion, which would kill two birds in one stone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:4/1247688587000000</guid>
      <description>&lt;p&gt;
Just to cross reference 2 other tickets: &lt;br /&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10417" title="#10417: enhancement: Provide redirection follow capabilities in HTTP API when safe_mode or ... (closed: duplicate)"&gt;#10417&lt;/a&gt; &lt;br /&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10418" title="#10418: enhancement: Simplepie has force_fsockopen but the WP File Class does not respect ... (closed: wontfix)"&gt;#10418&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10417 (Provide redirection follow capabilities in HTTP API when safe_mode or ...) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10417#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10417#comment:1/1247688579000000</guid>
      <description>&lt;p&gt;
Just to cross reference 2 other tickets: &lt;br /&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10416" title="#10416: enhancement: Create filter and or constant for forcing use of a specific http transport (closed: wontfix)"&gt;#10416&lt;/a&gt; &lt;br /&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10418" title="#10418: enhancement: Simplepie has force_fsockopen but the WP File Class does not respect ... (closed: wontfix)"&gt;#10418&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10418 (Simplepie has force_fsockopen but the WP File Class does not respect ...) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:09:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10418#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10418#comment:1/1247688572000000</guid>
      <description>&lt;p&gt;
Just to cross reference 2 other tickets: &lt;br /&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10416" title="#10416: enhancement: Create filter and or constant for forcing use of a specific http transport (closed: wontfix)"&gt;#10416&lt;/a&gt; &lt;br /&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10417" title="#10417: enhancement: Provide redirection follow capabilities in HTTP API when safe_mode or ... (closed: duplicate)"&gt;#10417&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 20:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:3/1247688041000000</guid>
      <description>&lt;p&gt;
I'm sure it's *not* timing out from inactivity, too. In my case, it's trying to upload 7M worth of zipped files... :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 19:57:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:3/1247687867000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10416#comment:2" title="Comment 2"&gt;sivel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;In my current specific case I am checking to see if safe_mode and open_basedir are set and if they are I want to force use of fsockopen.  However, to do this you have to run 4 filters to disable all of the other transports rather than being able to do one define or one filter to force use of a specific transport.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
This is one area where, imo WP should be fixed. I've been playing with transports and filesystems for most of the day, and the concluding points are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;FTP Filesystem times out, and is needing a longer timeout, perhaps through the use of ftp_set_option($wp_filesystem-&amp;gt;link, FTP_TIMEOUT_SEC, 300); -- see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10407" title="#10407: defect (bug): FTP Extension-based filesystem fails on WP core upgrade/re-install (closed: duplicate)"&gt;#10407&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;curl is a memory hog, and might need an ini_set() call to increase the memory limit when used
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;the fopen transport returns the infamous PCLZIP_ERR_BAD_FORMAT thingy -- see &lt;a class="ext-link" href="http://forum.semiologic.com/discussion/5711/trying-to-do-a-reinstall-automatically/#Item_3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://forum.semiologic.com/discussion/5711/trying-to-do-a-reinstall-automatically/#Item_3&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Re your particular problem, it would make more sense to just enforce it in core imo
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;Lets say for some reason the test for a specific transport returns false that it cannot be used but I want to force it to use that transport anyway.  There is currently no way around this.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
very true. but again, if it returns false and still works, we should fix the detection code in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 19:51:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:2/1247687461000000</guid>
      <description>&lt;p&gt;
I'm trying this fix atm: ftp_set_option($wp_filesystem-&amp;gt;link, FTP_TIMEOUT_SEC, 600)
&lt;/p&gt;
&lt;p&gt;
will report back when users who were affected try it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9640 (wp_update_user() blindly calls add_magic_quotes(), even on objects) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 19:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9640#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9640#comment:28/1247686978000000</guid>
      <description>&lt;p&gt;
see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10419" title="#10419: defect (bug): Object of class __PHP_Incomplete_Class (closed: invalid)"&gt;#10419&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10419 (Object of class __PHP_Incomplete_Class) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 19:42:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10419#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10419#comment:1/1247686961000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cross-referencing &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/9640" title="#9640: defect (bug): wp_update_user() blindly calls add_magic_quotes(), even on objects (reopened)"&gt;#9640&lt;/a&gt; with a link.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 15 Jul 2009 19:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:2/1247686228000000</guid>
      <description>&lt;p&gt;
No, for several reasons.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;That plugin does the same thing I mentioned, disabling all transports except for the one you want to use by means of filtering.
&lt;/li&gt;&lt;li&gt;Why would I want to use a plugin when a single define('WP_HTTP_TRANSPORT', 'fsockopen'); could be used, not to mention I am currently doing the same that that plugin does.
&lt;/li&gt;&lt;li&gt;In my current specific case I am checking to see if safe_mode and open_basedir are set and if they are I want to force use of fsockopen.  However, to do this you have to run 4 filters to disable all of the other transports rather than being able to do one define or one filter to force use of a specific transport.
&lt;/li&gt;&lt;li&gt;Lets say for some reason the test for a specific transport returns false that it cannot be used but I want to force it to use that transport anyway.  There is currently no way around this.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9876 (sort items in the admin menu) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 19:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9876#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9876#comment:10/1247685998000000</guid>
      <description>&lt;p&gt;
new patch fixes a bug on index.php when akismet is enabled. It's now checking for !empty() instead of isset().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9876.3.diff attached to Ticket #9876</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 19:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9876/9876.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9876/9876.3.diff/1247685958000000</guid>
      <description>&lt;p&gt;
fix a bug in the previous patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 19:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:9/1247684586000000</guid>
      <description>&lt;p&gt;
Here, have a look at two themes I wrote, and see how things have evolved:
&lt;/p&gt;
&lt;p&gt;
old -- &lt;a class="ext-link" href="http://www.semiologic.com/media/software/sem-theme/semiologic.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.semiologic.com/media/software/sem-theme/semiologic.zip&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
new -- &lt;a class="ext-link" href="http://www.semiologic.com/media/software/sem-reloaded/sem-reloaded.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.semiologic.com/media/software/sem-reloaded/sem-reloaded.zip&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note the complete absence of hooks in the second one. It took me an awful lot of time to reeducate users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8948 (permalink redirection is too liberal) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Wed, 15 Jul 2009 18:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8948#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8948#comment:6/1247684151000000</guid>
      <description>&lt;p&gt;
I think it would be okay to require like 3 characters in the path for canonical to kick in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 18:45:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:8/1247683515000000</guid>
      <description>&lt;p&gt;
Yaya, it's perfectly clear you want new hooks. I was merely mentioning how these hooks ended up used in practice when theme authors add them.
&lt;/p&gt;
&lt;p&gt;
Quite frankly, having gone through this myself, and having maintained a template that had tons of hooks at one point while keeping other themes in mind for my plugins, the only hooks I've ever wished was present on all installs were a wp_header hook immediately after the body tag. Then again, they can easily be replaced by hooking into wp_head.
&lt;/p&gt;
&lt;p&gt;
The remaining bonus hooks in themes you're wishing for, are really just a convenience for end-users who don't understand the WP internals. Yet, I can tell you with reasonable confidence that there almost always is a non-obvious hook that can be used in a way or another.
&lt;/p&gt;
&lt;p&gt;
Adding to this, my key finding -- if any -- was that having too obvious hooks in a template was bait for end-users to try to use them, for all sorts of things that they shouldn't even be trying. The last thing you want is Joe six-pack's mom requesting help in a support forum in order to code a php function. I speak from experience here, too -- I've helped hundreds of them, and dealing with them is not fun *at all*.
&lt;/p&gt;
&lt;p&gt;
The most important point to keep in mind, though, is that a lot of themes don't go as far as adding the wp_footer() call. If we add a half dozen more such things, you're guaranteed that plugins will advertise themselves as being click and do nothing things -- but the reality is going it's going to be chaos in the support forum because they still have to do something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10406 (wp_timezone_choice in wp-admin/options-general.php breaks page on php 5.3) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 18:15:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10406#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10406#comment:5/1247681748000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 18:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:1/1247681551000000</guid>
      <description>&lt;p&gt;
isn't the core control plugin good enough for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Wed, 15 Jul 2009 18:10:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:7/1247681402000000</guid>
      <description>&lt;p&gt;
This ticket isn't advocating a custom.php file, which is a bad idea if your using the automatic updater, but it's also a bad idea because it lacks in organizations.
&lt;/p&gt;
&lt;p&gt;
I'll put together a list of hooks I think would improve themes and put it up for debate. I don't think making the average person dig through theme source code is the way to go in order for plugins to function correctly, yet I don't think we need to add 100 more hooks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10419 (Object of class __PHP_Incomplete_Class) created</title>
      
        <dc:creator>tailspin</dc:creator>

      <pubDate>Wed, 15 Jul 2009 17:07:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10419</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10419/1247677622000000</guid>
      <description>&lt;p&gt;
User attempts to change password and a catchable error occurs:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Catchable fatal error:&lt;/strong&gt; Object of class &lt;span class="underline"&gt;PHP_Incomplete_Class could not be converted to string in &lt;strong&gt;/home/.sausage/tailspin/undress4success.com/wp-includes/wp-db.php&lt;/strong&gt; on line &lt;strong&gt;445&lt;/strong&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
May be related to ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9638" title="#9638: defect (bug): add_magic_quotes() fails on objects (closed: duplicate)"&gt;#9638&lt;/a&gt; and 9640 - but not quite the same issue. In this case user was not converted, was a new login that just wanted to change password. I duplicated problem with a new test account.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10406 (wp_timezone_choice in wp-admin/options-general.php breaks page on php 5.3) closed</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 15 Jul 2009 16:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10406#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10406#comment:4/1247675218000000</guid>
      <description>invalid: &lt;p&gt;
Since this has been confirmed to be a bug in the Debian PHP/Timezone implementation closing this ticket as invalid.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10418 (Simplepie has force_fsockopen but the WP File Class does not respect ...) created</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 15 Jul 2009 16:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10418</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10418/1247674372000000</guid>
      <description>&lt;p&gt;
Simplepie has the ability to allow a user to force the use of fsockopen.  The WP File class passed to Simplepie does not respect this or have a way to respect this.  I have opened a ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10416" title="#10416: enhancement: Create filter and or constant for forcing use of a specific http transport (closed: wontfix)"&gt;#10416&lt;/a&gt; which deals with allowing the ability to set a specific transport to be used.  Perhaps we could use the functionality proposed in that ticket to respect force_fsockopen in simplepie.  Another thought is to add the transport to use the the args list passed to the http api functions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10410 (Secondary RSS feeds use the wrong function to acquire post titles) updated</title>
      
        <dc:creator>kingjeffrey</dc:creator>

      <pubDate>Wed, 15 Jul 2009 16:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10410#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10410#comment:6/1247674365000000</guid>
      <description>&lt;p&gt;
I think I may have confused the issue by mentioning HTML tags at all.  I apologize for that.
&lt;/p&gt;
&lt;p&gt;
Let me clearly state the issue. &lt;code&gt;is_feed()&lt;/code&gt; not working for secondary feed titles. I believe it has something to do with the use of &lt;code&gt;the_title()&lt;/code&gt; on line 1499 of wp-includes/general-template.php
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10417 (Provide redirection follow capabilities in HTTP API when safe_mode or ...) created</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 15 Jul 2009 16:07:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10417/1247674072000000</guid>
      <description>&lt;p&gt;
When safe_mode or open_basedir are set it seems that the only transport that can "follow" the redirects is fsockopen.  All others stop after the initial request.
&lt;/p&gt;
&lt;p&gt;
Simplepie seems to have a method of "manually" following by checking to see if the last response was a 30x and checks the number of redirects.  If the last response was a 30x and the redirects that happened were less than configured it does a "manual" follow by requesting, grabbing the 'Location' header and then requesting again until it either hits the redirect limit or a non 30x response code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10410 (Secondary RSS feeds use the wrong function to acquire post titles) updated</title>
      
        <dc:creator>kingjeffrey</dc:creator>

      <pubDate>Wed, 15 Jul 2009 16:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10410#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10410#comment:5/1247673951000000</guid>
      <description>&lt;p&gt;
@dev-feedback
&lt;/p&gt;
&lt;p&gt;
Regardless of HTML in the post title; &lt;code&gt;is_feed()&lt;/code&gt; is broken for secondary feeds.  If _any_ processing is done of the post title by a plugin, it is applied to secondary feed titles.  Even if the filter is wrapped in &lt;code&gt;if( !is_feed() )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Regarding your observation that feed titles be something like "Common usage of &amp;lt;div&amp;gt; and &amp;lt;p&amp;gt;", that is what &lt;code&gt;&amp;amp;lt;&lt;/code&gt; is for.  I believe that in the HTML editor (not the WYSIWYG editor), people should reasonably be expected to know basic HTML, and HTML tags should be recognized as such in the title field (unless they are explicitly escaped).  It currently is not... whatever.  But that is a different issue entirely than &lt;code&gt;is_feed()&lt;/code&gt; not working for secondary feeds.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) created</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 15 Jul 2009 16:04:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416/1247673864000000</guid>
      <description>&lt;p&gt;
While you can disable all of the transports you do not want to use there should be a constant and/or filter that allows you to specify the http transport you want to use.  Perhaps 2, one for GET and one for POST.
&lt;/p&gt;
&lt;p&gt;
This would provide similar functionality to the file system methods where you can set a constant or filter to specify which one to force.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8974 (WordPress permalinks settings page should work with IIS 7.0 URL ...) updated</title>
      
        <dc:creator>bforchhammer</dc:creator>

      <pubDate>Wed, 15 Jul 2009 15:03:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8974#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8974#comment:34/1247670234000000</guid>
      <description>&lt;p&gt;
For reference: &lt;a class="ext-link" href="http://trac.mu.wordpress.org/ticket/1040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;MU #1040&lt;/a&gt;, &lt;a class="ext-link" href="http://trac.mu.wordpress.org/ticket/991"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;MU #991&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10410 (Secondary RSS feeds use the wrong function to acquire post titles) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Wed, 15 Jul 2009 14:38:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10410#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10410#comment:4/1247668724000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe that the_title is designed for plain text, not HTML. A valid WordPress post title can be something like "Common usage of &amp;lt;div&amp;gt; and &amp;lt;p&amp;gt;". As a result, HTML code must not be removed. See also &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/9993" title="#9993: defect (bug): Rss and atom feeds are dropping some characters (assigned)"&gt;#9993&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #10395,​10410 batch updated</title>
      
        <dc:creator>kingjeffrey</dc:creator>

      <pubDate>Wed, 15 Jul 2009 14:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=10395%2C10410</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=10395%2C10410/1247668368000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@peaceablewhale
&lt;/p&gt;
&lt;p&gt;
Inline HTML tags are valid syntax inside &amp;lt;code&amp;gt;h1&amp;lt;\code&amp;gt; and &amp;lt;code&amp;gt;h2&amp;lt;\code&amp;gt; elements. It is nice that you don't think I should be able to have the typographic control that valid HTML and CSS allow, but I will have to respectfully disagree.
&lt;/p&gt;
&lt;p&gt;
I understand there can be complications with HTML in the headings. Specifically, feed readers often choke on it. And that is why this bug report is filed; to allow for an &amp;lt;code&amp;gt;is_feed()&amp;lt;\code&amp;gt; test that actually works, so HTML can be selectively inserted. All I am asking for is that the secondary feeds are treated the same as primary feeds.
&lt;/p&gt;
&lt;p&gt;
Right now, the application is HTML injection. But regardless of the application &amp;lt;code&amp;gt;is_feed()&amp;lt;\code&amp;gt; is broken for secondary feeds.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #10410 (Secondary RSS feeds use the wrong function to acquire post titles) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Wed, 15 Jul 2009 11:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10410#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10410#comment:2/1247657620000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't think plugins should insert HTML to the_title. the_title is intended to be the exact words of the post's title.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10413 (Allow plugins to short -circuit WP_Http::request()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10413#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10413#comment:4/1247648396000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm all +1 for this patch. It fixes my own problem too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10403 (Consider using the PHP ZIP extension to extract Zip's if available) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:56:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10403#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10403#comment:4/1247648180000000</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10231 (missing hook in WP_HTTP) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10231#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10231#comment:10/1247648158000000</guid>
      <description>fixed: &lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10413" title="#10413: enhancement: Allow plugins to short -circuit WP_Http::request() (closed: fixed)"&gt;#10413&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10413 (Allow plugins to short -circuit WP_Http::request()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:55:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10413#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10413#comment:3/1247648117000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
*grin*
&lt;/p&gt;
&lt;p&gt;
Closing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10231" title="#10231: defect (bug): missing hook in WP_HTTP (closed: fixed)"&gt;#10231&lt;/a&gt; as dup, since this patch is better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10412 (add_object_page() doesn't serve icons over SSL when needed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10412#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10412#comment:3/1247647047000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10412 (add_object_page() doesn't serve icons over SSL when needed) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10412#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10412#comment:2/1247647008000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11717" title="Correct icon_url over SSL in add_object_page(), props johnbillion, ..."&gt;[11717]&lt;/a&gt;) Correct icon_url over SSL in add_object_page(), props johnbillion, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10412" title="#10412: defect (bug): add_object_page() doesn't serve icons over SSL when needed (closed: fixed)"&gt;#10412&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11717]: Correct icon_url over SSL in add_object_page(), props johnbillion, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11717</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11717/1247647005561935</guid>
      <description>&lt;p&gt;
Correct icon_url over SSL in add_object_page(), props johnbillion, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10412" title="#10412: defect (bug): add_object_page() doesn't serve icons over SSL when needed (closed: fixed)"&gt;#10412&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10403 (Consider using the PHP ZIP extension to extract Zip's if available) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10403#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10403#comment:3/1247646356000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Then leaving this to you should be the best. The "needs-patch" keyboard is no longer needed :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10403 (Consider using the PHP ZIP extension to extract Zip's if available) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10403#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10403#comment:2/1247646052000000</guid>
      <description>&lt;p&gt;
If someone else doesnt implement this, i'll get it done before next release.. I've got other uses for that code :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10415 (URL not secured in wp-trackback.php) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10415#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10415#comment:2/1247645584000000</guid>
      <description>invalid: &lt;p&gt;
It's escaped properly, &lt;code&gt;$wpdb-&amp;gt;prepare()&lt;/code&gt; escapes it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10415 (URL not secured in wp-trackback.php) updated</title>
      
        <dc:creator>McGurk</dc:creator>

      <pubDate>Wed, 15 Jul 2009 08:04:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10415#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10415#comment:1/1247645064000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10126 (Warning upon saving draft page) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 07:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10126#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10126#comment:16/1247644319000000</guid>
      <description>&lt;p&gt;
Might you be overriding the wpdb class in your setup?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/10126#comment:11"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/10126#comment:11&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10415 (URL not secured in wp-trackback.php) created</title>
      
        <dc:creator>McGurk</dc:creator>

      <pubDate>Wed, 15 Jul 2009 07:49:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10415</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10415/1247644180000000</guid>
      <description>&lt;p&gt;
I've found that the variable $tb_url is never escaped before it's inserted into the database. I think a $wpdb-&amp;gt;escape is needed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>comment.php.diff attached to Ticket #10414</title>
      
        <dc:creator>gnaka08</dc:creator>

      <pubDate>Wed, 15 Jul 2009 07:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10414/comment.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10414/comment.php.diff/1247644075000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10414 (Some trackbacks timeout due to short timeout period) created</title>
      
        <dc:creator>gnaka08</dc:creator>

      <pubDate>Wed, 15 Jul 2009 07:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10414</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10414/1247644055000000</guid>
      <description>&lt;p&gt;
A trackback by WordPress to an external blog can timeout without any network congestion. WordPress 2.8.1 timeouts if it has not received any response from the receiving system for 4 seconds although some blog system can take more than 10 seconds to accept a trackback. If the trackback fails, WordPress keeps trying to resend the trackback every time the user posts a new entry, but it never succeeds and WordPress keeps resending for ever.  It annoys the blog owner whose blog the WordPress is trying to send the trackback to.
&lt;/p&gt;
&lt;p&gt;
I propose that function trackback in wp-includes/comment.php should be modified for the timeout period to be extended from 4 seconds (e.g. to 30 seconds).
&lt;/p&gt;
&lt;p&gt;
This modification is different from one appeared in ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8665" title="#8665: enhancement: Too short timeout for trackbacks and pingbacks (closed: wontfix)"&gt;#8665&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 15 Jul 2009 07:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:6/1247643945000000</guid>
      <description>&lt;p&gt;
Let me guess. They also have some kind of custom.php file? That sounds... sooooo Semiologic 2.0 (= 2005). I'm "impressed" by their innovative spirit.
&lt;/p&gt;
&lt;p&gt;
Joke set aside. Tried it, used it for well over 2 years on my end. Abandoned it, and was very happy to do so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10126 (Warning upon saving draft page) reopened</title>
      
        <dc:creator>tobiasheuken</dc:creator>

      <pubDate>Wed, 15 Jul 2009 05:02:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10126#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10126#comment:15/1247634151000000</guid>
      <description>&lt;p&gt;
The problem is still there with the latest Version 2.8.1
&lt;/p&gt;
&lt;p&gt;
-&amp;gt; &lt;a class="ext-link" href="http://forum.wordpress-deutschland.org/installation/55007-fehlermeldung-wp-includes-post-php-line-1762-a.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://forum.wordpress-deutschland.org/installation/55007-fehlermeldung-wp-includes-post-php-line-1762-a.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
-&amp;gt; &lt;a class="ext-link" href="http://wordpress.org/support/topic/289261"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/289261&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10374 (Ellipses for descriptions of actions in progress) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 15 Jul 2009 04:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10374#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10374#comment:1/1247630979000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10403 (Consider using the PHP ZIP extension to extract Zip's if available) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Wed, 15 Jul 2009 03:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10403#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10403#comment:1/1247630192000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1. The extension is automatically installed in PHP Windows releases since 5.3.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10413.patch attached to Ticket #10413</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 15 Jul 2009 03:47:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10413/10413.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10413/10413.patch/1247629630000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10413 (Allow plugins to short -circuit WP_Http::request()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 15 Jul 2009 03:45:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10413#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10413#comment:2/1247629529000000</guid>
      <description>&lt;p&gt;
Patch updated.
&lt;/p&gt;
&lt;p&gt;
Of course, we also need a way for plugins to access the result of the HTTP request (and potentially cache it), so let's add a &lt;code&gt;http_response&lt;/code&gt; filter to the response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10413 (Allow plugins to short -circuit WP_Http::request()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 15 Jul 2009 03:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10413#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10413#comment:1/1247629020000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch.
&lt;/p&gt;
&lt;p&gt;
Adds a new filter called &lt;code&gt;pre_http_request&lt;/code&gt; which passes the arguments array and the URL of the request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10413 (Allow plugins to short -circuit WP_Http::request()) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 15 Jul 2009 03:30:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10413</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10413/1247628636000000</guid>
      <description>&lt;p&gt;
There is no way for plugins to add caching functionality to any of the HTTP functions (such as &lt;code&gt;wp_remote_get()&lt;/code&gt;) in WordPress.
&lt;/p&gt;
&lt;p&gt;
An easy way to add this is to provide a short-circuit option just like that found in &lt;code&gt;get_option()&lt;/code&gt; where a plugin can hook into &lt;code&gt;pre_option_{$option_name}&lt;/code&gt; and return a value for that option.
&lt;/p&gt;
&lt;p&gt;
A simple filter which passes the arguments array and the URL will do nicely.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Wed, 15 Jul 2009 03:02:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:5/1247626934000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
yawn... there are so many hooks in themes already... I truly fail to see the point.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I still think there are some key locations that are missing hooks. If you take a look at themes like Thematic and Hybrid, they have hooks that address more locations and allow for most custom-ability without having to edit core theme code. Currently theme don't have enough basic hooks, besides the ones you mentioned, to hook into. Were now seeing more themes get bloated with "theme options", because plugins can't add the functionality without asking the end user to copy and paste code into their theme. I think we need to look into the future and think about how plugins could extend themes. I also think we should not blow of this idea without consider the potential demand for hooks in some additional key areas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10412 (add_object_page() doesn't serve icons over SSL when needed) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 15 Jul 2009 01:07:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10412#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10412#comment:1/1247620045000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch.
&lt;/p&gt;
&lt;p&gt;
Code borrowed from &lt;code&gt;add_utility_page()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10412.patch attached to Ticket #10412</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 15 Jul 2009 01:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10412/10412.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10412/10412.patch/1247620007000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10412 (add_object_page() doesn't serve icons over SSL when needed) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 15 Jul 2009 01:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10412</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10412/1247619936000000</guid>
      <description>&lt;p&gt;
If you pass an icon URL to &lt;code&gt;add_object_page()&lt;/code&gt; the icon won't be served over SSL when the admin area is accessed over SSL.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_utility_page()&lt;/code&gt; handles this fine.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10411 (pagination not working, even with default theme) updated</title>
      
        <dc:creator>tazatek</dc:creator>

      <pubDate>Wed, 15 Jul 2009 00:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10411#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10411#comment:1/1247619446000000</guid>
      <description>&lt;p&gt;
Reformat Edit:
&lt;/p&gt;
&lt;p&gt;
The default navigation, as referenced here from the default theme that comes with 2.8.1:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="navigation"&amp;gt; &amp;lt;div class="alignleft"&amp;gt; &amp;lt;?php next_posts_link('&amp;amp;laquo; Older Entries') ?&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="alignright"&amp;gt; &amp;lt;?php previous_posts_link('Newer Entries &amp;amp;raquo;') ?&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
doesn't display the prev/next navigation arrows that one would expect.
&lt;/p&gt;
&lt;p&gt;
I minimized to have no plugins installed, more than 100 posts in the blog (so there is need for pagination), and reduce the number of posts to 2 per page (in settings/reading).
&lt;/p&gt;
&lt;p&gt;
I don't use the default theme for anything but testing, but we now have several blogs (with diffing themes) that are supposed to have navigation, and don't. These are using 2.8 and 2.8.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10411 (pagination not working, even with default theme) created</title>
      
        <dc:creator>tazatek</dc:creator>

      <pubDate>Wed, 15 Jul 2009 00:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10411</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10411/1247619331000000</guid>
      <description>&lt;p&gt;
The default navigation, as referenced here from the default theme that comes with 2.8.1:
&amp;lt;div class="navigation"&amp;gt;
&amp;lt;div class="alignleft"&amp;gt;
&amp;lt;?php next_posts_link('&amp;amp;laquo; Older Entries') ?&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="alignright"&amp;gt;
&amp;lt;?php previous_posts_link('Newer Entries &amp;amp;raquo;') ?&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/p&gt;
&lt;p&gt;
doesn't display the prev/next navigation arrows that one would expect.
&lt;/p&gt;
&lt;p&gt;
I minimized to have no plugins installed, more than 100 posts in the blog (so there is need for pagination), and reduce the number of posts to 2 per page (in settings/reading).
&lt;/p&gt;
&lt;p&gt;
I don't use the default theme for anything but testing, but we now have several blogs (with diffing themes) that are supposed to have navigation, and don't.  These are using 2.8 and 2.8.1.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>php-5.3.0-systzdata-v5.patch attached to Ticket #10406</title>
      
        <dc:creator>demonicpagan</dc:creator>

      <pubDate>Wed, 15 Jul 2009 00:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10406/php-5.3.0-systzdata-v5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10406/php-5.3.0-systzdata-v5.patch/1247618854000000</guid>
      <description>&lt;p&gt;
Patch file from  &lt;a class="ext-link" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=535770"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=535770&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10406 (wp_timezone_choice in wp-admin/options-general.php breaks page on php 5.3) updated</title>
      
        <dc:creator>demonicpagan</dc:creator>

      <pubDate>Wed, 15 Jul 2009 00:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10406#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10406#comment:3/1247618349000000</guid>
      <description>&lt;p&gt;
Did some research and came across this: &lt;a class="ext-link" href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=535770"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=535770&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>