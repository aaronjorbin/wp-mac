<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #16979 (Extra hooks needed in comment process) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 27 Mar 2011 23:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16979#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16979#comment:2/1301270248590188</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Actually, I'm pretty sure I populated it with something static until I ran into the duplicate comment issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm appending a &lt;code&gt;&amp;lt;!-- comment --&amp;gt;&lt;/code&gt; with a hash in it, that works around the issue, I was planning on striping it out before it went to the database, but there were no filters between the duplicate check and the DB insert either!
&lt;/p&gt;
&lt;p&gt;
In this case, I'd probably do them as 3 functions, one for duplicate comment, one for blank comment, and one for the userloggedin &amp;amp; required fields not set
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16983.diff attached to Ticket #16983</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 27 Mar 2011 21:11:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16983/16983.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16983/16983.diff/1301260289968815</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16983 (Pass $sep to 'wp_title_rss' filter) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 27 Mar 2011 21:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16983</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16983/1301260274005495</guid>
      <description>&lt;p&gt;
Same for 'get_wp_title_rss'.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 27 Mar 2011 20:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:14/1301258587977321</guid>
      <description>&lt;p&gt;
Oh, and thankfully no I hadn't started working on the patch yet -- I was going to do it today. It seemed like a fun little project I could have spent a few minutes on, but oh well. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 27 Mar 2011 20:38:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:13/1301258298676376</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Too slow I guess. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16982 (Deprecate post_permalink()) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 27 Mar 2011 20:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16982</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16982/1301257123781919</guid>
      <description>&lt;p&gt;
post_permalink() does nothing but call get_permalink() and already has a deprecated argument.
&lt;/p&gt;
&lt;p&gt;
Let's deprecate it completely, since it's useless.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14856.patch attached to Ticket #14856</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 20:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14856/14856.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14856/14856.patch/1301256667376333</guid>
      <description>&lt;p&gt;
refresh (without trailing whitespace this time)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16975 (JS autosave_update_slug() doesn't check if return is -1) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Mar 2011 20:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16975#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16975#comment:3/1301256551890588</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17565" title="Handle error response in autosave_update_slug(), props nacin, fixes #16975"&gt;[17565]&lt;/a&gt;) Handle error response in autosave_update_slug(), props nacin, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16975" title="#16975: defect (bug): JS autosave_update_slug() doesn't check if return is -1 (closed: fixed)"&gt;#16975&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17565]: Handle error response in autosave_update_slug(), props nacin, fixes #16975</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Mar 2011 20:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17565</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17565/1301256549580781</guid>
      <description>&lt;p&gt;
Handle error response in autosave_update_slug(), props nacin, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16975" title="#16975: defect (bug): JS autosave_update_slug() doesn't check if return is -1 (closed: fixed)"&gt;#16975&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14856 (Add an $args parameter to comment_text filter) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 20:07:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14856#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14856#comment:5/1301256450312929</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I refreshed the patch.  It should apply cleanly now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16981 (Importer uploads to incorrect directory) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sun, 27 Mar 2011 19:50:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16981#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16981#comment:1/1301255422253276</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/changeset/365515/wordpress-importer"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://plugins.trac.wordpress.org/changeset/365515/wordpress-importer&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For reference looks like this bug has been around since importing attachments was introduced, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6390" title="Import file attachments. Props tellyworth. fixes #5466"&gt;[6390]&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do we also want to start setting the post_date of attachments to be the same as the parent post? 'post_date' =&amp;gt; $time in media_handle_upload() and friends.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"Don't think so." -- nacin.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16977 (PHP notice for undefined variable in wp_list_post_revisions()) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 19:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16977#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16977#comment:2/1301255180439821</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17564" title="Initialize a variable. props boonebgorges, fixes #16977."&gt;[17564]&lt;/a&gt;) Initialize a variable. props boonebgorges, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16977" title="#16977: defect (bug): PHP notice for undefined variable in wp_list_post_revisions() (closed: fixed)"&gt;#16977&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17564]: Initialize a variable. props boonebgorges, fixes #16977.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 19:46:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17564</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17564/1301255178052443</guid>
      <description>&lt;p&gt;
Initialize a variable. props boonebgorges, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16977" title="#16977: defect (bug): PHP notice for undefined variable in wp_list_post_revisions() (closed: fixed)"&gt;#16977&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16977 (PHP notice for undefined variable in wp_list_post_revisions()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 19:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16977#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16977#comment:1/1301255163411513</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16975 (JS autosave_update_slug() doesn't check if return is -1) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 19:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16975#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16975#comment:2/1301254949629978</guid>
      <description>&lt;p&gt;
Sure, that could work. It'd always come back when the user is logged in. I'm indifferent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 27 Mar 2011 19:07:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:12/1301252860264553</guid>
      <description>&lt;p&gt;
Since we're meta-ing here, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16955" title="#16955: defect (bug): It's tricky to drag metaboxes (closed: fixed)"&gt;#16955&lt;/a&gt; could definitely use some more eyeballs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 18:46:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:11/1301251585379117</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16970#comment:10" title="Comment 10"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The patch looks fine.  Does exactly what Alex and I had first discussed.
&lt;/p&gt;
&lt;p&gt;
My issue is that Alex said he was going to do the patch since he hadn't contributed anything to core for a while.  What was the purpose of uploading a patch less than an hour after he said he would?  Did he ask you to (or did you ask him)?  If not, couldn't you have focused your time on another ticket (just offering input on this one like everyone else did) instead of stepping on someone's toes like that?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I never want to discourage someone from contributing. But among the more active contributors, there's a bit of informal code about things like this. Those who have commented to this ticket, we all have the ability (in terms of skill) to contribute to basically any ticket. When someone says they want to tackle something, I'd think it'd be common courtesy would be to at least circle back, oh, more than 25 minutes later. Chances are Alex was working on the patch at the time.
&lt;/p&gt;
&lt;p&gt;
Given enough eyeballs, all bugs are shallow, but that doesn't mean it's a race or that duplicative efforts shouldn't be avoided when it isn't necessary. As Aaron says, certainly time could have been spent on another ticket.
&lt;/p&gt;
&lt;p&gt;
Again, I never want to discourage contributions. If it was a newer contributor who posted a patch, I would not want this conversation to take place. But among us, let's have some mutual respect please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16928 (Autosave collision detection does not alert user or prevent further ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Mar 2011 18:27:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16928#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16928#comment:8/1301250429257708</guid>
      <description>&lt;p&gt;
We could put the warning at the top but from UX point of view it has to be highly visible. That's why it is a double warning in the patch, the JS &lt;code&gt;alert()&lt;/code&gt; stops the user from typing and the &lt;code&gt;&amp;lt;div class="error"...&lt;/code&gt; keeps reminding them that somebody else has the same post open for editing.
&lt;/p&gt;
&lt;p&gt;
In any case we would need some UX feedback before committing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14466 (Widget position uses footer position styling) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Mar 2011 18:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14466#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14466#comment:16/1301249103393932</guid>
      <description>&lt;p&gt;
Changing the IDs of all footers in the admin would certainly affect some plugins, things like &lt;code&gt;jQuery('#footer')...&lt;/code&gt;, etc. Perhaps we can afford that early in the dev. cycle (i.e. now) as it follows our naming standards.
&lt;/p&gt;
&lt;p&gt;
However I don't think we need to try and fix duplicate names/IDs for widgets. Creating a widget or a widget area is similar to creating settings page for a plugin. The author would have to prefix all unique names/IDs as recommended in the codex. For widgets this is even more critical as they live on a page where (many) different plugins share the same name-space.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16928 (Autosave collision detection does not alert user or prevent further ...) updated</title>
      
        <dc:creator>benbalter</dc:creator>

      <pubDate>Sun, 27 Mar 2011 16:24:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16928#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16928#comment:7/1301243096016206</guid>
      <description>&lt;p&gt;
I can confirm azaozz's patch resolves the problem.
&lt;/p&gt;
&lt;p&gt;
Would it make sense to put the error before the #post form so that it gains parity with other notices/errors? (above the title box, rather than below.) Alternatively, if non-rich editing also autosaves, I believe it would need to be tied to both #postdivrich and #postdiv.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16980 (Empty Values are ignored by class-ixr.php) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 27 Mar 2011 15:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16980#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16980#comment:4/1301241279151634</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updated the code in description.
&lt;/p&gt;
&lt;p&gt;
nprasath002: I'm not sure exactly how the permissions are set up, but I do know that not everyone can change a ticket description.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16981.importer.diff attached to Ticket #16981</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sun, 27 Mar 2011 15:38:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16981/16981.importer.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16981/16981.importer.diff/1301240286784841</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16981 (Importer uploads to incorrect directory) created</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sun, 27 Mar 2011 15:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16981</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16981/1301240257179874</guid>
      <description>&lt;p&gt;
In some situations the importer may upload a file to a different directory compared to the export site.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Steps to reproduce:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol start="0"&gt;&lt;li&gt;Ensure the default yyyy/mm uploads organisation setting is enabled.
&lt;/li&gt;&lt;li&gt;Create a post. Set the publish date to 2005/03/xx.
&lt;/li&gt;&lt;li&gt;Upload an image to the post, it will be uploaded to wp-content/uploads/2005/03/image.jpg per media_handle_upload(), see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9663" title="Store uploads according to the parent post date when using year/month ..."&gt;[9663]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Export.
&lt;/li&gt;&lt;li&gt;Import on a new site.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The image will be located in wp-content/uploads/2011/03/ (subject to change, it will be the post_date of the attachment, i.e. date of upload).
&lt;/p&gt;
&lt;p&gt;
This occurs because the attachment's post_date, which the importer relies on to set the upload directory, may be different to the folder it is stored in (see media_handle_upload() and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9663" title="Store uploads according to the parent post date when using year/month ..."&gt;[9663]&lt;/a&gt; again).
&lt;/p&gt;
&lt;p&gt;
Proposed solution is to attempt to grab the upload location from &lt;code&gt;_wp_attached_file&lt;/code&gt; post meta and fallback to post_date which is correct in most cases.
&lt;/p&gt;
&lt;p&gt;
Do we also want to start setting the post_date of attachments to be the same as the parent post? &lt;code&gt;'post_date' =&amp;gt; $time&lt;/code&gt; in media_handle_upload() and friends.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16979 (Extra hooks needed in comment process) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 27 Mar 2011 14:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16979#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16979#comment:1/1301237751275612</guid>
      <description>&lt;p&gt;
I ran into the empty comment issue quite a while ago.  I think what I ultimately did was make that field a hidden field and populate it with an md5 hash.  Actually, I'm pretty sure I populated it with something static until I ran into the duplicate comment issue.  It would be nice to make this a little more flexible.
&lt;/p&gt;
&lt;p&gt;
Are you thinking three different functions?  One for user logged in, one for email/author required, and one for empty comments?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13544 (Use "Attachment Post URL" instead of "Post URL" in image uploader ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 27 Mar 2011 14:23:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13544#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13544#comment:16/1301235797013307</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nevermind, the "Attachment Post URL" is not the same as the post in which the image will be inserted.
&lt;/p&gt;
&lt;p&gt;
I was under the impression that it inserted the url to $attachment-&amp;gt;post_parent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16980 (Empty Values are ignored by class-ixr.php) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Sun, 27 Mar 2011 13:21:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16980#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16980#comment:3/1301232068856252</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16980#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Copied from the comment.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I edited again. Fix that in the description
&lt;/p&gt;
&lt;pre class="wiki"&gt;$tags_input = isset( $content_struct[mt_keywords] ) ? $content_struct[mt_keywords] : null;
&lt;/pre&gt;&lt;p&gt;
P.S how can i edit the decription??
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16980 (Empty Values are ignored by class-ixr.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 27 Mar 2011 13:14:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16980#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16980#comment:2/1301231695888853</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Copied from the comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10599 (Empty mt_keywords value is not respected) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Sun, 27 Mar 2011 12:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10599#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10599#comment:2/1301230202903293</guid>
      <description>&lt;p&gt;
Related &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/16980" title="#16980: defect (bug): Empty Values are ignored by class-ixr.php (reopened)"&gt;#16980&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16980 (Empty Values are ignored by class-ixr.php) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Sun, 27 Mar 2011 12:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16980#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16980#comment:1/1301229576874997</guid>
      <description>&lt;p&gt;
I tried to fix the following bug
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/10599"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/ticket/10599&lt;/a&gt;
Found out when you send and empty value via xmlrpc it converts it to null value.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Say you send and array of arguments for mw_editpost, set
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;$content_struct[mt_keywords] = '';
&lt;/pre&gt;&lt;p&gt;
IXR client passes a null value instead of an empty value.
&lt;/p&gt;
&lt;p&gt;
In mw_post method consider this statement
&lt;/p&gt;
&lt;pre class="wiki"&gt;$tags_input = isset( $content_struct[mt_keywords] ) ? $content_struct[mt_keywords] : null;
&lt;/pre&gt;&lt;p&gt;
Even if you send an empty value this statement fails because
&lt;/p&gt;
&lt;pre class="wiki"&gt;$content_struct[mt_keywords]
&lt;/pre&gt;&lt;p&gt;
is set to null by IXR client.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16980 (Empty Values are ignored by class-ixr.php) created</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Sun, 27 Mar 2011 12:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16980</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16980/1301229287674421</guid>
      <description>&lt;p&gt;
I tried to fix the following bug &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10599" title="#10599: defect (bug): Empty mt_keywords value is not respected (closed: duplicate)"&gt;#10599&lt;/a&gt;
Found out when you send and empty value via xmlrpc it converts it to null value.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Say you send and array of arguments for mw_editpost, set
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;$content_struct[mt_keywords] = '';
&lt;/pre&gt;&lt;p&gt;
IXR client passes a null value instead of an empty value.
&lt;/p&gt;
&lt;p&gt;
In mw_post method consider this statement
&lt;/p&gt;
&lt;pre class="wiki"&gt;$tags_input = isset( $content_struct[mt_keywords] ) ? $content_struct[mt_keywords] : null;
&lt;/pre&gt;&lt;p&gt;
Even if you send an empty value this statement fails because
&lt;/p&gt;
&lt;pre class="wiki"&gt;$content_struct[mt_keywords]
&lt;/pre&gt;&lt;p&gt;
is set to null by IXR client.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13544 (Use "Attachment Post URL" instead of "Post URL" in image uploader ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 27 Mar 2011 12:27:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13544#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13544#comment:15/1301228828032939</guid>
      <description>&lt;p&gt;
How about we fix the real problem: make the button always insert the current post URL, as expected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16826 (Optimize SQL for term exclusions) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 27 Mar 2011 10:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16826#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16826#comment:4/1301221048479861</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16967" title="#16967: defect (bug): Adding cat=-# removes sorting (closed: duplicate)"&gt;#16967&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 27 Mar 2011 10:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:8/1301221012125827</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16960 (Problems with plugin readme.txt and update date) updated</title>
      
        <dc:creator>oferwald</dc:creator>

      <pubDate>Sun, 27 Mar 2011 09:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16960#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16960#comment:5/1301218560876116</guid>
      <description>&lt;p&gt;
Hello Hakre,
&lt;/p&gt;
&lt;p&gt;
Sorry, don't get it, re-tag it where? that is really what I am doing when having a new version, changes to the readme.txt didn't help.
&lt;/p&gt;
&lt;p&gt;
And I assume it is a bug in wp.org, so it should probably be solved somehow (or somewhere)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:47:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:7/1301215668455334</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:6/1301215556969120</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It seems like we might be moving to using the Settings API to output all of the markup, so in order to change from tables to divs, all the settings should be run through the API.
&lt;/p&gt;
&lt;p&gt;
This is where I got on the general page. I've never really used the API before, but it seems a little verbose. Just wanted to get a second opinion before I do the rest of the pages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16413.2.diff attached to Ticket #16413</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16413/16413.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16413/16413.2.diff/1301215489863164</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16827 (Network Users alternate row highlighting does not work properly) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16827#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16827#comment:7/1301215196709157</guid>
      <description>&lt;p&gt;
I see no harm in the css changes proposed to make them more specific - in fact they are probably a good idea.
&lt;/p&gt;
&lt;p&gt;
The attached patch works towards removing the hacky 'colours' style loading code and move towards using the normal en-queuing so that it works correctly with or without SCRIPT_DEBUG and the colour css gets loaded via load-styles too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14466 (Widget position uses footer position styling) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14466#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14466#comment:15/1301215146472085</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 on using #wpfooter (attached patch). Just some CSS changes and 1 JS reference. I can't imagine that breaking any plugins either, whereas prefixing all of the widgets might.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>colors-hacked-fixed.diff attached to Ticket #16827</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16827/colors-hacked-fixed.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16827/colors-hacked-fixed.diff/1301215089150164</guid>
      <description>&lt;p&gt;
In progress hacking
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14466.2.diff attached to Ticket #14466</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14466/14466.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14466/14466.2.diff/1301215052173162</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>9296.diff attached to Ticket #9296</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9296/9296.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9296/9296.diff/1301212853339549</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9296 (Settings API &amp; Permalink Settings Page Bug) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Sun, 27 Mar 2011 08:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9296#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9296#comment:16/1301212833156917</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updated patch for 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12947 (Slugs are reset when updating post via XML-RPC) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Sun, 27 Mar 2011 06:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12947#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12947#comment:6/1301208047110083</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12947 (Slugs are reset when updating post via XML-RPC) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Sun, 27 Mar 2011 06:30:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12947#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12947#comment:5/1301207406933706</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In editing posts if the slug was not mentioned
we should get the current postname not set it to blank.
Tested with a java client and works fine
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post-slug-reset.diff attached to Ticket #12947</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Sun, 27 Mar 2011 06:27:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12947/post-slug-reset.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12947/post-slug-reset.diff/1301207274536541</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16979 (Extra hooks needed in comment process) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 27 Mar 2011 06:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16979/1301206014227564</guid>
      <description>&lt;p&gt;
I'm running into a few commenting issues whilst building a plugin with a custom post type..
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Duplicate comment check's cannot be bypassed
&lt;/li&gt;&lt;li&gt;Empty comments are not allowed (In this case, the comment body is empty whilst a set of custom fields acting as metadata are set, meaning, the plugin wants to accept that comment)
&lt;/li&gt;&lt;li&gt;being able to override the wp_die() in the commenting process would be useful (Currently: Duplicate comments, User not logged in, and not all fields filled in will cause this)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
One potential solution would be to move &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-comments-post.php#L55"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;lines 55-84&lt;/a&gt; from &lt;code&gt;wp-comments-post.php&lt;/code&gt; to functions hooked to &lt;code&gt;preprocess_comment&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16978 (Move the PHP HTTP Extension priority down the list for WP_HTTP) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 27 Mar 2011 05:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16978#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16978#comment:2/1301205068814990</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I mainly created the ticket for tracking purposes, and to seek more public opinion on it
&lt;/p&gt;
&lt;p&gt;
However, I do feel that this should be changed in 3.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16978 (Move the PHP HTTP Extension priority down the list for WP_HTTP) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 05:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16978#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16978#comment:1/1301204347697768</guid>
      <description>&lt;p&gt;
This for 3.2? I think most of us agree that the order should change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Sun, 27 Mar 2011 05:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:16/1301203956628132</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16695#comment:15" title="Comment 15"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, well you din't mention that anywhere. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry for the confusion. Just attached a patch that restores the class name to &lt;code&gt;QTags&lt;/code&gt; instead of &lt;code&gt;QuickTags&lt;/code&gt;, and add 2 globals variables &lt;code&gt;edButtons&lt;/code&gt; as well as &lt;code&gt;edButton&lt;/code&gt; that maps nicely to the new API. &lt;a class="ext-link" href="http://scribu.net/wordpress/right-way-to-add-custom-quicktags.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;The code sample that you linked&lt;/a&gt; to works perfectly fine with the new API now.
&lt;/p&gt;
&lt;p&gt;
Hopefully the outcome of this ticket will allow for a more formal quicktag API than what we have now. I'm willing to further update this ticket to comply with core commiters' direction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16695.5.diff attached to Ticket #16695</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Sun, 27 Mar 2011 05:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16695/16695.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16695/16695.5.diff/1301203311133925</guid>
      <description>&lt;p&gt;
backward compatibility with edButtons and edButton
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sun, 27 Mar 2011 04:27:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:21/1301200077298624</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
might be fixed with and related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16656" title="#16656: enhancement: jQuery UI 1.8.12 (closed: fixed)"&gt;#16656&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Afraid not. I tried with UI 1.8.11 and it has the same problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16978 (Move the PHP HTTP Extension priority down the list for WP_HTTP) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 27 Mar 2011 02:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16978</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16978/1301194247639028</guid>
      <description>&lt;p&gt;
Currently the PHP HTTP Extension is receiving the top priority slot for which transport HTTP requests go out through.
&lt;/p&gt;
&lt;p&gt;
However, the extension is also the least tested, and also now uses the most memory when using Stream-to-file functionality for downloads.
&lt;/p&gt;
&lt;p&gt;
In addition to this, in most cases the HTTP Extension appears to be a simple cURL wrapper, falling back to fopen() &amp;amp; friends for certain functionality. This leads to cURL being available in most cases, and given we can control cURL's options easier than we can the HTTP extension, it makes sense to bump that up to position 1.
&lt;/p&gt;
&lt;p&gt;
In addition to this, the extension's ::test() method does not seem to cover all bases, leading back to the least-tested. For example, it requires the .ini setting 'allow_url_fopen' to be enabled for certain functionalities (HEAD Requests &amp;amp; Certain redirection cases) - For example, it fails with this on 4 of the 14 unit tests:
&lt;/p&gt;
&lt;pre class="wiki"&gt;file_get_contents(): http:// wrapper is disabled in the server configuration by allow_url_fopen=0
&lt;/pre&gt;&lt;p&gt;
So reasons:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Least Tested (historically at least, It may become more tested as PHP5 is more common)
&lt;/li&gt;&lt;li&gt;Requires more memory for Stream-to-file (Can use an extra ~9MB for downloading a 3MB file compared to using Curl, Streams, or fsockopen)
&lt;/li&gt;&lt;li&gt;Can't make non-blocking requests (In this case, it's already the last transport that is tried)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>16977.patch attached to Ticket #16977</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 27 Mar 2011 02:28:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16977/16977.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16977/16977.patch/1301192909850882</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16977 (PHP notice for undefined variable in wp_list_post_revisions()) created</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 27 Mar 2011 02:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16977/1301192886713069</guid>
      <description>&lt;p&gt;
I'm using wp_list_post_revisions() in a function, and noticed a bug related to $left_checked and $right_checked. Initial scenario/steps to reproduce:
&lt;/p&gt;
&lt;p&gt;
1) Call wp_list_post_revisions(), within the loop, with the following arguments:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_list_post_revisions( get_the_ID(), array( 'format' =&amp;gt; 'form-table' ) );
&lt;/pre&gt;&lt;p&gt;
2) Load the page. Notice: Undefined variable: right_checked in /sites/yolanda/wp-includes/post-template.php on line 1369
&lt;/p&gt;
&lt;p&gt;
The problem has to do with the fallback design of the form-table format. The logic at &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/post-template.php#L1365"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/post-template.php#L1365&lt;/a&gt; is: if an explicit 'right' parameter is passed (the New revision), but no 'left' argument (the Old revision), the next oldest revision should be checked as tho Old revision. That's done by checking to see whether $right_checked was set on the previous iteration of the foreach loop. The problem is that, on the first iteration of the foreach loop, $right_checked hasn't been cast at all.
&lt;/p&gt;
&lt;p&gt;
I'm marking the bug as trivial since it doesn't arise at all in WP core (where $left and $right arguments are always passed to the function). It's only an issue for edge-case plugins.
&lt;/p&gt;
&lt;p&gt;
Patch attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16975 (JS autosave_update_slug() doesn't check if return is -1) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Mar 2011 02:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16975#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16975#comment:1/1301191626678037</guid>
      <description>&lt;p&gt;
Patch looks good, just one question: wouldn't it be better to leave the current slug unchanged (whatever it may be) instead of removing it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [345]: Disable colour output on Windows systems. Props hakre for initial ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 27 Mar 2011 01:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/345/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/345/tests/1301190225821985</guid>
      <description>&lt;p&gt;
Disable colour output on Windows systems. Props hakre for initial patch. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16976 (Don't use photo as avatar class in comments) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 27 Mar 2011 01:07:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16976#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16976#comment:1/1301188050623759</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just removing the class has the problem that people currently styling that class will lose out.
&lt;/p&gt;
&lt;p&gt;
Also, These are hCard classes, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8264" title="#8264: defect (bug): Additional microformat hCard elements (closed: fixed)"&gt;#8264&lt;/a&gt; for where it was implemented.
&lt;/p&gt;
&lt;p&gt;
You could do something such as this if you care enough:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('get_avatar', 'remove_photo_class');
function remove_photo_class($avatar) {
    return str_replace(' photo', ' comment-photo', $avatar);
}
&lt;/pre&gt;&lt;p&gt;
(That is a wide-ranging replace there, but it's the most simplistic based on the fact ' photo' shouldn't be anywhere else in that string if you're using the default Gravatar avatar system)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) closed</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sun, 27 Mar 2011 01:00:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:12/1301187651425550</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13777#comment:10" title="Comment 10"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then my opinion remains the same, The Core HTTP API should require users call the handler (WP_HTTP) rather than subclasses directly, they should all have the same support on every system and if they don't, then the WP_HTTP handler should not allocate a request to one.
&lt;/p&gt;
&lt;p&gt;
I realise this may differ from your original intentions of the HTTP API, but my opinion is being based on what I feel is best for WordPress developers AND users as a whole; that is, that everything should "just work" and a plugin relying upon a certain transport does not fit that idea to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Okay, I can accept this reason. Whether or not I agree, at least it explains the direction for someone wondering why it is this way.
&lt;/p&gt;
&lt;p&gt;
Thanks for the explanation.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16976 (Don't use photo as avatar class in comments) created</title>
      
        <dc:creator>Okoth1</dc:creator>

      <pubDate>Sun, 27 Mar 2011 00:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16976/1301187284759001</guid>
      <description>&lt;p&gt;
If you use an image in your post with class 'photo' to show it in Google's search results as a rich snippet is not possible if you make use of avatars in your comments. Google will pick the last class 'photo' image on the page to show as the search result.
&lt;/p&gt;
&lt;p&gt;
Suggestion is to change the avatar class in comments to from 'photo' to 'comment-photo'. A post image is more important than a comment avatar to use for rich snippets.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 27 Mar 2011 00:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:10/1301187112716173</guid>
      <description>&lt;p&gt;
The patch looks fine.  Does exactly what Alex and I had first discussed.
&lt;/p&gt;
&lt;p&gt;
My issue is that Alex said he was going to do the patch since he hadn't contributed anything to core for a while.  What was the purpose of uploading a patch less than an hour after he said he would?  Did he ask you to (or did you ask him)?  If not, couldn't you have focused your time on another ticket (just offering input on this one like everyone else did) instead of stepping on someone's toes like that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16975.diff attached to Ticket #16975</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 00:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16975/16975.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16975/16975.diff/1301185372412331</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16975 (JS autosave_update_slug() doesn't check if return is -1) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 00:20:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16975/1301185232884976</guid>
      <description>&lt;p&gt;
If check_ajax_referer() fails, it'll die with -1. In autosave_update_slug(), we don't account for that, which results in a goofy -1 in the HTML.
&lt;/p&gt;
&lt;p&gt;
See the example here: &lt;a class="ext-link" href="http://cl.ly/0Q341X010Z0c2H3s1R1I"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://cl.ly/0Q341X010Z0c2H3s1R1I&lt;/a&gt;. Probably the most common reason for the check to fail would be if the user has since logged out, as you can see in the bottom right corner of the screenshot. I often see this when I discover tabs that I opened days before.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>jdingman</dc:creator>

      <pubDate>Sun, 27 Mar 2011 00:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:7/1301185225749137</guid>
      <description>&lt;p&gt;
Great!
&lt;/p&gt;
&lt;p&gt;
I applied the patch, works perfectly.
&lt;/p&gt;
&lt;p&gt;
Thanks for the feedback everyone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 00:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:23/1301184439073955</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:22" title="Comment 22"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's a design problem for unit testing that you have to filter which transport to use, it however, is not a design problem for users of the API as they should never attempt to (or have a need to) use a transport directly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1. Often it is difficult to test code properly due to how it is architected, but that doesn't mean the code is at fault. This is exactly how the class should be tested, given its structure.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To add fallover and enabled by default will increase the timeouts that users experience.
Whilst a user should never be waiting on a HTTP request to complete in general, we do force that upon them in the Updaters/Installers as well as a few other locations related to media. To wait for all the transports (or a 2nd transport) to fail in many cases would lead to a bad user experience ("Its Slow!")
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Consistent failures are going to be more common, and falling over in a non-persistent way doesn't make much sense from the performance aspect. Ideally we should be deciding which transport to use and use it, not using each transport until one decides to work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 27 Mar 2011 00:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:11/1301184168894183</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13777#comment:10" title="Comment 10"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then my opinion remains the same, The Core HTTP API should require users call the handler (WP_HTTP) rather than subclasses directly, they should all have the same support on every system and if they don't, then the WP_HTTP handler should not allocate a request to one.
&lt;/p&gt;
&lt;p&gt;
I realise this may differ from your original intentions of the HTTP API, but my opinion is being based on what I feel is best for WordPress developers AND users as a whole; that is, that everything should "just work" and a plugin relying upon a certain transport does not fit that idea to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Strongly agree with this. The current architecture makes sense in the context of what should be the direction and goals of the HTTP API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:55:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:22/1301183739603033</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
That you've got a design problem doesn't come to your mind while your making that many words, right? (Not meant to sound rude, it's an actual question, not an attack, we need to deal with what we have so far)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, I agree with you there, It's a design problem for unit testing that you have to filter which transport to use, it however, is not a design problem for users of the API as they should never attempt to (or have a need to) use a transport directly.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That might just work, however, it depends on what you mean by failure. If there is a network issue preventing any of the transports from working, then you'll blacklist all of the transports from being used. There would have to be a way to check by what errors are considered the Transport not working.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which is exactly why we do not have fallover in core, it hasn't been there since day1 (even though it was intended) and there has been no need to add it.
&lt;/p&gt;
&lt;p&gt;
In most cases where a transport has failed, it's failed consistently (cURL and fsockopen) with the same error condition (DNS and no connectivity through that transport).
&lt;/p&gt;
&lt;p&gt;
To add fallover and enabled by default will increase the timeouts that users experience.
Whilst a user should never be waiting on a HTTP request to complete in general, we do force that upon them in the Updaters/Installers as well as a few other locations related to media. To wait for all the transports (or a 2nd transport) to fail in many cases would lead to a bad user experience ("Its Slow!")
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:49:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:10/1301183373423218</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Then my opinion remains the same, The Core HTTP API should require users call the handler (WP_HTTP) rather than subclasses directly, they should all have the same support on every system and if they don't, then the WP_HTTP handler should not allocate a request to one.
&lt;/p&gt;
&lt;p&gt;
I realise this may differ from your original intentions of the HTTP API, but my opinion is being based on what I feel is best for WordPress developers AND users as a whole; that is, that everything should "just work" and a plugin relying upon a certain transport does not fit that idea to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) closed</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:6/1301183281790923</guid>
      <description>duplicate: &lt;p&gt;
See &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/16812#comment:9"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/ticket/16812#comment:9&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16826" title="#16826: enhancement: Optimize SQL for term exclusions (closed: invalid)"&gt;#16826&lt;/a&gt; seems to solve this problem
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:41:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:5/1301182866275523</guid>
      <description>&lt;p&gt;
Dupe/Related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16812" title="#16812: defect (bug): Taxonomy queries without joins ignore order by (closed: wontfix)"&gt;#16812&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:02:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:23/1301180549637355</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16974#comment:22" title="Comment 22"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16974#comment:18" title="Comment 18"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Gotcha, I see what you mean here though I believe &lt;a class="ext-link" href="http://wordpress.org/news/?p=100and"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?p=100and&lt;/a&gt; itself is a bug and should be redirected to normalize 'p' in the query (and other places).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm pretty sure there's a canonical redirect in place for this case. If not, there should be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Only redirects if you are using non-p permalinks. Like in the case of this site:
&lt;/p&gt;
&lt;p&gt;
pcgamingcorner.com/wordpress/?p=820and
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:22/1301180376224112</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16974#comment:18" title="Comment 18"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Gotcha, I see what you mean here though I believe &lt;a class="ext-link" href="http://wordpress.org/news/?p=100and"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?p=100and&lt;/a&gt; itself is a bug and should be redirected to normalize 'p' in the query (and other places).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm pretty sure there's a canonical redirect in place for this case. If not, there should be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:21/1301180268810465</guid>
      <description>&lt;p&gt;
You're the boss
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:56:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:20/1301180217409226</guid>
      <description>&lt;p&gt;
At that point, why even use absint()? Or only use absint() after using is_numeric(). Core won't use this, and you're not required to leverage absint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:19/1301180125807586</guid>
      <description>&lt;p&gt;
Was thinking more (one more try), perhaps absint could have an additional variable, so it'd be like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function absint ($maybeint, $strict = false) {
    if ( $strict &amp;amp;&amp;amp; ! is_numeric ( trim ( $maybeint ) ) ) {
        return 0;
    }
    return abs( intval( $maybeint ) );
}
&lt;/pre&gt;&lt;p&gt;
This seems like a perfect solution, which wouldn't run the is_numeric / trim unless told to do so by the usage of absint($value,true);
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:18/1301179673455135</guid>
      <description>&lt;p&gt;
Gotcha, I see what you mean here though I believe &lt;a class="ext-link" href="http://wordpress.org/news/?p=100and"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?p=100and&lt;/a&gt; itself is a bug and should be redirected to normalize 'p' in the query (and other places). absint hides issues like this, which is what I'm against.
&lt;/p&gt;
&lt;p&gt;
I'll let it go, will put my own solution together for usage in my work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:17/1301179451203738</guid>
      <description>&lt;p&gt;
That's the way I was leading when talking to him in IRC as well.  I think &lt;code&gt;absint()&lt;/code&gt; is just used in too many places to make a change like this.
&lt;/p&gt;
&lt;p&gt;
I'd instead recommend that if a site wants to handle things differently they grab p and filter it before it gets processed normally.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:16/1301178297098094</guid>
      <description>&lt;p&gt;
A change like this has huge potential cost, and offers no practical benefit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:15/1301178209105750</guid>
      <description>&lt;p&gt;
Strong +1 for the wontfix.
&lt;/p&gt;
&lt;p&gt;
Imagine a ?p= URL that was made clickable, but the trailing whitespace was lost. &lt;a class="ext-link" href="http://wordpress.org/news/?p=100and"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?p=100and&lt;/a&gt; would work. So would &lt;code&gt;http://wordpress.org/news/?p=100)&lt;/code&gt;, in systems where the ) becomes clickable.
&lt;/p&gt;
&lt;p&gt;
That's just one specific instance. I am also for wontfix on the theory basis. absint() doesn't perform validation, it performs sanitization. We're using core PHP functions here, so this is expected behavior. I see no reason to modify this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:14/1301178120056456</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16974#comment:13" title="Comment 13"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@westi - Why would you want ?p=100test to work?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because urls end up getting bunched up against other text by accident in comments, emails etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:13/1301177969326806</guid>
      <description>&lt;p&gt;
@westi - Why would you want ?p=100test to work? And what plugin / theme code would break from this? If anyone can give me an example, I'd love to see it because I just don't think there are any. Maybe that's me being naive, but I haven't heard anyone provide any use-cases for absint usage within core or plugins/themes which the result of absint should allow for non-numeric characters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:12/1301177758285347</guid>
      <description>wontfix: &lt;p&gt;
I don't see a valid reason for changing this.
&lt;/p&gt;
&lt;p&gt;
In fact I see more valid reasons for keeping what we have.
&lt;/p&gt;
&lt;p&gt;
I would much rather that: &lt;a class="ext-link" href="http://wordpress.org/news/?p=100test"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?p=100test&lt;/a&gt; still worked than didn't work and I don't want to possibly break a whole load of plugin / theme code just to chage this function to work how you think it should work rather than how it works.
&lt;/p&gt;
&lt;p&gt;
PHP is by design a loosely typed language and WP itself lives within this loosely typed world.
&lt;/p&gt;
&lt;p&gt;
The whole point of absint is to make sure that the thing you are treating as an integer really is treated as an integer not a string so that when you later use this value you get what you expect.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16923 ("Install from URL" for themes and plugins) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 21:52:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16923#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16923#comment:7/1301176346577626</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://api.wordpress.org/themes/malware-check/1.0/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://api.wordpress.org/themes/malware-check/1.0/&lt;/a&gt; now works.
&lt;/p&gt;
&lt;p&gt;
Accepts &lt;code&gt;$_GET['url']&lt;/code&gt;. Response codes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;-1 = it's a malformed URL. Ideally we should never send this to the API.
&lt;/li&gt;&lt;li&gt;0 = it's a blacklisted URL. This is currently populated with a few domains that offer spam/malware themes.
&lt;/li&gt;&lt;li&gt;1 = it passes the checks.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16974.3.patch attached to Ticket #16974</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 19:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16974/16974.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16974/16974.3.patch/1301167217791307</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 19:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:9/1301167193713401</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11049#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's not a glitch, it's a feature :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh, indeed. The patch itself has a glitch, in that it attempts to add post meta to the revision, but then pulls it from be post. Which works due to our API, but I'd think it'd be better to add it to the post directly, otherwise it masks what's going on.
&lt;/p&gt;
&lt;p&gt;
The lower level API will never change, so it's a convenient workaround.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 19:19:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:11/1301167140089288</guid>
      <description>&lt;p&gt;
Absolutely correct @duck_, My wife and I just had a baby a week ago and have suffered the resulting #fail on a simple piece of code :)
&lt;/p&gt;
&lt;p&gt;
Patching now..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Mar 2011 19:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:8/1301166668447099</guid>
      <description>&lt;p&gt;
That's not a glitch, it's a feature :)
&lt;/p&gt;
&lt;p&gt;
This came up shortly after we added revisions, in some circumstances post meta was attached to the revision and not the actual post, so the meta was more or less "lost".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11616 (Text copied form visual editor don't store font color) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11616#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11616#comment:9/1301165774365539</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11616#comment:8" title="Comment 8"&gt;solarissmoke&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...so I'm not sure it's a good idea.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree. Don't think it's a good idea to allow pasting of arbitrary HTML in the Visual editor. Apart from the security concerns, it can conflict with the current theme (CSS) and break the front end.
&lt;/p&gt;
&lt;p&gt;
Also it is very easy to add for people that really need that. All settings are available &lt;a class="ext-link" href="http://tinymce.moxiecode.com/wiki.php/Plugin:paste"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;here&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:10/1301165452679365</guid>
      <description>&lt;p&gt;
The logic of your if statement appears to be the wrong way around, &lt;code&gt;! is_numeric&lt;/code&gt; surely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16054 (Back to Authors and Users should say Back to Users) updated</title>
      
        <dc:creator>PeteMall</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16054#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16054#comment:2/1301165287694724</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:44:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:9/1301165075796423</guid>
      <description>&lt;p&gt;
Yeah, there's no built-in function for strict casting. Might have to resort to a simple regex, since most cases where absint() is used is for validating a database ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:21/1301164719171707</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for unit testing,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very simple to do. Filter the ::test() methods to select which transport you wish to test, test, remove filters, rinse repeat.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you are writing your tests this way, then you are doing functional testing. If you aren't unit testing the individual transports as well, then you are doing it wrong.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My suggestion here is to push the changes needed through &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16870" title="#16870: enhancement: consider disabling HTTP transport after multiple failed requests (closed: maybelater)"&gt;#16870&lt;/a&gt;, specifically, when a transport fails, progressivly mark it as unusable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;br /&gt;
That might just work, however, it depends on what you mean by failure. If there is a network issue preventing any of the transports from working, then you'll blacklist all of the transports from being used. There would have to be a way to check by what errors are considered the Transport not working.
&lt;/p&gt;
&lt;p&gt;
Also, provided that the first transport should normally almost always work, you'd only ever be using the first transport. The failure might be network related and in which case the next transport might be unaffected by it. If you wish, you may fall back to two transports either fsockopen or streams with fsockopen as the preferred alternative if available.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The alternative is to adding an extra parameter similar to the block of code &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/8622/8622.4.diff"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;starting line 206 in this patch&lt;/a&gt;, which would be purely for a plugins usage.
&lt;/p&gt;
&lt;p&gt;
In core we're striving for a HTTP API which just works, plugin authors shouldn't have to do anything more than request it, and handle an error condition being returned, but at the same time, it shouldn't cause unnecessary slowdowns for the user, failing over to the next transport over and over on a plugin's request should not be possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Failing when the first transport fails and then conditionally preventing that transport from being used as opposed just dropping to the next available transport. I don't know, perhaps both might be better. I would say that if you are doing an HTTP request that is nonblocking, that performance and time doesn't really matter and what you want is the request to work regardless of how long it takes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:8/1301164589577810</guid>
      <description>&lt;p&gt;
Went the direction if is_numeric vs is_int so that it would avoid issues with strings not being handles as numbers (is_int requires an integer)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:32:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:7/1301164379894663</guid>
      <description>&lt;p&gt;
Yeah, it seems &lt;code&gt;intval()&lt;/code&gt; is equivalent to using &lt;code&gt;(int)&lt;/code&gt;, so nevermind.
&lt;/p&gt;
&lt;p&gt;
Note that &lt;a class="ext-link" href="http://www.php.net/manual/en/function.is-numeric.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;is_numeric()&lt;/a&gt; will also match floats and other representations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:6/1301163956650883</guid>
      <description>&lt;p&gt;
@scribu - It is, I just believe that if $maybeint contains non-numeric characters it should return zero to avoid canonical issues with the values it deals with. Otherwise, a significant number of absint usages in WP Core would need additional checks to prevent the usage of non-numeric characters in their values.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:5/1301163854792589</guid>
      <description>&lt;p&gt;
The original commit for absint() also mentioned casting: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6222" title="Introducing absint() for casting to an absolute integer. see #4762"&gt;[6222]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:18:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:9/1301163520474329</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13777#comment:8" title="Comment 8"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After reading your comment, The only other option I could understand is that you're suggesting moving all the processing to a separate class so that you can call WP_HTTP directly OR call a subclass directly?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. Right now, if you want to use a Transport and want to send post data, something the WP_HTTP does automatically to set the headers and format the post data, if array; you'd have to duplicate that code before you use the Transport. Goes for other features of WP_HTTP::request() handling as well. Since the WP_HTTP::request() received / receives the majority of support and feature additions, it is better to consolidate all of the code to a single place (a later patch that I never uploaded used a function instead) and call it for each of the transports.
&lt;/p&gt;
&lt;p&gt;
In this way, the WP_HTTP::request() only handles calling the transports and passing the processed information. It would shorten the WP_HTTP::request() to a single action (there is a term used for OOP that I can't remember at the moment, meaning limiting a method and, or class to a single task or service). Right now the WP_HTTP::request() is doing two things, processing the args and running through the working transports.
&lt;/p&gt;
&lt;p&gt;
This ticket is to move the processing of the args out of WP_HTTP::request() to allow for the Transports to use the same code without duplication.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:16:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:4/1301163414190413</guid>
      <description>&lt;p&gt;
I always assumed that the definition for absint was &lt;code&gt;return abs( (int) $maybeint ) );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Apparently not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:3/1301162359896345</guid>
      <description>&lt;p&gt;
We talked a little on IRC.  What he's trying to fix is that &lt;code&gt;absint( '123abc' )&lt;/code&gt; returns 123 but &lt;code&gt;absint( 'abc123' )&lt;/code&gt; returns 0.
&lt;/p&gt;
&lt;p&gt;
His original issue came from the fact that &lt;a class="ext-link" href="http://wordpress.org/news/?p=100"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?p=100&lt;/a&gt; is the same as &lt;a class="ext-link" href="http://wordpress.org/news/?p=100test"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?p=100test&lt;/a&gt; but not the same as &lt;a class="ext-link" href="http://wordpress.org/news/?p=test100"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/news/?p=test100&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16974.2.patch attached to Ticket #16974</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16974/16974.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16974/16974.2.patch/1301162278169679</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:2/1301162005961109</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:50:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:1/1301161855028827</guid>
      <description>&lt;p&gt;
Oops, sorry for the tab difference, my editor is set to use spaces vs tabs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16974.patch attached to Ticket #16974</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16974/16974.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16974/16974.patch/1301161812769988</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) created</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974/1301161795458425</guid>
      <description>&lt;p&gt;
Currently, if you put in a string into absint which contains non-numeric characters after numeric characters it will return the number before the non-numeric characters as the number, which I believe isn't the valid return for absint($maybeint)
&lt;/p&gt;
&lt;p&gt;
The solution I am proposing is to check if $maybeint isn't numeric, and if not then return 0;
&lt;/p&gt;
&lt;p&gt;
See the attached patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16972 (Input type radio losts its checked focus when metabox is dragged) updated</title>
      
        <dc:creator>ldebrouwer</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:35:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16972#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16972#comment:3/1301160948673076</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a bug/feature in the jQuery UI sortable library ( has been since 1.5.x ). The sortable plugin clones the node being moved which resets the radio buttons.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16973.3.diff attached to Ticket #16973</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:22:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16973/16973.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16973/16973.3.diff/1301160133544291</guid>
      <description>&lt;p&gt;
more cleanup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16973 (Introduce get_multipage_link()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:18:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16973#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16973#comment:2/1301159898389874</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16973/16973.3.diff" title="Attachment '16973.3.diff' in Ticket #16973"&gt;16973.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16973/16973.3.diff" title="Download"&gt;â€‹&lt;/a&gt; does some cleanup in wp_link_pages() and also removes the &lt;code&gt;@private&lt;/code&gt; comment, since it's clearly used in the wild.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16973.2.diff attached to Ticket #16973</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:09:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16973/16973.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16973/16973.2.diff/1301159381029877</guid>
      <description>&lt;p&gt;
clearer logic
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16973 (Introduce get_multipage_link()) updated</title>
      
        <dc:creator>ldebrouwer</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:01:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16973#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16973#comment:1/1301158865110308</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It might be better to put $output on one line instead of concatenating another line to it on three occasions. Maybe even sprintf'ing it would be an even more elegant solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 16:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:7/1301156570368114</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
OP said he could reproduce this on the 3.0 branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16973.diff attached to Ticket #16973</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 16:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16973/16973.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16973/16973.diff/1301155924179338</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16973 (Introduce get_multipage_link()) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 16:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16973/1301155903025815</guid>
      <description>&lt;p&gt;
There currently is no function for retrieving the URL to a multipage part (a page with &lt;code&gt;&amp;lt;!--nextpage--&amp;gt;&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
The code is burried in a private helper function.
&lt;/p&gt;
&lt;p&gt;
Let's bring it to light.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 15:39:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:20/1301153977733661</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16643#comment:16" title="Comment 16"&gt;solarissmoke&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right, I've narrowed it further. The issue is with jQuery-ui-sortable (which operates on the parent page div - see &lt;code&gt;postbox.dev.js&lt;/code&gt;). For some reason it is really, really slow and it causes IE7/8 to fall over. There is a bug report over on &lt;a class="ext-link" href="http://bugs.jqueryui.com/ticket/5681"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;jQuery-ui trac&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As for how to mitigate - only option seems to be to disable ui-sortable on that particular div for IE7/8. I'm working on a patch now to see whether it will work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
might be fixed with and related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16656" title="#16656: enhancement: jQuery UI 1.8.12 (closed: fixed)"&gt;#16656&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16920 (PHP5-Port: Take out unnecessary compat functions from diverse files) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16920#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16920#comment:6/1301151277524081</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16970" title="#16970: defect (bug): Remove PHP4 functionality from timezone selector code (closed: fixed)"&gt;#16970&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:52:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:9/1301151176918443</guid>
      <description>&lt;p&gt;
Patch: Deprecate, kill the filter, return true, kill all code that handles when wp_timezone_supported() is false and replace wp_timezone_supported() with TRUE, remove dead code then.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16920" title="#16920: defect (bug): PHP5-Port: Take out unnecessary compat functions from diverse files (closed: fixed)"&gt;#16920&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16972 (Input type radio losts its checked focus when metabox is dragged) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:52:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16972#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16972#comment:2/1301151160531899</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed. It happens in WP 3.0 too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16970.2.patch attached to Ticket #16970</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16970/16970.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16970/16970.2.patch/1301150989721035</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:6/1301150886941029</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16971#comment:4" title="Comment 4"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16971#comment:2" title="Comment 2"&gt;ramoonus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you say it also happens in other versions than 3.0.5
does that include 3.1?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I said: "other versions seem affected as well".
&lt;/p&gt;
&lt;p&gt;
I'm sure that &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/branches/3.1/wp-admin/includes/misc.php#L53"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.1&lt;/a&gt; is affected as well as the code looks the same.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16971.2.patch attached to Ticket #16971</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16971/16971.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16971/16971.2.patch/1301150412763831</guid>
      <description>&lt;p&gt;
Example only
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16972 (Input type radio losts its checked focus when metabox is dragged) updated</title>
      
        <dc:creator>depi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16972#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16972#comment:1/1301149813812350</guid>
      <description>&lt;p&gt;
You can check this behavior for example on the Add Link page in WP-Admin where are some radio buttons.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16972 (Input type radio losts its checked focus when metabox is dragged) created</title>
      
        <dc:creator>depi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:16:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16972/1301148965082193</guid>
      <description>&lt;p&gt;
This happens when I use a radio button in a metabox. Once I try to drag it to different position or just drag and let it go the checked focus is lost. (in code it of course still remain checked, but visually not)
&lt;/p&gt;
&lt;p&gt;
Bug not happens with other fields I tested (checkboxes, inputs, textareas)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 13:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:5/1301147541851505</guid>
      <description>&lt;p&gt;
The flow in that function could be simplified to first check if a file exists or not and handle everything related to file creation upfront.
&lt;/p&gt;
&lt;p&gt;
See the example attached which demonstrates this next to the following:
&lt;/p&gt;
&lt;p&gt;
Then the replacement of the area(s) defined by $marker could be buffered and thanks to that simplified as well.
&lt;/p&gt;
&lt;p&gt;
The second benefit of a buffer is that it can be written buffered to disc reducing I/O.
&lt;/p&gt;
&lt;p&gt;
The function can benefit from defining the input variables, it's a bit unclear if $insertion must or can be an array. Not addressed in the example, just came to my mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:4/1301143338563971</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16971#comment:2" title="Comment 2"&gt;ramoonus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you say it also happens in other versions than 3.0.5
does that include 3.1?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I said: "other versions seem affected as well".
&lt;/p&gt;
&lt;p&gt;
I'm sure that &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/branches/3.1/wp-admin/includes/misc.php#L53"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.1&lt;/a&gt; is affected as well as the code looks the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:8/1301141771842190</guid>
      <description>&lt;p&gt;
+1 for what nacin said.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:13:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:3/1301141612849912</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:13:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:2/1301141597461482</guid>
      <description>&lt;p&gt;
you say it also happens in other versions than 3.0.5
does that include 3.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:19/1301141505402159</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16643#comment:14" title="Comment 14"&gt;solarissmoke&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Tracked this down - it is being caused by jQuery 1.4.4. Switching back to 1.4.2 removes the problem.
&lt;/p&gt;
&lt;p&gt;
PS jQuery 1.5.1 seems to have the same issue as 1.4.4.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and 1.5.2 (currently as RC)
but that won`t fix things until WP 3.2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16963 (wp_enqueue_script bug in ie8) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:10:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16963#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16963#comment:5/1301141423078851</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16963#comment:4" title="Comment 4"&gt;jkmassel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No, calling wp_enqueue_script('jquery') alone should always return the latest (1.4.4 in 3.1), correct? There are no plugins or methods to change the version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
incorrect
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:1/1301140835629275</guid>
      <description>&lt;p&gt;
Patch against trunk.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if FS_CHMOD_FILE is the correct value to refer to, for my case the 0644 (rw-r--r) would have done it which is the default for FS_CHMOD_FILE.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10170" title="#10170: defect (bug): File Permissions on Creation (Plugin but might be Theme as well) (closed: fixed)"&gt;#10170&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16971.patch attached to Ticket #16971</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:00:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16971/16971.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16971/16971.patch/1301140818899267</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 11:59:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971/1301140791377283</guid>
      <description>&lt;p&gt;
Turning on permalinks can render the whole blog into a 500 error situation under certain conditions.
&lt;/p&gt;
&lt;p&gt;
The issue has been experienced with a WP 3.0.5 setup, other versions seem affected as well.
&lt;/p&gt;
&lt;p&gt;
The creation of the .htaccess file does not reflect the systems umask setting which can result in creating a file that is not accessible by the server.
&lt;/p&gt;
&lt;p&gt;
That triggers the 500 then.
&lt;/p&gt;
&lt;p&gt;
Normally WP chmod's all files it creates. This is not done with the .htaccess file if it did not existed already.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16827 (Network Users alternate row highlighting does not work properly) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 10:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16827#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16827#comment:6/1301133623592093</guid>
      <description>&lt;p&gt;
Ok. It looks like the underlying bug that really needs fixing is this.
&lt;/p&gt;
&lt;p&gt;
The CSS files are output in different orders with SCRIPT_DEBUG enabled/disabled - which is why the CSS for this is being overridden by other CSS.
&lt;/p&gt;
&lt;p&gt;
That shouldn't happen because it makes testing of patches hard and gives different behvaiour between live/dev
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16827 (Network Users alternate row highlighting does not work properly) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 09:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16827#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16827#comment:5/1301131824350659</guid>
      <description>&lt;p&gt;
With SCRIPT_DEBUG enabled I don't see this issue.
&lt;/p&gt;
&lt;p&gt;
So I just think we may need to re-compress some CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12738 (Notice Helper) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 09:20:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12738#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12738#comment:5/1301131259472491</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7652 (Merge all atom parsers) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7652#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7652#comment:20/1301128906439740</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There is great work on this ticket but it is going to need a fair chunk of testing so I don't think we should try and merge it in the 3.2 cycle - if I get time I will look at merging the Blogger importer changes into the plugin though
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14305 (Display file for localized versions as Drop-in) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14305#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14305#comment:5/1301128662894141</guid>
      <description>&lt;p&gt;
When we commit this we should remove all the duplication of very similar code in &lt;code&gt;get_dropins&lt;/code&gt; and &lt;code&gt;get_mu_plugins&lt;/code&gt; etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:7/1301128341955325</guid>
      <description>&lt;p&gt;
Indeed. The patch works only due to a bit of a glitch -- update_post_meta() on a revision post ID ends up attaching the metadata to the post, not the revision. Calling update_metadata() on the revision ID itself is fine, we just have to then make sure we check the revision meta key using get_metadata().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15238 (XML-RPC class should have better documentation) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15238#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15238#comment:7/1301128300209929</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to 3.2 - documentation changes only
&lt;/p&gt;
&lt;p&gt;
Removing GCI as the task was never done for GCI
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:29:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:6/1301128197043106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would like to include this in 3.2
&lt;/p&gt;
&lt;p&gt;
Need to review if we need this much code or can just set the normal post_meta key on the revision that is going to be previewed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15448 (wp_mail() sets Content-Type header twice for multipart emails) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15448#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15448#comment:13/1301127976098080</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would like to roll this small enhancement from GCI into 3.2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 07:32:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:7/1301124722585915</guid>
      <description>&lt;p&gt;
My opinion: Deprecate, kill the filter, return true, and kill all code that handles when wp_timezone_supported() is false.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11616 (Text copied form visual editor don't store font color) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 07:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11616#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11616#comment:8/1301123504238081</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You have to set the option &lt;code&gt;paste_retain_style_properties&lt;/code&gt; for the TinyMCE paste plugin to retain styles copied from Word - which we currently don't (it seems like the plugin defaults must have changed at some point if it used to work before).
&lt;/p&gt;
&lt;p&gt;
I've added a patch that does this, however you have to disable two other options - &lt;code&gt;paste_remove_styles&lt;/code&gt; and &lt;code&gt;paste_remove_spans&lt;/code&gt; - for it to work. This could cause unintended side-effects, so I'm not sure it's a good idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Sat, 26 Mar 2011 07:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:21/1301123316041811</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11616.diff attached to Ticket #11616</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 07:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11616/11616.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11616/11616.diff/1301123308288975</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16777 (media_sideload_image() doesn't upload in past "/year/month/" folders) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 05:31:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16777#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16777#comment:1/1301117512615501</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch makes &lt;code&gt;wp_handle_sideload()&lt;/code&gt; consistent with &lt;code&gt;wp_handle_upload()&lt;/code&gt;, using &lt;code&gt;post_date&lt;/code&gt; to determine the upload folder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16777.diff attached to Ticket #16777</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 05:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16777/16777.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16777/16777.diff/1301117425899167</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>14908.diff attached to Ticket #14908</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 04:44:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14908/14908.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14908/14908.diff/1301114680001245</guid>
      <description>&lt;p&gt;
Updated patch - no need to pass by reference in PHP5
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10699 (Password Expose Bug in XML-RPC Debugging) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 04:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10699#comment:2/1301113851694596</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The XML-RPC logger currently logs raw incoming HTTP post data. In order to hide the password, you would need to parse the XML first to determine where it is before you could obfuscate it. This has the potential to obfuscate the wrong thing (especially if you're testing and your XML is not correct), in which case you would defeat the purpose of writing a debug log.
&lt;/p&gt;
&lt;p&gt;
Proposing wontfix. Maybe we could just add an extra warning in the inline docs: Don't use this in a production environment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 04:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:15/1301112855788111</guid>
      <description>&lt;p&gt;
I'm finding that both fsockopen and Streams ignore the timeouts, as well as curl in some cases
&lt;/p&gt;
&lt;p&gt;
fsockopen: By adding the usage of &lt;code&gt;stream_get_meta_data()&lt;/code&gt; I'm questioning it's compatibility, the Streams class should generally be used in preference to this to start wtih, so the compatibility I'm questioning is systems where Streams is not available and it ultimately falls back to FSockopen.
&lt;/p&gt;
&lt;p&gt;
streams: the /2 does indeed seem to work as advertised, passing 4 in causes it to timeout after ~8s, with /2 it times out ~4seconds in.
&lt;/p&gt;
&lt;p&gt;
curl: seems to have problems with file streaming and timeouts
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 03:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:38/1301110327726808</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17563" title="Correct logic for cURL Errors, add extra sanity protection in ..."&gt;[17563]&lt;/a&gt;) Correct logic for cURL Errors, add extra sanity protection in ::processHeaders to guard against null inputs. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17563]: Correct logic for cURL Errors, add extra sanity protection in ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 03:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17563</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17563/1301110325236925</guid>
      <description>&lt;p&gt;
Correct logic for cURL Errors, add extra sanity protection in ::processHeaders to guard against null inputs. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16855 (HTTP API No Follow Redirection) updated</title>
      
        <dc:creator>cogmios</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16855#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16855#comment:38/1301108108843758</guid>
      <description>&lt;p&gt;
Here is an update with a testset of 31.000 uri's I did on the same config as above:
&lt;/p&gt;
&lt;p&gt;
Error Messages or Blank:
&lt;/p&gt;
&lt;pre class="wiki"&gt;(empty)	873
Empty reply from server	18
&amp;lt;url&amp;gt; malformed	321 (probably my fault)
couldn't connect to host	153
Couldn't resolve host (... with name) : estimate: 25
&lt;/pre&gt;&lt;p&gt;
Error Codes:
&lt;/p&gt;
&lt;pre class="wiki"&gt;0	8 ()
200	18509 (OK)
300	2 (Multiple Choices)
301	5 (Moved Permanently)
304	2 (Not Modified) (huh?)
400	64 (Bad Request)
401	7 (Unauthorized)
403	166 (Forbidden)
404	2106 (Not Found) (various)
410	27 (Gone)
423	2  (Locked) (HUH?)
500	52 (Internal Server Error)
501	2  (Not Implemented)
502	11 (Bad Gateway)
503	8  (Service Unavailable)
504	2  (Gateway Timeout)
&lt;/pre&gt;&lt;p&gt;
So looks good. Have to check some of them for additional issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:29:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955#comment:7/1301106590266947</guid>
      <description>&lt;p&gt;
The dashboard modules don't seem to be affected either.
&lt;/p&gt;
&lt;p&gt;
So, that leaves only the post editing screen and the menu editing one.
&lt;/p&gt;
&lt;p&gt;
I'm guessing it's a CSS issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:6/1301106379412129</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16970#comment:5" title="Comment 5"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What legitimate use-case would there be for adding a filter that returns false, in a PHP 5.2 context?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No idea, I only hear "Backwards Compatibility". But don't ask me because I'm for removing this function entirely personally and so I can not see a reason at all.
&lt;/p&gt;
&lt;p&gt;
@kawauso - functions could be disabled per ini (no idea which we need to check actually, in HTTP we check fopen but that's I/O related, so more or less informative)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16199 (plugin_dir_url - wrong directory for symlinks) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:19:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16199#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16199#comment:3/1301105999807008</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16953" title="#16953: enhancement: Allow symlinked plugins (closed: fixed)"&gt;#16953&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13841.patch attached to Ticket #13841</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13841/13841.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13841/13841.patch/1301105881705739</guid>
      <description>&lt;p&gt;
Refreshed against trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:14/1301105860487784</guid>
      <description>&lt;p&gt;
See &lt;a class="ext-link" href="http://php.net/manual/en/function.fclose.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;fclose()&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="http://www.php.net/manual/en/function.stream-get-meta-data.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;stream_get_meta_data()&lt;/a&gt; as well as &lt;a class="ext-link" href="http://php.net/manual/en/function.stream-set-timeout.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;stream_set_timeout()&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When the stream times out, the 'timed_out' key of the array returned by stream_get_meta_data() is set to TRUE, although no error/warning is generated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="http://www.php.net/manual/en/context.http.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;HTTP context options&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
timeout float
&lt;/p&gt;
&lt;p&gt;
Read timeout in seconds, specified by a float (e.g. 10.5).
By default the default_socket_timeout php.ini setting is used.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Dividing by 2 makes not much sense to me, maybe sivel can say more. I've kept that in the refreshed patch.
&lt;/p&gt;
&lt;p&gt;
Next to all this, not much left in patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16885 (Warning emited in Header parsing when server does not specify a ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16885#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16885#comment:14/1301104307175366</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16885#comment:13" title="Comment 13"&gt;azizur&lt;/a&gt;:
Which transport is that? I get RSS Error: WP HTTP Error: Could not open handle for fopen() to &lt;a class="ext-link" href="http://my-disfunctional-url.org/news/feed/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://my-disfunctional-url.org/news/feed/&lt;/a&gt; on current trunk. Probably because of the transport or the recent changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:49:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:5/1301104180734773</guid>
      <description>&lt;p&gt;
What legitimate use-case would there be for adding a filter that returns false, in a PHP 5.2 context?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16970.diff attached to Ticket #16970</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:49:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16970/16970.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16970/16970.diff/1301104153750924</guid>
      <description>&lt;p&gt;
No need for function_exists checks anymore
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16909 (some Location headers are using relative url's (2)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16909#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16909#comment:8/1301104138765045</guid>
      <description>&lt;p&gt;
/wp-admin/includes/dashboard.php:127 creates a redirect w/o an absolute URI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:20/1301103786021328</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10690#comment:18" title="Comment 18"&gt;codestyling&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Can you specify &lt;code&gt;Ajax.Request&lt;/code&gt;? Is that of some javascript library?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:21:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:4/1301102507508882</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:3/1301102326896215</guid>
      <description>&lt;p&gt;
The function contains a filter, so core - even the function deprecates - can not assume that it always returns true.
&lt;/p&gt;
&lt;p&gt;
So the other code needs to stay in core. Until the function can be completely removed. (Which I suggest as the chance had been passed to deprecate this in 3.1 already in the know of the 3.2 php requirements commming.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16970.patch attached to Ticket #16970</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16970/16970.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16970/16970.patch/1301102199185754</guid>
      <description>&lt;p&gt;
Deprecate wp_timezone_supported()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:2/1301101336918669</guid>
      <description>&lt;p&gt;
We were talking about this on IRC, so I thought I'd throw in my two cents:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://us3.php.net/manual/en/datetime.installation.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;The manual&lt;/a&gt; says &lt;em&gt;There is no installation needed to use these functions; they are part of the PHP core.&lt;/em&gt; And the most recently added was in 5.2.0, so there's just no need for &lt;code&gt;wp_timezone_supported()&lt;/code&gt; anymore. I think it should just be deprecated and changed to return true (for plugins using it).  Obviously we should clean up core accordingly.
&lt;/p&gt;
&lt;p&gt;
For those that care, these are the functions that &lt;code&gt;wp_timezone_supported()&lt;/code&gt; checks for:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/date_create"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;date_create&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/date_default_timezone_set"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;date_default_timezone_set&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/timezone_identifiers_list"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;timezone_identifiers_list&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/timezone_open"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;timezone_open&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/timezone_offset_get"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;timezone_offset_get&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15377 (Allow screen_icon() to return not echo) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15377#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15377#comment:7/1301100827521913</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:53:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:1/1301100797109670</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's been a while since I contributed anything to core. I might as well take this on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970/1301100745806959</guid>
      <description>&lt;p&gt;
All of the functions needed for the fancy timezone selector code are bundled with all versions of PHP since 5.2.0. This means we can deprecate &lt;code&gt;wp_timezone_supported()&lt;/code&gt; and remove all references to it in core as well as strip all of the PHP4 fallback code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:40:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:4/1301100019959744</guid>
      <description>&lt;p&gt;
Couldn't reproduce when I tested earlier. On IRC the OP said no plugins enabled whilst he was testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:5/1301099829057302</guid>
      <description>&lt;p&gt;
To expound on what Nacin said about the wp.com argument, I think it's a valid argument because wp.com is a massive testing ground with tons of users.  I'm not saying it's not possible to do something BETTER than wp.com, but I think that ignoring what's working well on wp.com would be a big mistake.
&lt;/p&gt;
&lt;p&gt;
Having said that, I'm also against moving the bar to the top of the page.  The point of the bar is to have tools instantly available to you, not "nearby but out of sight".  I just think it would lose some effectiveness.
&lt;/p&gt;
&lt;p&gt;
I also wonder how many sites use a lot of url hashes, have users logged in often, AND want to keep the admin bar around for those users.  The admin bar seems like it's most useful for those that are working on the site.  If a site has a lot of logged in users that don't work on the site, and the admin bar is causing problems (like messing up url hash links), they could just hide the admin bar for all or at least most users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:35:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:20/1301099718131884</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for unit testing,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very simple to do. Filter the ::test() methods to select which transport you wish to test, test, remove filters, rinse repeat. [...]
&lt;/p&gt;
&lt;p&gt;
In core we're striving for a HTTP API which just works, plugin authors shouldn't have to do anything more than request it, and handle an error condition being returned, but at the same time, it shouldn't cause unnecessary slowdowns for the user, failing over to the next transport over and over on a plugin's request should not be possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That you've got a design problem doesn't come to your mind while your making that many words, right? (Not meant to sound rude, it's an actual question, not an attack, we need to deal with what we have so far)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:3/1301099091301898</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I also can't reproduce.  Here's some test code I used:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$my_query = new WP_Query('posts_per_page=10&amp;amp;orderby=date&amp;amp;order=DESC');
if ( $my_query-&amp;gt;have_posts() ) {
	echo "&amp;lt;h2&amp;gt;Without Cat=-###&amp;lt;/h2&amp;gt;";
	while ( $my_query-&amp;gt;have_posts() ) {
		$p = $my_query-&amp;gt;next_post();
		echo $p-&amp;gt;post_date . " : " . $p-&amp;gt;post_title . "&amp;lt;br /&amp;gt;\r\n";
	}
}
$my_query = new WP_Query('cat=-679&amp;amp;posts_per_page=10&amp;amp;orderby=date&amp;amp;order=DESC');
if ( $my_query-&amp;gt;have_posts() ) {
	echo "&amp;lt;h2&amp;gt;With Cat=-### DESC&amp;lt;/h2&amp;gt;";
	while ( $my_query-&amp;gt;have_posts() ) {
		$p = $my_query-&amp;gt;next_post();
		echo $p-&amp;gt;post_date . " : " . $p-&amp;gt;post_title . "&amp;lt;br /&amp;gt;\r\n";
	}
}
$my_query = new WP_Query('cat=-679&amp;amp;posts_per_page=10&amp;amp;orderby=date&amp;amp;order=ASC');
if ( $my_query-&amp;gt;have_posts() ) {
	echo "&amp;lt;h2&amp;gt;With Cat=-### ASC&amp;lt;/h2&amp;gt;";
	while ( $my_query-&amp;gt;have_posts() ) {
		$p = $my_query-&amp;gt;next_post();
		echo $p-&amp;gt;post_date . " : " . $p-&amp;gt;post_title . "&amp;lt;br /&amp;gt;\r\n";
	}
}
&lt;/pre&gt;&lt;p&gt;
And my output with some test data on a trunk site looked like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Without Cat=-###
2010-01-01 11:26:08 : Sample Post With Threaded Comments
2010-01-01 11:25:48 : Sample Post With Image Aligned Left
2010-01-01 11:25:27 : Sample Post With Image Aligned Right
2010-01-01 11:24:48 : Sample Post With Image Centered
2010-01-01 11:24:24 : Sample Post With an Unordered List
2010-01-01 11:24:00 : Sample Post With an Ordered List
2010-01-01 11:19:49 : Sample Post With a Blockquote
2010-01-01 01:19:42 : Sample Post With Headlines
2009-07-06 15:57:15 : Test Attachments
2009-06-22 13:12:29 : Caption issue
With Cat=-###
2009-07-06 15:57:15 : Test Attachments
2009-06-22 13:12:29 : Caption issue
2009-06-14 11:10:15 : Test Post 2
2009-06-14 11:09:52 : test post 1
2009-06-14 11:06:11 : Hello world!
2009-05-06 11:03:15 : Map Test
With Cat=-###
2009-05-06 11:03:15 : Map Test
2009-06-14 11:06:11 : Hello world!
2009-06-14 11:09:52 : test post 1
2009-06-14 11:10:15 : Test Post 2
2009-06-22 13:12:29 : Caption issue
2009-07-06 15:57:15 : Test Attachments
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>