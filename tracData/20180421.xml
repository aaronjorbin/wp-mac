<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43827 (rename wp-config-sample.php to wp-config-example.php) created</title>
      
        <dc:creator>littlebizzy</dc:creator>

      <pubDate>Sat, 21 Apr 2018 23:56:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43827</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43827/1524354979883969</guid>
      <description>&lt;p&gt;
As per commonly understood English language definitions and French/English etymology:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.merriam-webster.com/dictionary/example"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.merriam-webster.com/dictionary/example&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;one that serves as a pattern to be imitated or not to be imitated
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://www.merriam-webster.com/dictionary/sample"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.merriam-webster.com/dictionary/sample&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;a representative part or a single item from a larger whole or group especially when presented for inspection or shown as evidence of quality
&lt;/pre&gt;&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://www.differencebetween.net/language/words-language/difference-between-example-and-sample/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.differencebetween.net/language/words-language/difference-between-example-and-sample/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43602.retention.count.bug.diff attached to Ticket #43602</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Sat, 21 Apr 2018 21:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43602/43602.retention.count.bug.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43602/43602.retention.count.bug.diff/1524345099508500</guid>
      <description>&lt;p&gt;
Fix retention count bug that could cause the UX to say no personal data was found when in fact data was retained
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Sat, 21 Apr 2018 21:03:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:34/1524344613982861</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43602#comment:29" title="Comment 29"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@allendav
&lt;/p&gt;
&lt;p&gt;
I'm not sure if this is working or if it's my code.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No personal data was found for this user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the message I'm seeing in admin, but I can see my erasure code is returning results:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@mikejolley - sorry about that - i've tracked it down to xfn.js:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;retainedCount += responseData.num_items_removed;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
should be
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;retainedCount += responseData.num_items_retained;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I also need to update the patch to actually add any messages returned to the DOM
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ERASURE.md attached to Ticket #43602</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Sat, 21 Apr 2018 20:58:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43602/ERASURE.md</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43602/ERASURE.md/1524344283368542</guid>
      <description>&lt;p&gt;
Doc for how plugins can hook into the personal data eraser
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>EXPORT.3.md attached to Ticket #43546</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Sat, 21 Apr 2018 20:55:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/EXPORT.3.md</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/EXPORT.3.md/1524344139047591</guid>
      <description>&lt;p&gt;
Fixed a few typos in EXPORT.md
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43546.5.diff attached to Ticket #43546</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Sat, 21 Apr 2018 20:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/43546.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/43546.5.diff/1524342613118641</guid>
      <description>&lt;p&gt;
Updated to accomodate latest working copy revisions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43656 (Media attachment filter does not work after switching list mode to ...) updated</title>
      
        <dc:creator>netsurfer2705</dc:creator>

      <pubDate>Sat, 21 Apr 2018 18:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43656#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43656#comment:2/1524333972669411</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can confirm this bug!
It is caused by the presence of the "attachment-filter" in the URL, if it has any value other than empty.
&lt;/p&gt;
&lt;p&gt;
The href attribute of the "view-switch" icon (id:'view-switch-grid') holds all the query parameters, which are then (falsely) used for the ajax query.
And if the first query for grid view does have a value for "attachment-filter", then you'll never be able to see "all" media!
&lt;/p&gt;
&lt;p&gt;
BTW: The ajax query is also totally "buggy". Normally one should be able to change the $query parameter byy using the 'ajax_query_attachments_args' filter. But this will have no effect for most of the query parameters, because some of them are hardcoded elsewhere in core!!!
&lt;/p&gt;
&lt;p&gt;
So there is no easy fix for this. Because to get it right, I would also expect the mime-type selection drop-down to be set to choosen value from the list view (and of course to work for "all").
&lt;/p&gt;
&lt;p&gt;
Also one should think about the trash option (if enabled), where all other filters should be ignored.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34290 (Not possible to have a percent symbol contained in the default value ...) updated</title>
      
        <dc:creator>daviedR</dc:creator>

      <pubDate>Sat, 21 Apr 2018 16:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34290#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34290#comment:14/1524326879499979</guid>
      <description>&lt;p&gt;
Facing the same issue here, my case is:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_theme_mod( 'mykey', '100%' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
when &lt;code&gt;mykey&lt;/code&gt; has no value, the function would return &lt;code&gt;'100'&lt;/code&gt; instead of &lt;code&gt;'100%'&lt;/code&gt;. The &lt;code&gt;'%'&lt;/code&gt; character is stripped out because of the &lt;code&gt;sprintf&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
In the function description:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If the modification name does not exist, then the $default will be passed through sprintf() PHP function with the first string the template directory URI and the second string the stylesheet directory URI.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is there any reason why WordPress use sprintf to convert first and second &lt;code&gt;%s&lt;/code&gt; into template and stylesheet directory URI?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43826 (get_post_galleries() should return gallery blocks) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:50:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43826</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43826/1524311457446451</guid>
      <description>&lt;p&gt;
Originally reported here: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/5797"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/5797&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Galleries in Gutenberg don't use the &lt;code&gt;[gallery]&lt;/code&gt; shortcode, so aren't returned by &lt;code&gt;get_post_galleries()&lt;/code&gt;. This function should check for gallery blocks, too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34290 (Not possible to have a percent symbol contained in the default value ...) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34290#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34290#comment:13/1524309943177597</guid>
      <description>&lt;p&gt;
Apparently still an issue, per &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43824" title="#43824: defect (bug): get_theme_mod: sprintf on $default parameter would (wrongly) strip any '%' (closed: duplicate)"&gt;#43824&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34290#comment:4" title="Comment 4"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only alternative I can think of is for the Customizer to explicitly &lt;code&gt;str_replace( '%', '%%', $setting-&amp;gt;default)&lt;/code&gt; when it is accessing a theme mod's default value, but that could have other unintended consequences.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/24630" title="When generating a background image thumbnail URL, escape percent signs ..."&gt;[24630]&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21241" title="#21241: defect (bug): Default value for background_image_thumb fails when background_image ... (closed: fixed)"&gt;#21241&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:34/1524309866097720</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43620#comment:33" title="Comment 33"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After going through all the themes in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43715" title="#43715: enhancement: Add Privacy Policy link to bundled theme footers (closed: fixed)"&gt;#43715&lt;/a&gt; and re-checking the comments here ( was kinda late! ) I thought of taking a shot at what @azaozz proposed so, made &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43620/43620.policy_url.policy_link.diff" title="Attachment '43620.policy_url.policy_link.diff' in Ticket #43620"&gt;43620.policy_url.policy_link.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43620/43620.policy_url.policy_link.diff" title="Download"&gt;​&lt;/a&gt; that extends on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43620/43620-url-filter.diff" title="Attachment '43620-url-filter.diff' in Ticket #43620"&gt;43620-url-filter.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43620/43620-url-filter.diff" title="Download"&gt;​&lt;/a&gt; just in case I have it right.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That looks good, I would though not name the function with &lt;code&gt;get_*()&lt;/code&gt; if it will echo the output and not return it.
&lt;/p&gt;
&lt;p&gt;
Sometimes there's &lt;code&gt;$echo = true&lt;/code&gt; input argument, like we see in &lt;code&gt;edit_term_link()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34290,​43824 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:22:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34290%2C43824</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34290%2C43824/1524309739077496</guid>
      <description>duplicate: &lt;p&gt;
Hi @daviedR, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/34290" title="#34290: defect (bug): Not possible to have a percent symbol contained in the default value ... (reopened)"&gt;#34290&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:16:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:33/1524309385204269</guid>
      <description>&lt;p&gt;
I don't think there's a point of having a new page just for a single &lt;code&gt;input&lt;/code&gt; really, we could just toggle() a div containing the Request form imho but that's for @melchoyce better.
&lt;/p&gt;
&lt;p&gt;
Still the button feels like home there even if you don't get redirected as normally :) which is really nice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:32/1524309199660717</guid>
      <description>&lt;p&gt;
@xkon Thanks, this kind of "Add New" button usually takes us to a new page, like we see on the plugin/theme/post screens. Would that be an option here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:12:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:33/1524309176740635</guid>
      <description>&lt;p&gt;
After going through all the themes in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43715" title="#43715: enhancement: Add Privacy Policy link to bundled theme footers (closed: fixed)"&gt;#43715&lt;/a&gt; and re-checking the comments here ( was kinda late! ) I thought of taking a shot at what @azaozz proposed so, made &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43620/43620.policy_url.policy_link.diff" title="Attachment '43620.policy_url.policy_link.diff' in Ticket #43620"&gt;43620.policy_url.policy_link.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43620/43620.policy_url.policy_link.diff" title="Download"&gt;​&lt;/a&gt; that extends on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43620/43620-url-filter.diff" title="Attachment '43620-url-filter.diff' in Ticket #43620"&gt;43620-url-filter.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43620/43620-url-filter.diff" title="Download"&gt;​&lt;/a&gt; just in case I have it right.
&lt;/p&gt;
&lt;p&gt;
This way I could go back into the themes and change everything basically to &lt;code&gt;get_privacy_policy_link( '&amp;lt;span class="privacy-link-wrapper"&amp;gt;', '&amp;lt;/span&amp;gt;' );&lt;/code&gt; if I'm correct :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43817 (REST API: Include 'formats' attribute on Post Type resource) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:11:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43817#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43817#comment:3/1524309089651265</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43817/43817.diff" title="Attachment '43817.diff' in Ticket #43817"&gt;43817.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43817/43817.diff" title="Download"&gt;​&lt;/a&gt; adds a &lt;code&gt;formats&lt;/code&gt; field to post type objects.
&lt;/p&gt;
&lt;p&gt;
@pento I mostly followed your approach from the GitHub PR, with a few adjustments:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When fetching the post formats, I added support for the case where someone does &lt;code&gt;add_theme_support( 'post-formats )&lt;/code&gt;. In that case, all post formats are supported.
&lt;/li&gt;&lt;li&gt;When fetching all post formats, I added a whitelist check against the available post formats, so that random strings defined as post formats are stripped from the list.
&lt;/li&gt;&lt;li&gt;In the schema description, I added a note that these post formats depend on the post type &lt;em&gt;and&lt;/em&gt; the current theme.
&lt;/li&gt;&lt;li&gt;In the schema, I added definition for the items in the post formats array.
&lt;/li&gt;&lt;li&gt;I added three tests: One for &lt;code&gt;add_theme_support()&lt;/code&gt; being called without extra parameters, one for &lt;code&gt;add_theme_support()&lt;/code&gt; being called with a subset of post formats, and one for a post type that doesn't support post formats.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A few additional thoughts from my end:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I don't really like that we put theme-specific data into a post type controller, but we don't have a themes controller, and even if we did, it would be inconvenient to make two database requests for this matter. Since one can still check for &lt;em&gt;only&lt;/em&gt; the post type support for post formats as necessary (via the &lt;code&gt;supports&lt;/code&gt; field), I can accept this as a necessary evil. :)
&lt;/li&gt;&lt;li&gt;I'm not sure about how the &lt;code&gt;standard&lt;/code&gt; post format. I went with the same approach like your PR for now, but I'd prefer if we never included it in that list or alternatively also include this when the post type doesn't support formats (as sole value in the array). Because that format is always supported. The UI could still make a check like "only show post formats UI component if more than 1 format are supported), so it would still be feasible from a usage standpoint, but more logical from a data standpoint.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43620.policy_url.policy_link.diff attached to Ticket #43620</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 21 Apr 2018 11:09:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/43620.policy_url.policy_link.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/43620.policy_url.policy_link.diff/1524308965947427</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43817.diff attached to Ticket #43817</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 21 Apr 2018 10:59:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43817/43817.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43817/43817.diff/1524308340288545</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 21 Apr 2018 10:44:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:32/1524307491186493</guid>
      <description>&lt;p&gt;
The &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; uses &lt;code&gt;get_permalink()&lt;/code&gt; that returns a string or &lt;code&gt;false&lt;/code&gt; on failure:
&lt;/p&gt;
&lt;pre class="wiki"&gt;* @return string|false The permalink URL or false if post does not exist.
&lt;/pre&gt;&lt;p&gt;
so that means &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; can return both empty string or false on failure. But that's currently not reflected in the doc block of &lt;code&gt;get_privacy_policy_url()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @return string The URL to the privacy policy page. Empty string if it doesn't exist.
&lt;/pre&gt;&lt;p&gt;
Examples:
&lt;/p&gt;
&lt;pre class="wiki"&gt;delete_option( 'wp_page_for_privacy_policy' );
var_dump( get_privacy_policy_url() );
string(0) ""
update_option( 'wp_page_for_privacy_policy', 0 );
var_dump( get_privacy_policy_url() );
string(0) ""
update_option( 'wp_page_for_privacy_policy', PHP_INT_MAX );
var_dump( get_privacy_policy_url() );
bool(false)
&lt;/pre&gt;&lt;p&gt;
In general there's inconsistency between core &lt;code&gt;get_*_url()&lt;/code&gt; functions, that they return either empty string or &lt;code&gt;false&lt;/code&gt; on failure.
&lt;/p&gt;
&lt;p&gt;
I think we should choose either &lt;code&gt;false&lt;/code&gt; or an empty string here.
&lt;/p&gt;
&lt;p&gt;
There exists a function since 4.7, with a familiar structure, that we could look into:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Retrieve header video URL for custom header.
 *
 * Uses a local video if present, or falls back to an external video.
 *
 * @since 4.7.0
 *
 * @return string|false Header video URL or false if there is no video.
 */
function get_header_video_url() {
	$id  = absint( get_theme_mod( 'header_video' ) );
	$url = esc_url( get_theme_mod( 'external_header_video' ) );
	if ( $id ) {
		// Get the file URL from the attachment ID.
		$url = wp_get_attachment_url( $id );
	}
	/**
	 * Filters the header video URL.
	 *
	 * @since 4.7.3
	 *
	 * @param string $url Header video URL, if available.
	 */
	$url = apply_filters( 'get_header_video_url', $url );
	if ( ! $id &amp;amp;&amp;amp; ! $url ) {
		return false;
	}
	return esc_url_raw( set_url_scheme( $url ) );
}
&lt;/pre&gt;&lt;p&gt;
and template tags to use in themes:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Display header video URL.
 *
 * @since 4.7.0
 */
function the_header_video_url() {
	$video = get_header_video_url();
	if ( $video ) {
		echo esc_url( $video );
	}
}
/**
 * Check whether a header video is set or not.
 *
 * @since 4.7.0
 *
 * @see get_header_video_url()
 *
 * @return bool Whether a header video is set or not.
 */
function has_header_video() {
	return (bool) get_header_video_url();
}
&lt;/pre&gt;&lt;p&gt;
We could also consider:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function the_privacy_policy_url() {
	$privacty_policy_url = get_privacy_policy_url();
	if ( $privacty_policy_url ) {
		echo esc_url( $privacty_policy_url );
	}
}
function has_privacy_policy() {
	return (bool) get_privacy_policy_url();
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43817 (REST API: Include 'formats' attribute on Post Type resource) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 21 Apr 2018 09:41:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43817#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43817#comment:2/1524303678078977</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I‘ll tackle this today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43825 (Style/script loading infrastructure: Etag header as a hash of ...) created</title>
      
        <dc:creator>kanishk.dudeja</dc:creator>

      <pubDate>Sat, 21 Apr 2018 08:27:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43825</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43825/1524299275145957</guid>
      <description>&lt;p&gt;
We've been exploring on how to bundle styles and scripts together for different block types in Gutenberg (&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/6087#issuecomment-382888928"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/6087#issuecomment-382888928&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
It looks like the inbuilt infrastructure for concatenating and bundling assets (load-styles.php and load-scripts.php) might be a good fit for bundling assets in Gutenberg.
&lt;/p&gt;
&lt;p&gt;
However, it looks like we will run into an issue with this approach. load-styles.php and load-scripts.php use the current WordPress version as the value of the Etag header. So if a plugin/theme developer modifies some CSS / JS for their block type, the browser will not attempt to fetch the latest content since the value of the Etag header will remain the same (since the WordPress version will remain the same).
&lt;/p&gt;
&lt;p&gt;
We can add some functionality in load-styles.php and load-scripts.php to support this:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Specify the value of the Etag header as a hash of the script/style handles and their corresponding versions.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
So, if we get a request to load styles for paragraph and image block like this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
/load-styles.php?load=core-paragraph-block,core-image-block
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can generate the Etag like this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
etag = hash_function( 'core-paragraph-block-v1.1-core-image-block-v8.3')
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and supply this value in the Etag header in the response to the browser.
&lt;/p&gt;
&lt;p&gt;
This will make sure that the next time the plugin/theme developer changes the CSS / JS for a block type (meaning changes the version of the script/style handle), the hash function will automatically generate a new value for the Etag header and the browser will therefore fetch the latest style / script bundle.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;We can add this functionality in load-styles.php and load-scripts.php as an add-on to the current functionality (to preserve backward compatibility).&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe, this new functionality can be triggered if a specific URL parameter is included in the request to load-styles.php / load-scripts.php. Maybe, something like: /load-styles.php?etag=content_hash.
&lt;/p&gt;
&lt;p&gt;
Do you think we can go ahead with this approach? If yes, I can propose a patch for adding this functionality.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 21 Apr 2018 07:55:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:31/1524297323538381</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43620#comment:30" title="Comment 30"&gt;iandunn&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it'd be helpful to have a filter in &lt;code&gt;get_privacy_policy_url()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, the patch looks good :)
&lt;/p&gt;
&lt;p&gt;
Was also thinking we may want to continue the trend of making two related template functions: one that returns the URL and another that echoes/outputs the link tag. That way we will be able to standardize the HTML, translate the link text in core, etc.
&lt;/p&gt;
&lt;p&gt;
Something similar to &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/link-template.php#L1388"&gt;get_edit_comment_link()&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/link-template.php#L1414"&gt;edit_comment_link()&lt;/a&gt;, &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/link-template.php#L2288"&gt;get_previous_posts_link()&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/link-template.php#L2317"&gt;previous_posts_link()&lt;/a&gt;, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 21 Apr 2018 06:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:10/1524293127417184</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.5.diff" title="Attachment '43721.5.diff' in Ticket #43721"&gt;43721.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.5.diff" title="Download"&gt;​&lt;/a&gt; updates the code to be more consistent as used in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43715" title="#43715: enhancement: Add Privacy Policy link to bundled theme footers (closed: fixed)"&gt;#43715&lt;/a&gt; as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43721.5.diff attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 21 Apr 2018 06:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.5.diff/1524293069504244</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 21 Apr 2018 06:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:28/1524292645837077</guid>
      <description>&lt;p&gt;
@iandunn / @birgire thank you both for the notices :)
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43715/43715.3.diff" title="Attachment '43715.3.diff' in Ticket #43715"&gt;43715.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43715/43715.3.diff" title="Download"&gt;​&lt;/a&gt; fixed the CS errors and added the appropriate CSS in all themes.
&lt;/p&gt;
&lt;p&gt;
@iandunn I'm using a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; as a wrapper for the link so I can place the dividers &lt;code&gt;/&lt;/code&gt; where necessary by doing &lt;code&gt;:after&lt;/code&gt; or &lt;code&gt;:before&lt;/code&gt; in css. This way users can easily change it to something else or hide it etc. Imho it's a bit more accessible this way just in case. It's the same principle as used in TwentySixteen by design.
&lt;/p&gt;
&lt;p&gt;
@birgire I replace the &lt;code&gt;title&lt;/code&gt; with &lt;code&gt;aria-label&lt;/code&gt; instead. I think we're ok with this correct? :)
&lt;/p&gt;
&lt;p&gt;
I'll be updating &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43721" title="#43721: enhancement: Adding links to imprint and privacy policy pages on WP login screens (closed: fixed)"&gt;#43721&lt;/a&gt; in the same way as here to be consistent with this new addition everywhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43715.3.diff attached to Ticket #43715</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 21 Apr 2018 06:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43715/43715.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43715/43715.3.diff/1524292266270528</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43715.3.jpg attached to Ticket #43715</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 21 Apr 2018 06:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43715/43715.3.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43715/43715.3.jpg/1524292261037883</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43824 (get_theme_mod: sprintf on $default parameter would (wrongly) strip any '%') created</title>
      
        <dc:creator>daviedR</dc:creator>

      <pubDate>Sat, 21 Apr 2018 06:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43824</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43824/1524290977758537</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I noticed that the &lt;code&gt;get_theme_mod&lt;/code&gt; function use sprintf on the &lt;code&gt;$default&lt;/code&gt; parameter, as seen on this line:
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/theme.php#L872"&gt;https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/theme.php#L872&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Any &lt;code&gt;%&lt;/code&gt; character in the &lt;code&gt;$default&lt;/code&gt; string would be stripped.
&lt;/p&gt;
&lt;p&gt;
For example:
&lt;code&gt;get_theme_mod( 'my_theme_mod_key', '100%' );&lt;/code&gt; would return &lt;code&gt;'100'&lt;/code&gt; as the default value, not &lt;code&gt;'100%'&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43821 (Add UX in the Network Admin for setting a network-wide privacy policy) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 21 Apr 2018 01:17:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43821#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43821#comment:1/1524273424402519</guid>
      <description>&lt;p&gt;
Related: &lt;code&gt;privacy_policy_url&lt;/code&gt; filter proposed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43620#comment:30" title="#43620: enhancement: Privacy Policy page design (closed: fixed)"&gt;ticket:43620#comment:30&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 21 Apr 2018 00:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:27/1524270935327352</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43715#comment:26" title="Comment 26"&gt;iandunn&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we do add that, I think it should use &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; rather than fetching the option directly. That would allow for filtering the URL, like in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43620#comment:30" title="#43620: enhancement: Privacy Policy page design (closed: fixed)"&gt;ticket:43620#comment:30&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
yes, I agree - one could e.g. return the non-empty check.
&lt;/p&gt;
&lt;p&gt;
I like that filter suggestion +1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 21 Apr 2018 00:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:26/1524269276312672</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43715#comment:23" title="Comment 23"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
do you think it would make sense here to have a function like [&lt;code&gt;has_privacy_policy()&lt;/code&gt;?]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If we do add that, I think it should use &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; rather than fetching the option directly. That would allow for filtering the URL, like in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43620#comment:30" title="#43620: enhancement: Privacy Policy page design (closed: fixed)"&gt;ticket:43620#comment:30&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
ps: the link title attributes are no longer recommended: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24766" title="#24766: defect (bug): Title attributes galore. They serve no useful purpose. (closed: fixed)"&gt;#24766&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:30/1524268673589229</guid>
      <description>&lt;p&gt;
I think it'd be helpful to have a filter in &lt;code&gt;get_privacy_policy_url()&lt;/code&gt;. My use case is that some Multisite networks would like to set a single policy for all sites, rather than having to manually create them per site or allowing individual site admins to modify it.
&lt;/p&gt;
&lt;p&gt;
On a Multisite network like WordCamp.org, that's much more practical than manually creating hundreds of pages, and it allows us to ensure that all sites in the network have a consistent and GDPR-compliant policy.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43620/43620-url-filter.diff" title="Attachment '43620-url-filter.diff' in Ticket #43620"&gt;43620-url-filter.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43620/43620-url-filter.diff" title="Download"&gt;​&lt;/a&gt; is a first pass at that. Does anyone have any feedback on it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:25/1524268612322617</guid>
      <description>&lt;p&gt;
ps: the link &lt;code&gt;title&lt;/code&gt; attributes are no longer recommended: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24766" title="#24766: defect (bug): Title attributes galore. They serve no useful purpose. (closed: fixed)"&gt;#24766&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43620-url-filter.diff attached to Ticket #43620</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/43620-url-filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/43620-url-filter.diff/1524268410337771</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;privacy_policy_url&lt;/code&gt; filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:24/1524267542351049</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43715#comment:22" title="Comment 22"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.diff" title="Attachment '43715.2.diff' in Ticket #43715"&gt;43715.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43715/43715.2.diff" title="Download"&gt;​&lt;/a&gt; makes a first pass in all bundled themes to add a footer link to Privacy Policy page
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That looks good to me at a quick glance. Here's a few suggestions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There's a coding standard guideline about not setting variables inside &lt;code&gt;if ( )&lt;/code&gt; blocks. It seems cleaner to set it at the top of the file:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;&amp;lt;?php
/**
 * The template for displaying the footer
 *
 * Contains the closing of the #content div and all content after.
 *
 * @link https://developer.wordpress.org/themes/basics/template-files/#template-partials
 *
 * @package WordPress
 * @subpackage Twenty_Seventeen
 * @since 1.0
 * @version 1.2
 */
$privacy_policy_url = get_privacy_policy_url();
?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I'm not sure if that's a common convention in Core, though, so maybe be more appropriate to define itjust above the &lt;code&gt;if ( )&lt;/code&gt; block.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rather than &lt;code&gt;echo&lt;/code&gt;ing HTML, it seems more readable to me to interpolate &lt;code&gt;&amp;lt;?php&lt;/code&gt; tags:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;&amp;lt;?php if ( $privacy_policy_url ) : ?&amp;gt;
	&amp;lt;a class="privacy-policy-page-link" href="&amp;lt;?php echo esc_url( $privacy_policy_url ); ?&amp;gt;" title="&amp;lt;?php echo esc_attr( 'Privacy Policy', 'twentyseventeen' ); ?&amp;gt;"&amp;gt;
		&amp;lt;?php _e( 'Privacy Policy', 'twentyseventeen' ); ?&amp;gt;
	&amp;lt;/a&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
That may also not fit with existing Core conventions, though.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I think &lt;code&gt;esc_url()&lt;/code&gt; is better for the URL than &lt;code&gt;esc_attr()&lt;/code&gt;, because it's a more targeted context.
&lt;/li&gt;&lt;li&gt;Similarly, I think &lt;code&gt;esc_attr()&lt;/code&gt; is better for the &lt;code&gt;title&lt;/code&gt; than &lt;code&gt;esc_html()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Is the &lt;code&gt;span&lt;/code&gt; necessary? I wonder if it'd be more semantic, and more consistent with the existing links in the footers, to just have an &lt;code&gt;a&lt;/code&gt; element with the class?
&lt;/li&gt;&lt;li&gt;Do we need the &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; for back-compat? If not, then it seems more semantic to use something like &lt;code&gt;.privacy-policy-page-link { display: block }&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;If we keep the &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; should we use &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; in some of the themes, depending on their &lt;code&gt;doctype&lt;/code&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:23/1524266652858697</guid>
      <description>&lt;p&gt;
@xkon these theme screenshots are very informative, thanks
&lt;/p&gt;
&lt;p&gt;
do you think it would make sense here to have a function like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Determines whether the privacy policy page is set.
 *
 * @since 4.9.6
 *
 * @return bool If the privacy policy page is set.
 */
function has_privacy_policy() {
	return (bool) get_option( 'wp_page_for_privacy_policy' );
}
&lt;/pre&gt;&lt;p&gt;
to simplify theme codes like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( has_privacy_policy() ) {
	printf(
		'&amp;lt;span class="privacy-policy-page-link"&amp;gt;&amp;lt;a href="%s"&amp;gt;%s&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;',
		esc_url( $url ),
		esc_html__( 'Privacy Policy', 'twentyten' ),
	);
}
&lt;/pre&gt;&lt;p&gt;
Not far away from existing functions like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;has_header_image()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_header_video()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_custom_header()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_site_icon()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_custom_logo()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_nav_menu()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:36/1524265689600074</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
that the Admins themselves will create any given Form on their website to take 'requests' from users that want anonymization/exports and then send the confirmation needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ya what you're saying makes sense on sites that have a form for anonymization/export where they explain the process. But these requests can also come over the phone, or a user could simply contact the admin via email. So I don't think users will have always seen any text explaining the process. So some users might not be previously aware of the process, so IMHO it's good to inform them.
&lt;/p&gt;
&lt;p&gt;
Also, I don't think a reminder about what will happen next is bad.
&lt;/p&gt;
&lt;p&gt;
What's more, even if the admin does create a contact form explaining the process for getting an export of personal data or how to delete data, this part of the process will always be the same (the user gets an email, clicks the link, then waits for the admin to fulfill their request), so why does every site admin need to create their own text explaining the process? That's a lot of duplication, no? (Granted admins are free to explain as much as they want on their contact form page; it's just non-essential.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 22:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:22/1524261608907885</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.diff" title="Attachment '43715.2.diff' in Ticket #43715"&gt;43715.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43715/43715.2.diff" title="Download"&gt;​&lt;/a&gt; makes a first pass in all bundled themes to add a footer link to Privacy Policy page by using the newly added &lt;code&gt;get_privacy_policy_url()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
All links are enclosed in a &lt;code&gt;&amp;lt;span class="privacy-policy-page-link"&amp;gt;&lt;/code&gt; for the purpose of easily hiding them with simple css if needed by the users/admins.
&lt;/p&gt;
&lt;p&gt;
I tried to match each themes ui feeling without it being intrusive &amp;amp; without it looking out of place.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.preview.jpg" title="Attachment '43715.2.preview.jpg' in Ticket #43715"&gt;43715.2.preview.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43715/43715.2.preview.jpg" title="Download"&gt;​&lt;/a&gt; shows in order from Twenty Ten to Twenty Seventeen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43823 (Posts can not be saved with /etc/ as part of the content) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43823#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43823#comment:1/1524261377825680</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @fgluck, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This sounds like a security rule set up by your hosting provider. There's no code in WordPress core that would prevent posts containing &lt;code&gt;/etc/&lt;/code&gt; from being saved.
&lt;/p&gt;
&lt;p&gt;
Please try the support forums for troubleshooting: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25564" title="#25564: defect (bug): Page/Post won't Publish/Update with the word 'exit' in the content editor (closed: worksforme)"&gt;#25564&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25736" title="#25736: defect (bug): Getting 403 error when using a certain sentence in a blog posting (closed: invalid)"&gt;#25736&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43715.2.preview.jpg attached to Ticket #43715</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.preview.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.preview.jpg/1524261294994551</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43715.2.diff attached to Ticket #43715</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.diff/1524261287615610</guid>
      <description>&lt;p&gt;
footer link on bundled themes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:21/1524258426012060</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:10/1524258354540490</guid>
      <description>&lt;p&gt;
There should probably be an equivalent UI in the Network Admin for enabling/disabling embeds across the entire network.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:35/1524258283965111</guid>
      <description>&lt;p&gt;
Even though I do understand the way you see it @mnelson4 , let's not forget that the Admins themselves will create any given Form on their website to take 'requests' from users that want anonymization/exports and then send the confirmation needed.
&lt;/p&gt;
&lt;p&gt;
So they will/should already communicate the process needed in their own way on that form probably as well. There's no need imho from a pre-made text like that even though it seems to server a purpose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43822 (Add UX in the Network Admin for exporting/anonymizing/deleting ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43822#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43822#comment:1/1524258066118302</guid>
      <description>&lt;p&gt;
I wonder if there are use cases where the network admin will want to delegate this to single site admins. For instance, an agency that has a multisite instance for all of their clients. The sites are completely unrelated to one another, and the individual site admins would be the most appropriate people to respond to SARs, rather than the network admin.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;wp_users&lt;/code&gt; table is shared, though, so that's a complication. Maybe v1 just has the network admin doing everything, and future iterations can consider adding granularity?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43823 (Posts can not be saved with /etc/ as part of the content) created</title>
      
        <dc:creator>fgluck</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43823</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43823/1524257920845766</guid>
      <description>&lt;p&gt;
I created a post using the latest version of WordPress with one line and the only content of the post.
&lt;/p&gt;
&lt;p&gt;
The line is:
&lt;/p&gt;
&lt;p&gt;
/etc/
&lt;/p&gt;
&lt;p&gt;
I can not save this post as a draft. When saving, I get a blank white screen.
This was tested using Theme TwentyFifteen updated to the latest version.
&lt;/p&gt;
&lt;p&gt;
I can save the post if there is a space between /etc and the last slash.
&lt;/p&gt;
&lt;p&gt;
This has been tested with all plugins disabled with the same results.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:31/1524257124992416</guid>
      <description>&lt;p&gt;
Oh nice thinking @birgire ! I really like how it goes along the lines of the already usual &lt;code&gt;Add New&lt;/code&gt; button we normally find there. Will there be a proposed patch as well to see how it looks like in action maybe :) ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:34/1524255976347154</guid>
      <description>&lt;p&gt;
I tested this out on trunk and it worked fine.
&lt;/p&gt;
&lt;p&gt;
Maybe the text shown to the user could give more direction about what to do &lt;strong&gt;after&lt;/strong&gt; they've clicked the link.
&lt;/p&gt;
&lt;p&gt;
Here's the content from an email that I generated on my test site:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Howdy,
A request has been made to perform the following action on your account:
Export Personal Data
To confirm this, please click on the following link: {link}
You can safely ignore and delete this email if you do not want to take this action.
This email has been sent to {email}.
Regards,
All at {sitename}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And then when the link is clicked, the user sees
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Action has been confirmed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we should add instructions on what the user should do next. Something like this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Action has been confirmed. The site administrator has been notified and will fulfill your request as soon as possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Or something like that. The key point being that it says they need to wait for the admin to do something now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:30/1524255502053848</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;Just an idea into the cosmos:&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
After working with the &lt;em&gt;Export Personal Data&lt;/em&gt; table for some time, I could feel the urge to have the "Add new request" form hidden from view, when working with the requests. So &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43602/export-personal-data-with-add-request-link.jpg" title="Attachment 'export-personal-data-with-add-request-link.jpg' in Ticket #43602"&gt;export-personal-data-with-add-request-link.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43602/export-personal-data-with-add-request-link.jpg" title="Download"&gt;​&lt;/a&gt; is what came first to mind, as it is very familiar layout for such a table ;-)
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
It's also interesting idea from @azaozz (don't remember the ticket) to consider storing some data in the post table fields. That might give better performance for very large tables, when sorting or searching, instead of meta queries. But maybe very large request tables will be an edge case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43822 (Add UX in the Network Admin for exporting/anonymizing/deleting ...) created</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43822</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43822/1524255138095369</guid>
      <description>&lt;p&gt;
It's not practical for a super admin to hunt down personal data by going to the Dashboard of each site in the network. There should be one centralized place in the Network Admin to receive and process SARs.
&lt;/p&gt;
&lt;p&gt;
This should look similar to the UX in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43602" title="#43602: enhancement: Add to the privacy tools UX a means to erase personal data by username ... (closed: fixed)"&gt;#43602&lt;/a&gt;, but the underlying functionality for managing the data across the entire network is being discussed in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43738" title="#43738: enhancement: Make the personal data Export/Delete functionality available in ... (new)"&gt;#43738&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43821 (Add UX in the Network Admin for setting a network-wide privacy policy) created</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43821</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43821/1524254700686386</guid>
      <description>&lt;p&gt;
Some multisite instances will need to set one privacy policy for the entire network, with controls on whether or not individual sites can modify/replace it. Other multisite instances may choose to leave the privacy policy entirely to individual sites.
&lt;/p&gt;
&lt;p&gt;
The UI for setting a network-wide policy should probably be similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;, so snippets from plugins can be included.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43820 (Add "Mine" filter for attachments similarly to posts and comments) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43820</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43820/1524253826610597</guid>
      <description>&lt;p&gt;
This will be quite useful for users that want to see, edit or export their data.
&lt;/p&gt;
&lt;p&gt;
The functionality already exists. Attachments can be filtered by user name when clicking on the "Author" in the Media Library (in list-table view). To make it more accessible we would need to add a little bit of UI, perhaps another &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; under the "Media items" drop-down.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43650 (Add Requires PHP Version to Plugin - View Details) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:47:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43650#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43650#comment:6/1524253677985167</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43374 (PHP 7.2 Warning: count(): Parameter must be an array or an object that ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43374#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43374#comment:7/1524253595711788</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt; will introduce an &lt;code&gt;is_countable()&lt;/code&gt; polyfill for the PHP 7.3 function with the same name. I think it makes sense to start using that function here to fix this warning.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43374/43374.patch" title="Attachment '43374.patch' in Ticket #43374"&gt;43374.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43374/43374.patch" title="Download"&gt;​&lt;/a&gt; utilizes the &lt;code&gt;is_countable()&lt;/code&gt; function to avoid the PHP warning. Of course, this depends on the patch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt; being committed first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43374.patch attached to Ticket #43374</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43374/43374.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43374/43374.patch/1524253477137873</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>export-personal-data-with-add-request-link.jpg attached to Ticket #43602</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43602/export-personal-data-with-add-request-link.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43602/export-personal-data-with-add-request-link.jpg/1524253407891592</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:00:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:33/1524250852529705</guid>
      <description>&lt;p&gt;
Also things like the above screenshot shouldn't be possible. Storing the request in the same CPT that later is used for logging would make that easier to fix.
&lt;/p&gt;
&lt;p&gt;
We'd also probably need some garbage collection for expired unconfirmed requests. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:4" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;comment 4&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>repeating-requests.png attached to Ticket #43443</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43443/repeating-requests.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43443/repeating-requests.png/1524250603990608</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:9/1524249485256910</guid>
      <description>&lt;p&gt;
Thanks for pointing that out, @jrf. I updated the patch and added a test for an empty array in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43619/43619.3.diff" title="Attachment '43619.3.diff' in Ticket #43619"&gt;43619.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43619/43619.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Did you have a plan in mind for updating Core to use this new function? There are several tickets referenced above, but wondering if making a singular ticket (or handling that on this ticket) is better. Same for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Since these produce warnings, I think these should be fixed in 4.9.6, if possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43619.3.diff attached to Ticket #43619</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43619/43619.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43619/43619.3.diff/1524249212830221</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:10/1524248720084366</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43738#comment:9" title="Comment 9"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Search across the network for the user's ID and/or email
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can look at a single table, &lt;code&gt;wp_usermeta&lt;/code&gt;, to get a list of sites the user has a role on, but I'm not sure if that covers everything that we need.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It doesn't, because comments might only be associated with an email address, not a user ID. This may also be the case for data stored by plugins. But &lt;code&gt;wp_usermeta&lt;/code&gt; is probably a good start.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A couple questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is there a personal data export API endpoint that is available on each site?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
There has been some discussion of REST API endpoints, but I don't think there is any code for this yet (although I haven't caught up on everything yet today). I think these endpoints will be critical for multisite needs.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What's the best ticket to start on to get up to speed on the data being exported? &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt;?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yep, plus &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt; for the (single site) UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42612 (Single post navigation bugs when adding posts in Starter Content) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:23:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42612#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42612#comment:18/1524248616481205</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:18:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:32/1524248310179968</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:31" title="Comment 31"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
CPT is much heavier just to store a hash/key, and I disagree you need logs for that type of activity where it's a) automated and b) something that happens more or less in the background. Look at the existing system; it's just meta.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, if we plan for this to be reusable in the future, imho we should also plan for the log to be reusable.
&lt;/p&gt;
&lt;p&gt;
Yeah, at first CPT may look heavier but the options table is just the wrong place to store this type of data. All options get loaded on each request, including on the front-end, which makes them a lot heavier than a CPT which is going to be loaded only when an admin visits the privacy screen.
&lt;/p&gt;
&lt;p&gt;
Another big disadvantage is that the hash, time, email are stored in a CSV which makes it impossible to look them up separately. If I remember right that was one of the main reasons a new DB table was so attractive. Given that such table will stay mostly empty on the great majority of sites, a CPT is the next best thing.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps we can abstract the CPT a bit, make it more generic, then set different &lt;code&gt;post_name&lt;/code&gt; depending on request type?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We implemented the 2 CPT for the requests to take advantage of wp_count_posts. We'll need lots of custom queries otherwise on our screens to do the status filtering.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, don't think so. &lt;code&gt;wp_count_posts()&lt;/code&gt; uses a simple db query to count. We actually can do better as it has some specific stuff for posts and pages that is not needed. Making another similar function which is adapted to our needs would be the right thing in any case.
&lt;/p&gt;
&lt;p&gt;
Also, this will be needed "once in a blue moon" when an admin visits one of the privacy screens :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main reason we started using CPTs was to not store the verification key in the options table :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, the main reason for CPTs was to get a list table log without lots of heavy custom queries on meta data, since no one liked the idea of a custom table.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm, think there has been some miscommunication here :) As a custom table would have been empty or almost empty on the great majority of sites, it doesn't make sense to add one. Even if we added one it will also need a whole new set of low-level functions to become usable. For example we would need to add or duplicate most of the stuff that drives the list tables UI.
&lt;/p&gt;
&lt;p&gt;
CPTs are the next best thing to a custom table. They can store a lot of information quite efficiently. Not using them to store the simple data needed for implementing email verification doesn't seem right. In addition, having two almost identical custom post types doesn't seem best.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:16:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:9/1524248167970278</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Search across the network for the user's ID and/or email
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm still catching up on GDPR and will have to go through some of the tickets to figure out what data is being exported and in what format, but this specific task may not be realistic with multisite's current data structure.
&lt;/p&gt;
&lt;p&gt;
We can look at a single table, &lt;code&gt;wp_usermeta&lt;/code&gt;, to get a list of sites the user has a role on, but I'm not sure if that covers everything that we need.
&lt;/p&gt;
&lt;p&gt;
For small networks, it may be possible to just loop through each site and retrieve the data. As networks get larger, this becomes less and less realistic and would probably need to have a long running task using cron.
&lt;/p&gt;
&lt;p&gt;
A couple questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is there a personal data export API endpoint that is available on each site?
&lt;/li&gt;&lt;li&gt;What's the best ticket to start on to get up to speed on the data being exported? &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38197 (Update Pingback function To Add Return) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38197#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38197#comment:25/1524246826426952</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am going to move this to 5.0 because of the potential for issues with the change in returned values. If a committer is confident in this, it can be moved back in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43650 (Add Requires PHP Version to Plugin - View Details) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:44:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43650#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43650#comment:5/1524246260191672</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This looks good to me. I think this can go in before the other UI elements in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/40934" title="#40934: task (blessed): Allow PHP version requirements for plugins &amp;amp; themes (assigned)"&gt;#40934&lt;/a&gt; because it is purely informational.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:9/1524245660912749</guid>
      <description>&lt;p&gt;
Oh good catch @chetan200891 I forgot about the separator from moving the code :) thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42486 (The Tools screen is blank for users who cannot manage categories or tags) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42486#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42486#comment:24/1524245599612258</guid>
      <description>&lt;p&gt;
I am not sure that I like the idea of copying an existing code block (that checks if the current user has the capability to manage categories or tags) into two different locations.
&lt;/p&gt;
&lt;p&gt;
I think moving the Categories and Tags converter to the action hook would be a better approach. Using this approach would only require the original code proposed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42486/42486.diff" title="Attachment '42486.diff' in Ticket #42486"&gt;42486.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42486/42486.diff" title="Download"&gt;​&lt;/a&gt;. It would also allow that card to be unhooked from the tools page, if desired.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:8/1524245565773240</guid>
      <description>&lt;p&gt;
@xkon I have tested your patch and made some changes, and added new patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43721/43721.4.diff"&gt;43721.4.diff&lt;/a&gt;. Removed 'login_link_separator'. Also made some changes to CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43721.4.diff attached to Ticket #43721</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.4.diff/1524245434034531</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:10/1524245410382802</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for the custom table, I left it as is with a CPT since we used CPTs for the exports other tools also for now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ya I see this follows that precedent, and that's probably fine.
&lt;/p&gt;
&lt;p&gt;
And I'll try to take the plugin for a spin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 16:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:7/1524241944022927</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.2.diff" title="Attachment '43721.2.diff' in Ticket #43721"&gt;43721.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.2.diff" title="Download"&gt;​&lt;/a&gt; was a false upload, sorry wrong click.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.3.diff" title="Attachment '43721.3.diff' in Ticket #43721"&gt;43721.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.3.diff" title="Download"&gt;​&lt;/a&gt; moved the Privacy Policy link on the bottom of the page as @melchoyce suggested above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43721.3.diff attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 16:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.3.diff/1524241872147971</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43721.2.diff attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 16:29:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.2.diff/1524241797937620</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 20 Apr 2018 16:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:8/1524241485260843</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we still need one more change here - mea culpa.
&lt;/p&gt;
&lt;p&gt;
When I created the ticket I did something (not so) "clever". I added &lt;code&gt;&amp;amp;&amp;amp; ! empty( $var )&lt;/code&gt; to the conditional in the function
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; &lt;span class="nx"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;Traversable&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
However, the PHP native function does not do such a check, so as it stands, there will be situations where the WP back-fill does not give the same result as the PHP native function which is undesirable and will be the cause of bugs in the long run.
&lt;/p&gt;
&lt;p&gt;
Sorry about that.
&lt;/p&gt;
&lt;p&gt;
The latest patch contains the &lt;code&gt;&amp;amp;&amp;amp; ! empty( $var )&lt;/code&gt;, so it will need to be removed and if no unit tests are failing after that, we need to add a unit test for an empty array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:51:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:29/1524239481988468</guid>
      <description>&lt;p&gt;
@allendav
&lt;/p&gt;
&lt;p&gt;
I'm not sure if this is working or if it's my code.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No personal data was found for this user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the message I'm seeing in admin, but I can see my erasure code is returning results:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/s%2Fe4zbt1qvm85r9fh%2FSlack%2520-%2520A8C%25202018-04-20%252016-46-09.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/s%2Fe4zbt1qvm85r9fh%2FSlack%2520-%2520A8C%25202018-04-20%252016-46-09.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Code &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/pull/19808/files#diff-3d2ec5172ea5ae5cd9b4cecaa433f507R163"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/pull/19808/files#diff-3d2ec5172ea5ae5cd9b4cecaa433f507R163&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43819 (Improve performance of function "wp_update_attachment_metadata" in post.php) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43819#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43819#comment:2/1524239077052686</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43819 (Improve performance of function "wp_update_attachment_metadata" in post.php) closed</title>
      
        <dc:creator>lucasbustamante</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:37:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43819#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43819#comment:1/1524238624161972</guid>
      <description>invalid: &lt;p&gt;
Please ignore this ticket, it was the plugin "Smush it" that was slowing down the uploads.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:31/1524238244088899</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:30" title="Comment 30"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hmm, why not? On large/busy sites it would be nice to see when somebody has changed passwords, or the last time an email was verified.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
CPT is much heavier just to store a hash/key, and I disagree you need logs for that type of activity where it's a) automated and b) something that happens more or less in the background. Look at the existing system; it's just meta.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps we can abstract the CPT a bit, make it more generic, then set different &lt;code&gt;post_name&lt;/code&gt; depending on request type?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We implemented the 2 CPT for the requests to take advantage of wp_count_posts. We'll need lots of custom queries otherwise on our screens to do the status filtering.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was also thinking we would need only one CPT, not one per request type. We can use all the data WP_Post has to offer: title, post_name, content, content_filtered, excerpt, etc. etc. For example the request type can be stored in post_name, and the request status (pending, verified, expired) in post_status.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Previous comment. This was more efficient for the list tables/counts.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main reason we started using CPTs was to not store the verification key in the options table :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, the main reason for CPTs was to get a list table log without lots of heavy custom queries on meta data, since no one liked the idea of a custom table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:26:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:30/1524237990758956</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:29" title="Comment 29"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...the verification system is independent of that on purpose so it could be used in other places. For example, if I wanted to use these for lost password emails I wouldn't need to log via the CPT.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm, why not? On large/busy sites it would be nice to see when somebody has changed passwords, or the last time an email was verified. Perhaps we can abstract the CPT a bit, make it more generic, then set different &lt;code&gt;post_name&lt;/code&gt; depending on request type?
&lt;/p&gt;
&lt;p&gt;
I was also thinking we would need only one CPT, not one per request type. We can use all the data WP_Post has to offer: title, post_name, content, content_filtered, excerpt, etc. etc. For example the request type can be stored in post_name, and the request status (pending, verified, expired) in post_status.
&lt;/p&gt;
&lt;p&gt;
The main reason we started using CPTs was to not store the verification key in the options table :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:29/1524237072017861</guid>
      <description>&lt;p&gt;
@azaozz Correct CPTs are used for logging requests,  but the verification system is independent of that on purpose so it could be used in other places. For example, if I wanted to use these for lost password emails I wouldn't need to log via the CPT.
&lt;/p&gt;
&lt;p&gt;
Make sense?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:07:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:28/1524236874607086</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Now we have CPTs for storing these user requests. We should change &lt;code&gt;wp_send_account_verification_key()&lt;/code&gt; and friends to use the CPTs for storing the verification key, etc. No point to use the options or user_meta tables.
&lt;/p&gt;
&lt;p&gt;
@mikejolley could you have a look please :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:6/1524236388945851</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43583 (Introduce new PHP cross-version compat function `is_countable()`) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:55:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43583#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43583#comment:10/1524236137742460</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:7/1524236124166984</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43619/43619.2.diff" title="Attachment '43619.2.diff' in Ticket #43619"&gt;43619.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43619/43619.2.diff" title="Download"&gt;​&lt;/a&gt; changes the &lt;code&gt;@since&lt;/code&gt; version to 4.9.6 and adds &lt;code&gt;@ticket&lt;/code&gt; tags to the unit tests. Everything looks good to go for this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43619.2.diff attached to Ticket #43619</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43619/43619.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43619/43619.2.diff/1524236072891748</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>login-register_privacy.png attached to Ticket #43721</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:47:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/login-register_privacy.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/login-register_privacy.png/1524235679666785</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:5/1524235661462192</guid>
      <description>&lt;p&gt;
That list of links is specifically geared towards helping people sign up or log in, so adding the Privacy Policy link there wouldn't be appropriate.
&lt;/p&gt;
&lt;p&gt;
If this is absolutely legally necessary, I'd recommend sticking a smaller link (13px or smaller) to the bottom of the screen. See attached image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:57/1524235407804983</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42995" title="Privacy: fix `get_privacy_policy_url()` to only return the URL when ..."&gt;42995&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: fix &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; to only return the URL when the page is published.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42995]: Privacy: fix `get_privacy_policy_url()` to only return the URL when ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42995/1524235406734023</guid>
      <description>&lt;p&gt;
Privacy: fix &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; to only return the URL when the page is published.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:4/1524234479057785</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1524234478000428"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:20/1524234249425951</guid>
      <description>&lt;p&gt;
@allendav I have not yet seen anybody requiring consents before the website loads. So basically all cookies are already set at start either you consent or not. The difference is that they are removed if you choose not to consent and not droped again. Not even the regulating authorities themselved do it ( if that makes a point :D ).
&lt;/p&gt;
&lt;p&gt;
But, If we are to follow this concept should we create something like &lt;code&gt;wp_add_privacy_policy_content()&lt;/code&gt; that gathers all cookie info into a nice list / modal like the one that cookiebot.com is producing ?
&lt;/p&gt;
&lt;p&gt;
Although I'm saying again a straight up modal from core will be very intrusive to some themes etc. So we have to figure out a way or add an option somewhere to enable/disable it at least and provide al the necessary CSS and stuff so everybody can theme it if they like.
&lt;/p&gt;
&lt;p&gt;
That's why I'm still not really sure about a full modal and prefer to add footer links for bundled themes that are &lt;code&gt;core&lt;/code&gt; for starters and maybe we can review it in the future again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43819 (Improve performance of function "wp_update_attachment_metadata" in post.php) created</title>
      
        <dc:creator>lucasbustamante</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43819</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43819/1524233939618206</guid>
      <description>&lt;p&gt;
I had to import thousands of images to WordPress and it was taking an average of 5 seconds to upload each image, even though they were all on localhost, so WordPress only had to move it and register it in the database.
&lt;/p&gt;
&lt;p&gt;
To speed up this process, I debugged each and every call made during a media upload, and found out the great guilty that, after a little tweak, made my media upload going from &lt;strong&gt;5 seconds to 0.7 seconds&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
What was slowing it down was &lt;code&gt; add_filter('wp_update_attachment_metadata', $data, $post-&amp;gt;ID) &lt;/code&gt; inside function &lt;code&gt; wp_update_attachment_metadata()&lt;/code&gt; in post.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Update metadata for an attachment.
 *
 * @since 2.1.0
 *
 * @param int   $attachment_id Attachment post ID.
 * @param array $data          Attachment meta data.
 * @return int|bool False if $post is invalid.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_update_attachment_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$attachment_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Filters the updated attachment meta data.
         *
         * @since 2.1.0
         *
         * @param array $data          Array of updated attachment meta data.
         * @param int   $attachment_id Attachment post ID.
         */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_update_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;delete_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
As I had to upload thousands of images, I modified it to this, just during the import:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Update metadata for an attachment.
 *
 * @since 2.1.0
 *
 * @param int   $attachment_id Attachment post ID.
 * @param array $data          Attachment meta data.
 * @return int|bool False if $post is invalid.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_update_attachment_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$attachment_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Filters the updated attachment meta data.
         *
         * @since 2.1.0
         *
         * @param array $data          Array of updated attachment meta data.
         * @param int   $attachment_id Attachment post ID.
         */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;WP_DOING_IMPORT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_update_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;delete_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Before the tweak:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  'uploadtimedebug_start' =&amp;gt; 0 seconds
  'uploadtimedebug_after_requires' =&amp;gt; 0.006 seconds
  'uploadtimedebug_after_tmp_filled' =&amp;gt; 0.597 seconds
  'uploadtimedebug_before_media_handle_sideload' =&amp;gt; 0.597 seconds
  'uploadtimedebug_after_media_handle_sideload' =&amp;gt; 5.370 seconds
  'uploadtimedebug_finish' =&amp;gt; 5.370 seconds
&lt;/pre&gt;&lt;p&gt;
After the tweak:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  'uploadtimedebug_inicio' =&amp;gt; 0 seconds
  'uploadtimedebug_after_requires' =&amp;gt; 0.007 seconds
  'uploadtimedebug_after_tmp_filled' =&amp;gt; 0.620 seconds
  'uploadtimedebug_before_media_handle_sideload' =&amp;gt; 0.620 seconds
  'uploadtimedebug_after_media_handle_sideload' =&amp;gt; 0.723 seconds
  'uploadtimedebug_finish' =&amp;gt; 0.723 seconds
&lt;/pre&gt;&lt;p&gt;
I wonder if we could improve this piece of code to be more performant?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:18:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:3/1524233894538466</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43721#comment:2" title="Comment 2"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@azaozz after taking a look at this do you think we could enhance the &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; to check if the page defined is of status &lt;code&gt;Publish&lt;/code&gt; as well?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, good catch! Will fix that shortly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43813 (Meta API should set `last_changed` cache key internally) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43813#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43813#comment:4/1524233889792288</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43813#comment:3" title="Comment 3"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While I'm generally in favor of this change, I think we might wanna hold off this for a bit.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this seems fine to me. @johnjamesjacoby 's other points notwithstanding, the main idea here was to cut down on code reduplication. But if the general feeling is that we're not ready for this yet because the patterns aren't well-enough established, then let's wait.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:2/1524233382653703</guid>
      <description>&lt;p&gt;
Hello @voneff and welcome to core trac!
&lt;/p&gt;
&lt;p&gt;
In my opinion you're absolutely correct, websites that do use the default registration/login pages should include a link to their Privacy Policy page if that exists as well.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.diff" title="Attachment '43721.diff' in Ticket #43721"&gt;43721.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.diff" title="Download"&gt;​&lt;/a&gt; as we now have the handy &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; it adds the links in the current &lt;code&gt;nav&lt;/code&gt; if a policy page link exists.
&lt;/p&gt;
&lt;p&gt;
@melchoyce would you be ok with this added in the &lt;code&gt;nav&lt;/code&gt; as seen in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.preview.jpg" title="Attachment '43721.preview.jpg' in Ticket #43721"&gt;43721.preview.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.preview.jpg" title="Download"&gt;​&lt;/a&gt; ?
&lt;/p&gt;
&lt;p&gt;
@azaozz after taking a look at this do you think we could enhance the &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; to check if the page defined is of status &lt;code&gt;Publish&lt;/code&gt; as well? Since the function returns just the url at the moment without the Publish check, if it still a 'draft' you end up having a 404 link basically if used for Front End as here. Or should the check be made manually in the template itself?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43721.diff attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.diff/1524233033247350</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43721.preview.jpg attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.preview.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.preview.jpg/1524233022938604</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43791 (Add the call to pingback_url to core instead of themes) updated</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43791#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43791#comment:6/1524232479895289</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42465 (Add `permalink_structure` to REST API general site data) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42465#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42465#comment:7/1524232365898513</guid>
      <description>&lt;p&gt;
Given Gutenberg ended up using a different implementation and that &lt;code&gt;permalink_structure&lt;/code&gt; is a &lt;em&gt;setting&lt;/em&gt;, I think &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42142" title="REST API: Add `permalink_structure` to the index endpoint.
This ..."&gt;r42142&lt;/a&gt; should be reverted. It's not necessary at this time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43791_2.diff attached to Ticket #43791</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:50:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43791/43791_2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43791/43791_2.diff/1524232244692755</guid>
      <description>&lt;p&gt;
Patch refreshed. Please discard the 43791_1.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43791_1.diff attached to Ticket #43791</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:48:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43791/43791_1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43791/43791_1.diff/1524232082412862</guid>
      <description>&lt;p&gt;
Add the call to pingback_url to core (Patch refreshed)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43791 (Add the call to pingback_url to core instead of themes) updated</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43791#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43791#comment:5/1524232015984574</guid>
      <description>&lt;p&gt;
Hello @dshanske ,
&lt;/p&gt;
&lt;p&gt;
Thanks for your feedback on this ticket. Yeah definitely it should be core territory.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It should be get_bloginfo( 'pingback_url' ), not site_url( '/xmlrpc.php' ).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also refreshed the patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35465 (Improve wp.Backbone docs) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:42:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35465#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35465#comment:16/1524231761329127</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35465#comment:15" title="Comment 15"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The question mark indicates the field is optional. If the Object is optional it can stay.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @adamsilverstein, I skimmed through:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/javascript/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/javascript/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
when I noticed &lt;code&gt;?Object&lt;/code&gt; and &lt;code&gt;?number&lt;/code&gt;, but I didn't find a reference to it there.
&lt;/p&gt;
&lt;p&gt;
I think it could be helpful to mention it in the Handbook.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see a number parameter in that function al all though, seems like that line can be removed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I wasn't exactly sure regarding that,  so I didn't change that.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35465/35465.7.diff" title="Attachment '35465.7.diff' in Ticket #35465"&gt;35465.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35465/35465.7.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Removes &lt;code&gt;&amp;gt;&lt;/code&gt; from description.
&lt;/li&gt;&lt;li&gt;Replaces &lt;code&gt;&amp;amp;ndash;&lt;/code&gt; with &lt;code&gt;-&lt;/code&gt; in description.
&lt;/li&gt;&lt;li&gt;Moves a word up to the line above, in description, for better readability.
&lt;/li&gt;&lt;li&gt;Makes a single alignment.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35465.7.diff attached to Ticket #35465</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35465/35465.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35465/35465.7.diff/1524231386001730</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:9/1524230606891750</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35465 (Improve wp.Backbone docs) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:59:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35465#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35465#comment:15/1524229167407609</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I noticed further {?Object} and {?number}here. Should we remove the question marks?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The question mark indicates the field is optional. If the Object is optional it can stay. I don't see a number parameter in that function al all though, seems like that line can be removed?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are the &amp;gt; and &amp;amp;ndash; really needed here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These do seem out of place. I think you can leave out the '&amp;gt;' items or change them both to a regular '-' dash.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:28/1524229078232568</guid>
      <description>&lt;p&gt;
After doing some back and forth tests after &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt; got commited I was confused on this and I've got a question / proposal.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What I did&lt;/strong&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I went on my dev site and spamed some comments as a visitor with mail &lt;code&gt;visitor@dev.oo&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I went from the admin and made a custom request to remove data to the visitors email &lt;code&gt;visitor@dev.oo&lt;/code&gt; and confirmed that request.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Went back on the admin and I removed &lt;code&gt;visitor@dev.oo&lt;/code&gt; data.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I went again and left yet another comment as &lt;code&gt;visitor@dev.oo&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I still had access from the admin since that mail had already made a confirmation to remove his data without the need of a &lt;code&gt;NEW&lt;/code&gt; confirmation.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Proposal&lt;/strong&gt; ( if we haven't already talked about it ):
&lt;/p&gt;
&lt;p&gt;
After removing a users data, replace the button with something like 'Data removed on dd-mm-yy' this acts as:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;a reminder for the Admin when that action took place
&lt;/li&gt;&lt;li&gt;you can't use the same action without confirmation ( if you don't want to create a newer entry in the future )
&lt;/li&gt;&lt;li&gt;a page being less confusing
&lt;/li&gt;&lt;li&gt;needing a confirmation from scratch to remove a persons data with the same e-mail for safety reasons
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41902 (wp-load.php: comment for error reporting levels) updated</title>
      
        <dc:creator>sasagar</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:57:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41902#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41902#comment:4/1524229045497944</guid>
      <description>&lt;p&gt;
@schlessera
Sorry for long time no see.
&lt;/p&gt;
&lt;p&gt;
I changed the patch file as you suggested. (I couldn't type description completely.  :( )
&lt;/p&gt;
&lt;p&gt;
Would you check for that anytime you can.
I hope it would work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41902_2.patch attached to Ticket #41902</title>
      
        <dc:creator>sasagar</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41902/41902_2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41902/41902_2.patch/1524228900206892</guid>
      <description>&lt;p&gt;
added the
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43473 (Add default text for a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43473#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43473#comment:14/1524228281146457</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43473#comment:13" title="Comment 13"&gt;idea15&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Some of these are strictly plugin related. We can "mention" that "in most cases" data may be used for .... purposes and sent to third party sites, but ultimately the plugins that do this should provide the exact info.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Registered user data
&lt;/li&gt;&lt;li&gt;Account creation
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
These are the same and concern only users that want to register. All of the data is listed on the Profile screen. Not sure what exactly to mention about it, perhaps that only username and email are mandatory?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Oembeds
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
We have a list of the default oEmbed providers, however other sites can be added by plugins and any WP site is also a provider. Thinking we need some generic text here, perhaps like "Some pages may contain embedded sections from other websites like videos, images, etc. In these cases the other site may collect personal data like IP addresses and may set browser cookies".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Visitor cookies
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
No such thing in WP.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Registered user cookies
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
All of these are strictly "functional", used for logging in, etc. None is used for any tracking.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Post data (posts?)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Only registered users with sufficient capabilities can publish posts. Not sure that needs to be in the front-end visitor facing privacy policy, probably nothing. Perhaps can mention that posts contain the user ID on the Profile screen?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Comments
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
WP stores the commenter IP address and browser version string in addition to what the commenter provides in the comments form.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Spam checks
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Nothing in WP by default, but can mention that all comment data may be sent to a "third party security scanning service"?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Analytics
&lt;/li&gt;&lt;li&gt;Telemetry
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
There two are the same. Can probably mention that most sites store some visitor data to help them improve their services (Google Analytics or local/cPanel).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Contact forms
&lt;/li&gt;&lt;li&gt;Order fulfilment
&lt;/li&gt;&lt;li&gt;Message boards
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Nothing in WP. Can leave for plugins that add the forms and collect the data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:26/1524227002814531</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43442#comment:24" title="Comment 24"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like the idea in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43442/43442.5.diff" title="Attachment '43442.5.diff' in Ticket #43442"&gt;43442.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43442/43442.5.diff" title="Download"&gt;​&lt;/a&gt; to provide the user with a link to manually handle comments with anonymization errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, like that idea too. However looked into it a bit more and couldn't find any cases where a comment updating will fail but the comment can still be edited. Removed it for now. If we can prove it's useful, can add it back later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:25/1524226716709341</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42994" title="Privacy: add functionality to anonymize commenters.
Props xkon, ..."&gt;42994&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: add functionality to anonymize commenters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props xkon, fclaussen, allendav, birgire, azaozz.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42994]: Privacy: add functionality to anonymize commenters.  Props xkon, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42994/1524226715615629</guid>
      <description>&lt;p&gt;
Privacy: add functionality to anonymize commenters.
&lt;/p&gt;
&lt;p&gt;
Props xkon, fclaussen, allendav, birgire, azaozz.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43791 (Add the call to pingback_url to core instead of themes) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43791#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43791#comment:4/1524226253498124</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It should be get_bloginfo( 'pingback_url' ), not site_url( '/xmlrpc.php' ). That adds the ability to filter the pingback url and redirect it elsewhere. You could, if anyone ever wrote one, delegate pingback handling to a service.
&lt;/p&gt;
&lt;p&gt;
I'm in favor of Core handling this. It never should have been theme territory and your points are all valid. However, this was rejected before my tenure in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10094" title="#10094: enhancement: Move pingback &amp;lt;link&amp;gt; to wp_head? (closed: wontfix)"&gt;#10094&lt;/a&gt;, so I'm not sure if it would get through now. I think we need to get more consensus on whether this would be even considered for a commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 20 Apr 2018 11:31:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:27/1524223908369643</guid>
      <description>&lt;p&gt;
@allendav This will obviously break what we have now, but I notice between this and the exporter we have &lt;code&gt;eraser_friendly_name&lt;/code&gt; and &lt;code&gt;exporter_friendly_name&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Why don't we unify the format here and just use &lt;code&gt;nicename&lt;/code&gt; for both?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 11:27:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:8/1524223653204144</guid>
      <description>&lt;p&gt;
Thanks for your input @mnelson4 I've actually added a small repo and converted this into a plugin so it's easier for anyone that wanted to have a look to see how this feels or expand it for the ease of use ( &lt;a class="ext-link" href="https://github.com/mrxkon/consent-log"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/mrxkon/consent-log&lt;/a&gt; ).
&lt;/p&gt;
&lt;p&gt;
As for the custom table, I left it as is with a CPT since we used CPTs for the exports other tools also for now.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;An extra note&lt;/strong&gt; after a little bit of discussion the 'feeling' about this is that it might get abused by plugins overchecking consents ( although each plugin should add a unique ID per consent so there shouldn't be a problem there as any other plugin wouldn't know where to look ) + the idea of keeping 'extra' data such as e-mails etc.
&lt;/p&gt;
&lt;p&gt;
From one hand you allow the user to get anonymized and from the other you have to keep his consent log to prove that at some past point he had accepted a consent, if the consent is anonymized as well how are you going to prove it in the first place? It seems that some things here are going against each other if I have it down correctly.
&lt;/p&gt;
&lt;p&gt;
If we find a way to rule out the possibility of doing something actually 'against' the regulation so we can be safe and this is something that more people actually need we can surely check it out for the future.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Since my position is also conflicting ( by giving code and saying to wait a bit longer ), I'll say again that I had made something similar to this recently for a client as it was requested by his lawyers. It doesn't mean that even they are 100% correct though :) .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35465 (Improve wp.Backbone docs) reopened</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 11:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35465#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35465#comment:14/1524223144568243</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35465/35465.6.diff" title="Attachment '35465.6.diff' in Ticket #35465"&gt;35465.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35465/35465.6.diff" title="Download"&gt;​&lt;/a&gt; is a suggestion that:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Aligns related descriptions.
&lt;/li&gt;&lt;li&gt;Adds full stops to some summaries.
&lt;/li&gt;&lt;li&gt;Capitalizes &lt;code&gt;object&lt;/code&gt; in  &lt;code&gt;* @param {array|object&lt;/code&gt;}
&lt;/li&gt;&lt;li&gt;Changes a two line &lt;code&gt;//&lt;/code&gt; comment into a multiline comment using &lt;code&gt;/*...*/&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Changes &lt;code&gt;$returns&lt;/code&gt; to &lt;code&gt;$return&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I noticed further &lt;code&gt;{?Object&lt;/code&gt;} and &lt;code&gt;{?number&lt;/code&gt;}&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/bb8d67e6ead6430260c8a595a180074ce410f50e/wp-includes/js/wp-backbone.js#L360"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;. Should we remove the question marks?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Are the &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;ndash;&lt;/code&gt; really needed &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/bb8d67e6ead6430260c8a595a180074ce410f50e/wp-includes/js/wp-backbone.js#L80"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>35465.6.diff attached to Ticket #35465</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 11:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35465/35465.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35465/35465.6.diff/1524222733178089</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43473 (Add default text for a privacy policy) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Fri, 20 Apr 2018 10:24:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43473#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43473#comment:13/1524219870140592</guid>
      <description>&lt;p&gt;
Just thinking of the section for the privacy notices on what personal data we collect. There's a lot of data which could be listed, depending on the nature of the site, some of which is WP and plugin generated, some of which is not:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Registered user data
&lt;/li&gt;&lt;li&gt;Oembeds
&lt;/li&gt;&lt;li&gt;Visitor cookies
&lt;/li&gt;&lt;li&gt;Registered user cookies
&lt;/li&gt;&lt;li&gt;Post data
&lt;/li&gt;&lt;li&gt;Comments
&lt;/li&gt;&lt;li&gt;Spam checks
&lt;/li&gt;&lt;li&gt;Analytics
&lt;/li&gt;&lt;li&gt;Telemetry
&lt;/li&gt;&lt;li&gt;Contact forms
&lt;/li&gt;&lt;li&gt;Account creation
&lt;/li&gt;&lt;li&gt;Order fulfilment
&lt;/li&gt;&lt;li&gt;Message boards
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
and so on.
&lt;/p&gt;
&lt;p&gt;
What are peoples' thoughts on the best way to handle this information collection and drafting without ovewhelming the site administrator, as this section of a PN alone could take as much time as the rest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36753 (Use system fonts for a faster, more native-feeling admin) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 20 Apr 2018 08:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36753#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36753#comment:92/1524214727810538</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1524214727000129"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43813 (Meta API should set `last_changed` cache key internally) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 20 Apr 2018 08:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43813#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43813#comment:3/1524212142848836</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While I'm generally in favor of this change, I think we might wanna hold off this for a bit. Something to consider here is that moving this logic into the actual metadata API functions will make it harder to make adjustments specific to only a subset of these object types - which is generally nothing we should strive for, but something that may be necessary sometimes.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For example experimenting with a meta-related caching improvement should rather happen on a less-used component like site meta first before shooting it out there to be used with posts, terms etc immediately.
&lt;/li&gt;&lt;li&gt;Another example is that user meta right now does not invalidate cache on meta changes - which may have a background, I'm not sure. Just highlighting this as another example where all object types (unfortunately) are not the same.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A specific idea I had in mind was to introduce meta-specific last changed keys for every object type (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43818" title="#43818: enhancement: Invalidate query caches less aggressively by using a `last_changed` ... (new)"&gt;#43818&lt;/a&gt;), to make cache invalidation less aggressive which would result in less unnecessary cache misses for queries not using any metadata. Something like this I think should rather be tested with something like site meta before applying it to the really frequently used post meta - just so that we can detect most basic issues (if any) immediately before testing it under heavier load.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43818 (Invalidate query caches less aggressively by using a `last_changed` ...) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 20 Apr 2018 08:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43818</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43818/1524212035293747</guid>
      <description>&lt;p&gt;
Currently, the meta implementations for posts, terms, comments and sites (in multisite) invalidate all respective query caches when any value is changed (via setting the &lt;code&gt;last_changed&lt;/code&gt; key). This is a really aggressive method of cache invalidation and causes in query caches being too frequently invalidated, resulting in lots of unnecessary cache misses.
&lt;/p&gt;
&lt;p&gt;
Most queries (or at least many queries) do not make use of meta queries, and those should stay unaffected by when a meta value changes. Therefore I suggest introducing a specific &lt;code&gt;meta_last_changed&lt;/code&gt; cache key, and have the meta functions set that one instead of the generic &lt;code&gt;last_changed&lt;/code&gt;. In the query classes, we can then check if a meta query is present, and only then make use of the &lt;code&gt;meta_last_changed&lt;/code&gt; key - otherwise we can ignore it and use the regular &lt;code&gt;last_changed&lt;/code&gt; key.
&lt;/p&gt;
&lt;p&gt;
Regarding the initial implementation, we should think about whether we would wanna roll this out to all the above object types immediately, or whether we should rather start with an object type less popular for metadata (i.e. &lt;em&gt;not&lt;/em&gt; posts). Related to this is &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43813" title="#43813: enhancement: Meta API should set `last_changed` cache key internally (new)"&gt;#43813&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Fri, 20 Apr 2018 06:55:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:56/1524207315637565</guid>
      <description>&lt;p&gt;
That's conflating two separate issues. We're going to be looking at the plugin guidelines separately (starting today, in fact) to see how privacy could be better defined and clarified for future development. We're also working on the functionality for plugin authors to provide privacy information in a way that can be captured by the privacy notice tool. But the need to provide information about data flow and capture isn't "pseudo-legal advice" - it's now a regulatory requirement.
&lt;/p&gt;
&lt;p&gt;
Our challenge has been to find a way to make that easier for everday administrators without having to be developers and lawyers at the same time, hence the compliance project. The privacy notices we're discussing here will be the sole responsibility of the site administrator. The tool will not write the policy for them, nor publish it. What it will do is pull in information about plugins from the functionality we're creating, and will also provide prompts for administrators to manually fill in details like their international data transfer information. Administrators are solely responsible for finishing and publishing the notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42942 (Provide a post_date_column_time hook for media files) updated</title>
      
        <dc:creator>ivanlutrov</dc:creator>

      <pubDate>Fri, 20 Apr 2018 06:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42942#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42942#comment:4/1524207101298690</guid>
      <description>&lt;p&gt;
Is there a reason we can't just use &lt;code&gt;post_date_column_time&lt;/code&gt; for this? That filter is used by WP for posts and pages, as well as custom post types so it makes sense just to use the same filter for all of them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43817 (REST API: Include 'formats' attribute on Post Type resource) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 20 Apr 2018 05:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43817#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43817#comment:1/1524200746502760</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43817 (REST API: Include 'formats' attribute on Post Type resource) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 20 Apr 2018 04:52:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43817</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43817/1524199960493492</guid>
      <description>&lt;p&gt;
We need to know which post formats we can display when editing a post in Gutenberg.
&lt;/p&gt;
&lt;p&gt;
While supported post formats are technically a theme setting, not a post type setting, post type is the closest matching resource that we make available.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/6301"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/6301&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43811 (Licence &amp; Policy notice during installation) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 04:09:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43811#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43811#comment:6/1524197386088528</guid>
      <description>&lt;p&gt;
Thanks for your input @idea15 !
&lt;/p&gt;
&lt;p&gt;
For &lt;code&gt;1&lt;/code&gt; even the quotation you added is more than enough I guess as well. And imho even everyday users have to be informed about which Open Source license we are under even as a reminder, there are plenty out there with different scopes etc so a reminder of GPLv2+ is a good thing as some might get more educated as we're explaining to them what PHP is and why they need an update etc.
&lt;/p&gt;
&lt;p&gt;
For &lt;code&gt;2&lt;/code&gt; WordPress installation has nothing to do with 'installing wp.org' the privacy on &lt;a class="ext-link" href="https://wordpress.org/about/privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/privacy/&lt;/a&gt; is about you visiting wp.org as a user/website relationship and has nothing to do with WordPress as a software.
&lt;/p&gt;
&lt;p&gt;
WordPress privacy policy during installation should be between &lt;code&gt;1 + 3&lt;/code&gt; as the communicating data for the updates and such concern the admins/devs that are doing the setup usually. But even if &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43492" title="#43492: enhancement: Core Telemetry and Updates (new)"&gt;#43492&lt;/a&gt; is still open ( I'm not sure it will close in time for the release) I still think the first release should have a notice no matter if that's resolved fully or not.
&lt;/p&gt;
&lt;p&gt;
To make a start then even this would be more than enough imho. I'd be happy to see it as a user/dev/admin if I was about to make my 1st ever WordPress installation:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress is released under GPLv2 (or later) license from the Free Software Foundation.
Quick License Summary: You may copy, distribute and modify the software as long as you track changes/dates in source files. Any modifications to or software including (via compiler) GPL-licensed code must also be made available under the GPL along with build &amp;amp; install instructions.
A full copy of the license is included with every copy of WordPress, but you can also review it here.
To be able to provide consistent security &amp;amp; feature updates WordPress might occasionally send some data to WordPress.org such as data,data,data,data.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 01:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:24/1524187861453995</guid>
      <description>&lt;p&gt;
I like the idea in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43442/43442.5.diff" title="Attachment '43442.5.diff' in Ticket #43442"&gt;43442.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43442/43442.5.diff" title="Download"&gt;​&lt;/a&gt; to provide the user with a link to manually handle comments with anonymization errors.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43442/43442.6.diff" title="Attachment '43442.6.diff' in Ticket #43442"&gt;43442.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43442/43442.6.diff" title="Download"&gt;​&lt;/a&gt; additionally:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds a docblock for the &lt;code&gt;wp_anonymize_comment&lt;/code&gt; filter
&lt;/li&gt;&lt;li&gt;Adjusts two strings to make them translatable
&lt;/li&gt;&lt;li&gt;Adds translators comments.
&lt;/li&gt;&lt;li&gt;Adds accessibility text for the &lt;code&gt;_blank&lt;/code&gt; link.
&lt;/li&gt;&lt;li&gt;Adds &lt;code&gt;external-link&lt;/code&gt; class for &lt;code&gt;_blank&lt;/code&gt; link.
&lt;/li&gt;&lt;li&gt;Adds an escape for &lt;code&gt;$edit_url&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Changes &lt;code&gt;Ah error&lt;/code&gt; to &lt;code&gt;An error&lt;/code&gt; in a string.
&lt;/li&gt;&lt;li&gt;Changes &lt;code&gt;$result&lt;/code&gt; to &lt;code&gt;$updated&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds a test for the&lt;code&gt;wp_anonymize_comment&lt;/code&gt; filter, to prevent comment anonymization.
&lt;/li&gt;&lt;li&gt;Adds a test for the&lt;code&gt;wp_anonymize_comment&lt;/code&gt; filter, to prevent comment anonymization, with a custom message.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
ps: I wonder if we should rename &lt;code&gt;$num_items_removed&lt;/code&gt; to &lt;code&gt;$num_items_erased&lt;/code&gt; in general?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43442.6.diff attached to Ticket #43442</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 01:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43442/43442.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43442/43442.6.diff/1524187549794436</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43816 (Editing Image Can Lead to Mixed Metadata) updated</title>
      
        <dc:creator>rogerlos</dc:creator>

      <pubDate>Fri, 20 Apr 2018 00:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43816#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43816#comment:1/1524184437168587</guid>
      <description>&lt;p&gt;
I tested the change I suggested locally and it does (seem to) fix the issue.
&lt;/p&gt;
&lt;p&gt;
(I'll upload a patch if I get a chance in the next couple of days.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 20 Apr 2018 00:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:55/1524182734833146</guid>
      <description>&lt;p&gt;
Just a thought but it seems really odd that plugins, which are not allowed any longer to claim anything with regards to legal compliance on WordPress.org plugin directory readmes are now not just allowed, but tacitly encouraged to give pseudo-legal advice in the form of suggested additions to a privacy policy.
&lt;/p&gt;
&lt;p&gt;
What legal issues/liability does that potentially open plugin authors to, particularly with the current implementation that does not stress at all the suggestions are not to be construed as legal advice?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43816 (Editing Image Can Lead to Mixed Metadata) created</title>
      
        <dc:creator>rogerlos</dc:creator>

      <pubDate>Fri, 20 Apr 2018 00:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43816</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43816/1524182670595268</guid>
      <description>&lt;h2 id="Summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;
If an image is uploaded at a size allowing the creation of a defined image size (ie, "large", "twentyseventeen-featured-image", etc.) and the image is then edited to a size which doesn't allow that defined size to be created, the non-supported size can still be placed and will display the original image.
&lt;/p&gt;
&lt;h2 id="StepstoReproduce"&gt;Steps to Reproduce&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Upload an image which is slightly larger than a defined image size in a particular theme (for example, if using the WordPress default definition for "large" images, 1,024 pixels, upload an image 1,100 pixels wide)
&lt;/li&gt;&lt;li&gt;Edit the image, and scale or crop it to be 1,000 pixels wide
&lt;/li&gt;&lt;li&gt;Save edit
&lt;/li&gt;&lt;li&gt;Within the post editor, "add media", select the "large" image size, and place within body of post
&lt;/li&gt;&lt;/ol&gt;&lt;h3 id="ExpectedBehavior"&gt;Expected Behavior&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;Developer&lt;/em&gt;: The "large" image should not be able to be selected within the "Place Media" dialog
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Regular user&lt;/em&gt;: The "large" image placed should reflect the image edit
&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="Result"&gt;Result&lt;/h3&gt;
&lt;p&gt;
The "large" size is selectable and the &lt;strong&gt;original&lt;/strong&gt; image is placed within the page.
&lt;/p&gt;
&lt;h3 id="OtherEffects"&gt;Other Effects&lt;/h3&gt;
&lt;p&gt;
In this particular example, if the Media Library is in "grid" view, and our edited image is selected, the dialog which opens will display the incorrect original image, as the dialog preferentially uses the "large" image size.
&lt;/p&gt;
&lt;h2 id="SourceofBehavior"&gt;Source of Behavior&lt;/h2&gt;
&lt;p&gt;
I believe the problem stems from line 880 of &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/image-edit.php"&gt;https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/image-edit.php&lt;/a&gt; :
&lt;/p&gt;
&lt;pre class="wiki"&gt;$meta['sizes'] = array_merge( $meta['sizes'], $img-&amp;gt;multi_resize( $_sizes ) );
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;$meta['sizes']&lt;/code&gt; contains all of the sizes which were able to be created when the image was uploaded
&lt;/li&gt;&lt;li&gt;The return from &lt;code&gt;$img-&amp;gt;multi_resize()&lt;/code&gt; only has keys set for those sizes that can be created from the edited image
&lt;/li&gt;&lt;li&gt;Using &lt;code&gt;array_merge&lt;/code&gt; keeps the original values not returned by &lt;code&gt;$img-&amp;gt;multi_resize()&lt;/code&gt;, despite the fact they are no longer valid for this edit
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Fix"&gt;Fix&lt;/h2&gt;
&lt;p&gt;
I believe the fix may be as simple as simply returning the result of &lt;code&gt;$img-&amp;gt;multi_resize()&lt;/code&gt; without merging it into the existing &lt;code&gt;$meta['sizes']&lt;/code&gt;, which are mainly used in this context to create the &lt;code&gt;_wp_attachment_backup_sizes&lt;/code&gt; array.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$meta['sizes'] = $img-&amp;gt;multi_resize( $_sizes );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>