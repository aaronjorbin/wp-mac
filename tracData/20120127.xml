<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #17188 (Remove blog_id column from wp_options) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17188#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17188#comment:2/1327708611591189</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19909 (Appearance Improvements: An Overview) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:44:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19909#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19909#comment:2/1327707899254600</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19908 (PHP warnings in media listing) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19908#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19908#comment:3/1327707858965991</guid>
      <description>&lt;p&gt;
Kinda related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17736" title="#17736: defect (bug): Undefined Index in image-edit.php (closed: fixed)"&gt;#17736&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18749 (Remove "the hackiest hack that ever did hack" from add_user()) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18749#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18749#comment:8/1327707474042841</guid>
      <description>fixed: &lt;p&gt;
It's fine, but separate assignment is best general.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19908 (PHP warnings in media listing) updated</title>
      
        <dc:creator>dimitrov.adrian</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19908#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19908#comment:2/1327707436915521</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is only warnings that apear in above some of images (i can't track what exactly trigger the warning). So i can disable it while turn off php error reporting (and in productivity sites i do that).
I have default twentyeleven theme with no plugins, and few posts and attachments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu-order.patch attached to Ticket #19911</title>
      
        <dc:creator>nikolay.yordanov</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:29:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19911/menu-order.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19911/menu-order.patch/1327706979117882</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19909 (Appearance Improvements: An Overview) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19909#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19909#comment:1/1327706927339904</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19911 (Menu order not displayed properly for non-hierarchical post types in ...) created</title>
      
        <dc:creator>nikolay.yordanov</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:28:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19911/1327706925436174</guid>
      <description>&lt;p&gt;
It is possible to register a non-hierarchical post type with support for page-attributes. This adds a menu order field in the post editor and the inline editor. While everything is working as expected in the post editor, when using the inline editor the menu order in the inline editor is always shown as 0. It is possible, however, to edit it and the changes are visible in the normal editor.
&lt;/p&gt;
&lt;p&gt;
The problem is that the correct menu order is displayed only when the post type is hierarchical. Moreover, the inline-edit-post script updates the menu order only for pages. The attached patch fixes this issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19910 (Appearance Improvements: Theme Customization Frame) created</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19910/1327706851143554</guid>
      <description>&lt;p&gt;
&lt;em&gt;For context, see the appearance umbrella ticket: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19909" title="#19909: task (blessed): Appearance Improvements: An Overview (closed: fixed)"&gt;#19909&lt;/a&gt;&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Building a frame to house the customization UI and theme preview is the first step to improving the theme customization process. This will be the first iteration for my team (myself and ocean90). Once the frame is in place, we'll add components to the UI one by one (e.g. custom headers, backgrounds, etc).
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Add an iframe that can preview any theme (call this the target theme).
&lt;/li&gt;&lt;li&gt;Add a sidebar to house future UI.
&lt;ol class="loweralpha"&gt;&lt;li&gt;Temporarily activate the target theme when building the sidebar UI.
&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Add an API to communicate with the iframe.
&lt;ol class="loweralpha"&gt;&lt;li&gt;Pass data to the iframe.
&lt;/li&gt;&lt;li&gt;Refresh the iframe (likely via post).
&lt;/li&gt;&lt;li&gt;Refresh the iframe's CSS (via postMessage).
&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Add a temporary UI to demonstrate the API.
&lt;ol class="loweralpha"&gt;&lt;li&gt;Buttons that refresh and make trivial changes to the iframe.
&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Add a save action (that, by default, will do nothing).
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19909 (Appearance Improvements: An Overview) created</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 23:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19909/1327706520914899</guid>
      <description>&lt;p&gt;
The main target for the 3.4 appearance improvements will create a UI that allows users to simultaneously customize and preview their theme. Our initial target will be the theme switching process (in an a la carte fashion), which will then hopefully expand to more uses in the WordPress admin.
&lt;/p&gt;
&lt;p&gt;
I'll update this ticket periodically with additional details. We'll have several teams working on different portions of the project simutaneously. See &lt;a class="ext-link" href="http://wpdevel.wordpress.com/version-3-4-project-teams-and-status/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this post&lt;/a&gt; for more details on the 3.4 teams.
&lt;/p&gt;
&lt;p&gt;
The customization UI will be built in several phases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19910" title="#19910: task (blessed): Appearance Improvements: Theme Customization Frame (closed: fixed)"&gt;#19910&lt;/a&gt;: Build theme customization frame – &lt;em&gt;koopersmith and ocean90&lt;/em&gt;
&lt;ul&gt;&lt;li&gt;This consists of a UI that can communicate with and refresh a preview of any theme.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Add additional components to the frame (likely in this order)
&lt;ul&gt;&lt;li&gt;Custom background.
&lt;/li&gt;&lt;li&gt;Custom header.
&lt;/li&gt;&lt;li&gt;Menu locations.
&lt;/li&gt;&lt;li&gt;Widget locations.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Create configure/activate workflow within the frame
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Other Appearance Improvements&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Custom headers – &lt;em&gt;aaroncampbell and sabreuse&lt;/em&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17242" title="#17242: task (blessed): Themes: Allow flexible sizes for custom header uploads (closed: fixed)"&gt;#17242&lt;/a&gt;: Flexible heights for custom headers.
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19840" title="#19840: task (blessed): Select custom header or background images from media library (closed: fixed)"&gt;#19840&lt;/a&gt;: Use images from your media library.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Improved theme browser – &lt;em&gt;DH-Shredder and helenyhou&lt;/em&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19815" title="#19815: task (blessed): Theme install and search screens should infinitely scroll (closed: fixed)"&gt;#19815&lt;/a&gt;: Infinite scroll when browsing themes.
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19816" title="#19816: enhancement: Theme details should be able to include multiple screenshots (closed: duplicate)"&gt;#19816&lt;/a&gt;: Support multiple screenshots per theme.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19912" title="#19912: feature request: Add Widget Groups and Locations (closed: maybelater)"&gt;#19912&lt;/a&gt;: Widget locations API.
&lt;/li&gt;&lt;li&gt;General menu UI improvements.
&lt;/li&gt;&lt;li&gt;General widget UI improvements.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14024 (Insufficient permissions error after activating plugins) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 27 Jan 2012 22:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14024#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14024#comment:20/1327703004217252</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14024#comment:18" title="Comment 18"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19599" title="#19599: task (blessed): Localizations should not need to worry about the default secret key (closed: fixed)"&gt;#19599&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19771" title="Provide a DB fallback for keys in wp_salt(). Fall back when any secret ..."&gt;[19771]&lt;/a&gt;. This will no longer break in localized builds.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; worth it at this point?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be consistent with the messages added in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11526" title="#11526: defect (bug): JavaScript l10n inconsistency (closed: fixed)"&gt;#11526&lt;/a&gt;. However, if there are no more issues with calling &lt;code&gt;wp_get_current_user()&lt;/code&gt; too early, maybe it's not really necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 27 Jan 2012 22:19:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:17/1327702797351405</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19772" title="Load the new admin and network admin mo files, if present. see #19852"&gt;[19772]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Load the new admin and network admin mo files, if present. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19852" title="#19852: task (blessed): Don't load admin strings on the frontend (closed: fixed)"&gt;#19852&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [19772]: Load the new admin and network admin mo files, if present. see #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 27 Jan 2012 22:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19772</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19772/1327702796479986</guid>
      <description>&lt;p&gt;
Load the new admin and network admin mo files, if present. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19852" title="#19852: task (blessed): Don't load admin strings on the frontend (closed: fixed)"&gt;#19852&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 27 Jan 2012 21:31:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:15/1327699867083866</guid>
      <description>&lt;p&gt;
I just ran these queries on eMusic's production database cluster. Our wp_comments table (InnoDB) has only 300,000 rows -
&lt;/p&gt;
&lt;p&gt;
original query: 161ms
5 queries: 98.2ms
&lt;/p&gt;
&lt;p&gt;
I think most large-scale MySQL users are defaulting to InnoDB, if for no reason other than row-level locking. Facebook swears by InnoDB and their MySQL perf team is focusing a lot on InnoDB row cache and InnoDB buffer pool for Timeline (which is stored in MySQL).
&lt;/p&gt;
&lt;p&gt;
This is a nice improvement, but there are way more dangerous queries in core related to full-table scans of LONGTEXT columns. Our wp_usermeta table has 11,000,000 rows and gets pounded by them - but that's off-topic...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19852.3.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 27 Jan 2012 21:23:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852.3.diff/1327699421819799</guid>
      <description>&lt;p&gt;
Now with less bugs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19852.2.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 27 Jan 2012 21:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852.2.diff/1327699174711809</guid>
      <description>&lt;p&gt;
ms- back compat. Load admin-network- instead of network-admin-
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14024 (Insufficient permissions error after activating plugins) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 20:56:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14024#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14024#comment:19/1327697813138962</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Changing component as this is no longer an i18n issue, but a "best practice" issue. With &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19599" title="#19599: task (blessed): Localizations should not need to worry about the default secret key (closed: fixed)"&gt;#19599&lt;/a&gt; fixed, I am not sure if anything else can break if you calculate the current user prior to init.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14024 (Insufficient permissions error after activating plugins) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 20:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14024#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14024#comment:18/1327697677977317</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19599" title="#19599: task (blessed): Localizations should not need to worry about the default secret key (closed: fixed)"&gt;#19599&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19771" title="Provide a DB fallback for keys in wp_salt(). Fall back when any secret ..."&gt;[19771]&lt;/a&gt;. This will no longer break in localized builds. Is a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; worth it at this point?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19497 (The 'My Sites' menu is redundant for users with just one site) updated</title>
      
        <dc:creator>ciantic</dc:creator>

      <pubDate>Fri, 27 Jan 2012 20:53:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19497#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19497#comment:7/1327697586836526</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19908 (PHP warnings in media listing) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 20:47:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19908#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19908#comment:1/1327697223334252</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi, can we have some steps to reproduce? These notices indicate that image_get_intermediate_size() is being called with incorrect arguments. If you are passing $size as an array, it needs to be &lt;code&gt;array( $width, $height )&lt;/code&gt;, where $width and $height are integers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19908 (PHP warnings in media listing) created</title>
      
        <dc:creator>dimitrov.adrian</dc:creator>

      <pubDate>Fri, 27 Jan 2012 20:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19908/1327696967977606</guid>
      <description>&lt;p&gt;
Notice: Uninitialized string offset: 0 in /var/www/wptest/wp-includes/media.php on line 537
Notice: Uninitialized string offset: 0 in /var/www/wptest/wp-includes/media.php on line 537
Notice: Uninitialized string offset: 0 in /var/www/wptest/wp-includes/media.php on line 543
Notice: Uninitialized string offset: 0 in /var/www/wptest/wp-includes/media.php on line 543
Notice: Uninitialized string offset: 0 in /var/www/wptest/wp-includes/media.php on line 550
Notice: Uninitialized string offset: 0 in /var/www/wptest/wp-includes/media.php on line 550
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17242 (Themes: Allow flexible sizes for custom header uploads) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Fri, 27 Jan 2012 20:30:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17242#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17242#comment:36/1327696242135545</guid>
      <description>&lt;p&gt;
17242.4.diff is a first pass with a helper function.
&lt;/p&gt;
&lt;p&gt;
ISSUES:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;As of now, it's only testing for either of an old-school non-flex header with a fixed height, or a resized header -- it won't check in the case that a theme supports flex headers but one hasn't been set yet.
&lt;/li&gt;&lt;li&gt;Next pass, I'll move the check out of the function so we don't run it on non-flex themes.
&lt;/li&gt;&lt;li&gt;We also talked a bit in IRC about grabbing the attachment ID so we don't have to query the db every time.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>17242.4.diff attached to Ticket #17242</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Fri, 27 Jan 2012 20:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17242/17242.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17242/17242.4.diff/1327695981557896</guid>
      <description>&lt;p&gt;
First pass at using a helper function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19599 (Localizations should not need to worry about the default secret key) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 18:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19599#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19599#comment:7/1327690341267517</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19771" title="Provide a DB fallback for keys in wp_salt(). Fall back when any secret ..."&gt;[19771]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Provide a DB fallback for keys in wp_salt(). Fall back when any secret is used more than once. Change how we detect a localized 'put your unique phrase here' -- eliminate $wp_default_secret_key and introduce $wp_secret_key_default to be added during the localized build process, not by translators. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19599" title="#19599: task (blessed): Localizations should not need to worry about the default secret key (closed: fixed)"&gt;#19599&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19771]: Provide a DB fallback for keys in wp_salt(). Fall back when any secret ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 18:52:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19771</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19771/1327690340397180</guid>
      <description>&lt;p&gt;
Provide a DB fallback for keys in wp_salt(). Fall back when any secret is used more than once. Change how we detect a localized 'put your unique phrase here' -- eliminate $wp_default_secret_key and introduce $wp_secret_key_default to be added during the localized build process, not by translators. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19599" title="#19599: task (blessed): Localizations should not need to worry about the default secret key (closed: fixed)"&gt;#19599&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 27 Jan 2012 18:40:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:14/1327689622149940</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:4" title="Comment 4"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this with myisam or innodb?  innodb will count the rows and possibly be slower.
For the last query that doesn't have a WHERE.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Tested on standard MyISAM, which is what we should be optimizing for. Can you test on one of the big wpcom InnoDB comment tables and post numbers? Be sure to query with &lt;code&gt;SELECT SQL_NO_CACHE ...&lt;/code&gt; to disable qcache.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With 2,488,928 rows and the comments table on SSDs, the old query ran in 1.2449 seconds. With the new way, the last query alone takes 1.9485 seconds.  Given that someone with this many rows will probably be using innodb instead of myisam to avoid table locking difficulties, the new queries make things worse.  Further, MySQL 5.6 defaults to innodb. Of course, no one uses that yet. :-)
&lt;/p&gt;
&lt;p&gt;
That's not to say the patch shouldn't go in. Just keep it in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16892 (make_clickable segfault) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 27 Jan 2012 18:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16892#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16892#comment:24/1327687947435348</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19599.2.diff attached to Ticket #19599</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 17:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19599/19599.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19599/19599.2.diff/1327687119056999</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19599 (Localizations should not need to worry about the default secret key) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 17:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19599#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19599#comment:6/1327687109565724</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19599/19599.2.diff" title="Attachment '19599.2.diff' in Ticket #19599"&gt;19599.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19599/19599.2.diff" title="Download"&gt;​&lt;/a&gt; rewrites wp_salt().
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;DB fallback is provided for the eight main keys and salts, and also SECRET_KEY, since it is used for custom schemes.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;If any two keys or salts match in value, the fallback is triggered.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;If any key or salt matches 'put your unique phrase here', the fallback is triggered.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Now, local builds. We want to eliminate the need for $locale.php files, so we want to avoid $wp_default_secret_key. Additionally, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14024" title="#14024: defect (bug): Insufficient permissions error after activating plugins (closed: fixed)"&gt;#14024&lt;/a&gt; has caused translators to instead override default-constants.php. This is even less desirable.
&lt;/p&gt;
&lt;p&gt;
Point 2 ensures that a localized 'put your unique phrase here' only works if the value is used exactly once — say, if the other 7 are properly unique. However, it could also be that the only one defined is SECRET_KEY (perhaps the install started with 2.5), and either way, we should try to mitigate this.
&lt;/p&gt;
&lt;p&gt;
So, Point 4: For 3.4 localized builds, we will append $wp_secret_key_default to version.php, the same way we append $wp_local_package to version.php. We will use this variable to ensure that for all fresh local installs of 3.4 or higher will end up covered.
&lt;/p&gt;
&lt;p&gt;
For installs prior to 3.4, we cannot use the existing $wp_default_secret_key, as otherwise we will re-introduce &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14024" title="#14024: defect (bug): Insufficient permissions error after activating plugins (closed: fixed)"&gt;#14024&lt;/a&gt;. again, point 2 is strong enough to mitigate any issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19906 (Quicktags docs recommend code causing JS error: Uncaught ...) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 27 Jan 2012 17:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19906#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19906#comment:3/1327685731816072</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
clarification in the inline docs because right now it encourages something that throws a javascript error which causes all kinds of havoc.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You could interpret it this way, but if you do, this basically is valid for all documentation in WP. You would actually have to add a similar warning to the docs of many other JS objects or even PHP functions that are in core. IMHO, that's "over-documenting".
(And as you mentioned the wiki: This would probably be the more appropriate place for this hint/warning.)
&lt;/p&gt;
&lt;p&gt;
So, to correct way simply is to load your JS only on pages where you know that the prerequisites (here for quicktags) are fulfilled: For core, this would be post.php and post-new.php (for post types that have support for the editor), and on your own plugin's screens, this would be all screens where you actually load a wp_editor() yourself.
&lt;/p&gt;
&lt;p&gt;
Now, as your intention seems to be to add a button to *all* wp_editors() that there are (which I'm not sure is good thing to do), a typeof undefined check would indeed be in order, and I fully support and encourage it. I just doubt that it has to be recommended in the docs, as most plugins won't need it, if they load their scripts in the proper way, and only for certain wp_editor() instances.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19907 (Updating an unpublished draft post in quick-edit mode sets the post's ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 27 Jan 2012 17:33:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19907#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19907#comment:2/1327685615727966</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Has been this way since Quick Edit was introduced in 2.7 (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8144" title="#8144: defect (bug): Implement new design of Quick/Bulk Edit (closed: fixed)"&gt;#8144&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
The problem is that &lt;code&gt;edit_date&lt;/code&gt; is true by default:&lt;br /&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3.1/wp-admin/js/inline-edit-post.dev.js#L238"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.3.1/wp-admin/js/inline-edit-post.dev.js#L238&lt;/a&gt; &lt;br /&gt;
And the condition for &lt;code&gt;$clear_date&lt;/code&gt; in &lt;code&gt;wp_update_post()&lt;/code&gt; is not satisfied:&lt;br /&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3.1/wp-includes/post.php#L2693"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.3.1/wp-includes/post.php#L2693&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19907/19907.patch" title="Attachment '19907.patch' in Ticket #19907"&gt;19907.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19907/19907.patch" title="Download"&gt;​&lt;/a&gt; brings the similar check and comment into &lt;code&gt;edit_post()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19907/19907.2.patch" title="Attachment '19907.2.patch' in Ticket #19907"&gt;19907.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19907/19907.2.patch" title="Download"&gt;​&lt;/a&gt; sets &lt;code&gt;edit_date&lt;/code&gt; to false (doesn't touch &lt;code&gt;post_date_gmt&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19907.2.patch attached to Ticket #19907</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 27 Jan 2012 17:30:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19907/19907.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19907/19907.2.patch/1327685438273791</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>19907.patch attached to Ticket #19907</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 27 Jan 2012 17:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19907/19907.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19907/19907.patch/1327684156873992</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19906 (Quicktags docs recommend code causing JS error: Uncaught ...) reopened</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Fri, 27 Jan 2012 16:42:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19906#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19906#comment:2/1327682558288288</guid>
      <description>&lt;p&gt;
Hi Tobias, thanks for replying, but I don't think we should close this ticket. Whether your solution works or not, I think there is still a need for clarification in the inline docs because right now it encourages something that throws a javascript error which causes all kinds of havoc.
&lt;/p&gt;
&lt;p&gt;
We should decide on the clearest solution and refer to it in the docs and on the wiki.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the solution is much easier: You'll just need to enqueue the "quicktags" script before you add your footer print action. There's no need to enqueue a script that *depends*, you just enqueue "quicktags" directly.
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script( 'quicktags' );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
This solution involves using two hooked functions instead of just one right? That's how I got it working but not really how you made it sound. Two hooked functions on the same hook seems unnecessarily complicated to me, though I can see how it is simpler for people who don't know JS at all and just want to use standard WP-PHP. Notably though, this method doesn't seem to work if you use the &lt;code&gt;admin_print_footer_scripts&lt;/code&gt; instead of &lt;code&gt;wp_footer&lt;/code&gt;, so if this is the official solution we need to be clear in the docs that you must use &lt;code&gt;wp_footer&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The script would only be loaded on all pages if you don't use the correct hooks. Script enqueuing should only be done when you know that you are on your plugin's admin screen, e.g. in "load-{$plugin_hook}".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The quicktags are intended for anything with &lt;code&gt;wp_editor()&lt;/code&gt;, not for a specific plugin screen, so we can't assume that people will know what screen they want to add it to. In theory we could tell people all the different screens/conditionals that would imply the presence of an editor, but with the increasing proliferation of &lt;code&gt;wp_editor()&lt;/code&gt; the buttons might be needed just about anywhere. If we go the route of telling people to enqueue quicktags we will pretty much have to tell them to enqueue it everywhere just in case, which is a waste IMHO.
&lt;/p&gt;
&lt;p&gt;
It seems like a good solution would be to just define the buttons all the time as long as it doesn't break anything when there's no editor, they don't take up much space after all. Checking if &lt;code&gt;QTags&lt;/code&gt; is defined is a simple way to neutralize the javascript without having to worry about every possible scenario where it would be needed.
&lt;/p&gt;
&lt;p&gt;
Is there some way to know if &lt;code&gt;wp_editor()&lt;/code&gt; was called during the current pageload? If we could know that with PHP then that would be the ideal solution, as it would truly be just one line of code in the &lt;code&gt;admin_print_footer_scripts&lt;/code&gt; action to determine whether to output the button definitions or not. Alternately a footer hook that only fires if the editor was used during the current page, though that seems more convoluted than necessary.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>phbrowne</dc:creator>

      <pubDate>Fri, 27 Jan 2012 16:06:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:61/1327680386494692</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Upgraded to 3.3.1 and still having timeout issues.  I have WP Multisite with about 33 subfolder sites installed.  We started having the problem shortly after install in September 2011 on WP 3.2.1.  Each site has a menu structure.  Most sites have about 10 menu items, but some have more (one site has approx 30).  Shortly after install, on the large menu site, they could no longer edit their menu, so I created 5 separate menus and stacked them in the sidebar using widgets.  Fast forward a couple of months and we can't edit any menu item.  Everything times out after exactly 3 minutes.  Error message is as follows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[Wed Jan 25 18:26:54 2012] [error] [client 66.249.67.239] Request exceeded the limit of 10 internal redirects due to probable configuration error. Use 'LimitInternalRecursion' to increase the limit if necessary. Use 'LogLevel debug' to get a backtrace.
&lt;/pre&gt;&lt;p&gt;
The only thing that varies is the client IP address - there seems to be 3-4 different ones that pop over over the course of 60+ pages of error logs.
&lt;/p&gt;
&lt;p&gt;
Now, we are also getting timeouts when we try to create a post.  The post will timeout (after 3 minutes) and it appears to fail.  But when you go back and view the list of posts, it's there.
&lt;/p&gt;
&lt;p&gt;
Hosted on GoDaddy (please don't throw rocks...)
&lt;/p&gt;
&lt;p&gt;
Here is copy of .htaccess pretty vanilla WP MS install version
&lt;/p&gt;
&lt;pre class="wiki"&gt;# BEGIN WordPress
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# uploaded files
RewriteRule ^([_0-9a-zA-Z-]+/)?files/(.+) wp-includes/ms-files.php?file=$2 [L]
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ $1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule  ^[_0-9a-zA-Z-]+/(wp-(content|admin|includes).*) $1 [L]
RewriteRule  ^[_0-9a-zA-Z-]+/(.*\.php)$ $1 [L]
RewriteRule . index.php [L]
# END WordPress
&lt;/pre&gt;&lt;pre class="wiki"&gt;
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
And here is a copy of PHP.ini which I modified to add time and memory per different online posts about solving this problem.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;register_globals = off
allow_url_fopen = off
expose_php = Off
max_execution_time = 600
max_input_time = 600
memory = 20MB
memory_limit = 256M
variables_order = "EGPCS"
extension_dir = ./
upload_tmp_dir = /tmp
precision = 12
SMTP = relay-hosting.secureserver.net
url_rewriter.tags = "a=href,area=href,frame=src,input=src,form=,fieldset="
; Only uncomment zend optimizer lines if your application requires Zend Optimizer support
;[Zend]
;zend_optimizer.optimization_level=15
;zend_extension_manager.optimizer=/usr/local/Zend/lib/Optimizer-3.3.3
;zend_extension_manager.optimizer_ts=/usr/local/Zend/lib/Optimizer_TS-3.3.3
;zend_extension=/usr/local/Zend/lib/Optimizer-3.3.3/ZendExtensionManager.so
;zend_extension_ts=/usr/local/Zend/lib/Optimizer_TS-3.3.3/ZendExtensionManager_TS.so
; -- Be very careful to not to disable a function which might be needed!
; -- Uncomment the following lines to increase the security of your PHP site.
;disable_functions = "highlight_file,ini_alter,ini_restore,openlog,passthru,
;		      phpinfo, exec, system, dl, fsockopen, set_time_limit,
;                     popen, proc_open, proc_nice,shell_exec,show_source,symlink"
&lt;/pre&gt;&lt;p&gt;
I don't consider my site anything that exotic - and even the one long menu isn't completely outrageous.  Where is WP with a fix on this?  Any thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19907 (Updating an unpublished draft post in quick-edit mode sets the post's ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 15:11:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19907#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19907#comment:1/1327677063771198</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19907 (Updating an unpublished draft post in quick-edit mode sets the post's ...) created</title>
      
        <dc:creator>uxtremist</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19907/1327675892357703</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Problem:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you update an unpublished draft post in quick-edit mode, the post's &lt;em&gt;publish date&lt;/em&gt; is saved. &lt;br /&gt;
&lt;/li&gt;&lt;li&gt;Then, later on, when you actually publish the post, its publish date is incorrect.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Suggested fix:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the post is a draft, do not automatically set the post's publish date in quick-edit mode.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Steps to reproduce:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
(1) Go to WP-Admin -&amp;gt; Posts.
&lt;/p&gt;
&lt;p&gt;
(2) Create and save a new post. Make sure you click "Save Draft" — not "Publish".
&lt;/p&gt;
&lt;p&gt;
(3) Note that the post is marked as "Publish immediately"; that is, it has no publish date.
&lt;/p&gt;
&lt;p&gt;
(4) Go back to WP-Admin -&amp;gt; Posts.
&lt;/p&gt;
&lt;p&gt;
(5) Hover your pointer over the post you just created. Click "Quick Edit".
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
— Note that in the panel that appears, the "Date" field is automatically set to [the current date and time].
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(6) Click "Update" in quick-edit mode.
&lt;/p&gt;
&lt;p&gt;
(7) Hover your pointer over the post you just updated. Click "Edit".
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
— Note that in the Edit Post page that appears, the post is now marked as "Publish on: [the date and time from step (5)]"
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [19770]: POT, generated from r19767</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19770/1327675699769064</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19767" title="POT, generated from r19762"&gt;r19767&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [19769]: POT, generated from r19767</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19769/1327675697578391</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19767" title="POT, generated from r19762"&gt;r19767&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [19768]: POT, generated from r19767</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:48:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19768/1327675696004856</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19767" title="POT, generated from r19762"&gt;r19767&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [19767]: POT, generated from r19762</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19767/1327674545045672</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19762" title="Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327."&gt;r19762&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [19766]: POT, generated from r19762</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19766/1327674540420504</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19762" title="Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327."&gt;r19762&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [19765]: POT, generated from r19762</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19765/1327674538372190</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19762" title="Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327."&gt;r19762&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [19764]: POT, generated from r19762</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:28:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19764/1327674536352050</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19762" title="Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327."&gt;r19762&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [19763]: POT, generated from r19762</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Fri, 27 Jan 2012 14:28:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19763/1327674534566171</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19762" title="Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327."&gt;r19762&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Fri, 27 Jan 2012 13:19:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:13/1327670340061771</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17275" title="#17275: enhancement: UI: Missing comments count in admin screen (closed: fixed)"&gt;#17275&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14222 (Improve dashboard recent comments widget performance by not fetching ...) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Fri, 27 Jan 2012 13:15:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14222#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14222#comment:21/1327670122396895</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17275" title="#17275: enhancement: UI: Missing comments count in admin screen (closed: fixed)"&gt;#17275&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16892 (make_clickable segfault) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 27 Jan 2012 11:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16892#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16892#comment:23/1327662103458860</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@duck_ could you take a look at this and see if it is suitable for 3.4 inclusion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19906 (Quicktags docs recommend code causing JS error: Uncaught ...) closed</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 27 Jan 2012 10:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19906#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19906#comment:1/1327660572620228</guid>
      <description>invalid: &lt;p&gt;
Hi Jeremy,
&lt;/p&gt;
&lt;p&gt;
the solution is much easier: You'll just need to enqueue the "quicktags" script before you add your footer print action. There's no need to enqueue a script that *depends*, you just enqueue "quicktags" directly.
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script( 'quicktags' );
&lt;/pre&gt;&lt;p&gt;
This works because "output_my_js" is hooked with a priority of 100, so this will be done after all the footer scripts (including "quicktags" then) will have been included.
&lt;/p&gt;
&lt;p&gt;
And about this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The issue is avoided if you use the other option, enqueuing a script dependent on 'quicktags', but that is a lot more work and forces all pages in the admin to load the quicktags script unnecessarily.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The script would only be loaded on all pages if you don't use the correct hooks. Script enqueuing should only be done when you know that you are on your plugin's admin screen, e.g. in "load-{$plugin_hook}".
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 27 Jan 2012 10:27:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:12/1327660075883349</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14222" title="#14222: defect (bug): Improve dashboard recent comments widget performance by not fetching ... (closed: fixed)"&gt;#14222&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18429 (Create custom post types via XMLRPC) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Fri, 27 Jan 2012 09:20:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18429#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18429#comment:7/1327656009939324</guid>
      <description>&lt;p&gt;
I know mw_newPost looked a lot at your patch. With the patch I wrote I tried to make the code as simple as I found needed. To have a discussing about what needs to be checked on the client side and what on the XML-RPC side.
&lt;/p&gt;
&lt;p&gt;
The reason I removed checks on page templates and hierarchical post is because I think the client should check for it.
&lt;/p&gt;
&lt;p&gt;
I did discussed with westi about checking of post_parent. Reason that is removed is because post_parent doesn't have to be of the same post_type. Something that happens with media item. From that point I also removed checking if a post is hierarchical.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 09:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:11/1327655418571097</guid>
      <description>&lt;p&gt;
We can also speed up comment queries in "count" mode (i.e. the mode where it just returns the count) if we determine that the query type is one that is handled by &lt;code&gt;wp_count_comments()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Example, within &lt;code&gt;WP_Comment_Query::query()&lt;/code&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;		if ( $count ) {
			if ( $clauses['join']   == '' &amp;amp;&amp;amp;
			     $clauses['where']  == "( comment_approved = '0' OR comment_approved = '1' )" &amp;amp;&amp;amp;
			     $clauses['limits'] == '' ) {
				// We can return a much faster result for this specific case (default view)
				return wp_count_comments()-&amp;gt;approved + wp_count_comments()-&amp;gt;moderated;
			}
			return $wpdb-&amp;gt;get_var( $query );
		}
&lt;/pre&gt;&lt;p&gt;
That query can also take a few seconds with a large number of queries.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19858 (Close comments on attached images) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 27 Jan 2012 09:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19858#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19858#comment:4/1327655249994665</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8177" title="#8177: defect (bug): Comments disabled in post but not in media gallery (closed: wontfix)"&gt;#8177&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9839" title="#9839: defect (bug): Enable/Disable comments on a per item bases. (closed: duplicate)"&gt;#9839&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 27 Jan 2012 06:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:99/1327644508251346</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18429 (Create custom post types via XMLRPC) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 27 Jan 2012 02:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18429#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18429#comment:6/1327631789636222</guid>
      <description>&lt;p&gt;
We need to check all the parameters in and return proper error messages to the client.
For example a post type may/may not support hierarchical post.
We need to check within the function itself.
wp_insert_post does not handle this
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18429 (Create custom post types via XMLRPC) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 27 Jan 2012 02:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18429#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18429#comment:5/1327631092715177</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18429#comment:4" title="Comment 4"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
In XMRPC we are adopting the same behaviour as in the WordPress backend.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should we have a default post_status or do we really need to return an error
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
In the back end they do have a default post status for posts. So yes!!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should we generate an error if page templates aren't supported
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I think yes. The client must know whether the request is valid
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should we generate an error on invalid comment status or ping status
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Again  yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Not sure about the implementation of post_more. Shouldn't the client handle this instead of the xml-rpc?
&lt;/li&gt;&lt;li&gt;Shouldn't the checks after wp_insert_post not be before it. Sounds like it can give weird situation
&lt;/li&gt;&lt;li&gt;Do we need the "handle enclosures" code in the end of the function. Shouldn't this be a separate function?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
This method is largely influenced by mw_newPost() for consistency and backward capability. So i adopted the same behaviour
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 02:24:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:10/1327631060927544</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Took a swing at it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19901.diff attached to Ticket #19901</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 02:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19901/19901.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19901/19901.diff/1327630994568317</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 02:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903#comment:7/1327630695364304</guid>
      <description>&lt;p&gt;
Or, as a fourth option, do what is proposed in the ticket description — keep both functions and have wp_count_comments() wrap and cache get_comments_count() (and have that function's SQL changed in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/19901" title="#19901: enhancement: Speeding up Dashboard and Comment moderation SQL load (accepted)"&gt;#19901&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 02:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903#comment:6/1327630589672583</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19903#comment:5" title="Comment 5"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe. Unless people are using it to get "hot" data from the database. The cached counts might sometimes be wrong.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If getting hot data from the database is a valid use case, then we shouldn't deprecate it, even if the function isn't used by core. Otherwise, we should either ensure that the cache is invalidated, modify any cached data directly when wp_update_comment_count() is called, or decide that the non-persistence of the counts cache group is enough to ensure that the data is warm enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 02:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903#comment:5/1327630286951663</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixing the description to note that wp_count_comments() returns an object.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could the deprecated version become a wrapper for wp_count_comments()? We'd simply need to rename the returned array keys.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe. Unless people are using it to get "hot" data from the database. The cached counts might sometimes be wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 01:52:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903#comment:4/1327629142414937</guid>
      <description>&lt;p&gt;
Could the deprecated version become a wrapper for wp_count_comments()? We'd simply need to rename the returned array keys.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 01:50:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903#comment:3/1327629043990909</guid>
      <description>&lt;p&gt;
Patch deprecates &lt;code&gt;get_comment_count()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19903.diff attached to Ticket #19903</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 01:49:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19903/19903.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19903/19903.diff/1327628952941280</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 01:37:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:9/1327628275484160</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:3" title="Comment 3"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plugins can set comment_status to anything. I think we'd need to introduce comment status registration, like we do with post status.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could do. But until then, it's not a big deal if the "approved" number contains any custom ones. We really don't support custom comment_approved statuses... I think I tried doing it once and there were multiple places where it broke. So I don't think that concern should hold us back on improving count performance.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:4" title="Comment 4"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this with myisam or innodb?  innodb will count the rows and possibly be slower.
For the last query that doesn't have a WHERE.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Tested on standard MyISAM, which is what we should be optimizing for. Can you test on one of the big wpcom InnoDB comment tables and post numbers? Be sure to query with &lt;code&gt;SELECT SQL_NO_CACHE ...&lt;/code&gt; to disable qcache.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:6" title="Comment 6"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, a hack I've seen done for sites with millions of comments and high comment volume is to just not do the count queries.  Comment counts become rather meaningless for such sites.  Maybe worth a throttle or don't care switch. Maybe not.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We already have one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$stats = apply_filters('wp_count_comments', array(), $post_id);
	if ( !empty($stats) )
		return $stats;
&lt;/pre&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:7" title="Comment 7"&gt;coffee2code&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any performance difference in doing an &lt;code&gt;IN()&lt;/code&gt; as opposed to separate queries?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved IN ( 'trash', 'spam', '0', 'post-trash' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Could then throw a filter on the comment statuses prior to inclusion in the &lt;code&gt;IN()&lt;/code&gt; so non-public comments can be omitted.  Which somewhat ties in with...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That only gives you the total. We need the count for each comment_approved status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jan 2012 01:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903#comment:2/1327627703815176</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wouldn't it make better sense to simply get rid of get_comment_count and make wp_count_comments count in the optimised way
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, probably would. I think I was just thinking we needed both because I'd assumed that core needed the non-cached one, which isn't the case... it doesn't use it at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19762-quicktags-docblock.diff attached to Ticket #19906</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Fri, 27 Jan 2012 01:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19906/19762-quicktags-docblock.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19906/19762-quicktags-docblock.diff/1327626371460958</guid>
      <description>&lt;p&gt;
update qt.addButton() dockblock in quicktags.dev.js
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19906 (Quicktags docs recommend code causing JS error: Uncaught ...) created</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Fri, 27 Jan 2012 01:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19906/1327626344286669</guid>
      <description>&lt;p&gt;
Right now the docs for qt.addbutton in quicktags.dev.js have the following text:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	 * If you are echoing JS directly from PHP,
	 * use add_action( 'admin_print_footer_scripts', 'output_my_js', 100 ) or add_action( 'wp_footer', 'output_my_js', 100 )
&lt;/pre&gt;&lt;p&gt;
This works, but if you add the QTags.addButton() calls on those hooks then they will cause JS errors on any screen without an editor:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Uncaught ReferenceError: QTags is not defined&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The issue is avoided if you use the other option, enqueuing a script dependent on 'quicktags', but that is a lot more work and forces all pages in the admin to load the quicktags script unnecessarily.
&lt;/p&gt;
&lt;p&gt;
Maybe there is some way to magically make calling QTags.addbutton() safe no matter what, but I think at minimum we need to add a note to the PHPdoc about checking QTags before using it, as that solves the problem pretty simply:
&lt;/p&gt;
&lt;pre class="wiki"&gt; if ( typeof QTags != 'undefined' ) {
	QTags.addButton( 'gv_translation', 'translation', '&amp;lt;div class="translation"&amp;gt;', '&amp;lt;/div&amp;gt;' );
}
&lt;/pre&gt;&lt;p&gt;
So the phodoc could say :
&lt;/p&gt;
&lt;pre class="wiki"&gt;	 * If you are echoing JS directly from PHP use
	 *	add_action( 'admin_print_footer_scripts', 'output_my_js', 100 )
	 * or
	 *	add_action( 'wp_footer', 'output_my_js', 100 )
	 *
	 * If echoing the addButton calls directly instead of enqueing with the 'quicktags' dependency
	 * make sure to check that the QTags object is defined first, otherwise your code will throw errors
	 * when no editor is present:
	 *	if ( typeof QTags != 'undefined' ) { QTags.addButton(...) }
	 *
&lt;/pre&gt;&lt;p&gt;
The attached patch just adds that to the docs. If a committer has a preferred wording then just use that instead, obviously the patch didn't take me long :)
&lt;/p&gt;
&lt;p&gt;
BTW: I created a Codex article with the docblock after not finding a reference to the new API anywhere other than in the JS file itself. Nacin's posts mentioned that they had changed but not what was new ;)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Quicktags_API"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Quicktags_API&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Clearly it needs work, I didn't want to put too much time into it at first because I didn't understand the system yet (as I'm learning now, by finding JS errors).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19904 (Trim Leading and Trailing White Space in a Post Title) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 27 Jan 2012 00:55:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19904#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19904#comment:3/1327625701733653</guid>
      <description>&lt;p&gt;
We already do this on display, so one of the few places you would indeed see this is ordering.
&lt;/p&gt;
&lt;p&gt;
This would handle it: &lt;code&gt;add_filter( 'trim', 'title_save_pre' );&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19904 (Trim Leading and Trailing White Space in a Post Title) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 27 Jan 2012 00:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19904#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19904#comment:2/1327624522296284</guid>
      <description>&lt;p&gt;
Yes, please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18179 (WP_Meta_Box) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18179#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18179#comment:50/1327622158471776</guid>
      <description>&lt;p&gt;
Is this going to make it into 3.4? it would be great to get this in there.
&lt;/p&gt;
&lt;p&gt;
About adding form element rendering, as nacin mentions, this would be great to have. The &lt;a class="ext-link" href="http://www.farinspace.com/wpalchemy-metabox/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| WPAlchemy MetaBox PHP Class&lt;/a&gt; seems to be the most mature in this respect, but maybe overkill as well. Do we pull the good stuff from there or write something new for form handling?
&lt;/p&gt;
&lt;p&gt;
A number of other custom field / meta box libraries and plugins exist also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/advanced-custom-fields/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Advanced Custom Fields&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/types/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Types&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://drupal.org/project/cck"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Content Construction Kit (CCK)&lt;/a&gt; for Drupal
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/custom-field-template/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Custom Field Template&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/more-fields/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| More Fields Plugin&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/jaredatch/Custom-Metaboxes-and-Fields-for-WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Custom Metaboxes and Fields&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.deluxeblogtips.com/meta-box-script-for-wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Meta Box Script&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://codecanyon.net/item/easy-custom-content-types-for-wordpress/234182"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Easy Custom Field Types&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/simple-fields/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Simple Fields&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://svn.kingkool68.com/projects/metabox/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| another library&lt;/a&gt;, etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A common need seems to be repeatable fields. It's such a common need it would be great if we could get that into the API. Beyond that repeatable field groups would be stellar, but maybe not for the first go.
&lt;/p&gt;
&lt;p&gt;
And what about front end display (ie. &lt;a class="ext-link" href="http://wp-types.com/home/views-create-elegant-displays-for-your-content/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Views&lt;/a&gt; or &lt;a class="ext-link" href="https://github.com/sorich87/the-loops"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| the loops&lt;/a&gt;) I'm guessing that is separate, but related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19904 (Trim Leading and Trailing White Space in a Post Title) updated</title>
      
        <dc:creator>greenspeakmedia</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:52:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19904#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19904#comment:1/1327621940475873</guid>
      <description>&lt;p&gt;
The trim of this should be on save.  That way it goes into the db correctly without the spaces.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19905 (Filtering the edit-comments.php screen results in incorrect Pending count) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19905#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19905#comment:1/1327621459843556</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19905 (Filtering the edit-comments.php screen results in incorrect Pending count) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19905/1327621437368462</guid>
      <description>&lt;ol&gt;&lt;li&gt;Go to edit-comments.php and view the comments for a single post (click the bubble, or do ?p=1234).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Note the Pending comment number, say, 4, which would be lower than the total number of pending comments, say, 10.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Trash an unapproved (pending) comment.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;(Expected) The pending comment number in the toolbar and admin menu should reduce to 9. The Pending number on edit-comments.php should reduce to three.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Actual: All three numbers are set to 9.
&lt;/p&gt;
&lt;p&gt;
Tracked it down with ryan to delAfter getting the pending count from $('span.pending-count').eq(0). Three elements match span.pending-count -- the admin menu, Pending (0), and the toolbar, in that order. eq(0) means it pulls from the global pending #, from the admin menu.
&lt;/p&gt;
&lt;p&gt;
If you change it to eq(1), then the toolbar and admin menu are both updated to 3. All three values are linked no matter what. Normally, this is proper. But in the case of a filtered edit-comments.php, they must not be.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19904 (Trim Leading and Trailing White Space in a Post Title) created</title>
      
        <dc:creator>greenspeakmedia</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19904/1327621035674290</guid>
      <description>&lt;p&gt;
In working with clients today I realized that they were copying and pasting post titles but including a leading space in it by accident.  Because of this the orderby feature of the query wasn't appearing to work.  Turns out it was but the spaces where all correct so it was messing with the query.
&lt;/p&gt;
&lt;p&gt;
I think it would make sense that on a title field of a post/ page that any leading whitespaces and any trailing white spaces should be trimmed off.
&lt;/p&gt;
&lt;p&gt;
something like
&lt;/p&gt;
&lt;pre class="wiki"&gt;trim($post_title);
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>Japh</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:23/1327619902425788</guid>
      <description>&lt;p&gt;
Just to clarify, the multi-user stuff was from the patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18160" title="#18160: feature request: Auto-suggest usernames on views for adding user to site (closed: duplicate)"&gt;#18160&lt;/a&gt; which was used as a starting point. The main changes that are in the patch here are CSS and refreshing for compatibility with changes that have happened since.
&lt;/p&gt;
&lt;p&gt;
I will submit a new patch later today with the changes to simplify the functionality.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:21/1327617799627784</guid>
      <description>&lt;p&gt;
I just pinged @westi.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:22/1327617682551950</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19810#comment:21" title="Comment 21"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's lose the multi-user stuff. It is out of scope, and it will involve more UI work. Instead just fill the e-mail address into the field when they select.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, please. That can be a future improvement if desired. Let's keep initial passes focused, small, and in scope.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:8/1327616953436549</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:3" title="Comment 3"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plugins can set comment_status to anything. I think we'd need to introduce comment status registration, like we do with post status.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even if there are alternative comment_status states, it shouldn't make much difference as those alternative states are not counted anyway in the core stats. But definitely it would be a better idea to have registration for comment_status.
&lt;/p&gt;
&lt;p&gt;
Alec
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903#comment:1/1327616774407731</guid>
      <description>&lt;p&gt;
Hi Mark,
&lt;/p&gt;
&lt;p&gt;
Wouldn't it make better sense to simply get rid of get_comment_count and make wp_count_comments count in the optimised way (see ticket &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/19901" title="#19901: enhancement: Speeding up Dashboard and Comment moderation SQL load (accepted)"&gt;#19901&lt;/a&gt;)?
&lt;/p&gt;
&lt;p&gt;
Keeping them both around is very confusing, especially as get_comment_count is not used in core. Duplicate functions have been a bit of a bugbear for us.
&lt;/p&gt;
&lt;p&gt;
Alec
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:13/1327616705960482</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19393#comment:11" title="Comment 11"&gt;dwenaus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
there are many times when you have pictures of people, and cropping to the middle chops off their head. uncool. :) is this going to make it into 3.4?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thinking this would need more general solution. Currently users can crop the images (or just the thumbs) any way they like by using the image editing tab in the image settings.
&lt;/p&gt;
&lt;p&gt;
Similarly we have two sets of image manipulation functions: one "general" and another specific for the image editor. Imho it's worth merging them and making a nicer API for image manipulation in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903/1327616202524660</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_count_comments()&lt;/code&gt; and &lt;code&gt;get_comments_count()&lt;/code&gt; are similar functions, with a few differences:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Their results are returned in different formats:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp_count_comments()&lt;/code&gt; returns an object of:
&lt;ul&gt;&lt;li&gt;spam
&lt;/li&gt;&lt;li&gt;approved
&lt;/li&gt;&lt;li&gt;moderated
&lt;/li&gt;&lt;li&gt;total_comments
&lt;/li&gt;&lt;li&gt;trash
&lt;/li&gt;&lt;li&gt;post-trashed
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_comment_count()&lt;/code&gt; returns an array of:
&lt;ul&gt;&lt;li&gt;spam
&lt;/li&gt;&lt;li&gt;approved
&lt;/li&gt;&lt;li&gt;awaiting_moderation
&lt;/li&gt;&lt;li&gt;total_comments
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_count_comments()&lt;/code&gt; caches, but &lt;code&gt;get_comment_count()&lt;/code&gt; always hits the database.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_comment_count()&lt;/code&gt; is used nowhere in WordPress core.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I propose that we add 'trash' and 'post-trashed' reporting to &lt;code&gt;get_comment_count()&lt;/code&gt;, and then have &lt;code&gt;wp_count_comments()&lt;/code&gt;  use &lt;code&gt;get_comment_count()&lt;/code&gt; instead of doing its own SQL queries.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6884" title="#6884: enhancement: Have wp_count_comments() support per post counts and total comments number (closed: fixed)"&gt;#6884&lt;/a&gt; and &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/19901" title="#19901: enhancement: Speeding up Dashboard and Comment moderation SQL load (accepted)"&gt;#19901&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:7/1327616057426330</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:2" title="Comment 2"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I validated these results. The large dataset was 4.7 million comments. It's much, much faster to query the individual approval statuses. It seems that statuses with more members take longer, so inferring the "1" result by subtracting the other results from the total is a nice speedup.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Any performance difference in doing an &lt;code&gt;IN()&lt;/code&gt; as opposed to separate queries?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved IN ( 'trash', 'spam', '0', 'post-trash' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Could then throw a filter on the comment statuses prior to inclusion in the &lt;code&gt;IN()&lt;/code&gt; so non-public comments can be omitted.  Which somewhat ties in with...
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:3" title="Comment 3"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plugins can set comment_status to anything. I think we'd need to introduce comment status registration, like we do with post status.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+100
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:12/1327615767811336</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would say this falls under editor/media improvements and should therefore be looked at by @azaozz.
&lt;/p&gt;
&lt;p&gt;
@bradt and everyone: Don't forget to add the has-patch keyword when you post a patch, or the appropriate leads won't know to look it over.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:6/1327615412463276</guid>
      <description>&lt;p&gt;
Also, a hack I've seen done for sites with millions of comments and high comment volume is to just not do the count queries.  Comment counts become rather meaningless for such sites.  Maybe worth a throttle or don't care switch. Maybe not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:01:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:9/1327615290229504</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19902 (blog_url() and get_blog_url() template tags) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19902#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19902#comment:3/1327615145442459</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:5/1327615073283333</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:4" title="Comment 4"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this with myisam or innodb?  innodb will count the rows and possibly be slower.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For the last query that doesn't have a WHERE.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19902 (blog_url() and get_blog_url() template tags) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19902#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19902#comment:2/1327615023446137</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19902#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since we already have site_url(), let's try to pick a name that is less confusing. Perhaps blog_page_url() or something.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree the nomenclature gets increasingly confusing. Possible permutations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;get_/blog_url()
&lt;/li&gt;&lt;li&gt;get_/blog_link()
&lt;/li&gt;&lt;li&gt;get_/blog_permalink()
&lt;/li&gt;&lt;li&gt;get_/blog_page_url()
&lt;/li&gt;&lt;li&gt;get_/blog_page_link()
&lt;/li&gt;&lt;li&gt;get_/blog_page_permalink()
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:53:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:4/1327614793938757</guid>
      <description>&lt;p&gt;
Is this with myisam or innodb?  innodb will count the rows and possibly be slower.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19902 (blog_url() and get_blog_url() template tags) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19902#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19902#comment:1/1327614652606261</guid>
      <description>&lt;p&gt;
Since we already have site_url(), let's try to pick a name that is less confusing. Perhaps blog_page_url() or something.
&lt;/p&gt;
&lt;p&gt;
This might be a duplicate of another ticket, but I'm not locating anything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:49:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:3/1327614565559034</guid>
      <description>&lt;p&gt;
Plugins can set comment_status to anything. I think we'd need to introduce comment status registration, like we do with post status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19902.diff attached to Ticket #19902</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19902/19902.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19902/19902.diff/1327614304463990</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19902 (blog_url() and get_blog_url() template tags) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19902/1327614253724701</guid>
      <description>&lt;p&gt;
With usage of WordPress as a CMS increasing, the blog is not always the focal point. It would be great if there were template tags available to get the blog url, basically a wrapper for getting the options if it's set to a WordPress page, and defaulting to home_url( '/' ) if not.
&lt;/p&gt;
&lt;p&gt;
Patched against &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19759" title="Remove redundant logic from filter_SSL(). Props deltafactory. Fixes ..."&gt;r19759&lt;/a&gt; (trunk)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:2/1327613909188086</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I validated these results. The large dataset was 4.7 million comments. It's much, much faster to query the individual approval statuses. It seems that statuses with more members take longer, so inferring the "1" result by subtracting the other results from the total is a nice speedup.
&lt;/p&gt;
&lt;p&gt;
On a small site (50,000 comments), there was still a speedup, going from 50ms to 10ms. So I think we should do this for every site, not just sites with large numbers of comments.
&lt;/p&gt;
&lt;p&gt;
I'm going ahead with a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:1/1327613831981861</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) created</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:32:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901/1327613563487058</guid>
      <description>&lt;p&gt;
The standard Wordpress function for counting the comments for Admin Bar and Dashboard named wp_count_comments is using a single SQL query with GROUP BY clause. That makes it slow on a large site with hundreds of thousands of comments.
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT comment_approved, COUNT(*) AS num_comments FROM wp_comments GROUP BY comment_approved;
&lt;/pre&gt;&lt;p&gt;
This takes 0.3 seconds on our site with 400,000 comments. When there are 10 editors logged in, we can see increasing server load.
&lt;/p&gt;
&lt;p&gt;
Our solution is to run 5 faster queries instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved = 'trash'
SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved = 'spam'
SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved = '0'
SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved = 'post-trash'
SELECT COUNT( comment_ID ) FROM wp_comments
&lt;/pre&gt;&lt;p&gt;
Takes 0.042144 on the same site. The last query gets the number of all the comments, then we subtract the previous query totals to get number of approved comments.
&lt;/p&gt;
&lt;p&gt;
On a database of 4 million comments the difference is 1.52 seconds for the original wp_count_comments and 0.01 seconds for our alternative count with 5 queries.
&lt;/p&gt;
&lt;p&gt;
Here is a link to our quick piece of code which hooks to the required filter hook and replaces the original slow function wp_count_comments: &lt;a class="ext-link" href="http://foliovision.com/downloads/fv_wp_count_comments.php.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://foliovision.com/downloads/fv_wp_count_comments.php.txt&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But this is a hack - it would be much better to fix this in core by replacing the existing slow queries with 5 fast ones and subtraction to get total approved comments.
&lt;/p&gt;
&lt;p&gt;
This speedup can be very important on large sites, as often there are 10 or more writers and moderators working at the same time. What can happen with the existing code is that the slow count comments query can back up MySQL and then writers can no longer save or open posts to edit. They get very, very frustrated and even angry.
&lt;/p&gt;
&lt;p&gt;
This fix will allow Wordpress to scale much larger on relatively modest hardware (no separate MySQL dual quad server).
&lt;/p&gt;
&lt;p&gt;
Thanks for listening.
&lt;/p&gt;
&lt;p&gt;
Martin
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:32/1327612890852854</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19762" title="Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327."&gt;[19762]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Make 0 the default status for admin-ajax.php. props TobiasBg. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15327" title="#15327: enhancement: Strip down admin-ajax.php to be a bare bones ajax handler. (closed: fixed)"&gt;#15327&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19762]: Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19762</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19762/1327612890269516</guid>
      <description>&lt;p&gt;
Make 0 the default status for admin-ajax.php. props TobiasBg. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15327" title="#15327: enhancement: Strip down admin-ajax.php to be a bare bones ajax handler. (closed: fixed)"&gt;#15327&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #18180,​19600 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18180%2C19600</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18180%2C19600/1327612820163585</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19761" title="Docs for WP_Locale::is_locale_rtl( $locale ). see #18180, see #19600."&gt;[19761]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs for WP_Locale::is_locale_rtl( $locale ). see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19600" title="#19600: task (blessed): Core should know which locales are RTL (closed: fixed)"&gt;#19600&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [19761]: Docs for WP_Locale::is_locale_rtl( $locale ). see #18180, see #19600.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19761</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19761/1327612819312092</guid>
      <description>&lt;p&gt;
Docs for WP_Locale::is_locale_rtl( $locale ). see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19600" title="#19600: task (blessed): Core should know which locales are RTL (closed: fixed)"&gt;#19600&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:31/1327612427188749</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19900 (Updating "Settings" criterea overrites htaccess file) created</title>
      
        <dc:creator>stinkykong</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19900</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19900/1327612373352459</guid>
      <description>&lt;p&gt;
When change settings in my new installation of 2011 (3.3.1), my htaccess file is overwritten and the blog falls into a redirect loop.  I had help getting my blog fixed, then downloaded the htaccess file (inside the WP folder) for safe keeping. Made another change in "Settings" and the issue happened again. Blog broken. Reuploaded htaccess and blog is fixed.
&lt;/p&gt;
&lt;p&gt;
url is &lt;a class="ext-link" href="http://southernserviceslandscape.com/media/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://southernserviceslandscape.com/media/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18180 (Missing i18n in setup-config.php) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 20:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18180#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18180#comment:23/1327610068516532</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19760" title="Introduce wp_load_translations_early(), which can be used before the ..."&gt;[19760]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce wp_load_translations_early(), which can be used before the locale is properly loaded in order to translate early error strings. Internationalize setup-config.php -- translators no longer have a reason to modify this file. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19760]: Introduce wp_load_translations_early(), which can be used before the ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 20:34:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19760</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19760/1327610067606059</guid>
      <description>&lt;p&gt;
Introduce wp_load_translations_early(), which can be used before the locale is properly loaded in order to translate early error strings. Internationalize setup-config.php -- translators no longer have a reason to modify this file. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #7294 (Minor changes checkbox for post revisions / possible new table for ...) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 26 Jan 2012 20:22:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7294#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7294#comment:8/1327609322746591</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello ryan and everybody!
&lt;/p&gt;
&lt;p&gt;
Sorry to reopen the old ticket, but this is still a problem. Adding this feature would make Wordpress faster, more scalable, better for bigger sites and more professional.
&lt;/p&gt;
&lt;p&gt;
Our biggest site has 14,000 posts and 30,000 revisions right now. We are not storing any attachments in database. We had to delete revisions before to make the site faster.
&lt;/p&gt;
&lt;p&gt;
This site was using Wordpress for last 5 years. Why not improve the core to make it possible to use Wordpress for another 5 years as the site grows? I'm sure there are tons of sites like this which might even need to be migrated from Wordpress to something bigger to solve issues like this.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Martin
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17902 (Add a "Plugin Details" link to installed plugins.) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Thu, 26 Jan 2012 19:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17902#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17902#comment:12/1327605238330916</guid>
      <description>&lt;p&gt;
scribu, I'd like to talk about this one a bit more interactively, but I haven't seen you on IRC.
&lt;/p&gt;
&lt;p&gt;
The markup between the readme display and the api display varies quite a bit.  The API has screenshots, download stats, rating stats, compatibility info, last updated, date added, download link, and author profile link.  These won't be contained in the readme / plugin header information.
&lt;/p&gt;
&lt;p&gt;
I'm not sure how to combine these together.
&lt;/p&gt;
&lt;p&gt;
I can't really change the element id that necessitates the CSS changes.  It cascades from the query string to wp-admin\plugin-install.php and is set as &lt;code&gt;$body_id&lt;/code&gt; where it's used in iframe_header to set the body id, then &lt;code&gt;$tab&lt;/code&gt; is used to control which hook gets called.
&lt;/p&gt;
&lt;p&gt;
I'm not sure how to cleanly break all of these apart.  It seems like it would cause a regression somewhere.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Thu, 26 Jan 2012 19:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:21/1327605218476989</guid>
      <description>&lt;p&gt;
Hi duck_
&lt;/p&gt;
&lt;p&gt;
Thanks for the feedback. I wrote this before the documentation update and missed that when I copy/pasted. BTW, thank you so much for updating the docs. This is a really cool feature and the doc helps make it available to more devs.
&lt;/p&gt;
&lt;p&gt;
I did see that add_rewrite_endpoint() adds the query_var but since I only need to call add_rewrite_endpoint() when rewrite rules are flushed and need the query var all the time, it almost makes sense to split them. The other option as you mentioned is to call add_rewrite_endpoint() all the time, on init. The function is light enough that it probably wouldn't hurt. I just had not decided yet... so I did half of both. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18180.6.diff attached to Ticket #18180</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 18:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18180/18180.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18180/18180.6.diff/1327604203635156</guid>
      <description>&lt;p&gt;
Introduces wp_load_translations_early() and leverages it.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19867 (wp_dropdown_users() still not scalable) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 18:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19867#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19867#comment:4/1327604164477346</guid>
      <description>&lt;p&gt;
+1 on the filter.
&lt;/p&gt;
&lt;p&gt;
Additional +1 on autocomplete after a certain number of users. Since we are doing autocomplete for sites/users in the network admin for 3.4, the bits can likely be shared quite nicely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 18:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:30/1327603665209432</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15327#comment:28" title="Comment 28"&gt;sivel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I kind of like the multidimensional array with both GET and POST in it, using only a single if and single add_action.  Performance testing over 100 result sets, shows a slight performance increase.  The single array, with single if and single add_action reduces the execution time by 0.0000379703 seconds.  Small I know, but it all adds up.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The issue I found here is that it's actually a change in behavior.
&lt;/p&gt;
&lt;p&gt;
You could send a POST request to admin-ajax.php?action=test, and wp_ajax_test will fire, even though the request method is POST. I could see someone potentially doing this in an ajax request in JS, accidentally, or using wp_remote_post() instead of wp_remote_get().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13839 (Configuration script does not allow apostrophes, blank prefixes) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 18:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13839#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13839#comment:13/1327602370293850</guid>
      <description>&lt;p&gt;
Don't we need to run wp_magic_quotes() before doing unconditional adds and strips since setup-config.php is not loading wp-settings.php?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 26 Jan 2012 17:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:20/1327599171805805</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16303#comment:19" title="Comment 19"&gt;lgedeon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here is another example that might help with documenting end-points:
&lt;/p&gt;
&lt;p&gt;
This code adds an endpoint of the form /embed/xxxx/ to the end of any post. We then load a separate template to render the article in one of several embeddable formats.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just a couple of notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You shouldn't pass an array as $places to add_rewrite_endpoint(). AFAIK the binary representation of an array is "1" so it works for EP_PERMALINK, but try the same code but with EP_PAGES and it will still add the endpoint to post permalinks. This was a documentation error previously.
&lt;/li&gt;&lt;li&gt;WP_Rewrite::add_endpoint() will add the query var for you. I guess that since you're hooking into admin_init to add_rewrite_endpoint() it's not going to work unless you hook into init instead.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp.newPost.2.patch attached to Ticket #18429</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 26 Jan 2012 17:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18429/wp.newPost.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18429/wp.newPost.2.patch/1327597679918718</guid>
      <description>&lt;p&gt;
Redone the first patch to be a wrapper for wp_insert_post. Removed a lot of checks and replaced code by WordPres functionality
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Thu, 26 Jan 2012 16:32:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:19/1327595564503547</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here is another example that might help with documenting end-points:
&lt;/p&gt;
&lt;p&gt;
This code adds an endpoint of the form /embed/xxxx/ to the end of any post. We then load a separate template to render the article in one of several embeddable formats.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
class plugin_embeddable_post {
	public function __construct() {
		add_action( 'admin_init', array( $this, 'admin_init' ) );
		add_filter( 'query_vars', array( $this, 'query_vars' ) );
		add_filter( 'template_include', array( $this, 'template_include' ) );
	}
	/**
	 * add_rewrite_endpoint just adds an endpoint to the pool of endpoints that
	 * will be used when generate_rewrite_rules is run. It does nothing on it's
	 * own but generate_rewrite_rules fires too late, so we use admin_init to
	 * make sure it is there when rules are flushed.
	 */
	public function admin_init() {
		add_rewrite_endpoint( 'embed', EP_PERMALINK  );
	}
	public function query_vars( $public_query_vars ) {
		$public_query_vars[] = 'embed';
		return $public_query_vars;
	}
	public function template_include( $template ) {
		if ( 'format1' == get_query_var( 'embed' ) )
			$template = locate_template( 'embed-format1.php' );
		// add additional embeddable formats here or use one template for all
		return $template;
	}
}
$plugin_embeddable_post = new plugin_embeddable_post;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15924 (Add 'media_default_link_type' option to parallel 'image_default_link_type') updated</title>
      
        <dc:creator>MadtownLems</dc:creator>

      <pubDate>Thu, 26 Jan 2012 15:30:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15924#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15924#comment:7/1327591855723820</guid>
      <description>&lt;p&gt;
A filter on this sounds great. Would core want to:
&lt;/p&gt;
&lt;p&gt;
a) just add a filter but not change any current functionality without a plugin
&lt;/p&gt;
&lt;p&gt;
or
&lt;/p&gt;
&lt;p&gt;
b) also change some defaults so that images are not links, but other documents are
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Thu, 26 Jan 2012 15:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:11/1327591411684220</guid>
      <description>&lt;p&gt;
there are many times when you have pictures of people, and cropping to the middle chops off their head. uncool. :) is this going to make it into 3.4?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 26 Jan 2012 14:10:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:29/1327587011414346</guid>
      <description>&lt;p&gt;
To be honest, I don't really see that benefit of using a multidimensional array here.
Not only is this still making four conditional checks just as before, but it is much harder to read and understand - which opposes the initial intention of this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15086 (get_template_part() should let you specify a directory) updated</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 14:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15086#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15086#comment:45/1327586410706241</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11214 (Improve get_themes() so that the size of the in-memory data is smaller) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 26 Jan 2012 11:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11214#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11214#comment:6/1327578216549040</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11214#comment:5" title="Comment 5"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This came up again so I took a quick look.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Really good idea for some memory usage reduction.
&lt;/p&gt;
&lt;p&gt;
From my reading of the patch I think there are two things still to do:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Page templates - get_page_templates() needs to have the same fix that was applied to the theme editor, i.e. prepend the path to the template file name.
&lt;/li&gt;&lt;li&gt;Child themes need testing. It looks like there could be an issue for template files added in the loop through $stylesheet_dir as their path would be &lt;code&gt;$themes[$theme]['Stylesheet Dir']&lt;/code&gt; and not &lt;code&gt;$themes[$theme]['Template Dir']&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19899 (Redundant logic in filter_SSL() function) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 26 Jan 2012 09:21:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19899#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19899#comment:2/1327569705735441</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19759" title="Remove redundant logic from filter_SSL(). Props deltafactory. Fixes ..."&gt;[19759]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove redundant logic from filter_SSL(). Props deltafactory. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19899" title="#19899: enhancement: Redundant logic in filter_SSL() function (closed: fixed)"&gt;#19899&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19759]: Remove redundant logic from filter_SSL(). Props deltafactory. Fixes ...</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 26 Jan 2012 09:21:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19759</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19759/1327569704647121</guid>
      <description>&lt;p&gt;
Remove redundant logic from filter_SSL(). Props deltafactory. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19899" title="#19899: enhancement: Redundant logic in filter_SSL() function (closed: fixed)"&gt;#19899&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset in tests [497]: Add a simple extra size test for the potential improvements of #WP11214. </title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/497/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/497/tests/1327566662534632</guid>
      <description>&lt;p&gt;
Add a simple extra size test for the potential improvements of &lt;a href="https://core.trac.wordpress.org//intertrac/ticket%3A11214" title="ticket:11214 in WordPress Trac"&gt;#WP11214&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11214 (Improve get_themes() so that the size of the in-memory data is smaller) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11214#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11214#comment:5/1327566387397057</guid>
      <description>&lt;p&gt;
This came up again so I took a quick look.
&lt;/p&gt;
&lt;p&gt;
Attached patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Reduces in memory storage by approx 50% compares to 2.9 post &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12226" title="Reduce the size of the data returned by get_themes() by ~30% by ..."&gt;[12226]&lt;/a&gt; for 87 themes (wpcom public themes repo &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2679" title="Fix ping status check."&gt;r2679&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Changes the data we store which may affect plugins / themes although fixing them would be trivial
&lt;/li&gt;&lt;li&gt;Fixes the theme editor to work with the new storage structure.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Not yet tested with:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Page Templates
&lt;/li&gt;&lt;li&gt;Multiple Themedirs (although the unit tests which gave me the size figure do use an alternate root)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11214-first-pass.diff attached to Ticket #11214</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11214/11214-first-pass.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11214/11214-first-pass.diff/1327566161923841</guid>
      <description>&lt;p&gt;
A first pass at a simple implementation of this
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:20/1327565684649415</guid>
      <description>&lt;p&gt;
Agreed. The only thing I can think of is having the templates looking something like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt;&amp;lt;EOL
This is a template.
Here is a $variable
EOL;
&lt;/span&gt;
&lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'Something else'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But then we end up with magical naming, so I'm not a big fan of that either. The only other thing I can think of is using a filter for all of this instead, but that has problems too. I think that's probably the most WordPress-y way though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:00:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:19/1327564852155863</guid>
      <description>&lt;p&gt;
Raw files with variable substitution are not a bad idea, but probably not for this project - I wanted to make them behave almost exactly like the standard templates would.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 26 Jan 2012 07:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:18/1327564076561305</guid>
      <description>&lt;p&gt;
Ah yeah, I had the same issue with a project I was working on (which is actually where the multipart &lt;code&gt;wp_mail&lt;/code&gt; comes from).
&lt;/p&gt;
&lt;p&gt;
We ended up going with raw HTML/text templates, and using substitution (%TITLE%, e.g.) from memory. We tried using output buffering, but that can introduce extra problems, and it's not a good practise regardless.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if that would quite work with these templates though. Anything that has a loop won't really work, unless you use a subtemplate and handle the looping separately.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Thu, 26 Jan 2012 07:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:17/1327563848442928</guid>
      <description>&lt;p&gt;
AFAIR I did, in Dec ;)
&lt;/p&gt;
&lt;p&gt;
Well one thing which was my main concern, is the way templates are handled. Most of the current plugins do it via output buffering and just having the template structure pretty similiar to the standard themes. However, it was suggested to me during development that the email contents should be kept in a variable (&amp;lt;read in Mr. Mackey's voice&amp;gt;because output buffering is bad, mkay?) - it's kind of a serious issue, because the variable solution is ugly and apparently output buffering is out of the table
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 26 Jan 2012 07:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:16/1327563395199594</guid>
      <description>&lt;p&gt;
Sounds like it's time to ping westi some more. :)
&lt;/p&gt;
&lt;p&gt;
Are there any outstanding issues to work on (apart from wiping &lt;code&gt;$phpmailer&lt;/code&gt; afterwards)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Thu, 26 Jan 2012 07:34:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:15/1327563242086143</guid>
      <description>&lt;p&gt;
Well I was willing to keep going with the project, but westi asked me to wait until he reviews it. Since it's clearly not a top priority for core developers, maybe we could wrap this up by ourselves and deliver something ready to merge ith the core without lots of improvements?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 26 Jan 2012 06:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:21/1327560790055900</guid>
      <description>&lt;p&gt;
Let's lose the multi-user stuff. It is out of scope, and it will involve more UI work. Instead just fill the e-mail address into the field when they select.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>tammyhart</dc:creator>

      <pubDate>Thu, 26 Jan 2012 06:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:10/1327559243480517</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Besides on the fly cropping, this is the one thing that I hated about dropping Tim Thumb. Changing the position really helps with things like website screenshots where you want the logo/header to be in the crop, not a chunk out of the middle. The filter/hook hacks work great, but I would love to see this in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>editor_plugin.dev.js.patch attached to Ticket #16239</title>
      
        <dc:creator>dwright</dc:creator>

      <pubDate>Thu, 26 Jan 2012 06:25:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16239/editor_plugin.dev.js.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16239/editor_plugin.dev.js.patch/1327559122755051</guid>
      <description>&lt;p&gt;
&amp;lt;!--more--&amp;gt; is surrounded by a fully blank line above and a fully blank line below, representing a paragraph
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16239 (Improve switching between visual editor and html mode when text set ...) updated</title>
      
        <dc:creator>dwright</dc:creator>

      <pubDate>Thu, 26 Jan 2012 06:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16239#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16239#comment:5/1327559023988115</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16239#comment:4" title="Comment 4"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems we should be putting &amp;lt;!--more--&amp;gt; in a separate paragraph, that way the content above and below it will be formatted properly after we do the split.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By 'separate paragraph', I assume you mean &amp;lt;p&amp;gt;&amp;lt;!--more--&amp;gt;&amp;lt;/p&amp;gt;, however, when switching from Visual to HTML mode in the TinyMCE editor, the &amp;lt;p&amp;gt; tags are stripped, it appears the way a paragraph is then represented in HTML mode is when content is surrounded by a fully blank line above and a fully blank line below.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This would also need a look at the back-end handling of &amp;lt;!--more--&amp;gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
why? with the new patch, after saving a post, &amp;lt;!--more--&amp;gt; maintains the paragraph format
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10318 (Improved generic menu item icon) updated</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 05:59:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10318#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10318#comment:13/1327557566337492</guid>
      <description>&lt;p&gt;
+1 to no circle.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16869 (Links from admin panel to site don't use HTTPS) closed</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 05:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16869#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16869#comment:4/1327555475545559</guid>
      <description>duplicate</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19869 (Formatting from code block during network setup doesn't match wp-config.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 26 Jan 2012 05:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19869#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19869#comment:11/1327555292170975</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19869#comment:9" title="Comment 9"&gt;MZAWeb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
wp-config-sample.php is also missing the ?&amp;gt; php closing tag at the end.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was intentionally removed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6791" title="#6791: enhancement: Eliminate closing ?&amp;gt;'s from wp-config-sample.php (closed: fixed)"&gt;#6791&lt;/a&gt;. Also came up in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10106" title="#10106: defect (bug): wp-config-sample.php missing closing PHP tag (closed: invalid)"&gt;#10106&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19523 (Inaccurate Help text on the Tools screen) reopened</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 04:54:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19523#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19523#comment:6/1327553675172663</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19523 (Inaccurate Help text on the Tools screen) closed</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 04:53:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19523#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19523#comment:5/1327553585299589</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>tools.patch attached to Ticket #19523</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 04:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19523/tools.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19523/tools.patch/1327553537341093</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 26 Jan 2012 03:07:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:14/1327547220229170</guid>
      <description>&lt;p&gt;
Are there any plans to integrate this? If this needs updating, I'll take ownership and get it updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:28/1327545851618106</guid>
      <description>&lt;p&gt;
I kind of like the multidimensional array with both GET and POST in it, using only a single if and single add_action.  Performance testing over 100 result sets, shows a slight performance increase.  The single array, with single if and single add_action reduces the execution time by 0.0000379703 seconds.  Small I know, but it all adds up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9175.3.diff attached to Ticket #9175</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9175/9175.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9175/9175.3.diff/1327545788674095</guid>
      <description>&lt;p&gt;
Updated 9175.2.diff for 19712
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>15327.7.diff attached to Ticket #15327</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15327/15327.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15327/15327.7.diff/1327545659782447</guid>
      <description>&lt;p&gt;
Use multidimensional associative array for $core_actions instead of 2 arrays
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>18158.5.diff attached to Ticket #18158</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18158/18158.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18158/18158.5.diff/1327545274513978</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9175 (Admin Option Page lacks Infos about serialized Option Values) updated</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9175#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9175#comment:27/1327544940859429</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19869 (Formatting from code block during network setup doesn't match wp-config.php) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19869#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19869#comment:10/1327544819942692</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19869#comment:9" title="Comment 9"&gt;MZAWeb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is really small and related, sorry if I should open a new ticket about this.
&lt;/p&gt;
&lt;p&gt;
wp-config-sample.php is also missing the ?&amp;gt; php closing tag at the end.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are various reasons for that. For starters, its optional. Secondly, it can help avoid whitespace issues that may cause the common white screen of death error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19869 (Formatting from code block during network setup doesn't match wp-config.php) updated</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19869#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19869#comment:9/1327544567180289</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is really small and related, sorry if I should open a new ticket about this.
&lt;/p&gt;
&lt;p&gt;
wp-config-sample.php is also missing the ?&amp;gt; php closing tag at the end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19899 (Redundant logic in filter_SSL() function) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19899#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19899#comment:1/1327542908712646</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, it is redundant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ms-functions.php.patch attached to Ticket #19899</title>
      
        <dc:creator>deltafactory</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19899/ms-functions.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19899/ms-functions.php.patch/1327542518190466</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19899 (Redundant logic in filter_SSL() function) created</title>
      
        <dc:creator>deltafactory</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19899/1327542493665332</guid>
      <description>&lt;p&gt;
I'm not sure if there's a reason it's written this way, but the logic in this line seems redundant.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/ms-functions.php#L1947"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/ms-functions.php#L1947&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'http' === $arrURL['scheme'] &amp;amp;&amp;amp; 'https' !== $arrURL['scheme'] )
&lt;/pre&gt;&lt;p&gt;
In the interest of simplification, shouldn't this line be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'http' === $arrURL['scheme'] )
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:27/1327541378242792</guid>
      <description>&lt;p&gt;
With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18158/18158.4.diff" title="Attachment '18158.4.diff' in Ticket #18158"&gt;18158.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18158/18158.4.diff" title="Download"&gt;​&lt;/a&gt;, 'compare' =&amp;gt; 'EXISTS' still works, but you can skip it altogether.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18158.4.diff attached to Ticket #18158</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18158/18158.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18158/18158.4.diff/1327541330415551</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:26/1327540680202605</guid>
      <description>&lt;p&gt;
Actually, 'compare' =&amp;gt; 'EXISTS' is totally unnecessary. Doing an INNER JOIN is enough to ensure that the value is not null.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:08:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:25/1327540105001622</guid>
      <description>&lt;p&gt;
Example usage:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$q = new WP_Query( array(
	'meta_query' =&amp;gt; array(
		array(
			'key' =&amp;gt; 'foo',
			'compare' =&amp;gt; 'EXISTS'
		),
		array(
			'key' =&amp;gt; 'bar',
			'compare' =&amp;gt; 'NOT EXISTS'
		)
	)
) );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:24/1327540009385098</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18158/18158.3.diff" title="Attachment '18158.3.diff' in Ticket #18158"&gt;18158.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18158/18158.3.diff" title="Download"&gt;​&lt;/a&gt; is just some minor cleanup. I moved the if block before the original $join lines, to avoid a little extra work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18158.3.diff attached to Ticket #18158</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18158/18158.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18158/18158.3.diff/1327539932241624</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19816 (Theme details should be able to include multiple screenshots) updated</title>
      
        <dc:creator>kwight</dc:creator>

      <pubDate>Thu, 26 Jan 2012 00:35:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19816#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19816#comment:6/1327538106664203</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 26 Jan 2012 00:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:20/1327537771469325</guid>
      <description>&lt;p&gt;
UI Note:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;user-new labels/help tabs will probably need plural ambiguity since autocomplete actually allows for adding multiple users at once. This goes for anywhere we duplicate this functionality.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [19758]: It's L10n (or i18n). Not too sure what l18n stands for. (Typo from ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 00:16:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19758</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19758/1327536961520384</guid>
      <description>&lt;p&gt;
It's L10n (or i18n). Not too sure what l18n stands for. (Typo from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12762" title="phpdoc for load.php, return some includes to global scope. Props ..."&gt;[12762]&lt;/a&gt;.)
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16840 (add_rewrite_rule() should accept an array for the $redirect parameter) updated</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 00:05:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16840#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16840#comment:2/1327536301416462</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>