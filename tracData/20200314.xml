<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #49577 (Site Health Status Dashboard provides incorrect items count on initial load) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 14 Mar 2020 20:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49577#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49577#comment:18/1584218047345162</guid>
      <description>&lt;p&gt;
Thanks everyone, testing trunk now I see the 'No information yet...' as seen in the uploaded screenshot.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This works nicely and would be great to also apply to 5.4 after the second committer review.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Appreciate everyone investigating/fixing.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2020-03-14 at 1.31.08 PM.png attached to Ticket #49577</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 14 Mar 2020 20:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49577/Screen%20Shot%202020-03-14%20at%201.31.08%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49577/Screen%20Shot%202020-03-14%20at%201.31.08%20PM.png/1584217988581726</guid>
      <description>&lt;p&gt;
No information yet... on initial install using trunk.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>49644-2.patch attached to Ticket #49644</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 14 Mar 2020 20:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49644/49644-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49644/49644-2.patch/1584216399142645</guid>
      <description>&lt;p&gt;
Updates to fix the oversight in the 2nd patch which ends up not returning the correct values from register_post_type() and unregister_post_type().
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49423 (Build: Create Webpack build configuration for vendor dependencies) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Mar 2020 19:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49423#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49423#comment:12/1584214110064446</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by bookdude13. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1584214106358400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49635 (Build tools: Remove generated and package sourced files from committed ...) updated</title>
      
        <dc:creator>bookdude13</dc:creator>

      <pubDate>Sat, 14 Mar 2020 19:26:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49635#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49635#comment:2/1584214013532988</guid>
      <description>&lt;p&gt;
As @azaozz mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48154" title="#48154: defect (bug): Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build (closed: fixed)"&gt;#48154&lt;/a&gt; comment 67:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
script-loader-packages.php is slightly different depending on whether Webpack was run in "build" or "dev" mode.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thoughts on renaming that &lt;code&gt;script-loader-packages-prod.php&lt;/code&gt; and &lt;code&gt;script-loader-packages-dev.php&lt;/code&gt; to differentiate, and then .gitignore the current &lt;code&gt;script-loader-packages.php&lt;/code&gt;? Not sure if that solves the underlying problem, but an idea.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49648 (_fields parameter doesn't get nested proprieties from custom attribute) created</title>
      
        <dc:creator>Dudo</dc:creator>

      <pubDate>Sat, 14 Mar 2020 18:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49648</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49648/1584209826251256</guid>
      <description>&lt;p&gt;
I've added a meta_key with register_meta, with this code&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_meta('post', 'yasr_overall_rating',
        array(
            'show_in_rest' =&amp;gt; true,
            'single'       =&amp;gt; true,
            'type'         =&amp;gt; 'number',
            'auth_callback' =&amp;gt; function() {
                return current_user_can('edit_posts');
            }
        )
    );
&lt;/pre&gt;&lt;p&gt;
I can reach the nested proprieties successful with this:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;?_fields=meta.yasr_overall_rating
&lt;/pre&gt;&lt;p&gt;
But, I can't access the nested proprieties of a custom attribute, added with this code:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;    $visitor_votes_obj = new YasrDatabaseRatings();
    $yasr_vv_schema = array(
        'description'          =&amp;gt; 'Yasr Visitor Votes Data',
        'type'                 =&amp;gt; 'object',
        'context'              =&amp;gt; array('view', 'edit'),
        'properties'           =&amp;gt; array(
            'sum_votes' =&amp;gt; array(
                'type'  =&amp;gt; 'integer',
            ),
            'number_of_votes' =&amp;gt; array(
                'type'        =&amp;gt; 'integer',
            ),
        ),
    );
register_rest_field(
        'post'
        'yasr-visitor-votes',
        array(
            'get_callback'    =&amp;gt; (array($visitor_votes_obj, 'getVisitorVotes')),
            'update_callback' =&amp;gt; null,
            'schema'          =&amp;gt; $yasr_vv_schema
        )
    );
&lt;/pre&gt;&lt;p&gt;
I can reach successful the attribute &lt;strong&gt;yasr-visitor-votes&lt;/strong&gt; with this:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;?_fields=yasr-visitor-votes
&lt;/pre&gt;&lt;p&gt;
But I can't access the nested properties&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;?_fields=yasr-visitor-votes.sum_votes
?_fields=yasr-visitor-votes.number_of_votes
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49647 (Extend REST API search endpoint with "after" and "before" which the ...) created</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Sat, 14 Mar 2020 17:55:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49647</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49647/1584208550556635</guid>
      <description>&lt;p&gt;
Hi,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd like to use the search API but provide the &lt;code&gt;after&lt;/code&gt; parameter. I was surprised to see there's no parity to &lt;code&gt;posts&lt;/code&gt; and it's not supported.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/reference/posts/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/reference/posts/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/reference/search-results/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/reference/search-results/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is there a reason most, if not all, params supported by &lt;code&gt;posts&lt;/code&gt; aren't present in &lt;code&gt;search&lt;/code&gt;? Can they be?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49577 (Site Health Status Dashboard provides incorrect items count on initial load) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 16:35:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49577#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49577#comment:17/1584203752853964</guid>
      <description>&lt;p&gt;
Reopening for backporting to the 5.4 branch after a second committer's review.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #49577 (Site Health Status Dashboard provides incorrect items count on initial load) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 16:34:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49577#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49577#comment:16/1584203695976115</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47456" title="Site Health: Run the first scheduled site health check a day after the ..."&gt;47456&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Site Health: Run the first scheduled site health check a day after the initial site setup.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This reduces the chance of displaying incorrect results due to running the check too early in first time setup scenarios.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Clorith, garrett-eclipse, roytanck, joostdevalk.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49577" title="#49577: defect (bug): Site Health Status Dashboard provides incorrect items count on initial load (closed: fixed)"&gt;#49577&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47456]: Site Health: Run the first scheduled site health check a day after the ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 16:34:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47456/1584203694803099</guid>
      <description>&lt;p&gt;
Site Health: Run the first scheduled site health check a day after the initial site setup.
&lt;/p&gt;
&lt;p&gt;
This reduces the chance of displaying incorrect results due to running the check too early in first time setup scenarios.
&lt;/p&gt;
&lt;p&gt;
Props Clorith, garrett-eclipse, roytanck, joostdevalk.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49577" title="#49577: defect (bug): Site Health Status Dashboard provides incorrect items count on initial load (closed: fixed)"&gt;#49577&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47053 (Accessibility: Need to set proper 'tabindex' in 'Skip To Toolbar' HTML) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 16:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47053#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47053#comment:41/1584201671537220</guid>
      <description>&lt;p&gt;
Reopening for backporting to the 5.4 branch after a second committer's review.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #47053 (Accessibility: Need to set proper 'tabindex' in 'Skip To Toolbar' HTML) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 15:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47053#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47053#comment:40/1584201563942724</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47455" title="Toolbar: Move the logic for rendering the admin bar on `wp_footer` to ..."&gt;47455&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Toolbar: Move the logic for rendering the admin bar on &lt;code&gt;wp_footer&lt;/code&gt; to &lt;code&gt;wp_admin_bar_render()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Clarify in the function documentation that it is now called on &lt;code&gt;wp_body_open&lt;/code&gt; action first, with &lt;code&gt;wp_footer&lt;/code&gt; as a fallback.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47221" title="Toolbar: Load toolbar in `wp_body_open` when available.
For ..."&gt;[47221]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47053" title="#47053: defect (bug): Accessibility: Need to set proper 'tabindex' in 'Skip To Toolbar' HTML (closed: fixed)"&gt;#47053&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47455]: Toolbar: Move the logic for rendering the admin bar on `wp_footer` to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 15:59:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47455/1584201562830747</guid>
      <description>&lt;p&gt;
Toolbar: Move the logic for rendering the admin bar on &lt;code&gt;wp_footer&lt;/code&gt; to &lt;code&gt;wp_admin_bar_render()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Clarify in the function documentation that it is now called on &lt;code&gt;wp_body_open&lt;/code&gt; action first, with &lt;code&gt;wp_footer&lt;/code&gt; as a fallback.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47221" title="Toolbar: Load toolbar in `wp_body_open` when available.
For ..."&gt;[47221]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47053" title="#47053: defect (bug): Accessibility: Need to set proper 'tabindex' in 'Skip To Toolbar' HTML (closed: fixed)"&gt;#47053&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49577 (Site Health Status Dashboard provides incorrect items count on initial load) updated</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Sat, 14 Mar 2020 15:52:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49577#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49577#comment:15/1584201158962603</guid>
      <description>&lt;p&gt;
Patch LGTM&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49577 (Site Health Status Dashboard provides incorrect items count on initial load) updated</title>
      
        <dc:creator>roytanck</dc:creator>

      <pubDate>Sat, 14 Mar 2020 12:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49577#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49577#comment:14/1584189511462912</guid>
      <description>&lt;p&gt;
@Clorith I actually had almost the same fix in my local install :). A day seems long enough for me.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I couldn't really find a more elegant/reliable way of delaying the cron job, so this seems like a good fix to me.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49577 (Site Health Status Dashboard provides incorrect items count on initial load) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 14 Mar 2020 12:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49577#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49577#comment:13/1584189218039109</guid>
      <description>&lt;p&gt;
Sorry, I misspoke, I set the first test to run after a day, because then the basic setup would be done, and then it'll keep running a week later for any remaining changes you may wish to do to your site, this way it's not "mid setup" when it tries to do the first checks :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49577 (Site Health Status Dashboard provides incorrect items count on initial load) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Mar 2020 12:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49577#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49577#comment:12/1584189142077969</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1584189136355900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49577 (Site Health Status Dashboard provides incorrect items count on initial load) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 14 Mar 2020 12:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49577#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49577#comment:11/1584189098553118</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You are absolutely right @roytanck, it is running too early in first time setup scenarios, causing the results to be a bit unreliable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49577/49577.patch" title="Attachment '49577.patch' in Ticket #49577"&gt;49577.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49577/49577.patch" title="Download"&gt;​&lt;/a&gt; changes the time in which the tests run for the first time to be one week after the creation of the cron job.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I considered setting it to a day, but realistically, if you are tinkering on your own time for example, you may not be done setting things up, as you only had an hour, and plan to continue during the weekend for example.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By setting it to a week, it follows the pattern of how often it will run in the first place, yet giving the user ample time to do what they want with their site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The data can still be populated by visiting the Site Health section though.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49577.patch attached to Ticket #49577</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 14 Mar 2020 12:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49577/49577.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49577/49577.patch/1584188943893056</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47053 (Accessibility: Need to set proper 'tabindex' in 'Skip To Toolbar' HTML) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 11:59:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47053#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47053#comment:39/1584187192475784</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47053/47053.7.diff" title="Attachment '47053.7.diff' in Ticket #47053"&gt;47053.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47053/47053.7.diff" title="Download"&gt;​&lt;/a&gt; further simplifies things by making the function action-agnostic and just using a static variable. This is consistent with a similar approach in some other core functions, e.g. &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_load_translations_early/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp_load_translations_early()&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The patch also updates the function documentation, which is currently not quite correct after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47221" title="Toolbar: Load toolbar in `wp_body_open` when available.
For ..."&gt;[47221]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47053.7.diff attached to Ticket #47053</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 11:55:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47053/47053.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47053/47053.7.diff/1584186957927137</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49646 (Twenty Twenty: There are some Missing Pages on any new installation of ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Mar 2020 10:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49646#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49646#comment:3/1584180103117170</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49182 (Unmask password button) updated</title>
      
        <dc:creator>bernardroux</dc:creator>

      <pubDate>Sat, 14 Mar 2020 08:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49182#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49182#comment:8/1584174937409380</guid>
      <description>&lt;p&gt;
To Carrigan,&lt;br /&gt;
That exactly what I meaned. &lt;br /&gt;
Thank you for your consideration&lt;br /&gt;
I wait you fix it!&lt;br /&gt;
Thank's a lot&lt;br /&gt;
Bernard&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49646 (Twenty Twenty: There are some Missing Pages on any new installation of ...) updated</title>
      
        <dc:creator>mari3000</dc:creator>

      <pubDate>Sat, 14 Mar 2020 06:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49646#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49646#comment:2/1584167092075527</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49646#comment:1" title="Comment 1"&gt;carike&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hallo :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"The New UMoMA Opens its Doors" is part of TwentyTwenty starter content.&lt;br /&gt;
The way that starter content needs to be treated is a matter that has been under consideration for a while.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When on a fresh install, please go to /wp-admin/, Appearance, Customizer.&lt;br /&gt;
If you click on Publish, you should now see the starter content.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The starter content for TwentyTwenty is included under inc -&amp;gt; starter-content.php in the theme files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Going to close this ticket for now, as this appears to be intended behaviour.&lt;br /&gt;
It can be re-opened if necessary.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh! Thank you so much for letting me know it! And I'm very sorry that I made this ticket and bother you.&lt;br /&gt;
Have a lovely day @carike ! :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49646 (Twenty Twenty: There are some Missing Pages on any new installation of ...) closed</title>
      
        <dc:creator>carike</dc:creator>

      <pubDate>Sat, 14 Mar 2020 06:19:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49646#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49646#comment:1/1584166791412775</guid>
      <description>invalid: &lt;p&gt;
Hallo :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"The New UMoMA Opens its Doors" is part of TwentyTwenty starter content.&lt;br /&gt;
The way that starter content needs to be treated is a matter that has been under consideration for a while.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When on a fresh install, please go to /wp-admin/, Appearance, Customizer.&lt;br /&gt;
If you click on Publish, you should now see the starter content.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The starter content for TwentyTwenty is included under inc -&amp;gt; starter-content.php in the theme files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Going to close this ticket for now, as this appears to be intended behaviour.&lt;br /&gt;
It can be re-opened if necessary.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49646 (Twenty Twenty: There are some Missing Pages on any new installation of ...) created</title>
      
        <dc:creator>mari3000</dc:creator>

      <pubDate>Sat, 14 Mar 2020 05:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49646</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49646/1584162659054203</guid>
      <description>&lt;p&gt;
I have found an issue of installing a newly WordPress package.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I have experienced this issue both at local and remote installation. And even it happened on another computer. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
(My condition: I use a hosted server with a cPanel. And I use Local by Flywheel app for local installation. )&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Anyway the problem is the following. &lt;br /&gt;
The newly installed WordPress sites don’t have the all default  pages of the default theme TwentyTwenty.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Two weeks ago, I installed a WordPress package on a hosted server and it had default theme TwentyTwenty as perfect state.&lt;br /&gt;
That is, it had some pages more than only two page. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Then it was more than one weeks ago, I installed a newly WordPress on the same server. &lt;br /&gt;
And I noticed that the newer installed WordPress did have only two pages as it first state.&lt;br /&gt;
One is "Sample Page" and one is "Privacy Policy" page.&lt;br /&gt;
I think it’s abnormal. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But at that point, I copied the missing pages from the normal WordPress package, and pasted them to the newer package, then started working on the site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But yesterday I found that all the new installation of WordPress have only two pages par site.&lt;br /&gt;
Each new site has only two pages, "Sample page" and "Privacy Policy" page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is a screenshot.&lt;br /&gt;
&lt;a class="ext-link" href="https://drive.google.com/file/d/1s-PCcy-33OqraUTnMZhjCfZgYXW1mFyb/view?usp=sharing"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://drive.google.com/file/d/1s-PCcy-33OqraUTnMZhjCfZgYXW1mFyb/view?usp=sharing&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you remember the original state of TwentyTwenty, you can understand that it’s abnormal. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I customised my older sites so I now can’t say how many pages were originally included in TwentyTwenty. &lt;br /&gt;
But I searched and found that the default TwentyTwenty has at least two more pages(=total over 4 pages). &lt;br /&gt;
One missing page is  "The New UMoMA Opens its Doors", and one is the "Contact" page. Newer installations at both local and hosted server don’t include these pages. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And I remember there was an abstract red coloured image in Media Library as default state until two weeks ago. But these newer installed site does not have that image in Media Library. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Why I am reporting this to WordPress instead of TwentyTwenty theme because when I change the theme from TwentyTwenty to other past default themes which created by WordPress, each site also has only two pages instead of more pages. And I think it’s abnormal.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And I also changed theme from TwentyTwenty to other theme made by third party(but I installed it via Themes Page).&lt;br /&gt;
Then using demo-installer I brought the many page in the theme as originally designed by the third party team and it seems there is not problem there. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So it seems that this issue is exist only when we use current and past default WordPress themes. &lt;br /&gt;
While it seems there is not any visible problem with using third party themes, but I don't want to use WordPress until the default state is clearly fixed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you for reading. And I wish this issue would be solved very soon. As I'd like to make some new sites very soon. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49334 ([Theme compatibility] WP/PHP compatibility testing for theme activation) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 14 Mar 2020 04:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49334#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49334#comment:5/1584159908832566</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49334.diff attached to Ticket #49334</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 14 Mar 2020 04:24:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49334/49334.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49334/49334.diff/1584159845086821</guid>
      <description>&lt;p&gt;
compatibility testing for theme activation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49334 ([Theme compatibility] WP/PHP compatibility testing for theme activation) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 14 Mar 2020 04:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49334#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49334#comment:4/1584159637447302</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>48491.5.diff attached to Ticket #48491</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 14 Mar 2020 00:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48491/48491.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48491/48491.5.diff/1584147112031555</guid>
      <description>&lt;p&gt;
add Customizer part
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>customizer-browser.png attached to Ticket #48491</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 14 Mar 2020 00:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48491/customizer-browser.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48491/customizer-browser.png/1584146990583229</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48491 ([Theme compatibility] WP/PHP compatibility tests for single site theme ...) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 14 Mar 2020 00:27:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48491#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48491#comment:25/1584145640569861</guid>
      <description>&lt;p&gt;
Latest patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/48491/48491.5.diff" title="Attachment '48491.5.diff' in Ticket #48491"&gt;48491.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/48491/48491.5.diff" title="Download"&gt;​&lt;/a&gt; adds compatibility testing when in the Customizer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To test simply change the &lt;code&gt;Requires PHP&lt;/code&gt; header of the &lt;code&gt;style.css&lt;/code&gt; of an installed theme. You can test the update part by also decrementing the version number too.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customizer-activate.png attached to Ticket #48491</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 14 Mar 2020 00:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48491/customizer-activate.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48491/customizer-activate.png/1584145317756413</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>customizer-popup.png attached to Ticket #48491</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 14 Mar 2020 00:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48491/customizer-popup.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48491/customizer-popup.png/1584145262545444</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49635 (Build tools: Remove generated and package sourced files from committed ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Mar 2020 22:27:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49635#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49635#comment:1/1584138475935657</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm sure there are other complexities too.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, been thinking about this for a while. One problem is that once a file is added to SVN and committed, it never goes away completely. If it is deleted, it will not be present in the new(er) revisions, but it still exists in the older revisions from before it was deleted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This causes a problem when a file is deleted from the repository and ignored, and then recreated when building. If a previous revision is restored, and there is already an ignored file with the same name at the same location, it will cause a conflict in SVN.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A way to work around this would be to rename the newly ignored files. But renaming files in /build (in production) may trigger fatal errors in some plugins... The other option is to just ignore these problems as they would happen relatively rarely and are usually pretty easy to fix.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Any other ideas/suggestions/thoughts? :) &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 21:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:8/1584133922482044</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47454" title="General: Trim the input data in `maybe_unserialize()`, for consistency ..."&gt;47454&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Trim the input data in &lt;code&gt;maybe_unserialize()&lt;/code&gt;, for consistency with &lt;code&gt;is_serialized()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pbearne, mikeschroder.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47454]: General: Trim the input data in `maybe_unserialize()`, for consistency ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 21:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47454/1584133921232389</guid>
      <description>&lt;p&gt;
General: Trim the input data in &lt;code&gt;maybe_unserialize()&lt;/code&gt;, for consistency with &lt;code&gt;is_serialized()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props pbearne, mikeschroder.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 21:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:7/1584133503631735</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47453" title="General: Move `maybe_serialize()` to a more appropriate place in the ..."&gt;47453&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Move &lt;code&gt;maybe_serialize()&lt;/code&gt; to a more appropriate place in the file, before &lt;code&gt;maybe_unserialize()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Rename the &lt;code&gt;$original&lt;/code&gt; parameter of &lt;code&gt;maybe_unserialize()&lt;/code&gt; to &lt;code&gt;$data&lt;/code&gt;, for consistency with other serialization functions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47453]: General: Move `maybe_serialize()` to a more appropriate place in the ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 21:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47453</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47453/1584133502425777</guid>
      <description>&lt;p&gt;
General: Move &lt;code&gt;maybe_serialize()&lt;/code&gt; to a more appropriate place in the file, before &lt;code&gt;maybe_unserialize()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Rename the &lt;code&gt;$original&lt;/code&gt; parameter of &lt;code&gt;maybe_unserialize()&lt;/code&gt; to &lt;code&gt;$data&lt;/code&gt;, for consistency with other serialization functions.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 20:39:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:6/1584131943546178</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47452" title="Tests: Extract `is_serialized()` test cases into data providers; reuse ..."&gt;47452&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Extract &lt;code&gt;is_serialized()&lt;/code&gt; test cases into data providers; reuse them for &lt;code&gt;maybe_serialize()&lt;/code&gt; and &lt;code&gt;maybe_unserialize()&lt;/code&gt; tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pbearne, mikeschroder, SergeyBiryukov.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47452]: Tests: Extract `is_serialized()` test cases into data providers; reuse ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 20:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47452/1584131942195531</guid>
      <description>&lt;p&gt;
Tests: Extract &lt;code&gt;is_serialized()&lt;/code&gt; test cases into data providers; reuse them for &lt;code&gt;maybe_serialize()&lt;/code&gt; and &lt;code&gt;maybe_unserialize()&lt;/code&gt; tests.
&lt;/p&gt;
&lt;p&gt;
Props pbearne, mikeschroder, SergeyBiryukov.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49634 (Performance Benchmarks for REST API) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 13 Mar 2020 20:32:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49634#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49634#comment:1/1584131520848966</guid>
      <description>&lt;p&gt;
I asked @youknowriad in Slack about how they're computing Gutenberg's performance, and he pointed me to &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/master/packages/e2e-tests/specs/performance/performance.test.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/master/packages/e2e-tests/specs/performance/performance.test.js&lt;/a&gt;.&lt;br /&gt;
The gist of it is this: they use Puppeteer and just track how long things take themselves. No magic build tool or anything.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I also asked a wider web developer community on Reddit and have gotten crickets so far: &lt;a class="ext-link" href="https://www.reddit.com/r/webdev/comments/fhs392/how_to_add_performance_benchmarks_like_automated/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.reddit.com/r/webdev/comments/fhs392/how_to_add_performance_benchmarks_like_automated/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I had hoped to find a tool that would do something like:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;set a universal unit that indicates performance regardless of the current system; Eg "1 foobar = time it takes for &lt;code&gt;for($i=0;$i&amp;lt;1000;$i++){}&lt;/code&gt; to execute on your current system
&lt;/li&gt;&lt;li&gt;let you define tests to benchmark, their times would be listed in "foobars"
&lt;/li&gt;&lt;li&gt;the results wouldn't be so much "pass" or "fail" but more a range between "crazy fast" and "very poor"
&lt;/li&gt;&lt;li&gt;could maybe be combined with a CI service like Travis or even more standardized results
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
But so far, no luck.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Right now, I'm leaning towards creating some PHPUnit tests take to execute. If anyone else thinks the idea of setting a universal unit ("foobar"), I'd like to try it.&lt;br /&gt;
We'd probably print the results to the console.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd appreciate feedback on these thoughts.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 20:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:5/1584130266674618</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 13 Mar 2020 19:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645#comment:3/1584128127593273</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Chatting with @kadamwhite it looks like that check is meant to be on line 391. In other words, right before checking if the user has permission to delete a revision, make sure they have permission to delete the parent item as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Would you be interested in working on a patch?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 13 Mar 2020 19:27:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645#comment:2/1584127671517318</guid>
      <description>&lt;p&gt;
Ah sorry, was rushing and misread, that does look like this check's in the incorrect spot.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 13 Mar 2020 19:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645#comment:1/1584127567301977</guid>
      <description>&lt;p&gt;
@yohannp Can you give an example of a plugin and action that is broken by this? The commit you link to appears to correctly apply the security check we would want to use for revision deletion, we'd need to know more about the behavior you would expect that now breaks in order to determine whether this was inaccurate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49617 (Image upload failing for the non - admin users of WordPress) closed</title>
      
        <dc:creator>amitagrawalindia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 19:04:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49617#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49617#comment:2/1584126246316330</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49639 (Add a filter on wp_insert_user function regarding $user_pass) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49639#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49639#comment:1/1584120054307537</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49640 (image_get_intermediate_size returns wrong) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:20:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49640#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49640#comment:1/1584120032033611</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome back to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just adding links to some tickets that might be related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/21714" title="#21714: enhancement: Enable Intermediate choice in UI if Full Size Image is exact match to ... (new)"&gt;#21714&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34384" title="#34384: defect (bug): No way of preventing image_get_intermediate_size from returning ... (closed: fixed)"&gt;#34384&lt;/a&gt;, &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/47713" title="#47713: defect (bug): image_get_intermediate_size does not return size if it equals original size (reviewing)"&gt;#47713&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49644 (Move logic from register_post_type() into WP_Post_Type-&gt;register()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49644#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49644#comment:3/1584119794664374</guid>
      <description>&lt;p&gt;
So I proactively updated the patch to save the &lt;code&gt;WP_Error&lt;/code&gt; to &lt;code&gt;$post_type-&amp;gt;last_error&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also added a 2nd parameter to the &lt;code&gt;'unregistered_post_type'&lt;/code&gt; hook and moved the &lt;code&gt;$removed&lt;/code&gt; parameter I added in the first patch to the 3rd parameter position.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, I added PHPDoc headers that I missed in the first patch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49644-1.patch attached to Ticket #49644</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49644/49644-1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49644/49644-1.patch/1584119660142793</guid>
      <description>&lt;p&gt;
Updates the patch to include a last_error.  Also adds another $this as a 2nd parameter to &lt;code&gt;unregistered_post_type&lt;/code&gt; hook
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49641 (Clarify what happens when meta_value is `''` in get_users like functions.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49641#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49641#comment:1/1584119621664012</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49374 (Use get_post_states to denote special pages on the added menu item ...) reopened</title>
      
        <dc:creator>stiofansisland</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:00:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49374#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49374#comment:9/1584118838877075</guid>
      <description>&lt;p&gt;
In the original use case for the get_post_states() function to add statuses to the pages backend  is not escaped, this allowed several plugins to add hints to the output:&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/IvlbXQA.png"&gt;&lt;img src="https://i.imgur.com/IvlbXQA.png" alt="https://i.imgur.com/IvlbXQA.png" crossorigin="anonymous" title="https://i.imgur.com/IvlbXQA.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now in the edit menu screen it is escaped which causes issues:&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/cYbF6sz.png"&gt;&lt;img src="https://i.imgur.com/cYbF6sz.png" alt="https://i.imgur.com/cYbF6sz.png" crossorigin="anonymous" title="https://i.imgur.com/cYbF6sz.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would be nice to keep the hints but if not an option then esc_html() should be replaced with wp_strip_all_tags()&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #49643 (Featured Image haven't got acces to new mediafile system.  (5.4-RC2-47447)) updated</title>
      
        <dc:creator>perborch</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49643#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49643#comment:2/1584118341228640</guid>
      <description>&lt;p&gt;
Found the issue in a plugin Im taking it to them instead &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49643#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you provide the steps to reproduce the issue on a clean install?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49374 (Use get_post_states to denote special pages on the added menu item ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49374#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49374#comment:8/1584118125499908</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1584118123351100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49644 (Move logic from register_post_type() into WP_Post_Type-&gt;register()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49644#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49644#comment:2/1584118067260937</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49644#comment:1" title="Comment 1"&gt;ocean90&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just noting that class constructors cannot return a custom value thus the &lt;code&gt;WP_Error&lt;/code&gt; object for a failed validation won't be returned.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point. I shouldn't have rushed to get this pushed up before a conference call. :-)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hopefully you agree the constructor should validate the post type length, right?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Do you think assigning to an &lt;code&gt;last_error&lt;/code&gt; property be a workable solution?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) created</title>
      
        <dc:creator>yohannp</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645/1584117955614702</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Due to this commit, a delete permission check has been added to get_item function in class-wp-rest-revisions-controller.php.&lt;br /&gt;
It seems this permission check was added by this commit : &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/commit/00cb4c7dbdd3a0bbf1f7da0898a72e12198a61d5#diff-df4c11238da6b9e0e261b38f895720f1R352"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/commit/00cb4c7dbdd3a0bbf1f7da0898a72e12198a61d5#diff-df4c11238da6b9e0e261b38f895720f1R352&lt;/a&gt;. This breaks some preview plugins using WordPress REST API.&lt;br /&gt;
Obviously, this seems to be kind of a copy/paste mistake as there is no reason to have a delete_post permission check on a get item...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49644 (Move logic from register_post_type() into WP_Post_Type-&gt;register()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49644#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49644#comment:1/1584116886419740</guid>
      <description>&lt;p&gt;
Just noting that class constructors cannot return a custom value thus the &lt;code&gt;WP_Error&lt;/code&gt; object for a failed validation won't be returned.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49643 (Featured Image haven't got acces to new mediafile system.  (5.4-RC2-47447)) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49643#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49643#comment:1/1584116623924750</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you provide the steps to reproduce the issue on a clean install?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49644.patch attached to Ticket #49644</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49644/49644.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49644/49644.patch/1584116058593000</guid>
      <description>&lt;p&gt;
Moves code from register_post_type() to WP_Post_Type-&amp;gt;register() and from unregister_post_type() to WP_Post_Type-&amp;gt;unregister().
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49644 (Move logic from register_post_type() into WP_Post_Type-&gt;register()) created</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49644</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49644/1584115965954998</guid>
      <description>&lt;p&gt;
I have not looked at &lt;code&gt;register_post_type()&lt;/code&gt; in several years, but was pleasantly surprised to find major improvements where most of the logic was refactored and moved to &lt;code&gt;WP_Post_Type&lt;/code&gt;.  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Still though, it appears there are a few missing capabilities that a bit more refactoring would resolve. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I propose we move most of the logic found in &lt;code&gt;register_post_type()&lt;/code&gt; into &lt;code&gt;WP_Post_Type-&amp;gt;register()&lt;/code&gt; and a bit of the validation logic into &lt;code&gt;WP_Post_Type-&amp;gt;__construct()&lt;/code&gt; &lt;em&gt;(see attached patch.)&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Similarly, it would make sense to also move the logic in &lt;code&gt;unregister_post_type()&lt;/code&gt; to a &lt;code&gt;WP_Post_Type-&amp;gt;unregister()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One of the benefits of this change is that currently &lt;code&gt;register_post_type()&lt;/code&gt; has validation logic but &lt;code&gt;WP_Post_Type-&amp;gt;__construct()&lt;/code&gt; does not so someone can call &lt;code&gt;new WP_Post_Type('this-is-a-far-too-long-post-type-name')&lt;/code&gt; and not get an error and allow a too-long post type name to be registered whereas &lt;code&gt;register_post_type('this-is-a-far-too-long-post-type-name')&lt;/code&gt; currently throw an error and not let the name through.  With this change, but approaches would validate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The benefit of adding &lt;code&gt;WP_Post_Type-&amp;gt;register()&lt;/code&gt; and &lt;code&gt;WP_Post_Type-&amp;gt;unregister()&lt;/code&gt; is simply that those wanting to use the object to create their post types do not need to duplicate the logic in &lt;code&gt;register_post_type()&lt;/code&gt;.  The benefit of this is being able to write code like this and leverage PHP's validation of object property names:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Post_Type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'my_widget'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Widgets'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my_app'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;public&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;menu_icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'dashicons-admin-generic'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;register&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Notice I added a backward-compatible additional parameter to the &lt;code&gt;unregistered_post_type&lt;/code&gt; hook to indicate if the post type existed in &lt;code&gt;$wp_post_types&lt;/code&gt; before the attempt to unregister it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
AFAICT there will be no backward compatibility or documentation issues with this change, so this should be a slam-dunk, right?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48710 (PDF uploads are treated like images: empty alt attribute and PHP notices) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48710#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48710#comment:11/1584115519159320</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket was discussed during today's accessibility bug-scrub: agreed this would be a nice fix for WordPress 5.5.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reported also on the Gutenberg repo &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/18593"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/18593&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49643 (Featured Image haven't got acces to new mediafile system.  (5.4-RC2-47447)) created</title>
      
        <dc:creator>perborch</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:01:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49643</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49643/1584115316401999</guid>
      <description>&lt;p&gt;
Featured Image haven't got acces to new mediafile system / but only the root folder and you can't chose what's in the other folders. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48045 (Save continually blinks, breaks if on bad wifi.) updated</title>
      
        <dc:creator>youknowriad</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48045#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48045#comment:4/1584114789000599</guid>
      <description>&lt;p&gt;
I've never seen this issue personally but worth moving this ticket to a Gutenberg issue for better investigations.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48045 (Save continually blinks, breaks if on bad wifi.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48045#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48045#comment:3/1584114300130616</guid>
      <description>&lt;p&gt;
@youknowriad when you have a chance :) Does this still happen after the introduction of the "sessionStorage autosave mechanism" in the block editor?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48710 (PDF uploads are treated like images: empty alt attribute and PHP notices) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48710#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48710#comment:10/1584113734482735</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584113732405400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48486 (Add compliance tab to plugin repository pages on WordPress.org) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48486#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48486#comment:33/1584113734419221</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584113732405400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48045 (Save continually blinks, breaks if on bad wifi.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48045#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48045#comment:2/1584113734359412</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584113732405400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:47/1584113734275573</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584113732405400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49608 (Implementing HTML 5.2 into the user create and edit forms.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49608#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49608#comment:3/1584112351478579</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584112350387000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49583 (Media Library in SubFolder, when Organize by Mo/Yr is deactivated) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49583#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49583#comment:4/1584112321780862</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket was discussed during today's accessibility bug-scrub: agreed to remove the accessibility focus as this issue doesn't appear to be strictly related to web accessibility.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49583 (Media Library in SubFolder, when Organize by Mo/Yr is deactivated) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49583#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49583#comment:3/1584112130474970</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584112128384400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49524 (Selecting then formatting often does not work.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49524#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49524#comment:3/1584112108790046</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket was discussed during today's accessibility bug-scrub: agreed to remove the accessibility focus, as this issue doesn't appear strictly related to web accessibility.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To help the editor team, it would be great to provide clearer steps to reproduce. I wasn't able to reproduce on a clean trunk installation.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49524 (Selecting then formatting often does not work.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:02:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49524#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49524#comment:2/1584111727047815</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584111725379400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49642 (Introduce Setting up Off-Site Backup and SMTP while Installation and ...) created</title>
      
        <dc:creator>thegulshankumar</dc:creator>

      <pubDate>Fri, 13 Mar 2020 14:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49642</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49642/1584109763539433</guid>
      <description>&lt;p&gt;
Hi,&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I think WordPress should have inbuilt feature for off-site backup. As it is a critical part of security. Many beginners do not understand the importance until something wrong happens such as getting hacked or losing data for any reasons.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;WordPress by default uses PHP (mail) function that generally comes in Spam folder or sometime never due to hosting issue. It's much better to have professional solution such as allowing user to integrate 3rd-party SMTP services.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Thanks&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49268 (Broken themes should always be listed) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 13 Mar 2020 14:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49268#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49268#comment:7/1584109340545509</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patches!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like I was mistaken in my original report, and the visibility of the buttons is already handled. I think the first patch&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49268/49268.diff" title="Attachment '49268.diff' in Ticket #49268"&gt;49268.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49268/49268.diff" title="Download"&gt;​&lt;/a&gt; is the only change that's needed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40351 (Term post re-counts scale poorly, are common and difficult to avoid) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 13 Mar 2020 14:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40351#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40351#comment:4/1584108943278820</guid>
      <description>&lt;p&gt;
I've also seen the Lightweight Term Count Update plugin reduce processing time from literally minutes when there's a large number of terms, to fractions of a second.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49182 (Unmask password button) updated</title>
      
        <dc:creator>carriganvb</dc:creator>

      <pubDate>Fri, 13 Mar 2020 14:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49182#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49182#comment:7/1584108360587286</guid>
      <description>&lt;p&gt;
@bernardroux OK I found what you mean. The password on the published pages that are password protected. I think I understand the problem... Now to fix it!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>poc.php attached to Ticket #49641</title>
      
        <dc:creator>growthwp</dc:creator>

      <pubDate>Fri, 13 Mar 2020 13:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49641/poc.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49641/poc.php/1584107996079358</guid>
      <description>&lt;p&gt;
PoC
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49641 (Clarify what happens when meta_value is `''` in get_users like functions.) created</title>
      
        <dc:creator>growthwp</dc:creator>

      <pubDate>Fri, 13 Mar 2020 13:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49641</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49641/1584107976828121</guid>
      <description>&lt;p&gt;
Because I didn't realize that doing this query:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;        $all_user_ids = get_users([
            'fields' =&amp;gt; 'id',
            'meta_key' =&amp;gt; 'secret_access_key',
            'meta_compare' =&amp;gt; '=',
            'meta_value' =&amp;gt; $dynamic_value_from_frontend
        ]);
&lt;/pre&gt;&lt;p&gt;
Given the credibility, history &amp;amp; robustness of &lt;code&gt;get_users&lt;/code&gt;, which entered under the hood of "that thing just works, don't doubt it", if &lt;code&gt;$dynamic_value_from_frontned&lt;/code&gt; were to be just a mere&lt;code&gt;''&lt;/code&gt;, instead of giving me an empty list of no users, &lt;strong&gt;the query would return a list of all users.&lt;/strong&gt; What happens when you rely on this list for mission-critical things? The worst.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my case, this list was very crucial for allowing access to customer websites, based on a secret string only the developers, us, know, we are able to access these sites and inherit the identity of our customer (mostly admin accounts). The way we achieve this is we attach that secret phrase to their &lt;code&gt;user_meta&lt;/code&gt; and as you can see, we attempt to hit an endpoint that looks at all the users and returns us with the one that matches the string we provided.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unfortunately, as I've said before, because our assumption, as well as our partners' and personal friends, some of whom are veterans in the industry, was that &lt;code&gt;get_users&lt;/code&gt; would forfeit completely if not given a key at all, instead, it just simply decides to ignore the field completely and retrieve based on the key alone.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The more interesting fact is that if we set the &lt;code&gt;meta_value&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;, it actually does the check and doesn't return any users.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here's a PoC: &lt;a class="ext-link" href="https://pastebin.com/vfaVuRp0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://pastebin.com/vfaVuRp0&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please make it clear that a &lt;code&gt;meta_value&lt;/code&gt; that equals to &lt;code&gt;''&lt;/code&gt; is not the same as it being &lt;code&gt;False&lt;/code&gt; and that the system defaults to just using the key, skipping all checks. The desired behavior should be:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;When the &lt;code&gt;meta_value&lt;/code&gt; is missing altogether, it means we're searching just for key.
&lt;/li&gt;&lt;li&gt;When the &lt;code&gt;meta_value&lt;/code&gt; is &lt;code&gt;''&lt;/code&gt;, it should be treated as a value and searched against.
&lt;/li&gt;&lt;li&gt;When the &lt;code&gt;meta_value&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, it should be treated as a value and searched against.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I do recognize that it's probably impossible to go back and change this and so, for me at least, it's even more reason to push this very important note to the front.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please mention this in either the comments for &lt;code&gt;get_users&lt;/code&gt;, in the codebase itself or make a phpcs rule for this. In other words, please specify that you must ensure the input for the &lt;code&gt;meta_value&lt;/code&gt; is properly checked for before actually being used due to this exact case.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
In our case, it would've been a disaster if we didn't fuzz around. While I completely understand it's us that should make sure whatever is passed is proper, I believe the community is not aware of this edge case not due to bad coding practices but simply due to the need to implement dynamic queries like this being very rare and as such, overlooked.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We've also notified 4 vendors, one of which is perhaps the biggest in terms of reach about a potential issue with dynamic query building like we had. In the case of a membership plugin that seemed to have all security checks in place, as we did, it resulted in certain users being given access to another user's property.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49640 (image_get_intermediate_size returns wrong) created</title>
      
        <dc:creator>CHEWX</dc:creator>

      <pubDate>Fri, 13 Mar 2020 10:25:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49640</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49640/1584095135478192</guid>
      <description>&lt;p&gt;
The function &lt;code&gt;image_get_intermediate_size&lt;/code&gt; isn't working as expected.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If I upload a &lt;code&gt;1200px x 900px&lt;/code&gt; image as the original. In WordPress theme I use &lt;code&gt;wp_get_attachment_image( $post_id, array( '1x1-large', '1x1-medium' ) );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;1x1-large&lt;/code&gt; is setup using &lt;code&gt;add_image_size( '1x1-large', 1024, 1024, true );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It will fail as, it cannot create this image size as the the original is smaller. However, the function in question is clever enough to look for other aspect ratios that match. This is good.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So if I had another name images called &lt;code&gt;1x1-medium&lt;/code&gt; (setup using &lt;code&gt;add_image_size( '1x1-medium', 768, 768, true );&lt;/code&gt; )&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This will exist as the original image is large enough to be sized down to this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The function however uses this this code-block to short-circuit it:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/46674e2367b8ca0c15b859bd578bc2119bfa0150/wp-includes/media.php#L780"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/46674e2367b8ca0c15b859bd578bc2119bfa0150/wp-includes/media.php#L780&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;// If there's an exact match to an existing image size, short circuit.
if ( intval( $data['width'] ) === intval( $size[0] ) &amp;amp;&amp;amp; intval( $data['height'] ) === intval( $size[1] ) ) {
    $candidates[ $data['width'] * $data['height'] ] = $data;
    break;
}
&lt;/pre&gt;&lt;p&gt;
So &lt;code&gt;$data['width'] =&lt;/code&gt; each image sizes width and &lt;code&gt;$size[0] = '1x1-large'&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This will never match!!! $size should in theory be a string, not an integer.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49185 (Option to use text link instead of auto embed.) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Fri, 13 Mar 2020 09:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49185#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49185#comment:7/1584093067262694</guid>
      <description>&lt;p&gt;
I just published a Core Editor Meeting Summary. It uses a mix of text links and one WordPress embed link.&lt;br /&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/2020/03/13/editor-chat-summary-11-march-2020/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2020/03/13/editor-chat-summary-11-march-2020/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Why the difference between them I do not know.&lt;br /&gt;
It would be nice to have the option to add a WordPress embed or a text link.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42324 (Extending the use of the Text widget by adding heading drop down and ...) closed</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Fri, 13 Mar 2020 09:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42324#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42324#comment:11/1584092576484374</guid>
      <description>wontfix: &lt;p&gt;
I am changing this to a wontfix and closing it as Gutenberg blocks are gradually taking over the widgets screen.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49231 (Plugins admin screens: form fields issue on small screens) updated</title>
      
        <dc:creator>maxpertici</dc:creator>

      <pubDate>Fri, 13 Mar 2020 08:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49231#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49231#comment:18/1584087697088512</guid>
      <description>&lt;p&gt;
I suggest a second path 49231.2.diff following comments from @afercia. I adjusted the behavior of the search field on responsive view and I also adjusted the behavior of the form (see screenshot).&lt;br /&gt;
I also modify my css for table list checkbox.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>unaligned form.png attached to Ticket #49231</title>
      
        <dc:creator>maxpertici</dc:creator>

      <pubDate>Fri, 13 Mar 2020 08:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49231/unaligned%20form.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49231/unaligned%20form.png/1584087670311426</guid>
      <description>&lt;p&gt;
unaligned form
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>49231.2.diff attached to Ticket #49231</title>
      
        <dc:creator>maxpertici</dc:creator>

      <pubDate>Fri, 13 Mar 2020 08:14:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49231/49231.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49231/49231.2.diff/1584087241607232</guid>
      <description>&lt;p&gt;
CSS Fix for plugins search form and table list with media queries
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49639 (Add a filter on wp_insert_user function regarding $user_pass) created</title>
      
        <dc:creator>stokim</dc:creator>

      <pubDate>Fri, 13 Mar 2020 06:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49639</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49639/1584081612329117</guid>
      <description>&lt;p&gt;
/5.3/src/wp-includes/user.php&lt;br /&gt;
function wp_insert_user ( $userdata ) 1542 line&lt;br /&gt;
Please apply the below filter so that I can add a rule on user typed password before hashing the password.&lt;br /&gt;
$pre_user_password = apply_filters(  'pre_user_password', $user_pass );&lt;br /&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Best regards,&lt;br /&gt;
Jen&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49268 (Broken themes should always be listed) updated</title>
      
        <dc:creator>sorenbronsted</dc:creator>

      <pubDate>Fri, 13 Mar 2020 05:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49268#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49268#comment:6/1584078226685877</guid>
      <description>&lt;p&gt;
Thanks @rebasaurus and it works, but for me there is a catch-22 to this bug report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I presume that I can use &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; constant to prevent users makes changes to a site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If the constant &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; is true then the first patch by @rebasaurus actually solves this, by showing to the user that there are themes which are broken, but the user can't do anything about it, because the user is not allowed to modify files. For me this is by design.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By allowing to modify files/themes even if &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; is true defeats the purpose of this constant. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49638 (Determine methodology recommendations for CSS audit) updated</title>
      
        <dc:creator>isabel_brison</dc:creator>

      <pubDate>Fri, 13 Mar 2020 05:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49638#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49638#comment:2/1584077218769916</guid>
      <description>&lt;p&gt;
I had a play with stylelint: installed it in a local branch, and added a very basic config to test the rules that seemed useful for audit purposes. Here are my takeaways:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;no-descending-specificity&lt;/code&gt; doesn't help much because it compares different selectors, e.g. &lt;code&gt;Expected selector ".about__container p" to come before selector ".about__section .column p:last-of-type"&lt;/code&gt;, which doesn't tell us a lot because we have huge files with sections related to different components of a page, so specificity levels naturally go up and down.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;no-duplicate-selectors&lt;/code&gt; returned quite a few results. This is worth looking into to check whether duplicates are accidental or if they are leveraging the cascade to override previous rules.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;selector-max-specificity&lt;/code&gt; is the most useful of the lot. I ran it with a limit of "1,3,2" (that's one id, three classes and two element selectors) and got a scary big amount of results. Here is where we probably want to go file by file and break down how much of that selector bloat we can get rid of. Ideally, we should be aiming for something like "0,2,0", but if that's too much to ask for, then let's see how low we can bring it without having to rewrite everything 😅
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, for a neat visual overview of specificity in files, this tool is quite nice: &lt;a class="ext-link" href="https://isellsoap.github.io/specificity-visualizer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://isellsoap.github.io/specificity-visualizer/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regarding dead code removal, we can try running something like &lt;a class="ext-link" href="https://github.com/purifycss/purifycss"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/purifycss/purifycss&lt;/a&gt;, to get some idea of where to look at least.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For removal of old IE-specific code, I think there's no option but going through everything manually 😟&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What I'm thinking is, if we're going to come up with actionable recommendations, we'll have to do quite a bit of manual testing, changing stuff and checking what breaks. The visual regression testing would be a good helper for that, so perhaps we should set it up sooner rather than later. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, I have a question: should we take plugins into account at all at this stage? If we're not changing any of the actual styling in wp-admin, is it even possible for there to be side-effects for plugins?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Mar 2020 04:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:83/1584074146742598</guid>
      <description>&lt;p&gt;
To ignore &lt;code&gt;/src/wp-includes/assets&lt;/code&gt; again it will have to be SVN deleted, and added to the ignored props on the parent dir, &lt;code&gt;/src/wp-includes&lt;/code&gt;. Then, when building, it will be created again but will not be committed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One problem with version control is that once a file is added and committed, it never really goes away. It may be deleted in the current revision, but as soon as you restore a previous revision it is created again...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When that happens, if an unversioned file already exists at the same location, it will cause conflict.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The only way to prevent that is to start "fresh". Thinking won't need to rename the directory but would need to rename the file.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We need to ensure that PHPUnit tests pass without JS build files.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As far as I see the only way to do that is to add a &lt;code&gt;file_exists()&lt;/code&gt; in script-loader.php. With 48154-update-file-check.diff it could be a "silent check" as it will never be reached when running WP, only when testing. On the other hand, can still throw "doing it wrong" user-notice perhaps?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38702 (REST API: Add accessor functions for post_status and post_parent) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 13 Mar 2020 04:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38702#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38702#comment:5/1584073548099730</guid>
      <description>&lt;p&gt;
This was needed for the Customize Posts plugin to be able to add filters to override a post field based on what has been modified in the Customizer changeset, but this plugin is not being maintained currently so it is not an active need.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38009 (#reply-title.comment-reply-title not updating when replying to an ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 04:16:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38009#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38009#comment:15/1584073005533492</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/167#issuecomment-598539956"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #167&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've been working on a couple of approaches to avoid the new element in the comment template, either:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;document.getElementById( 'reply-title' ).firstNode&lt;/code&gt; to get the textNode (which can then be replaced. This may need some extra work to get the first textNode to account for sites that have modified the form.
&lt;/li&gt;&lt;li&gt;Cloning the reply title and removing anything that isn't a text nodes &lt;code&gt;document.getElementById( 'reply-title' ).querySelectorAll( '*' )&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are options available.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45141 (Keyboard use bug in audio media player shortcode.) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Fri, 13 Mar 2020 02:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45141#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45141#comment:5/1584067413824844</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some quick testing in Firefox shows that using Up and Down arrow keys raises/lowers volume now, without the errors, whether focus is on the volume icon or the bar.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The MediaElement.js GitHub issue reports that this was fixed in version 4.2.12. WordPress updated Media Element to 4.2.13 last October (for the November release).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
More testing would be appreciated :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36524 (Problem with accessing last saved work) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 02:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36524#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36524#comment:5/1584066460546873</guid>
      <description>worksforme: &lt;p&gt;
Thanks for the follow-up!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49533 (Add user ID to wp_logout action) updated</title>
      
        <dc:creator>rebasaurus</dc:creator>

      <pubDate>Fri, 13 Mar 2020 00:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49533#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49533#comment:3/1584060660454544</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49533.patch attached to Ticket #49533</title>
      
        <dc:creator>rebasaurus</dc:creator>

      <pubDate>Fri, 13 Mar 2020 00:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49533/49533.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49533/49533.patch/1584060637479046</guid>
      <description>&lt;p&gt;
Added &lt;code&gt;pre_wp_logout&lt;/code&gt; action before used is logged out.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40351 (Term post re-counts scale poorly, are common and difficult to avoid) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 13 Mar 2020 00:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40351#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40351#comment:3/1584059514768282</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40351/cpu-usage.png" title="Attachment 'cpu-usage.png' in Ticket #40351"&gt;cpu-usage.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40351/cpu-usage.png" title="Download"&gt;​&lt;/a&gt; shows the room for improvement on large sites. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Work (a large news organisation) enabled light-weight term counting on March 7 due to CPU alerts firing daily during the &lt;code&gt;wp_scheduled_auto_draft_delete&lt;/code&gt; and &lt;code&gt;wp_scheduled_delete&lt;/code&gt; cron jobs. CPU use immediately dropped 30%+ during those tasks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note: for various reasons such as the number of users, we generate &lt;em&gt;a lot&lt;/em&gt; of auto-drafts so these results aren't typical on a standard WordPress site, this is very specific to a high usage site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At the very least, I think we can introduce some pre-flight hooks to the term counting functions to allow customisation of the database query. I'd suggest preflight filters for &lt;code&gt;wp_update_term_count_now()&lt;/code&gt;, &lt;code&gt;_update_post_term_count()&lt;/code&gt; and &lt;code&gt;_update_generic_term_count()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>cpu-usage.png attached to Ticket #40351</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 13 Mar 2020 00:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40351/cpu-usage.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40351/cpu-usage.png/1584058787979051</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>