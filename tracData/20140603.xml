<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10950 (Download external files to Media Library) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 03 Jun 2014 23:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10950#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10950#comment:8/1401839482397150</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28443 (SSL behind a load balancer) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 22:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28443#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28443#comment:1/1401832902041490</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28443" title="#28443: defect (bug): SSL behind a load balancer (closed: duplicate)"&gt;lracicot&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The solution suggested in the codex (&lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/is_ssl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Function_Reference/is_ssl&lt;/a&gt;) is to manually set the php server variable 'HTTPS', but this is not a good practice.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd argue it's not a bad practice to keep the application ignorant of the overall proxying setup. This is ultimately an environment configuration issue; the application shouldn't need to figure out how the headers are forwarded (X-Forwarded-* is a de facto standard, but I've seen SSL in particular be forwarded in a number of ways), or whether they can be trusted (an X-* header can simply be set by the client, with no way of knowing if it came from a proxy).
&lt;/p&gt;
&lt;p&gt;
Security aside (which is a dealbreaker), there is also a risk of infinite redirects for suddenly obeying these fields.
&lt;/p&gt;
&lt;p&gt;
See also: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9235" title="#9235: enhancement: Extract real IP behind a load balancer (closed: wontfix)"&gt;#9235&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15009" title="#15009: defect (bug): Widget RSS unstopable loop on self timeout (closed: invalid)"&gt;#15009&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15733" title="#15733: defect (bug): Wordpress Installation behind reverse-proxy ssl redirect loop (closed: wontfix)"&gt;#15733&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19337" title="#19337: defect (bug): is_ssl() fails behind nginx proxy (closed: worksforme)"&gt;#19337&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24394" title="#24394: enhancement: is_ssl does not recognize ssl when behind a proxy (closed: duplicate)"&gt;#24394&lt;/a&gt;, etc.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #9235 (Extract real IP behind a load balancer) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 21:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9235#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9235#comment:45/1401832618052006</guid>
      <description>wontfix: &lt;p&gt;
This PROXY_IP implementation isn't scalable — it's possible to have a significant and/or variable number of proxies. As covered previously I'd still like to leave this alone.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>functions.diff attached to Ticket #28443</title>
      
        <dc:creator>lracicot</dc:creator>

      <pubDate>Tue, 03 Jun 2014 21:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28443/functions.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28443/functions.diff/1401832029182614</guid>
      <description>&lt;p&gt;
The patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28443 (SSL behind a load balancer) created</title>
      
        <dc:creator>lracicot</dc:creator>

      <pubDate>Tue, 03 Jun 2014 21:46:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28443</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28443/1401831992275421</guid>
      <description>&lt;p&gt;
The 'is_ssl()' function does not support the X-Forwarded-Proto, which is the right way to verify if the request is https behind a load balancer.
&lt;/p&gt;
&lt;p&gt;
The solution suggested in the codex (&lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/is_ssl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Function_Reference/is_ssl&lt;/a&gt;) is to manually set the php server variable 'HTTPS', but this is not a good practice.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10950 (Download external files to Media Library) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 03 Jun 2014 21:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10950#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10950#comment:7/1401830577499493</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10950 (Download external files to Media Library) closed</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 03 Jun 2014 21:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10950#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10950#comment:6/1401830570596655</guid>
      <description>wontfix: &lt;p&gt;
I'm closing this out as there's a lack of traction here and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10950#comment:5" title="Comment 5"&gt;comment:5&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28441 (Errant activation hook with symlinked plugins in WordPress 3.9.x) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 03 Jun 2014 20:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28441#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28441#comment:5/1401828730456112</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
No, it doesn't make any difference. The paths will always be without the trailing slash after WordPress formats them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28441 (Errant activation hook with symlinked plugins in WordPress 3.9.x) updated</title>
      
        <dc:creator>clifgriffin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 20:28:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28441#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28441#comment:4/1401827336320436</guid>
      <description>&lt;p&gt;
Oh man, I didn't notice the trailing slash on most of those.  I remember vaguely there is a difference when symlinking, but it didn't occur to me since everything else was working properly.
&lt;/p&gt;
&lt;p&gt;
So basically, instead of symlinking with this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;ln -s ~/Dropbox/Development/Repositories/shopp-arrange/trunk/ ./shopp-arrange
&lt;/pre&gt;&lt;p&gt;
I should have done:
&lt;/p&gt;
&lt;pre class="wiki"&gt;ln -s ~/Dropbox/Development/Repositories/shopp-arrange/trunk/ ./shopp-arrange/
&lt;/pre&gt;&lt;p&gt;
?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28441 (Errant activation hook with symlinked plugins in WordPress 3.9.x) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 03 Jun 2014 20:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28441#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28441#comment:3/1401827026269806</guid>
      <description>&lt;p&gt;
This one does the same thing, in effect:
&lt;/p&gt;
&lt;pre class="wiki"&gt;shopp -&amp;gt; /Users/me/Dropbox/Development/Repositories/shopp
&lt;/pre&gt;&lt;p&gt;
FWIW, my test code adapted from &lt;code&gt;plugin_basename()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$file = '/Users/me/Dropbox/Development/Repositories/shopp-arrange/trunk/shopp-arrange.php';
$wp_plugin_paths['/Applications/MAMP/htdocs_test/wp-content/plugins/shopp'] = '/Users/me/Dropbox/Development/Repositories/shopp';
$wp_plugin_paths['/Applications/MAMP/htdocs_test/wp-content/plugins/trunk'] = '/Users/me/Dropbox/Development/Repositories/shopp-arrange/trunk';
foreach ( $wp_plugin_paths as $dir =&amp;gt; $realdir ) {
	if ( strpos( $file, $realdir ) === 0 ) {
		$file = $dir . substr( $file, strlen( $realdir ) );
	}
}
$plugin_dir = '/Applications/MAMP/htdocs_test/wp-content/plugins';
$mu_plugin_dir = 'doesntmatterwhat';
$file = wp_normalize_path( $file );
$plugin_dir = wp_normalize_path( $plugin_dir );
$file = preg_replace('#^' . preg_quote($plugin_dir, '#') . '/|^' . preg_quote($mu_plugin_dir, '#') . '/#','',$file); // get relative path from plugins dir
$file = trim($file, '/');
echo $file;
exit;
&lt;/pre&gt;&lt;p&gt;
Result: &lt;code&gt;shopp-arrange/trunk/shopp-arrange.php&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28441 (Errant activation hook with symlinked plugins in WordPress 3.9.x) updated</title>
      
        <dc:creator>clifgriffin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 20:14:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28441#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28441#comment:2/1401826477871245</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28441#comment:1" title="Comment 1"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can only reproduce this by adding this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_plugin_paths['/Applications/MAMP/htdocs_test/wp-content/plugins'] = '/Users/me/Dropbox/Development/Repositories';
&lt;/pre&gt;&lt;p&gt;
I have a feeling you probably have a plugin with this path: &lt;code&gt;/Users/me/Dropbox/Development/Repositories/my-plugin.php&lt;/code&gt; which you are also symlinking to the &lt;code&gt;/Applications/MAMP/htdocs_test/wp-content/plugins&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
The solution is that the &lt;code&gt;$wp_plugin_paths&lt;/code&gt; should always be ordered by length, from longest to shortest. That way we won't have path conflicts like this.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16953" title="#16953: enhancement: Allow symlinked plugins (closed: fixed)"&gt;#16953&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unfortunately, no.  Just double checked to be certain, but I only have symlinks setup for directories.  From terminal:
&lt;/p&gt;
&lt;pre class="wiki"&gt;mbp:plugins me$ ls -lart | grep "\-&amp;gt;"
lrwxr-xr-x   1 me  admin      79 Feb  8 11:12 advanced-content-templates -&amp;gt; /Users/me/Dropbox/Development/Repositories/advanced-content-templates/
lrwxr-xr-x   1 me  admin      65 Feb  8 11:48 wp-sent-mail -&amp;gt; /Users/me/Dropbox/Development/Repositories/wp-sent-mail/
lrwxr-xr-x   1 me  admin      66 Feb  8 11:48 genesis-shopp -&amp;gt; /Users/me/Dropbox/Development/Repositories/genesis-shopp/
lrwxr-xr-x   1 me  admin      79 Feb  8 12:55 simple-post-template -&amp;gt; /Users/me/Dropbox/Development/Repositories/simple-post-template/trunk/
lrwxr-xr-x   1 me  admin      75 Feb 11 23:28 shopp-google-analytics -&amp;gt; /Users/me/Dropbox/Development/Repositories/shopp-google-analytics/
lrwxr-xr-x   1 me  admin      72 Apr  3 20:32 shopp-exchange-rates -&amp;gt; /Users/me/Dropbox/Development/Repositories/shopp-exchange-rates
lrwxr-xr-x   1 me  admin      64 May  6 07:56 featherlinks -&amp;gt; /Users/me/Dropbox/Development/Repositories/featherlinks
lrwxr-xr-x   1 me  admin      57 May 21 13:43 shopp -&amp;gt; /Users/me/Dropbox/Development/Repositories/shopp
lrwxr-xr-x   1 me  admin      66 May 27 19:37 shopp-reviews -&amp;gt; /Users/me/Dropbox/Development/Repositories/shopp-reviews/
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28441 (Errant activation hook with symlinked plugins in WordPress 3.9.x) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 03 Jun 2014 20:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28441#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28441#comment:1/1401826185873239</guid>
      <description>&lt;p&gt;
I can only reproduce this by adding this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_plugin_paths['/Applications/MAMP/htdocs_test/wp-content/plugins'] = '/Users/me/Dropbox/Development/Repositories';
&lt;/pre&gt;&lt;p&gt;
I have a feeling you probably have a plugin with this path: &lt;code&gt;/Users/me/Dropbox/Development/Repositories/my-plugin.php&lt;/code&gt; which you are also symlinking to the &lt;code&gt;/Applications/MAMP/htdocs_test/wp-content/plugins&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
The solution is that the &lt;code&gt;$wp_plugin_paths&lt;/code&gt; should always be ordered by length, from longest to shortest. That way we won't have path conflicts like this.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16953" title="#16953: enhancement: Allow symlinked plugins (closed: fixed)"&gt;#16953&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28413 (wp_editor on the front end is affected by theme CSS) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 03 Jun 2014 19:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28413#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28413#comment:3/1401824209674111</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's go ahead and get editor styling right on the front.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28109 (In `Insert from URL` state of media modal, image preview obscured) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 03 Jun 2014 18:50:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28109#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28109#comment:12/1401821410414326</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>22726.diff attached to Ticket #22726</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 03 Jun 2014 18:14:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22726/22726.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22726/22726.diff/1401819297289831</guid>
      <description>&lt;p&gt;
work in progress
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22726 (Move 'Insert from URL' tab into the 'Insert Media' tab) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 03 Jun 2014 18:06:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22726#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22726#comment:7/1401818808861524</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-posts-list-table.php.2.patch attached to Ticket #28442</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Tue, 03 Jun 2014 16:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28442/class-wp-posts-list-table.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28442/class-wp-posts-list-table.php.2.patch/1401813889352993</guid>
      <description>&lt;p&gt;
Attached a new patch with some comment clarifications.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>class-wp-posts-list-table.php.patch attached to Ticket #28442</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Tue, 03 Jun 2014 16:42:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28442/class-wp-posts-list-table.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28442/class-wp-posts-list-table.php.patch/1401813754913466</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28442 (New filter for post status links (in admin)) created</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Tue, 03 Jun 2014 16:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28442</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28442/1401813741705055</guid>
      <description>&lt;p&gt;
I'm proposing the addition of a filter, "post_status_links", to let plugins modify the post status links, as displayed in this picture:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/u/2758854/post-status-links.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/u/2758854/post-status-links.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There is already exactly this type of filter in class-wp-comments-list-table.php called "comment_status_links", which you can see here:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-comments-list-table.php#L200"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-comments-list-table.php#L200&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I am proposing we add this to posts as well, and possibly to all the admin list templates at some point.
&lt;/p&gt;
&lt;p&gt;
There are multiple use cases here, such as changing the post counts, adding custom links, hiding some of the links.
&lt;/p&gt;
&lt;p&gt;
Attached you will find a diff again trunk.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>egekhter</dc:creator>

      <pubDate>Tue, 03 Jun 2014 16:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:145</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:145/1401813677864225</guid>
      <description>&lt;p&gt;
Aha - for me the culprit was developing in PhpStorm and listening for bug connections!
Was pulling my hair out for hours over this. Turning it off and all seems to be back to normal. Good thing I backed up my DB :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>egekhter</dc:creator>

      <pubDate>Tue, 03 Jun 2014 16:35:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:144</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:144/1401813343642620</guid>
      <description>&lt;p&gt;
The patch for 3.9 did not fix the issue for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>egekhter</dc:creator>

      <pubDate>Tue, 03 Jun 2014 16:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:143</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:143/1401812639202824</guid>
      <description>&lt;p&gt;
I ran into this problem last night at around 56 menu items.
&lt;/p&gt;
&lt;p&gt;
In looking into the DB, any new items added were added to the Table wp_posts with a draft status.
Manually changing it to publish didn't work. Adding a term relationship between the menu id and the object id for the new menu item did work temporarily. Upon visiting the UI screen, hitting save deleted all the changes I had made in my DB.
&lt;/p&gt;
&lt;p&gt;
Is there any sane explanation as to how the DB is structured so people can make changes on the backend?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>woodent</dc:creator>

      <pubDate>Tue, 03 Jun 2014 16:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:142</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:142/1401811256691332</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14134#comment:141" title="Comment 141"&gt;helgatheviking&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It &lt;em&gt;is&lt;/em&gt; a WordPress problem because the menus have such a huge $_POSt data that it runs into the max vars. I like the idea of the patch only saving changed items but haven't tested it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.  WordPress needs to work within the context of standard server configurations.  The 5 minute install claim won't really apply if we require additional server configurations.  So, the question is will the current patch work or do we need to get more creative?
&lt;/p&gt;
&lt;p&gt;
It seems to me that this solution probably wouldn't work when initially creating a large menu.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28441 (Errant activation hook with symlinked plugins in WordPress 3.9.x) created</title>
      
        <dc:creator>clifgriffin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28441/1401810337502840</guid>
      <description>&lt;p&gt;
It seems there is still a scenario where symlinked plugins do not work seamlessly in WordPress 3.9.1.
&lt;/p&gt;
&lt;p&gt;
Here is my setup:
&lt;/p&gt;
&lt;p&gt;
Plugin location on disk:
/Users/me/Dropbox/Development/Repositories/shopp-arrange/trunk
&lt;/p&gt;
&lt;p&gt;
Symlinked location:
/Applications/MAMP/htdocs_test/wp-content/plugins/trunk
&lt;/p&gt;
&lt;p&gt;
When running ls in the plugins directory, it returns this in terminal:
trunk -&amp;gt; /Users/me/Dropbox/Development/Repositories/shopp-arrange/trunk/
&lt;/p&gt;
&lt;p&gt;
Additionally, &lt;code&gt;$wp_plugin_paths&lt;/code&gt; contains the following entry:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href="http://core.trac.wordpress.org/Applications/MAMP/htdocs_test/wp-content/plugins/trunk"&gt;Applications/MAMP/htdocs_test/wp-content/plugins/trunk&lt;/a&gt; =&amp;gt; /Users/me/Dropbox/Development/Repositories/shopp-arrange/trunk
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which looks exactly right.  &lt;code&gt;wp_register_plugin_realpath&lt;/code&gt; seems to be doing its job.
&lt;/p&gt;
&lt;p&gt;
The issue is that my activation hook isn't running.  I finally decided to look at the actions queue and see what's registered there. I found:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[activate_shopp-arrange/trunk/shopp-arrange.php] =&amp;gt; Array
        (
            [10] =&amp;gt; Array
                (
                    [000000002f54486c000000013e83cf29activate] =&amp;gt; Array
                        (
                            [function] =&amp;gt; Array
                                (
                                    [0] =&amp;gt; ShoppArrange Object
                                        (
                                            [table_name] =&amp;gt; wp_cgd_term_order
                                            [prefix] =&amp;gt; shopp_arrange
                                            [settings] =&amp;gt;
                                        )
                                    [1] =&amp;gt; activate
                                )
                            [accepted_args] =&amp;gt; 1
                        )
                )
        )
&lt;/pre&gt;&lt;p&gt;
This does not look correct at all.
&lt;/p&gt;
&lt;p&gt;
After spending a couple of hours looking at this, I decided to temporarily give up the search and report the issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28425 (get_permalink passes only post ID to called functions instead of post ...) updated</title>
      
        <dc:creator>arnee</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28425#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28425#comment:6/1401809291983033</guid>
      <description>&lt;p&gt;
A case like this would be if you have a post object, which is not in the post cache yet. There might be several reasons for this, one is if you used a custom SELECT SQL to fetch more than one post (like my sitemap plugin does).
&lt;/p&gt;
&lt;p&gt;
On the get_permalink call, the first get_post call will transform the given object into a WP_Post object. This is good. Unfortunately if the post is a page, &lt;em&gt;get_page_link&lt;/em&gt; will be called with only the ID. get_page_link therefore calls get_post (with only the ID) which leads to a SQL query.
&lt;/p&gt;
&lt;p&gt;
Anyway there is no reason the object should not be passed, since passing the ID creates definitely &lt;em&gt;some&lt;/em&gt; unnecessary overhead in any case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28436 (allowed_themes filter does not pass blog_id) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28436#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28436#comment:2/1401809199700673</guid>
      <description>&lt;p&gt;
I'd have to go back into the ticket and older code to jog my memory on this, but the current 'allowed_themes' filter is likely explicitly applied to the network list of themes only, for backwards compatibility reasons. (It's an old filter.) Expanding it to what is allowed on a site could be problematic, depending on how people are using it.
&lt;/p&gt;
&lt;p&gt;
Off the top of my head, we should probably shift the 'allowed_themes' filter into ::get_allowed_on_network() and add a new filter to get_allowed().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28436 (allowed_themes filter does not pass blog_id) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:20:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28436#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28436#comment:1/1401808800610751</guid>
      <description>&lt;p&gt;
Would you care to create a patch for the former? :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24716 (Grid view for the Media Library) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:18:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24716#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24716#comment:20/1401808736553795</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24716/24716.5.diff" title="Attachment '24716.5.diff' in Ticket #24716"&gt;attachment:24716.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24716/24716.5.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove router instantiation bloat that isn't used by &lt;code&gt;MediaFrame.Manage&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Fix uploader issue @wonderboymusic brought up in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24716#comment:15" title="Comment 15"&gt;comment:15&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are now no standing issues with this patch. Please futz, test, and provide feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28439 (Add 'post_date' as a possible orderby argument to get_terms()) updated</title>
      
        <dc:creator>jchristopher</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:16:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28439#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28439#comment:3/1401808587667633</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here's an &lt;code&gt;EXPLAIN&lt;/code&gt; from my test site which admittedly only has 4 Categories and 3 Posts:
&lt;/p&gt;
&lt;pre class="wiki"&gt;EXPLAIN SELECT t.*, tt.*
  FROM wpsvn_terms AS t
INNER JOIN wpsvn_term_taxonomy AS tt
  ON t.term_id = tt.term_id
JOIN wpsvn_term_relationships AS tr
  ON tr.term_taxonomy_id = tt.term_taxonomy_id
JOIN wpsvn_posts AS p
  ON p.ID = tr.object_id
WHERE tt.taxonomy IN ('category')
ORDER BY p.post_date DESC
&lt;/pre&gt;&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; id &lt;/td&gt;&lt;td&gt; select_type &lt;/td&gt;&lt;td&gt; table &lt;/td&gt;&lt;td&gt; type &lt;/td&gt;&lt;td&gt; possible_keys &lt;/td&gt;&lt;td&gt; key &lt;/td&gt;&lt;td&gt; key_len &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; rows &lt;/td&gt;&lt;td&gt; Extra
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; tt &lt;/td&gt;&lt;td&gt;        ALL &lt;/td&gt;&lt;td&gt; PRIMARY,term_id_taxonomy,taxonomy &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; 4 &lt;/td&gt;&lt;td&gt; Using where; Using temporary; Using filesort
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; tr &lt;/td&gt;&lt;td&gt;        ref &lt;/td&gt;&lt;td&gt; PRIMARY,term_taxonomy_id &lt;/td&gt;&lt;td&gt; term_taxonomy_id &lt;/td&gt;&lt;td&gt; 8 &lt;/td&gt;&lt;td&gt; wpsvn.tt.term_taxonomy_id &lt;/td&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; Using index
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; t &lt;/td&gt;&lt;td&gt; ALL &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; NULL &lt;/td&gt;&lt;td&gt; 4 &lt;/td&gt;&lt;td&gt; Using where; Using join buffer
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; p        &lt;/td&gt;&lt;td&gt; eq_ref &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; 8 &lt;/td&gt;&lt;td&gt; wpsvn.tr.object_id &lt;/td&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24716.5.diff attached to Ticket #24716</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:16:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24716/24716.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24716/24716.5.diff/1401808585987089</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28440 (WP_Editor() - Disable Drag Drop Upload) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:06:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28440#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28440#comment:1/1401808004312115</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28440 (WP_Editor() - Disable Drag Drop Upload) created</title>
      
        <dc:creator>Howdy_McGee</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:05:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28440/1401807915347367</guid>
      <description>&lt;p&gt;
This could be the same problem as my last ticket (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28338" title="#28338: enhancement: Optional Disable Drop &amp;amp; Drop TinyMCE 4.0 Upload (closed: fixed)"&gt;#28338&lt;/a&gt;) but it seems like the &lt;code&gt;drag_drop_upload&lt;/code&gt; flag that is currently in the codex may be broken. I've tried this on a few installs and was unable to actually disable the drag and drop upload functionality:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_editor($editor_content, 'editorID', array(
	'wpautop'	   =&amp;gt; true,
	'media_buttons'	   =&amp;gt; false,
	'textarea_name'	   =&amp;gt; '_editor_name',
	'textarea_rows'	   =&amp;gt; 15,
	'teeny'		   =&amp;gt; true,
	'drag_drop_upload' =&amp;gt; false
));
&lt;/pre&gt;&lt;p&gt;
You can view The Codex here (&lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/wp_editor"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Function_Reference/wp_editor&lt;/a&gt;) which is the last option in the arguments list.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28434 (Add 'fields' parameter to WP_Comment_Query) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28434#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28434#comment:4/1401807860159571</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/20487" title="#20487: enhancement: Comment search isn't customizable (new)"&gt;#20487&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28434 (Add 'fields' parameter to WP_Comment_Query) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28434#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28434#comment:3/1401807837960917</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20487 (Comment search isn't customizable) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 03 Jun 2014 15:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20487#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20487#comment:23/1401807812284140</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/15249" title="#15249: enhancement: Filtering get_search_sql for advanced queries (assigned)"&gt;#15249&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28434" title="#28434: enhancement: Add 'fields' parameter to WP_Comment_Query (closed: fixed)"&gt;#28434&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28439 (Add 'post_date' as a possible orderby argument to get_terms()) updated</title>
      
        <dc:creator>jchristopher</dc:creator>

      <pubDate>Tue, 03 Jun 2014 14:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28439#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28439#comment:2/1401807472294624</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28439#comment:1" title="Comment 1"&gt;lpointet&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How does this query behaves when a same term is applied to multiple posts?
Because joining on posts may return multiple times the same terms for instance.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're absolutely right! &lt;code&gt;28439.2.patch&lt;/code&gt; ensures &lt;code&gt;SELECT DISTINCT&lt;/code&gt; to avoid duplicate terms.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28439.2.patch attached to Ticket #28439</title>
      
        <dc:creator>jchristopher</dc:creator>

      <pubDate>Tue, 03 Jun 2014 14:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28439/28439.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28439/28439.2.patch/1401807414513660</guid>
      <description>&lt;p&gt;
To prevent duplicate terms, SELECT DISTINCT when orderby = 'post_date'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28439 (Add 'post_date' as a possible orderby argument to get_terms()) updated</title>
      
        <dc:creator>lpointet</dc:creator>

      <pubDate>Tue, 03 Jun 2014 14:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28439#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28439#comment:1/1401807000566083</guid>
      <description>&lt;p&gt;
How does this query behaves when a same term is applied to multiple posts?
Because joining on posts may return multiple times the same terms for instance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28439.patch attached to Ticket #28439</title>
      
        <dc:creator>jchristopher</dc:creator>

      <pubDate>Tue, 03 Jun 2014 14:37:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28439/28439.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28439/28439.patch/1401806277629233</guid>
      <description>&lt;p&gt;
Add orderby argument of post_date to get_terms()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28439 (Add 'post_date' as a possible orderby argument to get_terms()) created</title>
      
        <dc:creator>jchristopher</dc:creator>

      <pubDate>Tue, 03 Jun 2014 14:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28439/1401806225141328</guid>
      <description>&lt;p&gt;
There have been a couple of times where I needed to retrieve a list of taxonomy terms ordered by the &lt;code&gt;post_date&lt;/code&gt; of their applicable posts. This patch considers &lt;code&gt;post_date&lt;/code&gt; as a potential &lt;code&gt;orderby&lt;/code&gt; argument value in &lt;code&gt;get_terms()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #15311,​28438 batch updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 03 Jun 2014 14:03:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=15311%2C28438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=15311%2C28438/1401804185026374</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15311" title="#15311: enhancement: dynamic image resize (on the fly) using already available functions (new)"&gt;#15311&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #28159 (get_body_class makes a raw, uncacheable query for child posts) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 13:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28159#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28159#comment:4/1401803818307798</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28159#comment:3" title="Comment 3"&gt;nacin&lt;/a&gt;: Sure, but that doesn't really give us the page's children. Perhaps "caching" the query result in a &lt;code&gt;_wp_has_children&lt;/code&gt; meta and flushing it in &lt;code&gt;wp_insert_post()&lt;/code&gt; could work?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28159 (get_body_class makes a raw, uncacheable query for child posts) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 13:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28159#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28159#comment:3/1401803349124912</guid>
      <description>&lt;p&gt;
This would work, and would leverage post caches:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$parent_page = get_post( $page_id );
if ( 'page' === $parent_page-&amp;gt;post_type &amp;amp;&amp;amp; 'publish' === $parent_page-&amp;gt;post_status ) {
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28159 (get_body_class makes a raw, uncacheable query for child posts) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 13:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28159#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28159#comment:2/1401803236787142</guid>
      <description>&lt;p&gt;
Using &lt;code&gt;get_posts()&lt;/code&gt; will actually make it &lt;a class="ext-link" href="https://cloudup.com/cTaAmXM1CQA"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;~ 5x slower&lt;/a&gt; and doesn't really do any useful caching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28438 (thinking about resizing images) created</title>
      
        <dc:creator>alexufo</dc:creator>

      <pubDate>Tue, 03 Jun 2014 13:13:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28438/1401801201222351</guid>
      <description>&lt;p&gt;
As we know wp can resize images only on upload. I think this is big problem for websites in future. This is not flex way. I know about plugins re-resizing all old images with new settings, but this is so strange...
the best organization resizing images  what i know, i see in opencart.
It resized images on the fly with htaccess and saved it to cache.
You can better understand me by reading this article
&lt;a class="ext-link" href="http://www.myrant.net/2011/03/07/resize-images-on-the-fly-without-messing-with-image-urls/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.myrant.net/2011/03/07/resize-images-on-the-fly-without-messing-with-image-urls/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think this is the best method for work with image resizing in any cms.
We resized images only if not exist in cache.
I think we should save images in wp-upload folder only for original images. All images with name like 100x200-aaa.jpg in wp-upload are temporary by default (because web design are not constant) and should be saved in cache folder.
&lt;/p&gt;
&lt;p&gt;
I may be wrong. Sorry. May be current image organization in wp historical important
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27056 (Add hook for custom post.php actions) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Tue, 03 Jun 2014 12:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27056#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27056#comment:3/1401799479916370</guid>
      <description>&lt;p&gt;
Using &lt;em&gt;admin-post.php&lt;/em&gt; is not an option because you cannot modify where &lt;em&gt;edit-form-advanced.php&lt;/em&gt; posts to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28383 (Adding have_the_post() as a shortcut to have_posts() and the_post() loops) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 12:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28383#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28383#comment:9/1401797242347388</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
How many use cases are there really for using have_posts() without the_post()?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In a while loop — none, because that would result in an infinite loop. In an if statement though, that's perfectly valid, because most often you don't want to advance the posts cursor until you actually hit the loop.
&lt;/p&gt;
&lt;p&gt;
I have mixed feelings about this, and although I do agree that "the loop" in its current form is a bit awkward, I don't see how &lt;code&gt;have_the_post()&lt;/code&gt; makes it any easier, especially once you start working with secondary loops, where you need &lt;code&gt;wp_reset_postdata()&lt;/code&gt;. It think it's already a bit too implicit with &lt;code&gt;the_post()&lt;/code&gt; and moving that inside &lt;code&gt;have_the_post()&lt;/code&gt; makes it even more implicit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28425 (get_permalink passes only post ID to called functions instead of post ...) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 11:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28425#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28425#comment:5/1401796410617490</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This will result in an additional post-resolving with eventually a database call in some situations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you provide some examples of such situations? I can be wrong, but afaik if the post has been fetched before, &lt;code&gt;get_post()&lt;/code&gt; will simply get the post from cache via &lt;code&gt;WP_Post::get_instance()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23431 ([embed] shortcode doesn't work with do_shortcode()) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 11:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23431#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23431#comment:9/1401795116880354</guid>
      <description>&lt;p&gt;
I think we need to be careful here.
&lt;/p&gt;
&lt;p&gt;
As you probably know, &lt;code&gt;[embed]&lt;/code&gt; is a bit special, and it runs earlier than any other shortcode. The embed shortcode can actually return another shortcode as of 3.6, see &lt;code&gt;wp_embed_handler_audio()&lt;/code&gt; in media.php which works fine with posts and the_content, but you'd need to run the result twice through &lt;code&gt;do_shortcode()&lt;/code&gt; if you're going to do it manually.
&lt;/p&gt;
&lt;p&gt;
There's also a caching mechanism for oEmbed which uses post meta to store the data. It uses the current post global, which means that if you're running the embed shortcode (or the_content filter for that matter) manually without an explicit post context (outside of the loop), you can get pretty weird stuff, like non-relevant oembed cache data stored with the last post of the main query, meaning a "cache flush" every time you publish a new post.
&lt;/p&gt;
&lt;p&gt;
That said using the &lt;code&gt;run_shortcode()&lt;/code&gt; method is overkill in this scenario, because you already know the shortcode tag and the URL you'd like to embed, so there's no reason to run the regex in &lt;code&gt;do_shortcode()&lt;/code&gt; one more time. You can invoke the &lt;code&gt;shortcode()&lt;/code&gt; method directly, which will happily accept shortcode attributes in standard form, and doing that is essentially the same as registering an actual (vs fake) callback for the embed shortcode, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23431/23431.2.diff" title="Attachment '23431.2.diff' in Ticket #23431"&gt;23431.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23431/23431.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23431.2.diff attached to Ticket #23431</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 11:29:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23431/23431.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23431/23431.2.diff/1401794979382225</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28407 (You are unable to override the attachment name in wp_mail() when ...) updated</title>
      
        <dc:creator>syntaxart</dc:creator>

      <pubDate>Tue, 03 Jun 2014 10:41:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28407#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28407#comment:3/1401792095152381</guid>
      <description>&lt;p&gt;
I have placed your solution into a function and have used the add_action hook 'phpmailer_init'.  This works perfectly fine for this.  Thank you for your help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28412 (get_queried_object_id() method in pre_get_posts) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 09:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28412#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28412#comment:4/1401789019250440</guid>
      <description>&lt;p&gt;
An alternative approach in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28412/28412.diff" title="Attachment '28412.diff' in Ticket #28412"&gt;28412.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28412/28412.diff" title="Download"&gt;​&lt;/a&gt;: since we're checking for null with &lt;code&gt;is_null()&lt;/code&gt;, let's actually set it to null during init.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28412.diff attached to Ticket #28412</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 09:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28412/28412.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28412/28412.diff/1401788894603363</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28415 (si-plug) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 03 Jun 2014 09:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28415#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28415#comment:3/1401788595858097</guid>
      <description>invalid: &lt;p&gt;
You're in the wrong place I'm afraid. &lt;a class="ext-link" href="https://wordpress.org/plugins/about/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Submit your plugin here&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28431 (There's no way to close the "keyboard shortcuts" modal with the keyboard) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Tue, 03 Jun 2014 09:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28431#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28431#comment:2/1401787862804588</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27388" title="#27388: enhancement: Make TinyMCE modal behavior more consistent (closed: fixed)"&gt;#27388&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27736 (Save one query when inserting a new post) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 03 Jun 2014 09:29:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27736#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27736#comment:5/1401787765404751</guid>
      <description>&lt;p&gt;
The issue was introduced in version 3.0 (&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13184" title="Don't require a default category for post types other than 'post'. see ..."&gt;[13184]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14883" title="Don't set default category when saving an auto-draft. fixes #13531"&gt;[14883]&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28415 (si-plug) reopened</title>
      
        <dc:creator>palsokar.mandar</dc:creator>

      <pubDate>Tue, 03 Jun 2014 07:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28415#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28415#comment:2/1401782399259328</guid>
      <description>&lt;p&gt;
is my plugin fine.?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27736 (Save one query when inserting a new post) updated</title>
      
        <dc:creator>ozh</dc:creator>

      <pubDate>Tue, 03 Jun 2014 06:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27736#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27736#comment:4/1401775985861526</guid>
      <description>&lt;p&gt;
(why 3.0 ?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28436 (allowed_themes filter does not pass blog_id) created</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Jun 2014 05:49:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28436</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28436/1401774547470643</guid>
      <description>&lt;p&gt;
The &lt;code&gt;allowed_themes&lt;/code&gt; does not pass the &lt;code&gt;$blog_id&lt;/code&gt; parameter into the filter, so you can't currently filter based on the site.
&lt;/p&gt;
&lt;p&gt;
(There's also no filters in &lt;code&gt;WP_Theme::get_allowed_on_network&lt;/code&gt; or &lt;code&gt;WP_Theme::get_allowed_on_site&lt;/code&gt;, plus the two arrays are combined together, so a filter just in &lt;code&gt;WP_Theme::get_allowed_on_site&lt;/code&gt; would be inadequate for blacklisting themes for certain sites.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28434 (Add 'fields' parameter to WP_Comment_Query) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Tue, 03 Jun 2014 05:27:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28434#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28434#comment:2/1401773268219684</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Basic unit tests added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28434-tests.patch attached to Ticket #28434</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Tue, 03 Jun 2014 05:27:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28434/28434-tests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28434/28434-tests.patch/1401773241865658</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>helgatheviking</dc:creator>

      <pubDate>Tue, 03 Jun 2014 05:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:141</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:141/1401772892333391</guid>
      <description>&lt;p&gt;
It &lt;em&gt;is&lt;/em&gt; a WordPress problem because the menus have such a huge $_POSt data that it runs into the max vars. I like the idea of the patch only saving changed items but haven't tested it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28434 (Add 'fields' parameter to WP_Comment_Query) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 03 Jun 2014 04:59:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28434#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28434#comment:1/1401771593302601</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
I'm surprised this has never been suggested before (at least, my searching yielded nothing).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28435 (wp_update_user breaks when passed WP_User instance) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Jun 2014 04:58:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28435#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28435#comment:1/1401771524774307</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28435 (wp_update_user breaks when passed WP_User instance) created</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Jun 2014 04:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28435/1401771471201044</guid>
      <description>&lt;p&gt;
Supposedly fixed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21429" title="#21429: enhancement: wp_update_user() and wp_insert_user() should accept WP_User (closed: fixed)"&gt;#21429&lt;/a&gt;. (Tangential to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28019" title="#28019: defect (bug): WP_User does not initialise data to a sane value (closed: fixed)"&gt;#28019&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
If you pass a &lt;code&gt;WP_User&lt;/code&gt; instance to &lt;code&gt;wp_update_user&lt;/code&gt;, it first calls &lt;code&gt;WP_User::to_array&lt;/code&gt;, which returns the user data from the DB. This is then treated as the input data.
&lt;/p&gt;
&lt;p&gt;
The problem then is that &lt;code&gt;$userdata['user_pass']&lt;/code&gt; is &lt;strong&gt;always&lt;/strong&gt; set, as it's always included in &lt;code&gt;$userdata&lt;/code&gt;. This then gets double-hashed by &lt;code&gt;wp_update_user&lt;/code&gt;. (&lt;code&gt;wp_update_user&lt;/code&gt; will then update the cookies, so the user won't notice until they're logged out)
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
$testuserid = 1;
$user = get_userdata( $testuserid );
echo 'Before: ' . $user-&amp;gt;user_pass;
wp_update_user( $user );
// Reload the data
$user = get_userdata( $testuserid );
echo 'After: ' . $user-&amp;gt;user_pass;
&lt;/pre&gt;&lt;p&gt;
Current output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Before: $P$BDqB8PmujqwtUNqnDW/aiQKuAEvm741
After: $P$BsqV0Lkka4QIWE9RaveZ49wvOMnHD//
&lt;/pre&gt;&lt;p&gt;
This operation should have been a no-op, but isn't.
&lt;/p&gt;
&lt;p&gt;
(Ticket previously stated this happens with &lt;code&gt;wp_insert_user&lt;/code&gt;; this is incorrect, as &lt;code&gt;wp_insert_user&lt;/code&gt; doesn't hash the password for updates.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28388 (Optional $post and $post_id should be documented as such) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 03 Jun 2014 04:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28388#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28388#comment:3/1401771065992862</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28655" title="Be more specific that `$post_id` does not default to the ID of the ..."&gt;28655&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Be more specific that &lt;code&gt;$post_id&lt;/code&gt; does not default to the ID of the global &lt;code&gt;$post&lt;/code&gt; in some cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28654" title="Ensure `$post_id` is documented as optional where applicable.
See #28388.
"&gt;[28654]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28388" title="#28388: defect (bug): Optional $post and $post_id should be documented as such (closed: fixed)"&gt;#28388&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [28655]: Be more specific that `$post_id` does not default to the ID of the ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 03 Jun 2014 04:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28655</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28655/1401771065259346</guid>
      <description>&lt;p&gt;
Be more specific that &lt;code&gt;$post_id&lt;/code&gt; does not default to the ID of the global &lt;code&gt;$post&lt;/code&gt; in some cases.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28654" title="Ensure `$post_id` is documented as optional where applicable.
See #28388.
"&gt;[28654]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28388" title="#28388: defect (bug): Optional $post and $post_id should be documented as such (closed: fixed)"&gt;#28388&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>slomazon</dc:creator>

      <pubDate>Tue, 03 Jun 2014 04:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:140</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:140/1401770761797733</guid>
      <description>&lt;p&gt;
Problem because its not only core wordpress problem. In my case was solution in the value of  Suhosin (Max Vars extended works).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28388 (Optional $post and $post_id should be documented as such) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 03 Jun 2014 04:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28388#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28388#comment:2/1401770627973682</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28654" title="Ensure `$post_id` is documented as optional where applicable.
See #28388.
"&gt;28654&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Ensure &lt;code&gt;$post_id&lt;/code&gt; is documented as optional where applicable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28388" title="#28388: defect (bug): Optional $post and $post_id should be documented as such (closed: fixed)"&gt;#28388&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [28654]: Ensure `$post_id` is documented as optional where applicable.  See #28388. </title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 03 Jun 2014 04:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28654</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28654/1401770627401459</guid>
      <description>&lt;p&gt;
Ensure &lt;code&gt;$post_id&lt;/code&gt; is documented as optional where applicable.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28388" title="#28388: defect (bug): Optional $post and $post_id should be documented as such (closed: fixed)"&gt;#28388&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28388 (Optional $post and $post_id should be documented as such) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 03 Jun 2014 03:54:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28388#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28388#comment:1/1401767652970332</guid>
      <description>&lt;p&gt;
Looks like &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28653" title="Make sure `$post` is properly documented as optional where applicable. ..."&gt;[28653]&lt;/a&gt; missed posting. It handled properly documenting &lt;code&gt;$post&lt;/code&gt; as optional where applicable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [28653]: Make sure `$post` is properly documented as optional where applicable. ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Tue, 03 Jun 2014 03:52:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28653</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28653/1401767566661409</guid>
      <description>&lt;p&gt;
Make sure &lt;code&gt;$post&lt;/code&gt; is properly documented as optional where applicable.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28388" title="#28388: defect (bug): Optional $post and $post_id should be documented as such (closed: fixed)"&gt;#28388&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24633 (Allow admins to generate and send new passwords for users) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Tue, 03 Jun 2014 03:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24633#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24633#comment:37/1401767366182383</guid>
      <description>&lt;p&gt;
I do like the idea of having a way to truly force a user to reset a password.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28434.patch attached to Ticket #28434</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Tue, 03 Jun 2014 03:12:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28434/28434.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28434/28434.patch/1401765166684476</guid>
      <description>&lt;p&gt;
Adds support for 'fields' parameter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28434 (Add 'fields' parameter to WP_Comment_Query) created</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Tue, 03 Jun 2014 02:53:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28434/1401764025404243</guid>
      <description>&lt;p&gt;
The &lt;code&gt;WP_Comment_Query&lt;/code&gt; class should support a &lt;code&gt;fields&lt;/code&gt; argument, just like &lt;code&gt;WP_Query&lt;/code&gt; does.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28393 (Login logo is cut off slightly) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 03 Jun 2014 02:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28393#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28393#comment:7/1401762548381665</guid>
      <description>&lt;p&gt;
After playing around with it, seems like a rounding issue as @helen suggests. The original is 64x64, bumping &lt;code&gt;background-size: 79px 79px&lt;/code&gt; works all the way down to &lt;code&gt;background-size: 75px 75px&lt;/code&gt;, where the problem represents itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28393 (Login logo is cut off slightly) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 03 Jun 2014 00:44:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28393#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28393#comment:6/1401756255479367</guid>
      <description>&lt;p&gt;
I'm not sure making it smaller is the right answer. Do we know what's causing this? I'm not turning up anything, and it seems to be directly related to the actual size of the background image (maybe a rounding issue, although that doesn't make sense going from 64 -&amp;gt; 80). I think I'd rather go a little bigger if we need to change the size.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28419 (tinyMCE breaking quotes in Wordpress editor) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 03 Jun 2014 00:00:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28419#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28419#comment:1/1401753639869147</guid>
      <description>worksforme: &lt;p&gt;
Hi stewarttodd,
&lt;/p&gt;
&lt;p&gt;
In TinyMCE shortcodes are simple text strings (unless there is some special treatment). HTML tags inside a shortcode attribute are rendered as "standard" HTML.
&lt;/p&gt;
&lt;p&gt;
In your example once the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag becomes a DOM node, it's not easy (and pretty much pointless) to try and remember what type of quotes were used initially. When the DOM is serialized, all HTML attributes are wrapped in double quotes.
&lt;/p&gt;
&lt;p&gt;
There are several ways to work around this issue:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Escape any HTML tags in shortcode attributes, i.e. replace &amp;lt;, &amp;gt;, &amp;amp;, ", with entities.
&lt;/li&gt;&lt;li&gt;Use single quotes for shortcode attributes that contain HTML.
&lt;/li&gt;&lt;li&gt;Store the HTML as a content of the shortcode, i.e. wrapped by &lt;code&gt;[...]&lt;/code&gt; and &lt;code&gt;[/...]&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Replace the shortcode with a placeholder image. Then the actual shortcode string can be stored as an encoded attribute on the image tag (see [gallery] and wpView).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Closing as worksforme. Feel free to reopen if there is a better way to handle this (preferably with an example patch).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28432 (Twenty Twelve: Remove obsolete hgroup) updated</title>
      
        <dc:creator>artychan</dc:creator>

      <pubDate>Mon, 02 Jun 2014 23:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28432#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28432#comment:6/1401751429836053</guid>
      <description>&lt;p&gt;
yeah I realized after I posted that the header customization stuff is tied to the hgroup markup as well.
&lt;/p&gt;
&lt;p&gt;
Thanks for the quick reply, and at least this ticket now exists for others to see.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28433 (allow for more control on paginate_links list element) created</title>
      
        <dc:creator>FrancescoRizzi</dc:creator>

      <pubDate>Mon, 02 Jun 2014 23:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28433/1401750997462861</guid>
      <description>&lt;p&gt;
paginate_links allows the caller to specify type='list'.
However, it does not provide any mean to control the ul element created under these conditions by &lt;a class="source" href="http://core.trac.wordpress.org/browser/trunk/src/wp-includes/general-template.php?rev=head#L2525"&gt;source:trunk/src/wp-includes/general-template.php@head#L2525&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/head/trunk/src/wp-includes/general-template.php#L2525" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are many possibilities to enhance this, of course; personally I'd find useful to have the ability of specifying an id and/or additional CSS classes to be used for that element.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28307 (Ajax for Post Search) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jun 2014 23:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28307#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28307#comment:20/1401750056245761</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28307#comment:19" title="Comment 19"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you expand on the JS workaround needed for non-Latin?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This seems to be UI Autocomplete bug/deficiency. For example in Japanese the "spelling" for Kyoto is &lt;code&gt;京&lt;/code&gt; (according to Google translate), however that won't trigger an autocomplete search/ajax as JS sees it as one char. Perhaps worth it opening a ticket upstream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27882 (Address some issues found running Scrutinizer) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jun 2014 22:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27882#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27882#comment:88/1401748141261476</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only 2 things I have an opinion on:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;can we standardize on default being at the bottom?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Thinking we should. Much easier to read.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sure, but I would rather us be able take advantage of more CI tools now and the future which is better for everyone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Not having unreachable &lt;code&gt;break;&lt;/code&gt; is "the right way to go". We probably should require a comment when the break is missing on purpose though, as suggested by @jdgrimes above. &lt;code&gt;// no break&lt;/code&gt;, &lt;code&gt;// fall through&lt;/code&gt;, anything...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27882 (Address some issues found running Scrutinizer) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Mon, 02 Jun 2014 21:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27882#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27882#comment:87/1401746373796065</guid>
      <description>&lt;p&gt;
For readability, &lt;code&gt;/* break; */&lt;/code&gt; after return is as good as &lt;code&gt;break;&lt;/code&gt; after return.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28432 (Twenty Twelve: Remove obsolete hgroup) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 21:56:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28432#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28432#comment:5/1401746187819375</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18947 (get_intermediate_image_sizes() should also contain width/height/crop ...) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Mon, 02 Jun 2014 21:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18947#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18947#comment:15/1401745935167770</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18947#comment:13" title="Comment 13"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Custom image sizes width/height info is not stored in the database, there should be a fallback to go to the &lt;code&gt;global $_wp_addtional_image_sizes&lt;/code&gt; array to fetch this data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The following options are set during installation &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-admin/includes/schema.php#L443"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;since 2.5&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	'thumbnail_size_w' =&amp;gt; 150,
	'thumbnail_size_h' =&amp;gt; 150,
	'thumbnail_crop' =&amp;gt; 1,
	'medium_size_w' =&amp;gt; 300,
	'medium_size_h' =&amp;gt; 300,
&lt;/pre&gt;&lt;p&gt;
and &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-admin/includes/schema.php#L453"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;since 2.7&lt;/a&gt; we got
&lt;/p&gt;
&lt;pre class="wiki"&gt;	'large_size_w' =&amp;gt; 1024,
	'large_size_h' =&amp;gt; 1024,
&lt;/pre&gt;&lt;p&gt;
Crop really isn't there as default. Imo and as this will be a new function, we should leave it being not set, so whoever writes a patch core later on can implement it independently and without thinking about anything relying on it. Else we would make false assumptions or define new settings just for the sake of an array key.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28432 (Twenty Twelve: Remove obsolete hgroup) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 02 Jun 2014 21:50:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28432#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28432#comment:4/1401745814093091</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Agreed. Since default themes are really popular parent themes — specifically Twenty Twelve — it's really difficult to make markup changes to them without possibly causing havoc in third party projects.
&lt;/p&gt;
&lt;p&gt;
Additionally: In Twenty Thirteen and Twenty Fourteen we have a class in the element wrapping &lt;code&gt;.site-title&lt;/code&gt; and &lt;code&gt;.site-description&lt;/code&gt; which (hopefully) makes it more likely that developer use that rather than the element itself when writing a CSS selector, in Twenty Twelve that is unfortunately not the case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28432 (Twenty Twelve: Remove obsolete hgroup) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 20:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28432#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28432#comment:3/1401740517252272</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28432 (Twenty Twelve: Remove obsolete hgroup) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 20:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28432#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28432#comment:2/1401740501657801</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28432 (Twenty Twelve: Remove obsolete hgroup) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Mon, 02 Jun 2014 20:15:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28432#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28432#comment:1/1401740157985121</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I vote not to change this.
&lt;/p&gt;
&lt;p&gt;
Noting from Twenty Thirteen ticket notes: "I'm pretty sure we'd blow back compat if we'd attempt to remove it in older themes."
&lt;/p&gt;
&lt;p&gt;
I agree with that, it'll break things in Twenty Twelve and older themes if we change this markup now -- authors could have styled it or written JavaScript that relies on that specific markup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21374 (Add core support for letting custom permalink structure for different ...) updated</title>
      
        <dc:creator>Milmor</dc:creator>

      <pubDate>Mon, 02 Jun 2014 20:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21374#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21374#comment:8/1401739684520070</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28285 (Add TED oEmbed support) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 02 Jun 2014 20:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28285#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28285#comment:6/1401739317748122</guid>
      <description>&lt;p&gt;
FYI, this has been added to the &lt;a class="ext-link" href="http://codex.wordpress.org/Embeds#Okay.2C_So_What_Sites_Can_I_Embed_From.3F"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Codex list&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18947 (get_intermediate_image_sizes() should also contain width/height/crop ...) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Mon, 02 Jun 2014 19:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18947#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18947#comment:14/1401738872994281</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18947#comment:13" title="Comment 13"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Custom image sizes width/height info is not stored in the database, there should be a fallback to go to the &lt;code&gt;global $_wp_addtional_image_sizes&lt;/code&gt; array to fetch this data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually the options have defaults... well, partly. I took a clean (single- as well as multi-site) install, added a blank dev/test theme (nothing aside from an empty style.css, index.php and functions.php) and wrote the following (mu-)plugin to confirm:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
/** Plugin Name: (dev) Options and Globals dump on shotdown */
/**/
add_action( 'shutdown', function()
{
	$defaults = wp_load_alloptions();
	foreach ( get_intermediate_image_sizes() as $s )
	{
		var_dump( "Currently looking at size: {$s}" );
		# Remove "post-" from `post-thumbnail`
		# Use it with the Twenty* themes and calls
		# to set_post_thumbnail_size(), else you will hit notices
		# $s = str_replace( "post-", '', $s );
		# Dump of attached callbacks
		$cbs = [
			"default_option_{$s}_size_w",
			"default_option_{$s}_size_h",
			"default_option_{$s}_crop",
		];
		foreach ( $cbs as $cb )
			isset( $GLOBALS['wp_filter'][ $cb ] )
				? var_dump( $GLOBALS['wp_filter'][ $cb ] )
				: var_dump( "No callback on the options defaults for: {$cb}" );
		# Dump of default option values
		foreach ( [
			'size_w',
			'size_h',
			'crop',
			] as $part )
		{
			# Let's take a look at the default options output:
			isset( $defaults["{$s}_{$part}"] )
				? var_dump( $defaults["{$s}_{$part}"] )
				: var_dump( "No default for: {$s}_{$part}" );
			# Let's take a look at the option output:
			var_dump( get_option( "{$s}_{$part}" ) );
		}
	}
	var_dump( $GLOBALS['_wp_additional_image_sizes'] );
}, PHP_INT_MAX -1 );
/**/
&lt;/pre&gt;&lt;p&gt;
The output in a completely vanilla install will be the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'Currently looking at size: thumbnail' (length=36)
string 'No callback on the options defaults for: default_option_thumbnail_size_w' (length=72)
string 'No callback on the options defaults for: default_option_thumbnail_size_h' (length=72)
string 'No callback on the options defaults for: default_option_thumbnail_crop' (length=70)
string '150' (length=3)
string '150' (length=3)
string '150' (length=3)
string '150' (length=3)
string '1' (length=1)
string '1' (length=1)
string 'Currently looking at size: medium' (length=33)
string 'No callback on the options defaults for: default_option_medium_size_w' (length=69)
string 'No callback on the options defaults for: default_option_medium_size_h' (length=69)
string 'No callback on the options defaults for: default_option_medium_crop' (length=67)
string '300' (length=3)
string '300' (length=3)
string '300' (length=3)
string '300' (length=3)
string 'No default for: medium_crop' (length=27)
boolean false
string 'Currently looking at size: large' (length=32)
string 'No callback on the options defaults for: default_option_large_size_w' (length=68)
string 'No callback on the options defaults for: default_option_large_size_h' (length=68)
string 'No callback on the options defaults for: default_option_large_crop' (length=66)
string '1024' (length=4)
string '1024' (length=4)
string '1024' (length=4)
string '1024' (length=4)
string 'No default for: large_crop' (length=26)
boolean false
null
&lt;/pre&gt;&lt;p&gt;
I've written it so it is quite verbose in its output. As you can see, there are no callbacks attached for defaults, but everything has a default value. Ok, everything aside from the medium and large crop sizes - this would maybe need a separate ticket - which I will take into account with the upcoming patch.
&lt;/p&gt;
&lt;p&gt;
The last value is the return from what you suggested, &lt;code&gt;$GLOBALS['_wp_additional_image_sizes']&lt;/code&gt;, which is &lt;code&gt;NULL&lt;/code&gt;. The reason for that is quite simple: The global gets filled by &lt;code&gt;add_image_size()&lt;/code&gt;. And if it was not used (which is the case for core image sizes) then the global simply stays empty.
&lt;/p&gt;
&lt;p&gt;
Conclusion: Don't rely on globals.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, suggested previously &lt;code&gt;get_image_sizes()&lt;/code&gt;. &lt;code&gt;_data()&lt;/code&gt; sounds superfluous and lacks parity with &lt;code&gt;add_image_size()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27882 (Address some issues found running Scrutinizer) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 19:43:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27882#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27882#comment:86/1401738239777368</guid>
      <description>&lt;p&gt;
The only 2 things I have an opinion on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;can we standardize on &lt;code&gt;default&lt;/code&gt; being at the bottom?
&lt;/li&gt;&lt;li&gt;Automation and static analysis are helpful ways for us to examine our whole code base. Every single tool complains about &lt;code&gt;break&lt;/code&gt; after &lt;code&gt;return|exit|die&lt;/code&gt;, whatever. We refactor &lt;code&gt;switch&lt;/code&gt;s almost never. Is our process for code review so broken that a future &lt;code&gt;case&lt;/code&gt; is guaranteed to carelessly  fall through unless we proactively add extraneous &lt;code&gt;break&lt;/code&gt;s? We reopen tickets milliseconds after documentation changes have ambiguous grammatical errors. I may be outvoted on this one, but I think this is the least of our concerns - conversely, that same argument could have been made for me not to remove them in the first place. Sure, but I would rather us be able take advantage of more CI tools now and the future which is better for everyone.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27882 (Address some issues found running Scrutinizer) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 02 Jun 2014 19:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27882#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27882#comment:85/1401737632096656</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27882#comment:82" title="Comment 82"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The order may not matter but makes it (much) harder to read/follow when &lt;code&gt;default&lt;/code&gt; is not at the bottom. Same for the unreachable &lt;code&gt;break;&lt;/code&gt; after &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;die()&lt;/code&gt;. As far as I remember these were added for readability as switch() is one of the "harder to read" constructs, especially for inexperienced users. (Omitting a &lt;code&gt;break&lt;/code&gt; merges the cases, some people miss or misunderstand that).
&lt;/p&gt;
&lt;p&gt;
I don't particularly mind either way, but maybe we need to add some rules for &lt;code&gt;switch()&lt;/code&gt; to the coding standards. Few years ago there were some.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe styling them something like this would improve readability?
&lt;/p&gt;
&lt;pre class="wiki"&gt;switch ( $var ) {
	case 1:
		/* ... */
	break;
	case 2:
		/* ... */
	return;
	case 3:
		/* ... */
		// fallthru
	case 4:
		/* ... */
	exit;
	default:
		/* ... */
}
&lt;/pre&gt;&lt;p&gt;
I think adding a comment whenever one &lt;code&gt;case&lt;/code&gt; falls through into another is especially useful. But, you know, everybody has their own style.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28125 (youtube oembed  for playlist link) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 02 Jun 2014 18:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28125#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28125#comment:8/1401734990732558</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28125#comment:7" title="Comment 7"&gt;kovshenin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
perhaps we should be looking at keying the list by a unique handle instead of a regular expression.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds like a good idea to me. That's how the non-oEmbed callback embed handlers work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28432 (Twenty Twelve: Remove obsolete hgroup) created</title>
      
        <dc:creator>artychan</dc:creator>

      <pubDate>Mon, 02 Jun 2014 18:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28432/1401733175499255</guid>
      <description>&lt;p&gt;
If you check the HTML5 specification or the HTML5 nightly, the hgroup element is no longer there. And according to the w3c validator, it's obsolete.
&lt;/p&gt;
&lt;p&gt;
It would be great if we could update Twenty Twelve to no longer have hgroup, that'd be great. (It was done for Twenty Thirteen already in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24114" title="#24114: enhancement: Twenty Thirteen: Remove hgroup (closed: fixed)"&gt;#24114&lt;/a&gt; )
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28065 (&lt;style type='text/css'&gt; should be &lt;style scoped&gt; in wp-includes/media.php) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 02 Jun 2014 18:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28065#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28065#comment:6/1401732744865525</guid>
      <description>wontfix: &lt;p&gt;
Because HTML5 gallery support in 3.9 removes this inline style, I think this is a wontfix.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28065 (&lt;style type='text/css'&gt; should be &lt;style scoped&gt; in wp-includes/media.php) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 02 Jun 2014 18:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28065#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28065#comment:5/1401732453079213</guid>
      <description>&lt;p&gt;
As @sabreuse said this is still very limited. Here is the caniuse link.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://caniuse.com/style-scoped"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://caniuse.com/style-scoped&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>woodent</dc:creator>

      <pubDate>Mon, 02 Jun 2014 18:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:139</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:139/1401732060720923</guid>
      <description>&lt;p&gt;
What exactly is the status of this ticket?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is someone from the core team supposed to review the provided patch and provide feedback?
&lt;/li&gt;&lt;li&gt;Is the provided patch something that may be accepted or do we need to provide alternative solutions?
&lt;/li&gt;&lt;li&gt;Is there another feature or change that is coming down the pipes that we are waiting on?
&lt;/li&gt;&lt;li&gt;Should we focus on writing unit tests that fail when the limitations are reached?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'd be glad to work on this ticket, but don't want to do so without understanding where we are in the process and what work will actually get the ball rolling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27561 (Installed theme search searches html) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 02 Jun 2014 17:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27561#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27561#comment:2/1401731094790520</guid>
      <description>&lt;p&gt;
I just tested this and was also unable to reproduce.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27882 (Address some issues found running Scrutinizer) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jun 2014 17:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27882#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27882#comment:84/1401729555160510</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27882#comment:83" title="Comment 83"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Right, but for whom does it "demonstrate"? I doubt it the people that need this demonstration would actually look for it in the tests. Most likely they would go to php.net.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28431 (There's no way to close the "keyboard shortcuts" modal with the keyboard) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 02 Jun 2014 17:01:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28431#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28431#comment:1/1401728499257729</guid>
      <description>&lt;p&gt;
A keyboard user trap. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28431 (There's no way to close the "keyboard shortcuts" modal with the keyboard) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:59:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28431/1401728361147049</guid>
      <description>&lt;p&gt;
Quite an ironic bug.
&lt;/p&gt;
&lt;p&gt;
When you open the "help" modal with alt + shift + H, there's no way to close it with the keyboard. Using the same shortcut opens *another* modal over the old one. Esc doesn't work. Then I close the modal with the mouse, but the first one remains open (so it looks like nothing closed...). Clicking on it again finally closes everything.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27882 (Address some issues found running Scrutinizer) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27882#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27882#comment:83/1401728319042881</guid>
      <description>&lt;p&gt;
The "demonstration tests" have been added to test assumptions in &lt;code&gt;basic.php&lt;/code&gt;. We've never been burned by having too many unit tests, that's for sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24633 (Allow admins to generate and send new passwords for users) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24633#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24633#comment:36/1401727999388334</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24633#comment:35" title="Comment 35"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think passwords should not be sent via email at all. Send a link to the password reset form, as when the lost password form is used.
&lt;/p&gt;
&lt;p&gt;
At least passwords should no be sent from sites with a secure admin (https).
&lt;/p&gt;
&lt;p&gt;
If WordPress has sent a password via email there should be a nag, at least, as when the initial password is not changed yet. This is not very user friendly since the user must use two passwords, first the generated one and then the changed one.
&lt;/p&gt;
&lt;p&gt;
And a nag that is just ignored for long time doesn't make the password invalid.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Was talking about this today at BeachPress and just bouncing ideas. One thing that sounded better from a security standpoint was to flag the account and force a reset.
&lt;/p&gt;
&lt;p&gt;
Most of the plugins, and the manual way to do it is just reset the password for the user but not send via email. That way they need to request a password reset so they get the link to reset it themselves. Downside is that in theory they can just reset their new password to the same as the old password.
&lt;/p&gt;
&lt;p&gt;
If we added a user meta flag that their account was locked or due for a password reset, we could compare the hash of the new password to what's currently in the database and force them to set a different password.
&lt;/p&gt;
&lt;p&gt;
Probably candidate for discussion in a new ticket rather than here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27776 (WordPress API timeouts should be cached to avoid slowing down the admin) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:51:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27776#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27776#comment:2/1401727916911836</guid>
      <description>&lt;p&gt;
I too have run into this problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27882 (Address some issues found running Scrutinizer) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27882#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27882#comment:82/1401727837862534</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27882#comment:80" title="Comment 80"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Adds a unit test to demonstrate that the order of &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; in a &lt;code&gt;switch&lt;/code&gt; statement does not matter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The order may not matter but makes it (much) harder to read/follow when &lt;code&gt;default&lt;/code&gt; is not at the bottom. Same for the unreachable &lt;code&gt;break;&lt;/code&gt; after &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;die()&lt;/code&gt;. As far as I remember these were added for readability as switch() is one of the "harder to read" constructs, especially for inexperienced users. (Omitting a &lt;code&gt;break&lt;/code&gt; merges the cases, some people miss or misunderstand that).
&lt;/p&gt;
&lt;p&gt;
I don't particularly mind either way, but maybe we need to add some rules for &lt;code&gt;switch()&lt;/code&gt; to the coding standards. Few years ago there were some.
&lt;/p&gt;
&lt;p&gt;
Not sure we need a "demonstration test". Also it is not complete: it doesn't test the default case. A better demo would be something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _switch_order_helper( $var ) {
	switch ( $var ) {
	default:
		$return = 'default';
		break;
	case 1:
		$return = 'case 1';
		break;
	}
	return $return;
}
function test_switch_order() {
	$this-&amp;gt;assertEquals( 'case 1', _switch_order_helper( 1 ) );
	$this-&amp;gt;assertEquals( 'default', _switch_order_helper( 2 ) );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27851 (Underscored text overflow on hover) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27851#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27851#comment:2/1401727669602493</guid>
      <description>&lt;p&gt;
I was able to replicate this. I attached a patch with a simple word-wrap: break-word;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27851.diff attached to Ticket #27851</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27851/27851.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27851/27851.diff/1401727574382526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28412 (get_queried_object_id() method in pre_get_posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:33:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28412#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28412#comment:3/1401726807786042</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18118 (Append page slug to body_class function) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18118#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18118#comment:12/1401726692984111</guid>
      <description>wontfix: &lt;p&gt;
I actually have second thoughts on this too. It's trivial to add the class via &lt;code&gt;body_class&lt;/code&gt; filter if needed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28412 (get_queried_object_id() method in pre_get_posts) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28412#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28412#comment:2/1401726603219488</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by wpsmith. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-06-02&amp;amp;sort=asc#m861803"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28425 (get_permalink passes only post ID to called functions instead of post ...) updated</title>
      
        <dc:creator>arnee</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:02:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28425#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28425#comment:4/1401724976652941</guid>
      <description>&lt;p&gt;
Yes, I've checked that too. All called functions ensure the post object again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18118 (Append page slug to body_class function) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 02 Jun 2014 16:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18118#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18118#comment:11/1401724963329045</guid>
      <description>&lt;p&gt;
I think this is an antipattern.
&lt;/p&gt;
&lt;p&gt;
Slugs are mutable by content editors. I've been bitten by implementing what's suggested here and having clients change slugs, then they lose styling on X page and not knowing why.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28430 (plugin_basename() php warning) created</title>
      
        <dc:creator>Netoz</dc:creator>

      <pubDate>Mon, 02 Jun 2014 15:58:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28430</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28430/1401724724209214</guid>
      <description>&lt;p&gt;
Warning: Invalid argument supplied for foreach() in /wp-core/wp-includes/plugin.php on line 623
sometimes $wp_plugin_paths = NULL and foreach gives this warning.
any variant to add if condition before?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18118 (Append page slug to body_class function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 15:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18118#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18118#comment:10/1401723613686070</guid>
      <description>&lt;p&gt;
Perhaps post slugs would be a bit superfluous, page slugs seem enough for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28425 (get_permalink passes only post ID to called functions instead of post ...) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 02 Jun 2014 15:19:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28425#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28425#comment:3/1401722357338414</guid>
      <description>&lt;p&gt;
At first I thought there would need to be some additional check to see if it was an object but the functions above all call get_post which does a check to see if it is an object instead of an id. Looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27979 (Pass Customizer Setting instance to `customize_update_` and ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 02 Jun 2014 15:18:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27979#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27979#comment:3/1401722311556118</guid>
      <description>&lt;p&gt;
Hi tormorten,
&lt;/p&gt;
&lt;p&gt;
Thanks for looking into this. A few notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rather than upload the whole file, can you create a patch from the WordPress root? We use patches so that it's easier to review and commit changes.
&lt;/li&gt;&lt;li&gt;Be sure to update the inline documentation to include the new parameter (something like &lt;code&gt;@param WP_Customize_Setting $this  WP_Customize_Setting instance.&lt;/code&gt;).
&lt;/li&gt;&lt;li&gt;When you upload patches in the future, be sure to leave a comment and add the "has-patch" keyword to the ticket. Attaching files doesn't send notifications, only comments do, and adding has-patch will help with the review process.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If you have any questions, feel free to ask for clarification!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23231 (preprocess_comment should get the normalised comment data) updated</title>
      
        <dc:creator>dkotter</dc:creator>

      <pubDate>Mon, 02 Jun 2014 15:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23231#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23231#comment:10/1401721567407976</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23231#comment:9" title="Comment 9"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could probably just save the initial values to separate variables and then compare them to filtered values.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, yeah, not sure why I didn't think of that. Most recent patch takes that approach. Normalizes data before filter, saving user_id to a variable, then after filter, checks if it's been changed, and if so, re-normalizes things.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23231.2.diff attached to Ticket #23231</title>
      
        <dc:creator>dkotter</dc:creator>

      <pubDate>Mon, 02 Jun 2014 15:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23231/23231.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23231/23231.2.diff/1401721477731143</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28429 (Image Details modal lost padding) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 13:34:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28429#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28429#comment:2/1401716055818155</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28429 (Image Details modal lost padding) closed</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 02 Jun 2014 13:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28429#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28429#comment:1/1401716000143862</guid>
      <description>invalid: &lt;p&gt;
Nevermind, looks fixed now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Screen Shot 2014-06-02 at 9.25.43 AM.png attached to Ticket #28429</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 02 Jun 2014 13:26:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28429/Screen%20Shot%202014-06-02%20at%209.25.43%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28429/Screen%20Shot%202014-06-02%20at%209.25.43%20AM.png/1401715595950985</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28429 (Image Details modal lost padding) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 02 Jun 2014 13:26:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28429/1401715583992042</guid>
      <description>&lt;p&gt;
See screenshot
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28407 (You are unable to override the attachment name in wp_mail() when ...) updated</title>
      
        <dc:creator>syntaxart</dc:creator>

      <pubDate>Mon, 02 Jun 2014 12:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28407#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28407#comment:2/1401713716627346</guid>
      <description>&lt;p&gt;
Thank you Rittesh.  Will this change be added to the next version of WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28379 (Some oEmbed endpoints should probably be dropped) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Mon, 02 Jun 2014 10:40:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28379#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28379#comment:9/1401705620876922</guid>
      <description>&lt;p&gt;
Possibly related? &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27237" title="#27237: defect (bug): Instagram embeds returning bad URL (closed: maybelater)"&gt;#27237&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26410 (Updating or deleting options via update_option or delete_option leaves ...) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 02 Jun 2014 09:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26410#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26410#comment:7/1401703084927803</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Took a stab in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26410/26410.diff" title="Attachment '26410.diff' in Ticket #26410"&gt;26410.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26410/26410.diff" title="Download"&gt;​&lt;/a&gt;. I was also going to remove &lt;code&gt;refresh_blog_details()&lt;/code&gt; from &lt;code&gt;update_blog_option()&lt;/code&gt; since it'll be triggered anyway, but I'm not sure it isn't going to break anything else, so left it as is for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26410.diff attached to Ticket #26410</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 02 Jun 2014 09:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26410/26410.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26410/26410.diff/1401702982601496</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24633 (Allow admins to generate and send new passwords for users) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 02 Jun 2014 07:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24633#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24633#comment:35/1401693593170980</guid>
      <description>&lt;p&gt;
I think passwords should not be sent via email at all. Send a link to the password reset form, as when the lost password form is used.
&lt;/p&gt;
&lt;p&gt;
At least passwords should no be sent from sites with a secure admin (https).
&lt;/p&gt;
&lt;p&gt;
If WordPress has sent a password via email there should be a nag, at least, as when the initial password is not changed yet. This is not very user friendly since the user must use two passwords, first the generated one and then the changed one.
&lt;/p&gt;
&lt;p&gt;
And a nag that is just ignored for long time doesn't make the password invalid.
&lt;/p&gt;
&lt;p&gt;
Emails can be intercepted, as can http. But emails are usually stored for years, and if they are exposed by accident, an old password may still be valid. One may argue that if an email client is exposed or an account is hacked, then a wrong person may change the password. Such change may be detected by the owner and legitimately changed. But a leaked, working password is worse, since no one might even get suspicious.
&lt;/p&gt;
&lt;p&gt;
But enhancement proposed in this ticket will make WordPress a little bit easy to use, especially for the admin, but far from more secure, and a bit less user friendly for the non-admin (being nagged instead of changing the password once and securely).
&lt;/p&gt;
&lt;p&gt;
The existence of the nag itself indicates that sending passwords via email is not regarded a secure practice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24633 (Allow admins to generate and send new passwords for users) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 02 Jun 2014 06:34:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24633#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24633#comment:34/1401690841657772</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like we're going to try to make some progress on this during BeachPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24660 (YouTube oEmbeds don't work for full-width YouTube video links) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 01:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24660#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24660#comment:12/1401672073931316</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28652" title="Because of YouTube's overwhelming dominance in the online video space, ..."&gt;28652&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Because of YouTube's overwhelming dominance in the online video space, we should help our users who paste bad URLs when possible. It is easy to fix &lt;code&gt;http://youtube.com/embed/acb1233&lt;/code&gt; URLs by turning them into &lt;code&gt;http://youtube.com/watch?v=abc1233&lt;/code&gt; embeds using an embed handler (we already have one to fix Google Video embeds).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We should avoid doing this in almost every other case, but it's YouTube, and it's an easy error for a novice to make.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24660" title="#24660: defect (bug): YouTube oEmbeds don't work for full-width YouTube video links (closed: fixed)"&gt;#24660&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28652]: Because of YouTube's overwhelming dominance in the online video space, ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 01:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28652</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28652/1401672073388465</guid>
      <description>&lt;p&gt;
Because of YouTube's overwhelming dominance in the online video space, we should help our users who paste bad URLs when possible. It is easy to fix &lt;code&gt;http://youtube.com/embed/acb1233&lt;/code&gt; URLs by turning them into &lt;code&gt;http://youtube.com/watch?v=abc1233&lt;/code&gt; embeds using an embed handler (we already have one to fix Google Video embeds).
&lt;/p&gt;
&lt;p&gt;
We should avoid doing this in almost every other case, but it's YouTube, and it's an easy error for a novice to make.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24660" title="#24660: defect (bug): YouTube oEmbeds don't work for full-width YouTube video links (closed: fixed)"&gt;#24660&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24660 (YouTube oEmbeds don't work for full-width YouTube video links) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 01:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24660#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24660#comment:11/1401671773471272</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24660/24660.diff" title="Attachment '24660.diff' in Ticket #24660"&gt;24660.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24660/24660.diff" title="Download"&gt;​&lt;/a&gt; fixes &lt;code&gt;/embed/.*&lt;/code&gt; URLs and makes them to display &lt;code&gt;watch?v=.*&lt;/code&gt; videos
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24660.diff attached to Ticket #24660</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 01:15:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24660/24660.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24660/24660.diff/1401671704820995</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26469 (Twenty Fourteen: Better Audio/Video Player Styling with Genericons) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:54:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26469#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26469#comment:7/1401670463136034</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am not in love with the play button
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28414 (Making videos responsive) updated</title>
      
        <dc:creator>Funkatronic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:46:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28414#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28414#comment:7/1401670008476521</guid>
      <description>&lt;p&gt;
Awesome! Glad to contribute.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28285 (Add TED oEmbed support) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28285#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28285#comment:5/1401669913639962</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28651" title="Add oEmbed support for TED talks.
props pdclark.
fixes #28285."&gt;28651&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add oEmbed support for TED talks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props pdclark.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28285" title="#28285: enhancement: Add TED oEmbed support (closed: fixed)"&gt;#28285&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28651]: Add oEmbed support for TED talks.  props pdclark. fixes #28285.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28651</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28651/1401669912673170</guid>
      <description>&lt;p&gt;
Add oEmbed support for TED talks.
&lt;/p&gt;
&lt;p&gt;
props pdclark.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28285" title="#28285: enhancement: Add TED oEmbed support (closed: fixed)"&gt;#28285&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28414 (Making videos responsive) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28414#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28414#comment:6/1401669643249058</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28414 (Making videos responsive) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:39:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28414#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28414#comment:5/1401669587818198</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28650" title="In the spirit of [27622], add a few CSS rules to ensure that videos ..."&gt;28650&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
In the spirit of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27622" title="On attachment pages for audio and video, display players. Currently, ..."&gt;[27622]&lt;/a&gt;, add a few CSS rules to ensure that videos will be responsive, regardless of theme.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Funkatronic.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28414" title="#28414: enhancement: Making videos responsive (closed: fixed)"&gt;#28414&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28650]: In the spirit of [27622], add a few CSS rules to ensure that videos ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:39:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28650</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28650/1401669587334185</guid>
      <description>&lt;p&gt;
In the spirit of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27622" title="On attachment pages for audio and video, display players. Currently, ..."&gt;[27622]&lt;/a&gt;, add a few CSS rules to ensure that videos will be responsive, regardless of theme.
&lt;/p&gt;
&lt;p&gt;
Props Funkatronic.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28414" title="#28414: enhancement: Making videos responsive (closed: fixed)"&gt;#28414&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28428 (Incorrect highlighting of current track in audio player playlist) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28428#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28428#comment:2/1401668786645456</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28649" title="In `WPPlaylistView::ended()`, at the end of a playlist, set the index ..."&gt;28649&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
In &lt;code&gt;WPPlaylistView::ended()&lt;/code&gt;, at the end of a playlist, set the index to &lt;code&gt;0&lt;/code&gt; and call &lt;code&gt;-&amp;gt;setCurrent()&lt;/code&gt; instead of &lt;code&gt;-&amp;gt;loadCurrent()&lt;/code&gt; so that the first track is properly highlighted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28428" title="#28428: defect (bug): Incorrect highlighting of current track in audio player playlist (closed: fixed)"&gt;#28428&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [28649]: In `WPPlaylistView::ended()`, at the end of a playlist, set the index ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 02 Jun 2014 00:26:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/28649</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/28649/1401668784343837</guid>
      <description>&lt;p&gt;
In &lt;code&gt;WPPlaylistView::ended()&lt;/code&gt;, at the end of a playlist, set the index to &lt;code&gt;0&lt;/code&gt; and call &lt;code&gt;-&amp;gt;setCurrent()&lt;/code&gt; instead of &lt;code&gt;-&amp;gt;loadCurrent()&lt;/code&gt; so that the first track is properly highlighted.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28428" title="#28428: defect (bug): Incorrect highlighting of current track in audio player playlist (closed: fixed)"&gt;#28428&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>