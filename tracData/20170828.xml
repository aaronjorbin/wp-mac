<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 28 Aug 2017 22:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:83/1503959760428073</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by alexvorn2. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1503959757000350"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41610 (Widgets: Change "close" to "done?") updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 28 Aug 2017 22:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41610#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41610#comment:7/1503958742123828</guid>
      <description>&lt;p&gt;
Added review: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/250#pullrequestreview-59084961"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/250#pullrequestreview-59084961&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 28 Aug 2017 22:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:82/1503957868698143</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41747 (wp_set_post_tags() doesn't always replace old tags when $append is false) closed</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 28 Aug 2017 21:59:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41747#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41747#comment:1/1503957598230077</guid>
      <description>invalid: &lt;p&gt;
I retested this and old tags are replaced. Closing.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41747 (wp_set_post_tags() doesn't always replace old tags when $append is false) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 28 Aug 2017 21:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41747</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41747/1503956283885079</guid>
      <description>&lt;p&gt;
If the 3rd argument passed to &lt;code&gt;wp_set_post_tags()&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, new tags will replace old tags.
&lt;/p&gt;
&lt;p&gt;
Imagine if post 42 is currently tagged "foo".
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_set_post_tags( 42, array( 'bar' ), false );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Post 42 is now tagged "bar".
&lt;/p&gt;
&lt;p&gt;
However, imagine this scenario:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_set_post_tags( 42, array(), false );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Post 42 is still tagged "bar".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41610 (Widgets: Change "close" to "done?") updated</title>
      
        <dc:creator>timmydcrawford</dc:creator>

      <pubDate>Mon, 28 Aug 2017 20:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41610#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41610#comment:6/1503952664236812</guid>
      <description>&lt;p&gt;
Here is a branch to test out "Close" vs "Done"
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/250"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/250&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41746 (oEmbed does not respect canonical provider url parameter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 28 Aug 2017 20:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41746#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41746#comment:2/1503952556578532</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dougal. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1503952551000256"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41746 (oEmbed does not respect canonical provider url parameter) updated</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Mon, 28 Aug 2017 20:34:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41746#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41746#comment:1/1503952465862561</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41746.patch attached to Ticket #41746</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Mon, 28 Aug 2017 20:33:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41746/41746.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41746/41746.patch/1503952414808061</guid>
      <description>&lt;p&gt;
Use canonical provider &lt;code&gt;url&lt;/code&gt; param in discovery, if provided
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41746 (oEmbed does not respect canonical provider url parameter) created</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Mon, 28 Aug 2017 20:30:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41746</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41746/1503952245747114</guid>
      <description>&lt;p&gt;
I came across a Twitter URL format that would not embed correctly. Providing that URL to their provider endpoint returned an error. But the original page had a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element which already had a working, canonical &lt;code&gt;url&lt;/code&gt; parameter in its querystring.
&lt;/p&gt;
&lt;p&gt;
An example URL is:
&lt;code&gt;https://twitter.com/i/web/status/898599373956722688&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
If you try to fetch oEmbed data for that URL by just adding it as a &lt;code&gt;url&lt;/code&gt; querystring parameter on the standard Twitter oEmbed provider URL, it will return an error.
&lt;/p&gt;
&lt;p&gt;
But view source on that page, and you'll see:
&lt;code&gt;&amp;lt;link rel="alternate" type="application/json+oembed" href="https://publish.twitter.com/oembed?url=https://twitter.com/dimensionmedia/status/898599373956722688" title="David Bisset on Twitter: &amp;amp;quot;Agorakit is a web based open source &amp;amp;quot;groupware for citizens initiatives” (which i’ve seen @buddypress used for too) https://t.co/bFPw9ZZWi2 https://t.co/H1REt0QfcO&amp;amp;quot;"&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Note that the path of this URL is &lt;code&gt;.../{username}/status/{id}&lt;/code&gt;, whereas the original URL was &lt;code&gt;.../i/web/status/{id}&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I've worked out a small patch and method for getting WordPress to use oEmbed discovery to extract and use the canonical URL.
&lt;/p&gt;
&lt;p&gt;
When using &lt;code&gt;wp_oembed_add_provider()&lt;/code&gt;, if you leave the provider URL falsey, then &lt;code&gt;WP_oEmbed::get_provider()&lt;/code&gt; will use discovery to find it (assuming that you haven't forced &lt;code&gt;discovery = false&lt;/code&gt; in &lt;code&gt;$args&lt;/code&gt;). Then my patch will pull the &lt;code&gt;url&lt;/code&gt; arg from there and use that, instead of the original URL that was passed in to the embed handling.
&lt;/p&gt;
&lt;p&gt;
Later, when the JSON response is being handled, the code will still be able to see whether this is a whitelisted URL pattern, and bypass/perform security filtering such as &lt;code&gt;kses()&lt;/code&gt; (see &lt;code&gt;wp_filter_oembed_result()&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29684 (Add get_main_site_id() function) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 28 Aug 2017 20:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29684#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29684#comment:24/1503950951024714</guid>
      <description>&lt;p&gt;
We discussed this ticket during bug scrub quite a bit today. In the first iteration we're going to plan on sticking close to what's being pulled from the current bootstrap and not introduce a new network option. Once this is in, and possibly once network meta is available, we may be able to adjust.
&lt;/p&gt;
&lt;p&gt;
I've created a new tests file &lt;code&gt;getMainSiteId.php&lt;/code&gt; in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29684/29684.7.diff" title="Attachment '29684.7.diff' in Ticket #29684"&gt;29684.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29684/29684.7.diff" title="Download"&gt;​&lt;/a&gt; that uses a common factory for the networks and sites and separates these tests from the standard site tests.
&lt;/p&gt;
&lt;p&gt;
There is one failing test - When using &lt;code&gt;get_main_site_id()&lt;/code&gt; without specifying the network when switched to a site that is not on the current network, the current network is used rather than the switched site's network.
&lt;/p&gt;
&lt;p&gt;
I tried using &lt;code&gt;get_site()&lt;/code&gt; to retrieve the network ID in this case, but other unit tests blew up. There's a good chance I was missing something simple, but I'm going to upload the patch with the failing test as is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29684.7.diff attached to Ticket #29684</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 28 Aug 2017 20:07:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29684/29684.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29684/29684.7.diff/1503950845519042</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>29684.6.diff attached to Ticket #29684</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 28 Aug 2017 20:02:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29684/29684.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29684/29684.6.diff/1503950574911699</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39686 (Upgrade MediaElement to 4.X) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 28 Aug 2017 19:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39686#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39686#comment:108/1503948625481057</guid>
      <description>fixed: &lt;p&gt;
With &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41320" title="Media: Upgrade MediaElement.js to `4.2.5-74e01a40` fixing missing ..."&gt;[41320]&lt;/a&gt; I'll close this ticket. Any additional issues can be opened in new tickets.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #39686,​41640 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 28 Aug 2017 19:28:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39686%2C41640</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39686%2C41640/1503948525904461</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41320" title="Media: Upgrade MediaElement.js to `4.2.5-74e01a40` fixing missing ..."&gt;41320&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Upgrade MediaElement.js to &lt;code&gt;4.2.5-74e01a40&lt;/code&gt; fixing missing &lt;code&gt;mejs.MediaElement&lt;/code&gt; reference.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
ALso fixes:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Accessibility for volume control
&lt;/li&gt;&lt;li&gt;Progress bar tooltip positioning and dimensions correctly set for media with long duration
&lt;/li&gt;&lt;li&gt;Better codec checking
&lt;/li&gt;&lt;li&gt;Minor CSS fix to avoid flickering effect on volume control
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props rafa8626.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39686" title="#39686: enhancement: Upgrade MediaElement to 4.X (closed: fixed)"&gt;#39686&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41640" title="#41640: defect (bug): Missing mejs.MediaElement reference in 4.9 (closed: fixed)"&gt;#41640&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [41320]: Media: Upgrade MediaElement.js to `4.2.5-74e01a40` fixing missing ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 28 Aug 2017 19:28:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41320</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41320/1503948525286072</guid>
      <description>&lt;p&gt;
Media: Upgrade MediaElement.js to &lt;code&gt;4.2.5-74e01a40&lt;/code&gt; fixing missing &lt;code&gt;mejs.MediaElement&lt;/code&gt; reference.
&lt;/p&gt;
&lt;p&gt;
ALso fixes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Accessibility for volume control
&lt;/li&gt;&lt;li&gt;Progress bar tooltip positioning and dimensions correctly set for media with long duration
&lt;/li&gt;&lt;li&gt;Better codec checking
&lt;/li&gt;&lt;li&gt;Minor CSS fix to avoid flickering effect on volume control
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props rafa8626.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39686" title="#39686: enhancement: Upgrade MediaElement to 4.X (closed: fixed)"&gt;#39686&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41640" title="#41640: defect (bug): Missing mejs.MediaElement reference in 4.9 (closed: fixed)"&gt;#41640&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 28 Aug 2017 18:55:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:81/1503946543822606</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by obenland. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1503946542000322"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40228 (Use get_sites in get_blog_details) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 28 Aug 2017 17:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40228#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40228#comment:21/1503943137414264</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1503943112000339"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40527 (Decouple WP_Customize_Manager) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 28 Aug 2017 17:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40527#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40527#comment:6/1503941364831575</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by dlh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1503941363000045"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40922 (Use finer-grained capabilities with `customize_changeset` post type) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 28 Aug 2017 17:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40922#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40922#comment:23/1503941364691538</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by dlh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1503941363000045"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29684 (Add get_main_site_id() function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 28 Aug 2017 17:13:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29684#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29684#comment:23/1503940425348778</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1503940424000088"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41745 (Uncaught Error in get_query_var when $wp_query is null) updated</title>
      
        <dc:creator>kbjohnson90</dc:creator>

      <pubDate>Mon, 28 Aug 2017 17:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41745#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41745#comment:4/1503940010340872</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41745 (Uncaught Error in get_query_var when $wp_query is null) updated</title>
      
        <dc:creator>kbjohnson90</dc:creator>

      <pubDate>Mon, 28 Aug 2017 16:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41745#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41745#comment:3/1503938874598744</guid>
      <description>&lt;p&gt;
@johnbillion I have uploaded/attached a patch which has resolved the issue locally.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41745.patch attached to Ticket #41745</title>
      
        <dc:creator>kbjohnson90</dc:creator>

      <pubDate>Mon, 28 Aug 2017 16:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41745/41745.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41745/41745.patch/1503938761296685</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40472 (Update PHPMailer to 5.2.27) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 28 Aug 2017 16:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40472#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40472#comment:6/1503938723635042</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version 5.2.25 (August 28th 2017)
&lt;/p&gt;
&lt;p&gt;
Make obtaining SMTP transaction ID more reliable
&lt;/p&gt;
&lt;p&gt;
Add Bosnian translation
&lt;/p&gt;
&lt;p&gt;
This is the last official release in the legacy PHPMailer 5.2 series; there may be future security patches (which will be found in the 5.2-stable branch), but no further non-security PRs or issues will be accepted.
&lt;/p&gt;
&lt;p&gt;
Migrate to PHPMailer 6.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41745 (Uncaught Error in get_query_var when $wp_query is null) updated</title>
      
        <dc:creator>kbjohnson90</dc:creator>

      <pubDate>Mon, 28 Aug 2017 16:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41745#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41745#comment:2/1503937941599664</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Rather, it is an &lt;code&gt;Uncaught Error&lt;/code&gt;, not an exception.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Fatal error: Uncaught Error: Call to a member function get() on null in /app/public/wp-includes/query.php on line 29&lt;/code&gt;
&lt;code&gt;Error: Call to a member function get() on null in /app/public/wp-includes/query.php on line 29&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The addition of a check and early return should resolve this issue.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_query_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wp_query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_query&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;method_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'get'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$wp_query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$default&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;wp-includes/query.php#26&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at submitting a patch, but still new to Trac.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41729 (Code Editors: Better design for folders) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 28 Aug 2017 16:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41729#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41729#comment:3/1503937703830648</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
From a visual perspective, I'd say the currently selected folder/file needs a way to indicate it's the current item that doesn't rely on color alone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31604" title="#31604: defect (bug): Weird selection blue in the Theme Editor (closed: fixed)"&gt;#31604&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41745 (Uncaught Error in get_query_var when $wp_query is null) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 28 Aug 2017 16:25:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41745#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41745#comment:1/1503937535284198</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @kbjohnson90, and welcome to WordPress Trac.
&lt;/p&gt;
&lt;p&gt;
WordPress core doesn't use exceptions, so this error is probably coming from a plugin or theme on your site. Can you let us know the exact exception message please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41745 (Uncaught Error in get_query_var when $wp_query is null) created</title>
      
        <dc:creator>kbjohnson90</dc:creator>

      <pubDate>Mon, 28 Aug 2017 16:24:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41745</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41745/1503937441175305</guid>
      <description>&lt;p&gt;
When &lt;code&gt;get_query_var()&lt;/code&gt; is called without the global $wp_query being set an Uncaught Exception is thrown.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41722 (wpdb::db_connect() does not connect to IPv6 address of mysql server) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 28 Aug 2017 15:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41722#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41722#comment:9/1503935754502713</guid>
      <description>&lt;p&gt;
Regarding the IPv4 case, it looks like we could parse &lt;code&gt;':3306'&lt;/code&gt;, &lt;code&gt;':/tmp/mysql.sock'&lt;/code&gt; and &lt;code&gt;'localhost:/tmp/mysql.sock'&lt;/code&gt; with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$pattern = '#^(?&amp;lt;host&amp;gt;[^:/]*)(?::(?&amp;lt;port&amp;gt;[\d]+))?(?::(?&amp;lt;socket&amp;gt;/.+))?#';
&lt;/pre&gt;&lt;p&gt;
instead of
&lt;/p&gt;
&lt;pre class="wiki"&gt;$pattern = '/^(?:\[)?(?&amp;lt;host&amp;gt;[^:^\/]+)(?::(?&amp;lt;port&amp;gt;[\d]+))?(?:\/(?&amp;lt;socket&amp;gt;.+))?/';
&lt;/pre&gt;&lt;p&gt;
but we might look into that further. The above tests run successfully through this pattern.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41744 (wp_insert_post() function doesn`t set the taxonomies from AJAX call) updated</title>
      
        <dc:creator>WeddyWood</dc:creator>

      <pubDate>Mon, 28 Aug 2017 15:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41744#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41744#comment:3/1503935684722610</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41744#comment:1" title="Comment 1"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;current_user_can()&lt;/code&gt; does not work with AJAX
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a broad statement (AJAX is generic). If you use the REST API, you have to do authentication differently than if you use an ajax_action hook. The ajax_action hooks will only work from the WP site because of the authentication cookies. Those ajax_action hooks can (and do in core admin pages) use &lt;code&gt;current_user_can()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Could you explain a test case?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I expressed inaccurately. Function current_user_can() does not work (return false) when parent function wp_insert_post() was called by not-logged-in user. through 'wp_ajax_nopriv' hook
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #19373,​41744 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 28 Aug 2017 15:41:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=19373%2C41744</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=19373%2C41744/1503934895304174</guid>
      <description>duplicate: &lt;p&gt;
Hello @WeddyWood, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, this issue is already tracked in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/19373" title="#19373: enhancement: wp_insert_post() should not contain current_user_can() checks (new)"&gt;#19373&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #41744 (wp_insert_post() function doesn`t set the taxonomies from AJAX call) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Mon, 28 Aug 2017 15:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41744#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41744#comment:1/1503934741971572</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;current_user_can()&lt;/code&gt; does not work with AJAX
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a broad statement (AJAX is generic). If you use the REST API, you have to do authentication differently than if you use an ajax_action hook. The ajax_action hooks will only work from the WP site because of the authentication cookies. Those ajax_action hooks can (and do in core admin pages) use &lt;code&gt;current_user_can()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Could you explain a test case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41744 (wp_insert_post() function doesn`t set the taxonomies from AJAX call) created</title>
      
        <dc:creator>WeddyWood</dc:creator>

      <pubDate>Mon, 28 Aug 2017 15:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41744</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41744/1503934170675485</guid>
      <description>&lt;p&gt;
&lt;strong&gt;wp_insert_post()&lt;/strong&gt; function doesn`t set the taxonomies from AJAX call because of:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$taxonomy_obj&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;cap&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;assign_terms&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;wp_set_post_terms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$taxonomy&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;strong&gt;current_user_can()&lt;/strong&gt; does not work with AJAX
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Reference: wp-includes/post.php:3357&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41722 (wpdb::db_connect() does not connect to IPv6 address of mysql server) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 28 Aug 2017 15:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41722#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41722#comment:8/1503932879226428</guid>
      <description>&lt;p&gt;
Here's a first draft for db host string examples:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
// db hosts and the expected host, port, socket
$data = array(
        // db_host                                              // host                                         //port          //socket
        ''                                              =&amp;gt; array( null,                                         null,           null                    ),
        ':3306'                                         =&amp;gt; array( null,                                         '3306',         null                    ),
        ':/tmp/mysql.sock'                              =&amp;gt; array( null,                                         null,          '/tmp/mysql.sock'        ),
        '127.0.0.1'                                     =&amp;gt; array( '127.0.0.1',                                  null,           null                    ),
        '127.0.0.1:3306'                                =&amp;gt; array( '127.0.0.1',                                  '3306',         null                    ),
        'example.com'                                   =&amp;gt; array( 'example.com',                                null,           null                    ),
        'example.com:3306'                              =&amp;gt; array( 'example.com',                                '3306',         null                    ),
        'localhost'                                     =&amp;gt; array( 'localhost',                                  null,           null                    ),
        'localhost:/tmp/mysql.sock'                     =&amp;gt; array( 'localhost',                                  null,           '/tmp/mysql.sock'       ),
        '0000:0000:0000:0000:0000:0000:0000:0001'       =&amp;gt; array( '[0000:0000:0000:0000:0000:0000:0000:0001]',  null,           null                    ),
        '::1'                                           =&amp;gt; array( '[::1]',                                      null,           null                    ),
        '[::1]'                                         =&amp;gt; array( '[::1]',                                      null,           null                    ),
        '[::1]:3306'                                    =&amp;gt; array( '[::1]',                                      '3306',         null                    ),
        '2001:0db8:0000:0000:0000:ff00:0042:8329'       =&amp;gt; array( '[2001:0db8:0000:0000:0000:ff00:0042:8329]',  null,           null                    ),
        '2001:db8:0:0:0:ff00:42:8329'                   =&amp;gt; array( '[2001:db8:0:0:0:ff00:42:8329]',              null,           null                    ),
        '2001:db8::ff00:42:8329'                        =&amp;gt; array( '[2001:db8::ff00:42:8329]',                   null,           null                    ),
);
&lt;/pre&gt;&lt;p&gt;
Some host string examples come from:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/IPv6#Addressing"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en.wikipedia.org/wiki/IPv6#Addressing&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://dev.mysql.com/doc/apis-php/en/apis-php-function.mysql-connect.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dev.mysql.com/doc/apis-php/en/apis-php-function.mysql-connect.html&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here we assume the mysql native driver.
&lt;/p&gt;
&lt;p&gt;
If we run it through:
&lt;/p&gt;
&lt;pre class="wiki"&gt;foreach( (array) $data as $db_host =&amp;gt; $expected ) {
	$actual = $wpdb-&amp;gt;parse_db_host( $db_host );
	$this-&amp;gt;assertEquals( $expected, $actual );
}
&lt;/pre&gt;&lt;p&gt;
we get failed tests for the db host strings:  &lt;code&gt;':3306'&lt;/code&gt;, &lt;code&gt;':/tmp/mysql.sock'&lt;/code&gt; and &lt;code&gt;'localhost:/tmp/mysql.sock'&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I wonder if the brackets should be handled outside of the &lt;code&gt;parse_db_host()&lt;/code&gt; function? That way the output would be more predictable, as it wouldn't depend on the library. It would also make the above testing easier.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41743 (Using the_widget on a widget that has not been registered results in ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 28 Aug 2017 14:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41743#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41743#comment:1/1503930656301559</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11317" title="Add a function to output a generic widget anywhere in a template, ..."&gt;[11317]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Would you want to write a patch for that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41742 (New conditional tag to decide if a post has a custom template) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 28 Aug 2017 14:01:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41742#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41742#comment:4/1503928874053592</guid>
      <description>&lt;p&gt;
Thanks for the follow-up!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41742 (New conditional tag to decide if a post has a custom template) updated</title>
      
        <dc:creator>danburzo</dc:creator>

      <pubDate>Mon, 28 Aug 2017 13:34:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41742#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41742#comment:3/1503927276801855</guid>
      <description>&lt;p&gt;
@SergeyBiryukov yes, sorry for not leaving a comment along with the closing. I realized in the meantime the &lt;code&gt;is_page_template&lt;/code&gt; conditional tag exists, I had somehow missed it in the first place (I think the wording threw me off). I think that covers it, yes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41743 (Using the_widget on a widget that has not been registered results in ...) created</title>
      
        <dc:creator>SeBsZ</dc:creator>

      <pubDate>Mon, 28 Aug 2017 13:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41743</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41743/1503926675879042</guid>
      <description>&lt;p&gt;
First of all, this may be by design to notify the developer that they've probably made a mistake.
&lt;/p&gt;
&lt;p&gt;
However, I'd like to suggest a small check that prevents this notice.
&lt;/p&gt;
&lt;p&gt;
In Wordpress 4.8.1 wp-includes\widgets.php on line 1039 (or the second line inside the the_widget() function) there is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$widget_obj = $wp_widget_factory-&amp;gt;widgets[$widget];
if ( ! ( $widget_obj instanceof WP_Widget ) ) {
  return;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This means that calling the_widget with a $widget name that has not been registered, instantly results in an undefined index notice.
&lt;/p&gt;
&lt;p&gt;
A simple check would solve this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( ! ( isset($wp_widget_factory-&amp;gt;widgets[$widget]) ) ) {
  return;
}
$widget_obj = $wp_widget_factory-&amp;gt;widgets[$widget];
if ( ! ( $widget_obj instanceof WP_Widget ) ) {
  return;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Apologies if this is not a bug but by design.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41729 (Code Editors: Better design for folders) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 28 Aug 2017 13:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41729#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41729#comment:2/1503926626978600</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
and introduce a way to collapse folders
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Adding the accessibility focus because any UI component that is not "native" in HTML and that is implemented as a sort of "widget" with non-standard semantics and interaction needs some special accessibility treatment. Assistive technologies, and people using them, need to understand how a special "widget" works to be able to use it.
&lt;/p&gt;
&lt;p&gt;
Seems to me this should be implemented as an ARIA "Tree View". More details, expected keyboard interaction, and examples available on the ARIA Authoring Practices: &lt;a class="ext-link" href="https://www.w3.org/TR/wai-aria-practices/#TreeView"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/wai-aria-practices/#TreeView&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Worth noting how keyboard interaction works just with the arrow keys (the whole tree view has just one Tab stop).
&lt;/p&gt;
&lt;p&gt;
From a visual perspective, I'd say the currently selected folder/file needs a way to indicate it's the current item that doesn't rely on color alone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41722 (wpdb::db_connect() does not connect to IPv6 address of mysql server) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 28 Aug 2017 12:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41722#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41722#comment:7/1503924077892267</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40527 (Decouple WP_Customize_Manager) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 28 Aug 2017 12:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40527#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40527#comment:5/1503922215156797</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40527/40527.diff" title="Attachment '40527.diff' in Ticket #40527"&gt;40527.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40527/40527.diff" title="Download"&gt;​&lt;/a&gt; is a first attempt at a &lt;code&gt;WP_Customize_Changeset&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
Some notes about the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The scope so far has been to abstract as much changeset code as possible that operates independently of a &lt;code&gt;WP_Customize_Manager&lt;/code&gt; instance. I chose this scope in part based on the comment here: &lt;a class="ext-link" href="https://github.com/WP-API/wp-api-customize-endpoints/pull/5#discussion_r118804446"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/wp-api-customize-endpoints/pull/5#discussion_r118804446&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;There is, of course, room to add more functionality from &lt;code&gt;WP_Customize_Manager&lt;/code&gt; -- for instance, more of the logic from &lt;code&gt;save_changeset_post()&lt;/code&gt;. But because doing so also might increase the coupling between the two classes, I thought it best to check in first.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;One exception to the above is the &lt;code&gt;publish()&lt;/code&gt; method, which accepts a &lt;code&gt;$wp_customize&lt;/code&gt; instance.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;There are two named constructors for instantiating an instance based on a UUID or a post ID. Core needs to be able to look up changeset data by both UUID and post ID, and in neither case is there guaranteed to be a corresponding post in the database. I found it easier to handle the logic for what the changeset instance should look like under these different circumstances in the separate constructors rather than a single &lt;code&gt;__construct()&lt;/code&gt;, but I'm open to other ideas.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The patch doesn't try to swap a &lt;code&gt;WP_Customize_Changeset&lt;/code&gt; into every location in core where it could be used, so it might not handle all the requirements it would need to yet. Attempting to integrate the class into the in-progress REST API endpoints would also probably uncover additional needs or other functionality that would be helpful.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40527#comment:3" title="Comment 3"&gt;comment:3&lt;/a&gt; is addressed in the patch, but not &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40527#comment:2" title="Comment 2"&gt;comment:2&lt;/a&gt; yet.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;No unit tests yet.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40527.diff attached to Ticket #40527</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 28 Aug 2017 12:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40527/40527.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40527/40527.diff/1503922037007802</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41346 (Introduce a hook for individual plugin loaded) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 11:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41346#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41346#comment:3/1503920528289578</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I uploaded a very simple patch that immediately solves the raised issue.
&lt;/p&gt;
&lt;p&gt;
As regards to what I had suggested as an enhancement, I will work on a bigger issue/patch that makes one proposal of solving plugin interdependencies, just to show how that could potentially work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41346.diff attached to Ticket #41346</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 11:40:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41346/41346.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41346/41346.diff/1503920432802683</guid>
      <description>&lt;p&gt;
Simplest solution to the issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41148 (Test for ticket 39875 can throw PHP error) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 28 Aug 2017 11:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41148#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41148#comment:7/1503919775823154</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40536" title="#40536: defect (bug): Imagick tests cannot be tested on Travis (new)"&gt;#40536&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40537" title="#40537: defect (bug): PDF tests cannot be tested on Travis (new)"&gt;#40537&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41148#comment:6" title="Comment 6"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Alternatively to the asserts I added, we could add a check to see whether the proper dependencies are installed, and skip the tests with a corresponding notice if not.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's already a bunch of test skipping in place for other tests that depend on Imagick. The same pattern can be used.
&lt;/p&gt;
&lt;p&gt;
In the long term, I think tests that require Imagick, GS, etc should fail (instead of be skipped) if the dependencies are not installed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41741 (product page from add to cart for varibale product) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 28 Aug 2017 10:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41741#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41741#comment:1/1503917167946625</guid>
      <description>invalid: &lt;p&gt;
Hi @santoor, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Sorry to hear you're having trouble. However, Trac is a place to report reproducible bugs in WordPress core software and is not a place for support. What you're describing sounds more like an issue specific to the ecommerce plugin you're using, so I would suggest trying the support forums to get help with your site: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If it turns out this is indeed a bug in WordPress itself, feel free to add details about how someone could reproduce the issue on a clean install.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41742 (New conditional tag to decide if a post has a custom template) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 28 Aug 2017 10:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41742#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41742#comment:2/1503917044235883</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Was the closing intentional?
&lt;/p&gt;
&lt;p&gt;
There are, however, &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/is_page_template/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;is_page_template()&lt;/a&gt; and &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_page_template_slug/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;get_page_template_slug()&lt;/a&gt; functions that should cover this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39077 (Navigation menu items should be defined as being hierarchical) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 10:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39077#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39077#comment:3/1503915360400284</guid>
      <description>&lt;p&gt;
@welcher I'm not sure what specific tests you have in mind.
&lt;/p&gt;
&lt;p&gt;
What could be tested is: "a &lt;code&gt;nav_menu_item&lt;/code&gt;'s &lt;code&gt;hierarchical&lt;/code&gt; property should return &lt;code&gt;true&lt;/code&gt;", but that would just test whether the &lt;code&gt;register_post_type()&lt;/code&gt; correctly assigns that property (which is already tested in several other places, directly or indirectly).
&lt;/p&gt;
&lt;p&gt;
Any specific test you would like to see?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41148 (Test for ticket 39875 can throw PHP error) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 10:04:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41148#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41148#comment:6/1503914697114161</guid>
      <description>&lt;p&gt;
The test error happens when some or all of the dependencies (&lt;code&gt;ghostscript&lt;/code&gt;, &lt;code&gt;imagemagick&lt;/code&gt;, &lt;code&gt;imagick&lt;/code&gt;) are not properly installed. It will result in an empty array being returned by &lt;code&gt;wp_generate_attachment_metadata()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Alternatively to the asserts I added, we could add a check to see whether the proper dependencies are installed, and skip the tests with a corresponding notice if not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41682 (JSDoc correction for namespaces) updated</title>
      
        <dc:creator>herregroen</dc:creator>

      <pubDate>Mon, 28 Aug 2017 09:56:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41682#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41682#comment:23/1503914197562412</guid>
      <description>&lt;p&gt;
@adamsilverstein
&lt;/p&gt;
&lt;p&gt;
I've just uploaded a patch that restores the few comments that were removed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>jsdoc-namespaces.5.patch attached to Ticket #41682</title>
      
        <dc:creator>herregroen</dc:creator>

      <pubDate>Mon, 28 Aug 2017 09:56:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41682/jsdoc-namespaces.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41682/jsdoc-namespaces.5.patch/1503914162586026</guid>
      <description>&lt;p&gt;
Restore removed comments.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39459 (Database upgrade is triggered on AJAX request) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 09:46:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39459#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39459#comment:5/1503913597339635</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch looks good and tests are still passing.
&lt;/p&gt;
&lt;p&gt;
However, I would personally prefer to have the multi-line conditions be split up before the boolean operator, so that these are the first element for each line. I think this is easier to read and reason about:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;} elseif ( ! wp_doing_ajax()
        &amp;amp;&amp;amp; get_option( 'db_version' ) != $wp_db_version
        &amp;amp;&amp;amp; empty($_POST)
) {
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I didn't find anything conclusive in the handbook, so not sure whether this is defined somewhere.
&lt;/p&gt;
&lt;p&gt;
Also, I couldn't find integration tests that test mechanisms like this. What is the usual approach for testing something similar?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22951 (Performance enhancements for esc_url()) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 09:37:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22951#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22951#comment:19/1503913065717682</guid>
      <description>&lt;p&gt;
The test failures were due to two issues:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the protocol is normalized to lowercase by the full protocol check
&lt;/li&gt;&lt;li&gt;&lt;code&gt;http&lt;/code&gt; needs to be rejected when only &lt;code&gt;https&lt;/code&gt; is allowed, and vice versa.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Both problems should be solved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36961 (wp_roles displays incorrect roles in multisite) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 28 Aug 2017 09:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36961#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36961#comment:20/1503912922489213</guid>
      <description>&lt;p&gt;
A bit late, but Mika pointed out via Slack that usage of &lt;code&gt;WP_User::for_blog()&lt;/code&gt; was very low. And since we're only talking about deprecation here, not removal, we should be safe to proceed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22951.2.diff attached to Ticket #22951</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 09:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22951/22951.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22951/22951.2.diff/1503912799075248</guid>
      <description>&lt;p&gt;
Refreshed the patch and made changes to fix broken tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41742 (New conditional tag to decide if a post has a custom template) closed</title>
      
        <dc:creator>danburzo</dc:creator>

      <pubDate>Mon, 28 Aug 2017 08:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41742#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41742#comment:1/1503909496196879</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41742 (New conditional tag to decide if a post has a custom template) created</title>
      
        <dc:creator>danburzo</dc:creator>

      <pubDate>Mon, 28 Aug 2017 08:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41742</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41742/1503908713046786</guid>
      <description>&lt;p&gt;
Something like &lt;code&gt;is_custom_template()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The rationale:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;it can be used in &lt;code&gt;template-loader.php&lt;/code&gt; to aid in clarifying the Template Hierarchy for attachments, posts, and pages.
&lt;/li&gt;&lt;li&gt;in a theme that wants to keep things DRY and redirects all template-xxx.php files to index.php, have a way to enquire if the post has a custom template — this unlocks alternative templating strategies (such as when using Timber).
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41741 (product page from add to cart for varibale product) created</title>
      
        <dc:creator>santoor</dc:creator>

      <pubDate>Mon, 28 Aug 2017 07:13:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41741</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41741/1503904432292655</guid>
      <description>&lt;p&gt;
If i am using attribute like 3.5" x 2" and using as variations to select at time of add to cart , functionality is working properly of add to cart
&lt;/p&gt;
&lt;p&gt;
when i am clicks on product from cart page then it has to be selected that option which i had selected at time of adding to cart but its not showing as selected
&lt;/p&gt;
&lt;p&gt;
But if i use 3.5 x 2 instead of 3.5" x 2" then its working fine
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41722 (wpdb::db_connect() does not connect to IPv6 address of mysql server) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 06:53:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41722#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41722#comment:6/1503903228835231</guid>
      <description>&lt;p&gt;
Thanks, @birgire, I added detection for the &lt;code&gt;mysqlnd&lt;/code&gt; driver and only conditionally add the square brackets as needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41722.2.diff attached to Ticket #41722</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 28 Aug 2017 06:53:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41722/41722.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41722/41722.2.diff/1503903184929514</guid>
      <description>&lt;p&gt;
Added detection for mysql drriver, as mysqlnd needs square brackets and the other doesn't
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41740 (Add comment count to "replies" link in post responses) created</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 28 Aug 2017 02:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41740</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41740/1503888130490975</guid>
      <description>&lt;p&gt;
Right now, you can preload comments using embedding with the linked "replies" resource. This is great, but there's no way to know whether you should try loading more. Fetching the resource directly would give you the total in the &lt;code&gt;X-WP-Total&lt;/code&gt; header, but you lose this when embedding.
&lt;/p&gt;
&lt;p&gt;
While this is generically a problem with the loss of headers from embedded resources, I don't think we really need a generic solution. Even when not embedding, a comment count is useful for archive display of a list of posts.
&lt;/p&gt;
&lt;p&gt;
We should add the comment count (using &lt;code&gt;wp_count_comments&lt;/code&gt;) to the "replies" link:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
    "replies": [
        {
            "href": ".../wp/v2/comments?post=42",
            "embeddable": true,
            "count": 12,
        }
    ]
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41739 (Support a "source" attribute in post types, taxonomies, and post statuses) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 28 Aug 2017 02:27:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41739#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41739#comment:2/1503887275243741</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41739#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;WP_Post_Type::set_props()&lt;/code&gt; already sets any custom properties you pass to &lt;code&gt;register_post_type()&lt;/code&gt;, so this appears to be possible without any special support from WordPress core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just tested by adding &lt;code&gt;'source' =&amp;gt; 'bbpress'&lt;/code&gt; to the post types in &lt;code&gt;bbPress::register_post_types()&lt;/code&gt; and checking &lt;code&gt;get_post_types( array( 'source' =&amp;gt; 'bbpress' ) )&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep! It will work, but... I think it's an idea worth officially endorsing and promoting as a best practice.
&lt;/p&gt;
&lt;p&gt;
(I added it to bbPress as I was creating this ticket: &lt;a class="ext-link" href="https://bbpress.trac.wordpress.org/changeset/6672"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bbpress.trac.wordpress.org/changeset/6672&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41739 (Support a "source" attribute in post types, taxonomies, and post statuses) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 28 Aug 2017 02:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41739#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41739#comment:1/1503886776754059</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;WP_Post_Type::set_props()&lt;/code&gt; already sets any custom properties you pass to &lt;code&gt;register_post_type()&lt;/code&gt;, so this appears to be possible without any special support from WordPress core.
&lt;/p&gt;
&lt;p&gt;
Just tested by adding &lt;code&gt;'source' =&amp;gt; 'bbpress'&lt;/code&gt; to the post types in &lt;code&gt;bbPress::register_post_types()&lt;/code&gt; and checking &lt;code&gt;get_post_types( array( 'source' =&amp;gt; 'bbpress' ) )&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41739 (Support a "source" attribute in post types, taxonomies, and post statuses) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 28 Aug 2017 02:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41739</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41739/1503886051651021</guid>
      <description>&lt;p&gt;
When registering custom post types, taxonomies, or post statuses, it would be nice to have a way to tell the system what plugin was responsible for those registrations.
&lt;/p&gt;
&lt;p&gt;
Use Case:
&lt;/p&gt;
&lt;p&gt;
In bbPress, there are 3 post types, 1 taxonomy, and 4 post statuses. There are several places where an "any bbPress post type" or "any bbPress post status" comparison is necessary, but it's somewhat annoying and repetitive to need to write:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array( bbp_get_forum_post_type(), bbp_get_topic_post_type(), bbp_get_reply_post_type() )
&lt;/pre&gt;&lt;p&gt;
I'd prefer to write:
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_post_types( array( 'source' =&amp;gt; 'bbpress' ) )
&lt;/pre&gt;&lt;p&gt;
Tangentially, this could replace the otherwise vague &lt;code&gt;internal&lt;/code&gt; property, with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'source' =&amp;gt; 'wordpress'
&lt;/pre&gt;&lt;p&gt;
I'm not confident that &lt;code&gt;source&lt;/code&gt; is the best descriptor, or if &lt;code&gt;domain&lt;/code&gt; or &lt;code&gt;namespace&lt;/code&gt; or something else might be more appropriate (without being too vague to be useful.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>41738.diff attached to Ticket #41738</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 28 Aug 2017 00:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41738/41738.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41738/41738.diff/1503881811205600</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41738 (Customize: Potential cache corruption when finding changeset post by UUID) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 28 Aug 2017 00:56:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41738</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41738/1503881781046139</guid>
      <description>&lt;p&gt;
&lt;code&gt;WP_Customize_Manager::find_changeset_post_id()&lt;/code&gt; accepts any &lt;code&gt;$uuid&lt;/code&gt;, but it uses the UUID assigned to the manager as the key when caching the found post ID.
&lt;/p&gt;
&lt;p&gt;
The attached patch updates the tests for &lt;code&gt;find_changeset_post_id()&lt;/code&gt; to demonstrate the issue and includes a fix.
&lt;/p&gt;
&lt;p&gt;
Note that it would also be possible to fix this bug as part of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40527" title="#40527: enhancement: Decouple WP_Customize_Manager (new)"&gt;#40527&lt;/a&gt;, for which I almost have a patch. But I'm filing this ticket separately in case &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40527" title="#40527: enhancement: Decouple WP_Customize_Manager (new)"&gt;#40527&lt;/a&gt; doesn't happen as soon as planned for whatever reason.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37855 (Clean WordPress Head - Group together related tags) closed</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 27 Aug 2017 22:44:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37855#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37855#comment:6/1503873850105731</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #34712 (New filter: `reset_password_url`) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 27 Aug 2017 22:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34712#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34712#comment:2/1503873361246587</guid>
      <description>&lt;p&gt;
I like the idea of custom reset pages!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 27 Aug 2017 22:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:6/1503872944688713</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41705 (i18n: Avoid using HTML tags in translation strings in upgrade classes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 27 Aug 2017 21:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41705#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41705#comment:2/1503869925936073</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41695 (i18n: Avoid using HTML tags in translation strings ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 27 Aug 2017 21:38:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41695#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41695#comment:2/1503869913956315</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41694 (i18n: Avoid using HTML tags in translation strings (wp-signup.php)) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 27 Aug 2017 21:38:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41694#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41694#comment:3/1503869906963906</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41737 (Possibly redundant template files in the hierarchy) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 27 Aug 2017 21:36:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41737#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41737#comment:2/1503869779896604</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41737 (Possibly redundant template files in the hierarchy) updated</title>
      
        <dc:creator>danburzo</dc:creator>

      <pubDate>Sun, 27 Aug 2017 20:46:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41737#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41737#comment:1/1503866808242334</guid>
      <description>&lt;p&gt;
For convenience, here's where the relevant code is located:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;get_attachment_template(): &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.8.1/src/wp-includes/template.php#L593"&gt;tags/4.8.1/src/wp-includes/template.php#L593&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.8.1/src/wp-includes/template.php#L593" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;get_single_template(): &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.8.1/src/wp-includes/template.php#L481"&gt;tags/4.8.1/src/wp-includes/template.php#L481&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.8.1/src/wp-includes/template.php#L481" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And a few related issues I found:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;attachment.php is too high in priority: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38160" title="#38160: enhancement: Attachment template hierarchy selects generic attachment.php before ... (new)"&gt;#38160&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;attachment.php is usually missing in themes: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41461" title="#41461: enhancement: Sort out missing attachment.php template somehow (new)"&gt;#41461&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;attachment uploaded to Page goes on to &lt;code&gt;page.php&lt;/code&gt; instead of &lt;code&gt;single-....php&lt;/code&gt;: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/33017" title="#33017: defect (bug): Images displayed with page.php instead of index.php (reopened)"&gt;#33017&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;
In regards to Custom Post Templates to apply to single attachments, posts, and pages, maybe have a &lt;code&gt;get_custom_template()&lt;/code&gt; method in &lt;code&gt;template.php&lt;/code&gt; that gets called in &lt;code&gt;template-loader.php&lt;/code&gt; before &lt;code&gt;is_attachment()&lt;/code&gt; / &lt;code&gt;is_single()&lt;/code&gt; / &lt;code&gt;is_page()&lt;/code&gt;?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
On the topic of deprecation, I salute the demise of &lt;code&gt;paged.php&lt;/code&gt; — I could not wrap my head around how to use it :P.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41737 (Possibly redundant template files in the hierarchy) created</title>
      
        <dc:creator>danburzo</dc:creator>

      <pubDate>Sun, 27 Aug 2017 20:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41737</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41737/1503866477168696</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
As I'm building &lt;a class="ext-link" href="https://forklor.github.io/wp-template-hierarchy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://forklor.github.io/wp-template-hierarchy/&lt;/a&gt; (still a work in progress) and sifting through the source code, it looks like the following template files in the hierarchy may be redundant:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;${subtype}.php&lt;/code&gt; for attachments — is there a need for a template for a subtype without its associated &lt;code&gt;${mime_type}&lt;/code&gt;? Is there a use-case am I missing where a subtype may be associated with different mime types?
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;&lt;code&gt;attachment.php&lt;/code&gt; can be caught in &lt;code&gt;single-attachment.php&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
For the sake of simplifying WP's API surface, I am proposing deprecating these templates in a future version.
&lt;/p&gt;
&lt;p&gt;
And as a related question (let me know if I should open a separate issue), to preserve symmetry with other post types and and pages, should a Custom Post Template set for an attachment not get priority before the other attachment templates?
&lt;/p&gt;
&lt;p&gt;
(Please let me know if I misunderstood anything!)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41736 (validate_file function will always return error for file paths in ...) created</title>
      
        <dc:creator>lechdulian</dc:creator>

      <pubDate>Sun, 27 Aug 2017 18:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41736</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41736/1503859851535511</guid>
      <description>&lt;p&gt;
In Windows dev environments such as WAMP or XAMPP a file path always contains a colon after a drive letter, so all plugins making conditional checks with &lt;code&gt;validate_file()&lt;/code&gt; would fail.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37757.diff attached to Ticket #37757</title>
      
        <dc:creator>NathanAtmoz</dc:creator>

      <pubDate>Sun, 27 Aug 2017 17:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37757/37757.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37757/37757.diff/1503856514415034</guid>
      <description>&lt;p&gt;
first pass at a patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>JoshuaWold</dc:creator>

      <pubDate>Sun, 27 Aug 2017 16:34:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:62/1503851694617868</guid>
      <description>&lt;p&gt;
In order to catch myself up on the problem that's happening here, I've created a user flow with screenshots: &lt;a class="ext-link" href="https://make.wordpress.org/test/2017/08/27/updating-plugins-with-zip-uploads/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/test/2017/08/27/updating-plugins-with-zip-uploads/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It took a while to understand the issue, so hopefully these screenshots will help others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38131 (REST API: Provide interface to include or exclude specific fields from ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 27 Aug 2017 13:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38131#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38131#comment:26/1503838954768339</guid>
      <description>&lt;p&gt;
@TimothyBlynJacobs Thanks for the updated patch here, it makes sense to include the filtering code in the controller itself (using the filter made it easier to release as a plugin). The nested field support is also nice - my only concern would be about the overhead.
&lt;/p&gt;
&lt;p&gt;
In terms of limiting fields queried, there is a deeper issue here with cache hydration - the query is expected to hydrate the cache for subsequent queries (also the reason WP_QUERY only offers a few options for it's '&lt;code&gt;fields&lt;/code&gt; parameter). if we only queried for some fields, we couldn't hydrate the cache fully, and subsequent (on the same page even) queries for post data would fail (or need another query).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41722 (wpdb::db_connect() does not connect to IPv6 address of mysql server) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sun, 27 Aug 2017 12:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41722#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41722#comment:5/1503836216582297</guid>
      <description>&lt;p&gt;
There seems to be some inconsistency how IPv6 addresses are handled by &lt;strong&gt;mysqlnd&lt;/strong&gt;, that's a part of the PHP distribution since 5.3.0. (&lt;a class="ext-link" href="http://php.net/manual/en/mysqlinfo.library.choosing.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/mysqlinfo.library.choosing.php&lt;/a&gt; ) and &lt;strong&gt;libmysqlclient&lt;/strong&gt;, according the the comments here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=67563"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.php.net/bug.php?id=67563&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;[2015-04-18 13:48 UTC] bobe at webnaute dot net
There is a real problem here because mysqlnd wants the IPv6 address to be enclosed
in brackets (illogical since mysqli_connect() or PDO wants a host, not a url).
But when using libmysqlclient, these extensions wants the IPv6 address NOT to be enclosed in brackets.
&lt;/pre&gt;&lt;pre class="wiki"&gt; [2015-04-18 14:30 UTC] bobe at webnaute dot net
Here is some tests:
PDO mysql + mysqlnd:
[::1] =&amp;gt; ok
::1 =&amp;gt; getaddrinfo failed
mysqli_connect() + mysqlnd:
[::1] =&amp;gt; ok
::1 =&amp;gt; getaddrinfo failed
mysql_connect() + mysqlnd:
[::1] =&amp;gt; Failed to parse IPv6 address "[:3306"
::1 =&amp;gt; No such file or directory
PDO mysql + libmysqlclient:
[::1] =&amp;gt; SQLSTATE[HY000] [2005] Unknown MySQL server host '[::1]'
::1 =&amp;gt; ok
mysqli_connect() + libmysqlclient:
[::1] =&amp;gt; (HY000/2005): Unknown MySQL server host '[::1]'
::1 =&amp;gt; ok
mysql_connect() + libmysqlclient:
[::1] =&amp;gt; Unknown MySQL server host '[' (2)
::1 =&amp;gt; Can't connect to local MySQL server through socket '1'
&lt;/pre&gt;&lt;p&gt;
This would need to be verified for mysqli_real_connect().
&lt;/p&gt;
&lt;p&gt;
Wonder if this should be handled by WordPress (lib-detecting) or if it should be up to the user to provide the correct ipv6 form based on the underlying lib? I think the latter would be confusing to users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41722 (wpdb::db_connect() does not connect to IPv6 address of mysql server) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Sun, 27 Aug 2017 08:41:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41722#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41722#comment:4/1503823275831232</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've provided a first patch that changes the way the host is parsed. Now, &lt;code&gt;DB_HOST&lt;/code&gt; values like &lt;code&gt;::1&lt;/code&gt; or &lt;code&gt;[::1]:3306&lt;/code&gt; are correctly parsed and forwarded.
&lt;/p&gt;
&lt;p&gt;
I couldn't find any prior tests that check the &lt;code&gt;DB_HOST&lt;/code&gt; values, so not sure how this could be properly tested. I could write some unit tests for the &lt;code&gt;wpdb::parse_db_host()&lt;/code&gt; method, but without more specific data on what is acceptable to &lt;code&gt;mysqli&lt;/code&gt; (which I couldn't find yet), I'm not sure that will tell us much.
&lt;/p&gt;
&lt;p&gt;
Note: &lt;code&gt;mysqli_real_connect()&lt;/code&gt; seems to require the IPv6 hosts to always be enclosed in square brackets, at least on my system (PHP 7.0.20 + MariaDB 10.2.6).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41722.diff attached to Ticket #41722</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Sun, 27 Aug 2017 08:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41722/41722.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41722/41722.diff/1503822936002424</guid>
      <description>&lt;p&gt;
Fix for parsing both IPv4 &amp;amp; IPv6 hosts
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #16753,​19157 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 27 Aug 2017 08:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=16753%2C19157</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=16753%2C19157/1503821044296475</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16753" title="#16753: enhancement: PHP5-port - microtime() use (closed: duplicate)"&gt;#16753&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #41735 (Include titles for JSON Schema properties) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Sun, 27 Aug 2017 07:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41735#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41735#comment:2/1503817200785536</guid>
      <description>&lt;p&gt;
I agree, this would be very useful for automated UI generation and documentation.
&lt;/p&gt;
&lt;p&gt;
However, without something like &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41305" title="#41305: enhancement: Add lazily evaluated translations (assigned)"&gt;#41305&lt;/a&gt;, it will also double the already exorbitant number of calls to &lt;code&gt;translate()&lt;/code&gt;. Something to keep in mind before merging, as it will probably have a big negative impact on performance with the current codebase.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38221 (Incorrect page id/name search blocks future searches) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 27 Aug 2017 04:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38221#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38221#comment:5/1503807310418375</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning to mark the &lt;code&gt;good-first-bug&lt;/code&gt; as "claimed".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38131.3.diff attached to Ticket #38131</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 27 Aug 2017 03:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38131/38131.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38131/38131.3.diff/1503803304816848</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38131 (REST API: Provide interface to include or exclude specific fields from ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 27 Aug 2017 03:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38131#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38131#comment:25/1503803284665689</guid>
      <description>&lt;p&gt;
Attached is an alternate approach that handles the filtering of the responses in the controller itself. This matches how the &lt;code&gt;context&lt;/code&gt; parameter works, but it isn't included by default.
&lt;/p&gt;
&lt;p&gt;
This version also handles nested fields, specifying &lt;code&gt;title.raw&lt;/code&gt; for just the raw title or &lt;code&gt;title&lt;/code&gt; to retrieve both the raw and rendered title. This could also be used by controllers to only calculate the fields as necessary. I'm not sure whether this should be used to limit the fields queried ( I think that can be done in &lt;code&gt;WP_User_Query&lt;/code&gt; but I'm not sure about the others ). I imagine some of the performance benefits here, besides response size, would be not filtering &lt;code&gt;the_content&lt;/code&gt; if it wasn't a requested field, for instance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31521 (wp_title if archive of year w/o permalink fires php notice in locale.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 27 Aug 2017 00:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31521#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31521#comment:4/1503795316026601</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41735 (Include titles for JSON Schema properties) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 27 Aug 2017 00:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41735#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41735#comment:1/1503794350830547</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41735.diff attached to Ticket #41735</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 27 Aug 2017 00:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41735/41735.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41735/41735.diff/1503794341113119</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41735 (Include titles for JSON Schema properties) created</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 27 Aug 2017 00:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41735</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41735/1503794321066402</guid>
      <description>&lt;p&gt;
JSON Schema supports a &lt;code&gt;title&lt;/code&gt; property that can hold a user-readable label for the property. This would be incredibly helpful in building generated documentation and user interfaces.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>