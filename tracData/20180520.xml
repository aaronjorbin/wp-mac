<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44053 (RTL problem in WordPress Text Editor) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 20 May 2018 22:34:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44053#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44053#comment:6/1526855667735158</guid>
      <description>&lt;p&gt;
There are no other updates required @man4toman, a committer will review and commit the patch and it will ship in the 4.9.7 release of WordPress
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44123 (Utilize `is_countable()` and `is_iterable()` Polyfills) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 21:43:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44123#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44123#comment:10/1526852596945409</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44123#comment:9" title="Comment 9"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@thrijith Thank you for your contributions to this! I'll try to review the patches later this week.
&lt;/p&gt;
&lt;p&gt;
As a general - but important - side-note (without having reviewed the patches): &lt;code&gt;is_countable()&lt;/code&gt; should only be added when needed, not blindly to every &lt;code&gt;count()&lt;/code&gt;.
If an array is expected somewhere and the variable being tested is not a parameter being passed in or the output of a &lt;code&gt;apply_filters()&lt;/code&gt; call either in the function in question or in a function from which the output is being used, &lt;code&gt;is_countable()&lt;/code&gt; should not be added as it should not be needed and adding it may hide bugs which should be solved instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Noted. Thanks for the input, I have added comments on tickets where I had my doubts, Please let me know if changes are needed from my end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44123 (Utilize `is_countable()` and `is_iterable()` Polyfills) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 20 May 2018 21:32:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44123#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44123#comment:9/1526851935406497</guid>
      <description>&lt;p&gt;
@thrijith Thank you for your contributions to this! I'll try to review the patches later this week.
&lt;/p&gt;
&lt;p&gt;
As a general - but important - side-note (without having reviewed the patches): &lt;code&gt;is_countable()&lt;/code&gt; should only be added when needed, not blindly to every &lt;code&gt;count()&lt;/code&gt;.
If an array is expected somewhere and the variable being tested is not a parameter being passed in or the output of a &lt;code&gt;apply_filters()&lt;/code&gt; call either in the function in question or in a function from which the output is being used, &lt;code&gt;is_countable()&lt;/code&gt; should not be added as it should not be needed and adding it may hide bugs which should be solved instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44162 (Add is_countable() check to wp-admin/edit-form-advanced.php) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 21:23:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44162#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44162#comment:5/1526851422289513</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
but I don't think we should make such changes in the logic here, just keep it as simple as possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.
&lt;/p&gt;
&lt;p&gt;
Also, I am thinking of updating this from
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( post_type_supports( $post_type, 'page-attributes' ) ||
( is_countable( get_page_templates( $post ) ) &amp;amp;&amp;amp; count( get_page_templates( $post ) ) &amp;gt; 0 ) )
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;$page_templates = get_page_templates( $post );
if ( post_type_supports( $post_type, 'page-attributes' ) ||
( is_countable( $page_templates ) &amp;amp;&amp;amp; count( $page_templates ) &amp;gt; 0 ) )
&lt;/pre&gt;&lt;p&gt;
Will that be ok?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44123 (Utilize `is_countable()` and `is_iterable()` Polyfills) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 21:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44123#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44123#comment:8/1526851116000620</guid>
      <description>&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44168" title="#44168: defect (bug): Add is_countable() check to wp-admin/includes/ajax-actions.php (new)"&gt;#44168&lt;/a&gt;, added &lt;code&gt;is_countable()&lt;/code&gt; to &lt;code&gt;wp-admin/includes/ajax-actions.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44168 (Add is_countable() check to wp-admin/includes/ajax-actions.php) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 21:17:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44168#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44168#comment:1/1526851043921336</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44168.diff attached to Ticket #44168</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 21:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44168/44168.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44168/44168.diff/1526851025518228</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44168 (Add is_countable() check to wp-admin/includes/ajax-actions.php) created</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 21:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44168/1526850990081047</guid>
      <description>&lt;p&gt;
Update code with &lt;code&gt;is_countable()&lt;/code&gt; wherever necessary in &lt;code&gt;wp-admin/includes/ajax-actions.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44123" title="#44123: task (blessed): Utilize `is_countable()` and `is_iterable()` Polyfills (closed: wontfix)"&gt;#44123&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Sun, 20 May 2018 20:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:69/1526849894400268</guid>
      <description>&lt;p&gt;
Thanks @xkon. I downloaded @imath's plugin at Github and works well! Hope the patch in that ticket is added to 4.9.7
&lt;/p&gt;
&lt;p&gt;
Also, isn't it necessary to tell the commenter of this behaviour?
&lt;/p&gt;
&lt;p&gt;
For example, moderation might take, say a day or two and if the commenter visits the site again and finds that his/her comment isn't there (since the cookie isn't stored if he/she doesn't opt-in)?
&lt;/p&gt;
&lt;p&gt;
I know how to do it myself---have already done for my site. I am suggesting it for all Wordpress sites.
&lt;/p&gt;
&lt;p&gt;
Something like:
&lt;/p&gt;
&lt;p&gt;
"&lt;em&gt;Note&lt;/em&gt;: If you do not opt-in to save, and click the submit button below, and if your comment goes into moderation, it may appear only once in your browser—after this page reloads—not subsequently or till the comment is approved."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44123 (Utilize `is_countable()` and `is_iterable()` Polyfills) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 20:55:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44123#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44123#comment:7/1526849733044730</guid>
      <description>&lt;p&gt;
Ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44167" title="#44167: defect (bug): Add is_countable() check to wp-admin/edit.php (closed: invalid)"&gt;#44167&lt;/a&gt;, &lt;code&gt;added is_countable()&lt;/code&gt; to &lt;code&gt;wp-admin/edit.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44167 (Add is_countable() check to wp-admin/edit.php) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 20:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44167#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44167#comment:1/1526849621965227</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44167.diff attached to Ticket #44167</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 20:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44167/44167.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44167/44167.diff/1526849610376564</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44167 (Add is_countable() check to wp-admin/edit.php) created</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 20:52:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44167/1526849561191894</guid>
      <description>&lt;p&gt;
Update code with is_countable() wherever necessary in wp-admin/edit-form-advanced.php
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44123" title="#44123: task (blessed): Utilize `is_countable()` and `is_iterable()` Polyfills (closed: wontfix)"&gt;#44123&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44162 (Add is_countable() check to wp-admin/edit-form-advanced.php) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 20:50:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44162#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44162#comment:4/1526849450005843</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44166 (Typo in Privacy Policy example content) created</title>
      
        <dc:creator>garetharnold</dc:creator>

      <pubDate>Sun, 20 May 2018 20:36:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44166/1526848566118744</guid>
      <description>&lt;p&gt;
in /wp-admin/includes/misc.php
&lt;/p&gt;
&lt;p&gt;
"tracing" should be "tracking"
&lt;/p&gt;
&lt;p&gt;
See diff below
&lt;/p&gt;
&lt;pre class="wiki"&gt;-			'&amp;lt;p&amp;gt;' . __( 'These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracing your interaction with the embedded content if you have an account and are logged in to that website.' ) . '&amp;lt;/p&amp;gt;' .
+			'&amp;lt;p&amp;gt;' . __( 'These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.' ) . '&amp;lt;/p&amp;gt;' .
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44162 (Add is_countable() check to wp-admin/edit-form-advanced.php) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sun, 20 May 2018 20:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44162#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44162#comment:3/1526847703745994</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44162#comment:2" title="Comment 2"&gt;thrijith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am having a doubt regarding this, how to replace where count's value is used directly?
for eg
&lt;/p&gt;
&lt;pre class="wiki"&gt;
if ( is_array( $done ) ) {
 $done['updated'] = count( $done['updated'] );
 $done['skipped'] = count( $done['skipped'] );
 $done['locked']  = count( $done['locked'] );
 $sendback        = add_query_arg( $done, $sendback );
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Instead of this verbose way:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
if ( is_array( $done ) ) {
    $done['updated'] = is_countable( $done['updated'] ) ? count( $done['updated'] ) : 0;
    $done['skipped'] = is_countable( $done['skipped'] ) ? count( $done['skipped'] ) : 0;
    $done['locked']  = is_countable( $done['locked'] ) ? count( $done['locked'] ) : 0;
    $sendback        = add_query_arg( $done, $sendback );
}
&lt;/pre&gt;&lt;p&gt;
this comes to mind:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_array( $done ) ) {
    foreach( array( 'update', 'skipped', 'locked' ) as $key ) {
        $done[ $key ] = is_countable( $done[ $key ] ) ? count( $done[ $key ] ) : 0;
    }
    $sendback = add_query_arg( $done, $sendback );
}
&lt;/pre&gt;&lt;p&gt;
but I've not tested this.
&lt;/p&gt;
&lt;p&gt;
Personally I might even check if &lt;code&gt;$done[$key]&lt;/code&gt; is set and use e.g. the approach of adjusting an initial counting array &lt;code&gt;array( 'update' =&amp;gt; 0, 'skipped' =&amp;gt; 0, 'locked' =&amp;gt; 0 )&lt;/code&gt;, but I don't think we should make such changes in the logic here, just keep it as simple as possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42533 (New pages scheduled via Customizer viewable as admin, 404 as visitor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 20 May 2018 19:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42533#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42533#comment:13/1526845812107781</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by chetan200891. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1526845811000011"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42533 (New pages scheduled via Customizer viewable as admin, 404 as visitor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 20 May 2018 19:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42533#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42533#comment:12/1526845733677571</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by chetan200891. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1526845733000007"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44165 (Preview issue) created</title>
      
        <dc:creator>mccrow</dc:creator>

      <pubDate>Sun, 20 May 2018 19:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44165</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44165/1526844927750760</guid>
      <description>&lt;p&gt;
Hopefully it's the theme and not the 4.9.6 update, but since updating all my posts in Learnpress have gone visible, whether preview or not.
This is triggering some weird behaviour in Learnpress, but thought I'd flag it up. I've had to password protect all my courses as they were all visible overnight to non-customers!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44164 (Getting a span code when switching from HTML to Visual editor) created</title>
      
        <dc:creator>rogeriomoreira</dc:creator>

      <pubDate>Sun, 20 May 2018 18:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44164</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44164/1526842577182249</guid>
      <description>&lt;p&gt;
Hello.
&lt;/p&gt;
&lt;p&gt;
After updating to WordPress 4.9.6 I am getting a span code in the editor and the tabs don't switch.
&lt;/p&gt;
&lt;p&gt;
Here is code I'm getting:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"display: inline-block; width: 0px; overflow: hidden; line-
height: 0;"&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;mce&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"bookmark"&lt;/span&gt; &lt;span class="nx"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"mce_SELRES_start"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/nI7j5xJ.jpg"&gt;&lt;img src="https://i.imgur.com/nI7j5xJ.jpg" alt="https://i.imgur.com/nI7j5xJ.jpg" crossorigin="anonymous" title="https://i.imgur.com/nI7j5xJ.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It is a WordPress core error or maybe some theme or plugin incompatibility?
&lt;/p&gt;
&lt;p&gt;
Thanks,
Rogério Moreira
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44163 (wpdb-&gt;update() fails, showing no error message) created</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Sun, 20 May 2018 18:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44163</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44163/1526842445133084</guid>
      <description>&lt;p&gt;
It's my second report about the incompletness of wpdb-&amp;gt;update function.
1-2 years ago I've reported the scenario when it failed to update, but &lt;code&gt;last_error&lt;/code&gt; was empty.
&lt;/p&gt;
&lt;p&gt;
Now, another scenario, when it fails , but &lt;code&gt;last_error&lt;/code&gt; is empty, is the following:
&lt;/p&gt;
&lt;p&gt;
i.e. create a table with "NOT NULL"
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"CREATE TABLE IF NOT EXISTS `example_table` (
                `rowID` int(11) NOT NULL AUTO_INCREMENT,
                `name` varchar(150) NOT NULL,
                `id` varchar(150) NOT NULL,
                `data` LONGTEXT  NOT NULL DEFAULT '',
                PRIMARY KEY (`rowID`),
                UNIQUE KEY `rowID` (`rowID`)
                ) "&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_charset_collate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;" AUTO_INCREMENT=1;"&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
then insert some empty  value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
 $wpdb-&amp;gt;insert("example_table", array("name" =&amp;gt; "James", "id"=&amp;gt;"123", "data"=&amp;gt;"blabla") );
&lt;/pre&gt;&lt;p&gt;
then try to update
&lt;/p&gt;
&lt;pre class="wiki"&gt; $wpdb-&amp;gt;update("example_table", array("name"=&amp;gt;"Jonathan"),  array("id"=&amp;gt;"133") );
&lt;/pre&gt;&lt;p&gt;
it doesnt update.
I have dumped &lt;code&gt;$this-&amp;gt;dbh&lt;/code&gt; (in wp-db.php 1887 line), and it shows affected lines: 0
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;last_error&lt;/code&gt; is empty. After spending much time, found that I was missing "required" parameter and added
&lt;/p&gt;
&lt;pre class="wiki"&gt; $wpdb-&amp;gt;update("example_table", array("name"=&amp;gt;"Jonathan", "data"=&amp;gt;"new-blabla"),  array("id"=&amp;gt;"133") );
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
("NOT NULL" requirement caused failure)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
so, it's good, last_error contained some information, when affected lines are 0, or like such scenarios.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44053 (RTL problem in WordPress Text Editor) updated</title>
      
        <dc:creator>man4toman</dc:creator>

      <pubDate>Sun, 20 May 2018 17:17:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44053#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44053#comment:5/1526836628178102</guid>
      <description>&lt;p&gt;
Any updates?
Text editor is very messy in RTL languages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44162 (Add is_countable() check to wp-admin/edit-form-advanced.php) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 16:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44162#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44162#comment:2/1526835173445475</guid>
      <description>&lt;p&gt;
I am having a doubt regarding this, how to replace where count's value is used directly?
for eg
&lt;/p&gt;
&lt;pre class="wiki"&gt;
if ( is_array( $done ) ) {
 $done['updated'] = count( $done['updated'] );
 $done['skipped'] = count( $done['skipped'] );
 $done['locked']  = count( $done['locked'] );
 $sendback        = add_query_arg( $done, $sendback );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44162 (Add is_countable() check to wp-admin/edit-form-advanced.php) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sun, 20 May 2018 15:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44162#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44162#comment:1/1526831468211884</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44123 (Utilize `is_countable()` and `is_iterable()` Polyfills) updated</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 15:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44123#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44123#comment:6/1526830798206890</guid>
      <description>&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44162" title="#44162: defect (bug): Add is_countable() check to wp-admin/edit-form-advanced.php (new)"&gt;#44162&lt;/a&gt;, added &lt;code&gt;is_countable()&lt;/code&gt; to &lt;code&gt;wp-admin/edit-form-advanced.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44162.diff attached to Ticket #44162</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 15:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44162/44162.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44162/44162.diff/1526830611127059</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44162 (Add is_countable() check to wp-admin/edit-form-advanced.php) created</title>
      
        <dc:creator>thrijith</dc:creator>

      <pubDate>Sun, 20 May 2018 15:34:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44162</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44162/1526830481242634</guid>
      <description>&lt;p&gt;
Update code with &lt;code&gt;is_countable()&lt;/code&gt; wherever necessary in &lt;code&gt;wp-admin/edit-form-advanced.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44161 (Expired session tokens need to be removed from database because GDPR) created</title>
      
        <dc:creator>mechter</dc:creator>

      <pubDate>Sun, 20 May 2018 15:12:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44161</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44161/1526829152744141</guid>
      <description>&lt;p&gt;
WordPress stores the IP address (which is considered personal information) as part of its session tokens in the usermeta table. When the session expires, GDPR would seem to require the IP address to be removed from the database, as there is no longer a reason to keep it.
&lt;/p&gt;
&lt;p&gt;
There should be some kind of garbage collection that removes expired session tokens on a daily basis.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44160 (No Feedback for writing an Comment) created</title>
      
        <dc:creator>joergh1975</dc:creator>

      <pubDate>Sun, 20 May 2018 14:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44160/1526826355964222</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
with Version 4.9.6 there is a new checkbox when writing an comment
&lt;/p&gt;
&lt;p&gt;
"Save name, email, website in browser" (dont know the exact english, i use german).
When the box is checked, the user gets the information that his comment waits to be unlocked by an administrator.
So far so good...
&lt;/p&gt;
&lt;p&gt;
But when the checkbox is not checked, the user send his comment, he gets NO feedback! He didnt know if the comment is send, or if there is something wrong.
He may thing that his comment is not saved and write it again or leaves the website... he could not know that his comment is waiting to be unlocked...
&lt;/p&gt;
&lt;p&gt;
We need an information for user that send an comment and has the checkbox unchecked. The user must get feedback: "Thanks for your comment! The comment needs to be unlocked by an Adminstrator." or sonething like that.
But give absolute no feedback is a bad idear!
&lt;/p&gt;
&lt;p&gt;
I am sorry for my bad english, i hope you understand everything i wrote...:)
Greetings,
Joerg
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44155 (bugs found in 4.9.6) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sun, 20 May 2018 13:21:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44155#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44155#comment:1/1526822488370699</guid>
      <description>&lt;p&gt;
I went to a random page on your site and I see the comment form just fine, although the label for the comment cookies consent checkbox is hidden.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44043 (Framework for logging/retrieving a users consent state) updated</title>
      
        <dc:creator>gisle</dc:creator>

      <pubDate>Sun, 20 May 2018 09:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44043#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44043#comment:18/1526809959356619</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44043#comment:16" title="Comment 16"&gt;cookiebot&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The GDPR requires prior consent for cookies used for marketing purposes. […] Moreover, if cookies are set for statistical purposes, and the users IP address (which is considered personal data under the GDPR) is stored by the 1st or 3rd party, consent is required as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The above is quite inaccurate (it probably originates from reading some blogs about the privacy legal framework of the EU, not from professional legal advice). For one thing the obligations of the controller regarding cookies cannot be found in the GDPR, they are laid out in Directive 2002/58/EC (aka. "the cookie directive") which is 16 years old this year. Also, the notion of an IP address being personal data does not comes from the GDPR, it follows from case law from the ECJ (several cases, but most notable C‑70/10 (28 January 2010) and C-582/14 (19 October 2016). The GDPR only mentions cookies once, in Recital 30, and it provides absolutely &lt;em&gt;no guidance&lt;/em&gt; about implementation. So to understand what is required, you need to examine the original sources.
&lt;/p&gt;
&lt;p&gt;
But, yes - hard consent is required for some purposes of processing (more purposes than the two you mention, btw.).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am not sure if we are talking about the same thing here. We are not taking any data for the user, and we consider this proposal to be an enhancement to WP, rather than a defect.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For 16 years, the best practice for the controller has been to first perform a cookie audit, and then set up a plugin to inform the user about what cookies are set, for what purpose, by what site (i.e. to make it clear what is first and third party cookies), and whether it is a session cookie or if it will remain set after the session - and in that case, also its duration). The usual method to inform the user is to show a popup with a link to the required information when the visitor first visits the site, and keep showing this popup until the user clicks "OK" to indicate consent. A lot of these plugins exists, but "Cookie Consent" by &lt;em&gt;Catapult_Themes&lt;/em&gt; seem to do everything that is required by the GDPR. (There are probably lots of others that do the job equally well.)
&lt;/p&gt;
&lt;p&gt;
Because cookies are stored on the &lt;em&gt;user's&lt;/em&gt; hard disk, under the full control of the user, withdrawing consent as required by the GDPR can and should be done by the user himself, simply by deleting the cookie.  Cookies can be deleted one by one, or in bulk, giving the user the granular control over cookie consent that is required by the GDPR.
&lt;/p&gt;
&lt;p&gt;
What you are proposing is to deviate from what has been legal, and considered best practices, for the last 16 years. You say that the new practice you want to introduce is an "enhancement", not a "bug".  I am not going to get into a type tagging war, but in my eyes, &lt;em&gt;CookieBot&lt;/em&gt; just adds another unneeded third party service that could potentially track my users in the computer systems where I am the controller.  Since it does not do anything &lt;em&gt;better&lt;/em&gt; than current best practices, I simply see no need for it, and I suspect that installing &lt;em&gt;CookieBot&lt;/em&gt; would break the GDPR compliance of my site unless I am able to negotiate a Data Processor Agreement (me as controller, &lt;em&gt;CookieBot&lt;/em&gt; as processor) that provides me with the controls and assurances I am, by law, required to have as a controller.  As I see no utility for myself or my users for this service, negotiating such a DPA would of course be a waste of time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42277 (Remove useless tests from `Tests_Basic`) reopened</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 20 May 2018 09:06:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42277#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42277#comment:4/1526807203156004</guid>
      <description>&lt;p&gt;
Why were the basic object classes removed? See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37523" title="#37523: enhancement: Unit tests: Move classes out of includes/functions.php into their own file (closed: fixed)"&gt;#37523&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44158 (Privacy: When path not created wp_mkdir_p() returns false, not WP_Error) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 20 May 2018 08:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44158#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44158#comment:2/1526805533326962</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44043 (Framework for logging/retrieving a users consent state) updated</title>
      
        <dc:creator>cookiebot</dc:creator>

      <pubDate>Sun, 20 May 2018 07:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44043#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44043#comment:17/1526801437640032</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44043 (Framework for logging/retrieving a users consent state) updated</title>
      
        <dc:creator>cookiebot</dc:creator>

      <pubDate>Sun, 20 May 2018 07:17:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44043#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44043#comment:16/1526800627080559</guid>
      <description>&lt;p&gt;
Hi @gisle,
&lt;/p&gt;
&lt;p&gt;
The GDPR requires prior consent for cookies used for marketing purposes. These could be 3rd party cookies stored by YouTube, Facebook Pixels, etc. Moreover, if cookies are set for statistical purposes, and the users IP address (which is considered personal data under the GDPR) is stored by the 1st or 3rd party, consent is required as well.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I simply do not see the need for using an external service (such CopyBot) to handle my users' cookies, or to handle these permissions myself. What is proposed here is to take some data where the user is fully in control, and turn into something where the user is only partial in control. As a controller who cares for my users' privacy, I think this is a horrible idea.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am not sure if we are talking about the same thing here. We are not taking any data for the user, and we consider this proposal to be an enhancement to WP, rather than a defect.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44043 (Framework for logging/retrieving a users consent state) updated</title>
      
        <dc:creator>gisle</dc:creator>

      <pubDate>Sun, 20 May 2018 06:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44043#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44043#comment:15/1526798629443968</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticked seems to confuse granular consent (as required by the GDPR) and cookie compliance (as required by Directive 2002/58/EC, aka. "the cookie directive"). I think they need to be kept separate.
&lt;/p&gt;
&lt;p&gt;
A cookie is a rather special type a personal data, because &lt;em&gt;you&lt;/em&gt; do not store it or control it. The cookie is &lt;em&gt;always&lt;/em&gt; stored on the user's hard drive, and is at all times fully under the user's control. You can only access it and the information it contains as long as the user let you. If the user wants to withdraw consent to you having access to this data, the user deletes the cookie. End of story. This is why cookie compliance need to be treated different from consent to process personal data where you (or a third party acting as a processor for you) control access to the data.
&lt;/p&gt;
&lt;p&gt;
I simply do not see the need for using an external service (such &lt;em&gt;CopyBot&lt;/em&gt;) to handle my users' cookies, or to handle these permissions myself. What is proposed here is to take some data where the user is &lt;em&gt;fully&lt;/em&gt; in control, and turn into something where the user is only &lt;em&gt;partial&lt;/em&gt; in control. As a controller who cares for my users' privacy, I think this is a horrible idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44159 (feature request: otption for removing save my name in comments) created</title>
      
        <dc:creator>longman2020</dc:creator>

      <pubDate>Sun, 20 May 2018 04:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44159</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44159/1526789669659328</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
As I see in wordpress 4.9.6, a new option has been added under comments fields that says: sava my name, email and etc…
Thant very nice. thank you so much
&lt;/p&gt;
&lt;p&gt;
But I think it would be better if there was an option in wordpress settings to let website owners choose whether to select it or not to show on frontend.
&lt;/p&gt;
&lt;p&gt;
Thank you very much
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 20 May 2018 03:25:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:17/1526786710278786</guid>
      <description>&lt;p&gt;
@azaozz What about indicating that rules should only be flushed within wp-admin within the &lt;code&gt;flush_rewrite_rules&lt;/code&gt; function that is typically called, as seen in 44142.3.diff?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44142.3.diff attached to Ticket #44142</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 20 May 2018 03:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44142/44142.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44142/44142.3.diff/1526786656631896</guid>
      <description>&lt;p&gt;
doing_it_wrong on any non-admin flush
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 20 May 2018 01:09:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:16/1526778563005768</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also wondering if we should just return early for attempts to flush the rewrite rules outside wp-admin instead of making it possible. Seems that didn't work/wasn't possible before 4.9.6.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
General flushing of the rewrite rules worked (and still does without a fatal), but hard flushes used to not work and now lead to the fatal described in this ticket under a perfect storm. &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.6/src/wp-includes/class-wp-rewrite.php#L1774"&gt;https://core.trac.wordpress.org/browser/tags/4.9.6/src/wp-includes/class-wp-rewrite.php#L1774&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
From a performance standpoint, flushing rewrite rules on the front end is a bad idea, but I think we should split that off to a separate ticket since who knows what plugins have been doing. Since we can reasonably fix this issue without doing that, let's not conflate the two issues (loading and new code being hooked in an unintended place vs front-end rewrite flushing).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43586 (Minor UI adjustments to the Author box in the Edit Comment screen) updated</title>
      
        <dc:creator>iticiti</dc:creator>

      <pubDate>Sat, 19 May 2018 21:51:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43586#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43586#comment:16/1526766716616325</guid>
      <description></description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44158 (Privacy: When path not created wp_mkdir_p() returns false, not WP_Error) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 19 May 2018 21:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44158#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44158#comment:1/1526765052425884</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44158/44158.diff" title="Attachment '44158.diff' in Ticket #44158"&gt;44158.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44158/44158.diff" title="Download"&gt;​&lt;/a&gt; adjust the case when &lt;code&gt;wp_mkdir_p()&lt;/code&gt; is unable to create the export folder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44158.diff attached to Ticket #44158</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 19 May 2018 21:22:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44158/44158.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44158/44158.diff/1526764930891595</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44158 (Privacy: When path not created wp_mkdir_p() returns false, not WP_Error) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 19 May 2018 21:20:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44158</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44158/1526764812274686</guid>
      <description>&lt;p&gt;
In &lt;code&gt;wp_privacy_generate_personal_data_export_file()&lt;/code&gt;, we have:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$result = wp_mkdir_p( $exports_dir );
if ( is_wp_error( $result ) ) {
	wp_send_json_error( $result-&amp;gt;get_error_message() );
}
&lt;/pre&gt;&lt;p&gt;
but the output of &lt;code&gt;wp_mkdir_p()&lt;/code&gt; is only boolean.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44157 (the comments/[id] endpoints should have the same permissions checks as ...) created</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Sat, 19 May 2018 21:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44157</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44157/1526764739267202</guid>
      <description>&lt;p&gt;
I noticed this because custom comment types don't show up on the &lt;code&gt;comments&lt;/code&gt; endpoint but it's possible to access them via their id in &lt;code&gt;comments/[comment_id]&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_item_permissions_check&lt;/code&gt; should do the same checks as &lt;code&gt;get_items_permissions_check&lt;/code&gt; in &lt;code&gt;WP_REST_Comments_Controller&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27196 (More informative message when plugin installs fail) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Sat, 19 May 2018 20:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27196#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27196#comment:36/1526763033224901</guid>
      <description>&lt;p&gt;
Greetings, past self! 4 more years of people baffled by WordPress's tech-speak in this message passed before I realised I could help them without a fix in core.... in case anybody else finds this useful, here's how to do it (change the slug and message for your case, of course)...
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'upgrader_source_selection'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my_upgrader_source_selection'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;my_upgrader_source_selection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$remote_source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$upgrader_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$hook_extra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hook_extra&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hook_extra&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;'plugin'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$hook_extra&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hook_extra&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;'install'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$hook_extra&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;'updraftplus'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nb"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;untrailingslashit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;class_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ReflectionObject'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$reflect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReflectionObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$upgrader_object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$properties&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$reflect&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;getProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'strings'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$properties&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;IS_PUBLIC&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$upgrader_object&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$upgrader_object&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'folder_exists'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$upgrader_object&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'folder_exists'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'A version of UpdraftPlus is already installed. WordPress will only allow you to install your new version after first de-installing the existing one. That is safe - all your settings and backups will be retained. So, go to the "Plugins" page, de-activate and de-install UpdraftPlus, and then try again.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'updraftplus'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$source&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44121 (Return of the Page Template Bug?) updated</title>
      
        <dc:creator>lkhlc</dc:creator>

      <pubDate>Sat, 19 May 2018 20:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44121#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44121#comment:8/1526763005185474</guid>
      <description>&lt;p&gt;
Still not working and Wordpress doesn't seem to care. Interesting. So I added a 100px square red block to the center of the page for woocommerce.php and of course it does not show up because the page template cache will not relinquish the file version... it even carried over in an all in one migration when i deleted the site.. reinstalled Wordpress manually and imported the old site.
&lt;/p&gt;
&lt;p&gt;
Just to make sure i placed a 40px centered blue block to each product presentation template so if it all worked you would see a 100px square red block with a blue block slightly down and to the right... on top
&lt;/p&gt;
&lt;p&gt;
blue is there...red will not show up because it is still reading the template it will not let go of.. that is a template in the main theme folder.. read as a page template.. whereas... templates made inside woocommerce update just fine....
&lt;/p&gt;
&lt;p&gt;
updated Wordpress to the latest version. No good.
&lt;/p&gt;
&lt;p&gt;
so I need to know
&lt;/p&gt;
&lt;p&gt;
WHERE is the cache? Where can I go to remove that stored template???
&lt;/p&gt;
&lt;p&gt;
Help will be greatly appreciated!
&lt;/p&gt;
&lt;p&gt;
And what was the fix from last year because peoples... it didn't work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Sat, 19 May 2018 20:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:58/1526762566565118</guid>
      <description>&lt;p&gt;
This adds in some tests for the patch which extends &lt;code&gt;register_meta&lt;/code&gt; to include subtypes. I've only done them for posts and terms as additional tests don't add anything for comments and users.
&lt;/p&gt;
&lt;p&gt;
For comments, although there are comment subtypes, there's nothing like &lt;code&gt;register_comment_type&lt;/code&gt; which can be used to add proper REST API support for custom comment types. There's discussion of that in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/35214" title="#35214: task (blessed): Custom Comment Types (accepted)"&gt;#35214&lt;/a&gt; but I think probably beyond the scope here.
&lt;/p&gt;
&lt;p&gt;
One thing I noticed doing them was that because &lt;code&gt;register_meta&lt;/code&gt; for comments and users doesn't change at all, the suggestion by @helen &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQC26G/p1526663921000189"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;on Slack&lt;/a&gt; seems to me to make sense, ie wrapper functions now for the objects which have subtypes and adding them in later for the others when they get subtypes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38323.8.register-meta.diff attached to Ticket #38323</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Sat, 19 May 2018 20:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38323/38323.8.register-meta.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38323/38323.8.register-meta.diff/1526760835679005</guid>
      <description>&lt;p&gt;
with tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44156 (REST API: Media uploads ignore CJK/emoji chars in filenames) created</title>
      
        <dc:creator>0mirka00</dc:creator>

      <pubDate>Sat, 19 May 2018 19:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44156/1526759541831333</guid>
      <description>&lt;p&gt;
When creating a new media item through the &lt;code&gt;media&lt;/code&gt; endpoint, CJK and emoji characters in the payload file's name are not correctly set as the title of the resulting media file.
&lt;/p&gt;
&lt;p&gt;
While explicitly supplying the CJK filename as a &lt;code&gt;title&lt;/code&gt; argument works as expected, this is not necessary with non-CJK filenames.
&lt;/p&gt;
&lt;p&gt;
The GUI uploader (media-new.php) handles CJK filenames correctly.
&lt;/p&gt;
&lt;h2 id="Stepstoreproduce:"&gt;Steps to reproduce:&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;POST a file with filename &lt;code&gt;日本語.mp3&lt;/code&gt; to &lt;code&gt;/wp/v2/media&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Result: &lt;code&gt;title: {raw: "", rendered: ""}&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Expected result:&lt;code&gt;title: {raw: "日本語", rendered: "日本語"}&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>WP bug scroll not working.docx attached to Ticket #44155</title>
      
        <dc:creator>coleraine</dc:creator>

      <pubDate>Sat, 19 May 2018 19:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44155/WP%20bug%20scroll%20not%20working.docx</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44155/WP%20bug%20scroll%20not%20working.docx/1526759168453940</guid>
      <description>&lt;p&gt;
screen shot of scroll menu not working in new updated WP
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44155 (bugs found in 4.9.6) created</title>
      
        <dc:creator>coleraine</dc:creator>

      <pubDate>Sat, 19 May 2018 19:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44155/1526759064919422</guid>
      <description>&lt;p&gt;
comments not working - in other words all the settings are the same as before this update but now readers cannot leave any comments on my blog posts. In addition the scrolling menu bar in backend for editing posts is not scrolling
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 19 May 2018 17:59:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:15/1526752767563383</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1526752766000024"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44154 (saving backslash backslash into user_meta does not round-trip) updated</title>
      
        <dc:creator>ericscheid</dc:creator>

      <pubDate>Sat, 19 May 2018 16:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44154#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44154#comment:2/1526747828892814</guid>
      <description>&lt;p&gt;
Thanks John.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is not very well documented. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41593" title="#41593: task (blessed): Document every function parameter that expects slashed data (new)"&gt;#41593&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
An unenviable tech debt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43829 ([proposal] Add unit test for Japanese language) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 19 May 2018 16:01:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43829#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43829#comment:4/1526745665444677</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44154 (saving backslash backslash into user_meta does not round-trip) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 19 May 2018 15:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44154#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44154#comment:1/1526744450206795</guid>
      <description>invalid: &lt;p&gt;
Thanks for the report, @ericscheid . The meta functions expect slashed data. Yes this is nasty, but that's the unfortunate position we're in. You can pass the value through &lt;code&gt;wp_slash()&lt;/code&gt; before passing it into this function.
&lt;/p&gt;
&lt;p&gt;
This is not very well documented. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41593" title="#41593: task (blessed): Document every function parameter that expects slashed data (new)"&gt;#41593&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 19 May 2018 15:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:14/1526742688332661</guid>
      <description>&lt;p&gt;
In 44142.2.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add &lt;code&gt;_doing_it_wrong()&lt;/code&gt; and return early when a wrong hook was used to call &lt;code&gt;wp_add_privacy_policy_content()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Add &lt;code&gt;_doing_it_wrong()&lt;/code&gt; when rewrite rules are flushed outside wp-admin context.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also wondering if we should just return early for attempts to flush the rewrite rules outside wp-admin instead of making it possible. Seems that didn't work/wasn't possible before 4.9.6.
&lt;/p&gt;
&lt;p&gt;
Note that in normal circumstances &lt;code&gt;wp_add_privacy_policy_content()&lt;/code&gt; cannot be used on the &lt;code&gt;init&lt;/code&gt; hook. It throws a fatal error right away as &lt;code&gt;wp-admin/includes/admin.php&lt;/code&gt; (Core Administration API) is not loaded yet :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44142.2.diff attached to Ticket #44142</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 19 May 2018 14:56:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44142/44142.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44142/44142.2.diff/1526741819312437</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44154 (saving backslash backslash into user_meta does not round-trip) created</title>
      
        <dc:creator>ericscheid</dc:creator>

      <pubDate>Sat, 19 May 2018 14:03:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44154</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44154/1526738614199301</guid>
      <description>&lt;p&gt;
This code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user_id = get_current_user_id();
$input = 'double ' .chr(92) . chr(92) . ' slashes';
update_user_meta($user_id, 'update_meta_bug', $input);
$output = get_user_meta($user_id, 'update_meta_bug', true);
if ( $output != $input ) {
  echo '&amp;lt;b&amp;gt;$output != $input&amp;lt;/b&amp;gt;';
}
&lt;/pre&gt;&lt;p&gt;
Produces this output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$output != $input
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 19 May 2018 13:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495#comment:5/1526735350135018</guid>
      <description>wontfix: &lt;p&gt;
Semver certainly has it's uses, and I'm absolutely in favour of it being used for new development (for example, the &lt;a class="ext-link" href="https://www.npmjs.com/org/wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;packages we release on NPM&lt;/a&gt; all use semver). It isn't a viable option for WordPress, however.
&lt;/p&gt;
&lt;p&gt;
WordPress is a huge code base, with 15 years of history (and the years before that as b2!). We do occasionally make small breaking changes, but we try not to. As @jdgrimes mentioned, moving to a versioning system where we explicitly make breaking changes would be a huge philosophical change to how WordPress is built.
&lt;/p&gt;
&lt;p&gt;
This is also in opposition of the ultimate goal of auto-updating all WordPress releases, not just the minor ones. Much like the version number of Chrome, or iOS, or Pokemon Go don't actually matter, neither should WordPress' version number matter: it mostly just needs to be an indicator of "this version was releases before/after that version". Trying to shoe-horn a versioning regime around that is an unnecessary restriction.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 19 May 2018 12:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:13/1526734780039534</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44142#comment:12" title="Comment 12"&gt;jcobrien&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I got a 404 error after update to 4.9.6. I also cannot view the privacy settings *privacy.php did not exist.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This sounds like a partial/failed upgrade. Please reinstall WP. If the problem persists, perhaps post to the &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forum&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 19 May 2018 12:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495#comment:4/1526733937114192</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by luciano. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1526733935000084"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41227 (Ability to pass post_modified and post_modified_gmt to wp_insert_post) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 19 May 2018 11:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41227#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41227#comment:3/1526728995260086</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43175 (Discussion - Pseudonymisation) updated</title>
      
        <dc:creator>summoner</dc:creator>

      <pubDate>Sat, 19 May 2018 03:18:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43175#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43175#comment:17/1526699908656472</guid>
      <description>&lt;p&gt;
Not so easy to find a proper solution:
&lt;/p&gt;
&lt;p&gt;
On one hand i would delete personal data only as a last resort and only in such cases when it is compulsory to do so /see Article 17 (1) a)-f) considering even exceptions noted in (3) b) and e) /
&lt;/p&gt;
&lt;p&gt;
In any other case i would suggest just pseudonymisation or encryption of the data mainly because the subject should be able to make themselves reidentifyable as it stands in Article 11. (2). So if the controller does not store the encryption key anymore but the subject provides additional info to identify themselves, they should be reenabled to exercise their rights to access or rectify their data, right to erasure, right to restriction of processing and right to data portability.
&lt;/p&gt;
&lt;p&gt;
On the other hand the data controller must also assure proper level of security of processing /Article 32 (1) a)/ and as storing hashkeys separated from the hashed data might be too complicated, maybe deleting personal data is more preferable in most cases. I mean if there are no obligations to keep billing data  for X years in case of online shops for example.
&lt;/p&gt;
&lt;p&gt;
However if data deletion will be preferred, then someone who has been banned by an admin before just can request the deletion of their data, and re-register themselves with the same email address as before the ban. Just because in that case not even a hashed version of the actual email address will be kept and so there is no means compare that in case of such a re-registration. Later will challange some admins for sure...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>jcobrien</dc:creator>

      <pubDate>Sat, 19 May 2018 02:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:12/1526697912729273</guid>
      <description>&lt;p&gt;
I have submitted I ticket. I should add that I got a 404 error after update to 4.9.6. I also cannot view the privacy setttings *privacy.php did not exist. and I get a 404 on viewing cron events.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44012 (Store the agreed-to-privacy-policy date/timestamp to help prove GDPR ...) updated</title>
      
        <dc:creator>summoner</dc:creator>

      <pubDate>Sat, 19 May 2018 02:37:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44012#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44012#comment:5/1526697426297471</guid>
      <description>&lt;p&gt;
IMHO storing at least if the user has ever given their consent is a must. Just read Article 7 where it stands:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;1.   Where processing is based on consent, the controller shall be able to demonstrate that the data subject has consented to processing of his or her personal data.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
I think beyond that storing even the timestamp of the consent is desirable, as it is possible to compare that to the timestamp of the publication of different Privacy Policies and thus it is possible to tell which version of the policy has been accepted by the subject. To go even further, maybe i would store an array of the timestamps of the consents, that way the controller can clearly demonstrate which different versions of the policy has been and exactly when has been accepted by the subject. These infos might be crucial before the authorities or court.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 19 May 2018 02:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:11/1526697336452938</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jcobrien Can you report that to WooCommerce support via &lt;a class="ext-link" href="https://woocommerce.com/my-account/tickets/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://woocommerce.com/my-account/tickets/&lt;/a&gt; or &lt;a class="ext-link" href="https://wordpress.org/support/plugin/woocommerce"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/plugin/woocommerce&lt;/a&gt; ? I haven't personally heard of that, but I would not expect it to be related to this specific ticket.
&lt;/p&gt;
&lt;p&gt;
If you could submit that (and let me know you've done so), as soon as possible, that would be extremely helpful. I know WooCommerce is aiming for an update related to GDPR pretty soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>jcobrien</dc:creator>

      <pubDate>Sat, 19 May 2018 00:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:10/1526691210140101</guid>
      <description>&lt;p&gt;
Might be related, but upgrading to 4.9.6 made editing variations / attributes in woo commerce go into an infinite loading loop. I verified this on two cloned installations. The only change between working and non-working was this update.
&lt;/p&gt;
&lt;p&gt;
I'd like to add that I replicated this issue using only two active plugins, woo commerce and tinymce...and on 2017 default theme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>