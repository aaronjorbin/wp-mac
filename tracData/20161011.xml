<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 23:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936#comment:5/1476230124960832</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38780" title="TinyMCE: update the `charmap` plugin to the latest dev. version. Fixes ..."&gt;38780&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: update the &lt;code&gt;charmap&lt;/code&gt; plugin to the latest dev. version. Fixes problems with inserting white space characters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37936" title="#37936: defect (bug): TinyMCE special character button does not insert non-breaking spaces (closed: fixed)"&gt;#37936&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38780]: TinyMCE: update the `charmap` plugin to the latest dev. version. Fixes ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 23:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38780</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38780/1476230124475158</guid>
      <description>&lt;p&gt;
TinyMCE: update the &lt;code&gt;charmap&lt;/code&gt; plugin to the latest dev. version. Fixes problems with inserting white space characters.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37936" title="#37936: defect (bug): TinyMCE special character button does not insert non-breaking spaces (closed: fixed)"&gt;#37936&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 23:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936#comment:4/1476229892831932</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was fixed upstream in &lt;a class="ext-link" href="https://github.com/tinymce/tinymce/commit/b3e518ea67339b544d7daf8b15f14694a78a8830"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tinymce/tinymce/commit/b3e518ea67339b544d7daf8b15f14694a78a8830&lt;/a&gt;. It wasn't in TinyMCE 4.4.3, but it is self-contained in the &lt;code&gt;charmap&lt;/code&gt; plugin. Lets add it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Tue, 11 Oct 2016 23:31:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:86/1476228667717274</guid>
      <description>&lt;p&gt;
Thanks for the feedback @arush!
&lt;/p&gt;
&lt;p&gt;
The "add new" functionality is on the same page with installed themes now, so I'm guessing you may have actually interacted with it. There is no longer search for installed themes - the search is for themes on .org. Unless you're testing on multisite. In multisite you can only install themes in the network admin, so there's only local search and the installed themes available in the customizer.
&lt;/p&gt;
&lt;p&gt;
I know we should be in pretty good shape in terms of keyboard accessibility - I've been testing that as we iterate - and we're generally using semantic elements. There are a few places where we use &lt;code&gt;wp.a11y.speak()&lt;/code&gt; and also some &lt;code&gt;aria-&lt;/code&gt; attributes in the patch, so if those aren't working as intended or don't result in a cohesive experience, let's work on making that better. I don't have as much experience with accessibility for screen readers.
&lt;/p&gt;
&lt;p&gt;
It sounds like adding some screen-reader-text context to the various buttons within the theme controls (such as Live Preview [Theme: $theme]) would make a big difference? I could see how tabbing through a bunch of buttons that say the same thing would be a problem. I double-checked and the patch has an &lt;code&gt;aria-label&lt;/code&gt; attribute on these buttons that includes the theme name; is this not being read out? There's also an &lt;code&gt;aria-describedby&lt;/code&gt; attribute on the theme screenshot, which opens the the details view (unfortunately this isn't a button, but matches the admin screen). It looks like those don't include the theme name for context currently.
&lt;/p&gt;
&lt;p&gt;
If there are challenges with the current patch I'd definitely like to at least try to improve the experience for 4.7; it sounds like there are a few minor adjustments that could make a big difference. Within the themes panel, we shouldn't be technically constrained by some of the limitations that currently exist elsewhere in the customizer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 22:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:113/1476225932115841</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.6.diff" title="Attachment '37974.6.diff' in Ticket #37974"&gt;37974.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.6.diff" title="Download"&gt;​&lt;/a&gt; makes the move and delete buttons always visible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.6.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 22:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.6.diff/1476225709395177</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 11 Oct 2016 22:17:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:22/1476224227368332</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22951 (Performance enhancements for esc_url()) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 11 Oct 2016 22:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22951#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22951#comment:15/1476224179139576</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2130 (wp_kses kills &lt; !-- more --&gt; from xmlrpc posted entries) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:51:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2130#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2130#comment:16/1476222700097931</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #wptv by kevinwhoffman. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/wptv/p1476222697001264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:112/1476222454493155</guid>
      <description>&lt;p&gt;
Thanks for sorting that fix, it's appreciated @bradyvercher.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can make this change, but I'm not really a fan of making destructive operations so easily accessible without a confirmation, especially considering how close to other controls it is. They would also be the most visible controls on the screen even though they're not the primary action.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This change is important as otherwise you are hiding functionality. I do not feel that making it manage sections solves this, unfortunately. I did a little unorganised testing with another user and found it to be an issue to find delete. I also felt this in my own design process. With menus you have also the ability to click in and remove. As we don't, we loose the instant interactions without the panel. I'm also not keen we add a click in just for this case.
&lt;/p&gt;
&lt;p&gt;
Can we please have as the mock for this instance? I am very against hiding functionality and this is something that does cause user friction.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
tested this a bit more and it looks the front page does need to be the first section for the query and template loading to work correctly. Trying to make it sortable might open a big can of worms.
We can remove the front page from the search results so that it can't be added as a section, but we would need to decide how to handle cases where the front page setting is changed to a page that's already been added as a section. Show an error message and filter it out on the front end?
&lt;/p&gt;
&lt;p&gt;
Themes could ultimately decide whether or not they want to show the front page section.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is this something anyone else can help with, sorry to drop you in but maybe @pento you have some ideas?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:46:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:104/1476222402285192</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:102" title="Comment 102"&gt;dnaber-de&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With this «argument» you can bury any development of WordPress core. In reverse that means nothing else than teaching people how to write legacy code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are just setting up a strawman here and justifying with a false binary.
&lt;/p&gt;
&lt;p&gt;
Plus, you missed the point We shouldn't make decisions based on a platitude; there is more than just one valid criteria for changes to core.
&lt;/p&gt;
&lt;p&gt;
Better yet, &lt;strong&gt;let us all follow Helen's recommendation&lt;/strong&gt; and let a core committer lead this project. Once we have one then we can each appeal our concerns to them as they will be in the position of weighing all relevant issues related to WordPress core vs.  in a vacuum pursuing an abstract ideal for how code should be written.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26601 (Inappropriate content in headings on admin screens) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:38:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26601#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26601#comment:95/1476221898158947</guid>
      <description>&lt;p&gt;
I quite like the solution put forward in @afercia's last patch; I'd like to see this start to go in. Being able to do it one instance at a time will make it much more manageable, so that we could hopefully get it started in 4.7 and completed in 4.8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38288 (Connection Timeout when importing heavy .xml (LiteSpeed)) created</title>
      
        <dc:creator>jscrm</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38288</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38288/1476221081522040</guid>
      <description>&lt;p&gt;
When importing big .xml files using the WordPress importer, the connection times out on LiteSpeed servers.
&lt;/p&gt;
&lt;p&gt;
This is due to server not sending new content to the browser, so connection automatically closes. This is different to a PHP timeout due to low max_execution_time.
&lt;/p&gt;
&lt;p&gt;
This might be prevented by showing some sort of progress bar so the connection is not closed due to inactivity.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:24:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:111/1476221051389520</guid>
      <description>&lt;p&gt;
@karmatosed Glad to hear you got it working!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can we remove the word 'Page'? This is not needed when everything is a page. This is in the search panel.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I've removed that in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.5.diff" title="Attachment '37974.5.diff' in Ticket #37974"&gt;37974.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.5.diff" title="Download"&gt;​&lt;/a&gt; when the control is set to only display one post type.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We do need to have the 'x' to remove showing without the panel open. It's just not intuitive otherwise how you remove. Ideally it would look like the mockup and be next to the arrows.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can make this change, but I'm not really a fan of making destructive operations so easily accessible without a confirmation, especially considering how close to other controls it is. They would also be the most visible controls on the screen even though they're not the primary action.
&lt;/p&gt;
&lt;p&gt;
What if we change the button label from "Add Sections" to "Manage Sections?" Would that help?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The original idea wasn't to have a fixed first page content, so we do need to not have that as discussion has already happened about that. It doesn't make sense for it to be removed, but having ability to move up and down absolutely does make sense.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tested this a bit more and it looks the front page does need to be the first section for the query and template loading to work correctly. Trying to make it sortable might open a big can of worms.
&lt;/p&gt;
&lt;p&gt;
We can remove the front page from the search results so that it can't be added as a section, but we would need to decide how to handle cases where the front page setting is changed to a page that's already been added as a section. Show an error message and filter it out on the front end?
&lt;/p&gt;
&lt;p&gt;
Themes could ultimately decide whether or not they want to show the front page section.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.5.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.5.diff/1476220955176792</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:18:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:8/1476220683612218</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38276#comment:6" title="Comment 6"&gt;PieWP&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38276#comment:5" title="Comment 5"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unless of course we add more read-type caps to capability API for other objects. But honestly I don't know that we want to encourage that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first thing people will ask (once &lt;code&gt;is_post_accessible()&lt;/code&gt; is introduced) will be: why can't I do this for terms/taxonomies?So let me ask the question in advance: Why would it make sense to hide a post but not to hide a term?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with this, though I haven't been entirely sure that this ticket should go whole-hog or whether that would be biting off more that anybody is willing to chew (I'm thinking more and more that we should though).
&lt;/p&gt;
&lt;p&gt;
My point in that particular quote though, was more that I question whether the &lt;em&gt;capability API&lt;/em&gt;, specifically, is really a good fit for &lt;em&gt;visibility restrictions&lt;/em&gt;. As opposed to this proposed API, which is somewhat separate. Because visibility restrictions are things that we want to check against non-logged-in users, and the capability API has no application to non-logged-in users. So although the two currently intersect with the post statuses and &lt;code&gt;read_post&lt;/code&gt;, I'm not sure that this is a pattern that we want to start using for other objects, or whether going forward it would be better to keep the capabilities solely about what somebody is allowed to &lt;em&gt;do&lt;/em&gt;, and the accessibility API proposed here deal with what one is allowed to &lt;em&gt;see&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
Although, that does make me wonder whether some "can user &lt;em&gt;do&lt;/em&gt;" checks couldn't possibly relate to non-logged-in users as well (in other words, some &lt;em&gt;actions&lt;/em&gt; can be public just as some objects can). But as I said in the OP, changing the capabilities API as a whole to apply to non-logged-in users would probably break too much stuff. I dunno though, maybe that angle should be explored more as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;Please note I'm not trying to bash by questioning everything, just really want this feature to be introduced. My daily work involves making business portals based on WP so features like this are quite handy.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No worries, I really appreciate your input. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37900 (Support custom dashicon for wp.mce.View.setLoader()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:14:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37900#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37900#comment:4/1476220485959916</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:7/1476219964885138</guid>
      <description>&lt;h2 id="HowWP_Queryhandlesvisibility"&gt;How &lt;code&gt;WP_Query&lt;/code&gt; handles visibility&lt;/h2&gt;
&lt;p&gt;
There are three primary elements that play a role:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Post passwords — These don't actually hide the post itself, but they do obscure its contents.
&lt;/li&gt;&lt;li&gt;Post statuses — These can be public, private, protected, or excluded from searches.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;perm&lt;/code&gt; query arg — This can be &lt;code&gt;'readable'&lt;/code&gt; or &lt;code&gt;'editable'&lt;/code&gt;, or empty (which it is by default, and which basically indicates "all posts").
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It is important to keep in mind that &lt;code&gt;WP_Query&lt;/code&gt; functions to both query posts, and also retrieve individual posts. For this reason, some of the logic that relates to post visibility is duplicated, to optimize based on which of these use-cases a query instance is for. Our main concern here is how to relate these checks to an individual post, but in &lt;code&gt;WP_Query&lt;/code&gt; the logic may not all be expressed in relation to just a single post. That's not a problem, it is just something to keep in mind so that we make sure we don't miss any relevant logic.
&lt;/p&gt;
&lt;h3 id="PostPasswords"&gt;Post Passwords&lt;/h3&gt;
&lt;p&gt;
The simplest and most straightforward logic revolves around posts with passwords. So we'll tackle that first. There are two references to post passwords. The first is in &lt;code&gt;WP_Query::parse_search()&lt;/code&gt;, which causes password-protected posts to be excluded when the query is a search query (i.e., &lt;code&gt;s&lt;/code&gt; query arg is being used to search for words in post content), and the user is not logged in. Again, the post &lt;em&gt;content&lt;/em&gt; is what is hidden by the password, so that is being excluded from searching. Posts with passwords aren't otherwise excluded from queries. The only other place that post passwords are referenced is in &lt;code&gt;WP_Query::get_posts()&lt;/code&gt;, where the &lt;code&gt;post_password&lt;/code&gt; and &lt;code&gt;has_password&lt;/code&gt; query args are handled. The latter is apparently unrestricted, while the former will cause the &lt;code&gt;perm&lt;/code&gt; arg to be set to &lt;code&gt;'readable'&lt;/code&gt;. More on that below.
&lt;/p&gt;
&lt;p&gt;
Basically, post passwords, though they do relate to the visibility of post contents, do not relate to the visibility of posts themselves. This means that we can ignore them in relation to an &lt;code&gt;is_thing_accessible()&lt;/code&gt; API. Or better yet, we can think about the potential for an &lt;code&gt;is_object_attribute_accessible()&lt;/code&gt; feature of the API. I think post passwords and other methods of restricting both post contents and other object attributes demonstrates that the potential usefulness of such an API exists.
&lt;/p&gt;
&lt;h3 id="PostStatuses"&gt;Post Statuses&lt;/h3&gt;
&lt;p&gt;
The log for post statuses is split for &lt;code&gt;$this-&amp;gt;is_single&lt;/code&gt; and non-&lt;code&gt;$this-&amp;gt;is_single&lt;/code&gt; queries, as mentioned above.
&lt;/p&gt;
&lt;p&gt;
First, we'll consider the logic that is applied when the query &lt;code&gt;is_single || is_page&lt;/code&gt;. What happens is that the object for the post's status is retrieved, and if &lt;code&gt;$post_status_obj-&amp;gt;public&lt;/code&gt; is true, no further action is taken. However, if the post status is not public, other logic kicks in. This other logic can be circumvented by the logic for the &lt;code&gt;post_status&lt;/code&gt; query arg, whose handling we'll consider below, with the logic that is applied when a query that is not for a single post. But assuming that the &lt;code&gt;post_status&lt;/code&gt; query arg hasn't been passed, it pretty much breaks down to this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;public&lt;/code&gt; status — Anyone can view. Note that if it isn't public and the user isn't logged in, they can't view the post. It's that simple.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;protected&lt;/code&gt; status — The user must be logged in, and they must have the &lt;code&gt;edit_post&lt;/code&gt; capability for that post.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;private&lt;/code&gt; status — The user must be logged in, and they must have the &lt;code&gt;read_post&lt;/code&gt; capability for that post.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Don't forget though that there was a caveat in there: this logic is only applied if the &lt;code&gt;post_status&lt;/code&gt; query arg hasn't been passed. That's because further up there is some complex logic relating to the &lt;code&gt;post_status&lt;/code&gt; query arg which is applied both when querying for a single post and when querying for multiple posts. In that case, the query has specifically asked for a particular post status, and so it will get it, regardless of user permissions, unless the &lt;code&gt;perm&lt;/code&gt; query arg is also set (which it isn't by default). We'll look more at the &lt;code&gt;perm&lt;/code&gt; query arg below. But basically, the &lt;code&gt;post_status&lt;/code&gt; arg is designed to allow a query to override the default permissions that would normally apply to posts. So it really isn't important for us to consider it too deeply in regard to post accessibility checks.
&lt;/p&gt;
&lt;p&gt;
There is one more piece of logic that involves posts statuses, which is only applied when the &lt;code&gt;post_status&lt;/code&gt; query arg isn't used and when &lt;code&gt;$this-&amp;gt;is_singular&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. This logic basically duplicates that which is applied when &lt;code&gt;is_single || is_page&lt;/code&gt;, discussed above. All public statuses are included by default, private statuses are only shown to users who can &lt;code&gt;read_private_posts&lt;/code&gt; or when the current user is the post author (essentially what it means to have the &lt;code&gt;read_post&lt;/code&gt; capability for a private post). The main difference is that protected statuses are only shown in the admin, and only if the post type specifically requests it. Again, all of this only applies to generic queries, not checking the ability of a user to access a particular post. So it isn't particularly important in the development of an &lt;code&gt;is_thing_accessible()&lt;/code&gt; API. One takeaway though is that here &lt;code&gt;WP_Query&lt;/code&gt; basically reproduces the logic it expects the capabilities API to apply to posts, just in query form. This reminds us again that a filter on &lt;code&gt;map_meta_cap&lt;/code&gt;, or changes to &lt;code&gt;map_meta_cap()&lt;/code&gt; itself, won't automatically be reflected in &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;h3 id="ThepermQueryArg"&gt;The &lt;code&gt;perm&lt;/code&gt; Query Arg&lt;/h3&gt;
&lt;p&gt;
As you might have gleaned from the above discussion, the &lt;code&gt;perm&lt;/code&gt; query arg is only applied when the &lt;code&gt;post_status&lt;/code&gt; query arg is set. The &lt;code&gt;post_status&lt;/code&gt; query arg's only job is to override default handling for post permissions, and the &lt;code&gt;perm&lt;/code&gt; arg dictates how aggressive it is in this. As noted above, this logic isn't particularly important to us, but I'm addressing it here for clarity. It can take three values:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;empty — This is the default, and it indicates that a the post statuses in &lt;code&gt;post_status&lt;/code&gt; should be included &lt;em&gt;without any permission checks at all&lt;/em&gt;. Only post statuses that have specifically requested to be excluded from searches may be left out.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;editable&lt;/code&gt; — This will cause only posts that the current user would have the capabilities to &lt;em&gt;edit&lt;/em&gt; to be included.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;readable&lt;/code&gt; — This will cause only posts that the current user would have the capabilities to &lt;em&gt;read&lt;/em&gt; to be included.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So once again &lt;code&gt;WP_Query&lt;/code&gt; basically replicates the logic that it expects the capabilities API to apply to posts, just in query form.
&lt;/p&gt;
&lt;p&gt;
Again, I've only addressed this for completeness, it isn't our main focus in this ticket.
&lt;/p&gt;
&lt;h3 id="Discussion"&gt;Discussion&lt;/h3&gt;
&lt;p&gt;
Three main takeaways:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We should probably consider an &lt;code&gt;is_thing_attribute_accessible()&lt;/code&gt; API, cf. password-protected posts.
&lt;/li&gt;&lt;li&gt;Post statuses are the only visibility restricting thing that &lt;code&gt;WP_Query&lt;/code&gt; takes into account for posts themselves (as opposed to password-protected post &lt;em&gt;content&lt;/em&gt;).
&lt;/li&gt;&lt;li&gt;Post statuses are either totally public, or they are restricted, which always falls back to the capabilities API.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The implications of the latter two points is that currently WordPress is designed to only restrict post visibility based on post statuses. While it is possible for plugins to imagine all sorts of other things that might dictate post visibility, the only method that WordPress provides is a binary choice of an always-public status or an always-restricted (though possibly to varying degrees) status. Plugins can hook into the Query API, and/or into the Capabilities API, in order to provide handling for other situations. However, both of these APIs only allow the plugin to implement restrictions, neither of them makes it possible for it to indicate when a post is public.
&lt;/p&gt;
&lt;p&gt;
The post status API &lt;em&gt;does&lt;/em&gt;, but is simply not a fit for every time that a plugin wants to restrict post visibility. That is why an "is thing public" API is needed: it will not just wrap the post status API, it will also allow plugins to more confidently tinker with post visibility through custom means. More confidently, because they will be able to hook into the &lt;code&gt;is_thing_accessible()&lt;/code&gt; API to provide that public vs restricted information for objects, so that it can actually be conveyed to other plugins in this way. Which again, as we've shown above, neither the caps nor query API do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13743.3.patch attached to Ticket #13743</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Tue, 11 Oct 2016 21:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13743/13743.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13743/13743.3.patch/1476219960164887</guid>
      <description>&lt;p&gt;
Code refactoring
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38287 (WP_Object_Cache has a deprecated constructor) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38287#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38287#comment:2/1476218087113933</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38287 (WP_Object_Cache has a deprecated constructor) closed</title>
      
        <dc:creator>charlestonsw</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38287#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38287#comment:1/1476218032752675</guid>
      <description>invalid: &lt;p&gt;
This is from another app that dropped object-cache.php in wp-content.  Not WP-Core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38287 (WP_Object_Cache has a deprecated constructor) created</title>
      
        <dc:creator>charlestonsw</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38287</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38287/1476217811014237</guid>
      <description>&lt;p&gt;
Deprecated: Methods with the same name as their class will not be constructors in a future version of PHP; WP_Object_Cache has a deprecated constructor in /var/www/staging_wpslp/wp-content/object-cache.php on line 112
&lt;/p&gt;
&lt;p&gt;
Environment:
nginx v 1.10
Ubuntu 16.04
PHP 7.0.8 FPM Zend OPcache
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:103/1476217020421108</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:96" title="Comment 96"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A side note to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;[38768]&lt;/a&gt; - I'm cool with removing globals, but the idea needs to be explored further before it's ready for Core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For once, I am forced to agree with @pento. Before this ticket and related discussion get too far into speculation and hand-wringing, I want to be clear that it is absolutely readiness and maintainership that are the real issues at hand. This isn't at a point where its relationship to WordPress's goals or future can be evaluated in any sort of meaningful way. Much like another similarly fated ticket (and to be clear, this should have been reverted at the same time), there is no indication that any proposals were distributed or discussed, concerns from a wide variety of parties addressed (including on this ticket!), or that there would be continuous maintainership of such an effort. I'm sure that the cited concerns in the revert could have been addressed specifically, but that is not an indicator of active ownership - if anything, it's a sign there isn't any.
&lt;/p&gt;
&lt;p&gt;
Contributions from many are highly encouraged, and by no means is every single commenter here expected to stick around and own this, but there needs to be at least one committer AND one other contributing developer (if not a wider working group) who show signs of really owning this kind of a project and process. Neither of those are true here. There are a few of you who have clearly spent significant time reviewing and following this, and there are many more who roll by every once in a while - both are perfectly legitimate and one is not better than the other, but it is not enough to call this a concerted effort.
&lt;/p&gt;
&lt;p&gt;
I don't know what exactly the best process is for this kind of enormous developer-facing effort. Perhaps it's GitHub and treating this as a distinct feature project (which it essentially is), but no matter what, &lt;strong&gt;it needs an active owner&lt;/strong&gt;. Open to thoughts around this as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) reopened</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:13:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:85/1476216828109636</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:84/1476216585740210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by arush. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476216583002097"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) closed</title>
      
        <dc:creator>arush</dc:creator>

      <pubDate>Tue, 11 Oct 2016 20:07:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:83/1476216464017309</guid>
      <description>&lt;p&gt;
Regarding accessibility feedback on this feature, let's start with the positive. First, kudos for asking for an accessibility review in the first place. I think this may be a first for the Customizer, so while you're reading this comment, try to keep in mind that compared to the rest of the WordPress back end, the Customizer has had almost no work done on it to fix its accessibility challenges.
&lt;/p&gt;
&lt;p&gt;
As far as making the theme preview/install feature accessible, there's very little that can actually be done on that front, because the Customizer itself has some very significant challenges. Keyboard works for the most part, and for searching and previewing installed themes, you can do this with a screen reader, but there's almost no feedback about exactly what you're pressing enter on. Tabbing through this interface, (as some screen reader users may prefer doing), presents an interface that's almost unintelligible, unless you're already familiar with the Customizer's quirks. If you want to install themes from the Customizer, that just doesn't show up. I've gone through the entire theme-change screen, and am not seeing an add-new or similar of any kind, just the ability to search and preview the themes that are already installed. This is with the latest version of trunk installed, latest stable version of NVDA, and latest stable version of Firefox. I haven't tested with Jaws for Windows or VoiceOver, but if it doesn't work in NVDA, odds are it's not going to be much better in the others. Jaws, at least, hacks the DOM whenever it can, but there's no reliable way to know what it does with scenarios like this, since VFO Group, (its developer), doesn't make that information publicly available. VoiceOver's in the same boat.
&lt;/p&gt;
&lt;p&gt;
As long as the "admin" way of installing themes is going to remain in place for now, I think it's safe to ship this, provided that rewriting the Customizer from the ground up gets put on the road map. That's the only way anything in the Customizer can start to become accessible and conformant with WCAG 2.0 Level AA.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22367 (Usernames with "@" char are assumed email addresses, causing incorrect ...) updated</title>
      
        <dc:creator>gravitylover</dc:creator>

      <pubDate>Tue, 11 Oct 2016 19:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22367#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22367#comment:24/1476215932405910</guid>
      <description>&lt;p&gt;
What needs to happen next on this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>emojis-bug.jpg attached to Ticket #38286</title>
      
        <dc:creator>ramonjosegn</dc:creator>

      <pubDate>Tue, 11 Oct 2016 19:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38286/emojis-bug.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38286/emojis-bug.jpg/1476213826093453</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38286 (Lost emojis) created</title>
      
        <dc:creator>ramonjosegn</dc:creator>

      <pubDate>Tue, 11 Oct 2016 19:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38286</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38286/1476213809546020</guid>
      <description>&lt;p&gt;
Hi dears
&lt;/p&gt;
&lt;p&gt;
I was working in my website with WordPress and suddenly I lost all my emoji, were replaced with the symbols = ????
&lt;/p&gt;
&lt;p&gt;
A friend who works with WordPress also told me the same thing happened recently for no reason apparent
&lt;/p&gt;
&lt;p&gt;
I think it can be a serious failure in Wordpress, appreciate it if you revise
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:45:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:47/1476211511633392</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25239#comment:46" title="Comment 46"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I question whether this should be a pluggable function, though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I think that the consensus is that pluggable functions were a mistake, and filter and action hooks should be used to provide overridability/customizability. So no new pluggable functions are being added, as far as I know.
&lt;/p&gt;
&lt;p&gt;
So the function should be moved to a different file as you've suggested, and we should consider the merits of adding a filter on the value that it returns.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38068 (Add filters to wp_new_user_notification and  ...) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:29:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38068#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38068#comment:7/1476210592658182</guid>
      <description>&lt;p&gt;
@johnbillion are you able to get this into 4.7?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:29:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:231</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:231/1476210551277863</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476210547005377"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38202 (Allow post object or post id for ping functions) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38202#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38202#comment:7/1476210494300639</guid>
      <description>&lt;p&gt;
I could use some help with the unit tests. It's something I'm still struggling to learn how to write.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:46/1476210073741704</guid>
      <description>&lt;p&gt;
Replacing &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; with output from a helper function in these instances seems like a good idea to me and could be useful outside of instances where we're building email addresses. I question whether this should be a pluggable function, though. This function feels more like &lt;code&gt;get_site_url()&lt;/code&gt; or &lt;code&gt;get_home_url()&lt;/code&gt; which live in &lt;code&gt;wp-includes/link-template.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I also wonder if it was an oversight that none of the multisite functions were stripping &lt;code&gt;www&lt;/code&gt; subdomain prefixes or if that was intentionally allowed? Either way, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25239/25239.4.patch" title="Attachment '25239.4.patch' in Ticket #25239"&gt;25239.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25239/25239.4.patch" title="Download"&gt;​&lt;/a&gt; has a redundant &lt;code&gt;preg_replace()&lt;/code&gt; call if that method is used inside the helper function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37915 (Customize: allow terms to be created in nav menus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 18:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37915#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37915#comment:12/1476209125698633</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476209121005309"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13743 (Ability to choose a network default theme) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:56:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13743#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13743#comment:16/1476208596399538</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by florian-tiar. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1476208594001269"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37836.2.patch attached to Ticket #37836</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:51:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37836/37836.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37836/37836.2.patch/1476208288258636</guid>
      <description>&lt;p&gt;
Better fix
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37836 (Cannot disable 'Add existing user') updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37836#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37836#comment:5/1476208233724790</guid>
      <description>&lt;p&gt;
Here's a second patch. Thanks to @fperdaan for the review.
&lt;/p&gt;
&lt;p&gt;
Since the conditional test of $do_both is already made line 13 with the is_multisite, and user cap test, it's not necessary to test again with $both var, we only need to test if it's multisite.
&lt;/p&gt;
&lt;p&gt;
By the way the code of this file is really hard to read, a refactoring would be a nice thing to do to avoid DRY code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37866 (Introduce `$network_id` parameter in `get_user_count()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37866#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37866#comment:2/1476207674771556</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
An alternative approach could be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;adjust logic in &lt;code&gt;wp_update_network_user_counts()&lt;/code&gt; to count only users in the current network instead of all users
&lt;/li&gt;&lt;li&gt;introduce &lt;code&gt;get_network_user_count( $network = null )&lt;/code&gt; (returns the value of the network option &lt;code&gt;user_count&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;introduce &lt;code&gt;get_global_user_count()&lt;/code&gt; (returns the sum of &lt;code&gt;get_network_user_count()&lt;/code&gt; for all networks)
&lt;/li&gt;&lt;li&gt;deprecate &lt;code&gt;get_user_count()&lt;/code&gt; and recommend &lt;code&gt;get_global_user_count()&lt;/code&gt; as replacement
&lt;/li&gt;&lt;li&gt;replace Core usages of &lt;code&gt;get_user_count()&lt;/code&gt; with either &lt;code&gt;get_network_user_count()&lt;/code&gt; or &lt;code&gt;get_global_user_count()&lt;/code&gt; (depending on context)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37865 (Allow using the `$network_id` parameter of `get_blog_count()` again) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37865#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37865#comment:2/1476207467833440</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
An alternative approach could be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;introduce &lt;code&gt;get_network_site_count( $network = null )&lt;/code&gt; (returns the value of the network option &lt;code&gt;blog_count&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;introduce &lt;code&gt;get_global_site_count()&lt;/code&gt; (returns the sum of &lt;code&gt;get_network_site_count()&lt;/code&gt; for all networks)
&lt;/li&gt;&lt;li&gt;deprecate &lt;code&gt;get_blog_count()&lt;/code&gt; and recommend &lt;code&gt;get_network_site_count()&lt;/code&gt; as replacement
&lt;/li&gt;&lt;li&gt;replace Core usages of &lt;code&gt;get_blog_count()&lt;/code&gt; with either &lt;code&gt;get_network_site_count()&lt;/code&gt; or &lt;code&gt;get_global_site_count()&lt;/code&gt; (depending on context)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Related to this ticket: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37866" title="#37866: enhancement: Introduce `$network_id` parameter in `get_user_count()` (closed: fixed)"&gt;#37866&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37836 (Cannot disable 'Add existing user') updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37836#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37836#comment:4/1476206307160653</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by florian-tiar. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1476206305001248"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38172 (Enable Video Headers in Custom Headers) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38172#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38172#comment:22/1476206102372925</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1476206099002358"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38284.diff attached to Ticket #38284</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:05:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38284/38284.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38284/38284.diff/1476205517887063</guid>
      <description>&lt;p&gt;
adds capabilities and updates unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:110/1476205499434532</guid>
      <description>&lt;p&gt;
@transl8or for this iteration we're only having pages set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:109/1476205411539225</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1476205409002333"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38285.diff attached to Ticket #38285</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38285/38285.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38285/38285.diff/1476205404315530</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38285 (Object lookups by ID (or primary key) are not managed properly, lots ...) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 11 Oct 2016 17:02:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38285</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38285/1476205362268373</guid>
      <description>&lt;p&gt;
tl;dr this affects every object that uses the &lt;code&gt;WP_Post::get_instance()&lt;/code&gt; paradigm of "managing instances" (spoiler: they are not)
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Post&lt;/code&gt; and friends are supposed to add more sanity to caching and sanitization. They are not models, they are read-only data objects that strongly-type database rows. As such, it should be easy to maintain only one reference to any given row = one object per row, regardless of method of query, you should always get the exact same object. This tends to work if you pass around objects, but not when passing around IDs.
&lt;/p&gt;
&lt;p&gt;
Passing around IDs is a common use-case:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ids = get_favorite_posts();
foreach ( $ids as $id ) {
    $post = get_post( $id );
    // wreak havoc
}
&lt;/pre&gt;&lt;p&gt;
In a theme:
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_the_title( get_the_ID() );
&lt;/pre&gt;&lt;p&gt;
In Doctrine (or Hibernate, or any other ORM), each type is an Entity that is managed by an Entity Manager. There is never more than one instance of a single item. In WordPress, we get &lt;code&gt;get_post()&lt;/code&gt; and a built-in non-persistent Array Cache. We also get &lt;code&gt;WP_Post::get_instance( $id )&lt;/code&gt;, which makes us believe that &lt;code&gt;WP_Post&lt;/code&gt; is managing instances. It is not. The Array Cache is maintaining all of these references.
&lt;/p&gt;
&lt;p&gt;
A few problems:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;calls to &lt;code&gt;::get_instance()&lt;/code&gt; will always touch the cache
&lt;/li&gt;&lt;li&gt;The Array Cache clones objects before storing them, and clones objects before returning them
&lt;/li&gt;&lt;li&gt;The Array Cache is storing &lt;code&gt;stdClass&lt;/code&gt; instances, not &lt;code&gt;WP_Post&lt;/code&gt; instance, so every item out of the cache also has to become a brand new instance of &lt;code&gt;WP_Post&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Storing the items as &lt;code&gt;WP_Post&lt;/code&gt; objects would seemingly remove the need to return new instances, but they would be new instances nonetheless, since the cache clones every object before saving / returning.
&lt;/p&gt;
&lt;p&gt;
What needs to be done:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Object rows are stored strongly-typed
&lt;/li&gt;&lt;li&gt;Cache does not clone objects
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
How to test that this is happening (using WP-CLI):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
class Prof {
	public function objects() {
		$store = new \SplObjectStorage();
		$mem1 = memory_get_usage();
		$p = get_post( 27 );
		foreach ( range( 1, 20 ) as $i ) {
			$p = get_post( $p );
			if ( ! $store-&amp;gt;contains( $p ) ) {
				$store-&amp;gt;attach( $p );
			}
		}
		$mem2 = memory_get_usage();
		\WP_CLI::line( round( ( $mem2 - $mem1 ) / 1024, 2 ) );
		\WP_CLI::line( $store-&amp;gt;count() );
	}
	public function ids() {
		$store = new \SplObjectStorage();
		$mem1 = memory_get_usage();
		foreach ( range( 1, 20 ) as $i ) {
			$p = get_post( 27 );
			if ( ! $store-&amp;gt;contains( $p ) ) {
				$store-&amp;gt;attach( $p );
			}
		}
		$mem2 = memory_get_usage();
		\WP_CLI::line( round( ( $mem2 - $mem1 ) / 1024, 2 ) );
		\WP_CLI::line( $store-&amp;gt;count() );
	}
}
if ( class_exists( '\WP_CLI' ) ) {
	\WP_CLI::add_command( 'prof', Prof::class );
}
&lt;/pre&gt;&lt;p&gt;
Both should print out 1. Without the patch, &lt;code&gt;ids&lt;/code&gt; will print out 20 + a bunch of leaked memory.
&lt;/p&gt;
&lt;p&gt;
Patch for &lt;code&gt;WP_Post&lt;/code&gt; + &lt;code&gt;WP_Object_Cache&lt;/code&gt; attached
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>transl8or</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:108/1476204845707036</guid>
      <description>&lt;p&gt;
Looks good! Thanks for the gif.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Can we remove the word 'Page'? This is not needed when everything is a page. This is in the search panel.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Not sure if that makes sense. What kind of 'Page' is the -Recent News- section from the initial Twenty Seventeen design mockups?
To consider having something standing there like:
Page, Post, CPT (custom post type), or CST (custom section type)
gives room for further improvements of this UX.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:102/1476204666950321</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:99" title="Comment 99"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If for example we deprecating &lt;code&gt;$wpdb&lt;/code&gt; and doing so were to harm backward compatibility or even harm understandability among a significant number of the many people who implement WordPress sites but do not understand most of the syntax and semantics of classes and methods then optimizing for maintainability here could be more harmful than not. &lt;em&gt;(I'm not taking a side on this one, I am pointing about that pursuing maintainability should not be viewed without question as the quest for the holy grail.)&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FYP. You just say, that people are not willing or able to learn or evolve their skills. With this «argument» you can bury any development of WordPress core. In reverse that means nothing else than teaching people how to write legacy code. This fixes WordPress status as an example of »how to do it wrong«. Congratulations. I'm personally done with core contribution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37616 (Replace `is_super_admin()` calls with real capability checks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:38:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37616#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37616#comment:12/1476203913378200</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1476203911001179"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:107/1476203352229709</guid>
      <description>&lt;p&gt;
Thanks to @davidakennedy for walking me through cleaning up my setup after he did his :), I now can see the UI you say @bradyvercher - yay!
&lt;/p&gt;
&lt;p&gt;
Here for those following along is what we currently have:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/4O1Mqjd9cw.gif"&gt;&lt;img src="https://cldup.com/4O1Mqjd9cw.gif" alt="https://cldup.com/4O1Mqjd9cw.gif" crossorigin="anonymous" title="https://cldup.com/4O1Mqjd9cw.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I still think the following needs to happen:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can we remove the word 'Page'? This is not needed when everything is a page. This is in the search panel.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/gfksZ2Lf-5.png"&gt;&lt;img width="50%" alt="https://cldup.com/gfksZ2Lf-5.png" title="https://cldup.com/gfksZ2Lf-5.png" crossorigin="anonymous" src="https://cldup.com/gfksZ2Lf-5.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We do need to have the 'x' to remove showing without the panel open. It's just not intuitive otherwise how you remove. Ideally it would look like the mockup and be next to the arrows.
&lt;/li&gt;&lt;li&gt;The original idea wasn't to have a fixed first page content, so we do need to not have that as discussion has already happened about that. It doesn't make sense for it to be removed, but having ability to move up and down absolutely does make sense.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32918 (_wp_menu_item_classes_by_context does not generate ...) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32918#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32918#comment:3/1476201932256748</guid>
      <description>&lt;p&gt;
Updated patch added under &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34839" title="#34839: defect (bug): Wrong attribution of current_page_parent for menus when on ... (new)"&gt;#34839&lt;/a&gt; where the unnecessary repetition of the code to handle menu item parent/ancestor has also been eliminated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34839.diff attached to Ticket #34839</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34839/34839.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34839/34839.diff/1476201818327320</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34839 (Wrong attribution of current_page_parent for menus when on ...) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34839#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34839#comment:6/1476201800010136</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With regard to the first issue, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16382" title="#16382: defect (bug): Menus adds &amp;#34;current_page_parent&amp;#34; class to the blog page when viewing a ... (closed: wontfix)"&gt;#16382&lt;/a&gt; which is marked "wontfix" as it seems &lt;code&gt;current_page_parent&lt;/code&gt; is added as a backwards-compatibility measure. New themes/plugins should best rely only on the newer classes (with hyphens).
&lt;/p&gt;
&lt;p&gt;
For the other problems, code to properly set the menu item parent/ancestor classes was missing for custom post type archives. In fact, this code shouldn't be dependent on object type, so in the forthcoming patch I have factored this out into a common block. This also makes function &lt;code&gt;_wp_menu_item_classes_by_context()&lt;/code&gt; slightly easier to read and understand (but still pretty opaque!).
&lt;/p&gt;
&lt;p&gt;
I took the opportunity of incorporating the fix for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/32918" title="#32918: defect (bug): _wp_menu_item_classes_by_context does not generate ... (new)"&gt;#32918&lt;/a&gt; at the same time (easier now the code is in just one place).
&lt;/p&gt;
&lt;p&gt;
It's likely a number of other bugs are lurking in this area of code.  We could really do with some unit tests: see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/32367" title="#32367: enhancement: Nav menu attribute unit tests (assigned)"&gt;#32367&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38284 (add capabilities for edit_{$object}_meta) created</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Tue, 11 Oct 2016 16:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38284</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38284/1476201754691640</guid>
      <description>&lt;p&gt;
&lt;code&gt;register_meta&lt;/code&gt; has an arg &lt;code&gt;auth_callback&lt;/code&gt; which adds a filter to &lt;code&gt;auth_{$object_type}_meta_{$meta_key}&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
There's an &lt;code&gt;auth_post_meta_{$meta_key}&lt;/code&gt; filter in the &lt;code&gt;edit_post_meta&lt;/code&gt;  capability case but cases for term, user and comment meta still need to be added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37774 (Shiny Updates: Themes updates with no package available still show ...) updated</title>
      
        <dc:creator>tristangemus</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:09:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37774#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37774#comment:4/1476198599243658</guid>
      <description>&lt;p&gt;
Thoughts on &lt;a href="https://core.trac.wordpress.org/attachment/ticket/37774/37774.2.diff"&gt;#37774.2&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38283 (Some `WP_Query` query vars undocumented) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38283#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38283#comment:1/1476198495159664</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38283 (Some `WP_Query` query vars undocumented) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38283</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38283/1476198438513062</guid>
      <description>&lt;p&gt;
While working on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38276" title="#38276: feature request: &amp;#34;Is thing public/accessible&amp;#34; API (new)"&gt;#38276&lt;/a&gt;, I noticed that the &lt;code&gt;has_password&lt;/code&gt; and &lt;code&gt;post_password&lt;/code&gt; query args (added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27395" title="Add has_password and post_password query variables to WP_Query.
 * ..."&gt;[27395]&lt;/a&gt;) aren't included in the inline docs for &lt;code&gt;WP_Query::parse_query()&lt;/code&gt; with the other args. I did a search for all of the args used in &lt;code&gt;WP_Query&lt;/code&gt;, and discovered that the following args are used but not documented:
&lt;/p&gt;
&lt;pre class="wiki"&gt;attachment
caller_get_posts
embed
error
feed
has_password
minute
post_password
posts_per_rss
preview
robots
search_orderby_title
search_terms
search_terms_count
showposts
static
subpost
subpost_id
taxonomy
tb
term
term_id
withcomments
withoutcomments
&lt;/pre&gt;&lt;p&gt;
Some of these may be deprecated, discouraged, or internal. If there has been a previous decision not to include them for some reason, then I apologize for bringing it up. But I couldn't find any tickets relating to the password related args not being documented, so I have a feeling that some of these may have just been overlooked.
&lt;/p&gt;
&lt;p&gt;
Perhaps some of these shouldn't be documented, although we could document deprecated args and that they are deprecated, rather than just leaving them out. But at least this ticket will provide us a central place where we can state why certain ones aren't going to be documented, if indeed that's the decision.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37774.2.diff attached to Ticket #37774</title>
      
        <dc:creator>tristangemus</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37774/37774.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37774/37774.2.diff/1476198277229151</guid>
      <description>&lt;p&gt;
Left $hasPackage undefined in some cases
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37774.diff attached to Ticket #37774</title>
      
        <dc:creator>tristangemus</dc:creator>

      <pubDate>Tue, 11 Oct 2016 15:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37774/37774.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37774/37774.diff/1476198200238034</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>PieWP</dc:creator>

      <pubDate>Tue, 11 Oct 2016 14:33:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:6/1476196397755948</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38276#comment:5" title="Comment 5"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unless of course we add more read-type caps to capability API for other objects. But honestly I don't know that we want to encourage that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first thing people will ask (once &lt;code&gt;is_post_accessible()&lt;/code&gt; is introduced) will be: why can't I do this for terms/taxonomies?So let me ask the question in advance: Why would it make sense to hide a post but not to hide a term?
&lt;/p&gt;
&lt;p&gt;
Quite similar to the term_meta which was recently introduced (and already saw a request for term_relationship_meta passing by). With WP becoming more and more Object Orientated I can only assume we will see a &lt;code&gt;WP_Taxonomy&lt;/code&gt; class soon; which will contain a similar &lt;code&gt;cap&lt;/code&gt; attribute compared to the &lt;code&gt;WP_Post_Type&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Please note I'm not trying to bash by questioning everything, just really want this feature to be introduced. My daily work involves making business portals based on WP so features like this are quite handy.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 13:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:5/1476194124775580</guid>
      <description>&lt;p&gt;
Taking a look at &lt;a class="ext-link" href="https://codex.wordpress.org/Roles_and_Capabilities"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the list of core capabilities&lt;/a&gt;, I have confirmed that &lt;code&gt;read&lt;/code&gt; is pretty unique. The only other caps that would really relate at all to read and not just create/update/delete actions would be &lt;code&gt;list_users&lt;/code&gt; and perhaps the &lt;code&gt;manage_*&lt;/code&gt; caps.
&lt;/p&gt;
&lt;p&gt;
That is just useful information to consider in determining the ultimate scope of this ticket. The most narrow scope would be to create an &lt;code&gt;is_post_public()&lt;/code&gt; function, that only works for posts and returns a boolean value. The broadest scope would be to create an &lt;code&gt;is_thing_accessible()&lt;/code&gt; function, that works for all types of objects and determines whether the object is accessible to a particular user, not just whether the object is public. In between the two extremes would be the &lt;code&gt;is_post_accessible()&lt;/code&gt; and &lt;code&gt;is_thing_public()&lt;/code&gt; functions.
&lt;/p&gt;
&lt;p&gt;
The fact that only the posts really have a &lt;code&gt;read&lt;/code&gt; capability might indicate that while a broader API is useful, in terms of core it isn't really needed. However, we could also look at that conversely: if we are going to do an &lt;code&gt;is_thing_public()&lt;/code&gt; API as opposed to just an &lt;code&gt;is_post_pubic()&lt;/code&gt; API, it makes sense to go full-blown &lt;code&gt;is_thing_accessible()&lt;/code&gt;. Because for non-post objects, there is no &lt;code&gt;current_user_can( 'read_other_object' )&lt;/code&gt; to fall back to for providing more granular accessibility checking for logged-in users, like there would be the &lt;code&gt;read_post&lt;/code&gt; cap for posts. In other words, we'd be able to do a basic check as to whether something is public, but we wouldn't be able to check whether a particular user could still view that non-public thing. Unless of course we add more read-type caps to capability API for other objects. But honestly I don't know that we want to encourage that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 13:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:106/1476193388158595</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 11 Oct 2016 13:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:4/1476192824050984</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38276#comment:3" title="Comment 3"&gt;PieWP&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In regards of combining the &lt;code&gt;WP_Query&lt;/code&gt; and the &lt;code&gt;is_thing_accessable()&lt;/code&gt;:
&lt;/p&gt;
&lt;p&gt;
Keeping the Query filter aligned with a custom callback as suggested is quite hard. You often have to modify the query in strange ways typing actual custom SQL; which in its turn might cause SQL errors for many reasons. In addition to that your callback gets modified by the entire codebase due to filters. So the callback you initially set up might easily dealign when installing other plugins who (unintentionally) dealign your &lt;code&gt;is_thing_accessable()&lt;/code&gt; check.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I had considered the possibility that this would require abstracting out SQL strings, though I'm not sure exactly what that would look like since I haven't investigated exactly what &lt;code&gt;WP_Query&lt;/code&gt; is doing here (though I'm about to do that now).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;these are the issues I encountered with our client for whom we build a similar extension&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;p.s. I actually also don't trust other people with extending the Query / writing SQL, think of the SQL injections ;P&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True, but filters already exist that pass in the raw query before it is sent to the database. Probably most devs who would break them horribly don't know that they exist though. So yeah, that may be ea valid concern.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;h2 id="Alternativeapproach"&gt;Alternative approach&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think that approach would be feasible for WordPress core, because of the issues with making the binary tree stable, especially when plugins want to add their own rules.
&lt;/p&gt;
&lt;p&gt;
It is also a bit beyond what I was envisioning for this ticket. I wasn't really planning to completely change what WordPress looks at in order to determine whether a post is public, just to abstract that logic out so that it is more accessible. I hope such a fundamental change wouldn't be necessary, though perhaps it is. But if so, I have a feeling that the core devs would see it as too much work for too little benefit. As I investigate this further, I'll get a better idea of whether something like that would be necessary or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38091 (Shortcut to collapse current control/section/panel is triggered when ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 11 Oct 2016 13:18:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38091#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38091#comment:10/1476191919395050</guid>
      <description>&lt;p&gt;
Tested the first two items on the patch successfully. I can't find any examples of TinyMCE toolbars to test the last item though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33519 (Additional choices for 'fields' parameter) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33519#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33519#comment:7/1476189533786341</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33519 (Additional choices for 'fields' parameter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33519#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33519#comment:6/1476187593085146</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sebastian.pisula. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476187589005274"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:105/1476187591097589</guid>
      <description>&lt;p&gt;
@pento thanks. I did just try the devtools trick (thanks for that as suggestion) and still get the CSS not fully loaded, but at least it probably is my environment over the patch. Thanks for confirming.
&lt;/p&gt;
&lt;p&gt;
Just for record I get the patch apply without issue, it's just seeing some of the visuals. Lets maybe cross this once we have our next round of patches, so not to stall the progress.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Tammies-MacBook-Pro:wordpress-develop karmatosed$ grunt patch:https://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff
Running "patch:https://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" (patch) task
patching file src/wp-admin/css/customize-controls.css
patching file src/wp-admin/js/customize-post-collection.js
patching file src/wp-includes/canonical.php
patching file src/wp-includes/class-wp-customize-manager.php
patching file src/wp-includes/class-wp-query.php
patching file src/wp-includes/customize/class-wp-customize-post-collection-control.php
patching file src/wp-includes/default-filters.php
patching file src/wp-includes/link-template.php
patching file src/wp-includes/post-template.php
patching file src/wp-includes/script-loader.php
patching file src/wp-includes/theme.php
Done, without errors.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33519 (Additional choices for 'fields' parameter) reopened</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33519#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33519#comment:5/1476187460673647</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>33519.patch attached to Ticket #33519</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33519/33519.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33519/33519.patch/1476187440028675</guid>
      <description>&lt;p&gt;
4.7-alpha-38779
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37508 (wpdb-&gt;result instance should be checked `mysqli_num_fields` in ...) updated</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37508#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37508#comment:3/1476187430828269</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37508.patch attached to Ticket #37508</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Tue, 11 Oct 2016 12:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37508/37508.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37508/37508.patch/1476187402056882</guid>
      <description>&lt;p&gt;
Checks that this-&amp;gt;result is valid before calling mysqli_num_fields() and mysql_num_fields()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 11 Oct 2016 10:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:104/1476183569357752</guid>
      <description>&lt;p&gt;
@karmatosed: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" title="Attachment '37974.4.diff' in Ticket #37974"&gt;37974.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.4.diff" title="Download"&gt;​&lt;/a&gt; works correctly for me. For reference, here's my dev site:
&lt;/p&gt;
&lt;pre class="wiki"&gt;vagrant@vvv:/srv/www/wordpress-develop$ svn info | grep '^URL'
URL: https://develop.svn.wordpress.org/trunk
vagrant@vvv:/srv/www/wordpress-develop$ svn st
X       tests/phpunit/data/plugins/wordpress-importer
Performing status on external item at 'tests/phpunit/data/plugins/wordpress-importer':
vagrant@vvv:/srv/www/wordpress-develop$ svn up
Updating '.':
Fetching external item into 'tests/phpunit/data/plugins/wordpress-importer':
External at revision 1512649.
At revision 38779.
vagrant@vvv:/srv/www/wordpress-develop$ grunt patch:https://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff
Running "patch:https://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" (patch) task
patching file src/wp-admin/css/customize-controls.css
patching file src/wp-admin/js/customize-post-collection.js
patching file src/wp-includes/canonical.php
patching file src/wp-includes/class-wp-customize-manager.php
patching file src/wp-includes/class-wp-query.php
patching file src/wp-includes/customize/class-wp-customize-post-collection-control.php
patching file src/wp-includes/default-filters.php
patching file src/wp-includes/link-template.php
patching file src/wp-includes/post-template.php
patching file src/wp-includes/script-loader.php
patching file src/wp-includes/theme.php
Done, without errors.
&lt;/pre&gt;&lt;p&gt;
I find that sometimes I need to keep dev tools open, to enforce the cache not being used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28620 (When $depth argument is used in wp_nav_menu last level menu items ...) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 10:03:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28620#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28620#comment:11/1476180231318954</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Alternative patch added, which avoids adding the incorrect class names at source. This might be considered preferable. It will use a little more time/space but this shouldn't be a problem as most menus will be (relatively) short and shallow. Also re-categorised ticket as a "bug".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 11 Oct 2016 10:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:103/1476180190522318</guid>
      <description>&lt;p&gt;
@bradyvercher thanks for that gif, it helps me to at least whilst the patches are being troublesome get a visual of what is going on. I'm unsure what is going on with patches myself as @davidakennedy gets the same as me in past testing - I checked with him myself as wondered. In the latest patch we seem to have now gained an empty select box by the search:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/HS40tayvP7.png"&gt;&lt;img width="50%" alt="https://cldup.com/HS40tayvP7.png" title="https://cldup.com/HS40tayvP7.png" crossorigin="anonymous" src="https://cldup.com/HS40tayvP7.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Hopefully, we can look into the patch. Maybe @pento and/or @davidakennedy you can confirm what you see and maybe we can get an iteration from that to get us back on track with the patch. Alternatively, maybe some indication of why it doesn't work on some people's installs, if that is the case. To narrow it down, I have tested in various browsers to, cleared cache and also made sure I'm on latest svn version.
&lt;/p&gt;
&lt;p&gt;
For now, lets focus though on what you're showing as I can't get the patch to show everything you've completed and that's making me go over things you've done. Again, thanks for sticking with this and getting it so far. There are a few things we do need to iterate on, some I've brought up before and really are ideal to making this friction free. It's great we're getting into the refinements here - thanks for taking us so far with this.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can we remove the word 'Page'? This is not needed when everything is a page. This is in the search panel.
&lt;/li&gt;&lt;li&gt;We do need to have the 'x' to remove showing without the panel open. It's just not intuitive otherwise how you remove. Ideally it would look like the mockup and be next to the arrows.
&lt;/li&gt;&lt;li&gt;The original idea wasn't to have a fixed first page content, so we do need to not have that as discussion has already happened about that. It doesn't make sense for it to be removed, but having ability to move up and down absolutely does make sense.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38282 (Trackbacks do not return proper XML on double entries and flood) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 11 Oct 2016 10:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38282#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38282#comment:2/1476180037528841</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>28620-alt.diff attached to Ticket #28620</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28620/28620-alt.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28620/28620-alt.diff/1476179621061976</guid>
      <description>&lt;p&gt;
Alternative (preferable?) patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38282 (Trackbacks do not return proper XML on double entries and flood) updated</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38282#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38282#comment:1/1476179448677548</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38282.diff attached to Ticket #38282</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38282/38282.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38282/38282.diff/1476179388555600</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38282 (Trackbacks do not return proper XML on double entries and flood) created</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:49:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38282</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38282/1476179358246931</guid>
      <description>&lt;p&gt;
If an comment is double or part of a comment flood, &lt;code&gt;wp_new_comment()&lt;/code&gt; tends to &lt;code&gt;wp_die()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
With &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36901" title="#36901: enhancement: Removing wp_die() from wp_allow_comment() (closed: fixed)"&gt;#36901&lt;/a&gt; we can now get a proper &lt;code&gt;WP_Error&lt;/code&gt; instead and utilize this in &lt;em&gt;wp_trackback.php&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14452.2.diff attached to Ticket #14452</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:44:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14452/14452.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14452/14452.2.diff/1476179063597891</guid>
      <description>&lt;p&gt;
But this time it should be ok :)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14452 (Duplicate check for comments: Inappropriate errorhandling for xmlrpc) updated</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14452#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14452#comment:10/1476178022862061</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With &lt;a href="https://core.trac.wordpress.org/ticket/36901"&gt;https://core.trac.wordpress.org/ticket/36901&lt;/a&gt; in core, &lt;code&gt;wp_new_comment()&lt;/code&gt; returns the comment ID, false or a &lt;code&gt;WP_Error&lt;/code&gt;. &amp;lt;strike&amp;gt;14452.diff takes this into account.&amp;lt;/strike&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Ah sorry, my patch works on &lt;code&gt;wp_trackback.php&lt;/code&gt;not the general XMLRPC. Sorry! But &lt;code&gt;wp_new_comment()&lt;/code&gt; has changed. It should be easily changeable now :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14452.diff attached to Ticket #14452</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Tue, 11 Oct 2016 09:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14452/14452.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14452/14452.diff/1476177724411679</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>andreasnrb</dc:creator>

      <pubDate>Tue, 11 Oct 2016 08:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:101/1476175790964726</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Bye, bye Miss American Pie
Drove my Chevy to the levee but the levee was dry
And them good ole boys were drinking whiskey and rye
Singin' this'll be the day that globals are reborn
This'll be the day that globals are reborn
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
:(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Tue, 11 Oct 2016 08:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:104/1476174326275199</guid>
      <description>&lt;p&gt;
Alternative patch: 22355.2.patch. Turned locations array into associative. Manipulation of array in filters by key.
&lt;/p&gt;
&lt;p&gt;
Usage
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'template_locations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'theme-compat'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;array_walk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$s&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$v&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="nv"&gt;$s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s1"&gt;'/partials'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'template_locations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'theme-compat'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$new_locat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'template-partials'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;get_template_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/partials'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'template-templates'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;get_template_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/templates'&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$new_locat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$locations&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'locate_template'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$template_names&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'header.php'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$template_names&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_child_theme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;get_stylesheet_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/header.php'&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;get_template_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/partials/header.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$location&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>22355.2.patch attached to Ticket #13239</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Tue, 11 Oct 2016 08:18:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/22355.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/22355.2.patch/1476173914077780</guid>
      <description>&lt;p&gt;
Assoc array for locations
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>22355.1.patch attached to Ticket #13239</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Tue, 11 Oct 2016 08:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/22355.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/22355.1.patch/1476173879991288</guid>
      <description>&lt;p&gt;
Wrong file extn
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 11 Oct 2016 07:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:21/1476170328086792</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37331" title="#37331: defect (bug): New site form has non-required fields that have to be filled in (closed: fixed)"&gt;#37331&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 11 Oct 2016 07:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:12/1476170273775250</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/23870" title="#23870: enhancement: Filter Glyph for Comment Required Fields (assigned)"&gt;#23870&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16206 (Comment text not marked as required) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 11 Oct 2016 07:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16206#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16206#comment:40/1476170194129536</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>PieWP</dc:creator>

      <pubDate>Tue, 11 Oct 2016 06:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:3/1476166671663365</guid>
      <description>&lt;p&gt;
In regards of combining the &lt;code&gt;WP_Query&lt;/code&gt; and the &lt;code&gt;is_thing_accessable()&lt;/code&gt;:
&lt;/p&gt;
&lt;p&gt;
Keeping the Query filter aligned with a custom callback as suggested is quite hard. You often have to modify the query in strange ways typing actual custom SQL; which in its turn might cause SQL errors for many reasons. In addition to that your callback gets modified by the entire codebase due to filters. So the callback you initially set up might easily dealign when installing other plugins who (unintentionally) dealign your &lt;code&gt;is_thing_accessable()&lt;/code&gt; check.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;these are the issues I encountered with our client for whom we build a similar extension&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;p.s. I actually also don't trust other people with extending the Query / writing SQL, think of the SQL injections ;P&lt;/em&gt;
&lt;/p&gt;
&lt;h2 id="Alternativeapproach"&gt;Alternative approach&lt;/h2&gt;
&lt;p&gt;
An alternative approach would be to use a binary system similar to for instance your file system capabilities. Thing is that your check is way more complex so it would be more similar to the error_setting value in your php.ini. In this solution you would map every capability to a prime number, your current rights would be a sum of this prime number which you could compare against a new column within the database.
&lt;/p&gt;
&lt;p&gt;
Using these a binary tree you get a common divider shared within the meta_caps which you can use in your &lt;code&gt;is_thing_accessable&lt;/code&gt; and in your &lt;code&gt;WP_Query&lt;/code&gt;. This mapping from capability to a binary would obviously occure under 'under water' to keep it as user friendly as possible.
&lt;/p&gt;
&lt;p&gt;
The massive issue of this approach is: how do you build the binary tree? Your capability should &lt;strong&gt;always&lt;/strong&gt; have the same binary value assigned to it; otherwise you would get a mismatch in your rights. That would hint towards storing a mapper in an option, which is fine until you try to transfer or import the posts from another system. How would you merge or handle capabilites whom are not known in the imported system? Or how would you handle the &lt;code&gt;'read'&lt;/code&gt; capability which has a value of &lt;code&gt;'1'&lt;/code&gt; in your system but a value of &lt;code&gt;'3'&lt;/code&gt; in the imported system?  (although this ticket would effect importing in some way regardless of the chosen solution)
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; Pro &lt;/td&gt;&lt;td&gt; Con
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; + Using binary comparisons your database queries will remain fast &lt;/td&gt;&lt;td&gt; - How to build up the binary tree in a stable way?
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; + compare issues between code and database solved &lt;/td&gt;&lt;td&gt; - not very human readable values
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; + Very easy in usage for new WP developers &lt;/td&gt;&lt;td&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 05:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:102/1476162818496921</guid>
      <description>&lt;p&gt;
@karmatosed The latest gifs haven't been reflecting the styles correctly for some reason. Can someone let me know if I'm creating or uploading the patches incorrectly? Is anyone else having problems applying them?
&lt;/p&gt;
&lt;p&gt;
Here's how &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" title="Attachment '37974.4.diff' in Ticket #37974"&gt;37974.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.4.diff" title="Download"&gt;​&lt;/a&gt; should look:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/kxPsIFza7E.gif"&gt;&lt;img src="https://cldup.com/kxPsIFza7E.gif" alt="https://cldup.com/kxPsIFza7E.gif" crossorigin="anonymous" title="https://cldup.com/kxPsIFza7E.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are we fixed to the page having to be top element? Or can that iterate?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't have a strong opinion on that. It can be changed, but I imagine it'll require some discussion.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Delete seemed to be missing, now if I'm correct this should show on opening the search panel. Is there any way to get the 'x' like mock? Or at least to find some middle option?
&lt;/li&gt;&lt;li&gt;Can the 'add sections' button be disabled when the panel is out?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Those should both be good to as reflected in the gif above.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff" title="Attachment '37974.4.diff' in Ticket #37974"&gt;37974.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.4.diff" title="Download"&gt;​&lt;/a&gt; takes care of a few things:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Integrates CSS with customize-controls.css to remove duplicate rules and create consistency between the various Customizer features
&lt;/li&gt;&lt;li&gt;Removed customize-post-collection.css and moved remaining styles into customize-controls.css
&lt;/li&gt;&lt;li&gt;Improved the appearance for long page titles
&lt;/li&gt;&lt;li&gt;Improved mobile support so the fly-out drawer can be accessed on smaller screens
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.4.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 05:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.4.diff/1476162615530014</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 04:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:11/1476158734942609</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38779" title="Taxonomy: Specify taxonomy when populating cached object terms.
 ..."&gt;38779&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Specify taxonomy when populating cached object terms.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;[38776]&lt;/a&gt; introduced a call to &lt;code&gt;get_term()&lt;/code&gt; using only the term ID. This&lt;br /&gt;
causes problems in cases where shared terms have not been split. Since&lt;br /&gt;
we have the taxonomy available, there's no harm in passing it along to&lt;br /&gt;
&lt;code&gt;get_term()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38779]: Taxonomy: Specify taxonomy when populating cached object terms.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 04:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38779</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38779/1476158734445792</guid>
      <description>&lt;p&gt;
Taxonomy: Specify taxonomy when populating cached object terms.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;[38776]&lt;/a&gt; introduced a call to &lt;code&gt;get_term()&lt;/code&gt; using only the term ID. This
causes problems in cases where shared terms have not been split. Since
we have the taxonomy available, there's no harm in passing it along to
&lt;code&gt;get_term()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dd32.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 04:00:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:38/1476158457500832</guid>
      <description>&lt;p&gt;
Dev note: &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/11/comment-allowed-checks-in-wordpress-4-7/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/10/11/comment-allowed-checks-in-wordpress-4-7/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31652 (Drag/Drop Ordering of Media Does Not Work in Chrome on touch enabled ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31652#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31652#comment:21/1476158322642502</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31652#comment:20" title="Comment 20"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Re-testing it again and thinking I'd rather not have these thumbnails draggable/sortable at all on a phone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for reviewing. Good point, for small screens drag and drop could make using the gallery harder, although its still probably useful on larger screen phones.
&lt;/p&gt;
&lt;p&gt;
The real issue is with touch screen devices with much larger screens that take input by mouse or touch (or stylus), such as many recent windows laptops or the iPad pro (these are becoming more common apparently). Our current code does not enable sortable for gallery items for &lt;em&gt;any touch enabled devices&lt;/em&gt;, making the gallery &lt;em&gt;unsortable by mouse or touch&lt;/em&gt; on these devices. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31652/31652.diff" title="Attachment '31652.diff' in Ticket #31652"&gt;31652.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31652/31652.diff" title="Download"&gt;​&lt;/a&gt; addresses this issue alone (can you please test that one as well?). Maybe we can also skip sortable here for small viewports using JS to detect the viewport size?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was hoping we can stop using jquery-touch-punch as it is a 5 years old quick hack for jQuery UI Mouse to somewhat make it work on touch devices.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Isn't Touch Punch required to add touch event support for jQuery UI for now? If anything touch devices of all sizes are becoming way more common.
&lt;/p&gt;
&lt;p&gt;
As for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31652/31652.2.diff" title="Attachment '31652.2.diff' in Ticket #31652"&gt;31652.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31652/31652.2.diff" title="Download"&gt;​&lt;/a&gt;  and the removal of the wp_is_mobile check: the problem with relying on &lt;code&gt;wp_is_mobile&lt;/code&gt; here is that it is USER_AGENT specific and includes ipads and possibly other devices with large screens and alternate input methods where drag and drop does work well. Touch Punch already includes feature detection and will bail early on non-touch devices. This deserves some testing across a variety of devices... I have a hunch this will be helpful for users who currently cannot sort galleries on their devices.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A proper fix would probably be to show arrow buttons in the middle of the thumbnails.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a great idea and could work similar to the move links on menus, this would make it much easier to manage galleries for smaller screens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:37/1476157349182318</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38778" title="Comments: Abstract `die()` calls from comment submission routine.
 ..."&gt;38778&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Abstract &lt;code&gt;die()&lt;/code&gt; calls from comment submission routine.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since 4.4, comment submission has been mostly abstracted into a function,&lt;br /&gt;
rather than being processed inline in wp-comments-post.php. This change&lt;br /&gt;
made it easier to write automated tests against the bulk of the comment&lt;br /&gt;
submission process. &lt;code&gt;wp_allow_comment()&lt;/code&gt; remained untestable, however:&lt;br /&gt;
when a comment failed one of its checks (flooding, duplicates, etc),&lt;br /&gt;
&lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;wp_die()&lt;/code&gt; would be called directly. This shortcoming posed&lt;br /&gt;
problems for any application attempting to use WP's comment verification&lt;br /&gt;
functions in an abstract way - from PHPUnit to the REST API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The current changeset introduces a new parameter, &lt;code&gt;$avoid_die&lt;/code&gt;, to the&lt;br /&gt;
&lt;code&gt;wp_new_comment()&lt;/code&gt; stack. When set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;wp_new_comment()&lt;/code&gt; and&lt;br /&gt;
&lt;code&gt;wp_allow_comment()&lt;/code&gt; will return &lt;code&gt;WP_Error&lt;/code&gt; objects when a comment check&lt;br /&gt;
fails. When set to &lt;code&gt;false&lt;/code&gt; - the default, for backward compatibility -&lt;br /&gt;
a failed check will result in a &lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;wp_die()&lt;/code&gt;, as appropriate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prior to this changeset, default comment flood checks took place in the&lt;br /&gt;
function &lt;code&gt;check_comment_flood_db()&lt;/code&gt;, which was hooked to the&lt;br /&gt;
'check_comment_flood' action. This design allowed the default comment&lt;br /&gt;
flood routine to be bypassed or replaced using &lt;code&gt;remove_action()&lt;/code&gt;.&lt;br /&gt;
In order to maintain backward compatibility with this usage, while&lt;br /&gt;
simultaneously converting the comment flood logic into something that&lt;br /&gt;
returns a value rather than calling &lt;code&gt;die()&lt;/code&gt; directly,&lt;br /&gt;
&lt;code&gt;check_comment_flood_db()&lt;/code&gt; has been changed into a wrapper function for&lt;br /&gt;
a call to &lt;code&gt;add_filter()&lt;/code&gt;; this, in turn, adds the *actual* comment flood&lt;br /&gt;
check to a new filter, 'wp_is_comment_flood'. Note that direct calls&lt;br /&gt;
to &lt;code&gt;check_comment_flood_db()&lt;/code&gt; will no longer do anything in isolation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props websupporter, rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36901" title="#36901: enhancement: Removing wp_die() from wp_allow_comment() (closed: fixed)"&gt;#36901&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38778]: Comments: Abstract `die()` calls from comment submission routine.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38778</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38778/1476157348693144</guid>
      <description>&lt;p&gt;
Comments: Abstract &lt;code&gt;die()&lt;/code&gt; calls from comment submission routine.
&lt;/p&gt;
&lt;p&gt;
Since 4.4, comment submission has been mostly abstracted into a function,
rather than being processed inline in wp-comments-post.php. This change
made it easier to write automated tests against the bulk of the comment
submission process. &lt;code&gt;wp_allow_comment()&lt;/code&gt; remained untestable, however:
when a comment failed one of its checks (flooding, duplicates, etc),
&lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;wp_die()&lt;/code&gt; would be called directly. This shortcoming posed
problems for any application attempting to use WP's comment verification
functions in an abstract way - from PHPUnit to the REST API.
&lt;/p&gt;
&lt;p&gt;
The current changeset introduces a new parameter, &lt;code&gt;$avoid_die&lt;/code&gt;, to the
&lt;code&gt;wp_new_comment()&lt;/code&gt; stack. When set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;wp_new_comment()&lt;/code&gt; and
&lt;code&gt;wp_allow_comment()&lt;/code&gt; will return &lt;code&gt;WP_Error&lt;/code&gt; objects when a comment check
fails. When set to &lt;code&gt;false&lt;/code&gt; - the default, for backward compatibility -
a failed check will result in a &lt;code&gt;die()&lt;/code&gt; or &lt;code&gt;wp_die()&lt;/code&gt;, as appropriate.
&lt;/p&gt;
&lt;p&gt;
Prior to this changeset, default comment flood checks took place in the
function &lt;code&gt;check_comment_flood_db()&lt;/code&gt;, which was hooked to the
'check_comment_flood' action. This design allowed the default comment
flood routine to be bypassed or replaced using &lt;code&gt;remove_action()&lt;/code&gt;.
In order to maintain backward compatibility with this usage, while
simultaneously converting the comment flood logic into something that
returns a value rather than calling &lt;code&gt;die()&lt;/code&gt; directly,
&lt;code&gt;check_comment_flood_db()&lt;/code&gt; has been changed into a wrapper function for
a call to &lt;code&gt;add_filter()&lt;/code&gt;; this, in turn, adds the *actual* comment flood
check to a new filter, 'wp_is_comment_flood'. Note that direct calls
to &lt;code&gt;check_comment_flood_db()&lt;/code&gt; will no longer do anything in isolation.
&lt;/p&gt;
&lt;p&gt;
Props websupporter, rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36901" title="#36901: enhancement: Removing wp_die() from wp_allow_comment() (closed: fixed)"&gt;#36901&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:27:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:10/1476156428331195</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;[38776]&lt;/a&gt; should be backported to 4.6.x, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38777" title="Taxonomy: Avoid a fatal error in `the_tags()` in the event that ..."&gt;[38777]&lt;/a&gt; is fine for 4.7/trunk only.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:9/1476156372192401</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38777" title="Taxonomy: Avoid a fatal error in `the_tags()` in the event that ..."&gt;38777&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Avoid a fatal error in &lt;code&gt;the_tags()&lt;/code&gt; in the event that &lt;code&gt;get_the_term_list()&lt;/code&gt; returns a WP_Error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props michalzuber.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38777]: Taxonomy: Avoid a fatal error in `the_tags()` in the event that ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38777</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38777/1476156371716542</guid>
      <description>&lt;p&gt;
Taxonomy: Avoid a fatal error in &lt;code&gt;the_tags()&lt;/code&gt; in the event that &lt;code&gt;get_the_term_list()&lt;/code&gt; returns a WP_Error.
&lt;/p&gt;
&lt;p&gt;
Props michalzuber.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 03:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:36/1476155906263455</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've done a search of the wordpress.org plugin repo, and I didn't find a single instance of &lt;code&gt;check_comment_flood_db()&lt;/code&gt; being called directly. It's always in the context of &lt;code&gt;remove_filter()&lt;/code&gt; etc, which will continue to work without the added tricks in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36901/36901.9.diff" title="Attachment '36901.9.diff' in Ticket #36901"&gt;36901.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36901/36901.9.diff" title="Download"&gt;​&lt;/a&gt;. So I'm going to go with the simpler approach of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36901/36901.8.diff" title="Attachment '36901.8.diff' in Ticket #36901"&gt;36901.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36901/36901.8.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'll write a make/core post that explains the issue.
&lt;/p&gt;
&lt;p&gt;
Also, after discussion with @rachelbaker in Slack (linked above), I'll be removing the HTML status code being passed as data to the &lt;code&gt;WP_Error&lt;/code&gt; objects. The parallel with &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; is not entirely accurate; error objects in that function need status codes for certain backward compatibility reasons. The error string ('comment_duplicate', etc) contains enough information to differentiate the nature of the error, and the consumer of the error can decide which HTML status code it wants to use when handling the error (if HTML status codes are even relevant for the consumer).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34657 (WordPress doesn't set object terms for menu items so pending items not ...) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 02:47:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34657#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34657#comment:5/1476154047283616</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch!
&lt;/p&gt;
&lt;p&gt;
Just one thing - I'm not sure we should be dying if &lt;code&gt;$_POST['menu']&lt;/code&gt; is not set. That block is meant to check whether the user has the capability to do this and it shouldn't ( in my opinion ) care if that item is set.
&lt;/p&gt;
&lt;p&gt;
If we're just wanting to be sure that there is a value passed to the &lt;code&gt;wp_save_nav_menu_items&lt;/code&gt; it might be a good idea to use a ternary instead.
&lt;/p&gt;
&lt;p&gt;
i.e  &lt;code&gt;$menu_id = ( isset( $_POST['menu'] ) ) ? absint( $_POST['menu'] ) : 0;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Tue, 11 Oct 2016 02:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:54/1476153693156021</guid>
      <description>&lt;p&gt;
I think the  &lt;code&gt;@since&lt;/code&gt; tag is missing from &lt;code&gt;wp.i18n.loadLocaleData&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 11 Oct 2016 02:39:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:35/1476153592383921</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-comments by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-comments/p1476153590000005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:8/1476151055454008</guid>
      <description>&lt;p&gt;
Reopening for 4.6.2.
&lt;/p&gt;
&lt;p&gt;
Important note: the &lt;code&gt;@since&lt;/code&gt; annotation added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;[38776]&lt;/a&gt; reads &lt;code&gt;4.6.2&lt;/code&gt;. If there ends up being no 4.6.2 release, that value should be changed to 4.7.0 in trunk.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:7/1476150959073980</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38776" title="Taxonomy: Better error handling when fetching object terms from cache. ..."&gt;38776&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Better error handling when fetching object terms from cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt;, &lt;code&gt;get_object_term_cache()&lt;/code&gt; has expected term IDs to be&lt;br /&gt;
stored in the taxonomy relationship cache. The function would then&lt;br /&gt;
reach directly into the 'terms' cache to fetch the data corresponding&lt;br /&gt;
to a given term, before returning a &lt;code&gt;WP_Term&lt;/code&gt; object. This caused&lt;br /&gt;
problems when, for one reason or another, term data was cached&lt;br /&gt;
inconsistently:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the 'terms' cache is empty for a given term ID, despite the earlier call to &lt;code&gt;_prime_term_caches()&lt;/code&gt;, &lt;code&gt;get_term()&lt;/code&gt; would return an error object.
&lt;/li&gt;&lt;li&gt;If the array of cached term IDs contains an invalid ID, &lt;code&gt;get_term()&lt;/code&gt; would return an error object.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We avoid these errors by no longer touching the 'terms' cache directly,&lt;br /&gt;
but running term IDs through &lt;code&gt;get_term()&lt;/code&gt; and allowing that function to&lt;br /&gt;
reference the cache (and database, as needed). If &lt;code&gt;get_term()&lt;/code&gt; returns&lt;br /&gt;
an error object for any of the cached term IDs, &lt;code&gt;get_object_term_cache()&lt;/code&gt;&lt;br /&gt;
will return that error object alone. This change ensures that upstream&lt;br /&gt;
functions, like &lt;code&gt;get_the_terms()&lt;/code&gt;, return &lt;code&gt;WP_Error&lt;/code&gt; objects in a&lt;br /&gt;
predictable fashion.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32, michalzuber.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38776]: Taxonomy: Better error handling when fetching object terms from cache. ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38776</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38776/1476150958460784</guid>
      <description>&lt;p&gt;
Taxonomy: Better error handling when fetching object terms from cache.
&lt;/p&gt;
&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt;, &lt;code&gt;get_object_term_cache()&lt;/code&gt; has expected term IDs to be
stored in the taxonomy relationship cache. The function would then
reach directly into the 'terms' cache to fetch the data corresponding
to a given term, before returning a &lt;code&gt;WP_Term&lt;/code&gt; object. This caused
problems when, for one reason or another, term data was cached
inconsistently:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the 'terms' cache is empty for a given term ID, despite the earlier call to &lt;code&gt;_prime_term_caches()&lt;/code&gt;, &lt;code&gt;get_term()&lt;/code&gt; would return an error object.
&lt;/li&gt;&lt;li&gt;If the array of cached term IDs contains an invalid ID, &lt;code&gt;get_term()&lt;/code&gt; would return an error object.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We avoid these errors by no longer touching the 'terms' cache directly,
but running term IDs through &lt;code&gt;get_term()&lt;/code&gt; and allowing that function to
reference the cache (and database, as needed). If &lt;code&gt;get_term()&lt;/code&gt; returns
an error object for any of the cached term IDs, &lt;code&gt;get_object_term_cache()&lt;/code&gt;
will return that error object alone. This change ensures that upstream
functions, like &lt;code&gt;get_the_terms()&lt;/code&gt;, return &lt;code&gt;WP_Error&lt;/code&gt; objects in a
predictable fashion.
&lt;/p&gt;
&lt;p&gt;
Props dd32, michalzuber.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:6/1476150298140880</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
One case I was worried about was where it'd just continuously return a WP_Error when the cache was invalid, however by switching purely to get_term() that would cause it to fall back to the database anyway, correct?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yup, all the caching logic is hidden inside of &lt;code&gt;get_term()&lt;/code&gt;. This is better anyway, since it means less exposure of the cache internals.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also assume there's a PHPDoc update to go with that though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great, I'll add this and commit. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:5/1476150195668880</guid>
      <description>&lt;p&gt;
@boonebgorges That looks like it does exactly what I was thinking, I was for some reason having difficulty in writing that same patch while dug in deep. I also assume there's a PHPDoc update to go with that though.
&lt;/p&gt;
&lt;p&gt;
One case I was worried about was where it'd just continuously return a &lt;code&gt;WP_Error&lt;/code&gt; when the cache was invalid, however by switching purely to &lt;code&gt;get_term()&lt;/code&gt; that would cause it to fall back to the database anyway, correct?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:100/1476150140096956</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38775" title="XML-RPC: Re-add a `global $wpdb` missed in [38768].
See #37699.
"&gt;38775&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
XML-RPC: Re-add a &lt;code&gt;global $wpdb&lt;/code&gt; missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;[38768]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38775]: XML-RPC: Re-add a `global $wpdb` missed in [38768].  See #37699.  </title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:42:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38775</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38775/1476150139593657</guid>
      <description>&lt;p&gt;
XML-RPC: Re-add a &lt;code&gt;global $wpdb&lt;/code&gt; missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;[38768]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:4/1476150014592348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@dd32 Yes, your idea is a good one. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37291/37291.2.diff" title="Attachment '37291.2.diff' in Ticket #37291"&gt;37291.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37291/37291.2.diff" title="Download"&gt;​&lt;/a&gt;: if any call to &lt;code&gt;get_term()&lt;/code&gt; returns an error object, &lt;code&gt;get_object_term_cache()&lt;/code&gt; will bail, returning the &lt;code&gt;WP_Error&lt;/code&gt;. &lt;code&gt;get_the_terms()&lt;/code&gt; and friends are already built in such a way that the error object will be passed up the chain. Can you read the patch (especially the test, which tries to emulate a situation where &lt;code&gt;get_term()&lt;/code&gt; would return an error) to make sure it captures the spirit of your idea?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37291.2.diff attached to Ticket #37291</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37291/37291.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37291/37291.2.diff/1476149822482361</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35272 (.menu-item-home class not applying to static front pages) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:24:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35272#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35272#comment:4/1476149061191710</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38281 (Generating thumbnails matching original image dimensions) created</title>
      
        <dc:creator>galbaras</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38281</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38281/1476148776658337</guid>
      <description>&lt;p&gt;
When the thumbnail size matches the uploaded image dimensions precisely, the thumbnail is created.
&lt;/p&gt;
&lt;p&gt;
In image_resize_dimensions(), line 551 is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $new_w &amp;gt;= $orig_w &amp;amp;&amp;amp; $new_h &amp;gt;= $orig_h &amp;amp;&amp;amp; $dest_w != $orig_w &amp;amp;&amp;amp; $dest_h != $orig_h ) {
&lt;/pre&gt;&lt;p&gt;
This means that when $dest_w == $orig_w or $dest_h == $orig_h, a new file is created, when it shouldn't be, although the new file's dimensions match that of the original file.
&lt;/p&gt;
&lt;p&gt;
The first 2 conditions ($new_w &amp;gt;= $orig_w &amp;amp;&amp;amp; $new_h &amp;gt;= $orig_h) should be enough prevent the creation of an equal or larger file.
&lt;/p&gt;
&lt;p&gt;
So the new code should be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $new_w &amp;gt;= $orig_w &amp;amp;&amp;amp; $new_h &amp;gt;= $orig_h ) {
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31652 (Drag/Drop Ordering of Media Does Not Work in Chrome on touch enabled ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 01:13:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31652#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31652#comment:20/1476148429109895</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31652#comment:19" title="Comment 19"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Always enqueue jquery-touch-punch in the admin
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was hoping we can stop using jquery-touch-punch as it is a 5 years old quick hack for jQuery UI Mouse to somewhat make it work on touch devices. Re-testing it again and thinking I'd rather not have these thumbnails draggable/sorable at all on a phone. Makes "normal" scrolling much harder. A proper fix would probably be to show arrow buttons in the middle of the thumbnails.
&lt;/p&gt;
&lt;p&gt;
Also suspect it is failing in some cases which is probably what @celloexpressions is seeing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37900 (Support custom dashicon for wp.mce.View.setLoader()) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37900#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37900#comment:3/1476147322813446</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38774" title="TinyMCE: add support for custom dashicon for wp.mce.View.setLoader().
 ..."&gt;38774&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: add support for custom dashicon for wp.mce.View.setLoader().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props procodewp.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37900" title="#37900: enhancement: Support custom dashicon for wp.mce.View.setLoader() (closed: fixed)"&gt;#37900&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38774]: TinyMCE: add support for custom dashicon for wp.mce.View.setLoader().  ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38774</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38774/1476147322333772</guid>
      <description>&lt;p&gt;
TinyMCE: add support for custom dashicon for wp.mce.View.setLoader().
&lt;/p&gt;
&lt;p&gt;
Props procodewp.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37900" title="#37900: enhancement: Support custom dashicon for wp.mce.View.setLoader() (closed: fixed)"&gt;#37900&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37900 (Support custom dashicon for wp.mce.View.setLoader()) updated</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37900#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37900#comment:2/1476146104680175</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37900.patch attached to Ticket #37900</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37900/37900.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37900/37900.patch/1476146060715922</guid>
      <description>&lt;p&gt;
Patch to allow wp.mce.View.setLoader() to accept a dashicon argument, or use default.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38274 (wp_set_auth_cookie and FileSystem relation) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38274#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38274#comment:1/1476145567068744</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @rezamarandi and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Indeed the script should operate the same in both of those configurations, there's no restriction in WordPress which would prevent it from doing so.
This feels like it could potentially be caused by a strange server mis-configuration.
&lt;/p&gt;
&lt;p&gt;
Can you supply the full headers output when you request the script in both modes?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37507,​37808,​38000,​38081,​38245 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37507%2C37808%2C38000%2C38081%2C38245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37507%2C37808%2C38000%2C38081%2C38245/1476144543844961</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38773" title="TiinyMCE: update to 4.4.3, changelog: ..."&gt;38773&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TiinyMCE: update to 4.4.3, changelog: &lt;a class="ext-link" href="https://www.tinymce.com/docs/changelog/#version443-september12016"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.tinymce.com/docs/changelog/#version443-september12016&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38081" title="#38081: defect (bug): Update TinyMCE to 4.4.3 (closed: fixed)"&gt;#38081&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38245" title="#38245: defect (bug): Caret does not move down on enter when next to view (closed: fixed)"&gt;#38245&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37507" title="#37507: defect (bug): Can't delete empty line between visual shortcodes. (closed: fixed)"&gt;#37507&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37808" title="#37808: defect (bug): Zero-width space stripped by TinyMCE again (closed: fixed)"&gt;#37808&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38000" title="#38000: defect (bug): Visual mode editor is broken after update to 4.6.1 (closed: fixed)"&gt;#38000&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38773]: TiinyMCE: update to 4.4.3, changelog: ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 11 Oct 2016 00:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38773</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38773/1476144543087245</guid>
      <description>&lt;p&gt;
TiinyMCE: update to 4.4.3, changelog: &lt;a class="ext-link" href="https://www.tinymce.com/docs/changelog/#version443-september12016"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.tinymce.com/docs/changelog/#version443-september12016&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38081" title="#38081: defect (bug): Update TinyMCE to 4.4.3 (closed: fixed)"&gt;#38081&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38245" title="#38245: defect (bug): Caret does not move down on enter when next to view (closed: fixed)"&gt;#38245&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37507" title="#37507: defect (bug): Can't delete empty line between visual shortcodes. (closed: fixed)"&gt;#37507&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37808" title="#37808: defect (bug): Zero-width space stripped by TinyMCE again (closed: fixed)"&gt;#37808&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38000" title="#38000: defect (bug): Visual mode editor is broken after update to 4.6.1 (closed: fixed)"&gt;#38000&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37498 (WYSIWYG Error?) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 10 Oct 2016 23:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37498#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37498#comment:9/1476143786304776</guid>
      <description>&lt;p&gt;
This sounds like a possible autop bug, however I still cannot reproduce it in the "main" editor on the Edit Post page. Inserting the above example in the Text editor:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;hr /&amp;gt;
&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Bericht: Packaging&amp;lt;/a&amp;gt; (Quelle)
&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Empfehlung: Packaging&amp;lt;/a&amp;gt; (Quelle)
&lt;/pre&gt;&lt;p&gt;
and publishing the post (with or without switching to the Visual editor first). I get this on the front-end:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="entry-content"&amp;gt;
&amp;lt;hr /&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Bericht: Packaging&amp;lt;/a&amp;gt; (Quelle)&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Empfehlung: Packaging&amp;lt;/a&amp;gt; (Quelle)&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;&amp;lt;!-- .entry-content --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
All is working as expected. This will need more detailed steps on how to reproduce. Also, where do you insert the example content; where do you see the output; does still happen in WordPress 4.6?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 23:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936#comment:3/1476142332649130</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-tinymce by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-tinymce/p1476142330000031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38185 (Improve the post "locked indicator" accessibility) updated</title>
      
        <dc:creator>mariovalney</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38185#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38185#comment:15/1476139344296327</guid>
      <description>&lt;p&gt;
@mariusvetrici
&lt;/p&gt;
&lt;p&gt;
It's OK here &lt;a class="ext-link" href="https://s21.postimg.org/wc7aumufr/display_none.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://s21.postimg.org/wc7aumufr/display_none.png&lt;/a&gt; .
Maybe you should use &lt;strong&gt;SCRIPT_DEBUG&lt;/strong&gt; to &lt;code&gt;wp-admin/css/list-tables.css&lt;/code&gt; be used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:41:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271#comment:4/1476139286693077</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38772" title="Editor: do not send the request for releasing the post lock on unload ..."&gt;38772&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: do not send the request for releasing the post lock on unload when post_ID or active_post_lock is missing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh, adamsilverstein.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38271" title="#38271: defect (bug): `wp-remove-post-lock` Ajax request generates notice in ... (closed: fixed)"&gt;#38271&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38772]: Editor: do not send the request for releasing the post lock on unload ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:41:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38772</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38772/1476139286213588</guid>
      <description>&lt;p&gt;
Editor: do not send the request for releasing the post lock on unload when post_ID or active_post_lock is missing.
&lt;/p&gt;
&lt;p&gt;
Props dlh, adamsilverstein.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38271" title="#38271: defect (bug): `wp-remove-post-lock` Ajax request generates notice in ... (closed: fixed)"&gt;#38271&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:35:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271#comment:3/1476138914590659</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The attached patch would return before the Ajax request occurs in post.js
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, the first thing &lt;code&gt;wp_ajax_wp_remove_post_lock()&lt;/code&gt; does is to return early when either post_ID or active_post_lock is empty. Can do the same in JS and not send the request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:2/1476137301960641</guid>
      <description>&lt;p&gt;
One way to prevent duplication between query classes (&lt;code&gt;WP_Query&lt;/code&gt;, for example), and this API, would be to break each visibility restriction rule out into its own class. This class would have one method that could modify the query, and another one that could analyze a given object and tell whether it was publicly accessible (for the &lt;code&gt;is_thing_accessible()&lt;/code&gt; function/API).
&lt;/p&gt;
&lt;p&gt;
Well, OK, I guess that doesn't necessarily reduce duplication, but it does centralize that duplication of logic that has to be applied differently in different circumstances. So when updating the logic for one of the circumstances (like a query), we'd be hard-pressed to forget to update the logic for the other scenario (object check) accordingly.
&lt;/p&gt;
&lt;p&gt;
There are then other cool possibilities, like having each rule provide a human-readable description of itself (another method on the rule object). Then we could tell a user why they couldn't view a particular post using this information. (If a plugin added an additional rule, that would automatically be incorporated.) Another use-case would be telling an admin that even though they can view a particular object, not everybody can, only users who this, this, and this. Though with that example, I guess I'm talking about this not being a user-agnostic boolean check again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38280.diff attached to Ticket #38280</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38280/38280.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38280/38280.diff/1476136704280801</guid>
      <description>&lt;p&gt;
Stores object type specific counts in term meta when term counts are updated. Adds &lt;code&gt;wp_get_term_count_for_object_type()&lt;/code&gt; to retrieve term counts.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38280 (Make term count for a specific object type available) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38280/1476136455836160</guid>
      <description>&lt;p&gt;
Term count is the total number of relationships with no context of the object types the relationships belong to.
&lt;/p&gt;
&lt;p&gt;
Currently, the best way to determine the count of a term for a specific object type is to run a &lt;code&gt;WP_Query&lt;/code&gt; with a &lt;code&gt;WP_Tax_Query&lt;/code&gt; for that term.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$term_count_query = new WP_Query( array(
        'post_type' =&amp;gt; 'some-post-type',
        'tax_query' =&amp;gt; array(
                array(
                        'taxonomy' =&amp;gt; 'some-taxonomy',
                        'field' =&amp;gt; 'slug',
                        'terms' =&amp;gt; array( 'term-slug' )
                ),
        ),
        'posts_per_page' =&amp;gt; 1,
) );
$term_count_for_post_type = $term_count_query-&amp;gt;found_posts;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Now that term meta is in core, it would be great if these counts were stored in term meta for easy access.
&lt;/p&gt;
&lt;p&gt;
To start, these counts could be available through a function. To go a step further, an argument could be added to &lt;code&gt;get_terms()&lt;/code&gt; and other functions to filter the term counts and reflect the object types terms are being grabbed for.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:48:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:101/1476136113661895</guid>
      <description>&lt;p&gt;
@bradyvercher that last patch has UI - woohoo! I checked back and it seems to be the previous patch. All good as it's really cool to see where we are at now. Thanks so much for all your work on this.
&lt;/p&gt;
&lt;p&gt;
Here's a record visually for those following along:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/bvLVW-YdTF.gif"&gt;&lt;img src="https://cldup.com/bvLVW-YdTF.gif" alt="https://cldup.com/bvLVW-YdTF.gif" crossorigin="anonymous" title="https://cldup.com/bvLVW-YdTF.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A few questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Delete seemed to be missing, now if I'm correct this should show on opening the search panel. Is there any way to get the 'x' like mock? Or at least to find some middle option?
&lt;/li&gt;&lt;li&gt;Are we fixed to the page having to be top element? Or can that iterate?
&lt;/li&gt;&lt;li&gt;Can the 'add sections' button be disabled when the panel is out?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are some adjustments we can work on beyond that, but those hitches would be great to get done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38279 (REST API Unit Test Docs: Remove reference to the plugin) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38279#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38279#comment:2/1476136087386010</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38771" title="REST API: Remove reference to the plugin in infrastructure activation ..."&gt;38771&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Remove reference to the plugin in infrastructure activation test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also adds class exists checks for WP_REST_Request and WP_REST_Response.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kraftbj.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38279" title="#38279: defect (bug): REST API Unit Test Docs: Remove reference to the plugin (closed: fixed)"&gt;#38279&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38771]: REST API: Remove reference to the plugin in infrastructure activation ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:48:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38771</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38771/1476136082842519</guid>
      <description>&lt;p&gt;
REST API: Remove reference to the plugin in infrastructure activation test.
&lt;/p&gt;
&lt;p&gt;
Also adds class exists checks for WP_REST_Request and WP_REST_Response.
&lt;/p&gt;
&lt;p&gt;
Props kraftbj.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38279" title="#38279: defect (bug): REST API Unit Test Docs: Remove reference to the plugin (closed: fixed)"&gt;#38279&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>38279.2.diff attached to Ticket #38279</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38279/38279.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38279/38279.2.diff/1476136031888651</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38279 (REST API Unit Test Docs: Remove reference to the plugin) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:46:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38279#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38279#comment:1/1476136007249114</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:95/1476135485821639</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22363#comment:92" title="Comment 92"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The latest patch does what it says it does, but I'm actually having a hard time reproducing this on Safari 10 (macOS Sierra), so I can't tell for sure. Images with diacritics are displayed just fine in the media library and the front end. The only problem Safari has is with the permalinks, i.e.. &lt;code&gt;example.com/aaâãäåçeeêëiiîïñooôõöuuûüyÿ/&lt;/code&gt; works in Safari, but in the other browsers it's &lt;code&gt;example.com/aaa%CC%82a%CC%83a%CC%88a%CC%8Ac%CC%A7eee%CC%82e%CC%88iii%CC%82i%CC%88n%CC%83ooo%CC%82o%CC%83o%CC%88uuu%CC%82u%CC%88yy%CC%88/&lt;/code&gt;, which is still a problem with the current patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I also had a hard time reproducing it until I realized that the upload had to happen with a browser other than Safari, as a believe @gitlost is referencing above. Once I uploaded with Chrome, then followed up with a test on Safari, I saw the bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20973 (date_i18n() produces invalid output for shorthand formats) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20973#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20973#comment:40/1476135150597106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
See also &lt;a class="ext-link" href="https://github.com/WordPress/twentyseventeen/issues/127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/twentyseventeen/issues/127&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20973/Unpack_shorthand_date_formats1.patch" title="Attachment 'Unpack_shorthand_date_formats1.patch' in Ticket #20973"&gt;Unpack_shorthand_date_formats1.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20973/Unpack_shorthand_date_formats1.patch" title="Download"&gt;​&lt;/a&gt; looks like a simple fix for this. But I think we should replace it with &lt;code&gt;'Y-m-d\TH:i:sP'&lt;/code&gt; and not with the value of the constants.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:22:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:24/1476134568047009</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch. As per today's discussion during the accessibility weekly meeting on Slack, changes the term "Item" used in the new strings in "Term". Also, some renaming to better reflect the terms are not "deleted" and instead they're "removed". Looks good to me and any testing (also on Press This) is very welcome!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27555.3.diff attached to Ticket #27555</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27555/27555.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27555/27555.3.diff/1476133914746848</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:100/1476133547305236</guid>
      <description>&lt;p&gt;
@pento Thanks! The change in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.2.diff" title="Attachment '37974.2.diff' in Ticket #37974"&gt;37974.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.2.diff" title="Download"&gt;​&lt;/a&gt; is pretty dang cool. Handling sections like that hadn't even crossed my mind, but I really like that approach.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it's worth investigating having &lt;a class="ext-link" href="http://example.com/about/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/about/&lt;/a&gt; redirected to &lt;a class="ext-link" href="http://example.com/#about"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/#about&lt;/a&gt;, rather than #post-65. This is a bit trickier, of course, but much nicer.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I waffled on that myself. I prefer the more readable format, but I see the post ID used as the anchor more often. The only thing that comes to mind is to introduce something like &lt;code&gt;the_anchor()&lt;/code&gt; or &lt;code&gt;the_html_id()&lt;/code&gt; to let core control the output for the HTML &lt;code&gt;id&lt;/code&gt; attribute.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37974#comment:97" title="Comment 97"&gt;@karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
It looks like you might be missing some of the styles. Those move up/down arrows should definitely be showing up as well as a button to remove pages. I could have botched the patch, but it looks like everything should be there. Depending on your setup, you might need to run the Grunt task?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems that the page template always has to be the top content. Is that the case?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right now that's the way it's set up since sections are appended to the front page, which is consistent with the way the front page currently works.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There also is a little odd behaviour where if I don't search I can click 'x' on search and loose all pages shown.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I fixed that up in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.3.diff" title="Attachment '37974.3.diff' in Ticket #37974"&gt;37974.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.3.diff" title="Download"&gt;​&lt;/a&gt;, which also includes these updates based on the feedback from &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37974#comment:99" title="Comment 99"&gt;@davidakennedy&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A divider between existing front page controls and the new section control
&lt;/li&gt;&lt;li&gt;The front page and page for posts are excluded from search results
&lt;/li&gt;&lt;li&gt;Added a &lt;code&gt;front-page-section&lt;/code&gt; class in &lt;code&gt;post_class()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Aside from further tightening up the UI, I think that leaves pretty anchors, comments, and potentially making the preview instantly update when reordering sections instead of doing a refresh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38279.diff attached to Ticket #38279</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:03:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38279/38279.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38279/38279.diff/1476133382651091</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38279 (REST API Unit Test Docs: Remove reference to the plugin) created</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38279</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38279/1476133321167317</guid>
      <description>&lt;p&gt;
In the unit tests for the REST API infrastructure, a mention the "the plugin should be installed and activated", referring to when the infrastructure was in the feature plugin. Since that is merged to Core, the reference is outdated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37974.3.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.3.diff/1476132656981113</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:71/1476132569837039</guid>
      <description>&lt;p&gt;
Latest updates: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/files/b582a43..6bf949b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/161/files/b582a43..6bf949b&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/0c1b241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;0c1b241&lt;/a&gt; Fix phpdoc in \WP_Customize_Manager::validate_setting_values()
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/645d4df"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;645d4df&lt;/a&gt; Ensure changeset context (UUID, post ID, data) are properly set during publishing
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/b4d5fd4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;b4d5fd4&lt;/a&gt; Add comment explaining why JSON_UNESCAPED_SLASHES is used
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/0a5c943"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;0a5c943&lt;/a&gt; Ensure core settings are registered before do_action(customize_register)
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/cf9e605"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;cf9e605&lt;/a&gt; Use refresh transport instead of postMessage if previewer no longer alive; remove keep-alive failure from causing navigation to previous URL and instead set new previewerAlive state; move interval magic numbers to settings.timeouts
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/6bf949b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;6bf949b&lt;/a&gt; Preserve history state when calling replaceState to update customize_changeset_uuid param; improve logic for detecting URL changes by comparing query params objects
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:1/1476132298069971</guid>
      <description>&lt;p&gt;
Another thing that I'm &lt;em&gt;not&lt;/em&gt; proposing we do here is change the blacklist-style philosophy of WordPress where everything is public by default, unless restricted. I'd just like to see us centralize the code that restricts things from being visible, so that plugins can more easily check that.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I should note that the &lt;code&gt;read&lt;/code&gt; capability is sort of an outlier in the caps API. All of the other core capabilities, as far as I can tell, are related create/update/delete user actions. It is only with posts that the capability API intersects with object visibility.
&lt;/p&gt;
&lt;p&gt;
Again, I'm not trying to change that with this ticket, but I do wonder whether long-term we should reconsider whether the &lt;code&gt;read&lt;/code&gt; capability should be a capability at all. Of course, an API like the one proposed here would have to exist before the &lt;code&gt;read&lt;/code&gt; capability could ever be deprecated or anything like that, much less removed. This ticket &lt;em&gt;could&lt;/em&gt; be a first step in that direction. But again, it doesn't have to be, I guess.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
To fill in some more detail about what I envision in the &lt;code&gt;is_thing_accessible()&lt;/code&gt; function, when I first created this ticket I was envisioning it as accepting an object ID (and I guess what type of object it was, though I left that out of the example function signatures given). Possibly then it would just wrap a filter, passing it these arguments and filtering whether the object was accessible, which would be &lt;code&gt;true&lt;/code&gt; by default. Then the restrictions for each object type would be provided by hooking into this filter.
&lt;/p&gt;
&lt;p&gt;
Now, when I created the ticket, I was kind of envisioning the &lt;code&gt;is_thing_accessible()&lt;/code&gt; function automatically working based on the current user, kind of as a direct complement to &lt;code&gt;current_user_can()&lt;/code&gt;. So it would also grab the current user and also pass that in to the filter. The &lt;code&gt;is_thing_accessible_for_user()&lt;/code&gt; would then compliment the &lt;code&gt;user_can()&lt;/code&gt; function, as it were, and allow you to pass the user ID in.
&lt;/p&gt;
&lt;p&gt;
Just now though, I was wondering whether that is the correct approach. I suppose that really the user is irrelevant if we are just checking whether the object is public. If the object is public, then that means anyone can view it. It doesn't matter who the user is. So if we limit the API to only check if the object is totally public, the current user shouldn't be taken into account.
&lt;/p&gt;
&lt;p&gt;
In that case the API would compliment the capability API by providing a way to check if something is publicly visible to non-logged-in users, but might not actually replace the &lt;code&gt;read&lt;/code&gt; capability, because it wouldn't provide granular checks for different roles/capabilities of logged-in users. And I suppose that maybe that is only right.
&lt;/p&gt;
&lt;p&gt;
So in other words, this would be practical logic:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$can_view = (
    is_thing_public( 'post', $post_id )
    || ( is_user_logged_in() &amp;amp;&amp;amp; current_user_can( 'read_post', $post_id ) )
);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>31383.diff attached to Ticket #31383</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31383/31383.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31383/31383.diff/1476131631342031</guid>
      <description>&lt;p&gt;
Applies WP_Tax_Query support to WP_User_Query, no UX.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31383 (Add WP_Tax_Query support to WP_User_Query) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31383#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31383#comment:11/1476131590038672</guid>
      <description>&lt;p&gt;
Incoming updated patch that will apply cleanly to trunk. This patch adds taxonomy query support to user queries with no UX. It includes a few new unit tests, but since this is the first time writing unit tests, I probably missed a bunch.
&lt;/p&gt;
&lt;p&gt;
While refreshing the patch, I realized that there is one main issue we will need to solve in order to make this feature work. Term relationships are based on object IDs. But currently, the object ID is always assumed to be a post. This is an issue because users can have the same ID as posts since they are stored in separate tables. Without addressing this issue, taxonomy support for users can not be added for taxonomies that are not exclusive to users.
&lt;/p&gt;
&lt;p&gt;
Example: if there is a post with an ID of 3, and a user with an ID of 3, calling &lt;code&gt;wp_set_object_terms()&lt;/code&gt; will assign the term to both, regardless of the intent.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38265" title="#38265: feature request: Add term_relationship_id column to wp_term_relationships (new)"&gt;#38265&lt;/a&gt; was recently opened, and this could be one potential way to fix the issue. Not sure if there are any other ideas how to accomplish this without altering tables.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38278 (Only query taxonomies assigned to the post types being queried) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38278#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38278#comment:2/1476131521521422</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38268 (WP_Comment_Query Pagination) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:31:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38268#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38268#comment:2/1476131508015488</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38268 (WP_Comment_Query Pagination) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:31:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38268#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38268#comment:1/1476131499629529</guid>
      <description>&lt;p&gt;
@wordpresssites Howdy! &lt;code&gt;WP_Comment_Query&lt;/code&gt; does have the &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; parameters, and the &lt;code&gt;$max_num_pages&lt;/code&gt; property which should give you what you need to build custom pagination functions.  Would that fit your use case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38278 (Only query taxonomies assigned to the post types being queried) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38278#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38278#comment:1/1476131493127597</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38278 (Only query taxonomies assigned to the post types being queried) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38278</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38278/1476131333282558</guid>
      <description>&lt;p&gt;
While working on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/31383" title="#31383: feature request: Add WP_Tax_Query support to WP_User_Query (new)"&gt;#31383&lt;/a&gt; (Add &lt;code&gt;WP_Tax_Query&lt;/code&gt; support to &lt;code&gt;WP_User_Query&lt;/code&gt;), it was brought up that taxonomy queries do not check to see whether the requested taxonomies are registered to the requested post type.
&lt;/p&gt;
&lt;p&gt;
Opening this ticket to discuss further. Should taxonomies always match the queried &lt;code&gt;post_type&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
From @boonebgorges on the other ticket:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Here's a way to frame the issue: are we likely to confuse developers if we allow (ie, don't throw errors for) queries like &lt;code&gt;get_users( ... 'tax_query' =&amp;gt; ... 'taxonomy=post_tag' )&lt;/code&gt;? Or &lt;code&gt;get_posts( ... 'tax_query' =&amp;gt; ... 'taxonomy=some_user_taxonomy' )&lt;/code&gt;? Or maybe these queries will just always end up empty? We should think through the possible confusions (or, maybe, lack thereof).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>25239.4.patch attached to Ticket #25239</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:17:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25239/25239.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25239/25239.4.patch/1476130665338632</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:16:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:45/1476130609954256</guid>
      <description>&lt;p&gt;
Okay, let's try this again.
&lt;/p&gt;
&lt;p&gt;
This patch adds a new function in pluggable.php, &lt;code&gt;get_current_domain()&lt;/code&gt;. Does what it says on the tin, returns the current blog domain name, with leading 'www.' stripped. It also modifies a few places where emails are sent, to use that function instead of &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt;, notably in the password reset email-send, which fixes the issue with wp-cli password reset emails.
&lt;/p&gt;
&lt;p&gt;
There is a possible side effect. Since I replaced &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; in several email-related places, anyone that's depending on their emails' From: headers looking like support@… instead of support@theirsite will be disappointed. I could un-patch those instances, of course, but I think this behavior is cleaner overall.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:44/1476129558578862</guid>
      <description>&lt;p&gt;
Please ignore the above patch (which doesn't fix all the cases of this that I've encountered), in lieu of another one coming shortly. Apologies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:53/1476129352970990</guid>
      <description>&lt;p&gt;
I'm not sure that the escaping functions really make sense in JS. They don't really have a practical use, as far as I can see. Unless you are building HTML from strings via concatenation, which is generally considered a bad practice, I think, due to the greater potential for security issues.
&lt;/p&gt;
&lt;p&gt;
In other words, I'd never do this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div title='&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;esc_attr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Hello World'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'"&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Instead I'd do this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Hello World'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
No need to use &lt;code&gt;esc_attr__()&lt;/code&gt;. Of course, the other way is just as safe if the escaping function is used, but it encourages developers to follow a pattern that in other circumstances could be very bad. (Especially considering that there isn't a generic &lt;code&gt;esc_html()&lt;/code&gt; or &lt;code&gt;esc_attr()&lt;/code&gt;.)
&lt;/p&gt;
&lt;p&gt;
Otherwise, really looking forward to this. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37291,​38277 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37291%2C38277</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37291%2C38277/1476128444500202</guid>
      <description>duplicate: &lt;p&gt;
Hello @claudiulodro, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #38277 (the_tags() will fatal error if get_the_tag_list() fails) created</title>
      
        <dc:creator>claudiulodro</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:37:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38277</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38277/1476128263578584</guid>
      <description>&lt;p&gt;
On failure, get_the_tag_list (used by the_tags() ) will return a WP_Error object. the_tags() has no checking for this WP_Error object, so it will throw a fatal error when it tries to echo the WP_Error object that get_the_tag_list returned. My proposed solution is as follows:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;the_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$before&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$after&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$before&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;$before&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Tags: '&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$tag_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_the_tag_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$before&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sep&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$after&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_wp_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$tag_list&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$tag_list&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I will attach a formal patch for this soon as I have a chance.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:43/1476127149126180</guid>
      <description>&lt;p&gt;
This patch combines @jesin's "replace it in a bunch of spots" and @mensmaximus's "add a new function for this" techniques. I omitted the parameters for get_current_domain() because there's only one current domain at any given time. First patch, probably did everything wrong, et cetera.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25239.3.patch attached to Ticket #25239</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25239/25239.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25239/25239.3.patch/1476127134828571</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38275 (Single wildcard character in .htaccess requests any page) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:17:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38275#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38275#comment:2/1476127062429134</guid>
      <description>&lt;p&gt;
An opportunity to populate a related, disregarded ticket: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36420" title="#36420: enhancement: A more forgiving redirect guesser (new)"&gt;#36420&lt;/a&gt; (A more forgiving redirect guesser)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38275 (Single wildcard character in .htaccess requests any page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38275#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38275#comment:1/1476126799838125</guid>
      <description>&lt;p&gt;
Hi @martinthehorrible, welcome to Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
This is actually a feature introduced a long time ago, WordPress is trying to guess the correct permalink:
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/redirect_guess_404_permalink/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/redirect_guess_404_permalink/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you're looking for a way to disable it, there's a ticket for that: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/16557" title="#16557: enhancement: Ability to disable redirect_guess_404_permalink() (new)"&gt;#16557&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38182 (rest_url does not support index permalinks) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38182#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38182#comment:7/1476126337277368</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I added/reworked the unit tests to use the phpunit helper function for setting permalinks to ensure the various pieces of the $wp_rewrite class are refreshed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38182.2.diff attached to Ticket #38182</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:04:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38182/38182.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38182/38182.2.diff/1476126271201442</guid>
      <description>&lt;p&gt;
same as previous, adding unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:99/1476126218565187</guid>
      <description>&lt;p&gt;
First up, thank you @bradyvercher for creating this patch. It's really neat to play with and provides a real foundation to move forward on in a more confident way. And thanks to @pento for helping improve it.
&lt;/p&gt;
&lt;p&gt;
I'm going to put the code feedback aside for now, because I think the biggest reason a prototype was needed was to see how this felt when using it. Here's some feedback along those lines:
&lt;/p&gt;
&lt;p&gt;
I really like all of this being in the Static Front Page section rather than a separate panel. I know that potentially locks this into less flexibility and less space on screen, but I do like seeing it all there in one shot. Like @karmatosed, I'd like to see some better visual separation between the old UI and the new sections UI, plus her other feedback mentioned.
&lt;/p&gt;
&lt;p&gt;
From a themer's perspective:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;My favorite thing about this is the fact that it doesn't need anything beyond the &lt;code&gt;add_theme_support&lt;/code&gt; line. It's as easy for themers as it could be for users, I think.
&lt;/li&gt;&lt;li&gt;We'd probably want to filter out the pages being used for the front page and posts page so they can't be added as a section.
&lt;/li&gt;&lt;li&gt;From a styling perspective, it might be a good thing to add a class to &lt;code&gt;post_class&lt;/code&gt; for pages displayed in the loop as a section on the front page. That way, hooking in stylistically becomes one CSS class versus two.
&lt;/li&gt;&lt;li&gt;How should comments be handled? It's a bit weird for the comment form to be allowed on pages used as sections because then you'd have multiple comment forms on the front page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I feel like this is headed in the right direction, and I'm excited to see the iterations of it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:20/1476126142136739</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/16206" title="#16206: defect (bug): Comment text not marked as required (assigned)"&gt;#16206&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16206 (Comment text not marked as required) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16206#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16206#comment:39/1476126093102580</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/23870" title="#23870: enhancement: Filter Glyph for Comment Required Fields (assigned)"&gt;#23870&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 18:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:23/1476124298337015</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476124295002020"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26601 (Inappropriate content in headings on admin screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 18:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26601#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26601#comment:94/1476123920203062</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476123918002005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38156 (Customizer Previously uploaded header images disappear on focus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 18:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38156#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38156#comment:3/1476122410312558</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476122405001933"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37727 (Allow for customize control notifications to have extensible templates) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37727#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37727#comment:8/1476122312807655</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per today's customize chat, we can safely switch to unescaped notification output, eliminating the immediate need for this. However, extensible templates might still be useful in some cases, so we'll reconsider in a future release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38185 (Improve the post "locked indicator" accessibility) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38185#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38185#comment:14/1476122056141826</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476122054001918"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:36/1476121904382026</guid>
      <description>&lt;p&gt;
Status update for the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Trying to figure out how to get &lt;code&gt;partial.showControl()&lt;/code&gt; to work with a menu (currently does nothing).
&lt;/li&gt;&lt;li&gt;Also noticed a bug (actually noticed by @westonruter in the plugin repo &lt;a class="ext-link" href="https://github.com/Automattic/customize-direct-manipulation/issues/23#issuecomment-251543800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/customize-direct-manipulation/issues/23#issuecomment-251543800&lt;/a&gt; ) where partials do not call their &lt;code&gt;ready()&lt;/code&gt; method when first added.
&lt;/li&gt;&lt;li&gt;Experimenting with injecting the icons directly to the elements in the DOM (mostly working!).
&lt;/li&gt;&lt;li&gt;Need to find/make an event that is triggered when a partial is removed so the associated icon can be removed.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Sorry for my slowness here. I'm not super-familiar with the selective refresh code and the panel focusing code. If anyone has any help to offer on the above, please let me know.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37727 (Allow for customize control notifications to have extensible templates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37727#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37727#comment:7/1476121459851351</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121457001930"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:94/1476121322630228</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121320001924"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:15/1476121274266201</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121271001921"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38263 (Color picker: add a hue-only mode) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38263#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38263#comment:1/1476121173139906</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121170001917"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38172 (Enable Video Headers in Custom Headers) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38172#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38172#comment:21/1476121104307095</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121102001915"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:98/1476121091411454</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121088001913"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:35/1476121052872066</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121049001910"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:19/1476120873895624</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a version with the argument, just in case, so we could choose from both options :)
&lt;/p&gt;
&lt;p&gt;
I'm ambivalent at the moment. Most themes only have one comment form, so the argument seems cleaner.
&lt;/p&gt;
&lt;p&gt;
On the other hand, if a theme has more than one form, and/or utilizes other &lt;code&gt;comment_form_*&lt;/code&gt; filters, the filter would probably make more sense.
&lt;/p&gt;
&lt;p&gt;
Moving to the milestone to make a decision. I18N is not the main part of the ticket though, so moving back to the Comments component.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:82/1476120716158243</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476120714001866"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28536 (Add browser history and deep linking for navigation in Customizer preview) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28536#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28536#comment:39/1476120573940485</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476120571001887"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38164 (Customize: assign static front page and posts page to new pages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38164#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38164#comment:5/1476120372273209</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476120369001879"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:11/1476119806044875</guid>
      <description>&lt;p&gt;
Discussion about how to indicate the required field at:
&lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476119464001821"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/accessibility/p1476119464001821&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23870.5.alt.patch attached to Ticket #23870</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23870/23870.5.alt.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23870/23870.5.alt.patch/1476119726777514</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:10/1476119642384181</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:63/1476119533909576</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476119531001819"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:09:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:81/1476119345557112</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476119343001813"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:9/1476119025484759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476119022001797"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16206 (Comment text not marked as required) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16206#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16206#comment:38/1476119025355759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476119022001797"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:70/1476118948515383</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476118946001793"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38256 (Make use of PHPUnit's @requires notation) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38256#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38256#comment:5/1476117116272379</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:18/1476116986190062</guid>
      <description>&lt;p&gt;
Adding the required mark as an argument does work, and the patch in general is obviously more to current standards (mea culpa, mea culpa). It seems the ticket has become more tightening up the comment form than just adding a way to easily change the required mark used ... I'm good with that, too!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35578 (Improve the Menus screen "move" links) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35578#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35578#comment:12/1476116611004047</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38770" title="Accessibility: Improve the UI controls to move the Menu items.
On the ..."&gt;38770&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Improve the UI controls to move the Menu items.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the Menus screen, the links to move menu items behave like buttons: they&lt;br /&gt;
perform an action so they should be real buttons to be correctly reported to&lt;br /&gt;
assistive technologies. Since they're logically grouped controls, they should&lt;br /&gt;
also be wrapped in a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; element for better semantics and accessibility.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Cheffheid.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35578" title="#35578: defect (bug): Improve the Menus screen &amp;#34;move&amp;#34; links (closed: fixed)"&gt;#35578&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38770]: Accessibility: Improve the UI controls to move the Menu items.  On the ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38770/1476116603681030</guid>
      <description>&lt;p&gt;
Accessibility: Improve the UI controls to move the Menu items.
&lt;/p&gt;
&lt;p&gt;
On the Menus screen, the links to move menu items behave like buttons: they
perform an action so they should be real buttons to be correctly reported to
assistive technologies. Since they're logically grouped controls, they should
also be wrapped in a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; element for better semantics and accessibility.
&lt;/p&gt;
&lt;p&gt;
Props Cheffheid.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35578" title="#35578: defect (bug): Improve the Menus screen &amp;#34;move&amp;#34; links (closed: fixed)"&gt;#35578&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276/1476115996944490</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Question:&lt;/strong&gt; How do you check if a non-logged-in user is allowed to view something in WordPress? (Posts specifically, and also in general?)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Answer:&lt;/strong&gt; Within WordPress there is no API for checking whether a non-logged-in user is allowed to view a post or other object.
&lt;/p&gt;
&lt;h2 id="CapabilitiesAPI"&gt;Capabilities API&lt;/h2&gt;
&lt;p&gt;
There is the role and capabilities API, but only logged-in users will have a role or any capabilities. A visitor to the site who is not logged-in will thus not have even the &lt;code&gt;read&lt;/code&gt; capability. &lt;code&gt;WP_User::has_cap( 'read' )&lt;/code&gt;, and thus &lt;code&gt;current_user_can( 'read' )&lt;/code&gt;, will return &lt;code&gt;false&lt;/code&gt;, while &lt;code&gt;user_can()&lt;/code&gt; will peremptorily return &lt;code&gt;false&lt;/code&gt; if the user ID passed does not exist before even calling &lt;code&gt;WP_User::has_cap()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Thus, while we can check if a logged-in/existing user can view a post via the capability API, we cannot use it to check whether a non-logged-in user can view the post.&lt;/em&gt;
&lt;/p&gt;
&lt;h2 id="UnderlyingPhilosophy"&gt;Underlying Philosophy&lt;/h2&gt;
&lt;p&gt;
The underlying philosophy that is used within WordPress is that objects such as posts are public by default. &lt;strong&gt;Everything is accessible to everyone unless specifically restricted.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This is, in a word, a blacklist-style approach. The object is public, unless it blacklists/restricts itself in some way.
&lt;/p&gt;
&lt;p&gt;
When an object is public, the capabilities API, and the concept of capabilities in general, no longer applies as to whether that object is accessible. The object is accessible by default.
&lt;/p&gt;
&lt;p&gt;
The question becomes “is this post publicly visible?” rather than “does this user have the ability to view this post?"
&lt;/p&gt;
&lt;p&gt;
The capabilities API, on the other hand, operates on a whitelist philosophy—nobody is allowed to do anything (and thus nobody has any capabilities), unless specifically granted permission.
&lt;/p&gt;
&lt;p&gt;
These two different approaches make sense in different scenarios. However, it starts to get sticky when the two intersect. And that is exactly what happens with the &lt;code&gt;read&lt;/code&gt; capability: we're now checking the whitelist to check a blacklist. And when the user isn't logged in, the capability isn't in the whitelist, which causes everything to get blacklisted—they don't have the capabilities to read any posts at all.
&lt;/p&gt;
&lt;h2 id="Whydoesntthisexplode"&gt;Why doesn't this explode?&lt;/h2&gt;
&lt;p&gt;
Obviously, WordPress has gotten along quite well up to this point without everything flying apart though. Non-logged-in users &lt;em&gt;can&lt;/em&gt; view public posts—otherwise you and I wouldn't be able to see about 25% of the web right now. So yes, of course non-logged-in users do get to view those posts. They are public, they aren't restricted. But they get to view them despite not having the &lt;code&gt;read&lt;/code&gt; capability.
&lt;/p&gt;
&lt;p&gt;
In other words, usually this doesn't cause any issues. That's why nobody has brought it up before (that I know of—probably they have). Why? Because usually posts are retrieved for display via &lt;code&gt;WP_Query&lt;/code&gt;, and it bypasses the &lt;code&gt;read&lt;/code&gt; capability. Instead, it works from the philosophy of public by default discussed above, and internally handles all of the logic for checking if the post is publicly visible or restricted from the current user. So, any time that you are using &lt;code&gt;WP_Query&lt;/code&gt;, you will automatically get all of the posts, minus those that were restricted in some way (blacklisting, as it were).
&lt;/p&gt;
&lt;h2 id="Okaysothenwhocares"&gt;Okay, so then who cares?&lt;/h2&gt;
&lt;p&gt;
Good question. After all, shouldn't we always be using &lt;code&gt;WP_Query&lt;/code&gt; to retrieve posts?
&lt;/p&gt;
&lt;h3 id="PeoplenotusingWP_Query"&gt;People not using &lt;code&gt;WP_Query&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;
Well, yes. But, what if we aren't retrieving a post? What if we have a plugin where we are storing some information that relates to a post in a separate table, and we want to display that information publicly on the site. But because that information references the post in a potentially identifying manner, we can't show it to users who can't view the post. I'd say that's a perfectly valid use-case.
&lt;/p&gt;
&lt;p&gt;
So how would we check if the current user can see the information for a particular post? I know what you were about to suggest: "Use &lt;code&gt;current_user_can()&lt;/code&gt;!" But yeah, now you know why that won't work: that's a capability check, and non-logged-in users will not have any capabilities. So non-logged-in users wouldn't be able to view the information for any of the posts, even those that they can view publicly on the site.
&lt;/p&gt;
&lt;p&gt;
Now, you might say, "Just check if the post is public." Yes, and thanks for telling my how to do that. Should I use the &lt;code&gt;just_check_if_the_post_is_public()&lt;/code&gt; function? :-) That's what this ticket is about.
&lt;/p&gt;
&lt;h3 id="Peopleaddingaccessibilityrestrictions"&gt;People adding accessibility restrictions&lt;/h3&gt;
&lt;p&gt;
Another reason to care about this is that it means that when somebody wants to restrict the visibility of posts they have to hook-in multiple places: in the capabilities API for the &lt;code&gt;read&lt;/code&gt; cap, and for the post retrieval logic in &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
That is not the main focus of this ticket, and it may not really be practical to solve at all. However, I'm not sure how many developers realize that they need to consider both of these things.
&lt;/p&gt;
&lt;h2 id="Sowhatdoyoupropose"&gt;So what do you propose?&lt;/h2&gt;
&lt;p&gt;
In this ticket, I'm &lt;strong&gt;not&lt;/strong&gt; really suggesting that we:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;throw out the &lt;code&gt;read&lt;/code&gt; capability. (Back-compat nightmare.)
&lt;/li&gt;&lt;li&gt;modify the caps API to handle non-logged-in users differently. (Fundamental change in an API, probably not practical.)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I &lt;em&gt;am&lt;/em&gt; suggesting that there is a need for a new API, to formally provide a means of determining whether a post (or any object) is publicly accessible. This API would include a function like &lt;code&gt;is_thing_accessible( $thing_id )&lt;/code&gt; (and perhaps &lt;code&gt;is_thing_accessible_for_user( $user_id, $thing_id )&lt;/code&gt;).
&lt;/p&gt;
&lt;h2 id="Isthatreallyneeded"&gt;Is that &lt;em&gt;really&lt;/em&gt; needed?&lt;/h2&gt;
&lt;p&gt;
Now, I know that some might suggest that this really isn't needed, because you can just check if the post has a public status. That is true in theory, but in practice things are more complex.
&lt;/p&gt;
&lt;p&gt;
First, let me reiterate that what I'm proposing isn't just for posts, it is for any objects, of which posts are one, comments another, users another.
&lt;/p&gt;
&lt;p&gt;
Secondly, using posts as an example,a plugin can add extra restrictions that cause posts with otherwise public stati to not be publicly accessible to all users. So it isn't a viable solution to just duplicate each core check that would normally apply to posts—others might be added by plugins.
&lt;/p&gt;
&lt;p&gt;
For capability checks I don't have to worry about that. I just check for a particular cap and anything that affects that cap will just hook into &lt;code&gt;map_meta_cap&lt;/code&gt; and I never have to know. But if the user is logged out I can't use the capability API, and suddenly the onus is on me to know about every possible restriction that could ever apply to a post, in order to check if the post is public. I should be able to check &lt;code&gt;is_thing_accessible( $post_id )&lt;/code&gt; and just forget it, same as I can do with &lt;code&gt;current_user_can( 'read_post', $post_id )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We are talking about non-logged-in users here after all. If a restriction isn't taken into account, it doesn't just mean that some less privileged users can view the object, it means that everybody can.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476106801005182"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;brought this up&lt;/a&gt; and &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476107282005192"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;discussed it with @johnbillion&lt;/a&gt; in the &lt;code&gt;#core&lt;/code&gt; channel on Slack before creating this (admittedly long-winded) ticket.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29462 (comment pagination in reverse order should display a full number of ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 10 Oct 2016 15:22:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29462#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29462#comment:23/1476112928348651</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38275 (Single wildcard character in .htaccess requests any page) created</title>
      
        <dc:creator>martinthehorrible</dc:creator>

      <pubDate>Mon, 10 Oct 2016 15:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38275</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38275/1476112194488505</guid>
      <description>&lt;p&gt;
For example, if the site is &lt;a class="ext-link" href="http://www.mysite.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mysite.com&lt;/a&gt;, requesting &lt;a class="ext-link" href="http://www.mysite.com/s"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mysite.com/s&lt;/a&gt; will redirect to a permalink beginning with 's'.  This sends the user to an unexpected page.
&lt;/p&gt;
&lt;p&gt;
This request should redirect to 404 when the page '&lt;a class="ext-link" href="http://www.mysite.com/s"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mysite.com/s&lt;/a&gt;' doesn't exist.
&lt;/p&gt;
&lt;p&gt;
In the WP installation folder, the following .htaccess rewrite rule causes this problem:
RewriteRule . /index.php [L]
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38234 (wp_get_users_with_no_role() generates query based on role display ...) updated</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Mon, 10 Oct 2016 15:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38234#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38234#comment:2/1476112043904846</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38234.patch attached to Ticket #38234</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Mon, 10 Oct 2016 15:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38234/38234.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38234/38234.patch/1476111994707728</guid>
      <description>&lt;p&gt;
Patch to use role name instead of role display name in wp_get_users_with_no_role()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35685 (Default HTTP schema when adding a custom link) updated</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:51:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35685#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35685#comment:7/1476111087763424</guid>
      <description>&lt;p&gt;
Sorry about that.
I only tested with svn patch not with grunt patch.
I uploaded a new patch through grunt upload_patch.
It applies for me now with svn patch and grunt patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35685.2.diff attached to Ticket #35685</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35685/35685.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35685/35685.2.diff/1476110562450018</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38191 (Further hardening of the role and capability tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38191#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38191#comment:7/1476110375523726</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38769" title="Role/Capability: Add tests for all user roles that check custom ..."&gt;38769&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Role/Capability: Add tests for all user roles that check custom capabilities that do not have any form of handling (eg. in a &lt;code&gt;map_meta_cap&lt;/code&gt; filter).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38191" title="#38191: defect (bug): Further hardening of the role and capability tests (closed: fixed)"&gt;#38191&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38769]: Role/Capability: Add tests for all user roles that check custom ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38769/1476110375060244</guid>
      <description>&lt;p&gt;
Role/Capability: Add tests for all user roles that check custom capabilities that do not have any form of handling (eg. in a &lt;code&gt;map_meta_cap&lt;/code&gt; filter).
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38191" title="#38191: defect (bug): Further hardening of the role and capability tests (closed: fixed)"&gt;#38191&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:94/1476109063338971</guid>
      <description>&lt;p&gt;
Just tried it on Safari version 10.0 on macOS Sierra (TechReviews' VirtualBox) and the behaviour's the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38274 (wp_set_auth_cookie and FileSystem relation) created</title>
      
        <dc:creator>rezamarandi</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38274/1476108873888286</guid>
      <description>&lt;p&gt;
guys i have a new fresh installed on digital ocean server
my theme do wordpress reseting and then create new auth cookie with bottom code :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_clear_auth_cookie&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;wp_set_current_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;user_login&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$session_tokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;delete_user_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'session_tokens'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;update_user_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'session_tokens'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$session_tokens&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;wp_set_auth_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wp_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;user_login&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
its interesting because this piece of code will not work when the ownership of wordpress directory is not apache user for example :
someuser:www-data
but it will works when we change ownership of server to : www-data:www-data
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37492 (Unifying translation strings in wp_die()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37492#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37492#comment:11/1476108402629853</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1476108399000029"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37940 (WordPress email subject update) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37940#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37940#comment:4/1476108402532299</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1476108399000029"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34848 (Add support for updating post meta in bulk) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 13:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34848#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34848#comment:21/1476107163461427</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476107160005190"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 10 Oct 2016 13:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271#comment:2/1476105251735064</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38271.2.diff attached to Ticket #38271</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 10 Oct 2016 13:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38271/38271.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38271/38271.2.diff/1476104433992314</guid>
      <description>&lt;p&gt;
use yoda conditional
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 10 Oct 2016 13:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271#comment:1/1476104410372106</guid>
      <description>&lt;p&gt;
@dlh thanks for the patch! This looks reasonable, I tested before and after, verified the error you mentioned and see it is solved by the patch. I am attaching a slightly updated version switching to a Yoda conditional.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 10 Oct 2016 12:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:54/1476103165153649</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31652" title="#31652: defect (bug): Drag/Drop Ordering of Media Does Not Work in Chrome on touch enabled ... (closed: fixed)"&gt;#31652&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@gsarig @madis @programmin @snowboardmommy @earnjam @andru.bonus - I believe I tracked down the issue here to a general flaw in the way we enqueue "Touch Punch" - the jQuery library we use to make jQuery UI draggable/sortable work on touch devices. Our logic was flawed and was only enqueueing the script correctly on certain devices and definitely not on browsers like chrome on desktop windows with touch screen.
&lt;/p&gt;
&lt;p&gt;
Can you please test the final patch on that ticket - &lt;a href="https://core.trac.wordpress.org/attachment/ticket/31652/31652.2.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/31652/31652.2.diff&lt;/a&gt; and let me know if it resolves the sortable functionality on your devices? Also can you please mention the physical device your are testing on and specifically whether it is a touch screen device as this seems to be the root of the issue.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Mon, 10 Oct 2016 12:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:21/1476102625401451</guid>
      <description>&lt;p&gt;
Good points, pento.
&lt;/p&gt;
&lt;p&gt;
Peter, good idea about creating canvas once. I think adding defer won't do anything because from what I see in the code, the script is added after DOMContentLoaded. I think defer just executes before the DOMContentLoaded event. So by the time a script element has been created, the DOMContentLoaded is already past. So the behaviour should be the same either way (with or without defer).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 12:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:73/1476101152702821</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/26511.8.diff" title="Attachment '26511.8.diff' in Ticket #26511"&gt;26511.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/26511.8.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduces &lt;code&gt;is_locale_switched()&lt;/code&gt; including tests.
&lt;/li&gt;&lt;li&gt;Switch locale in the files / functions mentioned above. Exceptions: &lt;code&gt;wpmu_signup_blog_notification()&lt;/code&gt; and &lt;code&gt;wpmu_signup_user_notification()&lt;/code&gt; (no user exists yet) as well as &lt;code&gt;wp_notify_postauthor()&lt;/code&gt;, &lt;code&gt;wp_notify_moderator()&lt;/code&gt; (need to be refactored). No tests included yet.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26511.8.diff attached to Ticket #26511</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 12:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/26511.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/26511.8.diff/1476100807983282</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37188 (Add New Media button does not give aria feedback) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 11:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37188#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37188#comment:5/1476097887957029</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think moving the dropzone up makes a lot of sense. You are clicking 'add' and having it appear below another UI element is a weird experience. For reference here is what we currently have and shows the UX hitch.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/0iudSZn_RT.gif"&gt;&lt;img src="https://cldup.com/0iudSZn_RT.gif" alt="https://cldup.com/0iudSZn_RT.gif" crossorigin="anonymous" title="https://cldup.com/0iudSZn_RT.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 10 Oct 2016 11:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:93/1476097759369657</guid>
      <description>&lt;p&gt;
Note in order for the OP to be fixed, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/24661" title="#24661: defect (bug): remove_accents is not removing combining accents (new)"&gt;#24661&lt;/a&gt; needs to be fixed also, using eg patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/24661/24661.5.patch"&gt;24661.5.patch&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Maybe Safari's behaviour has changed in version 10 but I can reproduce it with the latest nightly (4.7-alpha-38766) running on Ubuntu 16.04 using Safari (version 6) and Firefox (48.0.1) or Chrome (49.0.2623.112) on OS X 10.8 Mountain Lion (VirtualBox Hackintosh).
&lt;/p&gt;
&lt;p&gt;
Upload a file with diacritics eg "forêt.png" using Firefox or Chrome on OS X. The file will be uploaded as "2016/10/fore\xcc\x82t.png" (NFD). Then view the uploaded file in Safari ("wp-admin/upload.php"). Safari converts the filename to "2016/10/for\xc3\xaat.png" (NFC) and it doesn't display. If the two patches &lt;a href="https://core.trac.wordpress.org/attachment/ticket/22363/22363.12.patch"&gt;22363.12.patch&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/attachment/ticket/24661/24661.5.patch"&gt;24661.5.patch&lt;/a&gt; are applied then the file is uploaded as "2016/10/foret.png" so the issue doesn't arise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 11:07:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:97/1476097678845792</guid>
      <description>&lt;p&gt;
Thanks firstly to @pento and @bradyvercher for getting us to a working prototype - so cool to interact with. I am still putting the UI adjustments to one side as want to focus on actually how this works - we can easily go back to mock from there.
&lt;/p&gt;
&lt;p&gt;
For those following along, here is what we have currently:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/HnrxNkFRRB.gif"&gt;&lt;img src="https://cldup.com/HnrxNkFRRB.gif" alt="https://cldup.com/HnrxNkFRRB.gif" crossorigin="anonymous" title="https://cldup.com/HnrxNkFRRB.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It seems that the page template always has to be the top content. Is that the case? I found this by using 2 menu items - one being the front page itself that was assigned as template.
&lt;/p&gt;
&lt;p&gt;
There also is a little odd behaviour where if I don't search I can click 'x' on search and loose all pages shown. This could be just be something to do with reusing UI I guess?
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/AKntRiQsd6.gif"&gt;&lt;img src="https://cldup.com/AKntRiQsd6.gif" alt="https://cldup.com/AKntRiQsd6.gif" crossorigin="anonymous" title="https://cldup.com/AKntRiQsd6.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Incase we do move onto UI adjustments there are a few I would like to see brought in sooner to allow easy judgement:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The up and down arrows
&lt;/li&gt;&lt;li&gt;Remove 'page' from the page listing when searching / adding
&lt;/li&gt;&lt;li&gt;Line breaks in the panel to reduce the panel clutter
&lt;/li&gt;&lt;li&gt;Add ability to remove pages
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38216 (Plugin details modal tabs) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38216#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38216#comment:2/1476096426160615</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@butterflymedia I can not replicate this issue. As a result I am thinking this either has to do with another plugin you are using or the browser you are. This is what I see in Chrome and also in Firefox:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/aXnr1EiNG0.png"&gt;&lt;img width="50%" alt="https://cldup.com/aXnr1EiNG0.png" title="https://cldup.com/aXnr1EiNG0.png" crossorigin="anonymous" src="https://cldup.com/aXnr1EiNG0.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Could you please expand on what browser and OS you are using? Maybe even the device if not a desktop, thanks. If you could also try without having any other plugins incase that is something implicating this. Also maybe using a default theme - unlikely to interfere but worth testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:17/1476096213215940</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@chriscct7 that seems to make sense to use the search format then, thanks for giving the UI context.
&lt;/p&gt;
&lt;p&gt;
I found one thing that made me wonder in testing. I didn't see category showing but I do author:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/nw4boMBUdE.gif"&gt;&lt;img src="https://cldup.com/nw4boMBUdE.gif" alt="https://cldup.com/nw4boMBUdE.gif" crossorigin="anonymous" title="https://cldup.com/nw4boMBUdE.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Is that a bug? I expected to see it even for 'Uncategorized'. I think if we fix that up then I would say the UI is ready to merge and thanks for keeping going with this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:96/1476096205375855</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
filter the permalinks for pages registered as sections to point to the home URL with the post ID as a hash
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure about this. Why do we want to restrict the pages to be accessible exclusively from the homepage? It seem a decision up to the site owner. Some links in the homepage might point to the same page, that will also act as a perfect landing page, or being entirely disconnected from the menu and not indexed.
&lt;/p&gt;
&lt;p&gt;
I find also not ideal in general to force rewrite the URL in that way to the homepage, as the resource is simply not available at that location, so that URL either never existed, or changed shape in such a form that is not relevant having a redirect, but it's better handled by a 404 page.
&lt;/p&gt;
&lt;p&gt;
So: what's the rationale behind that decision?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:53/1476095562705887</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As this is a bug, not sure it needs ui-feedback, so for now removing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35496 (Quick Edit error messages UI improvements) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35496#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35496#comment:6/1476095206432699</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35496 (Quick Edit error messages UI improvements) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35496#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35496#comment:5/1476095193024049</guid>
      <description>&lt;p&gt;
+1 to that @melchoyce - looks so much better with a box and error message that way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35685 (Default HTTP schema when adding a custom link) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 09:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35685#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35685#comment:6/1476093599656452</guid>
      <description>&lt;p&gt;
@christophherr unfortunately I don't seem to be able to get the patch to work. Could you check the patch again, please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22355.1.php attached to Ticket #13239</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Mon, 10 Oct 2016 08:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/22355.1.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/22355.1.php/1476089615484775</guid>
      <description>&lt;p&gt;
Update of 22355. Loop issue, extra filter, parenthesis tweaks.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 10 Oct 2016 08:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:99/1476088314390812</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:94" title="Comment 94"&gt;ramiy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, I know. Using those functions we can't remove all the globals, but we can replace the vast majority.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My point was that in order to be able to deprecate the globals we need more than functions that can access them, we'd also need to add functions/functionality than can update them too.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:97" title="Comment 97"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, I'd like to point out that the goal is not to improve first-time readability (or to even maintain it), but to improve maintainability.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That presumes there is only one applicable goal and/or that optimizing for maintainability would &lt;em&gt;not&lt;/em&gt; have a negative effect on any other goals.  Better &lt;strong&gt;to verify that there are no other goals the core team thinks are of higher priority&lt;/strong&gt; than assume that maintainability is the only goal worth optimizing for.
&lt;/p&gt;
&lt;p&gt;
Further, it would be great if you could give some specific use-case examples where the fact that &lt;code&gt;$wpdb&lt;/code&gt; is a global variable actually caused real world harm vs. discussing as a theoretical concern.
&lt;/p&gt;
&lt;p&gt;
Personally, while I complete understand and agree with the theoretical concern when discussing an abstract use of global variables I cannot remember one (1) single time that I have run into a problem in my working professionally with WordPress when I had wish for practical reasons that $wpdb was not a global variable. &lt;em&gt;(Okay, there has been one reason and that is for convenience of not having to first declare it &lt;code&gt;global&lt;/code&gt;. But that's syntatical sugar, not a maintenance concern, and in our own libraries we have solved that with &lt;code&gt;WPLib::wpdb()&lt;/code&gt;.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
That said, I would even argue that in WordPress core that most of the well-known globals are not a serious maintainability concern because they are in-fact well-known and there is an army of developers willing and able to maintain any code that contains globals.  Sure, it may &lt;em&gt;feel&lt;/em&gt; dirty to work with &lt;code&gt;global&lt;/code&gt; variables, but what is practical and effective does feel dirty. &lt;code&gt;$wpdb&lt;/code&gt; fits into this category.
&lt;/p&gt;
&lt;p&gt;
If for example we deprecating &lt;code&gt;$wpdb&lt;/code&gt; and doing so were to harm backward compatibility or even harm understandability among a significant number of the many people who implement WordPress sites but do not understand most of the syntax and semantics of classes and methods then optimizing for maintainability here could be more harmful than not. &lt;em&gt;(I'm not taking a side on this one, I am pointing about that pursuing maintainability should not be viewed without question as the quest for the holy grail.)&lt;/em&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
OTOH, it would likely make little sense to introduce new globals as WordPress' code base evolves because these potential new globals are not yet well-known.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Mon, 10 Oct 2016 07:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:98/1476085930149396</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:95" title="Comment 95"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hiding the &lt;code&gt;$wpdb&lt;/code&gt; global behind a property decreases the readability of the code, as well as causing irrelevant output when dumping an object.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Increasing responsibilities of each methods increases readability? How? The advantage of having a dependency (like &lt;code&gt;wpdb&lt;/code&gt;) in a property is, that you can rely on its type and existence when you use it. You don't need to care about whether it's in place or even how it came to place.
&lt;/p&gt;
&lt;p&gt;
What you actually do is implementing a shorthand variable. But that could have been done also like that:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="c1"&gt;//...
&lt;/span&gt;   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But instead you import a global variable (which could be of any type, or even not set) to the local scope &lt;em&gt;in every single&lt;/em&gt; method. That's actually decreases readability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) updated</title>
      
        <dc:creator>yohgaki</dc:creator>

      <pubDate>Mon, 10 Oct 2016 07:39:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273#comment:4/1476085169286058</guid>
      <description>&lt;p&gt;
Thank you for your comment!!
It turned out my wp-config.php was wrong. Apologies for confusion. It seems I messed up /etc/hosts.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Administration_Over_SSL"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Administration_Over_SSL&lt;/a&gt;
It says "Note: FORCE_SSL_ADMIN should be set before wp-settings.php is required.", but it does not state any other SSL related constant/vars must be defined before wp-settings.php.
&lt;/p&gt;
&lt;p&gt;
BAD - This only fixes redirect loop!
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/** Sets up WordPress vars and included files. */&lt;/span&gt;
&lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'wp-settings.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'HTTPS'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'on'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;&amp;lt;== Fix redirect loop, but it does NOT work.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
GOOD
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'HTTPS'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'on'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="sd"&gt;/** Sets up WordPress vars and included files. */&lt;/span&gt;
&lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'wp-settings.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I append additional config at the end of config file mostly. If BAD config didn't fix redirect loop, I might have noticed my mistake earlier. I think it may be good to mention this explicitly in the document, or better yet add comment that "wp-settings.php" should be included after additional var/constant definitions.
&lt;/p&gt;
&lt;p&gt;
For the record, working wp-config.php &lt;code&gt;# tail -n 30 wp-config.php&lt;/code&gt; is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;
/**
 * For developers: WordPress debugging mode.
 *
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 */
define('WP_DEBUG', false);
/* That's all, stop editing! Happy blogging. */
/** Absolute path to the WordPress directory. */
if ( !defined('ABSPATH') )
        define('ABSPATH', dirname(__FILE__) . '/');
/** SSL Support **/
function isSecure() {
  if (!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) &amp;amp;&amp;amp; $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') {
    $_SERVER['HTTPS'] = 'on';
    return TRUE;
  }
  return FALSE;
}
$web_site     = 'blog.ohgaki.net';
$schema       = isSecure() ? 'https://' : 'http://';
$web_site_url = $schema . $web_site;
define('WP_HOME',    $web_site_url);
define('WP_SITEURL', $web_site_url);
/** Sets up WordPress vars and included files. */
require_once(ABSPATH . 'wp-settings.php'); // &amp;lt;&amp;lt;== THIS MUST BE AT THE END OF wp-config.php
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 07:13:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:92/1476083581330995</guid>
      <description>&lt;p&gt;
The latest patch does what it says it does, but I'm actually having a hard time reproducing this on Safari 10 (macOS Sierra), so I can't tell for sure. Images with diacritics are displayed just fine in the media library and the front end. The only problem Safari has is with the permalinks, i.e.. &lt;code&gt;example.com/aaâãäåçeeêëiiîïñooôõöuuûüyÿ/&lt;/code&gt; works in Safari, but in the other browsers it's &lt;code&gt;example.com/aaa%CC%82a%CC%83a%CC%88a%CC%8Ac%CC%A7eee%CC%82e%CC%88iii%CC%82i%CC%88n%CC%83ooo%CC%82o%CC%83o%CC%88uuu%CC%82u%CC%88yy%CC%88/&lt;/code&gt;, which is still a problem with the current patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 10 Oct 2016 07:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:97/1476082902088800</guid>
      <description>&lt;p&gt;
I totally get that such changes should be properly evaluated, and the Core-to-be-released is probably not the best place to run experiments...
&lt;/p&gt;
&lt;p&gt;
However, I'd like to point out that the goal is not to improve first-time readability (or to even maintain it), but to improve maintainability. Globals like this are technical debt, and I agree that it might be easier to read the code once when you just have them openly accessible like this. It also means that you'll need to read that code in dozens of locations, dozens of times, to get a clearer idea of whether you can make a change or not.
&lt;/p&gt;
&lt;p&gt;
Improving maintainability means that the code might be more complicated to read the first time around. But you won't have to ponder over it for hours to muster up the courage to make a change...
&lt;/p&gt;
&lt;p&gt;
So, yes, I'm all for reverting and discussing how best to tackle this. But we just needn't bother if "first-time readability" is seen as an absolute priority...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22249 (Add ability to set or remove attributes on enqueued scripts and styles.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22249#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22249#comment:42/1476082487566201</guid>
      <description>&lt;p&gt;
Subresource integrity is an official W3C recommendation and as such more browsers will add support for it. +1 for supporting it in WordPress.
&lt;/p&gt;
&lt;p&gt;
See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33948" title="#33948: enhancement: Implement subresource integrity (SRI) (new)"&gt;#33948&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:53:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:20/1476082402348261</guid>
      <description>&lt;p&gt;
For &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37817/37817.diff" title="Attachment '37817.diff' in Ticket #37817"&gt;37817.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37817/37817.diff" title="Download"&gt;​&lt;/a&gt;, I'm inclined to change the AU flag test to UN, so it's a flag from emoji4. That's probably going to give us the best result for "does this client render all flags?".
&lt;/p&gt;
&lt;p&gt;
As @superpoincare points out, rainbow flag is emoji4, so that would make the test two flags from emoji4. I'm inclined to keep the two tests, though, until we see that clients implement both. (Tech companies have historically been fairly awful at implementing anything considered "controversial" (see: middle finger emoji), so I wouldn't be surprised if some of them "forget" to implement the rainbow flag.)
&lt;/p&gt;
&lt;p&gt;
We still need to keep the separate flag and emoji4 tests, however. Historically, clients have not been particularly vigorous about implementing flags, so it's good for us to maintain the three states of replacing emoji characters: replace nothing, replace only flags, and replace everything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33948 (Implement subresource integrity (SRI)) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:52:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33948#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33948#comment:5/1476082378112176</guid>
      <description>&lt;p&gt;
Sounds like a duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22249" title="#22249: enhancement: Add ability to set or remove attributes on enqueued scripts and styles. (assigned)"&gt;#22249&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:41:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:96/1476081701084359</guid>
      <description>&lt;p&gt;
A side note to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;[38768]&lt;/a&gt; - I'm cool with removing globals, but the idea needs to be explored further before it's ready for Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:95/1476081423529502</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;38768&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Restore usage of &lt;code&gt;$wpdb&lt;/code&gt;, instead of &lt;code&gt;$this-&amp;gt;db&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hiding the &lt;code&gt;$wpdb&lt;/code&gt; global behind a property decreases the readability of the code, as well as causing irrelevant output when dumping an object.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reverts &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38275" title="Query: add a `protected` field, `$db`, (composition, as it were) to ..."&gt;[38275]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38278" title="Unit Tests: skip checking the value in ..."&gt;[38278]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38279" title="Query: use composition for `$db` in `WP_Query`, removes need to import ..."&gt;[38279]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38280" title="Query: use composition for `$db` in `WP_Date_Query`, removes need to ..."&gt;[38280]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38387" title="Roles: set a property, `$db`, on `WP_Roles` to reduce global imports.
 ..."&gt;[38387]&lt;/a&gt;.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38768]: General: Restore usage of `$wpdb`, instead of `$this-&gt;db`.  Hiding the ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38768/1476081422951448</guid>
      <description>&lt;p&gt;
General: Restore usage of &lt;code&gt;$wpdb&lt;/code&gt;, instead of &lt;code&gt;$this-&amp;gt;db&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Hiding the &lt;code&gt;$wpdb&lt;/code&gt; global behind a property decreases the readability of the code, as well as causing irrelevant output when dumping an object.
&lt;/p&gt;
&lt;p&gt;
Reverts &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38275" title="Query: add a `protected` field, `$db`, (composition, as it were) to ..."&gt;[38275]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38278" title="Unit Tests: skip checking the value in ..."&gt;[38278]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38279" title="Query: use composition for `$db` in `WP_Query`, removes need to import ..."&gt;[38279]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38280" title="Query: use composition for `$db` in `WP_Date_Query`, removes need to ..."&gt;[38280]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38387" title="Roles: set a property, `$db`, on `WP_Roles` to reduce global imports.
 ..."&gt;[38387]&lt;/a&gt;.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 05:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:95/1476078569572983</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.2.diff" title="Attachment '37974.2.diff' in Ticket #37974"&gt;37974.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.2.diff" title="Download"&gt;​&lt;/a&gt; adds support for &lt;code&gt;front_page_sections&lt;/code&gt; to &lt;code&gt;WP_Query&lt;/code&gt;, so that sections now show on the front page, and live-ish previews happen.
&lt;/p&gt;
&lt;p&gt;
@bradyvercher: I quite like the direction you went with redirecting permalinks, it's a neat solution with forwards and backwards compatibility.
&lt;/p&gt;
&lt;p&gt;
I think it's worth investigating having &lt;code&gt;http://example.com/about/&lt;/code&gt; redirected to &lt;code&gt;http://example.com/#about&lt;/code&gt;, rather than &lt;code&gt;#post-65&lt;/code&gt;. This is a bit trickier, of course, but much nicer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.2.diff attached to Ticket #37974</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 05:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.2.diff/1476077800592325</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 04:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273#comment:3/1476073694113515</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
All HTTP traffic is redirected to HTTPS by nginx reverse proxy, backend web server is apache that only waits HTTP
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I missed this when reading the ticket.
&lt;/p&gt;
&lt;p&gt;
In short: you should consider configuring your nginx/apache configuration better. Apache (And therefor PHP &amp;amp; WordPress) has no idea that it's running in a SSL environment, which is the root cause of your bad experience.
&lt;/p&gt;
&lt;p&gt;
The standard method would be using &lt;code&gt;X-Real-IP&lt;/code&gt; and &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; to pass the end-users IP and the SSL status through to Apache, when combined with the appropriate Apache configs would allow everything to work transparently.
&lt;/p&gt;
&lt;p&gt;
In longer form..
WordPress is unable to detect that it's running on a SSL service, it see's HTTP requests, attempts to redirect to HTTPS requests and ends up in a loop.
During install, WordPress attempts to determine it's own URL, and not seeing the HTTPS protocol, sets to a &lt;code&gt;http://&lt;/code&gt; url.
&lt;/p&gt;
&lt;p&gt;
In the event your server is not configured to pass through the HTTPS status, then it's up to you to setup WordPress correctly.
That involves either a) creating the &lt;code&gt;wp-config.php&lt;/code&gt; file manually, and adding &lt;code&gt;$_SERVER['HTTPS']='on';&lt;/code&gt; to it prior to install or b) Installing WordPress, and correcting the &lt;code&gt;siteurl&lt;/code&gt; and &lt;code&gt;home&lt;/code&gt; options in the database to &lt;code&gt;https://&lt;/code&gt; (or using the constants in wp-config.php).
&lt;/p&gt;
&lt;p&gt;
In that case, WordPress has no idea that it's being installed on a HTTPS service until you add &lt;code&gt;$_SERVER['HTTPS']='on';&lt;/code&gt; to your wp-config.php file, as a result, it's up to you to configure the service correctly (both at the nginx &amp;amp; apache layers) and/or set the URLs for WordPress correctly.
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15733" title="#15733: defect (bug): Wordpress Installation behind reverse-proxy ssl redirect loop (closed: wontfix)"&gt;#15733&lt;/a&gt; and the many many many other tickets about SSL and bad server configs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 03:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:2/1476070905314569</guid>
      <description>&lt;p&gt;
After debugging this on WordPress.com, I believe this deserves fixing much deeper than this as well.
&lt;/p&gt;
&lt;p&gt;
In my case, it seems the issue is that &lt;code&gt;get_the_terms()&lt;/code&gt; is returning &lt;code&gt; array( WP_Term, WP_Error, WP_Term ) &lt;/code&gt; - note the WP_Error in the middle, which trips up &lt;code&gt;get_term_link()&lt;/code&gt; and returns that &lt;code&gt;WP_Error&lt;/code&gt; there.
&lt;/p&gt;
&lt;p&gt;
The WP_Error is a &lt;code&gt;invalid_term =&amp;gt; Empty Term&lt;/code&gt; error, which appears to be caused by &lt;code&gt;get_object_term_cache()&lt;/code&gt; calling &lt;code&gt;get_term()&lt;/code&gt; on the failure of a &lt;code&gt;wp_cache_get()&lt;/code&gt; (which should exist, as it was just set by &lt;code&gt;_prime_term_caches()&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I suspect this is caused by out-of-sync term caches.. but not sure exactly how that's happening.
It does look like &lt;code&gt;get_object_term_cache()&lt;/code&gt; isn't designed to handle cases where &lt;code&gt;_prime_term_caches()&lt;/code&gt; doesn't cache all the terms.
Based on the code in &lt;code&gt;get_object_term_cache()&lt;/code&gt; I'd suggest that maybe &lt;code&gt;get_term()&lt;/code&gt; should be called directly rather than &lt;code&gt;wp_cache_get( $term_id, 'terms' )&lt;/code&gt; - and &lt;code&gt;WP_Error&lt;/code&gt; instances from that should be floated up the call chain.
&lt;/p&gt;
&lt;p&gt;
cc @boonebgorges  re &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) updated</title>
      
        <dc:creator>yohgaki</dc:creator>

      <pubDate>Mon, 10 Oct 2016 03:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273#comment:2/1476070718188509</guid>
      <description>&lt;p&gt;
I've tried with standalone https server. You can reproduce this with local self signed certificate https server also. (Just ignore TLS warnings/errors)
&lt;/p&gt;
&lt;p&gt;
Install with "&lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;" URL or change site URL from "&lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt;" to "&lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;" after install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22976 (Remove reference to category to tag converter from the tools page) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 01:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22976#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22976#comment:8/1476063372793929</guid>
      <description>&lt;p&gt;
I see nothing wrong with leaving it in the Importer list, or at least until the importer list gets a makeover..
&lt;/p&gt;
&lt;p&gt;
I see no reason to keep it in the Tools section though, so +1 for removal from me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38255 (inclusion of javascript script) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 01:34:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38255#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38255#comment:1/1476063295355368</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @nmoral and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
I'll be honest - I'm not 100% sure on what you're asking for here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When I was working on my themes. I tried to include scripts with Javascript src wp but always include scripts with href.
I find class.wp-scripts.php always add base url to my src.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This has to be the expected behaviour, since all assets need to be referenced by absolute URL's, can you explain it with a example perhaps?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
1 - just do not replace the data from themes
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It simply builds a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag based on the data a theme provides, once again, and example of what you get, and what you expect would greatly help
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
2 - allow possibility for developer to choose to add automaticly base_url for javascript.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The base_url for Javascript is always going to be the sites home_url, there's no really any way around that..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 00:15:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273#comment:1/1476058544381319</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;add_header Content-Security-Policy upgrade-insecure-requests;&lt;/code&gt; is needed for nice installation page, but this is minor issue
Add &lt;code&gt;$_SERVER['HTTPS']='on';&lt;/code&gt; to wp-config.php to avoid redirect loop.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This part sounds like the HTTPS status from nginx isn't being passed through to PHP correctly.
Can you provide example contents of &lt;code&gt;$_SERVER&lt;/code&gt; on your install before WordPress loads?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36984 (Customizer Menus: Show Pages at the top of the list, expanded) reopened</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 10 Oct 2016 00:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36984#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36984#comment:6/1476058254103768</guid>
      <description>&lt;p&gt;
Sorry, this is the first time I've seen this ticket.
&lt;/p&gt;
&lt;p&gt;
Pages should not be separated from the other post type sections by custom links - links probably need to remain above pages for that reason. In other words, all available menu item types should be grouped by object type - custom, post types, and taxonomies. Custom links is functionality different, so it shouldn't be placed in the middle of the other sections.
&lt;/p&gt;
&lt;p&gt;
I'm okay with auto-expanding pages, but we should probably user test this. We have quite a lot of "before" testing, most recently when users played with menus during the customize themes testing, and there is always confusion here. We should verify that this either helps or doesn't make things worse.
&lt;/p&gt;
&lt;p&gt;
We should also add before/after screenshots to the ticket for desktop and mobile. Does auto-expanding make sense on small screens as well?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item>
   </channel>
</rss>