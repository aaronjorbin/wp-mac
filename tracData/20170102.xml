<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) updated</title>
      
        <dc:creator>ccprog</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:4/1483397166379331</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15953 (when category slug is changed, old uri also should redirect to new, as ...) updated</title>
      
        <dc:creator>kevinlangleyjr</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15953#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15953#comment:7/1483396928601038</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a patch above with functionality and the unit tests for it
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15953.patch attached to Ticket #15953</title>
      
        <dc:creator>kevinlangleyjr</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15953/15953.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15953/15953.patch/1483396873670785</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) updated</title>
      
        <dc:creator>ccprog</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:3/1483396296307413</guid>
      <description>&lt;p&gt;
The public website has PHP 5.6.27, Apache/2.2.31 (Unix) with this .htaccess:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# BEGIN WordPress
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
&amp;lt;/IfModule&amp;gt;
# END WordPress
&lt;/pre&gt;&lt;p&gt;
cgi-fcgi settings:
&lt;/p&gt;
&lt;pre class="wiki"&gt;cgi.check_shebang_line	1	1
cgi.discard_path	0	0
cgi.fix_pathinfo	1	1
cgi.force_redirect	0	0
cgi.ignore_repeated_errors	1	1
cgi.nph	0	0
cgi.redirect_status_env	no value	no value
cgi.rfc2616_headers	0	0
fastcgi.logging	1	1
&lt;/pre&gt;&lt;p&gt;
Permalinks settings are "Month and name", Link header points to &lt;code&gt;/wp-json/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
My development system is a PHP 5.6.29-0+deb8u1, lighttpd/1.4.35, no equivalent to .htaccess.
&lt;/p&gt;
&lt;p&gt;
cgi-fcgi settings:
&lt;/p&gt;
&lt;pre class="wiki"&gt;cgi.check_shebang_line	1	1
cgi.discard_path	0	0
cgi.fix_pathinfo	1	1
cgi.force_redirect	1	1
cgi.nph	0	0
cgi.redirect_status_env	no value	no value
cgi.rfc2616_headers	0	0
fastcgi.logging	1	1
&lt;/pre&gt;&lt;p&gt;
Permalinks settings are "Post name", Link header points to &lt;code&gt;/index.php/wp-json/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I am aware that &lt;code&gt;?rest_route=/&lt;/code&gt; works, but that is not what the Link header and &lt;code&gt;rest_url('')&lt;/code&gt; deliver, and therefore autodiscovery fails. For example in the &lt;a class="ext-link" href="http://wordpress.org/plugins/rest-api-console/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;REST API Console&lt;/a&gt; plugin, the reference panel remains empty.
&lt;/p&gt;
&lt;p&gt;
The essence is, as I understand it now, there are setups where
&lt;/p&gt;
&lt;pre class="wiki"&gt;$_SERVER[REQUEST_URI] = '/index.php/wp-json/'
$_SERVER[PATH_INFO] = '/wp-json/'
&lt;/pre&gt;&lt;p&gt;
The uri is then run through wp_rewrite, but PATH_INFO is not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39389 (Customize: Make sure selective refreshed partial placement is scrolled ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39389#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39389#comment:5/1483395905278648</guid>
      <description>&lt;p&gt;
I've been trying out the implementation in JS Widgets and it's been quite annoying for the scrolling to happen whenever the widget changes. Limiting it to just when the control is expanded is working better for me. I agree that the scrolling shouldn't be done if the user clicked the edit shortcut as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:11:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:1/1483395098866409</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.diff" title="Attachment '39441.diff' in Ticket #39441"&gt;39441.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.diff" title="Download"&gt;​&lt;/a&gt; is an initial take on the technical part of the improvements from the ticket description (except implementing the single array parameter support of &lt;code&gt;add_settings_field()&lt;/code&gt;). What the patch does:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Support passing one out of a few predefined strings as the &lt;code&gt;$callback&lt;/code&gt; parameter in &lt;code&gt;add_settings_field()&lt;/code&gt;, which then refer to core callback functions (happens in &lt;code&gt;do_settings_fields()&lt;/code&gt;): What these strings and core-supported field types are needs to be discussed, I just added a few very basic ones that I think we should support. Four of the five callbacks are actually not yet implemented and only exist for demonstration purposes.
&lt;/li&gt;&lt;li&gt;Enhance the &lt;code&gt;$args&lt;/code&gt; parameter in &lt;code&gt;add_settings_field()&lt;/code&gt;. It now supports more arguments and does some sanitization by filling defaults in. The only complex new argument is probably the &lt;code&gt;value_callback&lt;/code&gt; one: It will be used to fetch the current value for the field. It usually does not need to be used, as most developers are probably using a regular &lt;code&gt;get_option()&lt;/code&gt; call here. The default value for this argument is a new function &lt;code&gt;get_settings_field_option()&lt;/code&gt; which retrieves the option based on the field's &lt;code&gt;input_name&lt;/code&gt; argument. The function also supports fetching option values for multidimensional names, similar how it happens currently in the Customizer.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I also created a small plugin &lt;a class="missing attachment"&gt;settings-api-tests.php&lt;/a&gt; that can be used to test this functionality. Note that some fields there won't have any output yet, simply because I didn't implement their functions yet, as I mentioned above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39441.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 02 Jan 2017 21:59:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.diff/1483394370431172</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 02 Jan 2017 21:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441/1483394294067454</guid>
      <description>&lt;p&gt;
Today a kickoff meeting for the Settings API took place on Slack (Archive: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1483376507000492"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/accessibility/p1483376507000492&lt;/a&gt;) where we discussed ways to improve it, both in terms of accessibility and ease of use.
&lt;/p&gt;
&lt;p&gt;
After a good discussion we came to the conclusion that we would like to focus on the existing Settings API for now and do what we can to improve it. The Fields API project will eventually make the process of registering settings and having them automatically rendered even easier and complete, but we should not wait until it is ready for a core-merge, as some issues in the existing Settings API should be solved sooner than later.
&lt;/p&gt;
&lt;p&gt;
We figured out two main goals:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add some basic support to automatically render fields so that plugin developers no longer need to write their own callback functions for basic fields.
&lt;/li&gt;&lt;li&gt;Get rid of the table structure to improve accessibility. Furthermore the accessibility team should also ensure that the markup generated as the core field output is accessible.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For the technical improvements, we would like to do the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adjust &lt;code&gt;add_settings_field()&lt;/code&gt; to support a predefined set of identifiers for a field type instead of a callback function. In that case a default callback function that we would introduce in core would take care of rendering the field. The requirement to write custom callbacks for even the most basic fields is one major issue with the current Settings API and why most people rely on external libraries for that.
&lt;/li&gt;&lt;li&gt;Enhance the &lt;code&gt;$args&lt;/code&gt; parameter of &lt;code&gt;add_settings_field()&lt;/code&gt;. It should become more significant and probably go through some validation, filling it with default values. This is especially important for the new default callbacks.
&lt;/li&gt;&lt;li&gt;Possibly support providing one &lt;code&gt;$args&lt;/code&gt; array as sole parameter to &lt;code&gt;add_settings_field()&lt;/code&gt; that contains the other parameters as well. This would of course need to work in a backward-compatible way.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For the accessibility part, we would like to do the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Scaffold an HTML prototype for what a settings page should look like. This will give a good overview of the accessibility approach we should take without having to deal with the PHP implementation.
&lt;/li&gt;&lt;li&gt;Get rid of the current table structure. Whatever the above prototype looks like, it will not have tables anymore. We can generally remove the table structure and change it to something else easily, since all the table output is generated by core (in particular by &lt;code&gt;do_settings_sections()&lt;/code&gt; and &lt;code&gt;do_settings_fields()&lt;/code&gt;). For everyone who uses the API as recommended, this will not bring any BC issues unless they are using specific table-related selectors (like &lt;code&gt;td&lt;/code&gt;) in CSS or JS code. It is unclear whether these should be considered edge-cases and whether a dev-note reflecting the changes is sufficient, or whether we should only support the new markup through an additional parameter which would default to the current &lt;code&gt;table&lt;/code&gt; way. The latter is backward-compatible, but on the other hand it would decrease the amount of sites that become more accessible out-of-the-box.
&lt;/li&gt;&lt;li&gt;Do not deal with people who completely write the table markup manually. We simply cannot do this, other than recommending them to switch to using the Settings API or at least changing their markup. The only thing to keep in mind here is that we should never remove any CSS related to these tables, in order to keep their code working.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of these enhancements would also benefit &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38734" title="#38734: enhancement: Dogfood the Settings API (assigned)"&gt;#38734&lt;/a&gt; as it would become a lot easier to change core's own settings pages to actually use the Settings API.
&lt;/p&gt;
&lt;p&gt;
We will from now on have meetings on Slack to continue discussion in detail every 2 weeks on Monday at 17:00 UTC. However, general opinions and discussion can and should also be placed in this ticket.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39363 (New custom css customizer saved as a published post) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Mon, 02 Jan 2017 21:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39363#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39363#comment:3/1483391158142293</guid>
      <description>&lt;p&gt;
I also observed this.
&lt;/p&gt;
&lt;p&gt;
Is this because of Jetpack and compatibility issues?
&lt;/p&gt;
&lt;p&gt;
I think Jetpack stores it as a post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>nhangen</dc:creator>

      <pubDate>Mon, 02 Jan 2017 20:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:111/1483388107237394</guid>
      <description>&lt;p&gt;
Experienced this issue on 4.7 w/ PHP 5.5.38. All files were under 1MB.
&lt;/p&gt;
&lt;p&gt;
Both patches worked, but required max_execution_time to be increased to 45s
&lt;/p&gt;
&lt;p&gt;
max post set to 32M
max filesize set to 16M
&lt;/p&gt;
&lt;p&gt;
On a MediaTemple DV
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #31101,​39280 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 20:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31101%2C39280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31101%2C39280/1483387619979425</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39664" title="Ignore the 'comment_order' setting when determining comment ..."&gt;39664&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Ignore the 'comment_order' setting when determining comment pagination.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;[38740]&lt;/a&gt; incorrectly introduced logic that changed a comment's page when&lt;br /&gt;
'comment_order' was set to 'desc'. This is in violation of the design&lt;br /&gt;
of the comment pagination system: a comment's page is designed not to&lt;br /&gt;
change when 'comment_order' or 'default_comment_page' are changed.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39663" title="Ignore the 'comment_order' setting when determining comment ..."&gt;[39663]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39280" title="#39280: defect (bug): comment permalink wrong in WordPress 4.7 (closed: fixed)"&gt;#39280&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39664]: Ignore the 'comment_order' setting when determining comment ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 20:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39664</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39664/1483387619126037</guid>
      <description>&lt;p&gt;
Ignore the 'comment_order' setting when determining comment pagination.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;[38740]&lt;/a&gt; incorrectly introduced logic that changed a comment's page when
'comment_order' was set to 'desc'. This is in violation of the design
of the comment pagination system: a comment's page is designed not to
change when 'comment_order' or 'default_comment_page' are changed.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39663" title="Ignore the 'comment_order' setting when determining comment ..."&gt;[39663]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39280" title="#39280: defect (bug): comment permalink wrong in WordPress 4.7 (closed: fixed)"&gt;#39280&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #31101,​39280 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:58:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31101%2C39280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31101%2C39280/1483387092089636</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39663" title="Ignore the 'comment_order' setting when determining comment ..."&gt;39663&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Ignore the 'comment_order' setting when determining comment pagination.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;[38740]&lt;/a&gt; incorrectly introduced logic that changed a comment's page when&lt;br /&gt;
'comment_order' was set to 'desc'. This is in violation of the design&lt;br /&gt;
of the comment pagination system: a comment's page is designed not to&lt;br /&gt;
change when 'comment_order' or 'default_comment_page' are changed.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39280" title="#39280: defect (bug): comment permalink wrong in WordPress 4.7 (closed: fixed)"&gt;#39280&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39663]: Ignore the 'comment_order' setting when determining comment ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39663</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39663/1483387089096867</guid>
      <description>&lt;p&gt;
Ignore the 'comment_order' setting when determining comment pagination.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;[38740]&lt;/a&gt; incorrectly introduced logic that changed a comment's page when
'comment_order' was set to 'desc'. This is in violation of the design
of the comment pagination system: a comment's page is designed not to
change when 'comment_order' or 'default_comment_page' are changed.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39280" title="#39280: defect (bug): comment permalink wrong in WordPress 4.7 (closed: fixed)"&gt;#39280&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39280 (comment permalink wrong in WordPress 4.7) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:56:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39280#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39280#comment:15/1483386987613652</guid>
      <description>&lt;p&gt;
Thanks for reviewing, @rachelbaker. Revert looks good to me.
&lt;/p&gt;
&lt;p&gt;
I will add tests demonstrating the behavior of pagination alongside &lt;code&gt;comment_order&lt;/code&gt; and &lt;code&gt;default_comment_page&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also seems like after this ticket is fixed, we should change &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt; to be "works as intended".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll reference the ticket in the commit message, for future viewers of that ticket. I don't want to change the resolution on a ticket that was closed against an old milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39315 (WP_Tax_Query::transform_query() double escapes name term arguments) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39315#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39315#comment:3/1483385891705774</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39662" title="Don't double-escape `terms` payload in ..."&gt;39662&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't double-escape &lt;code&gt;terms&lt;/code&gt; payload in &lt;code&gt;WP_Tax_Query::transform_query()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;terms&lt;/code&gt; values are passed through &lt;code&gt;sanitize_term_field()&lt;/code&gt; with the 'db'&lt;br /&gt;
flag, which add slashes. Because &lt;code&gt;terms&lt;/code&gt; are subsequently run through&lt;br /&gt;
&lt;code&gt;esc_sql()&lt;/code&gt;, these slashes must be removed. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36348" title="Don't double-escape the 'name' param in `get_terms()`.
[32353] ..."&gt;[36348]&lt;/a&gt;, which added&lt;br /&gt;
a similar step to sanitization in &lt;code&gt;get_terms()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props bcworkz.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39315" title="#39315: defect (bug): WP_Tax_Query::transform_query() double escapes name term arguments (closed: fixed)"&gt;#39315&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39662]: Don't double-escape `terms` payload in ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39662</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39662/1483385887481361</guid>
      <description>&lt;p&gt;
Don't double-escape &lt;code&gt;terms&lt;/code&gt; payload in &lt;code&gt;WP_Tax_Query::transform_query()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;terms&lt;/code&gt; values are passed through &lt;code&gt;sanitize_term_field()&lt;/code&gt; with the 'db'
flag, which add slashes. Because &lt;code&gt;terms&lt;/code&gt; are subsequently run through
&lt;code&gt;esc_sql()&lt;/code&gt;, these slashes must be removed. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36348" title="Don't double-escape the 'name' param in `get_terms()`.
[32353] ..."&gt;[36348]&lt;/a&gt;, which added
a similar step to sanitization in &lt;code&gt;get_terms()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props bcworkz.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39315" title="#39315: defect (bug): WP_Tax_Query::transform_query() double escapes name term arguments (closed: fixed)"&gt;#39315&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:2/1483384651277442</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ccprog Can you provide details on your server and mod_rewrite configuration?
&lt;/p&gt;
&lt;p&gt;
FYI: Discovery does work even if mod_rewrite is not enabled via &lt;a class="ext-link" href="https://browser-unplugged.net/index.php?rest_route=/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://browser-unplugged.net/index.php?rest_route=/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37188 (Add New Media button does not give aria feedback) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37188#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37188#comment:12/1483383418428441</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1483383416000832"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39433 (Update copyright year in license.txt) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39433#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39433#comment:4/1483383036268851</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39661" title="General: Update copyright year to 2017 in license.txt.
Props ..."&gt;39661&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Update copyright year to 2017 in license.txt.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Nikschavan.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39659" title="General: Update copyright year to 2017 in license.txt.
Props ..."&gt;[39659]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39433" title="#39433: defect (bug): Update copyright year in license.txt (closed: fixed)"&gt;#39433&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39661]: General: Update copyright year to 2017 in license.txt.  Props ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:50:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39661</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39661/1483383035788706</guid>
      <description>&lt;p&gt;
General: Update copyright year to 2017 in license.txt.
&lt;/p&gt;
&lt;p&gt;
Props Nikschavan.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39659" title="General: Update copyright year to 2017 in license.txt.
Props ..."&gt;[39659]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39433" title="#39433: defect (bug): Update copyright year in license.txt (closed: fixed)"&gt;#39433&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39399 (REST API: Tests for the view or embed response data for the Users ...) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39399#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39399#comment:6/1483382543859717</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39660" title="REST API: Add missing assertions to the view and embed context ..."&gt;39660&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Add missing assertions to the view and embed context response data for the Users Controller.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds tests for responses where &lt;code&gt;context != 'edit'&lt;/code&gt; the following properties are not included in the response data:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;email&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;locale&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;registered_date&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props thepelkus, jnylen0.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39399" title="#39399: enhancement: REST API: Tests for the view or embed response data for the Users ... (closed: fixed)"&gt;#39399&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39660]: REST API: Add missing assertions to the view and embed context ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39660</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39660/1483382542166568</guid>
      <description>&lt;p&gt;
REST API: Add missing assertions to the view and embed context response data for the Users Controller.
&lt;/p&gt;
&lt;p&gt;
Adds tests for responses where &lt;code&gt;context != 'edit'&lt;/code&gt; the following properties are not included in the response data:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;email&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;locale&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;registered_date&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props thepelkus, jnylen0.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39399" title="#39399: enhancement: REST API: Tests for the view or embed response data for the Users ... (closed: fixed)"&gt;#39399&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26601 (Inappropriate content in headings on admin screens) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:36:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26601#comment:136</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26601#comment:136/1483382169609292</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39433 (Update copyright year in license.txt) reopened</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39433#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39433#comment:3/1483380211370981</guid>
      <description>&lt;p&gt;
Reopening to be merged into the 4.7 branch to resolve the failing unit test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Basic::test_license
license.txt's year needs to be updated to 2017.
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'2017'
+'2016'
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39433 (Update copyright year in license.txt) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39433#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39433#comment:2/1483379862473549</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39659" title="General: Update copyright year to 2017 in license.txt.
Props ..."&gt;39659&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Update copyright year to 2017 in license.txt.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Nikschavan.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39433" title="#39433: defect (bug): Update copyright year in license.txt (closed: fixed)"&gt;#39433&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39659]: General: Update copyright year to 2017 in license.txt.  Props ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39659</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39659/1483379862016974</guid>
      <description>&lt;p&gt;
General: Update copyright year to 2017 in license.txt.
&lt;/p&gt;
&lt;p&gt;
Props Nikschavan.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39433" title="#39433: defect (bug): Update copyright year in license.txt (closed: fixed)"&gt;#39433&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) updated</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439#comment:4/1483378170689015</guid>
      <description>&lt;p&gt;
@MattyRob Yes definitely need a core developer opinion on this. I'm aware it's not a simple patch and a core developer might bring light on the impact of updating an attachment &lt;code&gt;guid&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38734 (Dogfood the Settings API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38734#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38734#comment:13/1483377650147382</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by sc0ttkclark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1483377648000549"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:16:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439#comment:3/1483377374400002</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jlambe
&lt;/p&gt;
&lt;p&gt;
Having looked at the core code wp_insert_attachment() calls wp_insert_post(). This latter function is specifically written to create a GUID but use any existing GUID in preference so it's not going to be a simple patch.
&lt;/p&gt;
&lt;p&gt;
Perhaps we need a core developer to give an opinion.
&lt;/p&gt;
&lt;p&gt;
My personal opinion is that this is straying into a risky area and that GUIDs should not really be changed, the code I use simply moves them about in the database.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39280 (comment permalink wrong in WordPress 4.7) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 16:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39280#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39280#comment:14/1483376185484326</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@boonebgorges Wow.  Comment permalinks are amazing.  I agree, a revert of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;r38740&lt;/a&gt; is what should happen here.  The revert diff is &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39280/39280.diff" title="Attachment '39280.diff' in Ticket #39280"&gt;39280.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39280/39280.diff" title="Download"&gt;​&lt;/a&gt;.  Can you do a final sanity check on my diff?
&lt;/p&gt;
&lt;p&gt;
Before committing, it would be nice to have unit tests for the expected behavior.  Also seems like after this ticket is fixed, we should change &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt; to be "works as intended".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39280.diff attached to Ticket #39280</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 16:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39280/39280.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39280/39280.diff/1483375729377850</guid>
      <description>&lt;p&gt;
revert of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;r38740&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39440 (Database errors on install with WP_DEBUG:true - wp_create_nonce( ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 02 Jan 2017 15:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39440#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39440#comment:3/1483372364246336</guid>
      <description>&lt;p&gt;
@thomas.mery: Some people use Google to search for existing tickets as their search is very good (&lt;code&gt;site:core.trac.wordpress.org &amp;lt;search terms&amp;gt;&lt;/code&gt;). For example, &lt;code&gt;site:core.trac.wordpress.org install nonce&lt;/code&gt; shows &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39047" title="#39047: defect (bug): Installer tries to create nonce before options table exists (closed: fixed)"&gt;#39047&lt;/a&gt; on the first position
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) updated</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Mon, 02 Jan 2017 15:36:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439#comment:2/1483371391186497</guid>
      <description>&lt;p&gt;
@MattyRob It's not a bug but can't choose another term for this issue discussion :)
&lt;/p&gt;
&lt;p&gt;
Currently our code do not update the &lt;code&gt;guid&lt;/code&gt;. We use the &lt;code&gt;wp_insert_attachment()&lt;/code&gt; function to create or update the attachment post and set the &lt;code&gt;guid&lt;/code&gt; property for its &lt;code&gt;$args&lt;/code&gt; on each import like so:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$args = array_merge($args, [
    'post_title' =&amp;gt; $file['basename'],
    'post_content' =&amp;gt; '',
    'post_status' =&amp;gt; 'inherit',
    'post_mime_type' =&amp;gt; $image['type'],
    'guid' =&amp;gt; $image['url'],
]);
/*
 * Insert/update attachment to posts table.
 */
$id = wp_insert_attachment($args, $image['file'], $parent_id);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When the core function is called, the &lt;code&gt;guid&lt;/code&gt; property passed on update is different from the one already stored. The issue is that the core function do not update the &lt;code&gt;guid&lt;/code&gt; because of this RSS feed unique identifier thing but in our case it is non sense even if it doesn't break things (at least for now) as it do not reflects "reality" as the &lt;code&gt;guid&lt;/code&gt; value points to a file that no longer exists.
&lt;/p&gt;
&lt;p&gt;
So the discussion here is, should we update the core function to also handle the &lt;code&gt;guid&lt;/code&gt; for attachments (on update) if the original file no longer exists? or perhaps provide an option to authorize &lt;code&gt;guid&lt;/code&gt; update whatever post type is (but this is dangerous as the developer should provide an expected &lt;code&gt;guid&lt;/code&gt; to avoid to break things) ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 02 Jan 2017 15:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439#comment:1/1483370480034467</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jlambe
&lt;/p&gt;
&lt;p&gt;
Thanks for posting this issue, I'm not entirely sure it's a bug though as the GUID is not expected to change by the WordPress core code.
&lt;/p&gt;
&lt;p&gt;
That said - it is possible to force the issue if desired. You said above you set it to change - how have you done this? Something similat to the code snippet below works for me in a different situation where I change GUIDs. You'll need to create your new GUID and insert it into the database table at the correct point.
&lt;/p&gt;
&lt;p&gt;
Obviously messing with the database directly can cause issues so be careful when testing this and your own code.
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'inherit' === $post-&amp;gt;post_status ) {
	$guid = get_option( 'siteurl' ) . '/?p=' . $new_id;
	// update the GUID
	$wpdb-&amp;gt;update( $wpdb-&amp;gt;posts,
		array(
			'guid' =&amp;gt; $guid,
		),
		array(
			'ID' =&amp;gt; $post_id,
		)
	);
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39440 (Database errors on install with WP_DEBUG:true - wp_create_nonce( ...) updated</title>
      
        <dc:creator>thomas.mery</dc:creator>

      <pubDate>Mon, 02 Jan 2017 15:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39440#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39440#comment:2/1483370102067743</guid>
      <description>&lt;p&gt;
thanks,
&lt;/p&gt;
&lt;p&gt;
looked for it but apparently not well enough
&lt;/p&gt;
&lt;p&gt;
any tip for next time? (with this issue as an example I searched for 'install' 'db' 'errors' 'rest-api')
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39130 (Docblock improvements for 4.8) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Mon, 02 Jan 2017 14:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39130#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39130#comment:6/1483367716828381</guid>
      <description>&lt;p&gt;
These hooks should be documented:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;load-page-new.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;load-page.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;load-categories.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;load-edit-link-categories.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;load-edit-tags.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;header_video_settings&lt;/code&gt; in /wp-includes/theme.php
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For the &lt;code&gt;header_video_settings&lt;/code&gt; filter there's &lt;a href="https://core.trac.wordpress.org/attachment/ticket/39130/39130.12.patch"&gt;this patch&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The actions in &lt;code&gt;/wp-admin/admin.php&lt;/code&gt; are deprecated but should still be documented because of &lt;a class="ext-link" href="https://github.com/WordPress/phpdoc-parser/issues/185"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this issue&lt;/a&gt; with the parser.
&lt;/p&gt;
&lt;p&gt;
In the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP Documentation Standards&lt;/a&gt; handbook we should make it more clear that DocBlocks start with a double asterisk (&lt;code&gt;/**&lt;/code&gt;) and should &lt;strong&gt;only be used&lt;/strong&gt; for &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#what-should-be-documented"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;these elements&lt;/a&gt;. For all other inline documentation &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#5-2-multi-line-comments"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;multi-line&lt;/a&gt; or &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#5-1-single-line-comments"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;single-line&lt;/a&gt; comments should be used. This is &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/theme.php#L800"&gt;an example of wrong DocBlock usage&lt;/a&gt; that the parser picks up as a DocBlock and could potentially assign to a hook.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39047,​39440 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 02 Jan 2017 14:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39047%2C39440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39047%2C39440/1483367266307622</guid>
      <description>duplicate: &lt;p&gt;
Hello @thomas.mery and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39047" title="#39047: defect (bug): Installer tries to create nonce before options table exists (closed: fixed)"&gt;#39047&lt;/a&gt; so I'm closing this one as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39440 (Database errors on install with WP_DEBUG:true - wp_create_nonce( ...) created</title>
      
        <dc:creator>thomas.mery</dc:creator>

      <pubDate>Mon, 02 Jan 2017 14:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39440/1483367046601766</guid>
      <description>&lt;p&gt;
On a fresh install it seems like there are db calls made before the db is installed
&lt;/p&gt;
&lt;p&gt;
This appears to originate in &lt;code&gt;wp-admin/install.php&lt;/code&gt;line 421
with a &lt;code&gt;wp_print_scripts&lt;/code&gt; call
&lt;/p&gt;
&lt;p&gt;
and more precisely in &lt;code&gt;scripts-loader.php&lt;/code&gt; line 510
where &lt;code&gt;wp_create_nonce( 'wp_rest' )&lt;/code&gt; is called
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) created</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Mon, 02 Jan 2017 12:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439/1483361888576414</guid>
      <description>&lt;p&gt;
I have a "special" case scenario related to media library attachments.
&lt;/p&gt;
&lt;p&gt;
For the context, I've built a plugin that connects to an external server and sync images stored into the remote server into local WordPress media library. The importer upload files, generate the thumbnails and create a new "attachment" post.
&lt;/p&gt;
&lt;p&gt;
Now, an import process is ran everyday, and basically we re-import the remote images into WordPress but in order to avoid duplicates, we're updating existing attachments if exist. Now, during this update process, we only remove the files stored into the &lt;code&gt;uploads&lt;/code&gt; directory, import the new one with its thumbnails and update the attachment post.
&lt;/p&gt;
&lt;p&gt;
Before doing so, our first approach was to check if an attachment exists, if exists, delete the attachment + its files and then simply create a new attachment. This first approach works but we're having huge ID number into the DB after the import as it generates thousand of new records which we didn't want. So now, only the files are updated, if an attachment post exists, we update its metadata and everything works as expected.
&lt;/p&gt;
&lt;p&gt;
Now the issue/remark we have is that during the update of the attachment post, each time we import the new image file, we set the &lt;code&gt;guid&lt;/code&gt; property to change and use the new imported file path. But when we check the database table, the &lt;code&gt;guid&lt;/code&gt; is not updated at all and reflects the path to the image file imported the first time. Looking at source code, during an update, the &lt;code&gt;guid&lt;/code&gt; is not modified in general as for RSS feeds we need that unique &lt;code&gt;guid&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Our question is, is it relevant in this scenario to keep old &lt;code&gt;guid&lt;/code&gt; property that points to a file that no longer exists? and so should we allow the &lt;code&gt;guid&lt;/code&gt; to be updated by default in core for the attachment?
&lt;/p&gt;
&lt;p&gt;
If RSS readers need that &lt;code&gt;guid&lt;/code&gt;, why attachments use the file path and not an attachment page permalink ? Is there another location that uses this &lt;code&gt;guid&lt;/code&gt; property in place of the meta data for the file path ?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39438 (Issue: Every links in customize page have changeset_uuid) created</title>
      
        <dc:creator>behzadg</dc:creator>

      <pubDate>Mon, 02 Jan 2017 12:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39438/1483361570012488</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Working on my new theme in customize page and i noticed all the links inside my theme are like this:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://localhost/my_theme/?customize_changeset_uuid=c08410ff-d476-410e-83b9-f80dc156370c&amp;amp;customize_messenger_channel=preview-3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost/my_theme/?customize_changeset_uuid=c08410ff-d476-410e-83b9-f80dc156370c&amp;amp;customize_messenger_channel=preview-3&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So i tried making some changes on options then save customize page, for exmaple when i right click on logo and open link in new tab, site showing me old settings and not new changes.
&lt;/p&gt;
&lt;p&gt;
Then when i removing query args from link, theme changes works fine.
&lt;/p&gt;
&lt;p&gt;
Where is the problem ?!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39436 (Formatting the text at the registration page) updated</title>
      
        <dc:creator>Soean</dc:creator>

      <pubDate>Mon, 02 Jan 2017 12:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39436#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39436#comment:2/1483359956601459</guid>
      <description>&lt;p&gt;
Hey @edwarddekker1978
I can't reproduce the bug, maybe its caused by a plugin or browser.
Which browser are you using?
Please deactivate all plugins for testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35130 (.wp-full-overlay-main prevents touch scrolling in theme preview iframe ...) updated</title>
      
        <dc:creator>mbiais</dc:creator>

      <pubDate>Mon, 02 Jan 2017 10:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35130#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35130#comment:3/1483352611347153</guid>
      <description>&lt;p&gt;
Looks like this one was fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>Marcoevich</dc:creator>

      <pubDate>Mon, 02 Jan 2017 08:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:105/1483346929467096</guid>
      <description>&lt;p&gt;
+1 too
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27575,​39426 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 02 Jan 2017 02:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27575%2C39426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27575%2C39426/1483322801279350</guid>
      <description>duplicate: &lt;p&gt;
Thanks for the report and conversation. However, the Delete vs Remove distinction is intentional. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27575" title="#27575: defect (bug): Widget Customizer: Inconsistent use of Delete / Remove (closed: wontfix)"&gt;#27575&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39437 (TinyMCE: better way to remove spaces from empty paragraphs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 02:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39437#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39437#comment:1/1483322456974963</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 39437.patch: remove empty spaces from paragraphs in the DOM instead of searching through the source HTML with regex.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39437.patch attached to Ticket #39437</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 01:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39437/39437.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39437/39437.patch/1483322172121744</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39437 (TinyMCE: better way to remove spaces from empty paragraphs) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 01:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39437</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39437/1483322097160843</guid>
      <description>&lt;p&gt;
Follow up from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35890" title="#35890: defect (bug): TinyMCE downs with the given piece of html text (closed: fixed)"&gt;#35890&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38294" title="#38294: defect (bug): Visual editor hangs in Chrome and Firefox when a sequence of no-break ... (closed: fixed)"&gt;#38294&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It seems better to remove the white space chars (and &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;) in the DOM after the post content is loaded instead of searching through the HTML string with regex. It could be slower in some cases, but is a lot "cleaner".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38978 (Update TinyMCE) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 00:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38978#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38978#comment:4/1483317257903014</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
By the time 4.8 reaches beta, there will probably be newer version of TinyMCE.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39423 (Create add_editor_script, analogous to add_editor_style (add ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 00:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39423#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39423#comment:2/1483316961493104</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39427 (RSS Widget Link should be the feed, not site) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 01 Jan 2017 23:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39427#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39427#comment:2/1483314637804118</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39402 (`wp_delete_term` should check if post type supports categories instead ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 01 Jan 2017 23:50:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39402#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39402#comment:2/1483314617943742</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39433 (Update copyright year in license.txt) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 01 Jan 2017 23:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39433#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39433#comment:1/1483314579062139</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Previously &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35278" title="#35278: defect (bug): Copyright year should be kept as 2011 (closed: fixed)"&gt;#35278&lt;/a&gt; / &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36855" title="Clarify Copyright year
Based on ..."&gt;r36855&lt;/a&gt; / &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36856" title="Fix License test
Broken in r36855
Fixes #35278
"&gt;r36856&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38953 (Customize Menus: clicking outside of the available menu items panel ...) reopened</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 01 Jan 2017 21:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38953#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38953#comment:7/1483307030053708</guid>
      <description>&lt;p&gt;
This change broke the bulk-delete functionality. The available menu items panel can't be closed if the click is on the item-delete button within the menu item handle.
&lt;/p&gt;
&lt;p&gt;
Again, the specific functionality that this ticket looks to restore previously worked, and I specifically remember adding the check for the delete button too. Not sure what happened to it.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39423 (Create add_editor_script, analogous to add_editor_style (add ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 01 Jan 2017 21:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39423#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39423#comment:1/1483306674261521</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Don't think this is a good idea. If you want to run js or manipulate the DOM in the editor iframe, you should use "proper" plugin. TinyMCE has extensive APIs for that, look at &lt;code&gt;editor.dom&lt;/code&gt; and &lt;code&gt;editor.$&lt;/code&gt; (which is pretty similar to jQuery but inside the contenteditable body).
&lt;/p&gt;
&lt;p&gt;
If you cannot use the editor APIs, you should look into using &lt;code&gt;wpview&lt;/code&gt; that will insert an iframe and make it non-editable.
&lt;/p&gt;
&lt;p&gt;
Also &lt;code&gt;add_editor_style()&lt;/code&gt; extends and exposes an existing TinyMCE setting, see: &lt;a class="ext-link" href="https://www.tinymce.com/docs/configure/content-appearance/#content_css"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.tinymce.com/docs/configure/content-appearance/#content_css&lt;/a&gt;. Adding arbitrary JS to the editor iframe is not supported.
&lt;/p&gt;
&lt;p&gt;
I'm also thinking of converting &lt;code&gt;wpembed&lt;/code&gt; to a proper TinyMCE plugin despite that it will be mostly a copy of wp-includes/js/wp-embed.js.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>tmoore41</dc:creator>

      <pubDate>Sun, 01 Jan 2017 21:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:19/1483305185509325</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39311#comment:18" title="Comment 18"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Okay, NOW we're making progress!
&lt;/p&gt;
&lt;p&gt;
You have a heavily customized install :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I do not have a heavily customized install.  This problem would also occur on a vanilla wordpress install if the htaccess rules blocked access to the main site (not an unreasonable thing to do for some use cases).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's important for us to know to debug.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No debugging is required.  See my original post in this thread.  The problem is obvious in the code.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main site (example.com) is meant to be a publicly viewable site.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This would appear to be a regression from former behaviour because I did not see this happening several releases ago on my same setup.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Obviously there are ways around it, like WordPress.com (not sure how they did it TBH). But by making it so example.com is NOT accessible at all, that's why this happened. If it was, just as a landing page or what have you, it should properly redirect people where they need to go.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All I am concerned about here are the links on the welcome page. It seems to be an artificial restriction
that I must have have a publicly accessible main site so that magic redirection works, when it is trivially
easy to change the welcome page to avoid this. Honestly, what is the principle behind this? Why does
magic redirection have to be used in this case, when it is so easy to avoid?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're falling to the original intent of WordPress Multisite, which was to manage a network of related, but not fully interconnected sites. That's why knowing the history of a thing helps us debug and why I was digging into the history of what YOU are doing. :) With the right information, we can understand the real problem based on your real intent.
&lt;/p&gt;
&lt;p&gt;
So!
&lt;/p&gt;
&lt;p&gt;
Why is yours breaking?
&lt;/p&gt;
&lt;p&gt;
Because your main site isn't 'not accessible to login' but 'not accessible AT ALL.' Meaning, as I understand it, if I went to your example.com, I would be blocked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, if you went to 'example.com' you would be presented with a login page.  If you were a registered user and had the correct password then you could access the site.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You can use &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/wpmu_signup_user_notification_email/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/hooks/wpmu_signup_user_notification_email/&lt;/a&gt; to rewrite the email so it links to the per-site :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are misunderstanding the problem stated in the original post.  The email invitation links to the correct page.  It is the welcome message that is sent after the activation that links to the wrong site.  This is trivially easy to fix, although I defer to @Mista-Flo and @johnjamesjacoby that the activation process should be fixed in a more thorough manner.
&lt;/p&gt;
&lt;p&gt;
I'm not looking for technical support here.  As mentioned in the original post I made a one-line change that fixed the problem for me.  I just wanted to report this defect to the core project so that other people were made aware of it.  I would be happy to answer any other questions about the issue if it would help to get it resolved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35835 (_deprecated_file undefined in rss-functions.php) reopened</title>
      
        <dc:creator>TheGP</dc:creator>

      <pubDate>Sun, 01 Jan 2017 19:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35835#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35835#comment:5/1483299090991664</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35835#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Production sites shouldn't be running with &lt;code&gt;display_errors&lt;/code&gt; turned on, so the undefined constants &amp;amp; undefined functions warnings/notices/errors aren't seen as a bugs within WordPress.
&lt;/p&gt;
&lt;p&gt;
We also cover this in our &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-there-path-disclosures-when-directly-loading-certain-files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;security handbook&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's stupid. I have error notification alerts, and I had alerts about this fatal error too. So I just blocked all errors from Wordpress. And this not improving security, because I can't see any errors from Wordpress right now. So fix it and dont make excuses.
&lt;/p&gt;
&lt;p&gt;
+ it adds a lot of trash data to log files (i have thousands of these errors)
+ bots use this bugs in wordpress to scan websites with display_errors On
&lt;/p&gt;
&lt;p&gt;
No wonder wordpress code developers considered as the worst in the industry))
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39436 (Formatting the text at the registration page) updated</title>
      
        <dc:creator>edwarddekker1978</dc:creator>

      <pubDate>Sun, 01 Jan 2017 17:54:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39436#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39436#comment:1/1483293240224281</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>2017-01-01.png attached to Ticket #39436</title>
      
        <dc:creator>edwarddekker1978</dc:creator>

      <pubDate>Sun, 01 Jan 2017 17:47:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39436/2017-01-01.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39436/2017-01-01.png/1483292853790789</guid>
      <description>&lt;p&gt;
Show the missing spacer
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39436 (Formatting the text at the registration page) created</title>
      
        <dc:creator>edwarddekker1978</dc:creator>

      <pubDate>Sun, 01 Jan 2017 17:46:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39436</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39436/1483292787199468</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I see a missing spacer at the registration page of WordPress.
"Forgot password?" or "Wachtwoord vergeten?" into Dutch are missing a spacer at the left-side.
&lt;/p&gt;
&lt;p&gt;
Regards,
Edward
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) updated</title>
      
        <dc:creator>ccprog</dc:creator>

      <pubDate>Sun, 01 Jan 2017 16:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:1/1483288394059683</guid>
      <description>&lt;p&gt;
The error can be traced to &lt;a class="source" href="http://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/class-wp-rest-server.php#L294"&gt;WP_Rest_Server::serve_request&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/trunk/src/wp-includes/rest-api/class-wp-rest-server.php#L294" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( empty( $path ) ) {
        if ( isset( $_SERVER['PATH_INFO'] ) ) {
                $path = $_SERVER['PATH_INFO'];
        } else {
                $path = '/';
        }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;$_SERVER['PATH_INFO']&lt;/code&gt; contains &lt;code&gt;/wp-json/&lt;/code&gt; on my setup.
&lt;/p&gt;
&lt;p&gt;
While this is plausible if mod_rewrite is not active, the success on developer.wordpress.org raises the question if a webserver rewrite may or may not change the content of PATH_INFO?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>WP user page bug.png attached to Ticket #39435</title>
      
        <dc:creator>taxman10m</dc:creator>

      <pubDate>Sun, 01 Jan 2017 15:52:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39435/WP%20user%20page%20bug.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39435/WP%20user%20page%20bug.png/1483285958770663</guid>
      <description>&lt;p&gt;
screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39435 (cannot advance by typing in page number) created</title>
      
        <dc:creator>taxman10m</dc:creator>

      <pubDate>Sun, 01 Jan 2017 15:51:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39435/1483285906925210</guid>
      <description>&lt;p&gt;
When looking at a users from a group, the pagination does not advance to the correct page in the group if the page number is manually inputted.
&lt;/p&gt;
&lt;p&gt;
To recreate:
&lt;/p&gt;
&lt;p&gt;
Go to the users page.
Click into any group other than All.
Where it says, X of Y pages, change the value of X and hit enter.
&lt;/p&gt;
&lt;p&gt;
The results will be of All, and not of the selected group.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30240 (Tell if theme is a child theme in wp-admin/network/themes.php) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Sun, 01 Jan 2017 15:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30240#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30240#comment:24/1483283243240968</guid>
      <description>&lt;p&gt;
@karmatosed an anchor or a real link ? Because I don't know which URL you have in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30240 (Tell if theme is a child theme in wp-admin/network/themes.php) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 01 Jan 2017 14:47:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30240#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30240#comment:23/1483282079072860</guid>
      <description>&lt;p&gt;
Maybe a link to the parent? I sort of feel it could be useful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38487 (the_archive_description() doesn't output the custom post type ...) updated</title>
      
        <dc:creator>swb1192</dc:creator>

      <pubDate>Sun, 01 Jan 2017 14:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38487#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38487#comment:2/1483280955225949</guid>
      <description>&lt;p&gt;
Is there a workaround for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33167.7.2.diff attached to Ticket #33167</title>
      
        <dc:creator>Nikschavan</dc:creator>

      <pubDate>Sun, 01 Jan 2017 11:46:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33167/33167.7.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33167/33167.7.2.diff/1483271206388361</guid>
      <description>&lt;p&gt;
vertically centeresthe show/hide dashicons
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33167 (Reset password screen lacks the Hide button and Confirm use of weak ...) updated</title>
      
        <dc:creator>Nikschavan</dc:creator>

      <pubDate>Sun, 01 Jan 2017 11:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33167#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33167#comment:21/1483271127428181</guid>
      <description>&lt;p&gt;
Tested the patch and works perfectly.
&lt;/p&gt;
&lt;p&gt;
Just one thing - The show/hide password is not in the center aligned for the desktop view -
&lt;a style="padding:0; border:none" href="https://cldup.com/ZMlyUSeFQT.jpg"&gt;&lt;img src="https://cldup.com/ZMlyUSeFQT.jpg" alt="https://cldup.com/ZMlyUSeFQT.jpg" crossorigin="anonymous" title="https://cldup.com/ZMlyUSeFQT.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Attaching a patch which center aligns the show/hide icon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39141,​39434 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 01 Jan 2017 10:59:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39141%2C39434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39141%2C39434/1483268347361387</guid>
      <description>duplicate: &lt;p&gt;
Hey @1manfactory and welcome back to Trac :)
&lt;/p&gt;
&lt;p&gt;
We're aware of the RSS feed dates being localised, and it's been fixed in the upcoming 4.7.1 release as per &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39141" title="#39141: defect (bug): RSS feeds have incorrect lastBuildDate when using alternate languages (closed: fixed)"&gt;#39141&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39434 (German Blog creates invalid RSS feed) created</title>
      
        <dc:creator>1manfactory</dc:creator>

      <pubDate>Sun, 01 Jan 2017 10:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39434/1483268192134835</guid>
      <description>&lt;p&gt;
Just tested it with a brand new WordPress local installation without any other plugins or themes to make sure that this problems is (so a presume) a core problem.
&lt;/p&gt;
&lt;p&gt;
When validating my RSS feed with &lt;a class="ext-link" href="https://validator.w3.org/feed/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://validator.w3.org/feed/&lt;/a&gt; it gives the following only error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;line 15, column 46: lastBuildDate must be an RFC-822 date-time: Mi, 16 Sep 2015 16:31:18 +0000
&lt;/pre&gt;&lt;p&gt;
this is the line mentioned:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;lastBuildDate&amp;gt;Mi, 16 Sep 2015 16:31:18 +0000&amp;lt;/lastBuildDate&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Help says: &lt;em&gt;Common errors include localizing the month name or the days of the week, not using the exact abbreviation provided by the specification, or attempting to use a time zone name that is not listed.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
So I switched from a German to English settings which gives me the following RSS date:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;lastBuildDate&amp;gt;Wed, 16 Sep 2015 16:31:18 +0000&amp;lt;/lastBuildDate&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This line now validates without any problems.
&lt;/p&gt;
&lt;p&gt;
I think this should be fixed as many people (so do I) rely on a valid RSS feed. Better save than sorry. It should not be a big issues as all other dates used inside RSS are valid – even in a German RSS feed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>new-year.diff attached to Ticket #39433</title>
      
        <dc:creator>Nikschavan</dc:creator>

      <pubDate>Sun, 01 Jan 2017 10:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39433/new-year.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39433/new-year.diff/1483265678767715</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39433 (Update copyright year in license.txt) created</title>
      
        <dc:creator>Nikschavan</dc:creator>

      <pubDate>Sun, 01 Jan 2017 10:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39433/1483265661877836</guid>
      <description>&lt;p&gt;
Update version to 2017 in license.txt
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) created</title>
      
        <dc:creator>ccprog</dc:creator>

      <pubDate>Sun, 01 Jan 2017 04:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432/1483245326049178</guid>
      <description>&lt;p&gt;
While you need mod_rewrite for discovery via &lt;a class="ext-link" href="http://example.com/wp-json/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/wp-json/&lt;/a&gt; to work, I run into problems without it. The Link resonse header then says
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;http://example.com/index.php/wp-json/&amp;gt;; rel="https://api.w.org/"
&lt;/pre&gt;&lt;p&gt;
but calling this results in
&lt;/p&gt;
&lt;pre class="wiki"&gt;{"code":"rest_no_route","message":"No route was found matching the URL and request method","data":{"status":404}}
&lt;/pre&gt;&lt;p&gt;
The same error is returned on my public site &lt;a class="ext-link" href="https://browser-unplugged.net/index.php/wp-json/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://browser-unplugged.net/index.php/wp-json/&lt;/a&gt; where rewrite is working. The response is obviously given by the REST API. The REST API plugin was never installed, and I did flush the rewrite rules as proposed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39424" title="#39424: defect (bug): WP REST API endpoints not coming up (closed: invalid)"&gt;39424&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For sites like developer.wordpress.org or demo.wp-api.org, the address works.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://example.com/index.php/index.php/?rest_route=/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/index.php/index.php/?rest_route=/&lt;/a&gt;, &lt;a class="ext-link" href="http://example.com/index.php/wp-json/wp/v2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/index.php/wp-json/wp/v2/&lt;/a&gt; and all endpoints work as expected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #27282,​39431 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 01 Jan 2017 00:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27282%2C39431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27282%2C39431/1483231860045915</guid>
      <description>duplicate: &lt;p&gt;
Hi @ashercantrell and welcome back to Trac.
&lt;/p&gt;
&lt;p&gt;
This is by design, although a little weird I admit.
&lt;/p&gt;
&lt;p&gt;
There's discussion over in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27282" title="#27282: defect (bug): WP_Query returns more results when there are sticky posts (new)"&gt;#27282&lt;/a&gt; for fixing this, although I don't think a clear "this should be fixed" conclusion has been reached by anyone - it's fairly well accepted that stickied posts do not paginate.
&lt;/p&gt;
&lt;p&gt;
I'm marking this as a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27282" title="#27282: defect (bug): WP_Query returns more results when there are sticky posts (new)"&gt;#27282&lt;/a&gt;, your opinions would be greatly appreciated in that ticket!
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item>
   </channel>
</rss>