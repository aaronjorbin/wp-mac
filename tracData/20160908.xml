<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37991 (fsockopen logic bug) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37991#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37991#comment:1/1473379197869472</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @amandato and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this, In WordPress 4.6 we're using the external package &lt;a class="ext-link" href="https://github.com/rmccue/requests"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Requests&lt;/a&gt; and issues/patches such as these need to be made against that upstream package.
&lt;/p&gt;
&lt;p&gt;
I'll take a look into this and open a PR upstream.
&lt;/p&gt;
&lt;p&gt;
Cross-referencing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37992" title="#37992: defect (bug): fsockopen hard codes port 443 when http scheme used (closed: fixed)"&gt;#37992&lt;/a&gt; also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21627 (Filter for custom-background CSS selector) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:56:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21627#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21627#comment:21/1473378987088827</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tests required:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;various selectors
&lt;ul&gt;&lt;li&gt;element
&lt;/li&gt;&lt;li&gt;class
&lt;/li&gt;&lt;li&gt;id
&lt;/li&gt;&lt;li&gt;descendant
&lt;/li&gt;&lt;li&gt;child
&lt;/li&gt;&lt;li&gt;pseudo classes &amp;amp; elements
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'll need to go back and check the reason behind background-class to consider whether theme authors ought to be able to set an ID instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:14/1473378806196312</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38581" title="Database: Fall back to `utf8` when `utf8mb4` isn't supported.
 ..."&gt;38581&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Fall back to &lt;code&gt;utf8&lt;/code&gt; when &lt;code&gt;utf8mb4&lt;/code&gt; isn't supported.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sometimes, &lt;code&gt;DB_CHARSET&lt;/code&gt; will be set to &lt;code&gt;utf8mb4&lt;/code&gt;, even if the current setup doesn't support &lt;code&gt;utf8mb4&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;[38442]&lt;/a&gt;, this can cause significant character set failures, causing the connection to fall back to &lt;code&gt;latin1&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Instead of doing this, we now check that the connection supports &lt;code&gt;utf8mb4&lt;/code&gt; before trying to use it, and fall back to &lt;code&gt;utf8&lt;/code&gt; when we need to.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38580" title="Database: Fall back to `utf8` when `utf8mb4` isn't supported.
 ..."&gt;[38580]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37982" title="#37982: defect (bug): 4.6.1 Breaks apostrophes in titles and utf-8 characters (closed: fixed)"&gt;#37982&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38581]: Database: Fall back to `utf8` when `utf8mb4` isn't supported.  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38581</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38581/1473378805700972</guid>
      <description>&lt;p&gt;
Database: Fall back to &lt;code&gt;utf8&lt;/code&gt; when &lt;code&gt;utf8mb4&lt;/code&gt; isn't supported.
&lt;/p&gt;
&lt;p&gt;
Sometimes, &lt;code&gt;DB_CHARSET&lt;/code&gt; will be set to &lt;code&gt;utf8mb4&lt;/code&gt;, even if the current setup doesn't support &lt;code&gt;utf8mb4&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;[38442]&lt;/a&gt;, this can cause significant character set failures, causing the connection to fall back to &lt;code&gt;latin1&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Instead of doing this, we now check that the connection supports &lt;code&gt;utf8mb4&lt;/code&gt; before trying to use it, and fall back to &lt;code&gt;utf8&lt;/code&gt; when we need to.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38580" title="Database: Fall back to `utf8` when `utf8mb4` isn't supported.
 ..."&gt;[38580]&lt;/a&gt; to the 4.6 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37982" title="#37982: defect (bug): 4.6.1 Breaks apostrophes in titles and utf-8 characters (closed: fixed)"&gt;#37982&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:49:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:2/1473378586056614</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @sharkomatic. I've not tested this but your report does look valid.
&lt;/p&gt;
&lt;p&gt;
I'm going to place this into the 4.6.2 milestone for visibility, then we can decide whether this is worth fixing in a minor release, or whether it can wait until 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:48:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:13/1473378520446570</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:12/1473378486264930</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38580" title="Database: Fall back to `utf8` when `utf8mb4` isn't supported.
 ..."&gt;38580&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Fall back to &lt;code&gt;utf8&lt;/code&gt; when &lt;code&gt;utf8mb4&lt;/code&gt; isn't supported.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sometimes, &lt;code&gt;DB_CHARSET&lt;/code&gt; will be set to &lt;code&gt;utf8mb4&lt;/code&gt;, even if the current setup doesn't support &lt;code&gt;utf8mb4&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;[38442]&lt;/a&gt;, this can cause significant character set failures, causing the connection to fall back to &lt;code&gt;latin1&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Instead of doing this, we now check that the connection supports &lt;code&gt;utf8mb4&lt;/code&gt; before trying to use it, and fall back to &lt;code&gt;utf8&lt;/code&gt; when we need to.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37982" title="#37982: defect (bug): 4.6.1 Breaks apostrophes in titles and utf-8 characters (closed: fixed)"&gt;#37982&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38580]: Database: Fall back to `utf8` when `utf8mb4` isn't supported.  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:48:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38580</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38580/1473378485740343</guid>
      <description>&lt;p&gt;
Database: Fall back to &lt;code&gt;utf8&lt;/code&gt; when &lt;code&gt;utf8mb4&lt;/code&gt; isn't supported.
&lt;/p&gt;
&lt;p&gt;
Sometimes, &lt;code&gt;DB_CHARSET&lt;/code&gt; will be set to &lt;code&gt;utf8mb4&lt;/code&gt;, even if the current setup doesn't support &lt;code&gt;utf8mb4&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;[38442]&lt;/a&gt;, this can cause significant character set failures, causing the connection to fall back to &lt;code&gt;latin1&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Instead of doing this, we now check that the connection supports &lt;code&gt;utf8mb4&lt;/code&gt; before trying to use it, and fall back to &lt;code&gt;utf8&lt;/code&gt; when we need to.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37982" title="#37982: defect (bug): 4.6.1 Breaks apostrophes in titles and utf-8 characters (closed: fixed)"&gt;#37982&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38001 (Theme un/installation hooks like plugins) created</title>
      
        <dc:creator>sidati</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38001</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38001/1473377915838048</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;register_activation_hook&lt;/code&gt;, &lt;code&gt;register_deactivation_hook&lt;/code&gt; &amp;amp; &lt;code&gt;register_uninstall_hook&lt;/code&gt; are very helpful for plugins but for themes there is no such thing, &lt;strong&gt;yes i do know&lt;/strong&gt; the existence of &lt;code&gt;after_switch_theme&lt;/code&gt; &amp;amp; &lt;code&gt;switch_theme&lt;/code&gt; but there is no &lt;code&gt;after_delete_theme&lt;/code&gt; action and never will be, cause there is no access to theme php files after deactivation.
&lt;/p&gt;
&lt;p&gt;
That is why i suggest to use "the plugin approach" with themes :), what do you think ?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37970 (Editing anchor link after copying adds admin url) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37970#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37970#comment:2/1473377722042104</guid>
      <description>&lt;p&gt;
Actually I just noticed the link is incorrect when you paste it, but it turns into the expected correct link after you hit Publish / Update on the post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37970 (Editing anchor link after copying adds admin url) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37970#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37970#comment:1/1473377403410323</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket @philliproth! Replicating this problem, it happens on any kind of link, not related to the image. I couldn't quite figure out where this problem comes from as I'm not familiar with the editor functionality, but the problem has been around for a while. I tested it on 4.4 (happens there as well) and 3.7 (doesn't happen there, but we didn't have the inline link popover back then).
&lt;/p&gt;
&lt;p&gt;
It might be a bug on the paste plugin for TinyMCE since the content reaches the wplink plugin already in the incorrect way, but this is mostly me guessing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27669.2.diff attached to Ticket #27669</title>
      
        <dc:creator>Mike_Cowobo</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:07:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27669/27669.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27669/27669.2.diff/1473376063043106</guid>
      <description>&lt;p&gt;
Forces db_version to be fetched from the db if it's different from $wp_db_version
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27669 (Stale `db_version` value after update with external object cache) updated</title>
      
        <dc:creator>Mike_Cowobo</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27669#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27669#comment:23/1473375862918819</guid>
      <description>&lt;p&gt;
Another scenario that could trigger this is when WP is updated on in a staging environment and deployed without a cache flush. This should obviously not happen at all, but I saw this happen recently one of the bigger WP hosting providers offering integrated staging.
&lt;/p&gt;
&lt;p&gt;
To reproduce the "No Update Required" loop with WP CLI:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$alloptions = wp_load_alloptions();
$alloptions['db_version'] = 36685; // Any version but $wp_db_version
wp_cache_set( 'alloptions', $alloptions, 'options' );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
A more robust solution would be to actually check the option in the db in &lt;code&gt;wp-admin/admin.php&lt;/code&gt; when db_version != $wp_db_version and flush the cache if a discrepancy is detected. This will:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Only cause a DB query when upgrade is required, or when something is actually wrong
&lt;/li&gt;&lt;li&gt;Always work, regardless of when and where db_version was updated
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:233</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:233/1473375761479327</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:231" title="Comment 231"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can confirm that there's an issue here. &lt;code&gt;tests_add_filter()&lt;/code&gt; still works OK before WP has loaded - &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt; takes care of the manually-set &lt;code&gt;$wp_filter&lt;/code&gt; keys. But if you run &lt;code&gt;tests_add_filter()&lt;/code&gt; after these pre-bootstrap filters are normalized, they never get converted to &lt;code&gt;WP_Hook&lt;/code&gt; objects. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff" title="Attachment '17817.25.diff' in Ticket #17817"&gt;17817.25.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.25.diff" title="Download"&gt;â€‹&lt;/a&gt; is a simple fix, though the &lt;code&gt;class_exists()&lt;/code&gt; check might break once &lt;code&gt;WP_Hook&lt;/code&gt; is autoloaded; we may want a global flag or a constant or somesuch to keep track of whether preexisting hooks have been converted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once @jorbin's &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff" title="Attachment '17817.26.diff' in Ticket #17817"&gt;17817.26.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.26.diff" title="Download"&gt;â€‹&lt;/a&gt; is in, can't &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff" title="Attachment '17817.25.diff' in Ticket #17817"&gt;17817.25.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.25.diff" title="Download"&gt;â€‹&lt;/a&gt; just be a check on &lt;code&gt;function_exists( 'add_filter' )&lt;/code&gt; and use the API when available, falling back to directly modifying when it's called before initialisation?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:98/1473375442726844</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38579" title="Taxonomy: Revert accidental changes introduced in [38578].
See #18302
"&gt;38579&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Revert accidental changes introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38578" title="Themes: Improve child theme file inheritance by introducing functions ..."&gt;[38578]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18302" title="#18302: enhancement: Improve child theme file inheritance by introducing a function to ... (closed: fixed)"&gt;#18302&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38579]: Taxonomy: Revert accidental changes introduced in [38578].  See #18302 </title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38579</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38579/1473375442242173</guid>
      <description>&lt;p&gt;
Taxonomy: Revert accidental changes introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38578" title="Themes: Improve child theme file inheritance by introducing functions ..."&gt;[38578]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18302" title="#18302: enhancement: Improve child theme file inheritance by introducing a function to ... (closed: fixed)"&gt;#18302&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>38000.patch attached to Ticket #38000</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38000/38000.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38000/38000.patch/1473375283166471</guid>
      <description>&lt;p&gt;
38000.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>js-comment.png attached to Ticket #38000</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38000/js-comment.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38000/js-comment.png/1473375249100909</guid>
      <description>&lt;p&gt;
JS Browser interpretation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:97/1473375237711544</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38578" title="Themes: Improve child theme file inheritance by introducing functions ..."&gt;38578&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Improve child theme file inheritance by introducing functions for locating and fetching the URL or path to files within child and parent themes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The most useful function this introduces is &lt;code&gt;get_theme_file_uri()&lt;/code&gt;, which returns the URL to the specified file in the child theme if it exists, and falls back to the URL to the specified file in the parent theme. This allows parent themes to reference files (including enqueuing CSS and JavaScript files) that can be overridden by the child theme simply by existing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This change also introduces &lt;code&gt;get_theme_file_path()&lt;/code&gt;, which is the file path equivalent of &lt;code&gt;get_theme_file_uri()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, &lt;code&gt;get_parent_theme_file_uri()&lt;/code&gt; and &lt;code&gt;get_parent_theme_file_path()&lt;/code&gt; are also introduced, which allow a theme to specifically reference a file URL or file path in the parent theme. These can be used as replacements for &lt;code&gt;get_template_directory_uri()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; respectively, for consistency.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnbillion, georgestephanis, gma992.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18302" title="#18302: enhancement: Improve child theme file inheritance by introducing a function to ... (closed: fixed)"&gt;#18302&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38578]: Themes: Improve child theme file inheritance by introducing functions ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38578</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38578/1473375237101730</guid>
      <description>&lt;p&gt;
Themes: Improve child theme file inheritance by introducing functions for locating and fetching the URL or path to files within child and parent themes.
&lt;/p&gt;
&lt;p&gt;
The most useful function this introduces is &lt;code&gt;get_theme_file_uri()&lt;/code&gt;, which returns the URL to the specified file in the child theme if it exists, and falls back to the URL to the specified file in the parent theme. This allows parent themes to reference files (including enqueuing CSS and JavaScript files) that can be overridden by the child theme simply by existing.
&lt;/p&gt;
&lt;p&gt;
This change also introduces &lt;code&gt;get_theme_file_path()&lt;/code&gt;, which is the file path equivalent of &lt;code&gt;get_theme_file_uri()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Finally, &lt;code&gt;get_parent_theme_file_uri()&lt;/code&gt; and &lt;code&gt;get_parent_theme_file_path()&lt;/code&gt; are also introduced, which allow a theme to specifically reference a file URL or file path in the parent theme. These can be used as replacements for &lt;code&gt;get_template_directory_uri()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; respectively, for consistency.
&lt;/p&gt;
&lt;p&gt;
Props johnbillion, georgestephanis, gma992.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18302" title="#18302: enhancement: Improve child theme file inheritance by introducing a function to ... (closed: fixed)"&gt;#18302&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>js-error.png attached to Ticket #38000</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:53:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38000/js-error.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38000/js-error.png/1473375209304319</guid>
      <description>&lt;p&gt;
JS Error
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38000 (Visual mode editor is broken after update to 4.6.1) created</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:53:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38000</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38000/1473375186114033</guid>
      <description>&lt;p&gt;
The comment javascript was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38349" title="TinyMCE: fix toolbars alignment in RTL.
Fixes #37760 for trunk."&gt;[38349]&lt;/a&gt; breaks the javascript code if it is minified :
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/class-wp-editor.php#L1260"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/class-wp-editor.php#L1260&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
See attach for more information.
&lt;strong&gt;the patch is attached.&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:25/1473374605605446</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by johnregan3. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473374603000296"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37999 (Support for CodeClimate) created</title>
      
        <dc:creator>bhubbard</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37999</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37999/1473372043894645</guid>
      <description>&lt;p&gt;
As WordPress syncs to github it is available on CodeClimate as a open source project here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codeclimate.com/github/WordPress/WordPress"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://codeclimate.com/github/WordPress/WordPress&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The GPA grade it gives is a bit inaccurate with the default settings. Code Climate does support WordPress standards and adding a simple &lt;code&gt;.codeclimate.yml&lt;/code&gt; file could provide better and accurate reporting. This would also be great as it can set an example of what a codeclimate config should look like for plugin and theme developers.
&lt;/p&gt;
&lt;p&gt;
Details on CodeClimate WordPress Standards:
&lt;a class="ext-link" href="https://github.com/codeclimate/codeclimate-phpcodesniffer/issues/15"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/codeclimate/codeclimate-phpcodesniffer/issues/15&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37998 (readme.txt and readme.md) created</title>
      
        <dc:creator>bhubbard</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:54:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37998</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37998/1473371646522649</guid>
      <description>&lt;p&gt;
I checked for ticket but couldn't find one, it would be great to have a readme.md version for the github version of WordPress. There are several pull-requests attempt for it.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/200"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/WordPress/pull/200&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/222"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/WordPress/pull/222&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:11/1473371336277041</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #forums by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1473371334003226"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:232</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:232/1473370896400006</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:229" title="Comment 229"&gt;danielbachhuber&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:224" title="Comment 224"&gt;danielbachhuber&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI - Because WP-CLI directly modifies the &lt;code&gt;$wp_filter&lt;/code&gt; global, this &lt;code&gt;WP_Hook&lt;/code&gt; thing breaks the implementation we adopted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As it turns out, WP-CLI broke because of poor coding on my part. My bad. See &lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/pull/3384"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/wp-cli/wp-cli/pull/3384&lt;/a&gt; for the fix.
&lt;/p&gt;
&lt;p&gt;
However, I discovered this breaks the intent of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37707" title="#37707: enhancement: Change the inclusion of 'plugins.php' to require_once (closed: fixed)"&gt;#37707&lt;/a&gt; because it depends on &lt;code&gt;WPINC&lt;/code&gt;, which is only available after &lt;code&gt;wp-settings.php&lt;/code&gt; has begun loading.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The above patch fixes this issue, though the more I think about it, the more I wonder if WP_Hook should even be in a separate file. Is there ever a time you would want one and not the other?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.26.diff attached to Ticket #17817</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff/1473370412291103</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35043 (Images in RSS feed are broken) updated</title>
      
        <dc:creator>lgpref</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:20:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35043#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35043#comment:26/1473369631279398</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Dear @joemcgill - I just caught this ticket today (which you closed), because those of us that use MailChimp are still struggling with scrset issues. See this Support Forum thread from three months ago - &lt;a class="ext-link" href="https://wordpress.org/support/topic/images-appear-in-rss-feed-as-empty-boxes-or-broken-images/?replies=5"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/topic/images-appear-in-rss-feed-as-empty-boxes-or-broken-images/?replies=5&lt;/a&gt;  They suggest using the "Disable Responsive Images" plugin, which apparently stopped working with the 4.6 update.
&lt;/p&gt;
&lt;p&gt;
Would your code snippet (as listed in Comment &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt; here) still work in 4.6?
&lt;/p&gt;
&lt;p&gt;
I do hope that this issue is kept as a live bug, and that it is considered for a release in the near future. Thanks for your consideration and all the work you do with Core.
&lt;/p&gt;
&lt;p&gt;
To expand on this note: we are dismayed to find out that MailChimp is still having issues with showing images in browsers due to mixed content 9 months after 4.4's release. Example of currently broken images in MailChimp newsletters visible in a browser (not email). Published Sept 7 2016 using MailChimp, Avada 4.0.3 theme and WP 4.6 (images are visible in email when "insecure content" is accepted, but all 404 in all browsers.
&lt;a class="ext-link" href="http://us8.campaign-archive1.com/?u=7cd99b58103a512a93f24db5a&amp;amp;id=57a1480852"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://us8.campaign-archive1.com/?u=7cd99b58103a512a93f24db5a&amp;amp;id=57a1480852&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37608 (Undefined index: extension in class-wp-image-editor.php) reopened</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37608#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37608#comment:10/1473369484864171</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38294" title="Media: when calling `pathinfo()`, also pass a `PATHINFO_*` constant to ..."&gt;[38294]&lt;/a&gt;, &lt;code&gt;PATHINFO_BASENAME&lt;/code&gt; was used in &lt;code&gt;media_handle_upload()&lt;/code&gt; in a spot that had previously stripped the file extension from the basename to build an attachment title. This results in attachment titles of &lt;code&gt;My Title-jpg&lt;/code&gt; instead of &lt;code&gt;My Title&lt;/code&gt; for an uploaded image of &lt;code&gt;My Title.jpg&lt;/code&gt;, which is a change in behavior.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37608/37608.2.diff" title="Attachment '37608.2.diff' in Ticket #37608"&gt;37608.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37608/37608.2.diff" title="Download"&gt;â€‹&lt;/a&gt; uses &lt;code&gt;PATHINFO_FILENAME&lt;/code&gt; instead.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>37608.2.diff attached to Ticket #37608</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37608/37608.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37608/37608.2.diff/1473369345892995</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:231</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:231/1473368887531245</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:226" title="Comment 226"&gt;nerrad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So we were getting failing unit tests in our builds after this was deployed and so far it looks like it traces to our usage of the &lt;code&gt;tests_add_filter()&lt;/code&gt; function found in &lt;code&gt;/tests/phpunit/functions.php&lt;/code&gt;.  That function overrides &lt;code&gt;$wp_filter&lt;/code&gt; and doesn't implement the new changes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can confirm that there's an issue here. &lt;code&gt;tests_add_filter()&lt;/code&gt; still works OK before WP has loaded - &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt; takes care of the manually-set &lt;code&gt;$wp_filter&lt;/code&gt; keys. But if you run &lt;code&gt;tests_add_filter()&lt;/code&gt; after these pre-bootstrap filters are normalized, they never get converted to &lt;code&gt;WP_Hook&lt;/code&gt; objects. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff" title="Attachment '17817.25.diff' in Ticket #17817"&gt;17817.25.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.25.diff" title="Download"&gt;â€‹&lt;/a&gt; is a simple fix, though the &lt;code&gt;class_exists()&lt;/code&gt; check might break once &lt;code&gt;WP_Hook&lt;/code&gt; is autoloaded; we may want a global flag or a constant or somesuch to keep track of whether preexisting hooks have been converted.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>17817.25.diff attached to Ticket #17817</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:03:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff/1473368593933741</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:01:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:7/1473368514771592</guid>
      <description>&lt;p&gt;
It would be helpful to start building a list of filenames and expected titles that are based on those filenames so that we can build out tests. A list in tests is also being built as part of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22363" title="#22363: defect (bug): Accents in attachment filenames should be sanitized (assigned)"&gt;#22363&lt;/a&gt; that should also be useful here.
&lt;/p&gt;
&lt;p&gt;
One key distinction between these tickets is that here we're worried about sanitizing the filename for use as the attachment's post title. In &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22363" title="#22363: defect (bug): Accents in attachment filenames should be sanitized (assigned)"&gt;#22363&lt;/a&gt;, we're focused on sanitizing the filename for use as an actual filename. There will likely be some difference is how that should be handled. This is seen in @arhenderson63's report too, where the following is expected:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Upload &lt;code&gt;Acer Ã—freemanii 'Jeffersred' (Autumn BlazeÂ®); 2Â½ in.jpg&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Stored filename &lt;code&gt;Acer-Ã—freemanii-Jeffersred-Autumn-BlazeÂ®-2Â½-in.jpg&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Attachment title &lt;code&gt;Acer Ã—freemanii 'Jeffersred' (Autumn BlazeÂ®); 2Â½ in&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also worth noting is that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38294" title="Media: when calling `pathinfo()`, also pass a `PATHINFO_*` constant to ..."&gt;[38294]&lt;/a&gt; has changed the behavior in 4.7 trunk so that the file extension remains as part of the attachment title. We'll want to fix that as well, but it may cause confusion short term with any tests that are written.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 20:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:19/1473367625426440</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25293#comment:18" title="Comment 18"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25293#comment:17" title="Comment 17"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking at this ticket, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;, &lt;code&gt;WP_State&lt;/code&gt; is not a good name for this site-related class.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1, the name should be more specific. Anyone has an idea better than &lt;code&gt;WP_Site_State&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. We should try to name this in a way that supports some of the things we may be able to do in the future. It's maintaining the context of a site / network in a (global) WordPress instance. The old meaning of the "site" term (MU style) would kind of work here as it's a site containing one or more networks with one or more blogs. We need to find the right terms to describe how the context of that is switched.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding an interface, I'm not sure how this class would have anything in common with &lt;code&gt;WP_Locale_State&lt;/code&gt; other than it switches something - might be sufficient for an interface later, or can you come up with something in particular?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be nice to identify these common areas. That each could (1) maintain a stack of contexts, (2) move to a new context, (3) restore to a previous context, and (4) restore to a specific context should mean that there are areas that overlap pretty well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 20:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:230</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:230/1473366370135156</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1473366366000298"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Thu, 08 Sep 2016 20:03:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:1/1473365019356504</guid>
      <description>&lt;p&gt;
The two vertical lines on the attached graph are:
&lt;/p&gt;
&lt;p&gt;
1) When I first deployed the 4.6.1 WordPress update
2) When I deployed the pre-4.6-version of l10n.php, without the _load_textdomain_just_in_time() function.
&lt;/p&gt;
&lt;p&gt;
I have since deployed the newest version of l10n.php with the line of code I mentioned previously.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37997" title="#37997: defect (bug): Increase in function calls to get_locale() because of ... (closed: fixed)"&gt;sharkomatic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When I updated a site to WordPress 4.6, I noticed a dramatic increase in function calls to get_locale() in New Relic, which we use to track our server and site performance. I believe I have traced the issue to the new function _load_textdomain_just_in_time(). In the function description, it says that when it first encounters a new textdomain, it will try to load translation files from 'wp-content/languages.' The problem is that if no translation files exist for that textdomain, _load_textdomain_just_in_time() goes through the entire process each time it is called because the domain is never being added to the $l10n_unloaded array. I added the following line just before line 857 in l10n.php as a temporary fix on our site:
&lt;/p&gt;
&lt;p&gt;
$l10n_unloaded[ $domain ] = true;
&lt;/p&gt;
&lt;p&gt;
I'm attaching a screenshot of the graph in New Relic that shows the increase in function calls and execution time for get_locale() with the current _load_textdomain_just_in_time() function code in place. Since adding the domain to $l10_unloaded, I have not noticed any performance decreases in the site.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>locale-hook-increase-wp-4-6.png attached to Ticket #37997</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Thu, 08 Sep 2016 20:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37997/locale-hook-increase-wp-4-6.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37997/locale-hook-increase-wp-4-6.png/1473364823462371</guid>
      <description>&lt;p&gt;
Increase in get_locale() function calls in WP 4.6+
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) created</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Thu, 08 Sep 2016 19:59:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997/1473364781076847</guid>
      <description>&lt;p&gt;
When I updated a site to WordPress 4.6, I noticed a dramatic increase in function calls to get_locale() in New Relic, which we use to track our server and site performance. I believe I have traced the issue to the new function _load_textdomain_just_in_time(). In the function description, it says that when it first encounters a new textdomain, it will try to load translation files from 'wp-content/languages.' The problem is that if no translation files exist for that textdomain, _load_textdomain_just_in_time() goes through the entire process each time it is called because the domain is never being added to the $l10n_unloaded array. I added the following line just before line 857 in l10n.php as a temporary fix on our site:
&lt;/p&gt;
&lt;p&gt;
$l10n_unloaded[ $domain ] = true;
&lt;/p&gt;
&lt;p&gt;
I'm attaching a screenshot of the graph in New Relic that shows the increase in function calls and execution time for get_locale() with the current _load_textdomain_just_in_time() function code in place. Since adding the domain to $l10_unloaded, I have not noticed any performance decreases in the site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:87/1473360965928878</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:85" title="Comment 85"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A reference to a global, verses a direct global import is ultimately the same object, sure, you're accessing it differently, you're creating an extra memory reference to it, but it's still a global object which you're pulling in to every function you use it within.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think there may actually be a change (desired or not) in behaviour here.
&lt;/p&gt;
&lt;p&gt;
With the &lt;code&gt;global $wpdb&lt;/code&gt; in each method, you import the latest state of &lt;code&gt;$wpdb&lt;/code&gt; when the method is called.
&lt;/p&gt;
&lt;p&gt;
With the global being assigned to the class property in the constructor, you pull in the state at the time the class is instantiated. If the global has been changed between the constructor being called and a method being called, I don't think the method will see that, as it still has &lt;code&gt;$wpdb&lt;/code&gt; from the earlier state.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:45:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:53/1473360342380024</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26511#comment:52" title="Comment 52"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@GaryJ Looking at &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25293" title="#25293: defect (bug): Switch_to_blog not switching the siteid (new)"&gt;#25293&lt;/a&gt;, an interface would make sense, even though it's probably a bit too much for now for only like 2-3 public methods.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even if there was just one public method, having an interface would contractually agree that that one method was present. Defensive coding should outweigh an extra file potentially being loaded IMHO.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:11/1473360013056866</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.2.diff" title="Attachment '37128-usage.2.diff' in Ticket #37128"&gt;37128-usage.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37128/37128-usage.2.diff" title="Download"&gt;â€‹&lt;/a&gt; includes some use-cases implemented for &lt;code&gt;wp_list_sort()&lt;/code&gt; in Core. When testing make sure to also merge the patch for the actual functionality (since this patch only includes implementation).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37128-usage.2.diff attached to Ticket #37128</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.2.diff/1473359918151074</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37128-usage.diff attached to Ticket #37128</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.diff/1473359828780999</guid>
      <description>&lt;p&gt;
Usage examples for &lt;code&gt;wp_list_sort()&lt;/code&gt; in Core
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>johnregan3</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:24/1473359737448382</guid>
      <description>&lt;p&gt;
CSSTidy hasn't been updated since 2007 (&lt;a class="ext-link" href="http://csstidy.sourceforge.net/changelog.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://csstidy.sourceforge.net/changelog.php&lt;/a&gt;).  Naturally, this is a problem since it does not support CSS3.
&lt;/p&gt;
&lt;p&gt;
There are a couple of forks out there, but it would take some time to review their work if we were to go with any of them. Plus, we'd want to contact the author before using them.  Not sure if this is really a viable option at this point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:12/1473358837160396</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Today I've created all the 'mechanics' behind the sticky header feature.
&lt;/p&gt;
&lt;p&gt;
At the first glance my solution may not seem obvious (i.e. using &lt;code&gt;position: fixed&lt;/code&gt;). I have kept in mind updates that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt; is going to introduce (hopefully in this release). Panels/sections are transitioned there using CSS transforms. They create new stacking contexts and paint layers, making it really hard to make use of &lt;code&gt;position: fixed&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I still have to find best way to bind header positioning method to &lt;code&gt;scroll&lt;/code&gt; event on the sidebar (&lt;code&gt;scroll&lt;/code&gt; in current implementation of panels/sections is happening on either the sidebar or inner &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;s; this will get simplified thanks to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Below you can see the actual effect of header toggling. I tried to make it as natural as possible, though I'm open to UX feedback.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/PFnHjlutQV.gif"&gt;&lt;img src="https://cldup.com/PFnHjlutQV.gif" alt="https://cldup.com/PFnHjlutQV.gif" crossorigin="anonymous" title="https://cldup.com/PFnHjlutQV.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(Link to better quality video: &lt;a class="ext-link" href="https://cldup.com/yOM0Mr7GIO.mov"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://cldup.com/yOM0Mr7GIO.mov&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Here is a PR with current WIP:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/155"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/155&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:19:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:57/1473358771039100</guid>
      <description>&lt;p&gt;
Summarizing the discussion in the design chat, it sounds like we don't need to add the vertical-position options due to lack of need/support requests for them (or background-related options in general). We did decided to go with the approach from @cdog if we do add those though. Therefore, we need an updated patch that implements &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22058#comment:43" title="Comment 43"&gt;43&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
We also decided to explore an alternate approach that removes these options in favor of a preset-selector (as has been suggested before), which would internally set the values of the existing options for backwards compatibility. We'll need mockups and a patch for that approach as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>hugobaeta</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:6/1473358744372735</guid>
      <description>&lt;p&gt;
+1 as well for underline!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:17:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:5/1473358667147687</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473358665000287"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:10/1473358588664247</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37128#comment:9" title="Comment 9"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about removing that third parameter and always requiring a key =&amp;gt; value pair?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was aiming for parity with how all the &lt;code&gt;*_Query&lt;/code&gt; classes handle their order arguments, but I'm certainly open to remove that parameter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:14:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:9/1473358475975023</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37128#comment:8" title="Comment 8"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing that isn't obvious from me just reading the tests and the docs is what happens if wp_list_sort is called on an object where &lt;code&gt;$orderby&lt;/code&gt; isn't set on each field?  Where does that fall in the sort?  Seems like that is something that should be documented and tested so the code remains consistent into the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If the &lt;code&gt;$orderby&lt;/code&gt; field isn't set on one of the objects/arrays compared, the comparison is skipped, basically resulting in an equal comparison. In this case the next field compared (if using an array of &lt;code&gt;$orderby =&amp;gt; $order&lt;/code&gt;) will decide. If all comparisons between two objects result in an equal check, the whole check will cause an equal result (i.e. return 0). Since PHP only does unstable sort, this will unfortunately randomize the result. However we can improve this if needed, for example by adding an internal &lt;code&gt;__index&lt;/code&gt; property on each item in the array (and removing it again after the comparison) and then fallback to it to maintain the original order on an equal comparison.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't really think we should go as far as adding internal properties and such and simply let PHP handle this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, what about when you want to do both asc and desc ?  For example, alphabetical by title, but reverse chronological? Perhaps there should just be a single argument that you pass in that includes both the field and the direction?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the patch you can do that already: you can specify the &lt;code&gt;$orderby&lt;/code&gt; parameter as an array of (multiple) &lt;code&gt;$orderby =&amp;gt; $order&lt;/code&gt; pairs (in this case it will skip the third &lt;code&gt;$order&lt;/code&gt; parameter). Is that what you meant or did I misunderstand you?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What about removing that third parameter and always requiring a key =&amp;gt; value pair?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:11:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:18/1473358318923569</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25293#comment:17" title="Comment 17"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking at this ticket, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;, &lt;code&gt;WP_State&lt;/code&gt; is not a good name for this site-related class. I'd rather see &lt;code&gt;WP_Site_State&lt;/code&gt; and &lt;code&gt;WP_Locale_State&lt;/code&gt; (currently &lt;code&gt;WP_Locale_Switcher&lt;/code&gt;) to implement a &lt;code&gt;WP_State&lt;/code&gt; interface or an abstract class of such name.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1, the name should be more specific. Anyone has an idea better than &lt;code&gt;WP_Site_State&lt;/code&gt;? I feel that is not accurate enough since it also indirectly handles the network state (by switching the network automatically when the site is switched). Regarding an interface, I'm not sure how this class would have anything in common with &lt;code&gt;WP_Locale_State&lt;/code&gt; other than it switches something - might be sufficient for an interface later, or can you come up with something in particular?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:8/1473357748580191</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37128#comment:7" title="Comment 7"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In general, core has tended to not add utility functions that it doesn't use.  Is there anywhere in core this would make sense right now?  Not saying that should keep it out, but I think if core can use it, the case for including it is stronger.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point, I was actually planning to look for use-cases earlier. I just checked and found several places where using &lt;code&gt;wp_list_sort()&lt;/code&gt; would make sense. We could get rid of the following functions/methods (or at least not use them anymore):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;_usort_terms_by_name()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_usort_terms_by_ID()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_sort_nav_menu_items()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Customize_Manager::_cmp_priority()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Customize_Widgets::_sort_name_callback()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There might be more, but that's what I found now. So there would indeed be a use for the function in Core. I can update another patch later today or tomorrow to illustrate what the implementation could look like.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing that isn't obvious from me just reading the tests and the docs is what happens if wp_list_sort is called on an object where &lt;code&gt;$orderby&lt;/code&gt; isn't set on each field?  Where does that fall in the sort?  Seems like that is something that should be documented and tested so the code remains consistent into the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If the &lt;code&gt;$orderby&lt;/code&gt; field isn't set on one of the objects/arrays compared, the comparison is skipped, basically resulting in an equal comparison. In this case the next field compared (if using an array of &lt;code&gt;$orderby =&amp;gt; $order&lt;/code&gt;) will decide. If all comparisons between two objects result in an equal check, the whole check will cause an equal result (i.e. return 0). Since PHP only does unstable sort, this will unfortunately randomize the result. However we can improve this if needed, for example by adding an internal &lt;code&gt;__index&lt;/code&gt; property on each item in the array (and removing it again after the comparison) and then fallback to it to maintain the original order on an equal comparison.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, what about when you want to do both asc and desc ?  For example, alphabetical by title, but reverse chronological? Perhaps there should just be a single argument that you pass in that includes both the field and the direction?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the patch you can do that already: you can specify the &lt;code&gt;$orderby&lt;/code&gt; parameter as an array of (multiple) &lt;code&gt;$orderby =&amp;gt; $order&lt;/code&gt; pairs (in this case it will skip the third &lt;code&gt;$order&lt;/code&gt; parameter). Is that what you meant or did I misunderstand you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:56/1473357346193043</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473357343000214"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:71/1473356780113155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473356776000193"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:11/1473356500460481</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473356491000175"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:229</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:229/1473355248008500</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:224" title="Comment 224"&gt;danielbachhuber&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI - Because WP-CLI directly modifies the &lt;code&gt;$wp_filter&lt;/code&gt; global, this &lt;code&gt;WP_Hook&lt;/code&gt; thing breaks the implementation we adopted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As it turns out, WP-CLI broke because of poor coding on my part. My bad. See &lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/pull/3384"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/wp-cli/wp-cli/pull/3384&lt;/a&gt; for the fix.
&lt;/p&gt;
&lt;p&gt;
However, I discovered this breaks the intent of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37707" title="#37707: enhancement: Change the inclusion of 'plugins.php' to require_once (closed: fixed)"&gt;#37707&lt;/a&gt; because it depends on &lt;code&gt;WPINC&lt;/code&gt;, which is only available after &lt;code&gt;wp-settings.php&lt;/code&gt; has begun loading.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37996 (Unnecessary rewrite rules added for the /embed endpoint) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:18:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37996</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37996/1473355133425241</guid>
      <description>&lt;p&gt;
WordPress appends &lt;code&gt;/embed&lt;/code&gt; to a bunch of rewrite rules that it shouldn't. By default, the following rewrite rules are present on every site but are not valid:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;category/(.+?)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;tag/([^/]+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;type/([^/]+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;comments/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;search/(.+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;author/([^/]+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;([0-9]{4})/([0-9]{1,2})/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;([0-9]{4})/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These are generated in &lt;code&gt;WP_Rewrite::generate_rewrite_rules()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35067" title="#35067: enhancement: Embed support for Recent Posts / Static Pages / Archive Pages (closed: maybelater)"&gt;#35067&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37384 (Text alignment in options-discussion.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37384#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37384#comment:10/1473354688233147</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by foliovision. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473354685000059"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37860 (Labels are misplaced with respect to text box.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37860#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37860#comment:4/1473354378450325</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473354374000037"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37707 (Change the inclusion of 'plugins.php' to require_once) reopened</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37707#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37707#comment:6/1473354085626779</guid>
      <description>&lt;p&gt;
Now that &lt;code&gt;/wp-includes/plugin.php&lt;/code&gt; requires the &lt;code&gt;WPINC&lt;/code&gt; constant to be set, it's not possible to require &lt;code&gt;/wp-includes/plugin.php&lt;/code&gt; before &lt;code&gt;wp-settings.php&lt;/code&gt; is loaded. &lt;code&gt;WPINC&lt;/code&gt; is set at the beginning of &lt;code&gt;wp-settings.php&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #35689 (Pagination issue on front page after 4.4.1 update) updated</title>
      
        <dc:creator>m_butcher</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35689#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35689#comment:14/1473353076934234</guid>
      <description>&lt;p&gt;
Having this issue and on version 4.6.1. Interesting enough, it works on our dev server (Pantheon) but not the live site (WPE).
&lt;/p&gt;
&lt;p&gt;
I have noticed that when attempting to go to the different blog pages via url, I have to go down to .../blog/page/8/ before I see any of the other pages. Past page 8, the pages work fine. Before page 8 they redirect back to the .../blog/ page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37978 (Warning: posix_getpwuid() has been disabled for security reasons) updated</title>
      
        <dc:creator>AndyDeGroo</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37978#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37978#comment:1/1473352999657055</guid>
      <description>&lt;p&gt;
I create a test script to see if &lt;code&gt;function_exists()&lt;/code&gt; really returns true for disabled funtions:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$disabled_functions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ini_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'disable_functions'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"disable_functions = &lt;/span&gt;&lt;span class="si"&gt;$disabled_functions&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$disabled_functions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;","&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$disabled_functions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$disabled_functions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"function_exists('%s') =&amp;gt; %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s1"&gt;'true'&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'false'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The results are even more confusing. Same host, same configuration but all checks return &lt;code&gt;false&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;disable_functions = exec, passthru, shell_exec, system, proc_open, popen, apache_child_terminate, apache_setenv, define_syslog_variables, pcntl_exec, openlog, posix_getpwuid, posix_kill, posix_setpgid, posix_setsid, posix_setuid, posix_setuid, posix_uname, proc_close, proc_get_status, proc_open, proc_terminate, syslog
function_exists('exec') =&amp;gt; false
function_exists('passthru') =&amp;gt; false
function_exists('shell_exec') =&amp;gt; false
function_exists('system') =&amp;gt; false
function_exists('proc_open') =&amp;gt; false
function_exists('popen') =&amp;gt; false
function_exists('apache_child_terminate') =&amp;gt; false
function_exists('apache_setenv') =&amp;gt; false
function_exists('define_syslog_variables') =&amp;gt; false
function_exists('pcntl_exec') =&amp;gt; false
function_exists('openlog') =&amp;gt; false
function_exists('posix_getpwuid') =&amp;gt; false
function_exists('posix_kill') =&amp;gt; false
function_exists('posix_setpgid') =&amp;gt; false
function_exists('posix_setsid') =&amp;gt; false
function_exists('posix_setuid') =&amp;gt; false
function_exists('posix_setuid') =&amp;gt; false
function_exists('posix_uname') =&amp;gt; false
function_exists('proc_close') =&amp;gt; false
function_exists('proc_get_status') =&amp;gt; false
function_exists('proc_open') =&amp;gt; false
function_exists('proc_terminate') =&amp;gt; false
function_exists('syslog') =&amp;gt; false
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37995 (Buddypress Activity bug (?)) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37995#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37995#comment:1/1473352919706127</guid>
      <description>invalid: &lt;p&gt;
Hi @ico33 - This appears to be a bbPress bug, not a WordPress one. I've opened a ticket there: &lt;a class="ext-link" href="https://bbpress.trac.wordpress.org/ticket/2992"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://bbpress.trac.wordpress.org/ticket/2992&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>arhenderson63</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:6/1473352346015379</guid>
      <description>&lt;p&gt;
@joemcgill
&lt;/p&gt;
&lt;p&gt;
In examining the code for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt;, it appears that the sanitization routine is implemented for the title as well.  I can understand the logic for sanitizing &lt;em&gt;filenames&lt;/em&gt;, but title is overkill; especially as there is (a very tedious) work-around by manually editing the media title in WP Media Manager.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) closed</title>
      
        <dc:creator>pbarnhart</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:8/1473351513261655</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>pbarnhart</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:7/1473351481770814</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37946#comment:5" title="Comment 5"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Nailed!  Updated server to 2.4.23 and media posts via HTTP/2 now working.  Thanks and glad it was a simple fix on my end.  Thanks for troubleshooting this and for the reminder I need to keep up with my Apache releases :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37995 (Buddypress Activity bug (?)) created</title>
      
        <dc:creator>ico33</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37995/1473350979001939</guid>
      <description>&lt;p&gt;
As suggested in Buddypress Support I report here the problem.
&lt;/p&gt;
&lt;p&gt;
I have Wordpress, Bbpress and Buddypress. When I create a topic in a bbpress forum, it is listed in my activity (Buddypress). And that's ok.
&lt;/p&gt;
&lt;p&gt;
If I delete the topic, it is NOT deleted from activity. So if someone click on the topic in my activity, will have the error message of Page-not-found. It seems that buddypress activity doesn't synchro/refresh when a bbpress topic is deleted.
&lt;/p&gt;
&lt;p&gt;
See also here: &lt;a class="ext-link" href="https://buddypress.org/support/topic/buddypress-activity-does-not-deleterefresh-when-a-bbpress-topic-is-deleted/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://buddypress.org/support/topic/buddypress-activity-does-not-deleterefresh-when-a-bbpress-topic-is-deleted/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:5/1473350792717376</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #forums by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1473350790002949"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:228</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:228/1473349885684140</guid>
      <description>&lt;p&gt;
Here's the code I see for &lt;code&gt;tests_add_filter&lt;/code&gt; (to be clear, this is pulled directly from the WordPress Core UnitTest files):
&lt;/p&gt;
&lt;pre class="wiki"&gt;// For adding hooks before loading WP
function tests_add_filter($tag, $function_to_add, $priority = 10, $accepted_args = 1) {
	global $wp_filter;
	$idx = _test_filter_build_unique_id($tag, $function_to_add, $priority);
	$wp_filter[$tag][$priority][$idx] = array('function' =&amp;gt; $function_to_add, 'accepted_args' =&amp;gt; $accepted_args);
	return true;
}
&lt;/pre&gt;&lt;p&gt;
All we have in our tests is implementation of that filter in our plugin unit tests bootstrap.  So basically we do something like:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;tests_add_filter( 'some_filter_we_want_to_hook_into', '__return_false' )&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:6/1473349860337308</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sounds like this is probably a server configuration issue. I'm going to reassign to @jeremyfelt to continue reviewing and leave it open for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:10/1473349722076735</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:80/1473349633737840</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt;. Looks like we need to consider use cases where people are expecting multi-word file names to be respected as the title in the media editor. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22363/22363.diff" title="Attachment '22363.diff' in Ticket #22363"&gt;22363.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22363/22363.diff" title="Download"&gt;â€‹&lt;/a&gt; converts the title of an attachment named &lt;code&gt;This is a file.jpg&lt;/code&gt; to &lt;code&gt;this-is-a-file-jpg&lt;/code&gt;, which is unexpected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37994 (Preflight CORS check fails because of missing ...) created</title>
      
        <dc:creator>nuvoPoint</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37994/1473349524298244</guid>
      <description>&lt;p&gt;
Working on a single page app in Angular2 (Ionic 2), and trying to talk to the WP REST API V2.
&lt;/p&gt;
&lt;p&gt;
GETs work fine, but when I try to POST, the preflight check fails because of a missing Access-Control-Allow-Headers returned from WP REST.
&lt;/p&gt;
&lt;p&gt;
The preflight check checks for &lt;code&gt;Access-Control-Request-Headers: Authorization, Content-Type&lt;/code&gt; with an OPTIONS call, and WP REST replies:
&lt;code&gt;Access-Control-Allow-Headers: Authorization&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The missing "Content-Type" from the reply, blocks the following post-flight request, and execution stops.
&lt;/p&gt;
&lt;p&gt;
I can easily solve this problem with some custom headers via PHP, but I simply request that you add official support for this. Would be a lot less hassle for a lot of Javascript based apps.
&lt;/p&gt;
&lt;p&gt;
Basically the only thing you need to add is "Content-Type" to line 237 of /wp-includes/rest-api/class-wp-rest-server.php.
&lt;/p&gt;
&lt;p&gt;
Anyway, here's a workaround:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'rest_post_dispatch'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;\WP_REST_Response&lt;/span&gt; &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'OPTIONS'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Access-Control-Allow-Headers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Authorization, Content-Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Still, would prefer official support for it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:227</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:227/1473349512414370</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:226" title="Comment 226"&gt;nerrad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So we were getting failing unit tests in our builds after this was deployed and so far it looks like it traces to our usage of the &lt;code&gt;tests_add_filter()&lt;/code&gt; function found in &lt;code&gt;/tests/phpunit/functions.php&lt;/code&gt;.  That function overrides &lt;code&gt;$wp_filter&lt;/code&gt; and doesn't implement the new changes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you provide a sample test that demonstrates this failure please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37993 (jQuery Syntax Error when not adding a class in 'before_widget') closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37993#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37993#comment:2/1473349449102134</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38577" title="Customize: Prevent widget previewing logic from building invalid ..."&gt;38577&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Prevent widget previewing logic from building invalid jQuery selectors when sidebars are registered without a class name in &lt;code&gt;before_widget&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37993" title="#37993: defect (bug): jQuery Syntax Error when not adding a class in 'before_widget' (closed: fixed)"&gt;#37993&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38577]: Customize: Prevent widget previewing logic from building invalid ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38577</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38577/1473349448263027</guid>
      <description>&lt;p&gt;
Customize: Prevent widget previewing logic from building invalid jQuery selectors when sidebars are registered without a class name in &lt;code&gt;before_widget&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37993" title="#37993: defect (bug): jQuery Syntax Error when not adding a class in 'before_widget' (closed: fixed)"&gt;#37993&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #37987,â€‹37989 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37987%2C37989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37987%2C37989/1473349369099299</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37987" title="#37987: defect (bug): Sanitize filename (closed: duplicate)"&gt;#37987&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:42:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:226</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:226/1473349332516607</guid>
      <description>&lt;p&gt;
So we were getting failing unit tests in our builds after this was deployed and so far it looks like it traces to our usage of the &lt;code&gt;tests_add_filter()&lt;/code&gt; function found in &lt;code&gt;/tests/phpunit/functions.php&lt;/code&gt;.  That function overrides &lt;code&gt;$wp_filter&lt;/code&gt; and doesn't implement the new changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37993 (jQuery Syntax Error when not adding a class in 'before_widget') updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37993#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37993#comment:1/1473349156924849</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37993" title="#37993: defect (bug): jQuery Syntax Error when not adding a class in 'before_widget' (closed: fixed)"&gt;#37993&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:3/1473349091171183</guid>
      <description>&lt;p&gt;
And if the title is in Cyrillic, it gets urlencoded and becomes completely unreadable, e.g. &lt;code&gt;Ð˜Ð·Ð¾Ð±Ñ€Ð°Ð¶ÐµÐ½Ð¸Ðµ 1&lt;/code&gt; turns into &lt;code&gt;%d0%98%d0%b7%d0%be%d0%b1%d1%80%d0%b0%d0%b6%d0%b5%d0%bd%d0%b8%d0%b5%201&lt;/code&gt; :( Same for Arabic, Japanese, and other non-ASCII alphabets, I guess.
&lt;/p&gt;
&lt;p&gt;
Confirmed on all releases &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; was backported to: 3.7.16, 3.8.16, 3.9.14, 4.0.13, 4.1.13, 4.2.10, 4.3.6, 4.4.5, 4.5.4, 4.6.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:2/1473348899818541</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
&lt;p&gt;
[Edit: Incorrect ticket number.]
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10511 (Enclosure Custom Fields are automatically deleted) updated</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10511#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10511#comment:29/1473348850621420</guid>
      <description>&lt;p&gt;
It's been 20 months since the last reply to this thread. Any thought by WordPress core devs on addressing this problem?
&lt;/p&gt;
&lt;p&gt;
My recommendation is to restore the behavior otto42 referenced years ago (&lt;a class="ext-link" href="https://web.archive.org/web/20150926173355/https://wordpress.org/support/topic/problem-with-the-built-in-podcasting-functionality"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://web.archive.org/web/20150926173355/https://wordpress.org/support/topic/problem-with-the-built-in-podcasting-functionality&lt;/a&gt;) allowing for manually entering enclosures and not deleting them if the media url is not present in the blog post content. I would also ask that the practice of auto creating enclosures be revisited and be removed from core. It is problematic because it does not limit the enclosures to 1. As of today there is no podcast client application that can deal with multiple enclosures in a feed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:33:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:1/1473348781686877</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @arhenderson63,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report. This looks like a consequence of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt;, which was an intentional change but may be more strict than is necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:225</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:225/1473348617476085</guid>
      <description>&lt;p&gt;
I don't see any reason that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38282" title="Bootstrap/Load: Include Plugin API via `require_once`
Currently, ..."&gt;r38282&lt;/a&gt; won't be staying in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:26:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:224</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:224/1473348411621934</guid>
      <description>&lt;p&gt;
FYI - Because WP-CLI directly modifies the &lt;code&gt;$wp_filter&lt;/code&gt; global, this &lt;code&gt;WP_Hook&lt;/code&gt; thing breaks the implementation we adopted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;. See &lt;a class="ext-link" href="https://travis-ci.org/wp-cli/wp-cli/jobs/158420911"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://travis-ci.org/wp-cli/wp-cli/jobs/158420911&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38282" title="Bootstrap/Load: Include Plugin API via `require_once`
Currently, ..."&gt;r38282&lt;/a&gt; stays in, I can get around this by requiring &lt;code&gt;plugins.php&lt;/code&gt; early in WP-CLI (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37707" title="#37707: enhancement: Change the inclusion of 'plugins.php' to require_once (closed: fixed)"&gt;#37707&lt;/a&gt;) and using &lt;code&gt;add_action()&lt;/code&gt; and &lt;code&gt;add_filter()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37993 (jQuery Syntax Error when not adding a class in 'before_widget') created</title>
      
        <dc:creator>acosmin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37993</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37993/1473348025575605</guid>
      <description>&lt;p&gt;
If you remove the &lt;code&gt;widget&lt;/code&gt; class (or if you don't add a class) in &lt;code&gt;'before_widget' =&amp;gt; '&amp;lt;section id="%1$s" class="widget %2$s"&amp;gt;'&lt;/code&gt;, when using &lt;code&gt;register_sidebar()&lt;/code&gt; you get a jQuery Syntax Error in the Customizer.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;jquery.js?ver=1.12.4:2 Uncaught Error: Syntax error, unrecognized expression: SECTION.,SECTION.widget,SECTION.widget&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>fsockopen.php.patch attached to Ticket #37992</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:10:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37992/fsockopen.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37992/fsockopen.php.patch/1473347402040736</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37992 (fsockopen hard codes port 443 when http scheme used) created</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37992</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37992/1473347388266087</guid>
      <description>&lt;p&gt;
The Transport/fsockopen.php library hard codes port 443 when the scheme https is used. This does not allow for a custom port when using the https scheme. e.g. &lt;a class="ext-link" href="https://example.com:900/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://example.com:900/&lt;/a&gt; would be converted to &lt;a class="ext-link" href="https://example.com:443/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://example.com:443/&lt;/a&gt;. Attached patch fixes this by checking if the port is not already specified.
&lt;/p&gt;
&lt;p&gt;
This patch can be applied separately but was discovered while creating the patch for ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37991" title="#37991: defect (bug): fsockopen logic bug (closed: fixed)"&gt;#37991&lt;/a&gt; &lt;a href="https://core.trac.wordpress.org/attachment/ticket/37991/"&gt;https://core.trac.wordpress.org/attachment/ticket/37991/&lt;/a&gt;. Both tickets should be addressed together as they are related (this one impacts &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37991" title="#37991: defect (bug): fsockopen logic bug (closed: fixed)"&gt;#37991&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37991" title="#37991: defect (bug): fsockopen logic bug (closed: fixed)"&gt;#37991&lt;/a&gt; restores expected behavior for https scheme).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37478 (Customizer undefined property if widget area before/after values are empty) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:09:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37478#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37478#comment:5/1473347364115419</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473347359000272"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32790 (Filter for do_shortcode_tag()) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32790#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32790#comment:3/1473347127051199</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32790/32790.diff" title="Attachment '32790.diff' in Ticket #32790"&gt;32790.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32790/32790.diff" title="Download"&gt;â€‹&lt;/a&gt; introduces the &lt;code&gt;do_shortcode_tag&lt;/code&gt; filter to allow filtering the shortcode output. This also allows us, in combination with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38506" title="Shortcodes: Add the `pre_do_shortcode_tag` filter.
This filter allows ..."&gt;38506&lt;/a&gt;, to cache expensive shortcodes.
&lt;/p&gt;
&lt;p&gt;
I also removed a bit of repetitive code before to only handle what's different between the two if-clauses (namely whether &lt;code&gt;$content&lt;/code&gt; is passed to the shortcode callback or not).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fsockopen.php.patch attached to Ticket #37991</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37991/fsockopen.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37991/fsockopen.php.patch/1473346773627461</guid>
      <description>&lt;p&gt;
Patch for setting host: without port for http and https when default port is used
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>32790.diff attached to Ticket #32790</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32790/32790.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32790/32790.diff/1473346769464489</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37991 (fsockopen logic bug) created</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:58:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37991</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37991/1473346710791474</guid>
      <description>&lt;p&gt;
I came across this while debugging a handful of users who had an issue with our service. Currently the Transport/fsockopen.php library is including the connection port to the HTTP headers for https, even though it is using the default port 443.
&lt;/p&gt;
&lt;p&gt;
Referencing the RFC:
&lt;/p&gt;
&lt;pre class="wiki"&gt;A "host" without any trailing port information implies the default port for the service requested (e.g., "80" for an HTTP URL).
&lt;/pre&gt;&lt;p&gt;
Since https has a default port of 443, I would recommend the following change attached as a patch to the request() function in fsockopen.php
&lt;/p&gt;
&lt;p&gt;
Note: it is possible that the service http is used on port 443, as well as https on port 80. This is why the logic also checks the 'scheme'.
&lt;/p&gt;
&lt;p&gt;
I've provided a readable patch how this can be written. How it is written ultimately could change.
&lt;/p&gt;
&lt;p&gt;
Also note that as-is you are not violating the RFC, but also not following standard practice of leaving the port off when it is the default port for the service / 'scheme'.
&lt;/p&gt;
&lt;p&gt;
Before WordPress 4.6 the behavior was to not include the port for https when port 443 is used. I will be submitting a 2nd trac that ties into this one as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37990 (Introduce `WP_Hooks`) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:49:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37990/1473346165619745</guid>
      <description>&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;38571&lt;/a&gt;, I wonder whether we should introduce a &lt;code&gt;WP_Hooks&lt;/code&gt; (or &lt;code&gt;WP_Hook_Manager&lt;/code&gt;) class to take care of all hook-related functionality. This wouldn't really have any functional benefit at this point, but I was thinking about this more related to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt; - since the changeset mentioned above already changed the global variables in a backward-incompatible manner, maybe we can get rid of them entirely then?
&lt;/p&gt;
&lt;p&gt;
Everything related that is currently stored as global, we could store as properties in the &lt;code&gt;WP_Hooks&lt;/code&gt; class, and the &lt;code&gt;WP_Hooks&lt;/code&gt; class could become accessible through a &lt;code&gt;WP::get( 'hooks' )&lt;/code&gt; or similar. The current hook functions would become wrappers for &lt;code&gt;WP_Hooks&lt;/code&gt; methods then.
&lt;/p&gt;
&lt;p&gt;
I'm aware that this would be a very critical change, however like I said, we already changed how the global variables work so we could also remove them (and direct access is discouraged anyway). Of course this would also require another dev note. Those people who really need direct access could then do &lt;code&gt;WP::get( 'hooks' )-&amp;gt;wp_filters&lt;/code&gt; instead of `$GLOBALS&lt;a class="missing wiki"&gt;wp_filters?&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37966 (Comment children missing on paged comment views) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:38:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37966#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37966#comment:6/1473345536563677</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #forums by zoonini. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1473345534002866"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:223</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:223/1473345441237723</guid>
      <description>&lt;p&gt;
A small improvement idea: I think it would make sense to separate the &lt;code&gt;WP_Hook::has_filter()&lt;/code&gt; and &lt;code&gt;WP_Hook::has_filters()&lt;/code&gt; methods completely so that both have a single responsibility: The &lt;code&gt;$function_to_check&lt;/code&gt; parameter would become required for &lt;code&gt;WP_Hook::has_filter()&lt;/code&gt; and we would no longer call &lt;code&gt;WP_Hook::has_filters()&lt;/code&gt; from &lt;code&gt;WP_Hook::has_filter()&lt;/code&gt;. The logic to be backwards compatible could then happen in the regular &lt;code&gt;has_filter()&lt;/code&gt; function - this way at least the new class methods would only have one specific purpose.
&lt;/p&gt;
&lt;p&gt;
Another thing I observed: This might have a reason I'm overlooking right now, but why aren't we storing the tag (hook name) in the class as property (and pass it to the constructor)? This would allow us to get rid of passing the &lt;code&gt;$tag&lt;/code&gt; parameter on all the methods. Sorry to come up with this now, I haven't really paid attention to this movement before :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) created</title>
      
        <dc:creator>arhenderson63</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989/1473344190475796</guid>
      <description>&lt;p&gt;
Managing a media-heavy site that auto-upgraded to WP 4.6.1 overnight (8 Sept 2016).  On new media uploads, WP is now changing the title to a concatenated string with escape characters rather than leaving the title as the original filename.  This is an issue as I have relied on clean original filenames as titles for images; now each image title must be individually edited after upload as the WP-assigned title is decidedly unfriendly to audience users.  This behavior occurs only on new uploads and does not effect already resident media.
&lt;/p&gt;
&lt;p&gt;
Example:
Upload a file called 'Acer Ã—freemanii 'Jeffersred' (Autumn BlazeÂ®); 2Â½ in.jpg'
&lt;/p&gt;
&lt;p&gt;
BEHAVIOR IN WP 4.6.0 and lower
WP Filename: %ROOT%/wp-content/uploads/Acer-Ã—freemanii-Jeffersred-Autumn-BlazeÂ®-2Â½-in.jpg
WP Title:  Acer Ã—freemanii 'Jeffersred' (Autumn BlazeÂ®); 2Â½ in
&lt;/p&gt;
&lt;p&gt;
BEHAVIOR IN WP 4.6.1
WP Filename: %ROOT%/wp-content/uploads/Acer-Ã—freemanii-Jeffersred-Autumn-BlazeÂ®-2Â½-in.jpg
WP Title: acer-xfreemanii-jeffersred-autumn-blaze-2%c2%bd-in
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34635 (WordPress image's title is not alt) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:46:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34635#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34635#comment:20/1473342382990610</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473342380000233"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:10/1473342344767568</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:9/1473342327356762</guid>
      <description>&lt;p&gt;
The output buffering issue needs a bit more testing I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:8/1473342273265684</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38576" title="Formatting: Don't send an HTTP status code in `wp_send_json()` by ..."&gt;38576&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Formatting: Don't send an HTTP status code in &lt;code&gt;wp_send_json()&lt;/code&gt; by default. This avoids clobbering an HTTP status code that may have been set prior to calling this function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35666" title="#35666: enhancement: Add support for HTTP response codes to wp_send_json_error(), ... (closed: fixed)"&gt;#35666&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38576]: Formatting: Don't send an HTTP status code in `wp_send_json()` by ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:44:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38576</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38576/1473342272763083</guid>
      <description>&lt;p&gt;
Formatting: Don't send an HTTP status code in &lt;code&gt;wp_send_json()&lt;/code&gt; by default. This avoids clobbering an HTTP status code that may have been set prior to calling this function.
&lt;/p&gt;
&lt;p&gt;
Props westonruter
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35666" title="#35666: enhancement: Add support for HTTP response codes to wp_send_json_error(), ... (closed: fixed)"&gt;#35666&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>glafarge</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:10/1473341555684372</guid>
      <description>&lt;p&gt;
@pento : in my case your patch is working like a charm. Thank you :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:9/1473341373254197</guid>
      <description>&lt;p&gt;
I'm working on this ticket now, but I cannot seem to assign it to myself.
@westonruter or @celloexpressions - could any one of you change the ownership of the ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:222</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:222/1473340806053009</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Incorrect behavior is incorrect behavior and should be fixed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely, though utopian. Especially in a large project, it's extremely difficult to "force" developers/users to use it properly. Because what does "properly" even mean. This is where flexibility comes in and allowing developers to express and create amazing things. Of course there are boundaries, but isn't software here to try to break those?
&lt;/p&gt;
&lt;p&gt;
I totally agree with you, that in the scenario that you described, there are different way of interpreting what the developer wanted to achieve. That's a tough boundary to crack, as it's something a machine can't (maybe yet) know. Edge cases like that are clearly an exception, but should still have their place, motivating more developers to come up with unique and gorgeous solutions.
The same will be the case with this fix. Some time down the line, there will probably be new changes, optimisations, maybe a whole rewrite, who knows!
&lt;/p&gt;
&lt;p&gt;
But hey, we're all here to learn together, right? Striving to become better and write smarter code :-)
&lt;/p&gt;
&lt;p&gt;
I think we can put this discussion on pause here, as it isn't really contributing to this current issue any more, but thanks a lot for elaborating on your point!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37988 (Upgrade network: php timeout in wp-admin/network/upgrade.php) created</title>
      
        <dc:creator>podpirate</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:19:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37988</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37988/1473340754491038</guid>
      <description>&lt;p&gt;
Setup:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Pretty slow server running php 5.5 (As a result calling wp-admin/upgrade?step=upgrade_db might take several seconds in average.)
&lt;/li&gt;&lt;li&gt;PHP max_execution_time is 30 seconds. Value can't be changed by scripts.
&lt;/li&gt;&lt;li&gt;WP-Multisite with about 400 blogs.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Reproduction:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Call wp-admin/network/upgrade.php?action=upgrade
&lt;/li&gt;&lt;li&gt;Result: Network Upgrade gets stuck at some point, terminating with http error 500
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37853 (HTTP error when uploading images) updated</title>
      
        <dc:creator>cezariuszmarek</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37853#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37853#comment:5/1473340685067906</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the error is probably happening in the image processing library, PHP is not able to recover
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't know PHP, but isn't it possible to try-catch the error? And it you are able to display the "HTTP error" message, why can't you remove garbage from the database at the same time?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37977 (gettext Documentation Outdated) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37977#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37977#comment:1/1473340601170225</guid>
      <description>invalid: &lt;p&gt;
Thanks for the report, @giologist.
&lt;/p&gt;
&lt;p&gt;
The Codex is a wiki which means anyone with a WordPress.org user account can change the documentation there. Give it a whirl!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>Nathan Miller</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:00:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:7/1473339636622689</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
Thanks for the patch. Tested it and it is working. Great work.
&lt;/p&gt;
&lt;p&gt;
Will let you know if there is anything else that is needing work on :)
&lt;/p&gt;
&lt;p&gt;
Cheers. N
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:221</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:221/1473339628342130</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:220" title="Comment 220"&gt;noplanman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, I see what you mean.
&lt;/p&gt;
&lt;p&gt;
I'm just curious to know if recursive adding/removing of hooks within a hook would work properly then, as the array would be changing during the loop.
&lt;/p&gt;
&lt;p&gt;
At the moment I'm just happy that @pento has put in the effort to get this fixed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, that was it exactly. The problem is what do you want to happen? If you add a callback to a hook that is already running, then what do you want to happen?
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The callback is called at the next time the hook is called.
&lt;/li&gt;&lt;li&gt;The callback is called later within the same hook execution. So if you add a callback to hook 'something' running with priority 10, while running at priority 10, that same callback is called at some point soon after.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The solution can't have both. Or realistically, it could have both, but solutions for both are different and counter each other. I am sure this was mentioned at some point above. With the patch, great, I am guessing the patch is the option 2.
&lt;/p&gt;
&lt;p&gt;
The problem is what do people mean when they add to the same hook they are running on? So if the programmer starts adding callbacks to the 'wp_init' hook, do they mean they want it to run soon after? I understand there is a chicken and the egg problem. That is why there is an early process startup execution and late process startup execution hook. So you can manage what goes into the latter in the former.
&lt;/p&gt;
&lt;p&gt;
The point is more so that if you want to remove a callback from a hook, you may do so. What logical reason does a person have for adding more hooks to 'wp_init'? Do you mean you want to execute the callbacks? Why not just execute the callbacks?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For me, the problem is not that the problem should or should not have been fixed. Incorrect behavior is incorrect behavior and should be fixed. The problem is that the solution required is hideous. Not the code provided and the code required to accurately and completely fix the problem. The problem is fundamental with how PHP handles arrays and references and pointers. Requiring code that breaks this behavior in some way to provide consistency.
&lt;/p&gt;
&lt;p&gt;
This is code that when it breaks, it will be damn near impossible to fix. It will be damn near impossible to optimize. The original patch like the one committed was beautiful in that only one person knew how it worked. Only one or a few people would ever know how it worked. You do not want code like that in any project. You may think you understand how this code works, but you don't. Or at least, if it was like the original patch. The code that was committed appears to be a bit more straightforward, so I am not sure if that just means I know more or that the author is a better code artist.
&lt;/p&gt;
&lt;p&gt;
I only got to the point where what appears to be an incredibly expensive method is called, each time a callback is added to a hook. Sure, optimization is sometimes counter-intuitive, but when has sorting ever been a fast process? For each addition? Insanity. I would buy a hat and eat it, if sorting each time didn't have a huge performance hit.
&lt;/p&gt;
&lt;p&gt;
It is said that copying the array would have performance issues. How does what was committed not have huge performance issues?
&lt;/p&gt;
&lt;p&gt;
The effort is awesome, sure, but you just used C4 to clean a window. I guess technically, the window is clean, albeit scattered to the wind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37295 (PHP 7.1.0: Tests_Query_IsTerm::test_cat_uncat_action_tax() is failing) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37295#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37295#comment:15/1473335946759543</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37772 (Not working "wp_default_styles" on PHP 7.1.0) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37772#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37772#comment:9/1473335927408900</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37987 (Sanitize filename) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37987#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37987#comment:1/1473335359189973</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37987 (Sanitize filename) created</title>
      
        <dc:creator>potreb</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:41:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37987</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37987/1473334861642700</guid>
      <description>&lt;p&gt;
I use sanitize_file_name do rename files on the server. The new version of WordPress is changing the file name also in Media Manager.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://oi64.tinypic.com/2e5mm4o.jpg"&gt;&lt;img src="http://oi64.tinypic.com/2e5mm4o.jpg" alt="http://oi64.tinypic.com/2e5mm4o.jpg" crossorigin="anonymous" title="http://oi64.tinypic.com/2e5mm4o.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:220</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:220/1473334707485362</guid>
      <description>&lt;p&gt;
Ok, I see what you mean.
&lt;/p&gt;
&lt;p&gt;
I'm just curious to know if recursive adding/removing of hooks within a hook would work properly then, as the array would be changing during the loop.
&lt;/p&gt;
&lt;p&gt;
At the moment I'm just happy that @pento has put in the effort to get this fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:29:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:6/1473334192721118</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch works as expected.
&lt;/p&gt;
&lt;p&gt;
I was going to say that this needs to be added to the themes list table in the network admin as well, but it looks like we didn't implement Ajax search there. Something for a new ticket (any volunteers?).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13071 (Update bubble appears only at the second load) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:28:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13071#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13071#comment:33/1473334136867746</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could we at perhaps add some JavaScript that increases the counter in the admin menu when visiting &lt;code&gt;update-core.php&lt;/code&gt; for the first time?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:25:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:9/1473333933830209</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37982/37982.2.diff" title="Attachment '37982.2.diff' in Ticket #37982"&gt;37982.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37982/37982.2.diff" title="Download"&gt;â€‹&lt;/a&gt; adds unit tests.
&lt;/p&gt;
&lt;p&gt;
For anyone looking at this ticket not comfortable making changes to WordPress Core, a workaround is to set your &lt;code&gt;DB_CHARSET&lt;/code&gt; to &lt;code&gt;utf8&lt;/code&gt; instead of &lt;code&gt;utf8mb4&lt;/code&gt;, and if your &lt;code&gt;DB_COLLATE&lt;/code&gt; starts with &lt;code&gt;utf8mb4_&lt;/code&gt;, change that to &lt;code&gt;utf8_&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Please still test that the patch works for you, though. I'd like some more checks before I commit it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>dougwollison</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:219</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:219/1473333814380454</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:218" title="Comment 218"&gt;noplanman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jacobsantos
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still think it is funny that this whole thing could be solved with one line
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For learning sake, what fix are you referring to?
One line really isn't a big change and I'd really like to understand how it would fix this issue properly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If I had to guess, something like what me and others have proposed over the years in our duplicate tickets. Namely, copying the hooks list for a tag to a new variable and iterating over that. But it's been pointed out there are apparently performance issues with that solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37982.2.diff attached to Ticket #37982</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37982/37982.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37982/37982.2.diff/1473333767833344</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37986 (Requests: 'ssl' and 'local' args missing from HTTP API debug hooks) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37986</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37986/1473333587654139</guid>
      <description>&lt;p&gt;
The &lt;code&gt;$args&lt;/code&gt; array passed to the &lt;code&gt;http_api_debug&lt;/code&gt; hook is missing the &lt;code&gt;ssl&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt; elements that were present prior to WordPress 4.6.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:18:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:218</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:218/1473333535235706</guid>
      <description>&lt;p&gt;
@jacobsantos
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still think it is funny that this whole thing could be solved with one line
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For learning sake, what fix are you referring to?
One line really isn't a big change and I'd really like to understand how it would fix this issue properly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:16:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:8/1473333417005157</guid>
      <description>&lt;p&gt;
Thanks for confirming that it works, but there's no need to close the ticket. :-)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) closed</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:7/1473333345241195</guid>
      <description>worksforme: &lt;p&gt;
Can confirm that does the trick, though some of my settings reseted for some reason (custom settings).
&lt;/p&gt;
&lt;p&gt;
Thanks for quick reply.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:6/1473332648938478</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:5/1473332604168838</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for the feedback, everyone!
&lt;/p&gt;
&lt;p&gt;
As @glafarge noticed, it's trying to connect with the &lt;code&gt;utf8mb4&lt;/code&gt; charset, when something doesn't support &lt;code&gt;utf8mb4&lt;/code&gt; correctly, likely the client library.
&lt;/p&gt;
&lt;p&gt;
Could I get you to test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37982/37982.diff" title="Attachment '37982.diff' in Ticket #37982"&gt;37982.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37982/37982.diff" title="Download"&gt;â€‹&lt;/a&gt;, and see if that fixes the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37982.diff attached to Ticket #37982</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37982/37982.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37982/37982.diff/1473332466370365</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>glafarge</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:4/1473332090529236</guid>
      <description>&lt;p&gt;
Reverting to the previous version of &lt;a href="https://core.trac.wordpress.org/changeset/38442/branches/4.6/src/wp-includes/wp-db.php?old=38133&amp;amp;old_path=trunk%2Fsrc%2Fwp-includes%2Fwp-db.php"&gt;wp-db.php&lt;/a&gt; file resolves temporary the issue.
&lt;/p&gt;
&lt;p&gt;
Problem came from inside &lt;code&gt;set_charset()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
As in Wordpress v4.6.1 the MySQL character set queries now depends on the &lt;code&gt;mysqli_set_charset()&lt;/code&gt; success,
&lt;code&gt;SET NAMES %s&lt;/code&gt; will be never executed if it return false.
&lt;/p&gt;
&lt;p&gt;
In my case &lt;code&gt;mysqli_set_charset($dbh, 'utf8mb4')&lt;/code&gt; return false because I think this function don't accepts unicode subsets (like utf8&lt;strong&gt;mb4&lt;/strong&gt; that I use). See &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.6/en/charset-charsets.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;MySQL character sets&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;set_charset()&lt;/code&gt; function must deal with utf8&lt;strong&gt;xxx&lt;/strong&gt; subsets to work properly.
&lt;/p&gt;
&lt;p&gt;
For example the follwing can resolve the issue :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$mysqli_charset = (strpos($charset, 'utf8')!==false) ? 'utf8' : $charset;
$set_charset_succeeded = mysqli_set_charset( $dbh, $mysqli_charset) ;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Maybe we must apply the same logic to the old MySQL extension part of the function.
&lt;/p&gt;
&lt;p&gt;
Tested with MySQL server v5.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:23:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:40/1473330198713953</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29783/29783.3.diff" title="Attachment '29783.3.diff' in Ticket #29783"&gt;29783.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29783/29783.3.diff" title="Download"&gt;â€‹&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove &lt;code&gt;is_admin()&lt;/code&gt; check in &lt;code&gt;get_user_locale()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Move &lt;code&gt;is_admin()&lt;/code&gt; check to &lt;code&gt;load_default_textdomain()&lt;/code&gt; so the admin is always in the user's locale by default
&lt;/li&gt;&lt;li&gt;Loads &lt;code&gt;{$locale}.php&lt;/code&gt; for both the site locale and the user locale. (Not 100% sure about this one).
&lt;/li&gt;&lt;li&gt;Adjusts tests.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29783/user-language-admin-toolbar.php" title="Attachment 'user-language-admin-toolbar.php' in Ticket #29783"&gt;user-language-admin-toolbar.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29783/user-language-admin-toolbar.php" title="Download"&gt;â€‹&lt;/a&gt; is a proof-of-concept plugin that, when applying the patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;, changes the toolbar language depending on the user's locale, but keeps the rest of the site in the site's locale. See &lt;a class="ext-link" href="https://twitter.com/swissspidy/status/773571032963751936"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://twitter.com/swissspidy/status/773571032963751936&lt;/a&gt; for a screenshot. For sending emails etc. this can be done similarly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>user-language-admin-toolbar.php attached to Ticket #29783</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29783/user-language-admin-toolbar.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29783/user-language-admin-toolbar.php/1473329975752871</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>29783.3.diff attached to Ticket #29783</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29783/29783.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29783/29783.3.diff/1473329939176902</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>glafarge</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:3/1473329239336162</guid>
      <description>&lt;p&gt;
Same as edutz.
After the automatic update 4.6.1, posts appear to be damaged.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Display issues : utf8 tables but accents displayed incorrectly.
&lt;/li&gt;&lt;li&gt;Some posts titles are missing.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It seems that the problem of missing titles occurs only in back-end.
Titles are correctly displayed in front-end (but with character encoding problem).
&lt;/p&gt;
&lt;p&gt;
Furthermore, ACF plugin's extra fields are not be displayed in post-edit page.
&lt;/p&gt;
&lt;p&gt;
Maybe &lt;a href="https://core.trac.wordpress.org/changeset?old_path=%2Ftags%2F4.6&amp;amp;old=38270&amp;amp;new_path=%2Ftags%2F4.6.1&amp;amp;new=38560"&gt;the diff&lt;/a&gt; will help to understand quickly what happened.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:52/1473328913843251</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/26511.4.diff" title="Attachment '26511.4.diff' in Ticket #26511"&gt;26511.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/26511.4.diff" title="Download"&gt;â€‹&lt;/a&gt; is a new patch without the caching (at least for now) and a few new tests related to &lt;code&gt;_load_textdomain_just_in_time()&lt;/code&gt;, which helped fix some bugs. Also contains some docs improvements etc. For the tests to work, one needs to add the files from &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/de_DE.zip" title="Attachment 'de_DE.zip' in Ticket #26511"&gt;de_DE.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/de_DE.zip" title="Download"&gt;â€‹&lt;/a&gt; to the &lt;code&gt;tests/phpunit/data/languages&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov: &lt;code&gt;restore_current_blog()&lt;/code&gt; is confusing because it means "go back to the blog I was on before". Or for locales, "switch to a locale, and then go back".
&lt;/p&gt;
&lt;p&gt;
@GaryJ Looking at &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25293" title="#25293: defect (bug): Switch_to_blog not switching the siteid (new)"&gt;#25293&lt;/a&gt;, an interface would make sense, even though it's probably a bit too much for now for only like 2-3 public methods.
&lt;/p&gt;
&lt;p&gt;
The patch &amp;amp; naming on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25293" title="#25293: defect (bug): Switch_to_blog not switching the siteid (new)"&gt;#25293&lt;/a&gt; is interesting by the way. Think &lt;code&gt;WP_Locale_State&lt;/code&gt;. Also, it has a &lt;code&gt;is_switched()&lt;/code&gt; method, which maybe could be helpful in our case as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:01:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:17/1473328863618226</guid>
      <description>&lt;p&gt;
Looking at this ticket, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;, &lt;code&gt;WP_State&lt;/code&gt; is not a good name for this site-related class. I'd rather see &lt;code&gt;WP_Site_State&lt;/code&gt; and &lt;code&gt;WP_Locale_State&lt;/code&gt; (currently &lt;code&gt;WP_Locale_Switcher&lt;/code&gt;) to implement a &lt;code&gt;WP_State&lt;/code&gt; interface or an abstract class of such name. There's really some common ground. If we settle on consistent naming and public-facing functionality, we can also abstract later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26511.4.diff attached to Ticket #26511</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 09:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/26511.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/26511.4.diff/1473328290052449</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #37958,â€‹37983 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:53:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37958%2C37983</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37958%2C37983/1473324794292553</guid>
      <description>duplicate: &lt;p&gt;
It's certainly a valid point and one that has come up before. One possible solution was suggested in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt; the other day, so I'm closing this one as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36713 (Check the number of arguments before calling call_user_func_array()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:50:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36713#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36713#comment:2/1473324606335416</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35596 (Color contrast: checkboxes and radio buttons) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35596#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35596#comment:12/1473324233029277</guid>
      <description>&lt;p&gt;
Since core is already styling radio buttons, what about styling checkboxes too? See for example: &lt;a class="ext-link" href="https://standards.usa.gov/form-controls/#checkboxes"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://standards.usa.gov/form-controls/#checkboxes&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/3mxfEnTddo.png"&gt;&lt;img src="https://cldup.com/3mxfEnTddo.png" alt="https://cldup.com/3mxfEnTddo.png" crossorigin="anonymous" title="https://cldup.com/3mxfEnTddo.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37985.1.diff attached to Ticket #37985</title>
      
        <dc:creator>aaemnnosttv</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:38:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37985/37985.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37985/37985.1.diff/1473323886472088</guid>
      <description>&lt;p&gt;
Initial patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37985 (Allow all arguments to be passed to an action or filter callback) created</title>
      
        <dc:creator>aaemnnosttv</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37985</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37985/1473323764644247</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With the recent addition of WP_Hook for 4.7, I have a small request to make regarding the way callback arguments are handled.
&lt;/p&gt;
&lt;p&gt;
As it is, it is still not possible to pass all arguments to the filter or action callback.  While &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt; would be the ideal solution IMO, it seems as if that is a no-go at least for now.
&lt;/p&gt;
&lt;p&gt;
However, I would like to propose a next-best option which I don't believe has been suggested yet to allow all arguments to be passed which should be fully backwards compatible and no less performant than it is now.
&lt;/p&gt;
&lt;p&gt;
The basic idea is that there should be a way to pass all arguments without just using some arbitrarily large number to fake it.
&lt;/p&gt;
&lt;p&gt;
My patch simply changes the way the callback args are manipulated at call time, so that they are only sliced if the accepted args is a number greater than zero.
&lt;/p&gt;
&lt;p&gt;
To explicitly pass all arguments to the callback, you could add_action or add filter like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'some_tag'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'some_callback'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// or
&lt;/span&gt;&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'some_tag'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'some_callback'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
You can also draw a bit of a parallel with WP_Query conceptually with a -1 for posts_per_page returning unlimited results.
&lt;/p&gt;
&lt;p&gt;
All the current tests still pass and I added one to test this specifically.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:42/1473323279090085</guid>
      <description>&lt;p&gt;
I understand. Thanks for clarifying.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35206#comment:38" title="Comment 38"&gt;peterwilsoncc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35206/35206.7.diff" title="Attachment '35206.7.diff' in Ticket #35206"&gt;35206.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35206/35206.7.diff" title="Download"&gt;â€‹&lt;/a&gt;, there's a fix to avoid having notices when &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; is extended but methods are called with different arguments.
&lt;/p&gt;
&lt;p&gt;
@dgwyer you're correct, I decided to keep the logic and assignments identical throughout. The intent is to lower the risk of failure if a the class is extended and logic is copy-pasted.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:2/1473323034906689</guid>
      <description>&lt;p&gt;
Sure.
PHP Version 5.3.3
Server version: 5.5.51 - MySQL Community Server
define('DB_CHARSET', 'utf8mb4');
define('DB_COLLATE', &lt;em&gt;);
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
SHOW CREATE TABLE se_posts:
CREATE TABLE &lt;code&gt;se_posts&lt;/code&gt; (
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;ID&lt;/code&gt; bigint(20) unsigned NOT NULL AUTO_INCREMENT,
&lt;code&gt;post_author&lt;/code&gt; bigint(20) unsigned NOT NULL DEFAULT '0',
&lt;code&gt;post_date&lt;/code&gt; datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
&lt;code&gt;post_date_gmt&lt;/code&gt; datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
&lt;code&gt;post_content&lt;/code&gt; longtext COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_title&lt;/code&gt; text COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_excerpt&lt;/code&gt; text COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_status&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'publish',
&lt;code&gt;comment_status&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
&lt;code&gt;ping_status&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
&lt;code&gt;post_password&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &lt;em&gt;,
&lt;code&gt;post_name&lt;/code&gt; varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &lt;/em&gt;,
&lt;code&gt;to_ping&lt;/code&gt; text COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;pinged&lt;/code&gt; text COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_modified&lt;/code&gt; datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
&lt;code&gt;post_modified_gmt&lt;/code&gt; datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
&lt;code&gt;post_content_filtered&lt;/code&gt; longtext COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_parent&lt;/code&gt; bigint(20) unsigned NOT NULL DEFAULT '0',
&lt;code&gt;guid&lt;/code&gt; varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &lt;em&gt;,
&lt;code&gt;menu_order&lt;/code&gt; int(11) NOT NULL DEFAULT '0',
&lt;code&gt;post_type&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'post',
&lt;code&gt;post_mime_type&lt;/code&gt; varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &lt;/em&gt;,
&lt;code&gt;comment_count&lt;/code&gt; bigint(20) NOT NULL DEFAULT '0',
PRIMARY KEY (&lt;code&gt;ID&lt;/code&gt;),
KEY &lt;code&gt;post_name&lt;/code&gt; (&lt;code&gt;post_name&lt;/code&gt;(191)),
KEY &lt;code&gt;type_status_date&lt;/code&gt; (&lt;code&gt;post_type&lt;/code&gt;,&lt;code&gt;post_status&lt;/code&gt;,&lt;code&gt;post_date&lt;/code&gt;,&lt;code&gt;ID&lt;/code&gt;),
KEY &lt;code&gt;post_parent&lt;/code&gt; (&lt;code&gt;post_parent&lt;/code&gt;),
KEY &lt;code&gt;post_author&lt;/code&gt; (&lt;code&gt;post_author&lt;/code&gt;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
) ENGINE=MyISAM AUTO_INCREMENT=2794888 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37984 (Relocate either dbDelta() or wp_should_upgrade_global_tables() out of ...) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37984</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37984/1473321344195305</guid>
      <description>&lt;p&gt;
I have a need to use &lt;code&gt;dbDelta()&lt;/code&gt; inside a plugin that creates custom global database tables.
&lt;/p&gt;
&lt;p&gt;
I'd like to use &lt;code&gt;wp_should_upgrade_global_tables()&lt;/code&gt; before deciding to pull in all of &lt;code&gt;upgrade.php&lt;/code&gt; just to use &lt;code&gt;dbDelta()&lt;/code&gt;. This is not currently possible, because &lt;code&gt;wp_should_upgrade_global_tables()&lt;/code&gt; is located inside of &lt;code&gt;upgrade.php&lt;/code&gt; along with &lt;code&gt;dbDelta()&lt;/code&gt;, meaning I need to pull in that file on every &lt;code&gt;admin_init&lt;/code&gt;, just to check if the environment is right to allow global table upgrades to continue.
&lt;/p&gt;
&lt;p&gt;
In my research of how to best solve this problem for myself, I see 1 of 2 possible outcomes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Move &lt;code&gt;dbDelta()&lt;/code&gt;, &lt;code&gt;wp_should_upgrade_global_tables()&lt;/code&gt; or both, out of &lt;code&gt;upgrade.php&lt;/code&gt;, probably to &lt;code&gt;load.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Leave it alone, deal with plugins burning a few extra CPU cycles, and close this issue as wontfix, because having either of these two functions always included doesn't make much sense either
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:54:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:217</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:217/1473321280245324</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jacobsantos. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473321277000756"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37983 (Restore_current_blog) updated</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37983#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37983#comment:1/1473320510168140</guid>
      <description>&lt;p&gt;
i wanted to put this link: &lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/89113/restore-current-blog-vs-switch-to-blog"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.stackexchange.com/questions/89113/restore-current-blog-vs-switch-to-blog&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(p.s. does the first post have EDIT on this trac site ?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:1/1473320493576883</guid>
      <description>&lt;p&gt;
Hi there, and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Would you be able to provide some additional information that we will need to look into this matter?
&lt;/p&gt;
&lt;p&gt;
What we are looking for is your PHP and MySQL versions, the values of &lt;code&gt;DB_CHARSET&lt;/code&gt; and &lt;code&gt;DB_COLLATE&lt;/code&gt;, as well as the output from running the SQL query &lt;code&gt;SHOW CREATE TABLE wp_posts&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37983 (Restore_current_blog) created</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:40:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37983</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37983/1473320419210034</guid>
      <description>&lt;p&gt;
You know, the performance issues of
&lt;code&gt;restore_current_blog()&lt;/code&gt; while using that many times:
&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/98965/get-posts-from-sites-in-multisite"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.stackexchange.com/questions/98965/get-posts-from-sites-in-multisite&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
please, just make available another function, i.e.
&lt;code&gt;restore_current_blog()&lt;/code&gt;
which can be executed only once, after the final loop, and that will be good.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:86/1473320349622908</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:85" title="Comment 85"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:84" title="Comment 84"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is increased data on the debug output a valid argument?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Anything can be a legitimate argument if it affects ones workflows.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So, a training issue? This is a training issue. It is also a manager's excuse. "Why did you change a perfectly functional UI? Now I have to spend $xx,xxx retraining all of my employee's because you moved a button from location x to location y."
&lt;/p&gt;
&lt;p&gt;
To be honest, I never thought I would hear this from a developer. I guess it makes sense. We developers like to argue over white space and that is one of the most pointless arguments a developer could have. Well, besides text editor. We are fond of our holy wars.
&lt;/p&gt;
&lt;p&gt;
My reasoning is that things change and people either change with it or they don't. Those that don't survive, certainly, but they are stuck. You mentioned using a debugger and I will say that PHP debugger has come a long way. It is unfortunate that there aren't a lot of free choices that make it easy to use xdebug to step through code and set breakpoints. You could look into paying money for a professional license of an IDE that does have good support? There might be a vim plugin or emacs. I don't use emacs, so I wouldn't know.
&lt;/p&gt;
&lt;p&gt;
Actually, the point is that your decision to partially reject progress based on your selfish desire to not have to scroll a little more is really a little disappointing to be honest. I would make a star wars quote, but I have been told it is a terrible movie. Pretty awesome last few minutes, up until the "NOOOOOO!" and "She died of a broken heart" parts. Dat action dough.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving a global to a protected attribute is a valid refactoring technique recommended by experts. Furthermore allows for dependency injection at a later date. Which is considered a good thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, It's a valid refactoring technique, which adds zero benefit for WordPress. Referencing outside objects via a class method does nothing for code clarity or improving future code. All it does is hide the instance behind yet another layer of abstraction, something that doesn't give us any major benefits. Dependency injection can be done at a later date when it's viable regardless of this change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nah, that sounds a lot like micro-optimizations to me. I hear that argument for Python, "Make class attributes local, so that you gain a boost in performance." You could do it, certainly, then after you look at the awful mess you created, you'll go back to doing it the proper way.
&lt;/p&gt;
&lt;p&gt;
I love your argument by the way. The beauty of it is that it can be used for anything in OOP and one of the many, many reasons classes are a mess in WordPress. I do agree that if you don't want to do OOP right, that you shouldn't do it at all, but that ship has already sailed. Classes are terrible in WordPress and it looks like no one knows what they are doing.
&lt;/p&gt;
&lt;p&gt;
This argument, is part of the reason why. I can't believe I have to write this. I know you know already know what I am going to write next, but I'm going to write it anyway. I hope you are trolling. If you are, good show. OOP is nothing, if not abstractions. That is all it is. All you are doing is passing one reference of an abstraction to another concrete example of another abstraction. It is all abstract, until it is not. It is one of those awful paintings that people say is brilliant, but just looks like something a child would finger paint.
&lt;/p&gt;
&lt;p&gt;
I don't know what you mean by an class attribute being an abstraction. I guess in the purely technical sense it is merely the language restricting access to some arbitrary address offset in memory, but from a OOP perspective, it is probably the most concrete thing you can get, other than classes themselves. I would say that attributes would be purely concrete, if you want to go down to the machine layer and think of them as structs. In that sense, you have functions abstracted as methods acting on structs holding data.
&lt;/p&gt;
&lt;p&gt;
Sure going from arbitrary heap location to an arbitrary heap location is probably not that impressive. I would add that the protected variable and the global are both pointing to the same location in memory, until which time something changes. It is harder to reason the copy-on-write rules in PHP as they are slightly different than other languages that actually make sense and actually use pointers. I always forget in PHP5, if you change a member in a class if it holds true for other references to the same object. I could 3v4l that question, but meh that isn't the point.
&lt;/p&gt;
&lt;p&gt;
The point is more that the benefit will come later when you have a nicely abstracted class and everything fits in its place and you don't have to worry about some implementation changing on your, because you don't care about the implementation, you only care that it returns what it should.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is it still a global? If the global changes, the internal object reference will not.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A reference to a global, verses a direct global import is ultimately the same object, sure, you're accessing it differently, you're creating an extra memory reference to it, but it's still a global object which you're pulling in to every function you use it within.
&lt;/p&gt;
&lt;p&gt;
All this does is give you a fuzzy feeling of "Oh, Look at this, WordPress suddenly has 30 less uses of a global!" when in reality nothing actually changed, and it only added an extra layer in front of the developer for no benefit.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/MimicCMS/mimiccms-library/tree/master/src/MimicCMS/WordPress/AdminBar"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/MimicCMS/mimiccms-library/tree/master/src/MimicCMS/WordPress/AdminBar&lt;/a&gt; - I'll just put this here. My point is that, I get a warm fuzzy feeling when OOP is done right. Or at least as right as I can attempt to do it.
&lt;/p&gt;
&lt;p&gt;
I don't get warm fuzzy feelings when an application has 30 less uses of a global, because as far as I am concerned with regards to PHP, having 1 global is bad. 30 less of something that could potentially blow up and take the entire application down is 30 less of something I have to worry about. You understand that I could just create a plugin and make &lt;code&gt;$wpdb&lt;/code&gt; a global and accidentally create a local variable with the same name and destroy the reference in $wpdb? PHP won't tell you and the condition may not occur but one in a million. Imagine that day when one in a million happens. Imagine that one in a million becomes 1 in 1.
&lt;/p&gt;
&lt;p&gt;
The goal of programming should be to minimize risk. Globals are a huge risk. A protected member is less than a risk. Only a risk for children that inherit from the parent. A global is inherited by the entire application, you change it when it should not be changed and the application is done.
&lt;/p&gt;
&lt;p&gt;
It is less about warm fuzzy feeling than, "Oh dear god! Don't touch the giant red button!" and going around screaming, "You didn't touch the giant red button did you?" Why just not have a giant red button in the first place?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
As an aside, I understand that in some languages, globals are a thing and they are fine. Go uses globals and they are great. Part of the reason they are fine is because they are per module, which come to think of it, could be pretty bad. I don't believe you can have a global that is entire application wide, unless you started playing with memory management. Other languages have likewise gotten passed the global issue by not allowing variables to be accessed passed the module barrier. If you access a module global, then you meant to access it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44604998986b4402898774e288c113ce.png attached to Ticket #37982</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37982/44604998986b4402898774e288c113ce.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37982/44604998986b4402898774e288c113ce.png/1473319060734685</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>21c7009541ea46c990be93bf590a66e5.png attached to Ticket #37982</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37982/21c7009541ea46c990be93bf590a66e5.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37982/21c7009541ea46c990be93bf590a66e5.png/1473318664572976</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) created</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982/1473318648286752</guid>
      <description>&lt;p&gt;
I've just updated to 4.6.1 and noticed that in my article list, there were some "unnamed" posts. I've checked them on frontpage but they were there(working and full text), so i opened one unnamed in editor and no name was given and no description. Furthermore, it seems that for every apostrophes it replaces with this char: ï¿½ and the same for utf-8 characters (Ã¥ Ã¢ ...). Reverting to 4.6.0 does absolutely nothing, somehow, something is messed up in database.
PS: i did removed plugins and custom themes just to be sure.
PS2: o do have utf8mb4 charset in config. as well as  "ini_set( 'default_charset', 'UTF-8' );"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:41/1473318333307849</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38575" title="Menus: Fix notices thrown by classes extending `Walker_Nav_Menu`.
 ..."&gt;38575&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Menus: Fix notices thrown by classes extending &lt;code&gt;Walker_Nav_Menu&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Methods in &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; can be called with multiple, incompatible &lt;code&gt;$args&lt;/code&gt; objects so an &lt;code&gt;insset()&lt;/code&gt; check is required to avoid throwing notices.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38523" title="Menus: Add white space option to `wp_nav_menu()` and ..."&gt;[38523]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38575]: Menus: Fix notices thrown by classes extending `Walker_Nav_Menu`.  ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38575</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38575/1473318332771698</guid>
      <description>&lt;p&gt;
Menus: Fix notices thrown by classes extending &lt;code&gt;Walker_Nav_Menu&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Methods in &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; can be called with multiple, incompatible &lt;code&gt;$args&lt;/code&gt; objects so an &lt;code&gt;insset()&lt;/code&gt; check is required to avoid throwing notices.
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38523" title="Menus: Add white space option to `wp_nav_menu()` and ..."&gt;[38523]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 08 Sep 2016 06:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:216</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:216/1473316189911931</guid>
      <description>&lt;p&gt;
Oh. Oh dear god. Oh you poor poor people. I am so, so very sorry.
&lt;/p&gt;
&lt;p&gt;
I guess it will be okay. It should be okay. As long as everything works. Looking at the code that was committed...
&lt;/p&gt;
&lt;p&gt;
I'm sorry. The design decisions that were made years and years ago were mostly compromises for PHP4. Things had to work on PHP4 you see, PHP4 had priority.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Also, the decision was that we didn't care about plugins affected by this bug,&lt;/strong&gt; because at the time it was an edge case. I feel that it still is by the way. Looks like I'm going to maintain a separate build of WordPress that reverts this mess of a commit.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;I don't care.&lt;/strong&gt; You will either regret this commit and revert it or it won't matter and my fears will be unfounded. Either way, I think it would be a good time for a fork. Or not. It should be fine. I mean, it isn't like this patch resembles a patch that was submitted years ago back when we had a similar problem and rejected that shit faster than the fastest thing you can think that can go fast.
&lt;/p&gt;
&lt;p&gt;
It is funny to me. How history repeats itself. I hope evil didn't prevail this time. Who knows? I forget why a similar solution was rejected so long ago. Performance reasons? Must have been performance reasons and PHP4. WordPress sucked back when PHP4 had to be supported. Imagine being stuck supporting a older version of PHP. What a nightmare.
&lt;/p&gt;
&lt;p&gt;
I still think it is funny that this whole thing could be solved with one line and fuck it, let's just add class! I mean, you can't really solve this problem in a good way. Well, you can, you can do what you did in the commit.
&lt;/p&gt;
&lt;p&gt;
You know. I'm sure it will be fine. It'll be fine. PHP5 and PHP7 are way faster than they were back in 2007. Servers are way faster than they were in 2007.
&lt;/p&gt;
&lt;p&gt;
Well. Good luck. I'll make sure the door doesn't hit my ass on the way out again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:5/1473313191113456</guid>
      <description>&lt;p&gt;
Thanks for all of the info so far @pbarnhart and thanks for making the switch to HTTP/2! :)
&lt;/p&gt;
&lt;p&gt;
For a basic initial comparison, we're serving HTTP/2 at WSU to ~95% of authenticated visitors now (thanks modern browsers!) and haven't seen any trouble with uploads in Chrome. However, we're on Nginx 1.11.3 rather than Apache, so it seems like that could be the right path to start troubleshooting.
&lt;/p&gt;
&lt;p&gt;
If possible, would you mind sharing your Apache configuration as an attachment (publicly) or privately? It's okay if it's sanitized, but it would be nice to try to reproduce this in a VM environment.
&lt;/p&gt;
&lt;p&gt;
I poked around in the Apache &lt;a class="ext-link" href="http://www.apache.org/dist/httpd/CHANGES_2.4"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;changelogs for the 2.4.x releases&lt;/a&gt; since 2.4.18 and there are quite a few bug fixes for the mod_http2 module. 2.4.18 itself happened well before Chrome made the switch from NPN to ALPN and is only one release into Apache's support for HTTP/2. See also the changelogs for the &lt;a class="ext-link" href="https://github.com/icing/mod_h2/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;upstream project mod_h2&lt;/a&gt; that donated the module to Apache as it continues to be an active project.
&lt;/p&gt;
&lt;p&gt;
I didn't look into how many of those changes Ubuntu has included in recent packaging of the 2.4.18 version, but I would try to upgrade to 2.4.23 on your server before spending much time looking at other possibilities.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:40/1473312745636116</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:39/1473312633774092</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38574" title="Menus: Improve documentation of new `$item_spacing` argument.
Adds ..."&gt;38574&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Menus: Improve documentation of new &lt;code&gt;$item_spacing&lt;/code&gt; argument.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds &lt;code&gt;@since&lt;/code&gt; tags for and improves description of the new &lt;code&gt;$item_spacing&lt;/code&gt; argument added to &lt;code&gt;wp_nav_menu()&lt;/code&gt;, &lt;code&gt;wp_list_pages()&lt;/code&gt;, and &lt;code&gt;wp_page_menu()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38523" title="Menus: Add white space option to `wp_nav_menu()` and ..."&gt;[38523]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnbillionâ€‚for copy.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38574]: Menus: Improve documentation of new `$item_spacing` argument.  Adds ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38574</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38574/1473312632898346</guid>
      <description>&lt;p&gt;
Menus: Improve documentation of new &lt;code&gt;$item_spacing&lt;/code&gt; argument.
&lt;/p&gt;
&lt;p&gt;
Adds &lt;code&gt;@since&lt;/code&gt; tags for and improves description of the new &lt;code&gt;$item_spacing&lt;/code&gt; argument added to &lt;code&gt;wp_nav_menu()&lt;/code&gt;, &lt;code&gt;wp_list_pages()&lt;/code&gt;, and &lt;code&gt;wp_page_menu()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38523" title="Menus: Add white space option to `wp_nav_menu()` and ..."&gt;[38523]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props johnbillionâ€‚for copy.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:04:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:38/1473311075539281</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35206/35206.7.diff" title="Attachment '35206.7.diff' in Ticket #35206"&gt;35206.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35206/35206.7.diff" title="Download"&gt;â€‹&lt;/a&gt;, there's a fix to avoid having notices when &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; is extended but methods are called with different arguments.
&lt;/p&gt;
&lt;p&gt;
@dgwyer you're correct, I decided to keep the logic and assignments identical throughout. The intent is to lower the risk of failure if a the class is extended and logic is copy-pasted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35206.7.diff attached to Ticket #35206</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35206/35206.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35206/35206.7.diff/1473309957472403</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37122 (Error out when xml_create_parser is not available) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37122#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37122#comment:6/1473308251480997</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice catch @kraftbj and agree that this makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:215</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:215/1473308200127829</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38573" title="Docs: Fix minor formatting for inline docs in `WP_Hook` following its ..."&gt;38573&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Fix minor formatting for inline docs in &lt;code&gt;WP_Hook&lt;/code&gt; following its introduction in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38573]: Docs: Fix minor formatting for inline docs in `WP_Hook` following its ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38573</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38573/1473308199641143</guid>
      <description>&lt;p&gt;
Docs: Fix minor formatting for inline docs in &lt;code&gt;WP_Hook&lt;/code&gt; following its introduction in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:7/1473308130183475</guid>
      <description>&lt;p&gt;
In general, core has tended to not add utility functions that it doesn't use.  Is there anywhere in core this would make sense right now?  Not saying that should keep it out, but I think if core can use it, the case for including it is stronger.
&lt;/p&gt;
&lt;p&gt;
One thing that isn't obvious from me just reading the tests and the docs is what happens if wp_list_sort is called on an object where &lt;code&gt;$orderby&lt;/code&gt; isn't set on each field?  Where does that fall in the sort?  Seems like that is something that should be documented and tested so the code remains consistent into the future.
&lt;/p&gt;
&lt;p&gt;
Additionally, what about when you want to do both asc and desc ?  For example, alphabetical by title, but reverse chronological? Perhaps there should just be a single argument that you pass in that includes both the field and the direction?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37772 (Not working "wp_default_styles" on PHP 7.1.0) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37772#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37772#comment:8/1473307571710049</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37423 (Permalink for pending post - get_sample_permalink_html bug) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37423#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37423#comment:7/1473307462639912</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38572" title="Permalinks: Ensure Pending Review Posts permalink posts link to the ..."&gt;38572&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Permalinks: Ensure Pending Review Posts permalink posts link to the draft&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34670" title="Edit: Remove the redundant &amp;#34;View Post&amp;#34; button-link and link the sample ..."&gt;[34670]&lt;/a&gt; made the displayed permalink clickable. For posts that were pending review, the permalink wasn't being properly generated so the link wouldn't go to the preview.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props knutsp, enshrined.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37423" title="#37423: defect (bug): Permalink for pending post - get_sample_permalink_html bug (closed: fixed)"&gt;#37423&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38572]: Permalinks: Ensure Pending Review Posts permalink posts link to the ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38572</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38572/1473307462079231</guid>
      <description>&lt;p&gt;
Permalinks: Ensure Pending Review Posts permalink posts link to the draft
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34670" title="Edit: Remove the redundant &amp;#34;View Post&amp;#34; button-link and link the sample ..."&gt;[34670]&lt;/a&gt; made the displayed permalink clickable. For posts that were pending review, the permalink wasn't being properly generated so the link wouldn't go to the preview.
&lt;/p&gt;
&lt;p&gt;
Props knutsp, enshrined.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37423" title="#37423: defect (bug): Permalink for pending post - get_sample_permalink_html bug (closed: fixed)"&gt;#37423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:54:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:214</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:214/1473306854335279</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;38571&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Hooks: Add the new class &lt;code&gt;WP_Hook&lt;/code&gt;, and modify hook handling to make use of it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Filters and actions have been the basis of WordPress' plugin functionality since time immemorial, they've always been a reliable method for acting upon the current state of WordPress, and will continue to be so.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Over the years, however, edge cases have cropped up. Particularly when it comes to recursively executing hooks, or a hook adding and removing itself, the existing implementation struggled to keep up with more complex use cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And so, we introduce &lt;code&gt;WP_Hook&lt;/code&gt;. By changing &lt;code&gt;$wp_filter&lt;/code&gt; from an array of arrays, to an array of objects, we reduce the complexity of the hook handling code, as the processing code (see &lt;code&gt;::apply_filters()&lt;/code&gt;) only needs to be aware of itself, rather than the state of all hooks. At the same time, we're able te handle more complex use cases, as the object can more easily keep track of its own state than an array ever could.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jbrinley for the original architecture and design of this patch.&lt;br /&gt;
Props SergeyBiryukov, cheeserolls, Denis-de-Bernardy, leewillis77, wonderboymusic, nacin, jorbin, DrewAPicture, ocean90, dougwollison, khag7, pento, noplanman and aaroncampbell for their testing, suggestions, contributions, patch maintenance, cajoling and patience as we got through this.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38571]: Hooks: Add the new class `WP_Hook`, and modify hook handling to make ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:54:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38571</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38571/1473306853788734</guid>
      <description>&lt;p&gt;
Hooks: Add the new class &lt;code&gt;WP_Hook&lt;/code&gt;, and modify hook handling to make use of it.
&lt;/p&gt;
&lt;p&gt;
Filters and actions have been the basis of WordPress' plugin functionality since time immemorial, they've always been a reliable method for acting upon the current state of WordPress, and will continue to be so.
&lt;/p&gt;
&lt;p&gt;
Over the years, however, edge cases have cropped up. Particularly when it comes to recursively executing hooks, or a hook adding and removing itself, the existing implementation struggled to keep up with more complex use cases.
&lt;/p&gt;
&lt;p&gt;
And so, we introduce &lt;code&gt;WP_Hook&lt;/code&gt;. By changing &lt;code&gt;$wp_filter&lt;/code&gt; from an array of arrays, to an array of objects, we reduce the complexity of the hook handling code, as the processing code (see &lt;code&gt;::apply_filters()&lt;/code&gt;) only needs to be aware of itself, rather than the state of all hooks. At the same time, we're able te handle more complex use cases, as the object can more easily keep track of its own state than an array ever could.
&lt;/p&gt;
&lt;p&gt;
Props jbrinley for the original architecture and design of this patch.
Props SergeyBiryukov, cheeserolls, Denis-de-Bernardy, leewillis77, wonderboymusic, nacin, jorbin, DrewAPicture, ocean90, dougwollison, khag7, pento, noplanman and aaroncampbell for their testing, suggestions, contributions, patch maintenance, cajoling and patience as we got through this.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37976 (wp_users deleted but warning does not appear.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37976#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37976#comment:1/1473306198639551</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/12671" title="#12671: enhancement: Installer page doesn't check if MySQL tables were created successfully (assigned)"&gt;#12671&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37979 (WordPress Password Reset link is missing (white on white)) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:39:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37979#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37979#comment:2/1473305944562933</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37981 (template_include not working in customizer previewer) created</title>
      
        <dc:creator>jaschaio</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37981</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37981/1473305758909559</guid>
      <description>&lt;p&gt;
I have the following problem and I am not sure if its a bug. If I try to include a different page template via the template_include hook, it doesn't work within the customizer preview.
&lt;/p&gt;
&lt;p&gt;
I took the example from the &lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference/template_include"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Codex&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;portfolio_page_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'portfolio'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$new_template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;locate_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'portfolio-page-template.php'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$new_template&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$new_template&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'template_include'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'portfolio_page_template'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
For this example my "portfolio-page-template.php" only displays the word "test":
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If I visit the portfolio page on the frontend it loads the template successfully and displays the word "test".
&lt;/p&gt;
&lt;p&gt;
But when I try to load the same URL within the customizer via the api it doesn't loads the template and shows me the home page instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.customize.previewer.previewUrl.set('http://localhost:8888/portfolio/')
&lt;/pre&gt;&lt;p&gt;
The same happens if I click on a link within the previewer to the portfolio page. It doesn't load the template nor the page. Any other link or page that doesn't hook into the template_include loads without a problem.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:85/1473304433094810</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:84" title="Comment 84"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is increased data on the debug output a valid argument?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Anything can be a legitimate argument if it affects ones workflows.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving a global to a protected attribute is a valid refactoring technique recommended by experts. Furthermore allows for dependency injection at a later date. Which is considered a good thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, It's a valid refactoring technique, which adds zero benefit for WordPress. Referencing outside objects via a class method does nothing for code clarity or improving future code. All it does is hide the instance behind yet another layer of abstraction, something that doesn't give us any major benefits. Dependency injection can be done at a later date when it's viable regardless of this change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is it still a global? If the global changes, the internal object reference will not.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A reference to a global, verses a direct global import is ultimately the same object, sure, you're accessing it differently, you're creating an extra memory reference to it, but it's still a global object which you're pulling in to every function you use it within.
&lt;/p&gt;
&lt;p&gt;
All this does is give you a fuzzy feeling of "Oh, Look at this, WordPress suddenly has 30 less uses of a global!" when in reality nothing actually changed, and it only added an extra layer in front of the developer for no benefit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35043 (Images in RSS feed are broken) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35043#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35043#comment:25/1473303971060230</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I haven't seen any new reports of this in 6 months. Thinking we may be ok to close as a wontfix and let affected users handle this with a filter when needed. Any seconds?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35593 (Metadata from wrong file in media_handle_upload) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 02:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35593#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35593#comment:4/1473302283260136</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @normanrz,
&lt;/p&gt;
&lt;p&gt;
Curious if you were able to look into my previous suggestion about updating the metadata using the &lt;code&gt;wp_update_attachment_metadata&lt;/code&gt; hook?
&lt;/p&gt;
&lt;p&gt;
Thanks,
Joe
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33430 (Media inline upload "window" non responsive hight in IE 9) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 02:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33430#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33430#comment:3/1473302139135523</guid>
      <description>worksforme: &lt;p&gt;
Hi @theatp,
&lt;/p&gt;
&lt;p&gt;
I'm going to go ahead and close this ticket since it doesn't seem to be reproducible any longer and we haven't heard any other reports. Feel free to reopen if you think this is still an issue and can provide information to reproduce it.
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35291 (filters for responsive image srcset and sizes attributes) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 02:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35291#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35291#comment:3/1473301968585308</guid>
      <description>invalid: &lt;p&gt;
Hi @Hube2,
&lt;/p&gt;
&lt;p&gt;
Apologies for the delay in responding. You're correct that WordPress doesn't have any native support for the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element, which is what you would likely need to produce in order to allow your clients to display images with different ratios depending on the viewport width. For the time being, I suggest building custom fields, as you are doing, and use them to build your own markup. If you &lt;em&gt;do&lt;/em&gt; need to filter the &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; values, you can use the &lt;code&gt;wp_calculate_image_srcset&lt;/code&gt; and &lt;code&gt;wp_calculate_image_sizes&lt;/code&gt; filters.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37549 (Add optional parameter to wp_generate_attachment_metadata for image ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 02:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37549#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37549#comment:6/1473300954158775</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37549#comment:5" title="Comment 5"&gt;sterlo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@joemcgill I will take a stab at it and report back.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @sterlo any update on whether the approach mentioned above would get you what you need here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37980 (Don't attach events to customizer section headings with cannot-expand class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 01:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37980#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37980#comment:1/1473299483059098</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #themereview by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1473299480001033"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37980 (Don't attach events to customizer section headings with cannot-expand class) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 08 Sep 2016 01:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37980</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37980/1473299440734915</guid>
      <description>&lt;p&gt;
Back when the customizer used &lt;code&gt;accordion.js&lt;/code&gt;, the &lt;code&gt;.cannot-expand&lt;/code&gt; class could be added to section headings that couldn't be expanded to prevent JS events and hover/focus styles from being applied. While the class continues to prevent styles from being applied (and is used in a couple places for core), JS events seem to be added now and those should be removed. See &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1473274466001022"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.slack.com/archives/themereview/p1473274466001022&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The fix should be reasonably straightforward - bailing early from &lt;code&gt;attachEvents()&lt;/code&gt; or &lt;code&gt;onChangeExpanded()&lt;/code&gt; in the section JS in &lt;code&gt;customize-controls.js&lt;/code&gt; if the event target has class cannot-expand - so I'm marking as a good first bug for now if anyone's interested in tackling it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30741 (Build-out API for adding Customizer Panels, Sections, and Controls ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 01:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30741#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30741#comment:19/1473298515845077</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #themereview by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1473298512001031"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36534,â€‹37853 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 01:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36534%2C37853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36534%2C37853/1473298069304904</guid>
      <description>duplicate: &lt;p&gt;
Hi @cezariuszmarek, I also suspect this is a duplicate of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/36534" title="#36534: defect (bug): Media Upload Issue Since 4.5 Upgrade (reopened)"&gt;#36534&lt;/a&gt;. Generally, what's happening in these cases is that the PHP process is encountering a fatal error during the process of processing the uploaded images. Since the error is probably happening in the image processing library, PHP is not able to recover. Unfortunately, there are many different reasons this error might occur, which is why the other ticket has not been resolved. There may be some information in your server's error logs that may help.
&lt;/p&gt;
&lt;p&gt;
In the mean time, I'm going to go ahead and close this ticket as a duplicate, but feel free to keep the conversation going here or over on the other ticket if you prefer.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 00:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:213</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:213/1473296129085132</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473296126000698"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37979 (WordPress Password Reset link is missing (white on white)) closed</title>
      
        <dc:creator>dfterry</dc:creator>

      <pubDate>Thu, 08 Sep 2016 00:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37979#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37979#comment:1/1473294199399066</guid>
      <description>invalid: &lt;p&gt;
my mistake, this is a WooCommerce problem.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37979 (WordPress Password Reset link is missing (white on white)) created</title>
      
        <dc:creator>dfterry</dc:creator>

      <pubDate>Wed, 07 Sep 2016 23:56:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37979/1473292613823955</guid>
      <description>&lt;p&gt;
I'm not sure where this error comes from, I think it is a plugin but I can't track it down.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://prntscr.com/cff60e"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://prntscr.com/cff60e&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here is the HTML in the email, the style has white color on white background.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p style="margin: 0 0 16px;"&amp;gt;To reset your password, visit the following address:&amp;lt;/p&amp;gt;
&amp;lt;p style="margin: 0 0 16px;"&amp;gt;
	&amp;lt;a class="link" href="https://www.justpaintball.ca/my-account/lost-password/?key=XX&amp;amp;amp;login=XX" style="color: #fcfcfc; font-weight: normal; text-decoration: underline;"&amp;gt;
			Click here to reset your password&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37978 (Warning: posix_getpwuid() has been disabled for security reasons) created</title>
      
        <dc:creator>AndyDeGroo</dc:creator>

      <pubDate>Wed, 07 Sep 2016 22:50:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37978</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37978/1473288632157394</guid>
      <description>&lt;p&gt;
Another one of those "great" "security reasons". I've noticed these warnings since upgrading to 4.6 but it might as well be caused by hosting provider adding &lt;code&gt;posix_getpwuid&lt;/code&gt; to the &lt;code&gt;disable_functions&lt;/code&gt; recently.
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Warning:  posix_getpwuid() has been disabled for security reasons in [...]/wp-admin/includes/class-wp-filesystem-direct.php on line 210
&lt;/pre&gt;&lt;p&gt;
This seems to be happening during any update - plugins, themes or core. Latest block of warning messages starts at 07-Sep-2016 17:39:01 UTC when my site was auto-updating to 4.6.1.
&lt;/p&gt;
&lt;p&gt;
I can confirm that &lt;code&gt;posix_getpwuid&lt;/code&gt; is added to &lt;code&gt;disable_functions&lt;/code&gt; but I'm puzzled by the &lt;code&gt;function_exists('posix_getpwuid')&lt;/code&gt; two line prior not returning false.
&lt;/p&gt;
&lt;p&gt;
PHP: 5.6.25 (FastCGI)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>corradomatt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 22:33:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:5/1473287615253644</guid>
      <description>&lt;p&gt;
Ah, yeah..I noticed that the refresh fixed it too. Thanks for the quick reply @afercia
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>pbarnhart</dc:creator>

      <pubDate>Wed, 07 Sep 2016 22:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:4/1473286055657340</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
[SERVER_PROTOCOL] =&amp;gt; HTTP/2
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37977 (gettext Documentation Outdated) created</title>
      
        <dc:creator>giologist</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:59:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37977/1473285577229504</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference/gettext"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Filter_Reference/gettext&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
"Change Text in Custom Post Admin Form" is no longer accurate.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s1"&gt;'Featured Image'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Never seems to occur. I believe that's because post types overwrite this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37198 (Use `WP_Term_Query` for `wp_get_object_terms()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37198#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37198#comment:4/1473283282349631</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473283279000679"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37976 (wp_users deleted but warning does not appear.) created</title>
      
        <dc:creator>truser</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37976/1473283183316228</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Shortly before for to try I deleted wp_users but warning does not appear.
&lt;/p&gt;
&lt;p&gt;
Wp-admin entered new user create form or warning appear needed.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:212</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:212/1473282862640259</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473282858000664"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:16/1473282773915113</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25293/25293.2.diff" title="Attachment '25293.2.diff' in Ticket #25293"&gt;25293.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25293/25293.2.diff" title="Download"&gt;â€‹&lt;/a&gt; is the same as the initial patch, but without the breakpoint functionality since this belongs into &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt;. Was a little too eager with the original patch. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25293.2.diff attached to Ticket #25293</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25293/25293.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25293/25293.2.diff/1473282600438568</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:07:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:15/1473282450611339</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25293#comment:14" title="Comment 14"&gt;tfrommen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What you described as a &lt;em&gt;breakpoint&lt;/em&gt; is exactly what is handled by an &lt;strong&gt;instance&lt;/strong&gt; of a &lt;code&gt;NetworkState&lt;/code&gt; like I proposed, no?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, indeed the above approach is an alternative to your &lt;code&gt;NetworkState&lt;/code&gt; class.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So breakpoints are a meta layer for network states - which is why breakpoints shouldn't be handled by the network state class. The latter just has to provide/be an immutable snapshot with the ability to &lt;em&gt;apply&lt;/em&gt; it (i.e., restore).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would rather see the &lt;code&gt;WP_State&lt;/code&gt; as a global controller of the switched state. A breakpoint in my opinion is indeed a snapshot of the current state, and that snapshot can be restored by the controller.
&lt;/p&gt;
&lt;p&gt;
Anyway, I think we should, for the sake of this ticket, break out the &lt;code&gt;set_breakpoint()&lt;/code&gt; and &lt;code&gt;restore_breakpoint()&lt;/code&gt; methods plus the related &lt;code&gt;$breakpoints&lt;/code&gt; property from the above patch and then continue discussion on the approach in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:15/1473282444101112</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473282440000657"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 07 Sep 2016 21:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:2/1473282388212203</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
(note: ticket description modified to put backticks around the &lt;code&gt;//&lt;/code&gt;, which was preventing comments from being added to the ticket, apparently)
&lt;/p&gt;
&lt;p&gt;
I like the concept of a better core solution for multi-part pages. But I'm a little unclear on how this proposal would work in terms of content structure. Is "Panel Content" a post object, of a particular post type? What would the API look like for themes displaying the information? What would the UI look like for filling in the actual content here?
&lt;/p&gt;
&lt;p&gt;
I wonder whether we might be able to accomplish something similar with a more straightforward UI if it were based on widgets, and new core widgets that supported this type of functionality were introduced. That way we'd be able to leverage the existing core UI for adding/reordering/number of items/etc, and on a technical level things like selective refresh and the work on storing widgets as post objects. This idea is generally related to widgets as "content blocks".
&lt;/p&gt;
&lt;p&gt;
Looking at &lt;a class="ext-link" href="https://piquedemo.wordpress.com/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://piquedemo.wordpress.com/&lt;/a&gt;, being able to make a "container widget" that sets a number of columns, title, and maybe image, and then lets users add content via additional widget that, for example, have fields for image, title, and description, could be worth exploring. Or that part could be based on theme support with content being organized with widgets. I'm definitely concerned about how this will work across theme switches, though, especially for themes that don't support this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:4/1473281847367433</guid>
      <description>&lt;p&gt;
I'd +1 for all being underlined. I absolutely would say they should be standardised so all are the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:31/1473281752719476</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473281750000645"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:52:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:39/1473281550017097</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473281546000641"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:52:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:51/1473281549388485</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473281546000641"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:42:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:76/1473280952245925</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473280949000631"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20875 (Introduce wp_cache_get_multi()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20875#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20875#comment:30/1473280909098257</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473280906000628"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37975 (Duplicate tag names aren't supported) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:37:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37975#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37975#comment:1/1473280626076636</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:35:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:211</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:211/1473280552634034</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.24.diff" title="Attachment '17817.24.diff' in Ticket #17817"&gt;17817.24.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.24.diff" title="Download"&gt;â€‹&lt;/a&gt; adds the &lt;code&gt;@return&lt;/code&gt; for the methods that @ocean90 pointed out were missing it. It also removes the &lt;code&gt;return&lt;/code&gt; from the &lt;code&gt;rewind()&lt;/code&gt; method since &lt;a class="ext-link" href="http://php.net/manual/en/iterator.rewind.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;it's ignored anyway&lt;/a&gt;. All tests still appear to pass, and I pounded on the iterator a decent bit and the rewinding seems to still work as expected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37975 (Duplicate tag names aren't supported) created</title>
      
        <dc:creator>ivankk</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:32:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37975/1473280336231848</guid>
      <description>&lt;p&gt;
WP has an inherent requirement on unique tag names, if there are multiple tags with the same name, there is no way to pick which tag to assign.
&lt;/p&gt;
&lt;p&gt;
Repro steps:
Create three tags
name = test, slug = test-1
name = test, slug = test-2
name = test, slug = test-3
&lt;/p&gt;
&lt;p&gt;
Open the post editor and try and search for test, you will have three tags with the name test, if you try and add more than 1, you will not be able to pick which of the three you're assigning.
&lt;/p&gt;
&lt;p&gt;
The search: /wp-admin/admin-ajax.php?action=ajax-tag-search&amp;amp;tax=post_tag&amp;amp;q=test
will only return tag names, and those are used to assign the tag to a post.
&lt;/p&gt;
&lt;p&gt;
wp_insert_posts() calls:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( isset( $postarr['tags_input'] ) &amp;amp;&amp;amp; is_object_in_taxonomy( $post_type, 'post_tag' ) ) {
  wp_set_post_tags( $post_ID, $postarr['tags_input'] );
 }
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.6.1/src/wp-includes/post.php#L3238"&gt;https://core.trac.wordpress.org/browser/tags/4.6.1/src/wp-includes/post.php#L3238&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>17817.24.diff attached to Ticket #17817</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.24.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.24.diff/1473280316179377</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:23/1473280067714321</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473280065000601"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37915 (Customize: allow terms to be created in nav menus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:26:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37915#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37915#comment:2/1473279984591551</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473279981000596"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37914 (Taxonomy: Allow terms to be previewed before publishing) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:26:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37914#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37914#comment:2/1473279984363250</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473279981000596"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:21:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:4/1473279691735328</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The attached patch just delegates the click event on the body.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37973.diff attached to Ticket #37973</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:20:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37973/37973.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37973/37973.diff/1473279640378398</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:1/1473279094583755</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:37/1473278727531522</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473278725000552"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 20:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:36/1473278602830279</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473278598000544"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 07 Sep 2016 19:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974/1473278369116911</guid>
      <description>&lt;p&gt;
Making a multi-panel page and giving users the ability to chose what content is in those sections this is something people really want. There are a lot of methods to do this, from plugins to within themes. As a result, there's a lot of confusion for users.
&lt;/p&gt;
&lt;p&gt;
At Automattic, we've now done this in several themes through a 'Theme Options' section. In this ticket, I am suggesting a way that this comes back to core.
&lt;/p&gt;
&lt;p&gt;
Before I dive into this suggestion, I will say that I think there are absolutely other ways. In the long run I would also love to see content blocks make this feature obselete. But, this option is user tested. This is the best, proven method for users to get this. It also should be a lot less difficult and more time efficient to achieve. I'd love to see this be part of this release.
&lt;/p&gt;
&lt;p&gt;
How would this happen? Lets look at a flow suggestion.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/KGmJFgTiG5.png"&gt;&lt;img src="https://cldup.com/KGmJFgTiG5.png" alt="https://cldup.com/KGmJFgTiG5.png" crossorigin="anonymous" title="https://cldup.com/KGmJFgTiG5.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There is a new section under the Customizer called 'Multi Panel' - we totally should come up with a better name.
&lt;/li&gt;&lt;li&gt;You can click in and see each panel here.
&lt;/li&gt;&lt;li&gt;You then from those panels can click in and add content to the panels.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Stepping through that this in code would appear something like this:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;add_theme_support(multipanel-page, 4);
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;code&gt;// 4 being number of panels and unlimited being the default.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
For simplicity I am just suggesting it's a simple add_theme_support. We have past precedence for this. Then you'd get the new section in Customizer appear. I also suggest this gets made as a feature plugin porting pretty much all of the existing code. At least this makes sense as a first step.
&lt;/p&gt;
&lt;p&gt;
Template wise, we probably want a consistent naming for this or to have people able to declare a template page. It could then have that page used as a static page, or just be used. You could either use one wrapping content for all or call each panel (if set numbers) and style each differently. This opens up to some flexibility with layout.
&lt;/p&gt;
&lt;p&gt;
This type of multi-panel page can be seen already live in themes like Pique: &lt;a class="ext-link" href="https://en-gb.wordpress.org/themes/pique/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://en-gb.wordpress.org/themes/pique/&lt;/a&gt;. There's good evidence from user testing that currently this is the best option too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 19:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:3/1473277828836352</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473277826000492"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 19:44:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:2/1473277471922848</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Oh well, after the introduction of Shiny Updates v2 in 4.6 the plugins search is now via AJAX so I guess the events need to be delegated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 19:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:1/1473277244900577</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@corradomatt thanks for your report and welcome to Trac! Yep, confirmed. Looks like after refreshing the search results page, then it works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37960 (Support for selecting radio buttons in media views) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 19:37:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37960#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37960#comment:2/1473277075322110</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 19:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:35/1473275349090043</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Untitled.png attached to Ticket #37973</title>
      
        <dc:creator>corradomatt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 18:49:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37973/Untitled.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37973/Untitled.png/1473274160108789</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) created</title>
      
        <dc:creator>corradomatt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 18:49:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973/1473274147566457</guid>
      <description>&lt;p&gt;
When on the plugin list page (installed plugins) and searching for a set of plugins the "select all" checkboxes above and below the list of plugins do not work to select all plugins in the search results.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 18:09:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:38/1473271781065973</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37972 (Image size (height/width) arguments are not used in output for custom_logo) created</title>
      
        <dc:creator>BinaryKitten</dc:creator>

      <pubDate>Wed, 07 Sep 2016 18:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37972/1473271777382473</guid>
      <description>&lt;p&gt;
when setting up the custom logo in theme support, it allows for height/width to be set.
&lt;/p&gt;
&lt;p&gt;
When outputting, the default and only option for the output (via the_custom_logo() ) is "full" (as set in the get_custom_logo function call)
&lt;/p&gt;
&lt;p&gt;
This is carry over from commit
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37135" title="Template: Remove `$size` reference from `get_custom_logo()`.
Argument ..."&gt;[37135]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36327" title="#36327: defect (bug): Custom logo: the image size argument is not taking in account (closed: fixed)"&gt;#36327&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:34:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:33/1473269669307845</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by delawski. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473269667000260"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37971 (Menus screen: improve the responsive view) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:30:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37971/1473269427090834</guid>
      <description>&lt;p&gt;
Noticed while working on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37969" title="#37969: defect (bug): Menus: simplify the &amp;#34;Remove&amp;#34; and &amp;#34;Cancel&amp;#34; link styling (closed: fixed)"&gt;#37969&lt;/a&gt;, the responsive view of the Menus screen needs some improvements. Not sure if there's already a specific ticket (haven't found one).
&lt;/p&gt;
&lt;p&gt;
Some CSS rules used in this screen work just in the "Desktop" view: 100% widths+margins, some floats, the &lt;code&gt;13em&lt;/code&gt; spacing between menu item titles and controls and probably more stuff need to be reset/adjusted.
&lt;/p&gt;
&lt;p&gt;
Not sure it nesting the menu items can work on very small displays, probably needs a different approach. Any thoughts welcome!
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/qvBPJULT7f.png"&gt;&lt;img src="https://cldup.com/qvBPJULT7f.png" alt="https://cldup.com/qvBPJULT7f.png" crossorigin="anonymous" title="https://cldup.com/qvBPJULT7f.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:32/1473269322704136</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@celloexpressions - I've been working on the patch lately and I think I've came up with a good solution. Could you, please, checkout the feature branch:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/150"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/150&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
or use &lt;a href="https://core.trac.wordpress.org/attachment/ticket/34391/34391_2.diff"&gt;the new patch attached: 34391_2.diff&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and test if you still have any issues with nav menus? I'm having not issues on my end, but wanted to make sure with you. The patch contains updated unit tests. Also, I've slightly modified the way transitions are now performed and added a bunch of other minor updates.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34391_2.diff attached to Ticket #34391</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:19:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34391/34391_2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34391/34391_2.diff/1473268747728680</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [38570]: The 4.6 branch is now 4.6.2-alpha. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:17:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38570</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38570/1473268661749416</guid>
      <description>&lt;p&gt;
The 4.6 branch is now 4.6.2-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38569]: Tag 3.7.16</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38569</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38569/1473267833186509</guid>
      <description>&lt;p&gt;
Tag 3.7.16
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38568]: Tag 3.8.16</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38568</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38568/1473267809318598</guid>
      <description>&lt;p&gt;
Tag 3.8.16
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38567]: Tag 3.9.14</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38567</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38567/1473267795204873</guid>
      <description>&lt;p&gt;
Tag 3.9.14
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38566]: Tag 4.0.13</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:02:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38566</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38566/1473267778872675</guid>
      <description>&lt;p&gt;
Tag 4.0.13
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38565]: Tag 4.1.13</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38565</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38565/1473267766190665</guid>
      <description>&lt;p&gt;
Tag 4.1.13
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38564]: Tag 4.2.10</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:02:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38564</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38564/1473267743643941</guid>
      <description>&lt;p&gt;
Tag 4.2.10
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38563]: Tag 4.3.6</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:02:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38563</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38563/1473267725302808</guid>
      <description>&lt;p&gt;
Tag 4.3.6
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38562]: Tag 4.4.5</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:01:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38562</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38562/1473267708329499</guid>
      <description>&lt;p&gt;
Tag 4.4.5
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38561]: Tag 4.5.4</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38561/1473267668256709</guid>
      <description>&lt;p&gt;
Tag 4.5.4
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38560]: Tag 4.6.1</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 17:00:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38560</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38560/1473267625341936</guid>
      <description>&lt;p&gt;
Tag 4.6.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:53:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:210</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:210/1473267202658402</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:208" title="Comment 208"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Noice. &lt;code&gt;::do_action()&lt;/code&gt; didn't like it when an action was called recursively. :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Travis CI build was successful for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.23.diff" title="Attachment '17817.23.diff' in Ticket #17817"&gt;17817.23.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.23.diff" title="Download"&gt;â€‹&lt;/a&gt;. I'm also running this patch on my w.org sandbox without any issues so far.
&lt;/p&gt;
&lt;p&gt;
The lost five methods of &lt;code&gt;WP_Hook&lt;/code&gt; could need some docs love, missing periods and incomplete &lt;code&gt;@return&lt;/code&gt; tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:3/1473266636196401</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473266634000011"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:2/1473266429459695</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37969/37969.diff" title="Attachment '37969.diff' in Ticket #37969"&gt;37969.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37969/37969.diff" title="Download"&gt;â€‹&lt;/a&gt; tries to simplify the CSS and make the Menus screen &lt;code&gt;submitdelete&lt;/code&gt; and &lt;code&gt;submitcancel&lt;/code&gt; links use the standard links styling. Also makes the &lt;code&gt;submitdelete&lt;/code&gt; link in the various Publish meta boxes consistent, fixing the size of the button close to the link.
&lt;/p&gt;
&lt;p&gt;
With the patch applied:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/tbsBJpLTQB.png"&gt;&lt;img src="https://cldup.com/tbsBJpLTQB.png" alt="https://cldup.com/tbsBJpLTQB.png" crossorigin="anonymous" title="https://cldup.com/tbsBJpLTQB.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Things to check:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the Customizer should be OK since, as far as I see, the styles changed in this patch have more specific rules for the Customizer
&lt;/li&gt;&lt;li&gt;test and check all the Publish meta boxes: posts, attachments, comments, old link manager (any other?)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The only inconsistency I can see now is the &lt;code&gt;submitdelete&lt;/code&gt; link in the Menus footer is underlined:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/JC5FXdBXyQ.png"&gt;&lt;img src="https://cldup.com/JC5FXdBXyQ.png" alt="https://cldup.com/JC5FXdBXyQ.png" crossorigin="anonymous" title="https://cldup.com/JC5FXdBXyQ.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
while the same link in the Publish box is not underlined:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/WbwM4mFSfq.png"&gt;&lt;img src="https://cldup.com/WbwM4mFSfq.png" alt="https://cldup.com/WbwM4mFSfq.png" crossorigin="anonymous" title="https://cldup.com/WbwM4mFSfq.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
IMHO they should look the same: either remove the underline in the menus or make them all underlined. I'd greatly appreciate some Ui feedback here :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:50/1473266397669307</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26511#comment:46" title="Comment 46"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you have a use case for temporarily switching the user locale? If yes, a context switch could make sense and is fairly easy. Just needs a second stack.
&lt;/p&gt;
&lt;p&gt;
Otherwise I was more thinking that developers could use it like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$switched&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;switch_to_locale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_user_locale&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Do stuff
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$switched&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;restore_previous_locale&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes: An author should get a comment moderation email in their language. But &lt;code&gt;switch_to_locale( get_user_locale() );&lt;/code&gt; should work, I think.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As these two tickets are so tied to each other, should we perhaps merge the patches?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, but we should maybe move the other one to 4.7 too. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:37/1473265856366739</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29783#comment:36" title="Comment 36"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks like &lt;code&gt;$locale = get_locale();&lt;/code&gt; in &lt;code&gt;options-general.php&lt;/code&gt; needs to be &lt;code&gt;$locale = get_option('WPLANG');&lt;/code&gt;, otherwise the user locale will always be selected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31318" title="#31318: defect (bug): options-general.php have &amp;#34;Site Language&amp;#34; set to (current view ... (closed: wontfix)"&gt;#31318&lt;/a&gt; why we can't do that.
&lt;/p&gt;
&lt;p&gt;
To workaround polluting the global &lt;code&gt;$locale&lt;/code&gt; we can leave the &lt;code&gt;get_locale()&lt;/code&gt; call:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$locale = get_locale();
$user_locale = get_user_locale();
$locale_file = WP_LANG_DIR . "/$user_locale.php";
if ( ( 0 === validate_file( $user_locale ) ) &amp;amp;&amp;amp; is_readable( $locale_file ) )
	require( $locale_file );
unset( $locale_file, $user_locale );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37969.diff attached to Ticket #37969</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37969/37969.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37969/37969.diff/1473265386072369</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:19:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:1/1473265194034451</guid>
      <description>&lt;p&gt;
Looking a bit into this, the red link uses the &lt;code&gt;submitdelete&lt;/code&gt; CSS class that is used also in the menu footer:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/JC5FXdBXyQ.png"&gt;&lt;img src="https://cldup.com/JC5FXdBXyQ.png" alt="https://cldup.com/JC5FXdBXyQ.png" crossorigin="anonymous" title="https://cldup.com/JC5FXdBXyQ.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and, more importantly, in the Publish meta box footer (posts, attachments, comments, old link manager):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/l4v6C9h2Tm.png"&gt;&lt;img src="https://cldup.com/l4v6C9h2Tm.png" alt="https://cldup.com/l4v6C9h2Tm.png" crossorigin="anonymous" title="https://cldup.com/l4v6C9h2Tm.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Rather than overriding the styles for the menus red link, I'd propose to simplify the CSS and remove a few pixels padding on the Publish box red link. Also, noticed some small inconsistencies in the various publish boxes, mainly caused by the wrong button size (it should be &lt;code&gt;button-large&lt;/code&gt; for all the publish boxes) that, though a bit outside the scope of this ticket, need to be fixed.
&lt;/p&gt;
&lt;p&gt;
Worth noting the old Link Manager (can be enabled on old installs and with the dedicated plugin) publish box styling is currently broken, see the extra padding inside the box:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/vDOo8oYygw.png"&gt;&lt;img src="https://cldup.com/vDOo8oYygw.png" alt="https://cldup.com/vDOo8oYygw.png" crossorigin="anonymous" title="https://cldup.com/vDOo8oYygw.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #24587,â€‹35206,â€‹37770 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=24587%2C35206%2C37770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=24587%2C35206%2C37770/1473264889898432</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38559" title="Menus: Correct the docblocks for `Walker_Nav_Menu`, `wp_nav_menu()`, ..."&gt;38559&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Menus: Correct the docblocks for &lt;code&gt;Walker_Nav_Menu&lt;/code&gt;, &lt;code&gt;wp_nav_menu()&lt;/code&gt;, and &lt;code&gt;walk_nav_menu_tree()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This corrects the parameter type for the &lt;code&gt;$args&lt;/code&gt; and &lt;code&gt;$item&lt;/code&gt; parameters passed throughout these functions, class methods, and hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24587" title="#24587: defect (bug): Walker_Page and Walker_Nav_Menu not compatible (closed: wontfix)"&gt;#24587&lt;/a&gt;&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38559]: Menus: Correct the docblocks for `Walker_Nav_Menu`, `wp_nav_menu()`, ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38559</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38559/1473264889433600</guid>
      <description>&lt;p&gt;
Menus: Correct the docblocks for &lt;code&gt;Walker_Nav_Menu&lt;/code&gt;, &lt;code&gt;wp_nav_menu()&lt;/code&gt;, and &lt;code&gt;walk_nav_menu_tree()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This corrects the parameter type for the &lt;code&gt;$args&lt;/code&gt; and &lt;code&gt;$item&lt;/code&gt; parameters passed throughout these functions, class methods, and hooks.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24587" title="#24587: defect (bug): Walker_Page and Walker_Nav_Menu not compatible (closed: wontfix)"&gt;#24587&lt;/a&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 16:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:36/1473264567174724</guid>
      <description>&lt;p&gt;
Looks like &lt;code&gt;$locale = get_locale();&lt;/code&gt; in &lt;code&gt;options-general.php&lt;/code&gt; needs to be &lt;code&gt;$locale = get_option('WPLANG');&lt;/code&gt;, otherwise the user locale will always be selected.
&lt;/p&gt;
&lt;p&gt;
Edit: We should just not touch &lt;code&gt;wp-settings.php&lt;/code&gt; like the current patches do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Milestone 4.6.1 completed</title>
      

      <pubDate>Wed, 07 Sep 2016 16:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/4.6.1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/4.6.1/1473264000000000</guid>
      <description></description>
      <category>milestone</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Wed, 07 Sep 2016 15:56:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:84/1473263813805802</guid>
      <description>&lt;p&gt;
How is increased data on the debug output a valid argument?
&lt;/p&gt;
&lt;p&gt;
Moving a global to a protected attribute is a valid refactoring technique recommended by experts. Furthermore allows for dependency injection at a later date. Which is considered a good thing.
&lt;/p&gt;
&lt;p&gt;
How is it still a global? If the global changes, the internal object reference will not.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:83" title="Comment 83"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:16" title="Comment 16"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38275" title="Query: add a `protected` field, `$db`, (composition, as it were) to ..."&gt;38275&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: add a &lt;code&gt;protected&lt;/code&gt; field, &lt;code&gt;$db&lt;/code&gt;, (composition, as it were) to &lt;code&gt;WP_*_Query&lt;/code&gt; classes to hold the value for the database abstraction, instead of importing the &lt;code&gt;global $wpdb&lt;/code&gt; into every method that uses it. Reduces the number of global imports by 32.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Let me start by saying that I personally want to revert this.
&lt;/p&gt;
&lt;p&gt;
This has only changed how the global is accessed, it does nothing to remove it. You can argue that it's reduced the number of locations that we'd need to alter to eventually move to a registry, but it hasn't actually changed the code for any better.
By adding a protected field to every object, when debugging and dumping out lots of objects, it ultimately ends up with a significant proportion of the debug output being references to &lt;code&gt;$wpdb&lt;/code&gt;, even though that's not what you're actually inspecting. It gets worse when nested objects each have their own reference to &lt;code&gt;$wpdb&lt;/code&gt; in it.
&lt;/p&gt;
&lt;p&gt;
Some people will say that dumping objects is not debugging, and one should use a proper IDE, to that I say yes, but sometimes that's not viable.
&lt;/p&gt;
&lt;p&gt;
So my comment is basically: Does using a private $db field &lt;strong&gt;actually&lt;/strong&gt; benefit reducing globals? given the global is still there, and will remain there, and it's just a reference to the global anyway (So you might as well just call each &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; reference as a global access).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 07 Sep 2016 15:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:36/1473262782873709</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>madis</dc:creator>

      <pubDate>Wed, 07 Sep 2016 15:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:51/1473260948727301</guid>
      <description>&lt;p&gt;
Confirming: cannot reorder gallery items under Win 10, Chrome 53.0.2785.89 m using WordPress 4.6. Disabled all the plugins and tried with different monitors as well - still the same.
&lt;/p&gt;
&lt;p&gt;
Rearranging works with Internet Explorer 11.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 07 Sep 2016 15:07:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:34/1473260866324657</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The problem reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37966" title="#37966: defect (bug): Comment children missing on paged comment views (closed: duplicate)"&gt;#37966&lt;/a&gt; is fixed by &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37696/37696.2.diff" title="Attachment '37696.2.diff' in Ticket #37696"&gt;37696.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37696/37696.2.diff" title="Download"&gt;â€‹&lt;/a&gt;. Here's the logic, which I hope is clear enough to get a review :)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;To minimize SQL queries, comment trees are fetched one level at a time. So if A and B are top-level comments, with children A1, A2, B1, a query that fetches A and B will do two queries. The first will grab A and B (&lt;code&gt;parent=0&lt;/code&gt;) and the second will fetch A1, A2, B1 (&lt;code&gt;parent IN (A,B)&lt;/code&gt;). That's what &lt;code&gt;fill_descendants()&lt;/code&gt; is for.
&lt;/li&gt;&lt;li&gt;The descendant query should be similar to the parent query. For example, if you &lt;code&gt;get_comments( 'exclude=1,2,3' )&lt;/code&gt;, you expect 1, 2, and 3 to be excluded from top-level comments as well as descendants. But the descendant query cannot match exactly, because it needs to override the &lt;code&gt;parent__in&lt;/code&gt; parameter; and &lt;code&gt;parent__in&lt;/code&gt; should override other hierarchy-related parameters passed to &lt;code&gt;WP_Comment_Query&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Prior to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38497" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38497]&lt;/a&gt;, the descendant query was being built by parsing and modifying the SQL string for the parent query. This broke, because the SQL string is not available in all cases.
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38497" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38497]&lt;/a&gt; changed the strategy so that the descendant query calls &lt;code&gt;get_comments()&lt;/code&gt; instead. The parameters passed to &lt;code&gt;get_comments()&lt;/code&gt; are those passed to &lt;code&gt;WP_Comment_Query&lt;/code&gt;, with some necessary modifications to ensure that we're fetching only the hierarchy level we intend to be fetching.
&lt;/li&gt;&lt;li&gt;What was missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38497" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38497]&lt;/a&gt;, and what was reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37966" title="#37966: defect (bug): Comment children missing on paged comment views (closed: duplicate)"&gt;#37966&lt;/a&gt;, is that the 'offset' and 'number' parameters are not being reset for the descendant query. As such, if you passed &lt;code&gt;offset=1&amp;amp;number=1&lt;/code&gt; to &lt;code&gt;WP_Comment_Query&lt;/code&gt;, the descendant query would *also* only fetch a single comment, with an offset of 1. This is incorrect: the descendant query should always have an offset of 0 and no limits on the number of results returned. That's what &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37696/37696.2.diff" title="Attachment '37696.2.diff' in Ticket #37696"&gt;37696.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37696/37696.2.diff" title="Download"&gt;â€‹&lt;/a&gt; adds.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38558]: Bump 3.7 branch to 3.7.16. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 15:00:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38558/1473260452071609</guid>
      <description>&lt;p&gt;
Bump 3.7 branch to 3.7.16.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38557]: Bump 3.8 branch to 3.8.16. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 15:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38557/1473260433180685</guid>
      <description>&lt;p&gt;
Bump 3.8 branch to 3.8.16.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38556]: Bump 3.9 branch to 3.9.14. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 15:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38556</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38556/1473260406786520</guid>
      <description>&lt;p&gt;
Bump 3.9 branch to 3.9.14.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38555]: Bump 4.0 branch to 4.0.13. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:59:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38555</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38555/1473260378415157</guid>
      <description>&lt;p&gt;
Bump 4.0 branch to 4.0.13.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38554]: Bump 4.1 branch to 4.1.13. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:59:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38554</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38554/1473260357597814</guid>
      <description>&lt;p&gt;
Bump 4.1 branch to 4.1.13.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>37696.2.diff attached to Ticket #37696</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37696/37696.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37696/37696.2.diff/1473260327595776</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [38553]: Bump 4.2 branch to 4.2.10. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38553</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38553/1473260298077998</guid>
      <description>&lt;p&gt;
Bump 4.2 branch to 4.2.10.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38552]: Bump 4.3 branch to 4.3.6. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:57:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38552/1473260279911821</guid>
      <description>&lt;p&gt;
Bump 4.3 branch to 4.3.6.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38551]: Bump 4.4 branch to 4.4.5. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38551</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38551/1473260255719874</guid>
      <description>&lt;p&gt;
Bump 4.4 branch to 4.4.5.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38550]: Bump 4.5 branch to 4.5.4. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38550</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38550/1473260231480722</guid>
      <description>&lt;p&gt;
Bump 4.5 branch to 4.5.4.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38549]: Bump 4.6 branch to 4.6.1. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:56:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38549</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38549/1473260202565911</guid>
      <description>&lt;p&gt;
Bump 4.6 branch to 4.6.1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36748 (Updating tables to utf8mb4 causes some columns to change type unexpectedly) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:39:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36748#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36748#comment:16/1473259177001997</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473259174000268"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:33/1473257585866582</guid>
      <description>&lt;p&gt;
Reopening this ticket because of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37966" title="#37966: defect (bug): Comment children missing on paged comment views (closed: duplicate)"&gt;#37966&lt;/a&gt;, which shows that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38497" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38497]&lt;/a&gt; introduced a bug related to threaded comments on pages other than 1. I'm pretty sure that this is because the argument array for the descendant query isn't resetting the 'number' and/or 'offset' parameters from the original query args.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, the bug was discovered just before the scheduled release of 4.6.1. In order not to hold up 4.6.1, we're moving this ticket out of the milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:35/1473257292331977</guid>
      <description>&lt;p&gt;
I'm seeing exactly the same notice as &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35206#comment:33" title="Comment 33"&gt;afercia&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also, are there some redundant variable declarations in 35206.6.diff?
&lt;/p&gt;
&lt;p&gt;
e.g. In &lt;code&gt;src/wp-includes/class-walker-nav-menu.php&lt;/code&gt; on &lt;code&gt;lines 241, 244&lt;/code&gt; the variable declaration for &lt;code&gt;$t&lt;/code&gt; doesn't seem to be used anywhere inside the function &lt;code&gt;end_el&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Maybe I'm missing something but I thought I'd mention it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38548]: Media: Sanitize upload filename.  Merge of [38538] to the 3.7 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:00:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38548</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38548/1473256857127181</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 3.7 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38547]: Media: Sanitize upload filename.  Merge of [38538] to the 3.8 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 14:00:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38547</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38547/1473256801358162</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 3.8 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38546]: Media: Sanitize upload filename.  Merge of [38538] to the 3.9 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38546</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38546/1473256773562615</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 3.9 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38545]: Media: Sanitize upload filename.  Merge of [38538] to the 4.0 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38545</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38545/1473256750798705</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 4.0 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38544]: Media: Sanitize upload filename.  Merge of [38538] to the 4.1 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38544</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38544/1473256728153142</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 4.1 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38543]: Media: Sanitize upload filename.  Merge of [38538] to the 4.2 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38543</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38543/1473256702996655</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 4.2 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38542]: Media: Sanitize upload filename.  Merge of [38538] to the 4.3 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38542</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38542/1473256671106894</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 4.3 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>37966.unit-test.diff attached to Ticket #37696</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:57:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37696/37966.unit-test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37696/37966.unit-test.diff/1473256670646328</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:32/1473256642340633</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38541]: Media: Sanitize upload filename.  Merge of [38538] to the 4.4 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:57:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38541</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38541/1473256636769310</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 4.4 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #37696,â€‹37966 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:57:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37696%2C37966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37696%2C37966/1473256629691955</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) reopened</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:56:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:30/1473256610098160</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [38540]: Media: Sanitize upload filename.  Merge of [38538] to the 4.5 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38540</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38540/1473256604612298</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 4.5 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38539]: Media: Sanitize upload filename.  Merge of [38538] to the 4.6 branch. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:56:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38539</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38539/1473256573649136</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [38538]: Media: Sanitize upload filename. </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38538</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38538/1473256497532253</guid>
      <description>&lt;p&gt;
Media: Sanitize upload filename.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #37696,â€‹37966 batch updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37696%2C37966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37696%2C37966/1473255637339700</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38537" title="Comments: Revert [38497]
Restore direct SQL query when fetching ..."&gt;38537&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38497" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38497]&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Restore direct SQL query when fetching descendants.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37966" title="#37966: defect (bug): Comment children missing on paged comment views (closed: duplicate)"&gt;#37966&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38537]: Comments: Revert [38497]  Restore direct SQL query when fetching ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38537</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38537/1473255636784519</guid>
      <description>&lt;p&gt;
Comments: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38497" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38497]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Restore direct SQL query when fetching descendants.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37966" title="#37966: defect (bug): Comment children missing on paged comment views (closed: duplicate)"&gt;#37966&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:28:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:28/1473254932727234</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473254930000190"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37966 (Comment children missing on paged comment views) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37966#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37966#comment:3/1473254873512960</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473254869000188"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:3/1473254372646347</guid>
      <description>&lt;p&gt;
@pbarnhart What's the value of &lt;code&gt;$_SERVER['SERVER_PROTOCOL']&lt;/code&gt; on the affected site please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27314 (Make sure button-primary has button class) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27314#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27314#comment:11/1473253885572907</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It would be nice to fix this for 4.7 together with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37138" title="#37138: defect (bug): Audit usage of the buttons CSS classes (closed: fixed)"&gt;#37138&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37448" title="#37448: defect (bug): Primary and secondary buttons need to reset the outline property (closed: fixed)"&gt;#37448&lt;/a&gt; ðŸ™‚
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37448 (Primary and secondary buttons need to reset the outline property) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37448#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37448#comment:5/1473253676315842</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37138 (Audit usage of the buttons CSS classes) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 13:04:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37138#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37138#comment:7/1473253496937463</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
One more example is about a few places where &lt;code&gt;button-large&lt;/code&gt; is used without the base class &lt;code&gt;button&lt;/code&gt;. For example, in the edit attachment screen, the primary button in the publish box uses these classes:
&lt;code&gt;button-primary button-large&lt;/code&gt;
and they should be
&lt;code&gt;button button-primary button-large&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Currently, this button has the standard size, with a height of 28px:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/G71KxT5dJ0.png"&gt;&lt;img src="https://cldup.com/G71KxT5dJ0.png" alt="https://cldup.com/G71KxT5dJ0.png" crossorigin="anonymous" title="https://cldup.com/G71KxT5dJ0.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
but it should be a bit bigger, also for consistency with the similar button in the Post Publish meta box:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/CWPHfK7Ecs.png"&gt;&lt;img src="https://cldup.com/CWPHfK7Ecs.png" alt="https://cldup.com/CWPHfK7Ecs.png" crossorigin="anonymous" title="https://cldup.com/CWPHfK7Ecs.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The base class &lt;code&gt;button&lt;/code&gt; is necessary also to properly reset the outline property, see what happens in Chrome on OS X without the &lt;code&gt;button&lt;/code&gt; class:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/UhRM1rWYoS.png"&gt;&lt;img src="https://cldup.com/UhRM1rWYoS.png" alt="https://cldup.com/UhRM1rWYoS.png" crossorigin="anonymous" title="https://cldup.com/UhRM1rWYoS.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and with:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/8Nov6ZLkxs.png"&gt;&lt;img src="https://cldup.com/8Nov6ZLkxs.png" alt="https://cldup.com/8Nov6ZLkxs.png" crossorigin="anonymous" title="https://cldup.com/8Nov6ZLkxs.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screenshot.jpg attached to Ticket #37970</title>
      
        <dc:creator>philliproth</dc:creator>

      <pubDate>Wed, 07 Sep 2016 11:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37970/screenshot.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37970/screenshot.jpg/1473249359907128</guid>
      <description>&lt;p&gt;
Screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37970 (Editing anchor link after copying adds admin url) created</title>
      
        <dc:creator>philliproth</dc:creator>

      <pubDate>Wed, 07 Sep 2016 11:55:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37970/1473249335661604</guid>
      <description>&lt;p&gt;
I have a small image e.g. an arrow with an anchor link on it e.g. "#section1". I copy this image and want to edit the link. Then it adds the complete admin url to the link like this:  &lt;a class="ext-link" href="http://www.someboringsite.com/wp-admin/post.php?post=12&amp;amp;action=edit#section2"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.someboringsite.com/wp-admin/post.php?post=12&amp;amp;action=edit#section2&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Wed, 07 Sep 2016 11:25:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:34/1473247537481215</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35206#comment:33" title="Comment 33"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Getting a notice, reproduced on two different installs:
&lt;code&gt;Notice: Undefined property: stdClass::$item_spacing in /srv/www/wordpress-develop/src/wp-includes/class-walker-nav-menu.php on line 240&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @afercia, I'll take a look over the next few hours. The easy fix is to add &lt;code&gt;Walker_Nav_Menu_Edit::end_el()&lt;/code&gt; but that's not really the solution given others may extend the base class in a similar fashion for a custom admin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37853 (HTTP error when uploading images) updated</title>
      
        <dc:creator>cezariuszmarek</dc:creator>

      <pubDate>Wed, 07 Sep 2016 11:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37853#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37853#comment:3/1473246712903791</guid>
      <description>&lt;p&gt;
Can I turn on some kind of an error logging to see what is the reason of the error? I've raised max_execution_time to 300, but it didn't help either. This error is so annoying, because less advanced users leave trash in the database or ask me why some images don't appear.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 11:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969/1473246371941251</guid>
      <description>&lt;p&gt;
Splitting this out from the discussion on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37016" title="#37016: defect (bug): Minor Fixes: Text color for &amp;#34;Delete&amp;#34; button on widget should be Red (closed: fixed)"&gt;#37016&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
On the menus screen &lt;code&gt;nav-menus.php&lt;/code&gt; the menu items have two links: "Remove" and "Cancel" that use some non-standard styling, a bit outside core conventions for links:
&lt;/p&gt;
&lt;p&gt;
Current normal state:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/kfHKPefHPV.png"&gt;&lt;img src="https://cldup.com/kfHKPefHPV.png" alt="https://cldup.com/kfHKPefHPV.png" crossorigin="anonymous" title="https://cldup.com/kfHKPefHPV.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Current hover state:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/1iHBeFbBlq.png"&gt;&lt;img src="https://cldup.com/1iHBeFbBlq.png" alt="https://cldup.com/1iHBeFbBlq.png" crossorigin="anonymous" title="https://cldup.com/1iHBeFbBlq.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Current focus state:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/TiqdObQuw5.png"&gt;&lt;img src="https://cldup.com/TiqdObQuw5.png" alt="https://cldup.com/TiqdObQuw5.png" crossorigin="anonymous" title="https://cldup.com/TiqdObQuw5.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I remember some discussion about this but I'm not sure if there's a related ticket (couldn't find one).
Looks like this styling is there since a few years and I'm pretty sure at that time it made sense. By the way, looking at this today I'm wondering if it may be better to just use the standard styling for links. This would improve consistency across the admin, make the accessibility work about colour contrast easier (see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/35622" title="#35622: defect (bug): Color contrast: audit all the &amp;#34;#f00&amp;#34; and &amp;#34;red&amp;#34; reds (assigned)"&gt;#35622&lt;/a&gt;) and allow to remove a few lines of CSS, which is always a good thing :)
&lt;/p&gt;
&lt;p&gt;
With the standard style for links:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/rgo9OOL5yh.png"&gt;&lt;img src="https://cldup.com/rgo9OOL5yh.png" alt="https://cldup.com/rgo9OOL5yh.png" crossorigin="anonymous" title="https://cldup.com/rgo9OOL5yh.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
also on &lt;code&gt;:hover&lt;/code&gt; and &lt;code&gt;:focus&lt;/code&gt; they would use the standard links style.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37968 (HTML validation errors in admin tool) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Sep 2016 11:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37968#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37968#comment:1/1473246283864471</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37968-akismet.diff attached to Ticket #37968</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Wed, 07 Sep 2016 10:58:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37968/37968-akismet.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37968/37968-akismet.diff/1473245887055014</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37968.diff attached to Ticket #37968</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Wed, 07 Sep 2016 10:57:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37968/37968.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37968/37968.diff/1473245877980172</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37968 (HTML validation errors in admin tool) created</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Wed, 07 Sep 2016 10:57:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37968</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37968/1473245821528104</guid>
      <description>&lt;p&gt;
The admin tool seems to cause a few HTML validation errors when displaying the following screens:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Media - Library
&lt;/li&gt;&lt;li&gt;Settings - General
&lt;/li&gt;&lt;li&gt;Settings - Akismet
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These were spotted using the developer console in Microsoft Edge and are all related to improperly closed tags. Patches incoming shortly, although I'm not sure whether this is the right place to report issues with Akismet.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 10:47:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:33/1473245243686710</guid>
      <description>&lt;p&gt;
Getting a notice, reproduced on two different installs:
&lt;code&gt;Notice: Undefined property: stdClass::$item_spacing in /srv/www/wordpress-develop/src/wp-includes/class-walker-nav-menu.php on line 240&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/-Ae7D17WAM.png"&gt;&lt;img src="https://cldup.com/-Ae7D17WAM.png" alt="https://cldup.com/-Ae7D17WAM.png" crossorigin="anonymous" title="https://cldup.com/-Ae7D17WAM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37966 (Comment children missing on paged comment views) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 07 Sep 2016 10:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37966#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37966#comment:2/1473242554780133</guid>
      <description>&lt;p&gt;
Reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38446" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;r38446&lt;/a&gt; resolves the issue
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37966 (Comment children missing on paged comment views) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 07 Sep 2016 09:53:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37966#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37966#comment:1/1473241995222589</guid>
      <description>&lt;p&gt;
Confirmed /trunk &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38300" title="Docs: Update jsdoc in `customize-nav-menus.js` to remove references to ..."&gt;r38300&lt;/a&gt; (22nd August) works as expected, updating to /&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38535" title="Revert [38401] after [38480].
See #36335."&gt;r38535&lt;/a&gt; breaks per the ticket description
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35622,â€‹37016 batch updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 09:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35622%2C37016</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35622%2C37016/1473241865571854</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38536" title="Widgets: Make the Delete/Remove links red.
For consistency and ..."&gt;38536&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Make the Delete/Remove links red.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For consistency and accessibility, all the UI controls that perform destructive&lt;br /&gt;
actions should be red.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props monikarao, lukecavanagh, patilswapnilv, ibachal.&lt;br /&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/35622" title="#35622: defect (bug): Color contrast: audit all the &amp;#34;#f00&amp;#34; and &amp;#34;red&amp;#34; reds (assigned)"&gt;#35622&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37016" title="#37016: defect (bug): Minor Fixes: Text color for &amp;#34;Delete&amp;#34; button on widget should be Red (closed: fixed)"&gt;#37016&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38536]: Widgets: Make the Delete/Remove links red.  For consistency and ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 09:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38536</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38536/1473241864617594</guid>
      <description>&lt;p&gt;
Widgets: Make the Delete/Remove links red.
&lt;/p&gt;
&lt;p&gt;
For consistency and accessibility, all the UI controls that perform destructive
actions should be red.
&lt;/p&gt;
&lt;p&gt;
Props monikarao, lukecavanagh, patilswapnilv, ibachal.
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/35622" title="#35622: defect (bug): Color contrast: audit all the &amp;#34;#f00&amp;#34; and &amp;#34;red&amp;#34; reds (assigned)"&gt;#35622&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37016" title="#37016: defect (bug): Minor Fixes: Text color for &amp;#34;Delete&amp;#34; button on widget should be Red (closed: fixed)"&gt;#37016&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37967 (Categories Problem - possible bug.) created</title>
      
        <dc:creator>trader121</dc:creator>

      <pubDate>Wed, 07 Sep 2016 09:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37967</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37967/1473240770334939</guid>
      <description>&lt;p&gt;
Hi Guys, I have a problem with my categories in that if I list a post in a sub category, it also lists the post in the main category above it, even though I haven't selected it.
&lt;/p&gt;
&lt;p&gt;
I have deactivated plugins one by one and cleared the cache after each but the problem is still there. I searched the forum for an answer to this and received some possible answers but I have been unable to find a solution.
&lt;/p&gt;
&lt;p&gt;
Please see my forum post here:
&lt;a class="ext-link" href="https://wordpress.org/support/topic/posts-in-subcategories-only/#post-8154156"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/topic/posts-in-subcategories-only/#post-8154156&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not sure if this is a bug or not. Can someone you look into this for me please.
&lt;/p&gt;
&lt;p&gt;
Thanks,
&lt;/p&gt;
&lt;p&gt;
James.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 09:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:20/1473240418351353</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch to take care of the underline and the &lt;code&gt;:focus&lt;/code&gt; state.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37016.2.diff attached to Ticket #37016</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 09:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37016/37016.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37016/37016.2.diff/1473240239381970</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37957 (WordPress Maximum Post Submit Fields) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Wed, 07 Sep 2016 09:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37957#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37957#comment:4/1473239341504113</guid>
      <description>&lt;p&gt;
Unfortunately the proposed solution simply exposes the vulnerability again.
&lt;/p&gt;
&lt;p&gt;
The limit is there to prevent a DOS attack which uses a large number of POST fields with a high collision rate (in the underlying hash table) to make populating the $_POST array expensive. (The idea is that the fields each have a different key, but they map to the same key in the hash table.)
&lt;/p&gt;
&lt;p&gt;
If you're bundling data into one field, presumably at some point you're going to wait to extract it out into an array. So effectively you're going to build an arbitrary sized array which could be very large and contain a high number of collisions.
&lt;/p&gt;
&lt;p&gt;
Nor do I think this is a core issue - plug-in developers should 'namespace' their field names (the limit applies to each nesting level of a sub array).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Sep 2016 08:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:19/1473238051229004</guid>
      <description>&lt;p&gt;
Thinking the "Remove" and "Cancel" links in &lt;code&gt;nav-menus.php&lt;/code&gt; are a different case, they use a styling that is a bit uncommon in core and maybe should be discussed separately. It would be useful to have a separate ticket for them to better track changes and history. Going to open a separate ticket for the menus screen and I'd propose to use this ticket to fix only the widget ones. About the color contrast ratio, see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/35622" title="#35622: defect (bug): Color contrast: audit all the &amp;#34;#f00&amp;#34; and &amp;#34;red&amp;#34; reds (assigned)"&gt;#35622&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37966.unit-test.diff attached to Ticket #37966</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 07 Sep 2016 08:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37966/37966.unit-test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37966/37966.unit-test.diff/1473237233827479</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37966 (Comment children missing on paged comment views) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 07 Sep 2016 08:33:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37966/1473237202074600</guid>
      <description>&lt;p&gt;
Comment children comments do not appear to be being displayed when comments are paged.
&lt;/p&gt;
&lt;p&gt;
The scenario is hard to explain without a visual, but here's some simple reproduction steps:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a post with 2 top-level comments
&lt;/li&gt;&lt;li&gt;Create two replies for the comments. You now have a post with 4 comments.
&lt;/li&gt;&lt;li&gt;Set comment threading to &lt;code&gt; Break comments into pages with 1 top level comments per page and the  last page displayed by default&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;View the comment pages for the post, Only the top-level comments are visible on all but the &lt;em&gt;first&lt;/em&gt; page.
&lt;/li&gt;&lt;li&gt;Add extra comments, top-level comments remain visible and cause pagination, child comments continue to not display on all but the first page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This is not specific to &lt;code&gt;1&lt;/code&gt; comments per page, it occurs with larger data sets as well.
&lt;/p&gt;
&lt;p&gt;
Attached is an attempt at a unit test which shows something that succeeds under 4.5, but fails under 4.6 - I'm not sure if that's testing the actual code thats failing, but it's where I've gotten to after digging through &lt;code&gt;comments_template()&lt;/code&gt; and &lt;code&gt;WP_Comment_Query&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 07 Sep 2016 08:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:83/1473235927309861</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:16" title="Comment 16"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38275" title="Query: add a `protected` field, `$db`, (composition, as it were) to ..."&gt;38275&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: add a &lt;code&gt;protected&lt;/code&gt; field, &lt;code&gt;$db&lt;/code&gt;, (composition, as it were) to &lt;code&gt;WP_*_Query&lt;/code&gt; classes to hold the value for the database abstraction, instead of importing the &lt;code&gt;global $wpdb&lt;/code&gt; into every method that uses it. Reduces the number of global imports by 32.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Let me start by saying that I personally want to revert this.
&lt;/p&gt;
&lt;p&gt;
This has only changed how the global is accessed, it does nothing to remove it. You can argue that it's reduced the number of locations that we'd need to alter to eventually move to a registry, but it hasn't actually changed the code for any better.
By adding a protected field to every object, when debugging and dumping out lots of objects, it ultimately ends up with a significant proportion of the debug output being references to &lt;code&gt;$wpdb&lt;/code&gt;, even though that's not what you're actually inspecting. It gets worse when nested objects each have their own reference to &lt;code&gt;$wpdb&lt;/code&gt; in it.
&lt;/p&gt;
&lt;p&gt;
Some people will say that dumping objects is not debugging, and one should use a proper IDE, to that I say yes, but sometimes that's not viable.
&lt;/p&gt;
&lt;p&gt;
So my comment is basically: Does using a private $db field &lt;strong&gt;actually&lt;/strong&gt; benefit reducing globals? given the global is still there, and will remain there, and it's just a reference to the global anyway (So you might as well just call each &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; reference as a global access).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>de_DE.zip attached to Ticket #26511</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 07:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/de_DE.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/de_DE.zip/1473234689021841</guid>
      <description>&lt;p&gt;
5 de_DE translations to check number_format in unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37965 (Add post_last_activity column to posts database table) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 07 Sep 2016 07:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37965/1473234599508723</guid>
      <description>&lt;p&gt;
I have a need to order posts by their most recent "activity."
&lt;/p&gt;
&lt;p&gt;
Activity is purposely ambiguous, but in the context of WordPress core, this would likely mean either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the publish time if no comments
&lt;/li&gt;&lt;li&gt;the time of the most recent comment
&lt;/li&gt;&lt;li&gt;For something like bbPress, this would mean the &lt;code&gt;post_date&lt;/code&gt; of the most recent child post
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm currently storing this data in &lt;code&gt;postmeta&lt;/code&gt;, but even with type hinting, ordering &lt;code&gt;meta_value&lt;/code&gt; by &lt;code&gt;DATETIME&lt;/code&gt; is a slow query, particularly when there are millions of rows in both the &lt;code&gt;posts&lt;/code&gt; and &lt;code&gt;postmeta&lt;/code&gt; database tables.
&lt;/p&gt;
&lt;p&gt;
(I'd considered repurposing the &lt;code&gt;post_modified&lt;/code&gt;, but unwinding the way core uses this internally, paired with not wanting to confuse other developers with the oddity, along with &lt;code&gt;post_modified&lt;/code&gt; not being an indexed column, made this a lot of work for not very much gain.)
&lt;/p&gt;
&lt;p&gt;
To be efficient, this new column would require additional compound indexes akin to &lt;code&gt;type_status_date&lt;/code&gt;. I suspect it would also need an accompanying &lt;code&gt;post_last_activity_gmt&lt;/code&gt; column, as well as some kind of back-fill upgrade routine on existing posts.
&lt;/p&gt;
&lt;p&gt;
Rather than hacking this into bbPress core in a bespoke way, or creating a separate plugin to shoe-horn this idea into all of the core queries, I figured I'd drop the feature request here for deeper discussion first, to get a read on how viable modifying core like this is to everyone.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37963 (Plugin install, activate, needs bootstrap alert) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 07 Sep 2016 06:54:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37963#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37963#comment:1/1473231292495390</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac and thanks for opening this ticket!
&lt;/p&gt;
&lt;p&gt;
I can't reproduce the scrolling to top after installing a plugin right now. Does this happen in other browsers as well?
&lt;/p&gt;
&lt;p&gt;
An alert message to inform the user about the status is very disruptive, so that's not really a solution. As for the button color, this already happens. The button changes like this:
&lt;/p&gt;
&lt;p&gt;
(grey) "Install" -&amp;gt; (click) -&amp;gt; "Installingâ€¦" -&amp;gt; "Installed!" -&amp;gt; (short delay) -&amp;gt; (blue) "Activate"
&lt;/p&gt;
&lt;p&gt;
This was made so that you can easily install a second plugin but also directly activate the new plugin if you want to do so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37964 (Allow customizer controls to be encapsulated by accepting ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 07 Sep 2016 06:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37964#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37964#comment:1/1473230127255111</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37964.0.diff attached to Ticket #37964</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 07 Sep 2016 06:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37964/37964.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37964/37964.0.diff/1473229955914483</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37964 (Allow customizer controls to be encapsulated by accepting ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 07 Sep 2016 06:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37964</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37964/1473229909699796</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35926" title="#35926: defect (bug): Allow controls to be registered without any associated settings (closed: fixed)"&gt;#35926&lt;/a&gt; the ability to add setting-less controls was made possible. The work here only went halfway, however. Consider wanting to re-use a control in a standalone context (see &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/29071" title="#29071: enhancement: Make it easier to include an instance of the Customizer outside of ... (reopened)"&gt;#29071&lt;/a&gt;), where the settings used in the control are just plain &lt;code&gt;wp.customize.Value&lt;/code&gt; instances. Controls should allow pre-instantiated &lt;code&gt;Value&lt;/code&gt; (&lt;code&gt;Setting&lt;/code&gt;) objects to be passed in as &lt;code&gt;params.settings&lt;/code&gt;. And when this is done, there would be no &lt;code&gt;api( settingId... )&lt;/code&gt; deferrals.
&lt;/p&gt;
&lt;p&gt;
So one should be able to create a new control like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'product_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...
&lt;/span&gt;    &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Something'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Instead of having to do:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'product_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'product_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Something'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'product_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...
&lt;/span&gt;    &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'product_name'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The goal is to allow controls to be encapsulated and to be able to use them in standalone contexts or embedded inside of other controls.
&lt;/p&gt;
&lt;p&gt;
Related:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30738" title="#30738: task (blessed): JS content templates for base WP_Customize_Control (closed: fixed)"&gt;#30738&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37275" title="#37275: enhancement: Facilitate creating controls that manipulate settings with object values (new)"&gt;#37275&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/29071" title="#29071: enhancement: Make it easier to include an instance of the Customizer outside of ... (reopened)"&gt;#29071&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>pbarnhart</dc:creator>

      <pubDate>Wed, 07 Sep 2016 05:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:2/1473225287169350</guid>
      <description>&lt;p&gt;
There are zero error messages in console.  There are no errors in the server log.  Nothing when I run a server-side debug.  It simply times out.  When I switch the server to HTTP 1.1 everything works on Chrome.  Switch it back to HTTP/2 and Chrome 51 forward fails (other browsers do fine).  And the server does respond to HTTP 1.1 requests.
&lt;/p&gt;
&lt;p&gt;
With some coord I can give up access to this site and can switch server back and forth re HTTP/2 if it helps. Honestly, I hope its something stupid I did because in my day job we manage about 40+ WP sites and are ready to move to HTTP/2
&lt;/p&gt;
&lt;p&gt;
Here are the header responses:
&lt;/p&gt;
&lt;p&gt;
WordPress Uploader
&lt;/p&gt;
&lt;pre class="wiki"&gt;Request URL:https://momentsfromtheheart.com/wp-admin/admin-ajax.php
Request Headers
Provisional headers are shown
Accept:application/json, text/javascript, */*; q=0.01
Content-Type:application/x-www-form-urlencoded; charset=UTF-8
Origin:https://momentsfromtheheart.com
Referer:https://momentsfromtheheart.com/wp-admin/media-new.php
User-Agent:Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.89 Safari/537.36
X-Requested-With:XMLHttpRequest
Form Data
view source
view URL encoded
interval:60
_nonce:1015d6d1a9
action:heartbeat
screen_id:media
has_focus:false
&lt;/pre&gt;&lt;p&gt;
Browser Uploader
&lt;/p&gt;
&lt;pre class="wiki"&gt;Request URL:https://momentsfromtheheart.com/wp-admin/media-new.php
Request Headers
Provisional headers are shown
Content-Type:multipart/form-data; boundary=----WebKitFormBoundaryXyknXR3wtwM2GPgO
Origin:https://momentsfromtheheart.com
Referer:https://momentsfromtheheart.com/wp-admin/media-new.php
Upgrade-Insecure-Requests:1
User-Agent:Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.89 Safari/537.36
Request Payload
------WebKitFormBoundaryXyknXR3wtwM2GPgO
Content-Disposition: form-data; name="async-upload"; filename="Dollarphotoclub_71447704.jpg"
Content-Type: image/jpeg
------WebKitFormBoundaryXyknXR3wtwM2GPgO
Content-Disposition: form-data; name="html-upload"
Upload
------WebKitFormBoundaryXyknXR3wtwM2GPgO
Content-Disposition: form-data; name="post_id"
0
------WebKitFormBoundaryXyknXR3wtwM2GPgO
Content-Disposition: form-data; name="_wpnonce"
74962560e0
------WebKitFormBoundaryXyknXR3wtwM2GPgO
Content-Disposition: form-data; name="_wp_http_referer"
/wp-admin/media-new.php
------WebKitFormBoundaryXyknXR3wtwM2GPgO--
Name
media-new.php
media-new.php
admin-ajax.php
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37806 (Attachment Details - Edit: uneven height between input field and ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Sep 2016 03:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37806#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37806#comment:5/1473217683564741</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473217681000008"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37806 (Attachment Details - Edit: uneven height between input field and ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 07 Sep 2016 03:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37806#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37806#comment:4/1473217624196806</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @eliorivero. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37806/37806.1.patch" title="Attachment '37806.1.patch' in Ticket #37806"&gt;37806.1.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37806/37806.1.patch" title="Download"&gt;â€‹&lt;/a&gt; looks better to me. Just for kicks, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37806/37806.diff" title="Attachment '37806.diff' in Ticket #37806"&gt;37806.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37806/37806.diff" title="Download"&gt;â€‹&lt;/a&gt; removes the &lt;code&gt;padding&lt;/code&gt; and &lt;code&gt;font-size&lt;/code&gt; rules and allows these to take on the default sizes that apply to all other text inputs in the media modal. However, if we're intentionally bumping up the font size on those particular inputs then your last patch is the best option.
&lt;/p&gt;
&lt;p&gt;
Would be good to get some feedback from some our our resident designers here, so I'll reach out for a second opinion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37806.diff attached to Ticket #37806</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 07 Sep 2016 03:02:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37806/37806.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37806/37806.diff/1473217331810742</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37963 (Plugin install, activate, needs bootstrap alert) created</title>
      
        <dc:creator>jteague</dc:creator>

      <pubDate>Wed, 07 Sep 2016 02:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37963/1473215854272840</guid>
      <description>&lt;p&gt;
Two related issues with latest JavaScript Ajax plugin install/activate. Install button should change color and alert message should update user. The current method on desktop is confusing as the user is not prominently updated on the status of an action. On mobile, using my Nexus 5x, clicking the  plugin install button results in a scroll to the top of the view, and I have to scroll down to find the button to activate, etc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 07 Sep 2016 02:21:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:1/1473214904152820</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @pbarnhart,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report and welcome to Trac. Could you provide any additional information about the kinds of error messages you are seeing, including any differences in the server responses that show up in Chrome's dev console?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37961 (Bump Akismet External - 4.7 edition) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 07 Sep 2016 02:10:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37961#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37961#comment:1/1473214201856412</guid>
      <description>&lt;p&gt;
Thanks! See
&lt;a class="ext-link" href="https://build.trac.wordpress.org/changeset/38477"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://build.trac.wordpress.org/changeset/38477&lt;/a&gt; trunk
&lt;a class="ext-link" href="https://build.trac.wordpress.org/changeset/38478"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://build.trac.wordpress.org/changeset/38478&lt;/a&gt; branches/4.6
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>