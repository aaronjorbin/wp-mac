<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>phpinfo.html attached to Ticket #26680</title>
      
        <dc:creator>samwilson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 23:49:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26680/phpinfo.html</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26680/phpinfo.html/1387496945632205</guid>
      <description>&lt;p&gt;
phpinfo() output
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20220 (add test to see if sunrise === on in ms-settings) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 19 Dec 2013 23:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20220#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20220#comment:19/1387496058045350</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26627 (Regression: get_queried_object no longer working with pre_get_posts ...) updated</title>
      
        <dc:creator>lkraav</dc:creator>

      <pubDate>Thu, 19 Dec 2013 22:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26627#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26627#comment:7/1387493532322234</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20767 (tax_query clobbers tag and category) updated</title>
      
        <dc:creator>lkraav</dc:creator>

      <pubDate>Thu, 19 Dec 2013 22:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20767#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20767#comment:16/1387493195869164</guid>
      <description>&lt;p&gt;
Yep, what @Otto42 said. This is breaking at least a few of my customers sites pretty bad. Moving over to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26627" title="#26627: defect (bug): Regression: get_queried_object no longer working with pre_get_posts ... (closed: fixed)"&gt;#26627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18909 (Bundled jQuery UI should have CSS) updated</title>
      
        <dc:creator>sewpafly</dc:creator>

      <pubDate>Thu, 19 Dec 2013 22:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18909#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18909#comment:82/1387490649433448</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25560 (Update to PHPMailer 5.2.7) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Thu, 19 Dec 2013 21:36:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25560#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25560#comment:8/1387488968361091</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have tested my most recent patch and can't see any issues - wp_mail still works fine.
&lt;/p&gt;
&lt;p&gt;
Can we have this ticket moved to the 3.9 milestone?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26558 (Remove title attributes: bookmark-template.php) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 21:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26558#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26558#comment:5/1387487447332698</guid>
      <description>&lt;p&gt;
I don't see any harm in that, no - but the example you've provided won't work, because you've added the aria attribute before the element declaration; it needs to come after the 'a' reference.
&lt;/p&gt;
&lt;p&gt;
Also, is 'bookmarklink' actually a unique ID for something? I wouldn't expect that to target something uniquely identifying; it seems generic.
&lt;/p&gt;
&lt;p&gt;
So, in short, yes - feel free to add aria-describedby, but check your code!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26679 (metaWeblog.getRecentPosts missing `sticky`) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 21:07:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26679#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26679#comment:7/1387487271260949</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26558 (Remove title attributes: bookmark-template.php) updated</title>
      
        <dc:creator>sharonaustin</dc:creator>

      <pubDate>Thu, 19 Dec 2013 21:04:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26558#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26558#comment:4/1387487061300781</guid>
      <description>&lt;p&gt;
Joe, do you see any harm by modifying code to add "aria-describedby"? If not, I'd like to try to add a "patch" to this, mostly to learn the ropes of adding patches.
&lt;/p&gt;
&lt;pre class="wiki"&gt;                $output .=  '&amp;lt;aria-describedby="bookmarklink"' . 'a href="' . $the_link . '"' . $rel . $title . $target . '&amp;gt;';
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26687 (General cleanup / space usage on comment-template.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 21:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26687#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26687#comment:2/1387486810887730</guid>
      <description>wontfix: &lt;p&gt;
Formatting cleanup tickets are generally discouraged. Coding style fixes should be a result of more substantial changes: &lt;a class="ext-link" href="http://wpdevel.wordpress.com/2011/03/23/code-refactoring/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wpdevel.wordpress.com/2011/03/23/code-refactoring/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #26687 (General cleanup / space usage on comment-template.php) updated</title>
      
        <dc:creator>Thaicloud</dc:creator>

      <pubDate>Thu, 19 Dec 2013 20:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26687#comment:1/1387486097297191</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>comment-template.diff attached to Ticket #26687</title>
      
        <dc:creator>Thaicloud</dc:creator>

      <pubDate>Thu, 19 Dec 2013 20:46:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26687/comment-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26687/comment-template.diff/1387485989977055</guid>
      <description>&lt;p&gt;
Lots of spacing added inside of opening and closing parenthesis
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26687 (General cleanup / space usage on comment-template.php) created</title>
      
        <dc:creator>Thaicloud</dc:creator>

      <pubDate>Thu, 19 Dec 2013 20:45:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26687</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26687/1387485909030706</guid>
      <description>&lt;p&gt;
Some nice winter cleaning- lots of places in /wp-includes/comment-template.php that could benefit from a little attention to good space usage.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17904 (Multisite has more restrictions on user login character set) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 19 Dec 2013 20:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17904#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17904#comment:25/1387485683712255</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26686 (XMLRPC call will not remove all terms in a taxonomy when passed an ...) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 19 Dec 2013 19:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26686#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26686#comment:1/1387480069304278</guid>
      <description>&lt;p&gt;
Related &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/25037" title="#25037: defect (bug): XML-RPC : Can't remove all the categories from a post by using ... (assigned)"&gt;#25037&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>_insert_post.patch attached to Ticket #26686</title>
      
        <dc:creator>jstraitiff</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:56:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26686/_insert_post.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26686/_insert_post.patch/1387479381811288</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26686 (XMLRPC call will not remove all terms in a taxonomy when passed an ...) created</title>
      
        <dc:creator>jstraitiff</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:56:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26686</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26686/1387479366189529</guid>
      <description>&lt;p&gt;
When calling wp.editPost from XMLRPC, if you pass an empty array for a set of terms it will not remove all the terms in that taxonomy for a post.  If the array has even one term id in it, it will set it properly, but empty arrays get ignored and thus don't change the current terms.
&lt;/p&gt;
&lt;p&gt;
I found and fixed the issue and have attached a patch.  I'm adding one line in _insert_post (in wp-includes/class-wp-xmlrpc-server.php) to initialize the $terms array for a particular taxonomy, thus when the following foreach is called (and skips because of the empty array) then an empty array will be passed along and cause the terms deletion to happen.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26685 (Twenty Fourteen: Add "chat" post format support) created</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26685</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26685/1387477513066068</guid>
      <description>&lt;p&gt;
Currently we have: &lt;code&gt;'aside', 'image', 'video', 'audio', 'quote', 'link', 'gallery'&lt;/code&gt; but no chat...
&lt;/p&gt;
&lt;p&gt;
This ticket is for adding the chat to the list:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	add_theme_support( 'post-formats', array(
		'aside', 'image', 'video', 'audio', 'quote', 'link', 'gallery',
	) );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>sidebars all expanded.png attached to Ticket #26684</title>
      
        <dc:creator>bananastalktome</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:24:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26684/sidebars%20all%20expanded.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26684/sidebars%20all%20expanded.png/1387477440650150</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>sidebars when the page loads.png attached to Ticket #26684</title>
      
        <dc:creator>bananastalktome</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26684/sidebars%20when%20the%20page%20loads.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26684/sidebars%20when%20the%20page%20loads.png/1387477432444892</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26684 (Indicate if widgets exist in sidebars on the Appearance &gt; Widgets page) created</title>
      
        <dc:creator>bananastalktome</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:23:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26684</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26684/1387477416256113</guid>
      <description>&lt;p&gt;
On the 'Appearance' -&amp;gt; 'Widgets' page, there is no indication whether widgets exist in sidebars besides the primary one (which is the only one expanded by default). The small down/up triangles (which didn't toggle between up/down until 3.8 or late 3.7) as the only UI difference between an expanded &amp;amp; empty sidebar or collapsed one is such a subtle nuance that it is lost on many of our users.
&lt;/p&gt;
&lt;p&gt;
Since one of the sidebars is expanded by default, many of our users assume that only sidebars with widgets in they are expanded. Also, since the 'Primary' sidebar may not even contain any widgets for sites in our multisite environment, our users are then left even more confused.
&lt;/p&gt;
&lt;p&gt;
While I don't think that expanding all sidebars with widgets in them would be a good idea, I think that a number or other UI hint that "there are widgets in this sidebar" would make it more obvious and easier for our users to realize that the non-expanded sidebars aren't empty.
&lt;/p&gt;
&lt;p&gt;
For reference, attached are two screenshots of how the sidebars appear to users when they load the page and then a second one with all the sidebars expanded.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26683 (Improve Documentation of add_post_type_support()) updated</title>
      
        <dc:creator>kpdesign</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26683#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26683#comment:2/1387476750594625</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26683 (Improve Documentation of add_post_type_support()) updated</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26683#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26683#comment:1/1387476045773008</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>improve-add_post_type_support-documentation.diff attached to Ticket #26683</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26683/improve-add_post_type_support-documentation.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26683/improve-add_post_type_support-documentation.diff/1387476028546486</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26683 (Improve Documentation of add_post_type_support()) created</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Thu, 19 Dec 2013 18:00:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26683</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26683/1387476015842918</guid>
      <description>&lt;p&gt;
The DocBlocks for &lt;code&gt;add_post_type_support&lt;/code&gt; do not mention &lt;code&gt;post-formats&lt;/code&gt;; &lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/add_post_type_support#Parameters"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Codex&lt;/a&gt; does. The attached patch fixes this discrepancy.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26674 (The get_tag_regex() function is a too greedy when searching for a ...) updated</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 17:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26674#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26674#comment:4/1387473502323645</guid>
      <description>&lt;p&gt;
Never mind that unit test patch. It needs to be rewritten for enhancements added by &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/26675"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;#26675&lt;/a&gt;. However, the &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/media.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;current unit test&lt;/a&gt; for get_media_embedded_in_content() does test the prowess of get_tag_regex().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26680 (Update page error) updated</title>
      
        <dc:creator>collinsinternet</dc:creator>

      <pubDate>Thu, 19 Dec 2013 17:12:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26680#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26680#comment:3/1387473153082577</guid>
      <description>&lt;p&gt;
What environment are you running this on?  LAMP, XAMPP, IIS, etc?
&lt;/p&gt;
&lt;p&gt;
Same question as @dd32, are you running APC?
&lt;/p&gt;
&lt;p&gt;
Can you attach a phpinfo()?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26648 (Div is not cleared after floated element in /wp-admin/themes.php) updated</title>
      
        <dc:creator>bananastalktome</dc:creator>

      <pubDate>Thu, 19 Dec 2013 17:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26648#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26648#comment:8/1387472919677918</guid>
      <description>&lt;p&gt;
Related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26646" title="#26646: defect (bug): On Appearance themes page &amp;#34;.themes&amp;#34; div is not covering floated elements. (closed: fixed)"&gt;#26646&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26676 (When upgrading code, object (or DB?) cache holds on to old versions) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 19 Dec 2013 17:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26676#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26676#comment:3/1387472785598690</guid>
      <description>&lt;p&gt;
May as well tack on the weirdness where the admin styles didn't get flushed either thanks to object caching (that is someone with memcached had to flush cache to make Dashicons show up). I have a feeling it's all related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26677 (Media modal still has old style on front-end.) updated</title>
      
        <dc:creator>collinsinternet</dc:creator>

      <pubDate>Thu, 19 Dec 2013 17:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26677#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26677#comment:4/1387472737594521</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26674 (The get_tag_regex() function is a too greedy when searching for a ...) updated</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 16:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26674#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26674#comment:3/1387471367162472</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The attached unit test is a patch for the trunk/media.php unit test. The original test only looked for one occurrence of a type in the content. This tests for multiple occurrences. The test_get_media_embedded_in_content() test runs get_tag_regex().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>unit-test.patch attached to Ticket #26674</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 16:36:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26674/unit-test.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26674/unit-test.patch/1387470971325418</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20220 (add test to see if sunrise === on in ms-settings) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Dec 2013 14:09:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20220#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20220#comment:18/1387462166832589</guid>
      <description>&lt;p&gt;
SUNRISE_LOADED doesn't exist in WordPress core.
&lt;/p&gt;
&lt;p&gt;
This isn't about plugin compatibility, ultimately. I wish it were, I'd have less qualms about breaking this. Rather, this is about someone updating to the newest version of WordPress (a version that has possibly been running since the MU days) and suddenly finding that their sunrise.php file â€” which, when used, is usually extremely important â€” is no longer being loaded, and their site has crashed. That's the big picture. It's also a doomsday scenario, but think about how terrible this would be.
&lt;/p&gt;
&lt;p&gt;
Since SUNRISE is used to detect is_multisite(), if you don't want to switch to SUBDOMAIN_INSTALL for that, you could also do this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;define( 'SUNRISE', false );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
And in your sunrise.php file:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( false === SUNRISE ) return;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
An alternative option we have is when SUNRISE is defined as false, to issue a notice saying "uh, your sunrise is still being loaded, just a heads up". But that would ingrain this functionality, unless we linked to a Codex page that explained "uh, your sunrise is still being loaded. change to &lt;code&gt;true&lt;/code&gt; if that's what you want. if that's not what you want, add &lt;code&gt;if ( false === SUNRISE ) return;&lt;/code&gt; to the top of sunrise.php, that way we can change this in WordPress 4.x".
&lt;/p&gt;
&lt;p&gt;
This is certainly not ideal. ms-settings.php is due for some sort of overhaul eventually. This is certainly something to keep in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26682 (Improve phpdocs for get_the_time and get_post_time) updated</title>
      
        <dc:creator>kpdesign</dc:creator>

      <pubDate>Thu, 19 Dec 2013 13:15:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26682#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26682#comment:3/1387458929012574</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10948 (wp_list_comments() always assumes walker will echo.) updated</title>
      
        <dc:creator>needle</dc:creator>

      <pubDate>Thu, 19 Dec 2013 12:43:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10948#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10948#comment:23/1387456990312195</guid>
      <description>&lt;p&gt;
@MikeLittle when the walker was first introduced, it didn't allow for wrapping comments in ordered lists, just unordered ones. So, way back when, I implemented a custom walker to generate output using &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; tags by overriding &lt;code&gt;start_lvl()&lt;/code&gt; and &lt;code&gt;end_lvl()&lt;/code&gt; and echoing ordered list markup. I realise that the walker has supported &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; for a long time now, but as with many projects, because nothing broke when that was introduced, it got overlooked and my custom walker remained in place.
&lt;/p&gt;
&lt;p&gt;
But since &lt;code&gt;start_lvl()&lt;/code&gt; and &lt;code&gt;end_lvl()&lt;/code&gt; now (properly) use &lt;code&gt;$output&lt;/code&gt; instead of echoing, I only just noticed that I was getting spurious ordered lists being written into the markup by my custom walker's methods. But because this only happens when there are &lt;em&gt;nested&lt;/em&gt; comments, it was not immediately obvious.
&lt;/p&gt;
&lt;p&gt;
Having said all of that, I suspect that my theme is probably one of the few to do this (or have done this). I just wanted to highlight that any custom walker that overrides &lt;code&gt;start_lvl()&lt;/code&gt; and/or &lt;code&gt;end_lvl()&lt;/code&gt; will be affected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10948 (wp_list_comments() always assumes walker will echo.) updated</title>
      
        <dc:creator>MikeLittle</dc:creator>

      <pubDate>Thu, 19 Dec 2013 12:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10948#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10948#comment:22/1387455262140130</guid>
      <description>&lt;p&gt;
There shouldn't be any breakage as by default the behaviour does not change. I can't think of a situation where a custom walker's behaviour would be modified by this change.
Please provide an example if you can and I'll look to see if any issues can be mitigated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10948 (wp_list_comments() always assumes walker will echo.) updated</title>
      
        <dc:creator>needle</dc:creator>

      <pubDate>Thu, 19 Dec 2013 12:04:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10948#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10948#comment:21/1387454642826350</guid>
      <description>&lt;p&gt;
Thanks for the commit on this long-standing issue. This is just a note to say that comment output of any theme using a custom walker may now appear unexpectedly broken. It might be worth some kind of announcement on make (or elsewhere) to highlight this change, because the effects are subtle yet important.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26679 (metaWeblog.getRecentPosts missing `sticky`) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 11:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26679#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26679#comment:6/1387453703265503</guid>
      <description>&lt;p&gt;
I can't but agree. I'm going to push for &lt;code&gt;wp.getPosts&lt;/code&gt; there for sure, since it's far more superior. This ticket should be unrelated to the mobile app and not dependent on it; it's a mere trivial bugfix, where the Codex promised &lt;code&gt;sticky&lt;/code&gt; but it was not delivered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26679 (metaWeblog.getRecentPosts missing `sticky`) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 19 Dec 2013 11:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26679#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26679#comment:5/1387453539561909</guid>
      <description>&lt;p&gt;
I'm fine that this patch gets committed but it's not a fix for the mobile apps. Since for them it's better to switch to &lt;code&gt;wp.getPosts&lt;/code&gt; to have better support for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26682 (Improve phpdocs for get_the_time and get_post_time) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Thu, 19 Dec 2013 11:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26682#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26682#comment:2/1387453333575724</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26682 (Improve phpdocs for get_the_time and get_post_time) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Thu, 19 Dec 2013 11:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26682#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26682#comment:1/1387453328899090</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>get_the_time_inline_docs.patch attached to Ticket #26682</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Thu, 19 Dec 2013 11:41:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26682/get_the_time_inline_docs.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26682/get_the_time_inline_docs.patch/1387453271348862</guid>
      <description>&lt;p&gt;
get_the_time, get_post_time inline docs patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26682 (Improve phpdocs for get_the_time and get_post_time) created</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Thu, 19 Dec 2013 11:38:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26682</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26682/1387453090092748</guid>
      <description>&lt;p&gt;
get_the_time utilizes get_the_post, get_the_post uses mysql2date, mysql2date can return a string or an int in the specific case that an Unix timestamp is requested.
&lt;/p&gt;
&lt;p&gt;
( * @return string|int Formatted date string, or Unix timestamp. )
&lt;/p&gt;
&lt;p&gt;
In the added patch I've changed the inline documentation to better reflect that possibility.
&lt;/p&gt;
&lt;p&gt;
Of course via the filters they can return also other types.., but I don't know how that is supposed to be handled with the inline docs.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26681 (Allow HTML in selection captured with Press This bookmarklet) created</title>
      
        <dc:creator>grosbouff</dc:creator>

      <pubDate>Thu, 19 Dec 2013 10:32:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26681</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26681/1387449177493792</guid>
      <description>&lt;p&gt;
Hi, since a few weeks I'm using the Press This bookmarklet, which is, I think, an underestimated function of WP.
&lt;/p&gt;
&lt;p&gt;
I like websites like &lt;em&gt;Pinterest, Springpad or LoveIt&lt;/em&gt;, but i'm not trusting them and I want to do what I want with the "pins" I save : I would like to save them on my WP, not on an external service.
&lt;/p&gt;
&lt;p&gt;
For example, I had a &lt;em&gt;LoveIt&lt;/em&gt; account and they just said they were shutting down their service, 2 weeks before doing it, and without any tool to help users backup their account. (hopefully I had already created a WP plugin to backup it : &lt;a class="ext-link" href="http://wordpress.org/plugins/loveitcom-importer/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/plugins/loveitcom-importer/&lt;/a&gt;)
Pinterest is great but only allows 3 private albums...  I don't like when websites are forcing me to do what I don't want : share my stuff.
&lt;/p&gt;
&lt;p&gt;
I think Wordpress COULD and SHOULD propose an alternative to those services, and only one thing is missing for this : the ability to capture HTML and not only text.
This is a HUGE difference !
&lt;/p&gt;
&lt;p&gt;
"Press This" could work as actually (get selection then load it in the popup window); but having a filter hook on the HTML selection would allow plugins to act on the selection captured :
WP would, by default,  santize the selection with a filter hook to output simple text, but having this hook would allow plugins to act on the selection captured:
&lt;/p&gt;
&lt;p&gt;
plugins could
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;allow certain html tags (em, bold, stroke, img, a, ...) instead of having "pure" text,
&lt;/li&gt;&lt;li&gt;download remote medias found in the captured code,
&lt;/li&gt;&lt;li&gt;Set appropriate post format depending on what is captured,
&lt;/li&gt;&lt;li&gt;Change how the popup displays and have a wizard instead of the actual press this page;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I already send this as a Wordpress Idea  (&lt;a class="ext-link" href="http://wordpress.org/ideas/topic/improve-press-this-bookmarklet"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/ideas/topic/improve-press-this-bookmarklet&lt;/a&gt;), sorry to post here but I'm sure would be a great feature and i'm surprised nobody seems to have talked about this already.
&lt;/p&gt;
&lt;p&gt;
I had once started to develop my own plugin to achieve this, but it was really difficult to make as there are not much hooks in the "Press This" code, and above all, because WP is capturing text and not code.
Changing this would make things really easier.
&lt;/p&gt;
&lt;p&gt;
Thanks a lot, hope you'll like the idea !
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16379 (Better UI for doing "Page on Front") updated</title>
      
        <dc:creator>Latz</dc:creator>

      <pubDate>Thu, 19 Dec 2013 10:18:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16379#comment:127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16379#comment:127/1387448312872181</guid>
      <description>&lt;p&gt;
Are people still interested in this ticket or have we moved on and keep the UI as it is?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26317 (Added Filter to be possible to disable/change the 'New Site Created' ...) updated</title>
      
        <dc:creator>vaurdan</dc:creator>

      <pubDate>Thu, 19 Dec 2013 09:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26317#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26317#comment:3/1387446884956595</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26317#comment:2" title="Comment 2"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the ticket and the patch, vaurdan. It is interesting that we only fire the quick email with &lt;code&gt;wp_mail()&lt;/code&gt; to the admin right before an abstracted event for &lt;code&gt;wpmu_welcome_notification()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yup, that doesn't make much sense, this was probabily old and forgotten code.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we pull this out into a new function, we should identify where else it could be used to notify an admin that a new site has been created. It should also likely not have the &lt;code&gt;wpmu_&lt;/code&gt; prefix, as that was ported over in the WPMU transition. We'd be ok to do something more like &lt;code&gt;wp_new_site_admin_notification()&lt;/code&gt; I think.
&lt;/p&gt;
&lt;p&gt;
We can probably move the &lt;code&gt;get_site_url()&lt;/code&gt; check into the new function and pass the &lt;code&gt;$id&lt;/code&gt; along as we do in &lt;code&gt;wpmu_welcome_notification()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I think it makes sense to see how we can improve this going forward. The new site notification emails are pretty light at the moment. It looks like it has been this way since MU was ported over via &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12603" title="Add mu only (inactive) files"&gt;[12603]&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, you're right. I used the prefix &lt;code&gt;wpmu_&lt;/code&gt;, just because all the functions there had &lt;code&gt;wpmu_&lt;/code&gt; as well, but makes much more sense using Â´wp_Â´, since there is no wpmu anymore...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26608 (/wp-admin/includes/post.php: Make HTML tag standard compliant) updated</title>
      
        <dc:creator>Latz</dc:creator>

      <pubDate>Thu, 19 Dec 2013 09:41:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26608#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26608#comment:6/1387446079531356</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26608#comment:5" title="Comment 5"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are two more in JS files:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="source" href="http://core.trac.wordpress.org/browser/trunk/src/wp-admin/js/dashboard.js?rev=26813#L162"&gt;trunk/src/wp-admin/js/dashboard.js@26813#L162&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/26813/trunk/src/wp-admin/js/dashboard.js#L162" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="source" href="http://core.trac.wordpress.org/browser/trunk/src/wp-admin/js/post.js?rev=26813#L841"&gt;trunk/src/wp-admin/js/post.js@26813#L841&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/26813/trunk/src/wp-admin/js/post.js#L841" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Does that mean you would support the ticket if those were changed, too?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16031 (Bulk actions: Reactivate bulk actions hook + add hander hook for all ...) updated</title>
      
        <dc:creator>KoenRijpstra</dc:creator>

      <pubDate>Thu, 19 Dec 2013 09:39:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16031#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16031#comment:48/1387445988294518</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26571 (Increase flexibility of "At a Glance" Dashboard Widget to match "Right ...) updated</title>
      
        <dc:creator>Latz</dc:creator>

      <pubDate>Thu, 19 Dec 2013 09:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26571#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26571#comment:7/1387445453296129</guid>
      <description>&lt;p&gt;
1) The action is a good idea to be able to do arbitrary stuff.
&lt;/p&gt;
&lt;p&gt;
2) I like the &lt;code&gt;array( 'class' =&amp;gt; '{class}', 'li' =&amp;gt; '{list item html} )&lt;/code&gt; pattern better because using the class as the key name like in the first pattern you've proposed is not very intuitive in my mind.
Secondly I would not use the key name "li" since it assumes that the markup uses a list. This may change in the future. I would suggest "item" or "content":&lt;code&gt;array( 'item' =&amp;gt; '{item html}, 'class' =&amp;gt; '{class}' )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Your questions:
1) No objections.
2) Looked through the filters and couldn't find anything similar.
3) Same opinion. Additionally all usages of the current filter forces merely hacks like the examples above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20220 (add test to see if sunrise === on in ms-settings) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 19 Dec 2013 09:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20220#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20220#comment:17/1387444651591441</guid>
      <description>&lt;p&gt;
Most plugins that would make use of the constant are things that are most likely going to be custom plugins. Ultimately if we care about backwards compatibility we cannot change this at all, as silly as it may seem, so further discussion is pretty pointless.
&lt;/p&gt;
&lt;p&gt;
I honestly agree with nacin when he says:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you need to ignore SUNRISE for a particular request, then either A) don't define it, or B) if it's too late to not define it, just don't do anything in sunrise.php. WordPress doesn't skip any of its own logic when sunrise.php is included and does nothing. Ultimately, "We needed to disable sunrise for certain requests." is just not enough to justify 20220.patchâ€‹ or the like.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Define the constant when it's needed, otherwise, do nothing.. It's the act of defining a constant that we care about here, not what you define it to.
It should be pretty obvious to a developer straight away that defining it to false isn't doing what they expect.
&lt;/p&gt;
&lt;p&gt;
The closest we'd get to altering the values you can define it to, is to create a new constant instead (ie. &lt;code&gt;USE_SUNRISE&lt;/code&gt;) and only define SUNRISE for backwards compatibility if that's defined to &lt;code&gt;true&lt;/code&gt; - but doing this provides no tangible benefit other than adding a constant and people getting confused as to why there's two (and then defining both..)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20220 (add test to see if sunrise === on in ms-settings) updated</title>
      
        <dc:creator>pdclark</dc:creator>

      <pubDate>Thu, 19 Dec 2013 07:50:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20220#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20220#comment:16/1387439401710572</guid>
      <description>&lt;p&gt;
That's a great point, Jeremy.
&lt;/p&gt;
&lt;p&gt;
There is the &lt;code&gt;SUNRISE_LOADED&lt;/code&gt; constant for that purpose, but that doesn't mean the situation might not apply.
&lt;/p&gt;
&lt;p&gt;
Looking at &lt;a class="ext-link" href="https://github.com/search?q=defined%28%27SUNRISE%27%29+in%3Afile+language%3Aphp+user%3Awp-plugins&amp;amp;type=Code&amp;amp;ref=searchresults"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;this code search of all plugins on wordpress.org&lt;/a&gt;, I count only two lines from two plugins that this *might* effect, but neither case is critical behavior â€”Â both are simply checks to display a warning:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/wp-plugins/wordpress-mu-domain-mapping/blob/f5c0f95049de371c465af216fc754db655d8e77d/domain_mapping.php#L422"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;wordpress-mu-domain-mapping&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/wp-plugins/yet-another-multi-site-manager/blob/d4695d2bfa107f83a19371a502e675702f6789c1/yet-another-multi-site-manager.php#L486"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;yet-another-multi-site-manager&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The only other cases I saw in plugins either use it as a redundancy for checking multisite, or check it correctly:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/wp-plugins/mailin/blob/0c95c121e89bf3163987fd3e02d0e52d4451b155/compatibility.php#L84"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;mailin&lt;/a&gt; â€”Â redundantly checking if multisite. Still works.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/wp-plugins/mailchimp/blob/e6a4f1c3384d8841c48369ffe61ece3e51780807/mailchimp_compat.php#L94"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;mailchimp&lt;/a&gt;â€”Â same
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/wp-plugins/all-in-one-seo-pack/blob/2eeead62b29916506c2ba214ff89aa1bc1ddad19/aioseop_sitemap.php#L347"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;all-in-one-seo-pack&lt;/a&gt; â€” Does it right.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20220 (add test to see if sunrise === on in ms-settings) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 19 Dec 2013 06:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20220#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20220#comment:15/1387433554798002</guid>
      <description>&lt;p&gt;
Another, albeit unlikely, scenario to consider is a configuration relying on previous core behavior.
&lt;/p&gt;
&lt;p&gt;
If we stopped loading sunrise on &lt;code&gt;false === SUNRISE&lt;/code&gt;, then code in a plugin or mu-plugin that also checks &lt;code&gt;is_defined( 'SUNRISE' )&lt;/code&gt; would attempt to fire under the incorrect assumption that &lt;code&gt;sunrise.php&lt;/code&gt; had been loaded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25017 (Dont allow empty $src parameter in wp_register_script) updated</title>
      
        <dc:creator>benfreke</dc:creator>

      <pubDate>Thu, 19 Dec 2013 05:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25017#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25017#comment:15/1387432061599020</guid>
      <description>&lt;p&gt;
Hi @SergeyBirukov and @nacin. Thanks for taking the time to reply. I think I got too close to the code, and I now agree with both of you that the existing message makes sense and points developers to the right solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26680 (Update page error) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 19 Dec 2013 05:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26680#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26680#comment:2/1387431725363304</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Are you running any PHP accelerators (APC/eAccelerator, etc)? and are they up to date?
&lt;/p&gt;
&lt;p&gt;
I can't tell why this error is being triggered, the class definitely has a parent in scope..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26680 (Update page error) updated</title>
      
        <dc:creator>samwilson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 05:19:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26680#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26680#comment:1/1387430356974826</guid>
      <description>&lt;p&gt;
PHP version 5.3.27 by the way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26680 (Update page error) created</title>
      
        <dc:creator>samwilson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 05:13:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26680</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26680/1387430020085832</guid>
      <description>&lt;p&gt;
I have just upgraded to 3.8 and when I go to the Updates page I get the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Last checked on December 19, 2013 at 11:32 am.
You have the latest version of WordPress.
Fatal error: Cannot access parent:: when current class scope has no parent in [...]/wp-admin/includes/class-wp-upgrader-skins.php on line 594
&lt;/pre&gt;&lt;p&gt;
I completely replaced the entire WP install with a freshly unzipped copy, and removed all custom plugins (of which there were only two: openid and wp-recaptcha), but the above error remains.
&lt;/p&gt;
&lt;p&gt;
Thanks!
Sam.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>26677.patch attached to Ticket #26677</title>
      
        <dc:creator>collinsinternet</dc:creator>

      <pubDate>Thu, 19 Dec 2013 04:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26677/26677.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26677/26677.patch/1387428976947070</guid>
      <description>&lt;p&gt;
Modification of media-views.css and media-views.min.css.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>26639.4.diff attached to Ticket #26639</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 04:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26639/26639.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26639/26639.4.diff/1387427108134654</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26639 (Insufficient keyboard accessibility of the main menu for mobile ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 04:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26639#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26639#comment:12/1387427052538795</guid>
      <description>&lt;p&gt;
Seems like the changes in &lt;code&gt;wp-includes/class-wp-admin-bar.php&lt;/code&gt; are not really necessary, we can set the initial state in JS as well: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26639/26639.4.diff" title="Attachment '26639.4.diff' in Ticket #26639"&gt;26639.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26639/26639.4.diff" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26677 (Media modal still has old style on front-end.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 03:48:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26677#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26677#comment:3/1387424895951598</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp-includes/css/media-views.css&lt;/code&gt; probably needs an update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26677 (Media modal still has old style on front-end.) updated</title>
      
        <dc:creator>collinsinternet</dc:creator>

      <pubDate>Thu, 19 Dec 2013 03:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26677#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26677#comment:2/1387424599952567</guid>
      <description>&lt;p&gt;
This appears to be the result of the theme not including /wp-admin/css/colors.min.css OR perhaps
&lt;code&gt;wp_enqueue_style('colors-fresh');&lt;/code&gt; on line 64 of /wp-includes/class-wp-admin-bar.php.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, this stylesheet has items that can alter a theme's layout.  Unless there were a condensed version of just the styling for the media upload included as part of the admin-bar or admin logged in stylesheets, then that would work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26679 (metaWeblog.getRecentPosts missing `sticky`) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 03:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26679#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26679#comment:4/1387422604589730</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20048 (Allow mt.getRecentPostTitles to return the sticky flag) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Thu, 19 Dec 2013 03:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20048#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20048#comment:3/1387422497761973</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26679" title="#26679: defect (bug): metaWeblog.getRecentPosts missing `sticky` (closed: fixed)"&gt;#26679&lt;/a&gt;, my recommendation is to instead just use &lt;a class="ext-link" href="http://codex.wordpress.org/XML-RPC_WordPress_API/Posts#wp.getPosts"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;wp.getPosts&lt;/a&gt; method instead. You can make it just as lightweight as &lt;code&gt;mt.getRecentPostTitles&lt;/code&gt; by using the &lt;code&gt;fields&lt;/code&gt; argument to limit the data returned.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26679 (metaWeblog.getRecentPosts missing `sticky`) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 03:07:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26679#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26679#comment:3/1387422473849002</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;wp.getPosts&lt;/code&gt; is indeed a superior API and hopefully the lead developers will want to move WordPress for Android over to it instead. But overall, this is a trivial miss that wasn't covered in the Codex until now, and it's trivial to fix, too.
&lt;/p&gt;
&lt;p&gt;
But wherever this ticket ends up - I'm fine with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26679 (metaWeblog.getRecentPosts missing `sticky`) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Thu, 19 Dec 2013 03:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26679#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26679#comment:2/1387422249329343</guid>
      <description>&lt;p&gt;
As you seem to have discovered on your own in that GitHub issue, a better approach would be to just use the &lt;code&gt;wp.getPosts&lt;/code&gt; method instead. It was added in 3.4, so compatibility should be fine for the mobile apps; certainly better than waiting for 3.9 or later. You should consider the Movable Type API deprecated at this point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26518 (Added a flipped update icon to dashicons and assigned it to updates, ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:49:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26518#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26518#comment:9/1387421373903815</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26679 (metaWeblog.getRecentPosts missing `sticky`) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:24:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26679#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26679#comment:1/1387419851557571</guid>
      <description>&lt;p&gt;
Should be $entry, not $post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26679.1.diff attached to Ticket #26679</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:23:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26679/26679.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26679/26679.1.diff/1387419822947857</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26518 (Added a flipped update icon to dashicons and assigned it to updates, ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26518#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26518#comment:8/1387419509448283</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26518/26518.diff" title="Attachment '26518.diff' in Ticket #26518"&gt;26518.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26518/26518.diff" title="Download"&gt;â€‹&lt;/a&gt; replaces the counter-clockwise update icon with the clockwise update icon, as well as replacing the larger edit icon with the smaller edit icon. I've also included the update font files: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26518/fonts.2.zip" title="Attachment 'fonts.2.zip' in Ticket #26518"&gt;fonts.2.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26518/fonts.2.zip" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
There are two additional icons to add: .dashicons-email and .dashicons-email-alt. Should I create a new ticket for them?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fonts.2.zip attached to Ticket #26518</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26518/fonts.2.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26518/fonts.2.zip/1387419265960367</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>26518.diff attached to Ticket #26518</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26518/26518.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26518/26518.diff/1387419246093342</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20220 (add test to see if sunrise === on in ms-settings) updated</title>
      
        <dc:creator>pdclark</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20220#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20220#comment:14/1387419196287026</guid>
      <description>&lt;p&gt;
Is there any room for reconsideration on this? It seems much more reasonable that wp-config.php constants work consistently than to expect any developer would ever set &lt;code&gt;define( 'SUNRISE', false );&lt;/code&gt; to enable sunrise!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26563 (min-width property without value in ie.css) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:07:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26563#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26563#comment:3/1387418833536271</guid>
      <description>&lt;p&gt;
I've checked the Themes screen in IE7 to see if it actually needs some &lt;code&gt;min-width&lt;/code&gt; value, and looks like it doesn't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20048 (Allow mt.getRecentPostTitles to return the sticky flag) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:03:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20048#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20048#comment:2/1387418624079171</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20048 (Allow mt.getRecentPostTitles to return the sticky flag) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20048#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20048#comment:1/1387418535662124</guid>
      <description>&lt;p&gt;
Sorry, wrong ticket, misread &lt;code&gt;getRecentPostTitles&lt;/code&gt; vs. &lt;code&gt;getRecentPosts&lt;/code&gt;. Moved to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26679" title="#26679: defect (bug): metaWeblog.getRecentPosts missing `sticky` (closed: fixed)"&gt;#26679&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26679.diff attached to Ticket #26679</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 02:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26679/26679.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26679/26679.diff/1387418423454418</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26679 (metaWeblog.getRecentPosts missing `sticky`) created</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 01:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26679</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26679/1387418376848934</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/XML-RPC_MetaWeblog_API#Return_Values_2"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://codex.wordpress.org/XML-RPC_MetaWeblog_API#Return_Values_2&lt;/a&gt; states "struct: see #metaWeblog.getPost for fields", but &lt;code&gt;sticky&lt;/code&gt; is not returned, although valuable.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="https://github.com/wordpress-mobile/WordPress-Android/issues/349"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/wordpress-mobile/WordPress-Android/issues/349&lt;/a&gt;, for example
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #20220,â€‹26678 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 01:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=20220%2C26678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=20220%2C26678/1387418244162851</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20220" title="#20220: enhancement: add test to see if sunrise === on in ms-settings (closed: wontfix)"&gt;#20220&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>20048.diff attached to Ticket #20048</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Dec 2013 01:56:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20048/20048.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20048/20048.diff/1387418181493790</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26678 (sunrise.php gets included for all values of SUNRISE, including false ...) updated</title>
      
        <dc:creator>pdclark</dc:creator>

      <pubDate>Thu, 19 Dec 2013 01:55:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26678#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26678#comment:1/1387418153502610</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26678-sunrise.diff attached to Ticket #26678</title>
      
        <dc:creator>pdclark</dc:creator>

      <pubDate>Thu, 19 Dec 2013 01:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26678/26678-sunrise.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26678/26678-sunrise.diff/1387417941587227</guid>
      <description>&lt;p&gt;
Allow either false or 'off' to disable sunrise.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26678 (sunrise.php gets included for all values of SUNRISE, including false ...) created</title>
      
        <dc:creator>pdclark</dc:creator>

      <pubDate>Thu, 19 Dec 2013 01:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26678/1387417787855484</guid>
      <description>&lt;p&gt;
The most common example of enabling sunrise.php is to set &lt;code&gt;define( 'SUNRISE', 'on' );&lt;/code&gt; in &lt;code&gt;wp-config.php&lt;/code&gt;. Programmers might expect, then, that 'off' would disable it.
&lt;/p&gt;
&lt;p&gt;
Likewise, the standard for other constants, such as &lt;code&gt;WP_DEBUG&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; turns it on, &lt;code&gt;false&lt;/code&gt; turns it off.
&lt;/p&gt;
&lt;p&gt;
Right now, any value of SUNRISE, including &lt;code&gt;define( 'SUNRISE', false );&lt;/code&gt;, includes the file.
&lt;/p&gt;
&lt;p&gt;
Attached patch allows either &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;'off'&lt;/code&gt; to disable &lt;code&gt;sunrise.php&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26602 (Insufficient information for screen readers in themes.php) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 00:56:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26602#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26602#comment:5/1387414580035440</guid>
      <description>&lt;p&gt;
Attached patch adds aria-describedby getting theme name and action performed; second patch corrects error in action reference in first patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26602.1.patch attached to Ticket #26602</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 00:55:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26602/26602.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26602/26602.1.patch/1387414533154325</guid>
      <description>&lt;p&gt;
Corrects error in previous patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>26602.patch attached to Ticket #26602</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 00:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26602/26602.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26602/26602.patch/1387414374579587</guid>
      <description>&lt;p&gt;
Communicate theme name and action to screen readers.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26602 (Insufficient information for screen readers in themes.php) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 00:39:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26602#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26602#comment:4/1387413564771939</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26602 (Insufficient information for screen readers in themes.php) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Thu, 19 Dec 2013 00:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26602#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26602#comment:3/1387413553609833</guid>
      <description>&lt;p&gt;
I think that a patch for this somewhat depends on what happens with the keyboard focus patch (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26527" title="#26527: defect (bug): wp-admin/themes.php isn't keyboard navigation friendly (closed: fixed)"&gt;#26527&lt;/a&gt;); I can provide a patch that assumes the current behavior (navigation by keyboard through the &amp;lt;div&amp;gt; elements), but an actual commit to this really depends on choices made in keyboard navigation. If, instead of navigating to the &amp;lt;div&amp;gt; element, navigation passes from action items (Activate &amp;amp; Customize links), then instead this needs to use aria-describedby or screen-reader-hidden to indicate which theme the link references.
&lt;/p&gt;
&lt;p&gt;
Regardless, right now, my experience navigating by keyboard in Chrome or Firefox is that focus is moving from each individual Activate &amp;amp; Customize anchor element within the themes page, which is not the behavior described in this ticket.
&lt;/p&gt;
&lt;p&gt;
A second opinion would be appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26677 (Media modal still has old style on front-end.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Dec 2013 00:13:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26677#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26677#comment:1/1387411993740594</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2013-12-19 at 00.10.02.png attached to Ticket #26677</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 19 Dec 2013 00:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26677/Screen%20Shot%202013-12-19%20at%2000.10.02.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26677/Screen%20Shot%202013-12-19%20at%2000.10.02.png/1387411878419265</guid>
      <description>&lt;p&gt;
Front-end
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26677 (Media modal still has old style on front-end.) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 19 Dec 2013 00:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26677</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26677/1387411703257607</guid>
      <description>&lt;p&gt;
When opening the media modal on the front-end (with a theme like p2 for example), it still has the old style and some weird back lines.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26676 (When upgrading code, object (or DB?) cache holds on to old versions) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:51:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26676#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26676#comment:2/1387410697272692</guid>
      <description>&lt;p&gt;
This may be related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26173" title="#26173: defect (bug): DB Upgrade Loop after Automatic Upgrade with db_version change and ... (closed: fixed)"&gt;#26173&lt;/a&gt;. It may even be a total duplicate in the end.
&lt;/p&gt;
&lt;p&gt;
That ticket lead to a big discovery (to me) though, some object caches ignore the flush command and since the DB upgrade step sets &lt;code&gt;WP_INSTALLING&lt;/code&gt; which results in NOT updating the option values in the object cache, as it's relying upon the flush command.
The end result was that the DB version option in memory would always be out of date - This was fixed by specifically deleting the options cache rather than relying upon the flush.
&lt;/p&gt;
&lt;p&gt;
The symptoms described and the threads linked, could vary between incomplete upgrades, and the above issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26173 (DB Upgrade Loop after Automatic Upgrade with db_version change and ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:49:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26173#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26173#comment:10/1387410582970868</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is currently on a 3.7.2 milestone, and was only fixed in trunk (3.8). Marking as such. We may want to shift to 3.8 if there's no 3.7.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26660 (Twenty Fourteen: Featured Content transients block child themes from ...) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:46:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26660#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26660#comment:5/1387410371684755</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26660 (Twenty Fourteen: Featured Content transients block child themes from ...) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26660#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26660#comment:4/1387410141040867</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26660.diff attached to Ticket #26660</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:41:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26660/26660.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26660/26660.diff/1387410115652881</guid>
      <description>&lt;p&gt;
looks like we already have a function with that exact name although not sure back-compat is best place for it.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25604 (first argument of wpdb::prepare should have a placeholder) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:26:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25604#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25604#comment:6/1387409192467852</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25623 (The design of update_option etc makes race conditions likely to happen) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:26:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25623#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25623#comment:1/1387409184928037</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25559 (Enhance prepare method to better support SQL IN operator) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25559#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25559#comment:7/1387409088526131</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26676 (When upgrading code, object (or DB?) cache holds on to old versions) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:13:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26676#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26676#comment:1/1387408400251434</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26676 (When upgrading code, object (or DB?) cache holds on to old versions) created</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 18 Dec 2013 23:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26676</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26676/1387407837316583</guid>
      <description>&lt;p&gt;
This is NOT a 3.8 bug, as I've seen it before, but now it's a little more prevalent. In seaching for enough forum posts, I tracked it all the way back to 3.5...
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Scenario:&lt;/strong&gt; You have object caching (APC, memecached, whatever) and when you upgrade via the UI, all the files get correctly downloaded -however- WP gets 'stuck' on a wrong screen. For example, one user was stuck on 'Your DB upgrade is complete' while another kept being told that 3.8 was ready to be installed, even though he'd already done it. In all cases, the files were verifiably WP 3.8, and it was just the cache being 'greedy' on the UI.
&lt;/p&gt;
&lt;p&gt;
In all cases, flushing the server-side cache resolved the issues.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Caching Plugins:&lt;/strong&gt; Of course this only happened with a site using a caching plugin, but it was not the same one. Batcache and Memcached Redux were the two I spotted.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Links:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/126796/wordpress-3-8-keeps-asking-me-to-upgrade-to-3-8"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.stackexchange.com/questions/126796/wordpress-3-8-keeps-asking-me-to-upgrade-to-3-8&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/support/topic/keeps-asking-me-to-upgrade-to-371"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/topic/keeps-asking-me-to-upgrade-to-371&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/support/topic/database-update-required-infinite-loop"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/topic/database-update-required-infinite-loop&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/support/topic/admin-not-recognizing-38-update"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/topic/admin-not-recognizing-38-update&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/support/topic/running-wordpress-35-and-it-wont-update?replies=2"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/topic/running-wordpress-35-and-it-wont-update?replies=2&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26602 (Insufficient information for screen readers in themes.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 22:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26602#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26602#comment:2/1387407182152899</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26675 (Rewrite of get_media_embedded_in_content() function to produce ...) updated</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Wed, 18 Dec 2013 22:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26675#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26675#comment:1/1387404945770540</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12825 (Largest minimum text size in FF prefs makes admin display terrible) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 18 Dec 2013 22:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12825#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12825#comment:26/1387404902121938</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26675.patch attached to Ticket #26675</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Wed, 18 Dec 2013 22:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26675/26675.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26675/26675.patch/1387404893006703</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26675 (Rewrite of get_media_embedded_in_content() function to produce ...) created</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Wed, 18 Dec 2013 22:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26675</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26675/1387404868210188</guid>
      <description>&lt;p&gt;
The get_media_embedded_in_content() function does not output the media in the array in the order it appears in the content (as it should). Rather, it loops through each tag and gets the media in the order of tag (if get_tag_regex() worked correctly, see &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/26674"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;#26674&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
The attached patch adds a third parameter 'sortby' to declare how the results should sort. By default it sorts by 'type' and the remains as it is now. If a user declares the 'sortby' parameter as 'source', the results would appear in the order they are found in the content (which is what I expected).
&lt;/p&gt;
&lt;p&gt;
Also preg_match() was changed to preg_match_all() to find all the media of a type (instead of just one).
&lt;/p&gt;
&lt;p&gt;
Lastly, the regex used in the 'source' sort by is a modification of the get_tag_regex() to try subpatterns in alternation. An optional fix would be to add the named group in the get_tag_regex() function, but that is another patch.
&lt;/p&gt;
&lt;p&gt;
Side note: I added 'img' to the option of allowed media types (because it is media). If anyone has a reason this should not be in there, I would like to know why. I did not find any complications while testing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26674 (The get_tag_regex() function is a too greedy when searching for a ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 18 Dec 2013 22:04:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26674#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26674#comment:2/1387404296221617</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26674 (The get_tag_regex() function is a too greedy when searching for a ...) updated</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Wed, 18 Dec 2013 21:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26674#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26674#comment:1/1387403875125845</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23406 (Some notices messages which can maybe fixed) closed</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Wed, 18 Dec 2013 21:46:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23406#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23406#comment:11/1387403187843831</guid>
      <description>fixed: &lt;p&gt;
This ticket was closed on a complete milestone. Also the reason for increasing PHP in this case is invalid.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25672" title="#25672: defect (bug): is_a() causing errors with get_users() (closed: fixed)"&gt;#25672&lt;/a&gt; for your concern.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23406 (Some notices messages which can maybe fixed) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 18 Dec 2013 21:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23406#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23406#comment:10/1387402785907483</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23406 (Some notices messages which can maybe fixed) reopened</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 18 Dec 2013 21:39:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23406#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23406#comment:9/1387402752082735</guid>
      <description>&lt;p&gt;
As far as I understand, 5.2.4 is still the "minimum" version for WordPress. In 5.2.4, &lt;code&gt;is_a&lt;/code&gt; &lt;em&gt;is&lt;/em&gt; deprecated. Perhaps either &lt;code&gt;is_a&lt;/code&gt; shouldn't be used, or the "minimum" version should be bumped to 5.3, where it was reintroduced.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>get-tag-regex.diff attached to Ticket #26674</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Wed, 18 Dec 2013 20:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26674/get-tag-regex.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26674/get-tag-regex.diff/1387400275728979</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26674 (The get_tag_regex() function is a too greedy when searching for a ...) created</title>
      
        <dc:creator>kopepasah</dc:creator>

      <pubDate>Wed, 18 Dec 2013 20:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26674</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26674/1387400251568417</guid>
      <description>&lt;p&gt;
At its current state, the get_tag_regex() function is a too greedy when searching for a closing tag. This causes content with more than one of the same media tag (e.g iframe followed by an iframe) to be grouped together as one value, with the content between in that value.
&lt;/p&gt;
&lt;p&gt;
This patch, while lazier, makes the regex function as expected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26660 (Twenty Fourteen: Featured Content transients block child themes from ...) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Wed, 18 Dec 2013 20:56:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26660#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26660#comment:3/1387400205690043</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26647 (Similar strings in Twenty Fourteen) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Wed, 18 Dec 2013 20:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26647#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26647#comment:3/1387400151008712</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>bradt</dc:creator>

      <pubDate>Wed, 18 Dec 2013 20:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:67/1387399915399874</guid>
      <description>&lt;p&gt;
@helen Couldn't agree with you more.
&lt;/p&gt;
&lt;p&gt;
@Sergey It will not help to update the patch if it's already decided that the ability to change the default crop position is not an API change that will be accepted into WP core. That's the sticky point here. Not that the patch needs an update. I'd like a decision on this first, but I'm confused as to how decisions are made here (this is my first patch submission). There seems to be plenty of people on this ticket supporting it and only a couple who are suggesting to expand the scope to include the manual image editor. Does the majority rule?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 18 Dec 2013 20:20:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:11/1387398012689942</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26571 (Increase flexibility of "At a Glance" Dashboard Widget to match "Right ...) updated</title>
      
        <dc:creator>mrwweb</dc:creator>

      <pubDate>Wed, 18 Dec 2013 19:44:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26571#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26571#comment:6/1387395870364557</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26571#comment:5" title="Comment 5"&gt;Latz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26571#comment:4" title="Comment 4"&gt;toscho&lt;/a&gt;:
Of course you're right, Toscho's always right :-). Just for the record:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't really the place to discuss hacks. (But while we're at it, &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/browser/post-status-menu-items/tags/1.3.0/cms_post_status_menu.php#L330"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;here's what I'm doing&lt;/a&gt;. Empty list elements before and after but still technically using the filter.)
&lt;/p&gt;
&lt;p&gt;
Getting this back on track... What do we need to remedy this situation so that we have roughly the same amount of flexibility as previously?
&lt;/p&gt;
&lt;p&gt;
I'd propose:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;A &lt;code&gt;dashboard_glance_items_after&lt;/code&gt; action that runs immediately after the &lt;code&gt;&amp;lt;/ul&amp;gt;&lt;/code&gt; of the glance items list.
&lt;/li&gt;&lt;li&gt;A modified &lt;code&gt;dashboard_glance_items&lt;/code&gt; filter that can handle classes. I assume that would be by passing an array. Either &lt;code&gt;array( '{class}' =&amp;gt; '{list item html}'&lt;/code&gt; OR &lt;code&gt;array( 'class' =&amp;gt; '{class}', 'li' =&amp;gt; '{list item html}'&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So questions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Any objections to change 1 above? (name, placement, use case)
&lt;/li&gt;&lt;li&gt;Does anyone have examples of a similar filter somewhere else in core to model this after? There was talk in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26495" title="#26495: defect (bug): Dashboard &amp;#34;At a Glance&amp;#34; hooks changed (closed: fixed)"&gt;#26495&lt;/a&gt; of passing the core list items to the filter as well which would need to be considered.
&lt;/li&gt;&lt;li&gt;How much do we need to consider backwards compatibility for 3.8? Seeing that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26495" title="#26495: defect (bug): Dashboard &amp;#34;At a Glance&amp;#34; hooks changed (closed: fixed)"&gt;#26495&lt;/a&gt; ignored it for ALL PREVIOUS VERSIONS, I'm tempted to say "not much" but a second opinion would be good.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I've never submitted a patch before but I'll step up on this one if people can help me think through the best route for the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15741 (Taxonomy: Duplicate term slug error message refers to the name) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Wed, 18 Dec 2013 19:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15741#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15741#comment:15/1387395677284135</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In which circumstances can be string "A term with the name provided already exists with this parent." displayed? When the name is same, slug-2 is automatically generated and there is never any error. Or I am missing something? I can reopen or create new ticket, but maybe there is any possibility?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26490 (3.8 Requires Font Smoothing?) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 18 Dec 2013 19:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26490#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26490#comment:15/1387395088572198</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26571 (Increase flexibility of "At a Glance" Dashboard Widget to match "Right ...) updated</title>
      
        <dc:creator>Latz</dc:creator>

      <pubDate>Wed, 18 Dec 2013 19:21:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26571#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26571#comment:5/1387394513541130</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26571#comment:4" title="Comment 4"&gt;toscho&lt;/a&gt;:
Of course you're right, Toscho's always right :-). Just for the record:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('dashboard_glance_items', 'addElements');
function addElements($elements) {
    echo '&amp;lt;li class="mytest"&amp;gt;' . '&amp;lt;a href="#"&amp;gt; Users&amp;lt;/a&amp;gt;' . '&amp;lt;/li&amp;gt;';
    return $elements;
}
&lt;/pre&gt;&lt;p&gt;
This way?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 18 Dec 2013 19:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:10/1387394107265451</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
You've misunderstood the code. If your libraries don't pass a filter key, nothing changes -- no filters are applied, and no micro-performance hit occurs as a result of your code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Okay, didn't realize.
&lt;/p&gt;
&lt;p&gt;
But there is at least one &lt;code&gt;if&lt;/code&gt; to determine if it should, right?  So some performance affect but I'd agree probably not a concern.
&lt;/p&gt;
&lt;p&gt;
Okay, objection retracted if it only affects explicit usage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 19:01:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:9/1387393279590258</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26673#comment:7" title="Comment 7"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's rare for me to argue against a filter but I have to side with @nacin on this one.  Adding a filter here if used could increase the potential for unwanted side-effects more than a trivial amount. and for code that uses &lt;code&gt;wp_parse_args()&lt;/code&gt; &lt;em&gt;&lt;strong&gt;a lot&lt;/strong&gt; (like my libraries)&lt;/em&gt; it could have significant performance implications.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You've misunderstood the code. If your libraries don't pass a filter key, nothing changes -- no filters are applied, and no micro-performance hit occurs as a result of your code.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Much better to use/add targeted, low impact filters and actions, IMHO at least.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's nothing wrong with targeted filters and actions, and I'm not trying to eliminate them. This isn't one VS the other.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 18:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:8/1387393105000159</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26673#comment:6" title="Comment 6"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
'request' isn't part of a utility function, though. It's an important part of WordPress. It's low-level API, but it isn't a utility. My point is there isn't a filter in array_merge(), either. Or (...)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand your points, and still believe because of the way we use &lt;code&gt;wp_parse_args()&lt;/code&gt; that it's a fine candidate for the type of dynamic filtering that's relatively common through-out the codebase already, in: WP_Customize_Setting::value(), get_option(), update_option(), get_user_option(), map_meta_cap(), get_the_term_list(), comment_form(), get_file_data(), add_metadata(), update_metadata(), etc...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
wp_parse_args() is just a glorified array_merge(). (wp_parse_args() was written for a time when you could pass query strings to everything. A lot of newer instances of the function should possibly just be array_merge() instead, for where query string calls don't make sense.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand that, and the history, and still think there's an opportunity to provide developers a more forgiving and flexible experience.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Filters, in general, increase the maintenance burden on the codebase.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree that hardcoded ones do. I disagree that filters in functions like get_option() have burdened anyone.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If wp_parse_args() gained a filter, it would be extremely hard to keep usage of that filter backwards compatible, especially as functions evolve over time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How so? The luxury of using array_merge() and wp_parse_args() is flexibility with arguments without worrying about traditional function and method parameters being deprecated, out of order, etc...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If the filter was explicitly declared instead, it could A) have its own explicit documentation,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can document filters above calls to &lt;code&gt;wp_parse_args()&lt;/code&gt; the way we do with apply_filters().
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
B) be passed context based on other arguments of the function,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a minor limitation compared to overall gains IMO.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
C) allow the inputs and outputs of wp_parse_args() to be changed at will, based on evolution of the codebase.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
They already can be now, and this enhancement doesn't inhibit that in any way other than adding an additional parameter to &lt;code&gt;wp_parse_args()&lt;/code&gt; which, ironically, is what makes using it great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26563 (min-width property without value in ie.css) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 18:53:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26563#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26563#comment:2/1387392819766531</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26563.diff attached to Ticket #26563</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 18:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26563/26563.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26563/26563.diff/1387392810302804</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 18 Dec 2013 18:40:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:7/1387392051532599</guid>
      <description>&lt;p&gt;
It's rare for me to argue against a filter but I have to side with @nacin on this one.  Adding a filter here if used could increase the potential for unwanted side-effects more than a trivial amount. and for code that uses &lt;code&gt;wp_parse_args()&lt;/code&gt; &lt;em&gt;&lt;strong&gt;a lot&lt;/strong&gt; (like my libraries)&lt;/em&gt; it could have significant performance implications.
&lt;/p&gt;
&lt;p&gt;
Much better to use/add targeted, low impact filters and actions, IMHO at least.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 18:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:6/1387391297219511</guid>
      <description>&lt;p&gt;
'request' isn't part of a utility function, though. It's an important part of WordPress. It's low-level API, but it isn't a utility. My point is there isn't a filter in array_merge(), either. Or wp_list_pluck(), wp_list_filter(), absint(), is_serialized(), add_query_arg(), path_join(), wp_send_json(), wp_parse_id_list(), wp_array_slice_assoc(), and that's just from skimming functions.php. wp_parse_args() is just a glorified array_merge(). (wp_parse_args() was written for a time when you could pass query strings to everything. A lot of newer instances of the function should possibly just be array_merge() instead, for where query string calls don't make sense.)
&lt;/p&gt;
&lt;p&gt;
Filters, in general, increase the maintenance burden on the codebase. If wp_parse_args() gained a filter, it would be extremely hard to keep usage of that filter backwards compatible, especially as functions evolve over time. If the filter was explicitly declared instead, it could A) have its own explicit documentation, B) be passed context based on other arguments of the function, C) allow the inputs and outputs of wp_parse_args() to be changed at will, based on evolution of the codebase.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11212 (Add filter to wp_parse_args()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 18:17:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11212#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11212#comment:24/1387390678836016</guid>
      <description>&lt;p&gt;
Related/duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26673" title="#26673: enhancement: Enhance wp_parse_args() by adding filters before/after the array_merge() (closed: wontfix)"&gt;#26673&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 18:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:5/1387390589818774</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26673#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure we'd want to allow such brute-forcing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We already do in places where filters are applied immediately after &lt;code&gt;wp_parse_args()&lt;/code&gt; calls.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The approach we have discussed previously is to add filters directly to argument arrays wherever they are desired. wp_parse_args() should be considered a low-level utility that should ideally stay filter-free. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11212" title="#11212: enhancement: Add filter to wp_parse_args() (closed: duplicate)"&gt;#11212&lt;/a&gt; for a lot more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great discussion there, and neat how we both came to the same conclusion having run into the same issues. Understanding that it's a low-level utility, even 'request' has a filter on it for brute-forcing.
&lt;/p&gt;
&lt;p&gt;
For what it's worth, bbPress already heavily utilizes this, and BuddyPress will start with 2.0. It's a great (albeit powerful) way to increase the flexibility of the codebase, and offload some decision making from the development process onto an existing API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:59:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:4/1387389566572393</guid>
      <description>&lt;p&gt;
I'm not sure we'd want to allow such brute-forcing. The approach we have discussed previously is to add filters directly to argument arrays wherever they are desired. wp_parse_args() should be considered a low-level utility that should ideally stay filter-free. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11212" title="#11212: enhancement: Add filter to wp_parse_args() (closed: duplicate)"&gt;#11212&lt;/a&gt; for a lot more.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26620 (Word Count is one number short) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26620#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26620#comment:7/1387389019976990</guid>
      <description>&lt;p&gt;
Padding a space on to the end seemed simpler than changing the regex and works independent of the editor.   New patch does that.
&lt;/p&gt;
&lt;p&gt;
JSHint errors fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26620.3.diff attached to Ticket #26620</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26620/26620.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26620/26620.3.diff/1387388940778456</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:48:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:3/1387388932558528</guid>
      <description>&lt;p&gt;
In several places in WordPress core, calls to &lt;code&gt;wp_parse_args()&lt;/code&gt; are immediately followed by a call to &lt;code&gt;apply_filters()&lt;/code&gt; on the parsed results. What I'm proposing is that we:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Leave existing filters untouched
&lt;/li&gt;&lt;li&gt;Add filters (via unique keys) for any calls that are missing parter calls to &lt;code&gt;apply_filters()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Enforce that new calls to &lt;code&gt;wp_parse_args()&lt;/code&gt; always come packaged with a unique key
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:2/1387388584555843</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:40:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673#comment:1/1387388426702642</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26673.patch attached to Ticket #26673</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26673/26673.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26673/26673.patch/1387388375784936</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26673 (Enhance wp_parse_args() by adding filters before/after the array_merge()) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26673</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26673/1387388337456680</guid>
      <description>&lt;p&gt;
I'd like to be able to modify existing WordPress core functionality without needing to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rewrite functions
&lt;/li&gt;&lt;li&gt;Make a child theme to replace one template file
&lt;/li&gt;&lt;li&gt;Searching through code and finding there is no filter where I need one
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We use &lt;code&gt;wp_parse_args()&lt;/code&gt; to parse an &lt;code&gt;$args&lt;/code&gt; parameter against default known parameters for some functionality. bbPress's &lt;code&gt;bbp_parse_args()&lt;/code&gt; function applies filters before and after the &lt;code&gt;array_merge()&lt;/code&gt; which allows for just-in-time or brute-force filtering of parsed arguments. Each call to &lt;code&gt;bbp_parse_args()&lt;/code&gt; includes a unique string so each call has unique filters applied to them.
&lt;/p&gt;
&lt;p&gt;
The incoming patch introduces invisible flexibility for each call to &lt;code&gt;wp_parse_args()&lt;/code&gt; when a unique string is passed. If no string is passed, no filters are applied, meaning it's completely backwards compatible and allows for filters to be rolled in on a case by case basis later.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23882 (get_permalink() accepts an ID, the_permalink() does not) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 18 Dec 2013 17:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23882#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23882#comment:4/1387386469395219</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26526 (Twenty Fourteen: translate `featured` tag slug used to link to ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Wed, 18 Dec 2013 16:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26526#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26526#comment:21/1387384833030361</guid>
      <description>&lt;p&gt;
Since this would change defaults, it could break things if users have tagged posts with &lt;code&gt;featured&lt;/code&gt;, relied on the defaults, and never saved the FC settings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26666 (Text in built-in file editor is RTL instead of LTR) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 18 Dec 2013 16:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26666#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26666#comment:7/1387384796576684</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25577" title="#25577: defect (bug): MP6 RTL issues (closed: invalid)"&gt;#25577&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25577 (MP6 RTL issues) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 18 Dec 2013 16:32:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25577#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25577#comment:6/1387384347869551</guid>
      <description>&lt;p&gt;
ok. thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>modules.2.diff attached to Ticket #26669</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 16:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26669/modules.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26669/modules.2.diff/1387383725403084</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 16:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:5/1387383529747544</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26669#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The one concern I have about this is it makes it much more difficult to submit a CSS patch via core.svn. An alternative approach could be to have all of these files in both core.svn and develop.svn, then also include a single wp-admin.min.css file in the built version. SCRIPT_DEBUG would load these individual files in both build and src.
&lt;/p&gt;
&lt;p&gt;
Seems like if we have separate files, then each should be commented, and the TOC should be removed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That makes a lot of sense.  I've switched it so SCRIPT_DEBUG always loads all the files.  I've kept TOC since I think having a reference of what is where makes sense.  Though it's entirely possible that it could easily get stale and may make more sense to remove it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26526 (Twenty Fourteen: translate `featured` tag slug used to link to ...) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Wed, 18 Dec 2013 15:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26526#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26526#comment:20/1387382355339673</guid>
      <description>&lt;p&gt;
Related report in support forums: &lt;a class="ext-link" href="http://wordpress.org/support/topic/featured-in-translated-vesion"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/topic/featured-in-translated-vesion&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21919 (Theme Customizer: loading preview with FORCE_SSL_ADMIN does not work) updated</title>
      
        <dc:creator>jasonheffner</dc:creator>

      <pubDate>Wed, 18 Dec 2013 15:42:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21919#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21919#comment:4/1387381361340615</guid>
      <description>&lt;p&gt;
Nacin Thanks, mixed ssl is difficult to support, but I can't believe the desired effect would be to break the preview in mixed mode if FORCE_SSL_ADMIN is set. I haven't tried to replicate this bug again recently. I ended up turning off force SSL admin parameter and instead implementing the desired effect with the web server and our authentication system, so it's no longer an issue for us at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 15:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:10/1387379730889182</guid>
      <description>&lt;p&gt;
note to Marko: dacht al, dit kan niet waar zijn..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Wed, 18 Dec 2013 15:12:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:9/1387379555593656</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) closed</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 15:01:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:8/1387378911348303</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 15:01:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:7/1387378882968963</guid>
      <description>&lt;p&gt;
OK, I found the problem: there is a conflict with the qTranslate plugin (it probably hooks into the get_the_time or get_post_time filters.. disactivating this plugin alleviates the problem.
&lt;/p&gt;
&lt;p&gt;
This bug is no longer!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 14:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:6/1387378143333055</guid>
      <description>&lt;p&gt;
Ah I see, that makes sense indeed.
get_the_time() is supposed to return a string, or was is recently changed as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26672 (Flatten modals) updated</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Wed, 18 Dec 2013 14:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26672#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26672#comment:2/1387377769730810</guid>
      <description>&lt;p&gt;
That attached patch removes the shadows from the media-modal and the thickbox-modals.
&lt;/p&gt;
&lt;p&gt;
It additionally removes the 1px border from the thickbox-modals and sets it's background color to transparent to prevent the 3px overlay at the bottom.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Wed, 18 Dec 2013 14:41:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:5/1387377714112930</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch doesn't work since the function is used to retrieve the time of a post and not the current time.
I think it's fine that get_the_time() returns a string. But we maybe could use intval or strtotime
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26672 (Flatten modals) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Dec 2013 14:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26672#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26672#comment:1/1387377649762891</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26672.diff attached to Ticket #26672</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Wed, 18 Dec 2013 14:37:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26672/26672.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26672/26672.diff/1387377442847800</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26672 (Flatten modals) created</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Wed, 18 Dec 2013 14:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26672</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26672/1387377431559062</guid>
      <description>&lt;p&gt;
The ThickBox and Media Modal can lose their shadows to match the 3.8 admin style.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26571 (Increase flexibility of "At a Glance" Dashboard Widget to match "Right ...) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Wed, 18 Dec 2013 14:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26571#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26571#comment:4/1387375643607349</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26571#comment:3" title="Comment 3"&gt;Latz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
function addElements() {
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You should at least return the original array. Your current hack makes things worse by removing all previously registered items. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26571 (Increase flexibility of "At a Glance" Dashboard Widget to match "Right ...) updated</title>
      
        <dc:creator>Latz</dc:creator>

      <pubDate>Wed, 18 Dec 2013 13:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26571#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26571#comment:3/1387374399077596</guid>
      <description>&lt;p&gt;
Today I was confronted with this problem, too. Though I haven't any really good solution I managed to at least avoid the empty list items by using the filter as an action (this is a hack after all):
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('dashboard_glance_items', 'addElements');
function addElements() {
    echo '&amp;lt;li class="mytest"&amp;gt;&amp;lt;a href="#"&amp;gt;Users&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;';
}
&lt;/pre&gt;&lt;p&gt;
No clean code at all but it does the job.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25577 (MP6 RTL issues) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 18 Dec 2013 13:45:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25577#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25577#comment:5/1387374307535293</guid>
      <description>invalid: &lt;p&gt;
ramiy, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26666" title="#26666: defect (bug): Text in built-in file editor is RTL instead of LTR (closed: fixed)"&gt;#26666&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 12:30:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:4/1387369805565014</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 12:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:3/1387369761593497</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 12:02:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:2/1387368122433652</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) updated</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 11:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671#comment:1/1387367541396987</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>dashboard.php.patch attached to Ticket #26671</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 11:51:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26671/dashboard.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26671/dashboard.php.patch/1387367494283276</guid>
      <description>&lt;p&gt;
wp_dashboard_recent_posts patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26671 (dashboard activity notice: A non well formed numeric value encountered) created</title>
      
        <author>ruud@â€¦</author>

      <pubDate>Wed, 18 Dec 2013 11:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26671</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26671/1387367442413231</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
I stumbled upon this notice in the new Dashboard Activity panel, but couldn't find any related bug (yet) so posting it here anyway.
&lt;/p&gt;
&lt;p&gt;
Notice: A non well formed numeric value encountered in /htdocs/wp-admin/includes/dashboard.php on line 603
&lt;/p&gt;
&lt;p&gt;
Looking at it, it seems that
$time = get_the_time( 'U' ); shouldn't be used in this case, because $time will be a string instead of an integer.
&lt;/p&gt;
&lt;p&gt;
On the next line:
if ( date( 'Y-m-d', $time ) == $today ) {
$time is used, and should be an numeric, and clearly isn't.
&lt;/p&gt;
&lt;p&gt;
I'm guessing that get_the_time( 'U' ); is used to receive the current Unix epoch.
If that is supposed to be the case, then the patch added will solve this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26670 (Stopwords - better explanation for translators) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Wed, 18 Dec 2013 11:08:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26670</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26670/1387364885217212</guid>
      <description>&lt;p&gt;
Stopwords should have better comments for translators. There are many not so clear things, I guess...
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;One-letter words can be also added or these are filtered automatically? For example, there is missing "a" in English version (but I noticed it in comment for translators). So, should I miss one-letter words too?
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Should we use diacritic marks? For example in Czech we have two words "prÃ¡vÄ›" and "pravÃ©". Should I add these 2 words to list or use only version without diacritic marks "prave"? All stopwords are modified to english "a-z" form in the end?
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;When search term is "stopword + word", then "word" is searched and also the whole phrase "stopword + word"? When search term is only "stopword", then "stopword" is searched? When search term is "stopword + stopword", then only the whole phrase "stopword + stopword" is searched?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Translators should know these details, I guess...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26666 (Text in built-in file editor is RTL instead of LTR) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Wed, 18 Dec 2013 11:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26666#comment:6/1387364468224039</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25577 (MP6 RTL issues) reopened</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 18 Dec 2013 10:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25577#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25577#comment:4/1387362171355135</guid>
      <description>&lt;p&gt;
The &lt;strong&gt;theme-editor&lt;/strong&gt; and the &lt;strong&gt;plugin-editor&lt;/strong&gt; main &lt;em&gt;textarea&lt;/em&gt; should be always with &lt;strong&gt;direction:ltr;&lt;/strong&gt; CSS.
&lt;/p&gt;
&lt;p&gt;
It's a code editor, and the code is always in english. Always LTR.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #26639 (Insufficient keyboard accessibility of the main menu for mobile ...) updated</title>
      
        <dc:creator>bramd</dc:creator>

      <pubDate>Wed, 18 Dec 2013 08:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26639#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26639#comment:11/1387354161326199</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26639#comment:10" title="Comment 10"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What's the purpose of the &lt;code&gt;aria-hidden="true"&lt;/code&gt; attribute for the &lt;code&gt;&amp;lt;span class="ab-icon"&amp;gt;&lt;/code&gt; element here? Looks like it's the first instance of using it in the toolbar.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just did some more testing, aria-hidden can be safely omitted here. The icon is not inserted using a symbol font or other method that's visible to a screenreader, so no need to hide anything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26620 (Word Count is one number short) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 05:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26620#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26620#comment:6/1387343942643192</guid>
      <description>&lt;p&gt;
Also, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26620/26620.2.diff" title="Attachment '26620.2.diff' in Ticket #26620"&gt;26620.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26620/26620.2.diff" title="Download"&gt;â€‹&lt;/a&gt; has JSHint errors. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26620 (Word Count is one number short) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 05:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26620#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26620#comment:5/1387343773609857</guid>
      <description>&lt;p&gt;
Two possible alternative fixes that are not editor-dependent:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add a space to the end of &lt;code&gt;tx&lt;/code&gt; prior to running the count.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;/\S(\s+|$)/gm&lt;/code&gt; instead (untested).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26620 (Word Count is one number short) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 05:10:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26620#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26620#comment:4/1387343451662670</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26620#comment:2" title="Comment 2"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure if I am correctly checking for being in txt mode vs being in tinymce mode.  Is there a better way to get this information?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Appears to be this: &lt;code&gt;typeof tinyMCE != 'undefined' &amp;amp;&amp;amp; ( ed = tinyMCE.activeEditor ) &amp;amp;&amp;amp; !ed.isHidden() ) {&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21919 (Theme Customizer: loading preview with FORCE_SSL_ADMIN does not work) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 05:02:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21919#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21919#comment:3/1387342946929717</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Mixed/forced SSL was tested extensively when the customizer was originally built. Based on &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20829" title="Load the customize preview over ssl if the customize admin page is ..."&gt;[20829]&lt;/a&gt; (both the commit message and code comment), this is intended behavior. I'm not sure there's anything we can or should do here.
&lt;/p&gt;
&lt;p&gt;
Jasonheffner, sorry you did not get a reply for so long.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 04:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:4/1387342681127283</guid>
      <description>&lt;p&gt;
The one concern I have about this is it makes it much more difficult to submit a CSS patch via core.svn. An alternative approach could be to have all of these files in both core.svn and develop.svn, then also include a single wp-admin.min.css file in the built version. SCRIPT_DEBUG would load these individual files in both build and src.
&lt;/p&gt;
&lt;p&gt;
Seems like if we have separate files, then each should be commented, and the TOC should be removed.
&lt;/p&gt;
&lt;p&gt;
TinyMCE can just be removed, that is covered by wp-includes/css/editor.css.
&lt;/p&gt;
&lt;p&gt;
It will be easier to examine any future patches if wp-admin.css just got comments added throughout, as in: &lt;code&gt;/* this would start wp-admin-buttons.css, forms.css, etc. */&lt;/code&gt;, rather than actually moving code around. Or if the CSS files are admitted entirely for now, in lieu of the grunt/script-loader/etc changes. The TOC can be patched with &lt;code&gt;/* this would be split into buttons.css,  */&lt;/code&gt; or something, that way we can discuss organization.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25017 (Dont allow empty $src parameter in wp_register_script) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 18 Dec 2013 04:42:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25017#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25017#comment:14/1387341727603111</guid>
      <description>&lt;p&gt;
benfreke, you make a great point. Thanks for the comment. A change would mean another string for translators. Not a big deal, but while &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25017/25017.1.diff" title="Attachment '25017.1.diff' in Ticket #25017"&gt;25017.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25017/25017.1.diff" title="Download"&gt;â€‹&lt;/a&gt; originally had a wp-login.php-specific block, I just didn't find it to be necessary at the time.
&lt;/p&gt;
&lt;p&gt;
While is_admin() is false on wp-login.php, it's intrinsically part of "the administration area". It needs to be clear that their is_admin() check remains wrong and insufficient, and that they should be using the correct hook. If the message said "don't do this on login" the next thought will likely be "oh, I'm already excluding the admin, so I should also exclude login". I'd rather be a little vague upfront (especially since we don't actually know what they are checking) and unambiguous in how to correct it.
&lt;/p&gt;
&lt;p&gt;
Alas, I'm most likely reading way too far into the psychology of error messages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26650 (Replace media file type icons with Dashicons) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 18 Dec 2013 04:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26650#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26650#comment:2/1387339748237825</guid>
      <description>&lt;p&gt;
kitchin â€” I've just replied to the links you've posted. As an FYI, this trac ticket is specifically for wonderboymusic's icon request. For additional icon requests, please create new trac tickets.
&lt;/p&gt;
&lt;p&gt;
wonderboymusic â€” would we be able to use .dashicons-format-audio for this? &lt;a class="ext-link" href="https://cloudup.com/cLDPEOhFL2R"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://cloudup.com/cLDPEOhFL2R&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25017 (Dont allow empty $src parameter in wp_register_script) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 18 Dec 2013 01:53:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25017#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25017#comment:13/1387331583694733</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25017#comment:12" title="Comment 12"&gt;benfreke&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, if a theme runs a check of is_admin() before deregistering the jquery, you get a message about not using wp_deregister_script in the administration screen when you attempt to login (with WP_DEBUG set to true, obviously).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can't reproduce the warning as long as the correct hook (&lt;code&gt;login_enqueue_scripts&lt;/code&gt; or &lt;code&gt;admin_enqueue_scripts&lt;/code&gt;) is used, with or without &lt;code&gt;is_admin()&lt;/code&gt; check.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could I make a suggestion that the language or the error message be updated to reflect the fact that this check is no longer in just the administration?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Feel free to open a new ticket for that, but the current text seems accurate enough to me, even though the login screen is not mentioned there. The point is to prevent developers from using &lt;code&gt;init&lt;/code&gt; (as in the ticket description) or other incorrect hooks for &lt;code&gt;wp_deregister_script()&lt;/code&gt;, and point them to the correct hook.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ideally, pull the check completely out of the function and create a new function.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That might be an unnecessary abstraction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25017 (Dont allow empty $src parameter in wp_register_script) updated</title>
      
        <dc:creator>benfreke</dc:creator>

      <pubDate>Wed, 18 Dec 2013 01:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25017#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25017#comment:12/1387328958269682</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This fix works, so I've left this closed. However, if a theme runs a check of is_admin() before deregistering the jquery, you get a message about not using wp_deregister_script in the administration screen when you attempt to login (with WP_DEBUG set to true, obviously).
&lt;/p&gt;
&lt;p&gt;
Could I make a suggestion that the language or the error message be updated to reflect the fact that this check is no longer in just the administration? Ideally, pull the check completely out of the function and create a new function. This should also allow for quicker future updates if other areas of WordPress need to use this check.
&lt;/p&gt;
&lt;p&gt;
Pseudo code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if (is_admin()) {
  _keep_core_scripts_registered($handle, 'administration area');
} elseif (is_login()) {
  _keep_core_scripts_registered($handle, 'login screen');
}
protected function _keep_core_scripts_registered($handle, $area)
{
  // array of protected script handles
  // filter to add/remove scripts from above array
  if ( not allowed to be deregistered) {
    // as per existing function with second param passed to sprintf
  }
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>