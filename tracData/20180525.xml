<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>43986v2-5.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 23:52:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v2-5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v2-5.diff/1527292347791643</guid>
      <description>&lt;p&gt;
add aria-labels everywhere, fixes the 'more details' iframe
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screenshot_02.3.png attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 23:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_02.3.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_02.3.png/1527292229358059</guid>
      <description>&lt;p&gt;
more details of 43986v2-5.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43987 (Block plugin updates if required PHP version is not supported - ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 23:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43987#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43987#comment:9/1527289321339485</guid>
      <description>&lt;p&gt;
I think this should be handled on the API level, like the WordPress version check.
&lt;/p&gt;
&lt;p&gt;
The API currently checks the &lt;code&gt;requires&lt;/code&gt; header and only serves updates to WordPress versions that support them. If the author bumps the header, older WP versions won't get the update. It should do the same for &lt;code&gt;requires_php&lt;/code&gt; header, which would need a Meta Trac ticket.
&lt;/p&gt;
&lt;p&gt;
This would not prevent plugin authors from being able to release security updates, which was an initial concern here.
&lt;/p&gt;
&lt;p&gt;
If plugin versions 1.x and 2.x have different PHP or WordPress requirements, the author can release both 1.x.y and 2.x.z, and the API would serve them appropriately to the sites meeting the requirements.
&lt;/p&gt;
&lt;p&gt;
If the goal is not just to block updates to incompatible versions, but also to give users an incentive to upgrade PHP, then some UI changes in core might be needed. The patches seem like a good start, would need design feedback though. Perhaps we'd want to handle WordPress version checks in a similar way, for consistent experience and as an incentive to update WordPress to the latest version?
&lt;/p&gt;
&lt;p&gt;
Apparently the updates endpoint, unlike &lt;code&gt;query_plugins&lt;/code&gt;, does not currently return the &lt;code&gt;requires_php&lt;/code&gt; header. That should be added first to avoid introducing multiple external requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43982 (The test suite shouldn't assume that the data directory exists) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 May 2018 22:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43982#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43982#comment:7/1527288461095095</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43316" title="Build/Test Tools: Allow the unit test framework to be used without the ..."&gt;43316&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Allow the unit test framework to be used without the data directory in place.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43982" title="#43982: enhancement: The test suite shouldn't assume that the data directory exists (closed: fixed)"&gt;#43982&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43315" title="Build/Test Tools: Allow the unit test framework to be used without the ..."&gt;[43315]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43316]: Build/Test Tools: Allow the unit test framework to be used without the ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 May 2018 22:47:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43316</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43316/1527288459993341</guid>
      <description>&lt;p&gt;
Build/Test Tools: Allow the unit test framework to be used without the data directory in place.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43982" title="#43982: enhancement: The test suite shouldn't assume that the data directory exists (closed: fixed)"&gt;#43982&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43315" title="Build/Test Tools: Allow the unit test framework to be used without the ..."&gt;[43315]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43982 (The test suite shouldn't assume that the data directory exists) reopened</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 May 2018 22:43:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43982#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43982#comment:6/1527288221670488</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43982 (The test suite shouldn't assume that the data directory exists) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 May 2018 22:42:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43982#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43982#comment:5/1527288132541411</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43315" title="Build/Test Tools: Allow the unit test framework to be used without the ..."&gt;43315&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Allow the unit test framework to be used without the data directory in place.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43982" title="#43982: enhancement: The test suite shouldn't assume that the data directory exists (closed: fixed)"&gt;#43982&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43315]: Build/Test Tools: Allow the unit test framework to be used without the ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 May 2018 22:42:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43315</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43315/1527288131429261</guid>
      <description>&lt;p&gt;
Build/Test Tools: Allow the unit test framework to be used without the data directory in place.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43982" title="#43982: enhancement: The test suite shouldn't assume that the data directory exists (closed: fixed)"&gt;#43982&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44228 ("Read more about setting up your local development environment" needs ...) updated</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 25 May 2018 21:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44228#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44228#comment:2/1527284045322052</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44228.diff attached to Ticket #44228</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 25 May 2018 21:32:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44228/44228.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44228/44228.diff/1527283938407207</guid>
      <description>&lt;p&gt;
Replace Codex Home Page with &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/installing-wordpress-locally/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/installing-wordpress-locally/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44235 (GDPR - Provide filter on $email_data for the confirmed action emails) created</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Fri, 25 May 2018 21:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44235</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44235/1527282773491150</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I was wondering if along with the user_confirmed_action_email_content filter for $email_text &amp;gt; $content should there also be a filter for the $email_data so plugins/devs can customize the array (request, user_email, description, manage_url, sitename, siteurl, admin_email) as this information is all used after the user_confirmed_action_email_content filter to update the $content so there’s not currently a method to customize this data before it's use.
&lt;/p&gt;
&lt;p&gt;
The $email_data array I'm referring to;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/3ee58b55b14683af4c568bce1845c37408c88fbb/wp-includes/user.php#L3000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/3ee58b55b14683af4c568bce1845c37408c88fbb/wp-includes/user.php#L3000&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43967 (Admin emails after email confirmation don't work for data privacy requests) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Fri, 25 May 2018 21:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43967#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43967#comment:31/1527282541390812</guid>
      <description>&lt;p&gt;
Reviewing @desrosj unit tests some questions;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should the tests check the user_request_action_confirmed action works properly?
&lt;/li&gt;&lt;li&gt;Should the tests check that _wp_admin_notified is updated on the request post?
&lt;/li&gt;&lt;li&gt;Should the tests be duplicated for erasure requests?
&lt;/li&gt;&lt;li&gt;Should the tests try and confirm a completed request?
&lt;/li&gt;&lt;li&gt;Should any tests try to trigger the user_request_action_confirmed by loading the login page with confirmaction?
&lt;/li&gt;&lt;li&gt;Should any tests be done when the request doesn’t exist or was removed somehow?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44192 (Title of Privacy Policy Page not used on login page) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 20:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44192#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44192#comment:6/1527280353807692</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44192.diff attached to Ticket #44192</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 20:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44192/44192.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44192/44192.diff/1527280339960681</guid>
      <description>&lt;p&gt;
Changes &lt;code&gt;get_the_privacy_policy_link()&lt;/code&gt; link text to be the selected Privacy Policy page's post title. Includes unit test.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44228 ("Read more about setting up your local development environment" needs ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 20:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44228#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44228#comment:1/1527279794606443</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/installing-wordpress-locally/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/installing-wordpress-locally/&lt;/a&gt;, perhaps?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 20:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:7/1527279601427486</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44229#comment:6" title="Comment 6"&gt;jacklenox&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As I say in the ticket, we could have a fallback. I don't think such an idea should be implemented without a fallback.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unless I'm missing something, there will still be an HTTP request to an unavailable resource before switching to fallback, leading to a slower, not faster experience.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43967 (Admin emails after email confirmation don't work for data privacy requests) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 20:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43967#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43967#comment:30/1527279271778533</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This only needs unit tests, so let's leave it in 4.9.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43967 (Admin emails after email confirmation don't work for data privacy requests) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 25 May 2018 20:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43967#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43967#comment:29/1527279254245678</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527279253000314"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 20:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:76/1527278616223232</guid>
      <description>fixed: &lt;p&gt;
Creating a new ticket helps keep the enhancement that was added with the 4.9.6 milestone and makes it clearer when tests were committed, and avoids continuously punting this ticket.
&lt;/p&gt;
&lt;p&gt;
I opened &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/44234" title="#44234: enhancement: Add missing unit tests for erasing personal data by username or email ... (assigned)"&gt;#44234&lt;/a&gt; and moved the uncommitted patches over to that ticket to wrap up and add other missing tests.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44234 (Add missing unit tests for erasing personal data by username or email ...) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 20:02:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44234</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44234/1527278550884593</guid>
      <description>&lt;p&gt;
This ticket picks up where &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt; left off to add missing tests for the functionality introduced and to keep when the enhancement and tests were committed clear.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43602" title="#43602: enhancement: Add to the privacy tools UX a means to erase personal data by username ... (closed: fixed)"&gt;#43602&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44226 (Link to Privacy Policy in comment consent) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 20:01:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44226#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44226#comment:2/1527278482463080</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44233 (Add missing unit tests for exporting personal data by username or ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 20:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44233#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44233#comment:1/1527278445985881</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43546 (Add to the privacy tools UX a means to export personal data by ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 20:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43546#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43546#comment:87/1527278410505093</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43546 (Add to the privacy tools UX a means to export personal data by ...) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 19:59:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43546#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43546#comment:86/1527278386652594</guid>
      <description>fixed: &lt;p&gt;
Talked closing this one out over with @johnbillion. Creating a new ticket helps keep the enhancement that was added with 4.9.6 and makes it clearer when tests were added and avoids continuously punting this ticket.
&lt;/p&gt;
&lt;p&gt;
I opened &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/44233" title="#44233: enhancement: Add missing unit tests for exporting personal data by username or ... (reviewing)"&gt;#44233&lt;/a&gt; and moved the uncommitted patches over to that ticket to wrap up and add other missing tests.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>43546.wpPrivacyProcessPersonalDataExportPage.diff attached to Ticket #44233</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 19:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44233/43546.wpPrivacyProcessPersonalDataExportPage.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44233/43546.wpPrivacyProcessPersonalDataExportPage.diff/1527278256747548</guid>
      <description>&lt;p&gt;
Unit-tests for &lt;code&gt;wp_privacy_process_personal_data_export_page()&lt;/code&gt; from @birgire
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43546.wpPrivacyGeneratePersonalDataExportFile.php attached to Ticket #44233</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 19:57:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44233/43546.wpPrivacyGeneratePersonalDataExportFile.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44233/43546.wpPrivacyGeneratePersonalDataExportFile.php/1527278229920002</guid>
      <description>&lt;p&gt;
Work in progress from @allendav
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43546.wpPrivacyDeleteOldExportFiles.diff attached to Ticket #44233</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 19:56:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44233/43546.wpPrivacyDeleteOldExportFiles.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44233/43546.wpPrivacyDeleteOldExportFiles.diff/1527278199548891</guid>
      <description>&lt;p&gt;
Unit tests for wp_privacy_delete_old_export_files from @allendav
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44233 (Add missing unit tests for exporting personal data by username or ...) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 19:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44233</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44233/1527278178591970</guid>
      <description>&lt;p&gt;
This ticket picks up where &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt; left off to add missing tests for the functionality introduced and to keep when the enhancement and tests were introduced clear.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt;. So far, props @birgire, @allendav.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44113 (Add `esc_html` to assertion in test_wp_comments_personal_data_exporter) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 18:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44113#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44113#comment:6/1527272628738729</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44113 (Add `esc_html` to assertion in test_wp_comments_personal_data_exporter) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 18:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44113#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44113#comment:5/1527272623270171</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44232 (My Comment system is not showing GDPR checkbox) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 17:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44232#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44232#comment:1/1527269759058904</guid>
      <description>invalid: &lt;p&gt;
Hi @contactpriyajo,
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
This is most likely a theme issue. I recommend that you open a support ticket in the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; as that is a better location for questions like this.
&lt;/p&gt;
&lt;p&gt;
If you would like, you can read more about why the field may be missing &lt;a class="ext-link" href="https://make.wordpress.org/core/2018/05/17/changes-that-affect-theme-authors-in-wordpress-4-9-6/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;in this 4.9.6 release dev note&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44232 (My Comment system is not showing GDPR checkbox) created</title>
      
        <dc:creator>contactpriyajo</dc:creator>

      <pubDate>Fri, 25 May 2018 17:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44232</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44232/1527269488538438</guid>
      <description>&lt;p&gt;
I recently updated wordpress and as per the documentation, There should be a checkbox below my comment section which displays the option saving names and details of my site visitors.
However,This checkbox doesn't appear on both my domain and subdomain.
can you help me to figure this out??
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43711 (Let's create a standard development setup for WordPress core.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 25 May 2018 17:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43711#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43711#comment:13/1527269039375224</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-committers by omarreiss. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-committers/p1527269038000438"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44231 (XML oembed discovery is not implemented correctly) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 25 May 2018 16:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44231#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44231#comment:1/1527266800993130</guid>
      <description>&lt;p&gt;
So the expected result is?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress should not put the &lt;code&gt;json&lt;/code&gt; format on a xml request ?
&lt;/li&gt;&lt;li&gt;WordPress should treat the 200 status differently ?
&lt;/li&gt;&lt;li&gt;WordPress should try the request with different formats until it gets one right ?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44231 (XML oembed discovery is not implemented correctly) created</title>
      
        <dc:creator>rivalitaet</dc:creator>

      <pubDate>Fri, 25 May 2018 16:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44231</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44231/1527266330766481</guid>
      <description>&lt;p&gt;
When using XML in oembed discovery, WordPress still tries to encode it as JSON and fails. It doesn't retry to check if XML would work.
&lt;/p&gt;
&lt;p&gt;
How to reproduce this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add a link tag for an XML oembed: this is clearly tagged as &lt;code&gt;text/xml+oembed&lt;/code&gt; and also has the file extension &lt;code&gt;.xml&lt;/code&gt;: `&amp;lt;link rel="alternate" type="text/xml+oembed" href="&lt;a class="ext-link" href="http://example.com/oembed.xml?url=http://example.com/blah"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/oembed.xml?url=http://example.com/blah&lt;/a&gt;"&amp;gt;
&lt;/li&gt;&lt;li&gt;WordPress will now correctly resolve the provider as &lt;code&gt;http://example.com/oembed.xml?url=http://example.com/blah&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Wordpress will send a request to: &lt;code&gt;http://example.com/oembed.xml?url=http://example.com/blah&amp;amp;maxwidth=525&amp;amp;maxheight=788&amp;amp;dnt=1&amp;amp;format=json&lt;/code&gt;. Note how it adds &lt;code&gt;format=json&lt;/code&gt; but still uses the &lt;code&gt;.xml&lt;/code&gt; file extension
&lt;/li&gt;&lt;li&gt;The provider correctly returns an XML response, with HTTP status code 200
&lt;/li&gt;&lt;li&gt;Wordpress tries to parse it as JSON and fails
&lt;/li&gt;&lt;li&gt;Wordpress doesn't retry with &lt;code&gt;format=xml&lt;/code&gt; since it only tries XML if the JSON endpoint failed with HTTP status code 501
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Background info from the spec:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the format of the request is given in the file extension (e.g. &lt;code&gt;/oembed.xml&lt;/code&gt;), the provider should ignore the &lt;code&gt;format&lt;/code&gt; parameter. (See &lt;a class="ext-link" href="https://oembed.com/#section2.2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://oembed.com/#section2.2&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;For discovery the provider should specify the full oembed endpoint, including the &lt;code&gt;format&lt;/code&gt; paramter. It's therefore wrong to override it in Wordpress. (See &lt;a class="ext-link" href="https://oembed.com/#section4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://oembed.com/#section4&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>jacklenox</dc:creator>

      <pubDate>Fri, 25 May 2018 16:23:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:6/1527265380725543</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44229#comment:4" title="Comment 4"&gt;bemdesign&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe one issue with this is that certain nations block things like CDNs. So users in these nations may get a very sub-par WordPress experience because these resources are blocked and unavailable. Thinking about one of the core missions of WordPress - to democratize publishing - it then makes sense to include all these dependencies inside WordPress rather then rely on external resources which may or may not be available for all users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I say in the ticket, we could have a fallback. I don't think such an idea should be implemented without a fallback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>jacklenox</dc:creator>

      <pubDate>Fri, 25 May 2018 16:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:5/1527265325733457</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44229#comment:3" title="Comment 3"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Lots of people stop using or recommending using CDNs nowadays because of GDPR stuff. We have to keep that in mind.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a good point. Where this is happening, I suspect it's due to FUD. Google are GDPR-compliant as are most major CDN providers. They can't afford not to be. But I agree we should keep it in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>bemdesign</dc:creator>

      <pubDate>Fri, 25 May 2018 16:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:4/1527265144606517</guid>
      <description>&lt;p&gt;
I believe one issue with this is that certain nations block things like CDNs. So users in these nations may get a very sub-par WordPress experience because these resources are blocked and unavailable. Thinking about one of the core missions of WordPress - to democratize publishing - it then makes sense to include all these dependencies inside WordPress rather then rely on external resources which may or may not be available for all users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 25 May 2018 16:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:3/1527264923999345</guid>
      <description>&lt;p&gt;
Lots of people stop using or recommending using CDNs nowadays because of GDPR stuff. We have to keep that in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>jacklenox</dc:creator>

      <pubDate>Fri, 25 May 2018 16:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:2/1527264562376071</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44229#comment:1" title="Comment 1"&gt;superpoincare&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think Wordpress' policy is to self host as much as possible. Google Fonts is an exception in bundled themes because the most optimal way involves doing a lot of user agent detection which is not easy to do and maintain.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, I understand. If it is the policy, I'm challenging it. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having jQuery load from Google or some other CDN may not be preferable since many people use blockers such as uBlock Origin for which the expert setting is to block third party javascript.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a good point. However, I suspect the vast majority of notable WordPress websites use some form of CDN for their assets, including JavaScript. The sort of person blocking any third party JS is probably also the sort of person who would understand why things might behave in an unusual way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are plugins available for loading jQuery from CDN and can also be done easily from the child theme.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, I mention doing it yourself at the top of the ticket. But my focus here is on the seismic shift that would happen if this was implemented at a core level.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(Incidentally Chrome doesn't like document.write, so you shouldn't use it).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure, it's just a rudimentary example of a way that you could do a fallback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 16:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:2/1527264195897479</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For a full breakdown on the thought process behind the file names, please see the explanation in &lt;a href="https://core.trac.wordpress.org/ticket/43546#comment:34"&gt;https://core.trac.wordpress.org/ticket/43546#comment:34&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 May 2018 15:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:1/1527263746130814</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @psycleuk.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The zip file is then publicly accessible to anyone that could work out the url for 3 days by default.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The randomised string that gets appended to the file name has a length of 32 characters, and is generated by &lt;code&gt;wp_generate_password()&lt;/code&gt; from a pool of 62 possible characters. This gives it an entropy of &lt;code&gt;32^62&lt;/code&gt;, which is a number containing over ninety digits.
&lt;/p&gt;
&lt;p&gt;
Brute force guessing such a filename is therefore out of the question. Are you aware of a means of pre-calculating the filename?
&lt;/p&gt;
&lt;p&gt;
Note also that the directory listing is not readable due to the existence of the &lt;code&gt;index.html&lt;/code&gt; file in the directory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Fri, 25 May 2018 15:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:1/1527263428489018</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44229" title="#44229: enhancement: Use CDNs where possible to serve external assets like jQuery (new)"&gt;jacklenox&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I think Wordpress' policy is to self host as much as possible. Google Fonts is an exception in bundled themes because the most optimal way involves doing a lot of user agent detection which is not easy to do and maintain.
&lt;/p&gt;
&lt;p&gt;
Having jQuery load from Google or some other CDN may not be preferable since many people use blockers such as uBlock Origin for which the expert setting is to block third party javascript.
&lt;/p&gt;
&lt;p&gt;
There are plugins available for loading jQuery from CDN and can also be done easily from the child theme.
&lt;/p&gt;
&lt;p&gt;
(Incidentally Chrome doesn't like document.write, so you shouldn't use it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) created</title>
      
        <dc:creator>psycleuk</dc:creator>

      <pubDate>Fri, 25 May 2018 15:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230/1527262712898408</guid>
      <description>&lt;p&gt;
In testing the new export personal data feature that was introduced in WordPress 4.9.6, i believe i have found a flaw in how it works.
&lt;/p&gt;
&lt;p&gt;
Once a user has confirmed the data request and an admin user clicks the send email option against the request, this creates the zip file in the uploads directory. The zip file is then publicly accessible to anyone that could work out the url for 3 days by default. This seems wrong to me, the zip file should only be accessible to the user who requested it.
&lt;/p&gt;
&lt;p&gt;
As a work around i have had to reduce the expiry time of the zip file, using the wp_privacy_export_expiration filter to be 1 hour. To minimise the window that the file is available and at risk, but still give the requesting user time to access it.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;follow the Export Personal Data request process to send the data email
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;use the link in the email to download the zip file, this can be performed by anyone who has/knows the link
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Expected result:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the wp-personal-data-exports folder should have public access blocked
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;access to the zip file should be through a token (ideally single use) and validated against the requesting user before allowing download
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) created</title>
      
        <dc:creator>jacklenox</dc:creator>

      <pubDate>Fri, 25 May 2018 15:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229/1527262454371154</guid>
      <description>&lt;p&gt;
There has been a long history of WordPress developers switching out the packaged version of jQuery in favour of using one from a CDN, like the one from Google's Hosted Libraries. A particular win when doing this is it means that if the browser has already cached jQuery from a CDN like Google's, it doesn't bother downloading it again when loading a new website that requests it.
&lt;/p&gt;
&lt;p&gt;
Unnecessary HTTP requests resemble a waste of electricity and carry a carbon footprint. That each WordPress site includes its own copy of jQuery could be seen to represent a massive waste of energy. Mozilla's 2018 Internet Health Report highlights the growing – and potentially unsustainable – energy demand of the Internet: &lt;a class="ext-link" href="https://internethealthreport.org/2018/the-internet-uses-more-electricity-than/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://internethealthreport.org/2018/the-internet-uses-more-electricity-than/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Could we consider making a change to WordPress whereby its first port of call for jQuery (and other JS libraries) is at a centralised location? Either with someone like Google or perhaps hosted on w.org?
&lt;/p&gt;
&lt;p&gt;
As well as representing a vast potential energy saving, this would also make all WordPress sites a little bit quicker.
&lt;/p&gt;
&lt;p&gt;
We could still include the locally packaged copy of jQuery and use it as a fallback where necessary like so:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;script&amp;gt;if ( ! jQuery ) document.write('&amp;lt;script src=jquery.js&amp;gt;&amp;lt;/script&amp;gt;')&amp;lt;/script&amp;gt;&lt;/code&gt; (h/t @johnbillion)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #42885,​44227 batch updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 25 May 2018 15:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42885%2C44227</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42885%2C44227/1527262388326337</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42885" title="#42885: defect (bug): Fix PHPCS &amp;#34;Yoda Condition checks&amp;#34; for root files of WordPress Core. (new)"&gt;#42885&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44169 (New filter to short circuit WP_User_Query results) updated</title>
      
        <dc:creator>tlovett1</dc:creator>

      <pubDate>Fri, 25 May 2018 15:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44169#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44169#comment:3/1527262210658460</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tests added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>users-pre-query-test-1.patch attached to Ticket #44169</title>
      
        <dc:creator>tlovett1</dc:creator>

      <pubDate>Fri, 25 May 2018 15:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44169/users-pre-query-test-1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44169/users-pre-query-test-1.patch/1527262171331804</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44225 (PHPCS: Assignment must be the first block of code on a line) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 14:39:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44225#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44225#comment:4/1527259155566943</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44225 (PHPCS: Assignment must be the first block of code on a line) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 14:38:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44225#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44225#comment:3/1527259098333912</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44227 (Inconsistency in Yoda condition check in WordPress core) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 25 May 2018 14:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44227#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44227#comment:1/1527257497385221</guid>
      <description>&lt;p&gt;
@subrataemfluence I would suggest continuing the discussion about this in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42885" title="#42885: defect (bug): Fix PHPCS &amp;#34;Yoda Condition checks&amp;#34; for root files of WordPress Core. (new)"&gt;#42885&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44188 (Error in the deployed update GDPR) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 May 2018 14:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44188#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44188#comment:7/1527257476512019</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The IP Address is handled under the GDPR as Personally Identifiable Information...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Where does it say so? Also, can you identify the person using &lt;code&gt;185.60.144.231&lt;/code&gt; please? :)
&lt;/p&gt;
&lt;p&gt;
As far as I've seen the notion that IP addresses are "personal information" is more or less a guess. Link to the court case this is based on: &lt;a class="ext-link" href="https://www.whitecase.com/publications/alert/court-confirms-ip-addresses-are-personal-data-some-cases"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.whitecase.com/publications/alert/court-confirms-ip-addresses-are-personal-data-some-cases&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Hoping that we will soon "know" one way or the other how "personal" IPs are :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43987 (Block plugin updates if required PHP version is not supported - ...) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 14:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43987#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43987#comment:8/1527257341364015</guid>
      <description>&lt;p&gt;
@schlessera thanks for the feedback!
&lt;/p&gt;
&lt;p&gt;
I can certainly rename the function as suggested. I’m also hoping for some guidance regarding the phrase we should be using in the notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44225 (PHPCS: Assignment must be the first block of code on a line) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 25 May 2018 14:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44225#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44225#comment:2/1527257238621036</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would like to ask if the following block of code was overlooked and kept intentionally.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@subrataemfluence No, this block wasn't kept intentionally, but these kind of errors can not be auto-fixed by the tooling we used to clean up the code as they generally need a developer to check what is the best course of action.
&lt;/p&gt;
&lt;p&gt;
So far, mostly the errors and warnings which can be auto-fixed have made it into core. Most manual fixes still need to be done.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does this create additional overhead if the declaration and assignment are done in two lines?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It creates additional overhead in the head of developers who can't find the assignment ;-)
&lt;/p&gt;
&lt;p&gt;
For PHP it makes no difference at all. This rule is about code readability.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have uploaded a patch to meet WordPress-Core standard
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for that and I concur with @GaryJ that the patch looks good. I unfortunately can't add the &lt;code&gt;commit&lt;/code&gt; keyword.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44188 (Error in the deployed update GDPR) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 25 May 2018 14:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44188#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44188#comment:6/1527257146272921</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527257145000557"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44188 (Error in the deployed update GDPR) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 14:05:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44188#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44188#comment:5/1527257124353230</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44034 (Privacy: Introduce a function to count user requests by type) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 14:04:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44034#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44034#comment:3/1527257042219796</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44066 (Add a tool to test personal data without sending a mail to a user) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 14:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44066#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44066#comment:8/1527256942704768</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @iprg,
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket, and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
After reading through your request, I think that this would be solved by &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43890" title="#43890: enhancement: Allow Admin to Skip e-mail confirmation for Export/Anonymization (new)"&gt;#43890&lt;/a&gt;, which discusses adding a way for an admin to skip the confirmation email when creating the export or erasure request. This should suit your use case.
&lt;/p&gt;
&lt;p&gt;
Can you confirm that this is what you are trying to accomplish with this ticket? If so, this should be closed out as a duplicate so the conversation can take place in one location.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44225 (PHPCS: Assignment must be the first block of code on a line) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Fri, 25 May 2018 14:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44225#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44225#comment:1/1527256881124802</guid>
      <description>&lt;p&gt;
Patch looks good to me :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44228 ("Read more about setting up your local development environment" needs ...) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 May 2018 13:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44228</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44228/1527256571229690</guid>
      <description>&lt;p&gt;
The &lt;code&gt;Read more about setting up your local development environment&lt;/code&gt; link introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43309" title="Once upon a midnight dreary, while I coded, weak and weary,
In many a ..."&gt;[43309]&lt;/a&gt; links to the Codex home page. It needs to link to somewhere useful.
&lt;/p&gt;
&lt;p&gt;
The link is present in both &lt;code&gt;src/index.php&lt;/code&gt; and &lt;code&gt;src/wp-admin/index.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44223 (Add privacy_url to get_bloginfo()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 25 May 2018 13:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44223#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44223#comment:2/1527256438960833</guid>
      <description>&lt;p&gt;
What‘s the benefit of doing this when we have a dedicated function to get the privacy page URL already? I don‘t see a value in that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44216 (Some core files are not fully compatible to WordPress-Core standards) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 May 2018 13:51:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44216#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44216#comment:5/1527256313231006</guid>
      <description>&lt;p&gt;
That's the one!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44224 (Missing @return in Doc comment) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 13:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44224#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44224#comment:3/1527256140134608</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44224 (Missing @return in Doc comment) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 25 May 2018 13:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44224#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44224#comment:2/1527256060694053</guid>
      <description>&lt;p&gt;
Sure! I would love to :) Thank you for assigning me the task.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 13:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:31/1527255956602629</guid>
      <description>&lt;p&gt;
Currently, if &lt;code&gt;requires_php&lt;/code&gt; is not present the value is present and defaults to &lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Do we want to display any information regarding WordPress compatibility? Currently the only notice is &lt;em&gt;untested&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
Thanks for the great feedback!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44224 (Missing @return in Doc comment) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 25 May 2018 13:43:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44224#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44224#comment:1/1527255818819863</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@subrataemfluence good catch!
&lt;/p&gt;
&lt;p&gt;
Can we also add function and parameter descriptions, which are also missing? The return value should have a description as well.
&lt;/p&gt;
&lt;p&gt;
Marking as &lt;code&gt;good-first-bug&lt;/code&gt; and assigning as to mark as claimed.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44146 (Design issue on Theme page) updated</title>
      
        <dc:creator>mitraval192</dc:creator>

      <pubDate>Fri, 25 May 2018 13:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44146#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44146#comment:4/1527255769741619</guid>
      <description>&lt;p&gt;
I setup WordPress through CLI command. "wp core download" and faced this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41112 (Show WordCamps higher up in the News Dashboard widget) reopened</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 25 May 2018 13:31:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41112#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41112#comment:24/1527255117469641</guid>
      <description>&lt;p&gt;
SInce 4.9.x is open for enhancements &lt;sup&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1527106568000725"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;1&lt;/a&gt;, &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1527108427000177"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;2&lt;/a&gt;&lt;/sup&gt;, it doesn't seem like there's any reason for this to wait until 5.0.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44227 (Inconsistency in Yoda condition check in WordPress core) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 25 May 2018 13:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44227</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44227/1527255103679855</guid>
      <description>&lt;p&gt;
According to @pento in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42885" title="#42885: defect (bug): Fix PHPCS &amp;#34;Yoda Condition checks&amp;#34; for root files of WordPress Core. (new)"&gt;#42885&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ultimately, the aim is to have phpcs run on every commit. If we don't allow assignments in conditions, then the reason for Yoda conditions (avoiding accidental assignment in conditions) should no longer be necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@jdgrimes says in the same ticket
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Before committing this, maybe a good time to reconsider this rule? Now that we can run PHPCS over the code, we could just disallow assignments in conditions, and then Yoda conditions wouldn't really be necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
However, we have a good amount of Yoda condition applied already. Here is an example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'.'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$plugin_slug&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$plugin_slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
at line number 98 of &lt;code&gt;wp-admin/includes/plugin.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I think the coding style and pattern should be consistent across the whole application. Otherwise, it will lead to even more confusion if both exist side by side.
&lt;/p&gt;
&lt;p&gt;
Please correct me if I am wrong.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44226 (Link to Privacy Policy in comment consent) updated</title>
      
        <dc:creator>paolobros</dc:creator>

      <pubDate>Fri, 25 May 2018 13:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44226#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44226#comment:1/1527254421323907</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44226 (Link to Privacy Policy in comment consent) created</title>
      
        <dc:creator>paolobros</dc:creator>

      <pubDate>Fri, 25 May 2018 13:18:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44226</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44226/1527254322472688</guid>
      <description>&lt;p&gt;
Hi!
It's possible add the url to privacy policy after consent in comments?
Thank You!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44225.diff attached to Ticket #44225</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 25 May 2018 13:10:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44225/44225.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44225/44225.diff/1527253844039481</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44225 (PHPCS: Assignment must be the first block of code on a line) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 25 May 2018 13:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44225</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44225/1527253835206521</guid>
      <description>&lt;p&gt;
Although WordPress-Core standard is reporting this as an error, I would like to ask if the following block of code was overlooked and kept intentionally.
&lt;/p&gt;
&lt;p&gt;
File: wp-admin/includes/plugin.php
Line number: 146
&lt;/p&gt;
&lt;p&gt;
The code block being reported is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$allowed_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$allowed_tags_in_links&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'abbr'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'acronym'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'code'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'em'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'strong'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
While according to the standards it should be:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$allowed_tags_in_links&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'abbr'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'acronym'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'code'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'em'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'strong'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$allowed_tags&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$allowed_tags_in_links&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Does this create additional overhead if the declaration and assignment are done in two lines? I have uploaded a patch to meet WordPress-Core standard but will love to know if this is really a necessity! And if not, why.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44223 (Add privacy_url to get_bloginfo()) updated</title>
      
        <dc:creator>XpertOne</dc:creator>

      <pubDate>Fri, 25 May 2018 13:06:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44223#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44223#comment:1/1527253586801497</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44223.diff attached to Ticket #44223</title>
      
        <dc:creator>XpertOne</dc:creator>

      <pubDate>Fri, 25 May 2018 13:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44223/44223.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44223/44223.diff/1527253559153863</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44224.diff attached to Ticket #44224</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 25 May 2018 12:53:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44224/44224.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44224/44224.diff/1527252785175325</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44224 (Missing @return in Doc comment) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 25 May 2018 12:52:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44224</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44224/1527252760094910</guid>
      <description>&lt;p&gt;
File name: &lt;code&gt;wp-admin/includes/plugin.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Function/Methods missing &lt;code&gt;@return&lt;/code&gt; in Doc comment
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_plugin_page_hookname&lt;/code&gt; and &lt;code&gt;user_can_access_admin_page&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I have uploaded a patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44223 (Add privacy_url to get_bloginfo()) created</title>
      
        <dc:creator>fixw</dc:creator>

      <pubDate>Fri, 25 May 2018 12:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44223</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44223/1527252620242872</guid>
      <description>&lt;pre class="wiki"&gt;//* function get_bloginfo()
// * - 'privacy_url' - The Sites Privacy Url (set in Settings &amp;gt; Privacy)
		case 'privacy_url':
			$output = get_privacy_policy_url();
			break;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44159 (feature request: otption for removing save my name in comments) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Fri, 25 May 2018 12:19:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44159#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44159#comment:1/1527250757516643</guid>
      <description>&lt;p&gt;
You can do it modifying this code a bit:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/44138#comment:1"&gt;https://core.trac.wordpress.org/ticket/44138#comment:1&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44216 (Some core files are not fully compatible to WordPress-Core standards) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 25 May 2018 11:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44216#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44216#comment:4/1527249573803372</guid>
      <description>&lt;p&gt;
There is a channel called &lt;code&gt;core-coding-standards&lt;/code&gt; which I have joined. Is this the one you suggested?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44219 (null post json object reference when retrieve a media item) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 25 May 2018 11:26:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44219#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44219#comment:6/1527247563811774</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@nurcholisart glad to hear it worked for you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44219 (null post json object reference when retrieve a media item) closed</title>
      
        <dc:creator>nurcholisart</dc:creator>

      <pubDate>Fri, 25 May 2018 11:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44219#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44219#comment:5/1527247070803215</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44219#comment:4" title="Comment 4"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@nurcholisart
&lt;/p&gt;
&lt;p&gt;
Just to make sure we're talking about the same thing, can you please try the following:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to the edit post screen: &lt;code&gt;/wp-admin/post.php?post=7634&amp;amp;action=edit&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Click the "Add Media" button.
&lt;/li&gt;&lt;li&gt;Upload a new image, from your computer.
&lt;/li&gt;&lt;li&gt;Close the Media popup.
&lt;/li&gt;&lt;li&gt;Set that new image as the featured image.
&lt;/li&gt;&lt;li&gt;Save post.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
and check again
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/wp-json/wp/v2/posts/7634&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;/wp-json/wp/v2/media/???&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;
&lt;p&gt;
ps: the featured image is stored in the post meta, so it doesn't have to be attached to the post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
hi @birgire i have tried your suggestion, and now it's work! now i can see the post object value in &lt;code&gt;/wp-json/wp/v2/media/7636&lt;/code&gt;. Thank you very much...
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>Michael_Hartl</dc:creator>

      <pubDate>Fri, 25 May 2018 10:11:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:16/1527243069788076</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:8" title="Comment 8"&gt;allendav&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:7" title="Comment 7"&gt;idea15&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Together with anonymizing the IP address we should probably delete the browser UA. It is used for pretty much the same purpose and has no other role.
&lt;/p&gt;
&lt;p&gt;
However this has to be done after some time. Sometimes comments are "approved" but the user marks them as spam later, or the other way around. In both cases all comment data is still submitted to spam detection services together with the user action. If we remove some of the data before this, it may cause errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree.
&lt;/p&gt;
&lt;p&gt;
What retention period do you propose?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's do 30 days and make it filterable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think, that is a great idea! And important, as data is just allowed to be stored as long as needed. One idea is to store and keep as less data as possible. And after some time the IP is not needed anymore.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44042 (Hook for ‘delete_option’ behaviour required) updated</title>
      
        <dc:creator>RobertoDonPedro</dc:creator>

      <pubDate>Fri, 25 May 2018 09:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44042#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44042#comment:4/1527240476052050</guid>
      <description>&lt;p&gt;
Hi, it seams that the changes did not make it into 4.9.6.
Any reasons why? Is there something I need to do?
Thx, Robert
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 08:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:30/1527238105126758</guid>
      <description>&lt;p&gt;
Thanks for the feeback! In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43986/43986.3.diff" title="Attachment '43986.3.diff' in Ticket #43986"&gt;43986.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43986/43986.3.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Correct the logic to account for &lt;code&gt;requires_php&lt;/code&gt; header not being present.
&lt;/li&gt;&lt;li&gt;Change &lt;code&gt;Warning&lt;/code&gt; label in More Details to &lt;code&gt;Error&lt;/code&gt;, since that's what the message is.
&lt;/li&gt;&lt;li&gt;Remove pink background from plugin cards.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43986.3.more-details.PNG attached to Ticket #43986</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 08:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986.3.more-details.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986.3.more-details.PNG/1527237798157944</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43986.3.plugin-list.PNG attached to Ticket #43986</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 08:43:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986.3.plugin-list.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986.3.plugin-list.PNG/1527237789179328</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43986.3.diff attached to Ticket #43986</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 08:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986.3.diff/1527237780224110</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44202 (Link to "Privacy Policy" automatically added to footer of any Twenty ...) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Fri, 25 May 2018 08:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44202#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44202#comment:9/1527237527156425</guid>
      <description>&lt;p&gt;
Thanks for your advise, we now have rolled out this plugin to a number of sites which are based on default Twenty XXX themes.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
Plugin Name: Remove "Privacy Policy" in Twenty XXX footer
Description: Removes the "Privacy Policy" automatically added to footer of any Twenty XXX theme, https://core.trac.wordpress.org/ticket/44202#comment:8
Version: 1.0
Author: Gary Pendergast
Author URI: https://profiles.wordpress.org/pento
*/&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_privacy_policy_link'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'__return_empty_string'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It is pretty effective, the "Privacy Policy" link in WordPress core login and registration pages is now gone as well.
&lt;/p&gt;
&lt;p&gt;
Seems that the current implementation to show theme functionalities like adding a privacy policy link in default themes is not consistent to usual implementation, with own functions and filters using a twentyXXX_ prefix, like twentyseventeen_get_svg(), twentyseventeen_is_frontpage(), all the way back to twentyten_continue_reading_link(), etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43987 (Block plugin updates if required PHP version is not supported - ...) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 25 May 2018 08:25:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43987#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43987#comment:7/1527236723162400</guid>
      <description>&lt;p&gt;
@afragen I think some of the naming is awkward, as you refer to the name of the plugin meta key &lt;code&gt;'requires php'&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
As an example, the method &lt;code&gt;load_requires_php()&lt;/code&gt; is grammatically weird, as it reads differently than it is intended: "something we want to load does require PHP" or something...
&lt;/p&gt;
&lt;p&gt;
I suggest adapting the naming to make the purpose clear, regardless of what the index key is called, like &lt;code&gt;enforce_php_requirement()&lt;/code&gt; or similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 25 May 2018 08:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:29/1527236374797906</guid>
      <description>&lt;p&gt;
Some notes regarding the above patches (should apply equally to @afragen's &amp;amp; @SergeyBiryukov's patches):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You should account for the possibility of &lt;code&gt;$plugins&lt;/code&gt; not containing the &lt;code&gt;'requires_php'&lt;/code&gt; index, to make the code more robust. If that index is not included, just assume it is compatible.
&lt;/li&gt;&lt;li&gt;Information should not be coded in color or symbols only, because of a11y reasons. This applies to things like a pink background just as well as the colored symbols. As an example, the color-coded ✔️and ❌should contain invisible screen-reader-text so that screen readers can read out loud what is happening.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@SergeyBiryukov I think your logic is off. If the plugin does not contain the required headers, the code will default to blocking installations.
&lt;/p&gt;
&lt;p&gt;
In terms of code, I think we have two different approaches here: action-based vs hard-coded. One is more flexible and looks cleaner, the other is a better enforcement. I'm not yet sure on which method I'd prefer...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>johnalarcon</dc:creator>

      <pubDate>Fri, 25 May 2018 07:59:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:28/1527235165925592</guid>
      <description>&lt;p&gt;
@SergeyBiryukov
&lt;/p&gt;
&lt;p&gt;
Re: SS 43986.2-plugin-list.PNG, I agree about the pink background; it's a bit much.
&lt;/p&gt;
&lt;p&gt;
Re: SS 43986.2-more-details.PNG, a couple of things.
&lt;/p&gt;
&lt;p&gt;
The SS depicts a warning. Giving them a "notice" seems more appropriate. I feel that a warning would only be warranted if the installation was actually allowed to proceed - ie, there was some sort of risk or danger.
&lt;/p&gt;
&lt;p&gt;
The text is a bit verbose. Does it need to say here that the plugin can't be installed? My feeling is the big disabled button communicates that chunk of the sentence in a place where users will more easily find it. That said, I couldn't pare the text down by much, but here's my thought:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Notice&lt;/strong&gt;: This plugin requires PHP X.x or later. Please contact your web host or site admin for assistance in upgrading.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44097 (Introduce cookie consent &amp; management to core) updated</title>
      
        <dc:creator>danieliser</dc:creator>

      <pubDate>Fri, 25 May 2018 07:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44097#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44097#comment:4/1527234474337771</guid>
      <description>&lt;p&gt;
@iandunn - Is that planned or purely conceptual? Honestly, I think its an imminent need. I need another plugin like I need another chargeback. Just a little ecommerce humor there.
&lt;/p&gt;
&lt;p&gt;
That said I think this ticket goes well with that solution, also I think there is an older ticket that was more conceptual and less overview of what needed to be done (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44043" title="#44043: enhancement: Framework for logging/retrieving a users consent state (new)"&gt;#44043&lt;/a&gt;) which you may decide to close one, your call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 07:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:27/1527233772213912</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.diff" title="Attachment '43986.2.diff' in Ticket #43986"&gt;43986.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43986/43986.2.diff" title="Download"&gt;​&lt;/a&gt; is my take on the patch, mostly following @hedgefield's mockups.
&lt;/p&gt;
&lt;p&gt;
Screenshots: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.plugin-list.PNG" title="Attachment '43986.2.plugin-list.PNG' in Ticket #43986"&gt;43986.2.plugin-list.PNG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43986/43986.2.plugin-list.PNG" title="Download"&gt;​&lt;/a&gt;, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.more-details.PNG" title="Attachment '43986.2.more-details.PNG' in Ticket #43986"&gt;43986.2.more-details.PNG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43986/43986.2.more-details.PNG" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I don't think we should change the UI too much. "Incompatible with your version of PHP. &lt;a class="ext-link" href="https://wordpress.org/support/upgrade-php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Learn more&lt;/a&gt;" seems enough for our purposes, and we can explain the details in "More Details" modal.
&lt;/p&gt;
&lt;p&gt;
I didn't implement red buttons (went with regular disabled buttons instead), as we don't have them anywhere else in core, and I'd like to avoid introducing new design conventions here. Maybe even the pink background on plugin cards is too much? I'm open to suggestions though if someone has strong feelings either way :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43986.2.diff attached to Ticket #43986</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 07:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.diff/1527232974585568</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43986.2.more-details.PNG attached to Ticket #43986</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 07:06:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.more-details.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.more-details.PNG/1527232005836345</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43986.2.plugin-list.PNG attached to Ticket #43986</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 May 2018 07:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.plugin-list.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986.2.plugin-list.PNG/1527231996746770</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44222 (Add Archive state to data erasure requests) created</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Fri, 25 May 2018 06:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44222</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44222/1527230077563408</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
A suggestion for v2 of GDPR is to add an archive/trash state and list view to erasure requests.
&lt;/p&gt;
&lt;p&gt;
Currently, the last state/phase in the erasure process is 'Completed' with the 'Next Steps' action being 'Remove request'.
&lt;/p&gt;
&lt;p&gt;
This automatically prompts the admin to remove and clear the deck. In many if not most cases though the site holds backups which upon site failure will be used to restore the site/content and thus the users PII data. Under GDPR my understanding is the admin is required to re-remove the users data.
&lt;/p&gt;
&lt;p&gt;
Backups are partially safe with GDPR because they are required for site security/integrity, but under retention can only be kept for a reasonable timeframe.
&lt;/p&gt;
&lt;p&gt;
So I was thinking a way to safeguard admins would be to introduce a trash/archive which would have the action for Completed be 'Archive' instead of 'Remove'. This would place the request in the trash and remove from the 'All' view to reduce the clutter. On a new Trash view you're find these requests with the ability to delete permanently.
&lt;/p&gt;
&lt;p&gt;
And I think I heard something about privacy settings at some point in slack which could allow a retention period setting for these archives be set and a cron to auto-remove. So admins would be able to have their database retention and erasure archive retention periods basically match. This would enable them to use the archive list, export it possible, and use it to re-remove users upon database restore.
&lt;/p&gt;
&lt;p&gt;
Most of it is up to the admin to disclose their backup policy and how they'll re-remove users but would definitely help safeguard them from losing requests by running through the workflow too quickly.
&lt;/p&gt;
&lt;p&gt;
Hope that mostly makes sense, mainly just wanted the idea out there.
&lt;/p&gt;
&lt;p&gt;
All the best,
*Note: Most of this is to 'my understanding' so I defer to those more versed in the new regulations.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>johnalarcon</dc:creator>

      <pubDate>Fri, 25 May 2018 06:33:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:26/1527229980988065</guid>
      <description>&lt;p&gt;
That looks really nice! Yeah, re: untested... I'd lean toward a question mark, as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43967 (Admin emails after email confirmation don't work for data privacy requests) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Fri, 25 May 2018 05:39:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43967#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43967#comment:28/1527226748150431</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving enhancement to 4.9.8
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Fri, 25 May 2018 05:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:75/1527226538634912</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving enhancement to 4.9.8
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43546 (Add to the privacy tools UX a means to export personal data by ...) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Fri, 25 May 2018 05:35:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43546#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43546#comment:85/1527226505254150</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving enhancement to 4.9.8
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Fri, 25 May 2018 05:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:64/1527226450043315</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving enhancement to 4.9.8
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44113 (Add `esc_html` to assertion in test_wp_comments_personal_data_exporter) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Fri, 25 May 2018 05:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44113#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44113#comment:4/1527226327861453</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Bug moved to milestone 4.9.7
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44192 (Title of Privacy Policy Page not used on login page) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 May 2018 04:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44192#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44192#comment:5/1527223860551912</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm inclined to change the behaviour of &lt;code&gt;get_the_privacy_policy_link()&lt;/code&gt; to use the post title, rather than a hardcoded string. As suggested, this allows easy customisation of the link text.
&lt;/p&gt;
&lt;p&gt;
For localisation, the post is created with the post title translated to site's current language. For sites that support multiple languages, this should also fit into their content translation flow, as the post title will be localised along with the post content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44202 (Link to "Privacy Policy" automatically added to footer of any Twenty ...) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 May 2018 04:47:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44202#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44202#comment:8/1527223657184303</guid>
      <description>invalid: &lt;p&gt;
The default themes are built to show how to use various theme functionalities, in this case, they're correctly showing how to use the &lt;code&gt;the_privacy_policy_link()&lt;/code&gt; template tag.
&lt;/p&gt;
&lt;p&gt;
For custom themes, you can choose to not use this template tag. If you're unable to customise your theme in this way, then you can add a small plugin to remove the link:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_privacy_policy_link'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'__return_empty_string'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 May 2018 04:35:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:15/1527222932303047</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for clarifying why you made this ticket, @Ov3rfly. It's important to understand whether this was related to a technical requirement, or whether it was a style issue.
&lt;/p&gt;
&lt;p&gt;
As it's a style issue, the more important part of consistency here is the presence of the comment, explaining that the file is intentionally blank, rather than the file returning no data when requested over HTTP.
&lt;/p&gt;
&lt;p&gt;
I'm not particularly fussed that the current behaviour returns visible output, but I'm fine with changing the behaviour to that in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44195/44195.4.diff" title="Attachment '44195.4.diff' in Ticket #44195"&gt;44195.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44195/44195.4.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 04:26:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:25/1527222368333780</guid>
      <description>&lt;p&gt;
Might consider using a question mark for untested so it would look like &lt;code&gt;? WordPress&lt;/code&gt;. Some other character might be more appropriate but I'm not sure how to figure out the best one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43986v2-4.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 04:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v2-4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v2-4.diff/1527221473987118</guid>
      <description>&lt;p&gt;
Oops, now includes something if PHP is compatible. PHP shown as compatible if no requirement listed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 03:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:24/1527219849453763</guid>
      <description>&lt;p&gt;
Now if you're running trunk, you still get the standard &lt;em&gt;Untested&lt;/em&gt; message.
&lt;/p&gt;
&lt;p&gt;
Yes, the CSS still needs to be built.
&lt;/p&gt;
&lt;p&gt;
I'm really liking this version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43986v2-3.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 03:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v2-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v2-3.diff/1527219724822362</guid>
      <description>&lt;p&gt;
This patch has fewest words.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screenshot_03.png attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 03:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_03.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_03.png/1527219693319222</guid>
      <description>&lt;p&gt;
minimal words
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 03:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:23/1527218337468414</guid>
      <description>&lt;p&gt;
I’ll adjust the patch accordingly.
&lt;/p&gt;
&lt;p&gt;
I actually like the placement and it’s technically the “compatibility” section of the card.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>johnalarcon</dc:creator>

      <pubDate>Fri, 25 May 2018 03:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:22/1527217601112223</guid>
      <description>&lt;p&gt;
The word "required" for PHP version is redundant under a "Requirements" header. Also, WordPress version doesn't have a "v", but PHP version does...I'd nix it for both - people know what these numbers are. I think it looks quite nice and (the reqs info) could even fit in nicely under the More Details link, which would bring the footer back to a reasonable size.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43986v2-2.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 03:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v2-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v2-2.diff/1527217296079299</guid>
      <description>&lt;p&gt;
Simplifies message and adds color, but CSS needs to be built.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screenshot_02.2.png attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 03:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_02.2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_02.2.png/1527217227262070</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 25 May 2018 02:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:21/1527217180486369</guid>
      <description>&lt;p&gt;
@johnalarcon I can do something pretty close to that if that's the consensus.
&lt;/p&gt;
&lt;p&gt;
I think we need a lot more input before a final decision.
&lt;/p&gt;
&lt;p&gt;
@joyously what do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Fri, 25 May 2018 02:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:14/1527215313489303</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Due to consistency the file index.html should not generate any output = be empty.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Serious software development needs &lt;a class="ext-link" href="https://www.google.com/search?q=software+development+consistency"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;consistency&lt;/a&gt;. Same rules should apply everywhere.
&lt;/p&gt;
&lt;p&gt;
This ticket asks to follow a simple rule: No output from files which protect open directory listings.
&lt;/p&gt;
&lt;p&gt;
With more consistency in everybody's mind, there would be a lot less tickets necessary, e.g. about bypassing existing filesystem api in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44204" title="#44204: defect (bug): Privacy export codebase in 4.9.6 doesn't use WP Filesystem API (new)"&gt;#44204&lt;/a&gt;, and many more...
&lt;/p&gt;
&lt;p&gt;
What a bug reporter personally needs or does not need is of no interest here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 May 2018 01:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:13/1527212608729902</guid>
      <description>&lt;p&gt;
@Ov3rfly: Could you explain why you need this file to contain nothing at all?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44221 (`get_terms()` with `all_with_object_id` returns cached `stdClass` objects) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 25 May 2018 01:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44221#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44221#comment:3/1527211556423713</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43314" title="Taxonomy: Improve cache handling when querying for terms using ..."&gt;43314&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Improve cache handling when querying for terms using &lt;code&gt;all_with_object_id&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When a term query using &lt;code&gt;fields=all_with_object_id&lt;/code&gt; hits the cache, the&lt;br /&gt;
cached &lt;code&gt;stdClass&lt;/code&gt; objects must be converted to &lt;code&gt;WP_Term&lt;/code&gt; objects. This&lt;br /&gt;
was overlooked when &lt;code&gt;WP_Term_Query&lt;/code&gt; was refactored to support object&lt;br /&gt;
queries in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38667" title="Taxonomy: Use `WP_Term_Query` when querying for object terms.
The new ..."&gt;[38667]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43313" title="Taxonomy: Improve cache handling when querying for terms using ..."&gt;[43313]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44221" title="#44221: defect (bug): `get_terms()` with `all_with_object_id` returns cached `stdClass` objects (closed: fixed)"&gt;#44221&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43314]: Taxonomy: Improve cache handling when querying for terms using ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 25 May 2018 01:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43314</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43314/1527211555333116</guid>
      <description>&lt;p&gt;
Taxonomy: Improve cache handling when querying for terms using &lt;code&gt;all_with_object_id&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When a term query using &lt;code&gt;fields=all_with_object_id&lt;/code&gt; hits the cache, the
cached &lt;code&gt;stdClass&lt;/code&gt; objects must be converted to &lt;code&gt;WP_Term&lt;/code&gt; objects. This
was overlooked when &lt;code&gt;WP_Term_Query&lt;/code&gt; was refactored to support object
queries in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38667" title="Taxonomy: Use `WP_Term_Query` when querying for object terms.
The new ..."&gt;[38667]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43313" title="Taxonomy: Improve cache handling when querying for terms using ..."&gt;[43313]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
&lt;p&gt;
Props dlh.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44221" title="#44221: defect (bug): `get_terms()` with `all_with_object_id` returns cached `stdClass` objects (closed: fixed)"&gt;#44221&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44221 (`get_terms()` with `all_with_object_id` returns cached `stdClass` objects) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 25 May 2018 01:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44221#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44221#comment:2/1527211365037673</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43313" title="Taxonomy: Improve cache handling when querying for terms using ..."&gt;43313&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Improve cache handling when querying for terms using &lt;code&gt;all_with_object_id&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When a term query using &lt;code&gt;fields=all_with_object_id&lt;/code&gt; hits the cache, the&lt;br /&gt;
cached &lt;code&gt;stdClass&lt;/code&gt; objects must be converted to &lt;code&gt;WP_Term&lt;/code&gt; objects. This&lt;br /&gt;
was overlooked when &lt;code&gt;WP_Term_Query&lt;/code&gt; was refactored to support object&lt;br /&gt;
queries in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38667" title="Taxonomy: Use `WP_Term_Query` when querying for object terms.
The new ..."&gt;[38667]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44221" title="#44221: defect (bug): `get_terms()` with `all_with_object_id` returns cached `stdClass` objects (closed: fixed)"&gt;#44221&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43313]: Taxonomy: Improve cache handling when querying for terms using ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 25 May 2018 01:22:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43313</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43313/1527211364025707</guid>
      <description>&lt;p&gt;
Taxonomy: Improve cache handling when querying for terms using &lt;code&gt;all_with_object_id&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When a term query using &lt;code&gt;fields=all_with_object_id&lt;/code&gt; hits the cache, the
cached &lt;code&gt;stdClass&lt;/code&gt; objects must be converted to &lt;code&gt;WP_Term&lt;/code&gt; objects. This
was overlooked when &lt;code&gt;WP_Term_Query&lt;/code&gt; was refactored to support object
queries in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38667" title="Taxonomy: Use `WP_Term_Query` when querying for object terms.
The new ..."&gt;[38667]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dlh.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44221" title="#44221: defect (bug): `get_terms()` with `all_with_object_id` returns cached `stdClass` objects (closed: fixed)"&gt;#44221&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44221 (`get_terms()` with `all_with_object_id` returns cached `stdClass` objects) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 25 May 2018 01:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44221#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44221#comment:1/1527210926971600</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good catch, @dlh. This does appear to be a mistake in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38667" title="Taxonomy: Use `WP_Term_Query` when querying for object terms.
The new ..."&gt;[38667]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44221.diff attached to Ticket #44221</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 25 May 2018 00:36:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44221/44221.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44221/44221.diff/1527208602802560</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44221 (`get_terms()` with `all_with_object_id` returns cached `stdClass` objects) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 25 May 2018 00:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44221</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44221/1527208584963498</guid>
      <description>&lt;p&gt;
Two identical calls to &lt;code&gt;get_terms()&lt;/code&gt; with &lt;code&gt;'fields' =&amp;gt; 'all_with_object_id'&lt;/code&gt; will return an array of &lt;code&gt;WP_Term&lt;/code&gt; objects for the first call but an array of &lt;code&gt;stdClass&lt;/code&gt; objects for the second call if the objects are retrieved from the cache.
&lt;/p&gt;
&lt;p&gt;
It looks to me like this was caused by a missed case of updating
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( 'all' === $_fields )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
to
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( 'all' === $_fields || 'all_with_object_id' === $_fields )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38667" title="Taxonomy: Use `WP_Term_Query` when querying for object terms.
The new ..."&gt;[38667]&lt;/a&gt;. It seems unintentional, but I might be missing something.
&lt;/p&gt;
&lt;p&gt;
The attached patch includes a test demonstrating the issue and a potential patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44214 (Update wp-cli.yml path after 43309) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 May 2018 00:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44214#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44214#comment:5/1527207255139640</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43312" title="Tools: Update `wp-cli.yml` to point to the `build` directory.
After ..."&gt;43312&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tools: Update &lt;code&gt;wp-cli.yml&lt;/code&gt; to point to the &lt;code&gt;build&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43309" title="Once upon a midnight dreary, while I coded, weak and weary,
In many a ..."&gt;[43309]&lt;/a&gt;, WP-CLI should be running against the &lt;code&gt;build&lt;/code&gt; directory, not the &lt;code&gt;src&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jpry.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44214" title="#44214: task (blessed): Update wp-cli.yml path after 43309 (closed: fixed)"&gt;#44214&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43312]: Tools: Update `wp-cli.yml` to point to the `build` directory.  After ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 May 2018 00:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43312</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43312/1527207254120932</guid>
      <description>&lt;p&gt;
Tools: Update &lt;code&gt;wp-cli.yml&lt;/code&gt; to point to the &lt;code&gt;build&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43309" title="Once upon a midnight dreary, while I coded, weak and weary,
In many a ..."&gt;[43309]&lt;/a&gt;, WP-CLI should be running against the &lt;code&gt;build&lt;/code&gt; directory, not the &lt;code&gt;src&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
Props jpry.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44214" title="#44214: task (blessed): Update wp-cli.yml path after 43309 (closed: fixed)"&gt;#44214&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44214 (Update wp-cli.yml path after 43309) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 May 2018 00:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44214#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44214#comment:4/1527207104995714</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44214 (Update wp-cli.yml path after 43309) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 24 May 2018 23:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44214#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44214#comment:3/1527203441777798</guid>
      <description>&lt;p&gt;
@johnbillion Why does this need to land in 4.9.7?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #44214,​44220 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 24 May 2018 23:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=44214%2C44220</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=44214%2C44220/1527203254219928</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44214" title="#44214: task (blessed): Update wp-cli.yml path after 43309 (closed: fixed)"&gt;#44214&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>44220.1.diff attached to Ticket #44220</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 24 May 2018 23:05:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44220/44220.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44220/44220.1.diff/1527203130999407</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44220 (Update wp-cli.yml to point to build/ instead of src/) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 24 May 2018 23:04:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44220</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44220/1527203085506045</guid>
      <description>&lt;p&gt;
Now that our working directory is &lt;code&gt;build/&lt;/code&gt;, &lt;code&gt;wp-cli.yml&lt;/code&gt; should execute it, not &lt;code&gt;src/&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>johnalarcon</dc:creator>

      <pubDate>Thu, 24 May 2018 22:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:20/1527202574704556</guid>
      <description>&lt;p&gt;
If there's too much text, it won't get read. Or, if it seems jammed together, the aesthetic suffers (and it also probably wouldn't get read). It also doesn't seem necessary to tell users what version of PHP or WordPress they're running - if they don't meet the requirement, they don't meet them. I think stating the requirements and using checks-n-exes would be a cleaner approach. See ss above. That little block of requirements could be moved around wherever, and still probably fit nicely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screenshot_01.4.png attached to Ticket #43986</title>
      
        <dc:creator>johnalarcon</dc:creator>

      <pubDate>Thu, 24 May 2018 22:51:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_01.4.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_01.4.png/1527202271383060</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44219 (null post json object reference when retrieve a media item) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 24 May 2018 22:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44219#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44219#comment:4/1527200089570906</guid>
      <description>&lt;p&gt;
@nurcholisart
&lt;/p&gt;
&lt;p&gt;
Just to make sure we're talking about the same thing, can you please try the following:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to the edit post screen: &lt;code&gt;/wp-admin/post.php?post=7634&amp;amp;action=edit&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Click the "Add Media" button.
&lt;/li&gt;&lt;li&gt;Upload a new image, from your computer.
&lt;/li&gt;&lt;li&gt;Close the Media popup.
&lt;/li&gt;&lt;li&gt;Set that new image as the featured image.
&lt;/li&gt;&lt;li&gt;Save post.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
and check again
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/wp-json/wp/v2/posts/7634&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;/wp-json/wp/v2/media/???&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;
&lt;p&gt;
ps: the featured image is stored in the post meta, so it doesn't have to be attached to the post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44214 (Update wp-cli.yml path after 43309) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 24 May 2018 21:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44214#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44214#comment:1/1527199098738111</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44219 (null post json object reference when retrieve a media item) updated</title>
      
        <dc:creator>nurcholisart</dc:creator>

      <pubDate>Thu, 24 May 2018 21:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44219#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44219#comment:3/1527199078972031</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44219#comment:1" title="Comment 1"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Welcome to WordPress Trac @nurcholisart
&lt;/p&gt;
&lt;p&gt;
I think that means the featured image is not attached to any post, hence null.
&lt;/p&gt;
&lt;p&gt;
An image can only be attached to a single post.
&lt;/p&gt;
&lt;p&gt;
So I think this is expected, if your featured image is not attached to the post.
&lt;/p&gt;
&lt;p&gt;
Is that the case?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi, @birgire thanks before...
&lt;/p&gt;
&lt;p&gt;
Actually, i have uploaded the image to that post in my wordpress dashboard. and the media is just for that post. here is my screen shot &lt;a style="padding:0; border:none" href="http://oi64.tinypic.com/4r6fqt.jpg"&gt;&lt;img src="http://oi64.tinypic.com/4r6fqt.jpg" alt="http://oi64.tinypic.com/4r6fqt.jpg" crossorigin="anonymous" title="http://oi64.tinypic.com/4r6fqt.jpg" /&gt;&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
But when i get it from wp rest api, the "post" object give me null return. i think it should return "post":7634. because, when i try to get other image detail from wp rest api, it's not give null return. example is like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
	"id": 7839,
	"date": "2018-05-24T16:03:24",
	"date_gmt": "2018-05-24T09:03:24",
	...
	"author": 93,
	"featured_media": 7846,
	...
}
&lt;/pre&gt;&lt;p&gt;
the code above is response when i get &lt;a class="ext-link" href="https://himmahonline.id/wp-json/wp/v2/media/7846"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://himmahonline.id/wp-json/wp/v2/media/7846&lt;/a&gt;. and that image is the featured media in post id 7839. here is the response when i retrieve post detail:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
	"id": 7839,
	"date": "2018-05-24T16:03:24",
	"date_gmt": "2018-05-24T09:03:24",
	....
	"author": 93,
	"featured_media": 7846,
	"comment_status": "open",
	...
}
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://himmahonline.id/wp-json/wp/v2/posts/7839"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://himmahonline.id/wp-json/wp/v2/posts/7839&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The featured image object appears in json response.
&lt;/p&gt;
&lt;p&gt;
i need this to export my wordpress database to non-wordpress database.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44216 (Some core files are not fully compatible to WordPress-Core standards) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 24 May 2018 21:57:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44216#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44216#comment:3/1527199030725701</guid>
      <description>&lt;p&gt;
I think the best place to check is the #coding-standards channel in WordPress Slack.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44210 (Add filter for developers testing downloads from local servers) closed</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 24 May 2018 21:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44210#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44210#comment:1/1527198805117397</guid>
      <description>invalid: &lt;p&gt;
I found another way around by filtering 'http_request_args'. Sorry I was premature.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Thu, 24 May 2018 21:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:12/1527196597480902</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Due to consistency the file index.html should not generate any output = be empty.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
An HTML comment is content. There should be no content. That's the main reason for this ticket...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 24 May 2018 20:50:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:11/1527195025276410</guid>
      <description>&lt;p&gt;
&lt;code&gt;44195.4.diff&lt;/code&gt; : Ok, let's avoid to insert any .php file in /uploads folder, and replace HTML text with a comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44195.4.diff attached to Ticket #44195</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 24 May 2018 20:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44195/44195.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44195/44195.4.diff/1527194918036394</guid>
      <description>&lt;p&gt;
replace HTML text with HTML comment to avoid to display anything.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 24 May 2018 20:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:10/1527193079678550</guid>
      <description>&lt;p&gt;
I agree with @johnbillion.  This should be kept as an html file but the content moved into an HTML comment. Putting executed files in the uploads dir isn't something we should encourage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30150 (apply_filters( 'image_size_names_choose' ) should be provided a named ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 24 May 2018 20:17:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30150#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30150#comment:8/1527193068030745</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1527193067000239"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43857 (Show the comment / awaiting moderation message even without opt-in) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Thu, 24 May 2018 20:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43857#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43857#comment:25/1527192674489916</guid>
      <description>&lt;p&gt;
FWIW I want to +1 the view that this is a tremendous problem that should have been a blocker for the update. It fails silently in a very bad way and in a way that is very hard to test. Only dev teams doing very detailed QA will have noticed this problem, especially because it won't affect any site admins (who are of course logged in).
&lt;/p&gt;
&lt;p&gt;
On top of this, many themes over the years use other methods to generate comment forms, in which case the consent checkbox doesn't show at all. In that scenario this situation is even worse, because the cookie is never generated and no one sees the moderation message.
&lt;/p&gt;
&lt;p&gt;
If the site I manage had auto-updated without my intervention and testing first, our commenting would have become incoherent because this patch wasn't included. In a point release.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Other thought: Having this work properly by default (moderation message always shows regardless of cookie) is very important because many sites should just choose to ditch the cookie and it's consent woes entirely.
&lt;/p&gt;
&lt;p&gt;
It's really not a big deal to fill out comments again, and honestly I'd rather have the form and privacy policy be simpler. It strikes me that if this cookie-based feature didn't already exist in core, it would never get added now that GDPR makes it such a headache for everyone involved.
&lt;/p&gt;
&lt;p&gt;
Just looking at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43436" title="#43436: enhancement: Add opt-in for commenter cookies (closed: fixed)"&gt;#43436&lt;/a&gt; and all the important information @johnjamesjacoby brought up that should be shown with the checkbox, but isn't for usability reasons, really drives this home.
&lt;/p&gt;
&lt;p&gt;
As site admins, opting out of the comment cookie entirely is the killer feature. Excited for this patch to be added ASAP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43938 (Make it clear to administrators that not all plugins support privacy ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 24 May 2018 19:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43938#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43938#comment:10/1527191316120198</guid>
      <description>&lt;p&gt;
See also &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/20218"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues/20218&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44219 (null post json object reference when retrieve a media item) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 24 May 2018 19:28:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44219#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44219#comment:2/1527190089484581</guid>
      <description>&lt;p&gt;
ps: by &lt;em&gt;attached&lt;/em&gt;, I mean uploaded to the post, that sets the &lt;code&gt;post_parent&lt;/code&gt; field for the image in the &lt;code&gt;wp_posts&lt;/code&gt; table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44219 (null post json object reference when retrieve a media item) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 24 May 2018 19:22:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44219#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44219#comment:1/1527189721470077</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome to WordPress Trac @nurcholisart
&lt;/p&gt;
&lt;p&gt;
I think that means the featured image is not attached to any post, hence null.
&lt;/p&gt;
&lt;p&gt;
An image can only be attached to a single post.
&lt;/p&gt;
&lt;p&gt;
So I think this is expected, if your featured image is not attached to the post.
&lt;/p&gt;
&lt;p&gt;
Is that the case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44219 (null post json object reference when retrieve a media item) created</title>
      
        <dc:creator>nurcholisart</dc:creator>

      <pubDate>Thu, 24 May 2018 18:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44219</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44219/1527185304303141</guid>
      <description>&lt;p&gt;
hello, i have problem with my wp json api, and if i'm not wrong, maybe this is a bug in wp json api. So, when i try to retrieve a post item, the json object show that the post has featured media by id 7636.
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
	// retrieved post item
	"id": 7634,
	"date": "2018-04-16T09:56:54",
	"date_gmt": "2018-04-16T02:56:54",
	...
	"author": 79,
	"featured_media": 7636,
	"comment_status": "open",
	"ping_status": "open",
	"sticky": false,
	"template": "",
	"format": "standard",
	"meta": [],
	....
}
&lt;/pre&gt;&lt;p&gt;
full response here: &lt;a class="ext-link" href="https://himmahonline.id/wp-json/wp/v2/posts/7634"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://himmahonline.id/wp-json/wp/v2/posts/7634&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But, when i try to retrieve media with id 7636, the "post" json object is null. why this is happen? thanks before.
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
	// retrieved media item
	"id": 7636,
	"date": "2018-04-15T17:20:46",
	"date_gmt": "2018-04-15T10:20:46",
	...
	"post": null,
	"source_url": "https://himmahonline.id/wp-content/uploads/2018/04/DSC_0384.jpg",
	...
}
&lt;/pre&gt;&lt;p&gt;
full response here: &lt;a class="ext-link" href="https://himmahonline.id/wp-json/wp/v2/media/7636"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://himmahonline.id/wp-json/wp/v2/media/7636&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44212 (Add a new helper function for comma- or space-separated lists) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 24 May 2018 18:01:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44212#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44212#comment:2/1527184919109519</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm changing this from enhancement to defect as the &lt;code&gt;wp_parse_id_list()&lt;/code&gt; and &lt;code&gt;wp_parse_slug_list()&lt;/code&gt; are not supposed to return non empty arrays for empty strings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44217 (An error maybe related to some deprecated function.) updated</title>
      
        <dc:creator>pcnador</dc:creator>

      <pubDate>Thu, 24 May 2018 17:49:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44217#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44217#comment:5/1527184191357325</guid>
      <description>&lt;p&gt;
yes you're right I'll try it and see
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44217#comment:4" title="Comment 4"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@pcnador great, glad to hear it
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;get_bloginfo()&lt;/code&gt; function is not deprecated.
&lt;/p&gt;
&lt;p&gt;
This issue seems to be plugin related, where the function might be used in some unexpected way?
&lt;/p&gt;
&lt;p&gt;
One way would be to see what happens without that plugin.
&lt;/p&gt;
&lt;p&gt;
You might also consider contacting the plugin support?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44217 (An error maybe related to some deprecated function.) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 24 May 2018 17:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44217#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44217#comment:4/1527184094001945</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@pcnador great, glad to hear it
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;get_bloginfo()&lt;/code&gt; function is not deprecated.
&lt;/p&gt;
&lt;p&gt;
This issue seems to be plugin related, where the function might be used in some unexpected way?
&lt;/p&gt;
&lt;p&gt;
One way would be to see what happens without that plugin.
&lt;/p&gt;
&lt;p&gt;
You might also consider contacting the plugin support?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44217 (An error maybe related to some deprecated function.) updated</title>
      
        <dc:creator>pcnador</dc:creator>

      <pubDate>Thu, 24 May 2018 17:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44217#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44217#comment:3/1527183344528110</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44217#comment:2" title="Comment 2"&gt;birgire&lt;/a&gt;: yes it's already done thank you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44217 (An error maybe related to some deprecated function.) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 24 May 2018 17:16:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44217#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44217#comment:2/1527182198897124</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44217 (An error maybe related to some deprecated function.) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 24 May 2018 17:13:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44217#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44217#comment:1/1527182022422790</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome to WordPress core trac
&lt;/p&gt;
&lt;p&gt;
Please be careful what information you post online, you should change it on your end asap if needed!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #44134,​44218 batch updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 24 May 2018 17:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=44134%2C44218</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=44134%2C44218/1527181935330670</guid>
      <description>duplicate: &lt;p&gt;
Hiya, and welcome to the WordPress trac.
&lt;/p&gt;
&lt;p&gt;
This is likely caused by a regression in TinyMCE, the text editor we use, we're tracking it in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44134" title="#44134: task (blessed): Update to TinyMCE 4.7.13 (closed: fixed)"&gt;#44134&lt;/a&gt; at this time. The Social Warfare plugin is one of the ones affected by this unfortunately.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44218 (Post Editor is non-functional since the 4.9.6 WordPress update) updated</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Thu, 24 May 2018 17:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44218#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44218#comment:1/1527181847299903</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Have you tried using a different browser? The current version of TinyMCE (which was updated in 4.9.6) has some issues with certain web browsers. I recommend trying to use the editor with either Firefox or Chrome and see if the issue persists.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44218 (Post Editor is non-functional since the 4.9.6 WordPress update) created</title>
      
        <dc:creator>michellefrank</dc:creator>

      <pubDate>Thu, 24 May 2018 17:03:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44218</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44218/1527181427566679</guid>
      <description>&lt;p&gt;
So far, the issues I've noticed in Post Editor are: 1) I am unable to click on the Add Media button to add images. 2) When I tried to get into text mode to manually add an image by adding the http, I noticed that I am unable to get into the Text tab. I am unsure whether these &lt;strong&gt;additional problems&lt;/strong&gt; are on the plugins' side or WordPress' side: 3) Clicking the WordPress Recipe Maker button to add a recipe opens the recipe editor, but freezes the screen; 4) the Social Warfare Custom Options fields are greyed out and not accessible.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44217 (An error maybe related to some deprecated function.) created</title>
      
        <dc:creator>pcnador</dc:creator>

      <pubDate>Thu, 24 May 2018 16:46:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44217</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44217/1527180407091236</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
it looks like WordPress Core may still be using a deprecated function. See line 224 [here]&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/class-wp-locale.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/class-wp-locale.php&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The error in my apache error log
&lt;/p&gt;
&lt;pre class="wiki"&gt;[Sun May 20 13:35:20.221828 2018] [proxy_fcgi:error] [pid 10537] [client 127.0.0.1:47010] AH01071: Got error 'PHP message: PHP Fatal error: Uncaught Error: Call to undefined function get_bloginfo() in /public_html/wp-includes/class-wp-locale.php:231\n
Stack trace:\n
#0 /public_html/wp-includes/class-wp-locale.php(112): WP_Locale-&amp;gt;init()\n
#1 /public_html/wp-includes/load.php(927): WP_Locale-&amp;gt;__construct()\n
#2 /public_html/wp-includes/wp-db.php(1569): wp_load_translations_early()\n
#3 /public_html/wp-content/plugins/w3-total-cache/DbCache_Wpdb.php(145): wpdb-&amp;gt;db_connect(true)\n
#4 /public_html/wp-includes/wp-db.php(592): W3TC\\DbCache_Wpdb-&amp;gt;db_connect()\n
#5 /public_html/wp-content/plugins/w3-total-cache/DbCache_Wpdb.php(252): wpdb-&amp;gt;__construct('db', 'pass', 'user', 'localhost')\n
#6 /pu...\n
&lt;/pre&gt;&lt;p&gt;
my server keeps generate this error until my server disk space was 0.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 24 May 2018 16:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:6/1527178468205349</guid>
      <description>&lt;p&gt;
It's a good question, but I agree with @desrosj, that we should not filter out "empty" values, like &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; as they could have a specific meaning.
&lt;/p&gt;
&lt;p&gt;
Also &lt;em&gt;anonymous&lt;/em&gt; functions, like in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44215/44215.patch" title="Attachment '44215.patch' in Ticket #44215"&gt;44215.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44215/44215.patch" title="Download"&gt;​&lt;/a&gt;, were first supported in PHP 5.3.0
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://secure.php.net/manual/en/functions.anonymous.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://secure.php.net/manual/en/functions.anonymous.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
but WordPress still supports PHP 5.2.4
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/about/requirements/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/requirements/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44097 (Introduce cookie consent &amp; management to core) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 24 May 2018 16:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44097#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44097#comment:3/1527178037514603</guid>
      <description>&lt;p&gt;
Related: &lt;a class="ext-link" href="https://github.com/gdpr-compliance/info/blob/master/Cookies.md#cookies-api"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/gdpr-compliance/info/blob/master/Cookies.md#cookies-api&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 24 May 2018 15:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:5/1527177504982591</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am wondering if leaving empty values in the report is important. The site is technically storing data on the user, the string is just empty. This could be significant in certain contexts.
&lt;/p&gt;
&lt;p&gt;
In your example there are &lt;code&gt;0&lt;/code&gt;s. A &lt;code&gt;0&lt;/code&gt; (which is falsey or can be considered empty) could indicate that a user has no orders or no published posts. An empty string could mean that they did not provide a URL on their profile. A user meta field could be stored for &lt;code&gt;speaks_english&lt;/code&gt; and be set to &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
So in certain contexts, these empty values may be important.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Thu, 24 May 2018 15:52:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:4/1527177140118821</guid>
      <description>&lt;p&gt;
Empty strings would be neat and sufficient :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44053 (RTL problem in WordPress Text Editor) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 24 May 2018 15:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44053#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44053#comment:9/1527176893883870</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@man4toman thanks for the ticket! Welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
I have not been able to reproduce this issue locally testing with TwentySeventeen.
&lt;/p&gt;
&lt;p&gt;
Can you tell me which theme you were using when you noticed the issue? Also, which locale is your site using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 24 May 2018 15:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:3/1527176506120304</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527176505000522"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44109 (TwentySeventeen backend editor: level 2 bulleted lists nested under ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 24 May 2018 15:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44109#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44109#comment:3/1527176162884090</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch works great for me. I also tested using the lists in reverse (an &lt;code&gt;ol&lt;/code&gt; within an &lt;code&gt;ul&lt;/code&gt;) and that also worked without issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 24 May 2018 15:28:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:2/1527175692037709</guid>
      <description>&lt;p&gt;
I don't know - I would hope plugins could avoid inserting meaningless values into the report. That said, a completely empty string - sure - we could discard that. Beyond that however, I would push back beyond having core pass judgement on what is passed to it by an exporter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44216 (Some core files are not fully compatible to WordPress-Core standards) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 24 May 2018 15:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44216#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44216#comment:2/1527175366585271</guid>
      <description>&lt;p&gt;
Thank you for your quick reply.
May I do some patching focusing &lt;code&gt;coding-standard&lt;/code&gt; keyword?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44141 (Privacy: Don't replace comment author URL and email with anything) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 24 May 2018 15:21:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44141#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44141#comment:7/1527175288589722</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44141/44141.diff" title="Attachment '44141.diff' in Ticket #44141"&gt;44141.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44141/44141.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add &lt;code&gt;@group privacy&lt;/code&gt; to the tests in &lt;code&gt;Tests_Comments&lt;/code&gt; that test the anonymization of comment data.
&lt;/li&gt;&lt;li&gt;Adds translator context to the &lt;code&gt;Anonymous&lt;/code&gt; string that replaces the commenter's name. This could be important for some languages.
&lt;/li&gt;&lt;li&gt;Continue passing the comment author's URL through &lt;code&gt;wp_privacy_anonymize_data()&lt;/code&gt; so that plugins and themes can filter the URL if desired.
&lt;/li&gt;&lt;li&gt;Adjust tests for anonymizing comment author URLs and emails.
&lt;/li&gt;&lt;li&gt;Add a &lt;code&gt;_wp_anonymized&lt;/code&gt; comment meta value of &lt;code&gt;true&lt;/code&gt; when a comment is successfully anonymized.
&lt;/li&gt;&lt;li&gt;Change &lt;code&gt;wp_privacy_anonymize_data()&lt;/code&gt; to return an empty string by default for both emails &amp;amp; URLs.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The main change here is that a comment meta value is added flagging a comment as anonymized. It allows the URL to be empty but it's still obvious that there was potentially data there that was redacted. The &lt;code&gt;_wp_anonymized&lt;/code&gt; key could also contain an array of the fields that did contain data before being erased if knowing that is important.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44216 (Some core files are not fully compatible to WordPress-Core standards) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 24 May 2018 15:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44216#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44216#comment:1/1527174608319082</guid>
      <description>invalid: &lt;p&gt;
Yeah this is a known issue. There's a large number of coding standards violations in core.
&lt;/p&gt;
&lt;p&gt;
Have a read through &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41057" title="#41057: task (blessed): Update PHP codebase per WordPress PHP Coding Standards (closed: fixed)"&gt;#41057&lt;/a&gt; for all the background and the big change that fixed a huge number of the issues in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42343" title="Code is Poetry.
WordPress' code just... wasn't.
This is now dealt ..."&gt;[42343]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;coding-standards&lt;/code&gt; keyword is being used on Trac to track individual issues: &lt;a href="https://core.trac.wordpress.org/query?status=!closed&amp;amp;focuses=~coding-standards"&gt;https://core.trac.wordpress.org/query?status=!closed&amp;amp;focuses=~coding-standards&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'll close this ticket in favour of the more specific tickets that have that keyword.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>44141.diff attached to Ticket #44141</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 24 May 2018 15:00:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44141/44141.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44141/44141.diff/1527174005650270</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44216 (Some core files are not fully compatible to WordPress-Core standards) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 24 May 2018 14:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44216</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44216/1527173535605865</guid>
      <description>&lt;p&gt;
I am not sure if this is the right place to ask this question but I have noticed some files have sniffing issues. I have used PHPCS WordPress-Core standard to review and immediately found some.
&lt;/p&gt;
&lt;p&gt;
Are these issues left behind on purpose?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Thu, 24 May 2018 14:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:1/1527172712801025</guid>
      <description>&lt;p&gt;
Pinging @allendav for any input. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28521 (FORCE_SSL constant for really forcing SSL) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 24 May 2018 14:38:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28521#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28521#comment:13/1527172692540492</guid>
      <description>&lt;p&gt;
I've created a feature plugin repo for collaborating on this: &lt;a class="ext-link" href="https://github.com/xwp/pwa-wp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/pwa-wp&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Though I realize that HTTPS may need lower-level core modifications than can be achieved than using a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44215.patch attached to Ticket #44215</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Thu, 24 May 2018 14:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44215/44215.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44215/44215.patch/1527172678622244</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) created</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Thu, 24 May 2018 14:37:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215/1527172660488839</guid>
      <description>&lt;p&gt;
Empty values should not be included in the report. Otherwise, the report will be cluttered with empty values.
&lt;/p&gt;
&lt;p&gt;
Use the following code in &lt;code&gt;mu-plugins&lt;/code&gt; to reproduce:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
function exporter_1( $email_address, $page = 1 ) {
	return array(
		'data' =&amp;gt; array( array(
			'group_id'    =&amp;gt; 'group-1',
			'group_label' =&amp;gt; __( 'Orders', 'woocommerce-services' ),
			'item_id'     =&amp;gt; 'item-1',
			'data'	=&amp;gt; array(
				array(
					'name'  =&amp;gt; __( 'Exporter 1' ),
					'value' =&amp;gt; 1234,
				),
				array(
					'name'  =&amp;gt; __( 'Exporter 2' ),
					'value' =&amp;gt; '',
				),
				array(
					'name'  =&amp;gt; __( 'Exporter 3' ),
					'value' =&amp;gt; '0',
				),
				array(
					'name'  =&amp;gt; __( 'Exporter 4' ),
					'value' =&amp;gt; 0,
				),
			),
		) ),
		'done' =&amp;gt; true,
	);
}
function register_exporter_1( $exporters ) {
	$exporters['exporter_1'] = array(
		'exporter_friendly_name' =&amp;gt; __( 'Exporter 1' ),
		'callback' =&amp;gt; 'exporter_1',
	);
	return $exporters;
}
add_filter(
	'wp_privacy_personal_data_exporters',
	'register_exporter_1'
);
&lt;/pre&gt;&lt;p&gt;
Results:
&lt;/p&gt;
&lt;p&gt;
Before proposed patch:
&lt;a style="padding:0; border:none" href="https://cloudup.com/iPJ8ocUnyiz"&gt;&lt;img src="https://cloudup.com/iPJ8ocUnyiz" alt="https://cloudup.com/iPJ8ocUnyiz" crossorigin="anonymous" title="https://cloudup.com/iPJ8ocUnyiz" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After proposed patch:
&lt;a style="padding:0; border:none" href="https://cloudup.com/i7MqWkMZjrj"&gt;&lt;img src="https://cloudup.com/i7MqWkMZjrj" alt="https://cloudup.com/i7MqWkMZjrj" crossorigin="anonymous" title="https://cloudup.com/i7MqWkMZjrj" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43328 (Add support for Web App Manifests) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 24 May 2018 14:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43328#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43328#comment:6/1527172641566127</guid>
      <description>&lt;p&gt;
I've created a feature plugin repo for collaborating on this: &lt;a class="ext-link" href="https://github.com/xwp/pwa-wp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/pwa-wp&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36995 (Support for Service Workers) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 24 May 2018 14:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36995#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36995#comment:16/1527172630491334</guid>
      <description>&lt;p&gt;
I've created a feature plugin repo for collaborating on this: &lt;a class="ext-link" href="https://github.com/xwp/pwa-wp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/pwa-wp&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44214.patch attached to Ticket #44214</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Thu, 24 May 2018 14:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44214/44214.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44214/44214.patch/1527172539526098</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44214 (Update wp-cli.yml path after 43309) created</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Thu, 24 May 2018 14:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44214</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44214/1527172521595850</guid>
      <description>&lt;p&gt;
Now that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43309" title="Once upon a midnight dreary, while I coded, weak and weary,
In many a ..."&gt;[43309]&lt;/a&gt; has landed, the &lt;code&gt;wp-cli.yml&lt;/code&gt; file should be updated to point to the &lt;code&gt;build/&lt;/code&gt; directory instead of the &lt;code&gt;src/&lt;/code&gt; directory.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44212 (Add a new helper function for comma- or space-separated lists) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 24 May 2018 14:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44212#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44212#comment:1/1527172371449492</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44212/44212.2.patch" title="Attachment '44212.2.patch' in Ticket #44212"&gt;44212.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44212/44212.2.patch" title="Download"&gt;​&lt;/a&gt; the function &lt;code&gt;wp_parse_list()&lt;/code&gt; is introduced and is used by &lt;code&gt;wp_parse_id_list()&lt;/code&gt; and &lt;code&gt;wp_parse_slug_list()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
With this function it now removes the empty values returned by &lt;code&gt;preg_split()&lt;/code&gt;. You can also remove all the values that equal to false by setting the &lt;code&gt;$format&lt;/code&gt; parameter to &lt;code&gt;filter_false&lt;/code&gt;. We could use this filter for &lt;code&gt;wp_parse_id_list()&lt;/code&gt; as IDs are not supposed to have a value of 0. I've left it as is for back compatibility.
&lt;/p&gt;
&lt;h2 id="Emptystrings"&gt;Empty strings&lt;/h2&gt;
&lt;p&gt;
There are differences between what is returned for &lt;code&gt;preg_split()&lt;/code&gt; (without the &lt;code&gt;PREG_SPLIT_NO_EMPTY&lt;/code&gt;) flag and the &lt;code&gt;wp_parse_id_list()&lt;/code&gt; function if you use it with an empty string
&lt;/p&gt;
&lt;pre class="wiki"&gt;$array = preg_split( '/[\s,]+/', '' );
// non empty array
array(
    0 =&amp;gt; ''
)
$array = wp_parse_list('');
// empty array
array(
)
&lt;/pre&gt;&lt;p&gt;
New tickets should be created for the other instances where &lt;code&gt;preg_split()&lt;/code&gt; is used (with the same regex) that expect an empty array (and are now iterating over it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44202 (Link to "Privacy Policy" automatically added to footer of any Twenty ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 24 May 2018 14:08:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44202#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44202#comment:7/1527170907150695</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44202#comment:5" title="Comment 5"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I understand your point.
&lt;/p&gt;
&lt;p&gt;
However, what option the admin has if he wants to remove / hide the link without contacting the developer? The checkbox will give the ability to control the visibility of the link I believe.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44202/link-template.diff" title="Attachment 'link-template.diff' in Ticket #44202"&gt;link-template.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44202/link-template.diff" title="Download"&gt;​&lt;/a&gt; your setting makes it so plugins and themes can't use the function any more if a setting isn't checked, it's a helper function made to return a formatted link and if one exists that should remain to be true.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can perhaps add this element in $core_options array and set the value to &lt;code&gt;1&lt;/code&gt; so that the checkbox remains checked by default and the link will appear if the function is called somewhere. If this could be done, I believe plugins and themes can easily use the function. And when admin wants he can easily turn it off by unchecking the checkbox.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44202/privacy-2.diff" title="Attachment 'privacy-2.diff' in Ticket #44202"&gt;privacy-2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44202/privacy-2.diff" title="Download"&gt;​&lt;/a&gt; What if my theme doesn't offer the user a choice, or I don't provide a fixed footer location, then this checkbox setting ends up being misleading to the user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is why I changed the label so that it does not say "footer".
&lt;/p&gt;
&lt;p&gt;
I may be conceptually wrong but thought it might add to the usability for a site admin to control the visibility of this link.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21195 (get_avatar_url) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 24 May 2018 14:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21195#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21195#comment:77/1527170408754117</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by lakenh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527170407000358"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44123 (Utilize `is_countable()` and `is_iterable()` Polyfills) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 24 May 2018 13:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44123#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44123#comment:13/1527169428127079</guid>
      <description>wontfix: &lt;p&gt;
@johnbillion that works for me.
&lt;/p&gt;
&lt;p&gt;
Moving forward, please use individual tickets to address instances where &lt;code&gt;is_countable()&lt;/code&gt; and &lt;code&gt;is_iterable()&lt;/code&gt; should be utilized being mindful of the ideals above.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44033 (Get Avatar  Comment Types should be a Function Not Just a Filter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 24 May 2018 13:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44033#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44033#comment:5/1527168754480124</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by lucas05. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527168753000066"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44166 (Typo in Privacy Policy example content) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 24 May 2018 13:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44166#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44166#comment:6/1527168682482273</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning to mark &lt;code&gt;good-first-bug&lt;/code&gt; claimed. Looks good to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43982 (The test suite shouldn't assume that the data directory exists) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 24 May 2018 13:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43982#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43982#comment:4/1527168585051680</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44213 (Tab order in Tools) created</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Thu, 24 May 2018 13:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44213</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44213/1527167851659493</guid>
      <description>&lt;p&gt;
Since 4.9.6, two new menu items are added in "Tools" when one logs in: "Export Personal Data" and "Erase Personal Data".
&lt;/p&gt;
&lt;p&gt;
The position of these are lower than what is added by plugins and should be below "Export"
.
&lt;/p&gt;
&lt;p&gt;
Screenshot:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/6pzcmpV.png"&gt;&lt;img src="https://i.imgur.com/6pzcmpV.png" alt="https://i.imgur.com/6pzcmpV.png" crossorigin="anonymous" title="https://i.imgur.com/6pzcmpV.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43241 (Twenty Seventeen: Menu behaviour is not proper) updated</title>
      
        <dc:creator>nilamacharya</dc:creator>

      <pubDate>Thu, 24 May 2018 12:05:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43241#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43241#comment:5/1527163504972913</guid>
      <description>&lt;p&gt;
Is there any updates on this ticket ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44033 (Get Avatar  Comment Types should be a Function Not Just a Filter) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 24 May 2018 11:14:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44033#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44033#comment:4/1527160467738433</guid>
      <description>&lt;p&gt;
That broader question may do better to ask in the Slack chat as you get a broader opinion. There is no specific documentation by component, though I like the developer resources on WordPress.org
&lt;/p&gt;
&lt;p&gt;
For the ticket, I would create a function that calls the filter then replace all usage of the filter in core with the function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44033 (Get Avatar  Comment Types should be a Function Not Just a Filter) updated</title>
      
        <dc:creator>lucas05</dc:creator>

      <pubDate>Thu, 24 May 2018 11:05:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44033#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44033#comment:3/1527159913568921</guid>
      <description>&lt;p&gt;
Can you give me some instructions on how to proceed? :)
I was looking at &lt;a class="ext-link" href="https://codex.wordpress.org/User:HEngel/How_To_Become_A_WordPress_Developer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/User:HEngel/How_To_Become_A_WordPress_Developer&lt;/a&gt; but i don't know if it's a good direction.
Also where can i find the documentation for the Comments component?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44212.2.patch attached to Ticket #44212</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 24 May 2018 10:43:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44212/44212.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44212/44212.2.patch/1527158624380686</guid>
      <description>&lt;p&gt;
Add new function wp_parse_list()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>44212.patch attached to Ticket #44212</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 24 May 2018 10:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44212/44212.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44212/44212.patch/1527157753290874</guid>
      <description>&lt;p&gt;
Add unit tests for the current situation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44212 (Add a new helper function for comma- or space-separated lists) created</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 24 May 2018 10:26:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44212</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44212/1527157594550389</guid>
      <description>&lt;p&gt;
The functions &lt;code&gt;wp_parse_id_list()&lt;/code&gt; and &lt;code&gt;wp_parse_slug_list()&lt;/code&gt; both use &lt;code&gt;preg_split()&lt;/code&gt; to convert strings to an array. Strings with leading or trailing spaces will result in an added empty value &lt;code&gt;''&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; returned by these functions.
&lt;/p&gt;
&lt;p&gt;
Example
&lt;/p&gt;
&lt;pre class="wiki"&gt;// leading space
$ids = wp_parse_id_list( ' 1,2,3' );
// result
array(
    0 =&amp;gt; 0
    1 =&amp;gt; 1
    2 =&amp;gt; 2
    3 =&amp;gt; 3
)
&lt;/pre&gt;&lt;p&gt;
This is because the &lt;code&gt;PREG_SPLIT_NO_EMPTY&lt;/code&gt; flag is not used with&lt;code&gt;preg_split()&lt;/code&gt;. The same regex &lt;code&gt;'/[\s,]+/'&lt;/code&gt; used by these functions is also used in other places in WordPress core (also without using the flag). That's why I propose a new helper function for comma- or space-separated lists (that uses the flag by default).
&lt;/p&gt;
&lt;p&gt;
That function could then be used by &lt;code&gt;wp_parse_id_list()&lt;/code&gt; and &lt;code&gt;wp_parse_slug_list()&lt;/code&gt; and all other instances where this regex is used.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28940 (TinyMCE strips out empty &lt;i&gt; tags, breaking font awesome) updated</title>
      
        <dc:creator>marcmaurer</dc:creator>

      <pubDate>Thu, 24 May 2018 10:00:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28940#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28940#comment:17/1527156050772279</guid>
      <description>&lt;p&gt;
Problem is still there. Any updates to this issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44211 (Add cookie domain to `userSettings` script localize) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 24 May 2018 08:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44211#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44211#comment:1/1527150688194461</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44211.patch attached to Ticket #44211</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 24 May 2018 08:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44211/44211.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44211/44211.patch/1527150676599791</guid>
      <description>&lt;p&gt;
5.0-alpha-43311
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44211 (Add cookie domain to `userSettings` script localize) created</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 24 May 2018 08:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44211</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44211/1527150604598087</guid>
      <description>&lt;p&gt;
I have cookie path and secure status but I need have &lt;code&gt;domain&lt;/code&gt; param in array too. I think that this will helpful.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #27954,​28521 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 24 May 2018 06:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27954%2C28521</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27954%2C28521/1527145137711614</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27954" title="#27954: task (blessed): Add FORCE_SSL option to enable HTTPS everywhere on the site (closed: duplicate)"&gt;#27954&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44121 (Return of the Page Template Bug?) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 24 May 2018 06:10:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44121#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44121#comment:9/1527142240674699</guid>
      <description>&lt;p&gt;
With all the details you have given us, this doesn't sound like a WordPress issue at all.
&lt;/p&gt;
&lt;p&gt;
This sounds like an OPcache issue (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36455" title="#36455: enhancement: Call opcache_reset() after plug-in, theme or core update (new)"&gt;#36455&lt;/a&gt;), which means that your  server still has the old PHP files in its cache.
&lt;/p&gt;
&lt;p&gt;
A quick workaround to solve this would be creating a file like &lt;code&gt;opcache.php&lt;/code&gt; in your WordPress root folder with &lt;code&gt;&amp;lt;?php opcache_reset();&lt;/code&gt; in it. Then, open that file in the browser (e.g. &lt;code&gt;https://example.com/opcache.php&lt;/code&gt;) and delete the file afterwards.
&lt;/p&gt;
&lt;p&gt;
Alternatively, restart php-fpm on your server or use a WP-CLI command like &lt;a class="ext-link" href="https://packagist.org/packages/wearerequired/wp-cli-clear-opcache"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://packagist.org/packages/wearerequired/wp-cli-clear-opcache&lt;/a&gt; to do the same. Provided you have WP-CLI and this WordPress plugin installed, you would run &lt;code&gt;wp opcache clear&lt;/code&gt; on the command line.
&lt;/p&gt;
&lt;p&gt;
If neither of that works. contact your hosting provider for help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 24 May 2018 06:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:9/1527141830935388</guid>
      <description>&lt;p&gt;
@Ov3rfly you are absolutely right.
&lt;/p&gt;
&lt;p&gt;
So I guess we need to add &lt;code&gt;index.php&lt;/code&gt; to &lt;code&gt;wp_privacy_delete_old_export_files()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
[edit: okay, that's what you asked in comment #2]
&lt;/p&gt;
&lt;p&gt;
Fixed in &lt;code&gt;44195.3.diff&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers,
&lt;/p&gt;
&lt;p&gt;
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44195.3.diff attached to Ticket #44195</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 24 May 2018 06:02:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44195/44195.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44195/44195.3.diff/1527141738406947</guid>
      <description>&lt;p&gt;
Replace index.html with index.php in clean up function &lt;code&gt;wp_privacy_delete_old_export_files()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Capture d’écran 2018-05-24 à 07.11.19.png attached to Ticket #44109</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 24 May 2018 05:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44109/Capture%20d%E2%80%99%C3%A9cran%202018-05-24%20%C3%A0%2007.11.19.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44109/Capture%20d%E2%80%99%C3%A9cran%202018-05-24%20%C3%A0%2007.11.19.png/1527138757106030</guid>
      <description>&lt;p&gt;
sample structure in visual mode
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Capture d’écran 2018-05-24 à 07.11.36.png attached to Ticket #44109</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 24 May 2018 05:12:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44109/Capture%20d%E2%80%99%C3%A9cran%202018-05-24%20%C3%A0%2007.11.36.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44109/Capture%20d%E2%80%99%C3%A9cran%202018-05-24%20%C3%A0%2007.11.36.png/1527138736638657</guid>
      <description>&lt;p&gt;
sample structure in html mode
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44109 (TwentySeventeen backend editor: level 2 bulleted lists nested under ...) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 24 May 2018 05:06:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44109#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44109#comment:2/1527138412278974</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello and thanks for your ticket,
&lt;/p&gt;
&lt;p&gt;
I tested your patch (some screenshots below) and I confirm 44109.patch applies cleanly on &lt;code&gt;editor-style&lt;/code&gt;.
Did not found any issue or edge case.
&lt;/p&gt;
&lt;p&gt;
Moving it to 4.9.8 since this is a real bug fix.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16853 (Error 500 when a user has too many sites) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 24 May 2018 03:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16853#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16853#comment:33/1527134256903080</guid>
      <description>&lt;p&gt;
Short term? Not really, any UI we create is going to expect to be inside a React app, but making this UI inside a React app is also the sticking point. 🙃
&lt;/p&gt;
&lt;p&gt;
Replacing &lt;code&gt;my-sites.php&lt;/code&gt; with a list table would be the fastest way to fix it, I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44210.diff attached to Ticket #44210</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 24 May 2018 02:27:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44210/44210.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44210/44210.diff/1527128832022197</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44210 (Add filter for developers testing downloads from local servers) created</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 24 May 2018 02:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44210</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44210/1527128759986243</guid>
      <description>&lt;p&gt;
I can be the only one.
&lt;/p&gt;
&lt;p&gt;
I have set up a local git server that runs on my LAN, 192.168.x.x
&lt;/p&gt;
&lt;p&gt;
I use it to test plugin/theme updating. Within &lt;code&gt;wp-includes/http.php&lt;/code&gt; &lt;code&gt;wp_http_validate_url()&lt;/code&gt; we can already use the filter hook &lt;code&gt;http_request_host_is_external&lt;/code&gt;, however, at the end of the function is a conditional test that will still fail and not return the &lt;code&gt;$url&lt;/code&gt;. This is because &lt;code&gt;$same_host&lt;/code&gt; is false if the dev environment and the local git server aren't on the same host/IP.
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $parsed_home &amp;amp;&amp;amp; $same_host &amp;amp;&amp;amp; isset( $parsed_home['port'] ) &amp;amp;&amp;amp; $parsed_home['port'] === $port {
		return $url;
	}
&lt;/pre&gt;&lt;p&gt;
My patch is a filter in a new conditional just after this penultimate conditional.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>