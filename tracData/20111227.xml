<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #19520 (Display percentage of plugin compatibility when a new WP update is ...) updated</title>
      
        <dc:creator>SecGen</dc:creator>

      <pubDate>Tue, 27 Dec 2011 22:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19520#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19520#comment:2/1325026303396992</guid>
      <description>&lt;p&gt;
Sorry, I forgot to specify. I did indeed mean for installed plugins only.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16461 (CSS3 gradient replacements for images and rework existing) updated</title>
      
        <dc:creator>cyberskull</dc:creator>

      <pubDate>Tue, 27 Dec 2011 21:49:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16461#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16461#comment:34/1325022547778901</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16461#comment:33" title="Comment 33"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19233" title="#19233: enhancement: When using CSS Background Gradients in the Admin UI, begin to use IE ... (closed: wontfix)"&gt;#19233&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Quote by duck:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Per  &lt;a class="ext-link" href="http://dev.w3.org/csswg/css3-images/#linear-gradient-syntax"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://dev.w3.org/csswg/css3-images/#linear-gradient-syntax&lt;/a&gt; should the "proposed W3C Markup" rule use "to top"?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am personally against using that syntax. More syntax means it will be more prone to breaking.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17462 (Improve cron locking) reopened</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Tue, 27 Dec 2011 21:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17462#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17462#comment:20/1325022529027832</guid>
      <description>&lt;p&gt;
I don't think the bug is fixed. After posting a new post, I experienced a load spike (2 -&amp;gt; 20) and found this in the server status: &lt;a class="ext-link" href="http://minus.com/m1VuUQcxP"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://minus.com/m1VuUQcxP&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://farm8.staticflickr.com/7019/6583909247_5dc4bc1917_b.jpg"&gt;&lt;img src="http://farm8.staticflickr.com/7019/6583909247_5dc4bc1917_b.jpg" alt="http://farm8.staticflickr.com/7019/6583909247_5dc4bc1917_b.jpg" crossorigin="anonymous" title="http://farm8.staticflickr.com/7019/6583909247_5dc4bc1917_b.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #15657 (wp_strip_all_tags causes paragraphs to run together) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Tue, 27 Dec 2011 20:49:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15657#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15657#comment:8/1325018970744713</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15657#comment:7" title="Comment 7"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
'wp_strip_all_tags()' is intended as fix/replacement for PHP's &lt;code&gt;strip_tags()&lt;/code&gt;. If we need to pre-process RSS feeds perhaps we should make another function specifically for that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp_strip_all_tags&lt;/code&gt; isn't used solely for RSS and Atom feeds, it's used indirectly by anything that wants &lt;code&gt;the_excerpt&lt;/code&gt; and is also used by other plugins, e.g., Simple Facebook Connect uses it when cross-posting to Facebook (since their API only allows plain-text).
&lt;/p&gt;
&lt;p&gt;
It seems to me that in any context where you're converting multi-line HTML to plain-text, converting paragraphs to newlines is an eminently sensible thing to do. I can't imagine why you'd want the original PHP &lt;code&gt;strip_tags&lt;/code&gt; behavior at all, frankly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18218 (Too many similar translation string) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Tue, 27 Dec 2011 20:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18218#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18218#comment:20/1325018302967033</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Tue, 27 Dec 2011 19:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:34/1325015123242417</guid>
      <description>&lt;p&gt;
I tested mentioned plugin and encountered great memory gains. My WP website with installed plugin used 28 MB memory and without this plugin more than 34 MB. This problem is real pain for localized versions, because there are more and more strings with every new release...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17807 (get_adjacent_post() doesn't work with custom taxonomies) updated</title>
      
        <dc:creator>ZaneMatthew</dc:creator>

      <pubDate>Tue, 27 Dec 2011 19:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17807#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17807#comment:29/1325014359088918</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19621 (Cron not working in WP 3.3) updated</title>
      
        <dc:creator>TKornik</dc:creator>

      <pubDate>Tue, 27 Dec 2011 19:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19621#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19621#comment:4/1325013390220954</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It seems like the cron is firing but it fails to publish scheduled posts here. All of them get 'missed schedule' and remain scheduled past time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19675 (Add a jQuery triggers to the widget save action) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 27 Dec 2011 19:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19675#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19675#comment:1/1325013345201959</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19651 (Fatal error for new installs after r19602) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 27 Dec 2011 18:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19651#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19651#comment:4/1325012337737539</guid>
      <description>&lt;p&gt;
I think we might need to go to dirname() to be fully compatible. Otherwise there's little point in including option.php from functions.php if it doesn't work out of the box in the current setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 27 Dec 2011 18:53:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:33/1325011985152486</guid>
      <description>&lt;p&gt;
I closed &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wp-performance-gettext-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wp-performance-gettext-patch/&lt;/a&gt; for download as it applies a patch to core, which is dangerous and an all-around bad idea. Its source is still viewable and accessible &lt;a class="ext-link" href="http://plugins.svn.wordpress.org/wp-performance-gettext-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;in SVN&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>linushoppe</dc:creator>

      <pubDate>Tue, 27 Dec 2011 18:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:32/1325010784496829</guid>
      <description>&lt;p&gt;
xeno010, can you please explain what "other minor changes" your plugin has and why you've added caching? As far as I know, gettext itself has an own cache-implementation.
Besides, installing a plugin is not as powerful as patching the wordress-sourcecode and only some users would profit from the changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 27 Dec 2011 18:23:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:21/1325010212655756</guid>
      <description>&lt;p&gt;
The code in comment 8 could be rewritten as such:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$priority = remove_filter( 'the_content', 'wptexturize' );
$text = apply_filters( 'the_content', $text );
if ( false !== $priority )
	add_filter( 'the_content', 'wptexturize', $priority );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19651 (Fatal error for new installs after r19602) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 27 Dec 2011 18:04:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19651#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19651#comment:3/1325009087671788</guid>
      <description>&lt;p&gt;
There are probably still some plugins that load wp-config.php instead of wp-load.php.  Perhaps define WPINC in the else condition in wp-load.php and leave the definition in wp-settings.php?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19675 (Add a jQuery triggers to the widget save action) created</title>
      
        <dc:creator>digitalnature</dc:creator>

      <pubDate>Tue, 27 Dec 2011 18:02:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19675</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19675/1325008972454493</guid>
      <description>&lt;p&gt;
Line 241 (widgets.dev.js):
&lt;/p&gt;
&lt;pre class="wiki"&gt;$(document).trigger('saved_widget);
&lt;/pre&gt;&lt;p&gt;
or something...
&lt;/p&gt;
&lt;p&gt;
This way we could nicely hook our own js on that "saved_widget" event, instead of stuffing our js inside the widget form function.
&lt;/p&gt;
&lt;p&gt;
This is relevant for all events created by WordPress in the administration area, not just widget-save.
&lt;/p&gt;
&lt;p&gt;
Think of it like "add_action" for javascript...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Tue, 27 Dec 2011 18:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:20/1325008968647344</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19550#comment:19" title="Comment 19"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm wondering whether this is sufficient. While it will not catch *every* instance, it will catch all relevant core instances to dealing with content:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I have written a &lt;a class="ext-link" href="https://gist.github.com/982554"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plugin&lt;/a&gt; like this some time ago. It doesn’t catch the problem &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/19550?replyto=19#comment:8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;@jwz mentioned&lt;/a&gt; and of course not the hard coded calls. The new hook would help to enforce a consistent behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 27 Dec 2011 17:55:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:19/1325008555111111</guid>
      <description>&lt;p&gt;
I'm wondering whether this is sufficient. While it will not catch *every* instance, it will catch all relevant core instances to dealing with content:
&lt;/p&gt;
&lt;pre class="wiki"&gt;foreach ( array( 'the_title', 'the_content', 'the_excerpt',
		'comment_text', 'list_cats', 'comment_author',
		'term_name', 'link_name', 'link_description',
		'link_notes', 'bloginfo', 'wp_title', 'widget_title',
		'term_description'
	) as $filter )
		remove_filter( $filter, 'wptexturize' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19550.diff attached to Ticket #19550</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 27 Dec 2011 17:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19550/19550.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19550/19550.diff/1325008280060574</guid>
      <description>&lt;p&gt;
A run-once filter.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19549 (Please remove X-Mailer from class-phpmailer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 27 Dec 2011 17:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19549#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19549#comment:5/1325008087030681</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have to agree with jwz. This is pretty lame.
&lt;/p&gt;
&lt;p&gt;
This branding is a side effect of using a third-party library. Looking at the code, there's no way for us to overload and remove these headers without just hacking their core file. (Which I'm not objecting to.)
&lt;/p&gt;
&lt;p&gt;
PHPMailer has been taken over and forked onto Google Code, so 5.1 is no longer the latest version.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="http://phpmailer.worxware.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the announcement&lt;/a&gt;, &lt;a class="ext-link" href="http://code.google.com/a/apache-extras.org/p/phpmailer/source/list"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the new repo on Google Code&lt;/a&gt;, &lt;a class="ext-link" href="http://sourceforge.net/projects/phpmailer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the old repo on SourceForge&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
5.2 introduces an &lt;code&gt;$this-&amp;gt;XMailer&lt;/code&gt; property, that when set will work in place of the PHPMailer one. X-Priority remains overridable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19674 (Do not prefix wp_title() with spaces if $sep is empty) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 27 Dec 2011 17:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19674#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19674#comment:1/1325006902682984</guid>
      <description>&lt;p&gt;
Wondering if one space might still be expected by themes. For example, if bloginfo('name') is used before wp_title(&lt;em&gt;);
&lt;/em&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 27 Dec 2011 16:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:7/1325004971200678</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19666#comment:5" title="Comment 5"&gt;mrclay&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
19666.patch adds an onBeforeSetContent handler to TinyMCE...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, ideally this should be fixed upstream but we could add a workaround for now. The place for this would be inside the "wordpress" MCE plugin. We shouldn't use the 'init.setup = function()...` method as it could be overwritten by another WP plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15657 (wp_strip_all_tags causes paragraphs to run together) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 27 Dec 2011 16:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15657#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15657#comment:7/1325004228689988</guid>
      <description>&lt;p&gt;
'wp_strip_all_tags()' is intended as fix/replacement for PHP's &lt;code&gt;strip_tags()&lt;/code&gt;. If we need to pre-process RSS feeds perhaps we should make another function specifically for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19598 (Text inputs for code or URLs should be LTR) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 27 Dec 2011 16:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19598#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19598#comment:5/1325002685551840</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19598#comment:4" title="Comment 4"&gt;georgestephanis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should the html side of the &lt;code&gt;wp_editor&lt;/code&gt; output also be LTR?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's an interesting question. It is for HTML code but is also used as a "normal" text entry field. Perhaps we need more comments from native RTL language speakers :)
&lt;/p&gt;
&lt;p&gt;
Another option would be to have RTL toggle button similar to the visual editor (that would toggle it for the whole textarea).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17863 (HTML5 input type=number in admin settings) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 27 Dec 2011 16:10:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17863#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17863#comment:12/1325002217646431</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17863#comment:11" title="Comment 11"&gt;georgestephanis&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thinking we should make this IE8 no-js compatible, perhaps adding a class with the input type and styling on that. So instead of &lt;code&gt;input[type="number"]&lt;/code&gt; we would do &lt;code&gt;input.number&lt;/code&gt;, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17863 (HTML5 input type=number in admin settings) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 27 Dec 2011 15:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17863#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17863#comment:11/1324998969996775</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
CC'ing myself as a reminder to go through and submit a patch for 3.4 to migrate input types across to HTML5 standards.
&lt;/p&gt;
&lt;p&gt;
They also do really good things for Mobile Browsers (more useful keyboards and the like)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19598.3.diff attached to Ticket #19598</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 27 Dec 2011 14:51:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19598/19598.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19598/19598.3.diff/1324997488383105</guid>
      <description>&lt;p&gt;
Patch with revision to class-wp-editor.php to add &lt;code&gt;code&lt;/code&gt; class to the wp-editor textarea to make it ltr.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19598 (Text inputs for code or URLs should be LTR) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 27 Dec 2011 14:46:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19598#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19598#comment:4/1324997207704775</guid>
      <description>&lt;p&gt;
Should the html side of the &lt;code&gt;wp_editor&lt;/code&gt; output also be LTR?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19598.2.diff attached to Ticket #19598</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 27 Dec 2011 14:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19598/19598.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19598/19598.2.diff/1324997153536250</guid>
      <description>&lt;p&gt;
Revised patch, tidying up/unifying how it does ltr for the code editor textareas.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19598 (Text inputs for code or URLs should be LTR) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 27 Dec 2011 14:35:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19598#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19598#comment:3/1324996520148961</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I had to add the &lt;code&gt;code&lt;/code&gt; class to an input field or three, and just hit the doc functions list by its existing id.  But it looks good now -- my only concern would be that there is some other input.code that it shouldn't hit -- but if it has .code, it should?  Anyway, patch attached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19598.diff attached to Ticket #19598</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 27 Dec 2011 14:32:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19598/19598.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19598/19598.diff/1324996357998793</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19598 (Text inputs for code or URLs should be LTR) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 27 Dec 2011 14:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19598#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19598#comment:2/1324995516947471</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
input.code { direction: ltr; }
&lt;/p&gt;
&lt;p&gt;
I'm patching it (or something similar) into the rtl css now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Tue, 27 Dec 2011 13:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:18/1324993982952065</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19550#comment:12" title="Comment 12"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking again through this ticket, I still haven't heard an actual use-case for disabling wptexturize().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If what you're asking is "why do I want to disable wptexturize?", I thought that would be obvious.  That function does certain things -- namely taking the characters that I typed, and turning them into other characters -- and I don't want that. I want to see the characters I actually typed instead.
&lt;/p&gt;
&lt;p&gt;
I'm not nitpicking just about how it's translating my quotes, or whether one particular hyphen is being rewritten right.  I want it keep its hands completely off of my text. If I had wanted curly quotes then that's what I would have typed.
&lt;/p&gt;
&lt;p&gt;
If other people want that, great. But please don't force this "feature" on me with no reasonable way to disable it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19672 (WP cannot be loaded through function because of variable scope) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 27 Dec 2011 11:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19672#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19672#comment:2/1324984160476007</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19672#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This has already been taken care of in WP 3.3: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17749" title="#17749: feature request: Faster and phpunit runner-compatible unit tests (closed: fixed)"&gt;#17749&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, 3.4: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19456" title="#19456: defect (bug): Globalize $wp_rewrite in wp-settings.php (closed: fixed)"&gt;#19456&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Tue, 27 Dec 2011 10:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:17/1324983262222407</guid>
      <description>&lt;p&gt;
&lt;code&gt;apply_filters()&lt;/code&gt; is called in this function anyway – so there are no measurable page load costs (do I miss anything?). Checking side effects is up to those who use the filter. The output of &lt;code&gt;wptexturize()&lt;/code&gt; is already different for each language.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 27 Dec 2011 10:26:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:16/1324981568244328</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19550#comment:15" title="Comment 15"&gt;toscho&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And it doesn’t hurt anyone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes it does; each extra filter adds a tiny bit of overhead, both in terms of page load and of maintenance cost.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Tue, 27 Dec 2011 10:18:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:15/1324981094499880</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19550#comment:14" title="Comment 14"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It sounds like your problems with the function might be things which you should focus on improving, rather than attempting to remove it entirely (which.. Isn't going to happen IMO)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Of course, the details should be improved, and the function should not be removed. :)
&lt;/p&gt;
&lt;p&gt;
The performance issues are caused by the regexes, I don’t see how to fix that.
&lt;/p&gt;
&lt;p&gt;
The patch just gives more control for those who think they may need it. And it doesn’t hurt anyone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 27 Dec 2011 09:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:14/1324978046643294</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
wptexturize() changes quotations, link titles, samp and var by default.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It sounds like your problems with the function might be things which you should focus on improving, rather than attempting to remove it entirely (which.. Isn't going to happen IMO)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Tue, 27 Dec 2011 09:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:13/1324977335311526</guid>
      <description>&lt;p&gt;
wptexturize() changes quotations, link titles, &lt;code&gt;samp&lt;/code&gt; and &lt;code&gt;var&lt;/code&gt; by default. Yes, you can filter each case, but if you don’t need the function at all? Plus, it is rather slow.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/pEtYM.png"&gt;&lt;img src="http://i.imgur.com/pEtYM.png" alt="http://i.imgur.com/pEtYM.png" crossorigin="anonymous" title="http://i.imgur.com/pEtYM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As @jwz explained: Sometimes you just cannot remove the function from a hook – a plugin may re-add it. So I see use cases here, and the additional hook doesn’t cost that much. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19672 (WP cannot be loaded through function because of variable scope) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 27 Dec 2011 07:57:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19672#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19672#comment:1/1324972676521968</guid>
      <description>duplicate: &lt;p&gt;
This has already been taken care of in WP 3.3: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17749" title="#17749: feature request: Faster and phpunit runner-compatible unit tests (closed: fixed)"&gt;#17749&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 27 Dec 2011 07:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:12/1324972285610919</guid>
      <description>&lt;p&gt;
Looking again through this ticket, I still haven't heard an actual use-case for disabling wptexturize().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>jkudish</dc:creator>

      <pubDate>Tue, 27 Dec 2011 06:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:5/1324968575146624</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15098 (Can't add post with featured image using only XML-RPC) updated</title>
      
        <dc:creator>isaackeyet</dc:creator>

      <pubDate>Tue, 27 Dec 2011 06:48:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15098#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15098#comment:12/1324968509407697</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19674.patch attached to Ticket #19674</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Dec 2011 05:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19674/19674.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19674/19674.patch/1324962879722950</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19674 (Do not prefix wp_title() with spaces if $sep is empty) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Dec 2011 05:14:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19674</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19674/1324962863597109</guid>
      <description>&lt;ol&gt;&lt;li&gt;Add &lt;code&gt;wp_title('')&lt;/code&gt; to &lt;code&gt;header.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Notice two spaces before the title:
&lt;pre class="wiki"&gt;&amp;lt;title&amp;gt;  Hello World&amp;lt;/title&amp;gt;
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This was previously brought up in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7114" title="#7114: enhancement: do not add whitespace to sep in wp_title() (closed: wontfix)"&gt;#7114&lt;/a&gt;, but the fix suggested there wasn't backward compatible.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19673 (Move iPhone CSS from wp-login.php to wp-admin.css) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Dec 2011 03:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19673#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19673#comment:1/1324957193196993</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19673/19673.patch" title="Attachment '19673.patch' in Ticket #19673"&gt;19673.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19673/19673.patch" title="Download"&gt;​&lt;/a&gt; uses &lt;code&gt;iphone&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
I've noticed that Toolbar uses &lt;code&gt;mobile&lt;/code&gt; (doesn't seem to be used anywhere else in core though):&lt;br /&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3/wp-includes/class-wp-admin-bar.php#L322"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.3/wp-includes/class-wp-admin-bar.php#L322&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Not sure which one is better (&lt;code&gt;iphone&lt;/code&gt; looks more descriptive), but it would probably make sense to be consistent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19673.patch attached to Ticket #19673</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Dec 2011 03:31:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19673/19673.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19673/19673.patch/1324956669703927</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19673 (Move iPhone CSS from wp-login.php to wp-admin.css) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Dec 2011 03:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19673</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19673/1324956653720527</guid>
      <description>&lt;p&gt;
There are some iPhone-specific CSS rules in &lt;code&gt;wp-login.php&lt;/code&gt;:&lt;br /&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3/wp-login.php#L67"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.3/wp-login.php#L67&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp-admin.css&lt;/code&gt; seems to be a more appropriate place for them.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10023" title="#10023: task (blessed): Give login screen proper iPhone viewport (closed: fixed)"&gt;#10023&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19331" title="#19331: defect (bug): Login screen isn't centered on iPhone (closed: fixed)"&gt;#19331&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19658 (action hooks for after_title and after_editor needed to utiliize wp_editor) updated</title>
      
        <dc:creator>wpsmith</dc:creator>

      <pubDate>Tue, 27 Dec 2011 03:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19658#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19658#comment:5/1324956273163755</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19672 (WP cannot be loaded through function because of variable scope) created</title>
      
        <dc:creator>uuf6429</dc:creator>

      <pubDate>Tue, 27 Dec 2011 03:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19672</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19672/1324955909621151</guid>
      <description>&lt;p&gt;
WP uses variable scope extensively to deliver some global variables like $wp and $wp_rewrite.
&lt;/p&gt;
&lt;p&gt;
These variables are set inside wp-settings.php and assumed that the file has been included from global context.
&lt;/p&gt;
&lt;p&gt;
Because of this assumption, wordpress cannot be loaded from a localized scope (such as a function).
&lt;/p&gt;
&lt;p&gt;
Something like this fails:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function loadWP(){
    include 'wordpress/index.php';
}
loadWP(); // fails
include 'wordpress/index.php'; // works (assuming current file was included globally)
&lt;/pre&gt;&lt;p&gt;
The first error reported is "Fatal Error: Call to a member function add_rewrite_tag() on a non-object", but this gets worse when more things dependent on these global variables simply fail.
&lt;/p&gt;
&lt;p&gt;
SOLUTION
&lt;/p&gt;
&lt;p&gt;
The solution is to specifically tell PHP these variables are globals. This should be done in wp-settings.php by adding the following:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; global $wp_rewrite; &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Before this line (line 240 in WP 3.3)
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; $wp_rewrite = new WP_Rewrite(); &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Presumably, instead you would want to have a single line at the beginning of the file like so:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; global $wp_the_query, $wp_query, $wp_rewrite, $wp; &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Chris.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18962 (Allow duplicate slugs for different content) updated</title>
      
        <dc:creator>hearvox</dc:creator>

      <pubDate>Tue, 27 Dec 2011 00:17:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18962#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18962#comment:5/1324945056454040</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18962 (Allow duplicate slugs for different content) updated</title>
      
        <dc:creator>hearvox</dc:creator>

      <pubDate>Tue, 27 Dec 2011 00:16:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18962#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18962#comment:4/1324945015440002</guid>
      <description>&lt;p&gt;
You can use the same slug in multiple hierarchical post types, but only for a page that is NOT top-level, AND NOT the same level w/in the same post type.
&lt;/p&gt;
&lt;p&gt;
The function wp_unique_post_slug() disallows identical slugs for the same post_parent. and since all top-level pages of heirarchical pages have a [post_parent] =&amp;gt; 0, they can't have the same slug.
&lt;/p&gt;
&lt;p&gt;
Not sure if that's intentional, but it is the result. Been testing it lately, here's the URLs possible:
&lt;/p&gt;
&lt;p&gt;
/test/
&lt;/p&gt;
&lt;p&gt;
/test/test/
&lt;/p&gt;
&lt;p&gt;
/test/test-2/
&lt;/p&gt;
&lt;p&gt;
/test/test/test/
&lt;/p&gt;
&lt;p&gt;
/cpt-name/test-2/
&lt;/p&gt;
&lt;p&gt;
/cpt-name/test-2/test/
&lt;/p&gt;
&lt;p&gt;
All the above "test" slugs have a different [post_parent], so the identical slug is allowed. All the above "test-2" slugs had the same parent as another "test" slug, so the "-2" was added.
&lt;/p&gt;
&lt;p&gt;
In the case of "/cpt-name/test-2/" the post_parent was 0, same as "/test/", so its slug got a "-2."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19549 (Please remove X-Mailer from class-phpmailer) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 23:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19549#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19549#comment:4/1324940868010569</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19549#comment:3" title="Comment 3"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;wp_mail&lt;/code&gt; filter doesn't help, since that only lets me alter the arguments that WordPress passed in.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;phpmailer_init&lt;/code&gt; action does not let me alter the raw message produced by PHPMailer; it only lets me set some values in the &lt;code&gt;$phpmailer&lt;/code&gt; object.
&lt;/p&gt;
&lt;p&gt;
I guess I could just do &lt;code&gt;$phpmailer-&amp;gt;Version = "0.0.0"&lt;/code&gt; in that action to obfuscate it, but it doesn't let me do what I actually want to do: completely omit the "X-Mailer" and "X-Priority" headers.
&lt;/p&gt;
&lt;p&gt;
If there was a hook inside of &lt;code&gt;Send()&lt;/code&gt; that let me alter &lt;code&gt;$header&lt;/code&gt; before &lt;code&gt;SendmailSend&lt;/code&gt;, &lt;code&gt;SmtpSend&lt;/code&gt; or &lt;code&gt;MailSend&lt;/code&gt; were called, that would let me do what I want.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 23:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:11/1324940771576871</guid>
      <description>&lt;p&gt;
To disable wptexturize() globally now use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'do_texturize', '__return_false' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>patch-wptexturize.patch attached to Ticket #19550</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 23:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19550/patch-wptexturize.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19550/patch-wptexturize.patch/1324940584960198</guid>
      <description>&lt;p&gt;
Add 'do_texturize' filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:10/1324939229799225</guid>
      <description>&lt;p&gt;
Sure, that'd work for me...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:9/1324939076796334</guid>
      <description>&lt;p&gt;
Good point.
&lt;/p&gt;
&lt;p&gt;
What if we extend just the function?
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wptexturize($text) {
	$do_texturize = apply_filters( 'do_texturize', TRUE, $text );
	if ( ! $do_texturize )
		return $text;
	global $wp_cockneyreplace;
&lt;/pre&gt;&lt;p&gt;
Then you could disable wptexturize() case by case. More context for the filter would be better, of course …
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15657 (wp_strip_all_tags causes paragraphs to run together) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:35:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15657#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15657#comment:6/1324938902950904</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15657#comment:4" title="Comment 4"&gt;trepmal&lt;/a&gt;:
Right you are, I think this is a better version (compress incoming whitespace, don't leave beginning- and end-of-line spaces when emitting newlines):
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_strip_all_tags_patched($string, $remove_breaks = false) {
	$string = preg_replace('/[\r\n\t ]+/', ' ', $string);
	$string = preg_replace( '@&amp;lt;(script|style)[^&amp;gt;]*?&amp;gt;.*?&amp;lt;/\\1&amp;gt;@si', '', $string );
	$string = preg_replace( '@ *&amp;lt;/?\s*(P|UL|OL|DL|BLOCKQUOTE)\b[^&amp;gt;]*?&amp;gt; *@si', "\n\n", $string );
	$string = preg_replace( '@ *&amp;lt;(BR|DIV|LI|DT|DD|TR|TD|H\d)\b[^&amp;gt;]*?&amp;gt; *@si', "\n", $string );
	$string = preg_replace( "@\n\n\n+@si", "\n\n", $string );
	$string = strip_tags( $string );
	if ( $remove_breaks )
		$string = preg_replace('/[\r\n\t ]+/', ' ', $string);
	return trim( $string );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:25:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:12/1324938334879858</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Currently we do this for IE8 &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/template.php#L1652"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/template.php#L1652&lt;/a&gt;. Can add IE9 and perhaps 10 when it comes out. IE7 is still loading ie.css which seems the sensible thing to do until we drop support for it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah this ticket is talking about for the front-end, not backend.
&lt;/p&gt;
&lt;p&gt;
Here's what TwentyEleven does to get the IE class using conditional templates, it's fully caching-compliant too and doesn't require extra stylesheets: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-content/themes/twentyeleven/header.php#L11"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-content/themes/twentyeleven/header.php#L11&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:22:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:6/1324938151473511</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>jwz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 22:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:8/1324937276915251</guid>
      <description>&lt;p&gt;
The problem isn't just direct calls to wptexturize, it's things like this that occur in other plugins that are *also* trying to get around the effects of wptexturize, for example, Otto's Simple Facebook Connect does:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	remove_filter( 'the_content', 'wptexturize' );
	$text = apply_filters('the_content', $text);
	add_filter( 'the_content', 'wptexturize' );
&lt;/pre&gt;&lt;p&gt;
If wptexturize was a pluggable function that I could turn into a no-op, it wouldn't matter to me that random plugins re-add it to the_content filter because they think I want it there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:11/1324935183128889</guid>
      <description>&lt;p&gt;
@azaozz - I was referring to the very beginning of the ticket as body_class() is required for themes submitted in WPORG. Therefore, for easier and standardized compatibility, my idea was extending body_class() (or now, creating html_class() for example) that could be a requirement that helps browser compatibility settings.
&lt;/p&gt;
&lt;p&gt;
However, as I see I'm still going to use filters for this, thanks for the heads up guys.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19541 (wp_admin_bar_new_content_menu does not respect menu_position) updated</title>
      
        <dc:creator>tar.gz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19541#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19541#comment:3/1324935150166740</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:10/1324935023351652</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:7" title="Comment 7"&gt;nofearinc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From what I see this is used for thickbox iframes and is already part of the core. Still doesn't make any sense to add it to the html or body tag by default?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is used everywhere in the admin except when showing specific error pages like errors while installing, etc. where we don't have access to all code (and don't queue styles). I'm not sure what you mean by "Still doesn't make any sense to add it to the html or body tag by default?" :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:9/1324934461550324</guid>
      <description>&lt;p&gt;
I did indeed. Just brainstorming on latest comments by azaozz and getting updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:8/1324934355038890</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:7" title="Comment 7"&gt;nofearinc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From what I see this is used for thickbox iframes and is already part of the core. Still doesn't make any sense to add it to the html or body tag by default?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The thickbox is part of the admin, which is never cached.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This could save several conditional checks in the header calls and external files as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You didn't read toscho's comment, did you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:5/1324934226520862</guid>
      <description>&lt;p&gt;
19666.patch adds an onBeforeSetContent handler to TinyMCE that converts newlines to BRs inside PREs just before content is added to the editor. You can see how this fixes the behavior in &lt;a class="ext-link" href="http://fiddle.tinymce.com/cAaaab"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this fiddle&lt;/a&gt;. wp-admin/js/editor.js removes these before POSTing or switching editors, so I think this should not add side-effects.
&lt;/p&gt;
&lt;p&gt;
BTW I was able to fix this during switching in editor.js, but this still did not cover the case of when the Visual editor is initialized on page load. The tinyMCE event handler covers both cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:7/1324933862286400</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
From what I see this is used for thickbox iframes and is already part of the core. Still doesn't make any sense to add it to the html or body tag by default?
&lt;/p&gt;
&lt;p&gt;
This could save several conditional checks in the header calls and external files as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19666.patch attached to Ticket #19666</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 26 Dec 2011 21:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19666/19666.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19666/19666.patch/1324933759397217</guid>
      <description>&lt;p&gt;
patch for issue 19666: /wp-includes/class-wp-editor.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15098 (Can't add post with featured image using only XML-RPC) updated</title>
      
        <dc:creator>trusktr</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15098#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15098#comment:11/1324933089375846</guid>
      <description>&lt;p&gt;
I can't wait for featured images via the android app. :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:6/1324933046563259</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Currently we do this for IE8 &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/template.php#L1652"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/template.php#L1652&lt;/a&gt;. Can add IE9 and perhaps 10 when it comes out. IE7 is still loading ie.css which seems the sensible thing to do until we drop support for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19671 (Only retrieve categories list if post type supports categories) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19671#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19671#comment:1/1324931064402239</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>category-template.diff attached to Ticket #19671</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:02:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19671/category-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19671/category-template.diff/1324929776879287</guid>
      <description>&lt;p&gt;
attempt to fetch categories if categories applicable for post type
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19671 (Only retrieve categories list if post type supports categories) created</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Mon, 26 Dec 2011 20:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19671</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19671/1324929744070756</guid>
      <description>&lt;p&gt;
The &lt;code&gt;get_the_category_list&lt;/code&gt; function attempts to pull a list of categories before it checks if a category relationship applies to the current &lt;code&gt;post_type&lt;/code&gt;. Attached patch moves the category retrieval down a few lines: after we've determined a category relationship could exist.
&lt;/p&gt;
&lt;h3 id="Before"&gt;Before&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Fetch and assign all categories to a variable
&lt;/li&gt;&lt;li&gt;Test if post type uses categories
&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="After"&gt;After&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Test if post type uses categories
&lt;/li&gt;&lt;li&gt;Fetch and assign all categories to a variable
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Saves fetch time and filtering for post types without a category relationship.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 19:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:5/1324926455158834</guid>
      <description>wontfix: &lt;p&gt;
Yes, I haven't thought about caching. Plugins like WP Super Cache simply couldn't work, since the page would have to be generated dynamically for each user.
&lt;/p&gt;
&lt;p&gt;
So, this is not something we should include in Core, especially since it's possible to do with a filter.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14877 (Ability to create exclusive custom taxonomies) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Mon, 26 Dec 2011 17:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14877#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14877#comment:18/1324921466118010</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 17:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:4/1324921059384948</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19669#comment:3" title="Comment 3"&gt;nofearinc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
conditional are standard for including scripts, but including files with 3-10 lines of CSS styling might be an overhead in my opinion (using combine scripts could be a solution here).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Don’t include separate CSS files, &lt;a class="ext-link" href="http://toscho.de/2010/wordpress-internet-explorer-ohne-css-hacks-ansprechen/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;add class names to the HTML element&lt;/a&gt; and use separate &lt;em&gt;selectors&lt;/em&gt; in your stylesheet. Content-Negotiation is tricky. Getting it right with local caches and remote proxy servers is more work than most people imagine. Avoid it whenever possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18179 (WP_Meta_Box) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Mon, 26 Dec 2011 17:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18179#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18179#comment:48/1324920594251540</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 17:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:3/1324919102438940</guid>
      <description>&lt;p&gt;
I don't really mind checking for the user agent string. There are different tools and plugins checking for compatibility etc that represent themselves for other browsers - so why should it be wrong this way?
&lt;/p&gt;
&lt;p&gt;
@toscho - haven't thought about this - conditional are standard for including scripts, but including files with 3-10 lines of CSS styling might be an overhead in my opinion (using combine scripts could be a solution here).
&lt;/p&gt;
&lt;p&gt;
I don't see any difference between setting the ID in html tag or placing it in the body. Probably I lack seniority in caching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 26 Dec 2011 16:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:2/1324918790423060</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This would interfere with caching plugins. Check for features, not for UA strings. Conditional comments are the way to go, as @scribu suggested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 26 Dec 2011 15:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:4/1324912159936331</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://www.tinymce.com/develop/bugtracker_view.php?id=4918"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TinyMCE bug filed&lt;/a&gt;. As I noted there, this behavior might be due to the improvements in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16394" title="Remove invalid parent paragraph when pasting in the visual editor or ..."&gt;[16394]&lt;/a&gt;. Namely, if the JS version of wpautop was incorrectly converting PRE newlines to BRs before switching to the Visual editor, these BRs were working around the TinyMCE bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19670.patch attached to Ticket #19670</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 15:08:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19670/19670.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19670/19670.patch/1324912138291714</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19670 (Two notices on wp-signup.php) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 15:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19670</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19670/1324912115085224</guid>
      <description>&lt;ol&gt;&lt;li&gt;Go to wp-signup.php.
&lt;/li&gt;&lt;li&gt;Select "Just a username, please", but leave "Username" and "Email Address" fields blank.
&lt;/li&gt;&lt;li&gt;See the notices:
&lt;pre class="wiki"&gt;Notice: Undefined offset: 0 in wp-includes/ms-functions.php on line 442
Notice: Undefined index: blog in wp-signup.php on line 260
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The patch also simplifies checkboxes logic a bit.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 14:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:3/1324911013482980</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) updated</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 26 Dec 2011 14:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:2/1324909309169136</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This does not appear to be a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15367" title="#15367: defect (bug): WordPress strips multiple line breaks inside of &amp;lt;pre&amp;gt; tags (closed: fixed)"&gt;#15367&lt;/a&gt;, but it is rather caused by a new TinyMCE bug you can &lt;a class="ext-link" href="http://fiddle.tinymce.com/89aaab"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;see in this fiddle&lt;/a&gt;. I walked through editor.dev.js in a debugger to verify it's handling the markup correctly.
&lt;/p&gt;
&lt;p&gt;
I'm reporting it to TinyMCE now, but I think this will certainly cause problems for up-to-date WP users in the meantime.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>mcgaritydotme</dc:creator>

      <pubDate>Mon, 26 Dec 2011 13:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:4/1324907061629305</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 13:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669#comment:1/1324906173309611</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Such a browser class would depend on the user agent string, which is not always accurate.
&lt;/p&gt;
&lt;p&gt;
If you want to target IE versions, a more reliable method is employed in the Twentyeleven theme, using conditional comments:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.3/wp-content/themes/twentyeleven/header.php#L12"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.3/wp-content/themes/twentyeleven/header.php#L12&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19669 (body_class - add browser class to the body) created</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 26 Dec 2011 13:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19669</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19669/1324904559778620</guid>
      <description>&lt;p&gt;
I didn't find this request with the search so apologies if it has already been discussed here.
&lt;/p&gt;
&lt;p&gt;
My request is for adding browser class to the body_class function. I think it would be useful core functionality and I have used this one via external scripts. No extra ie8.css and ie9.css files would be needed and several CSS declarations could be listed separated with commas in the main css files. One great idea as &lt;a class="ext-link" href="http://www.nathanrice.net/blog/browser-detection-and-the-body_class-function/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;listed in this blog&lt;/a&gt; is what I recall.
&lt;/p&gt;
&lt;p&gt;
Browsed through the body_class function and down there but haven't found any resolution in the repository.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17301 (Keep the connection open when doing upgrades or long-running operations) updated</title>
      
        <dc:creator>hubertnguyen</dc:creator>

      <pubDate>Mon, 26 Dec 2011 12:48:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17301#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17301#comment:3/1324903695763246</guid>
      <description>&lt;p&gt;
Small note: the "Smush.it bulk" process does it really well. I tried on RackSpace Cloudsites, and it never times out, I left the process run for more than 45mn. Hope that Wordpress Core and plug-in update will never time out in the near future :)
&lt;/p&gt;
&lt;p&gt;
/wp-admin/upload.php?page=wp-smushit-bulk
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19659 (using %tags% in permalinks doesn't work) updated</title>
      
        <dc:creator>hubertnguyen</dc:creator>

      <pubDate>Mon, 26 Dec 2011 12:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19659#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19659#comment:4/1324903442932486</guid>
      <description>&lt;p&gt;
dd32 - I'll do that next time. I didn't think that I should edit it without being 100% sure first. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19668.after.png attached to Ticket #19668</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19668/19668.after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19668/19668.after.png/1324899478194234</guid>
      <description>&lt;p&gt;
With 19668.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19668.patch attached to Ticket #19668</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19668/19668.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19668/19668.patch/1324899462937553</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>19668.wp33.png attached to Ticket #19668</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19668/19668.wp33.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19668/19668.wp33.png/1324899453680124</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>19668.wp32.png attached to Ticket #19668</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19668/19668.wp32.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19668/19668.wp32.png/1324899445109410</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19668 ("Remember Me" checkbox is slightly off in Opera and Chrome) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 11:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19668</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19668/1324899436418157</guid>
      <description>&lt;p&gt;
See the screenshots. Introduced during CSS merge, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18959" title="Bottom out checkboxes and radio buttons (seems to line them up nicely ..."&gt;[18959]&lt;/a&gt; in particular.
&lt;/p&gt;
&lt;p&gt;
The patch makes the checkbox look consistent in Firefox 9, Chrome 16, Opera 11.60, IE 8.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18740" title="#18740: defect (bug): Login form looks janky (closed: fixed)"&gt;#18740&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19319" title="#19319: defect (bug): Restore line height for &amp;#34;Log In&amp;#34; button (closed: fixed)"&gt;#19319&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:20/1324884728207123</guid>
      <description>&lt;p&gt;
19627-patch1.diff is an example of the latter. It allows a theme to register that it is optimized to be used with a static front page template by appending the following line to the theme's style.css file:
&lt;/p&gt;
&lt;p&gt;
Front Page: static
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19627-patch1.diff attached to Ticket #19627</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19627/19627-patch1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19627/19627-patch1.diff/1324884692192218</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19659 (using %tags% in permalinks doesn't work) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19659#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19659#comment:3/1324883777728667</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The codex would let one think otherwise:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The codex is a wiki, anyone can add/edit/update the documentation there :)
&lt;/p&gt;
&lt;p&gt;
I've removed the reference to %tag% from there though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19659 (using %tags% in permalinks doesn't work) updated</title>
      
        <dc:creator>hubertnguyen</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19659#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19659#comment:2/1324883527544139</guid>
      <description>&lt;p&gt;
dd32, thanks for confirming. The codex would let one think otherwise:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Using_Permalinks"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Using_Permalinks&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
"You can use these tags to customize your "Pretty" or "Almost Pretty" permalinks. A few hints:"
&lt;/p&gt;
&lt;p&gt;
%tag%
A sanitized version of the tag name (tag slug field on New/Edit Tag panel).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15367 (WordPress strips multiple line breaks inside of &lt;pre&gt; tags) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:09:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15367#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15367#comment:13/1324883397870996</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19666" title="#19666: defect (bug): Switching from HTML to Visual editor removes some line breaks inside PRE (closed: fixed)"&gt;#19666&lt;/a&gt; as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19666 (Switching from HTML to Visual editor removes some line breaks inside PRE) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19666#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19666#comment:1/1324883331296546</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15367" title="#15367: defect (bug): WordPress strips multiple line breaks inside of &amp;lt;pre&amp;gt; tags (closed: fixed)"&gt;#15367&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Mon, 26 Dec 2011 07:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:22/1324882832506563</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
What if we create a _wp_revision_template meta value that is only used and updated by previews?
&lt;/p&gt;
&lt;p&gt;
If it's tied to the post instead of the revision we could only have one per-post, solving the duplicates issue. I'm assuming it's unlikely people would need to store the template per revision or per-preview.
&lt;/p&gt;
&lt;p&gt;
This fixes the need to have meta on revisions, but does open the door for adding excess meta to posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19667 (Allow for wp-config.php to be multiple levels up (for sub-directory ...) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 26 Dec 2011 06:56:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19667#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19667#comment:2/1324882616695986</guid>
      <description>duplicate: &lt;p&gt;
This has been suggested before: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12988" title="#12988: enhancement: Modify wp-load.php to search for wp-config.php 2 directories higher (closed: wontfix)"&gt;#12988&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11895 (Allow more specific image size editing) updated</title>
      
        <dc:creator>goto10</dc:creator>

      <pubDate>Mon, 26 Dec 2011 06:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11895#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11895#comment:10/1324882200408606</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 05:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:19/1324877124008643</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Should it perhaps display a select box with a list of pages to choose from or simply give a notice that the theme is recommended to be used with a static home page and give a link to the reading settings page (similar to how a theme supporting widgets gives a link to configure them)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19667 (Allow for wp-config.php to be multiple levels up (for sub-directory ...) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 05:01:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19667#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19667#comment:1/1324875669303485</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19667 (Allow for wp-config.php to be multiple levels up (for sub-directory ...) created</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Mon, 26 Dec 2011 04:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19667</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19667/1324875326233683</guid>
      <description>&lt;p&gt;
Currently, you can leave wp-config.php in the standard installation directory of WordPress or move it up one level. At work, we generally install WordPress in root and move wp-config.php up one level (out of the servers content directory) for security purposes. It would be nice if we could do this with sub-directory installs as well (e.g. install in /wordpress and put wp-config.php in /../ [2 levels up]).
&lt;/p&gt;
&lt;p&gt;
Perhaps we could use some sort of recursive directory search that starts in the WordPress install directory and continues going up levels until it finds a wp-config.php file (if one exists). There should, of course, be some cut off level to stop searching at. I think that one level above the document root would be sufficient.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>anointed</dc:creator>

      <pubDate>Mon, 26 Dec 2011 02:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:18/1324867834839332</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>