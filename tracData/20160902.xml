<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37553 (Deprecate `wp_get_network()`) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37553#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37553#comment:7/1472860081077062</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38515" title="Multisite: Deprecate `wp_get_network()`.
`wp_get_network()` was ..."&gt;38515&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Deprecate &lt;code&gt;wp_get_network()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_get_network()&lt;/code&gt; was converted into a wrapper for &lt;code&gt;get_network()&lt;/code&gt; in 4.6.0 and can now be deprecated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This moves &lt;code&gt;wp_get_network()&lt;/code&gt; to the bottom of &lt;code&gt;ms-load.php&lt;/code&gt; as &lt;code&gt;ms-deprecated.php&lt;/code&gt; is not available early enough.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props PieWP, flixos90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37553" title="#37553: enhancement: Deprecate `wp_get_network()` (closed: fixed)"&gt;#37553&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38515]: Multisite: Deprecate `wp_get_network()`.  `wp_get_network()` was ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38515</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38515/1472860080593748</guid>
      <description>&lt;p&gt;
Multisite: Deprecate &lt;code&gt;wp_get_network()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_get_network()&lt;/code&gt; was converted into a wrapper for &lt;code&gt;get_network()&lt;/code&gt; in 4.6.0 and can now be deprecated.
&lt;/p&gt;
&lt;p&gt;
This moves &lt;code&gt;wp_get_network()&lt;/code&gt; to the bottom of &lt;code&gt;ms-load.php&lt;/code&gt; as &lt;code&gt;ms-deprecated.php&lt;/code&gt; is not available early enough.
&lt;/p&gt;
&lt;p&gt;
Props PieWP, flixos90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37553" title="#37553: enhancement: Deprecate `wp_get_network()` (closed: fixed)"&gt;#37553&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37553 (Deprecate `wp_get_network()`) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37553#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37553#comment:6/1472859596554202</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37553#comment:5" title="Comment 5"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should there be a comment about why the function is located here rather than with the other deprecated functions?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think we need to do that on each function. It may be worth adding a comment above the first deprecated function in this file, &lt;code&gt;get_current_site_name()&lt;/code&gt;, to indicate that any deprecated functions from &lt;code&gt;ms-load.php&lt;/code&gt; should go here, but that would probably be another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37038 (WP_Tax_Query needs caching) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37038#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37038#comment:6/1472859338254659</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is another good ticket for 4.7. The patch will need updated I think as @boonebgorges  merged the taxonomy id code in another commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Fri, 02 Sep 2016 23:32:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:2/1472859177408737</guid>
      <description>&lt;p&gt;
This should be in 4.7.  What do you think @boonebgorges ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:14/1472856768621093</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38514" title="Embeds: Clarify some assertion failure messages and correct a test URL ..."&gt;38514&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Embeds: Clarify some assertion failure messages and correct a test URL for Twitter timelines.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38514]: Embeds: Clarify some assertion failure messages and correct a test URL ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38514</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38514/1472856768126057</guid>
      <description>&lt;p&gt;
Embeds: Clarify some assertion failure messages and correct a test URL for Twitter timelines.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:13/1472856626782344</guid>
      <description>&lt;p&gt;
So the reason these tests hadn't gone into core up until this point is because there are so many failures with the external providers.
&lt;/p&gt;
&lt;p&gt;
The tests are quite volatile too (I can see at least two tested URLs which are 404ing that previously weren't), for example Kickstarter is sending me &lt;code&gt;429 Too Many Requests&lt;/code&gt; responses, and Cloudup is sending me &lt;code&gt;502 Bad Gateway&lt;/code&gt; intermittently.
&lt;/p&gt;
&lt;p&gt;
I guess it makes sense for the tests to remain in a group which never gets tested by default (ie. without passing the &lt;code&gt;--group external-oembed&lt;/code&gt; flag), but then I'm not sure if that's super valuable.
&lt;/p&gt;
&lt;p&gt;
&lt;del&gt;In addition, the &lt;code&gt;testOembedProviderReturnsExpectedResponse()&lt;/code&gt; test really needs to be split into several smaller tests so that every assertion can be performed (as opposed to the test failing at the first assertion failure). This means moving the actual HTTP requests into a data provider.&lt;/del&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:11/1472856438555461</guid>
      <description>&lt;p&gt;
@celloexpressions I wonder, however, if a new &lt;code&gt;action&lt;/code&gt; is conflicting with our common mantra that JS should be used for extending the customizer UI?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:7/1472855688972756</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38513" title="Customize: Fix php warning due to ..."&gt;38513&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Fix php warning due to &lt;code&gt;WP_Customize_Manager::prepare_setting_validity_for_js()&lt;/code&gt; incorrectly assuming that &lt;code&gt;WP_Error&lt;/code&gt; will only ever have arrays in its &lt;code&gt;$error_data&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Eliminates the server mutating the a &lt;code&gt;WP_Error&lt;/code&gt;'s &lt;code&gt;$error_data&lt;/code&gt; to merge-in a &lt;code&gt;$from_server&lt;/code&gt; flag (since it may not be an array to begin with). Instead it defers to the client to add a &lt;code&gt;fromServer&lt;/code&gt; param on any &lt;code&gt;Notification&lt;/code&gt; instances created from server-sent errors.
&lt;/li&gt;&lt;li&gt;Ensures that notifications will be re-rendered if a notification's &lt;code&gt;message&lt;/code&gt; changes but the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; remain the same.
&lt;/li&gt;&lt;li&gt;Adds explicit support for the &lt;code&gt;Notification&lt;/code&gt; class to have a &lt;code&gt;setting&lt;/code&gt; property, ensuring that the property is set whereas previously it was dropped.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37890" title="#37890: defect (bug): `WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ... (closed: fixed)"&gt;#37890&lt;/a&gt;.&lt;br /&gt;
Props westonruter, dlh.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38513]: Customize: Fix php warning due to ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38513</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38513/1472855688300439</guid>
      <description>&lt;p&gt;
Customize: Fix php warning due to &lt;code&gt;WP_Customize_Manager::prepare_setting_validity_for_js()&lt;/code&gt; incorrectly assuming that &lt;code&gt;WP_Error&lt;/code&gt; will only ever have arrays in its &lt;code&gt;$error_data&lt;/code&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Eliminates the server mutating the a &lt;code&gt;WP_Error&lt;/code&gt;'s &lt;code&gt;$error_data&lt;/code&gt; to merge-in a &lt;code&gt;$from_server&lt;/code&gt; flag (since it may not be an array to begin with). Instead it defers to the client to add a &lt;code&gt;fromServer&lt;/code&gt; param on any &lt;code&gt;Notification&lt;/code&gt; instances created from server-sent errors.
&lt;/li&gt;&lt;li&gt;Ensures that notifications will be re-rendered if a notification's &lt;code&gt;message&lt;/code&gt; changes but the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; remain the same.
&lt;/li&gt;&lt;li&gt;Adds explicit support for the &lt;code&gt;Notification&lt;/code&gt; class to have a &lt;code&gt;setting&lt;/code&gt; property, ensuring that the property is set whereas previously it was dropped.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37890" title="#37890: defect (bug): `WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ... (closed: fixed)"&gt;#37890&lt;/a&gt;.
Props westonruter, dlh.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37924 (Cannot delete or update themes in directories containing an uppercase ...) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2016 22:31:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37924#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37924#comment:2/1472855512996438</guid>
      <description>&lt;p&gt;
I saw this slot into 4.7. I'm on the road at the moment, and I know it's too late for 4.6.1, but I do think it was a regression. If there's another minor release, we should consider it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37924 (Cannot delete or update themes in directories containing an uppercase ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:57:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37924#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37924#comment:1/1472853440773323</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:46:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:33/1472852772854904</guid>
      <description>&lt;p&gt;
I still have a problem that you can change the locale to one that we don't have the translation files installed for.
&lt;/p&gt;
&lt;p&gt;
I believe that we need to include a set of .mo file with the locale settings for all supported languages or return and error if an attempt to switch to locale that the lang .mo are not installed
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
&lt;p&gt;
I do what to see this in WP but we need to make is safe.
&lt;/p&gt;
&lt;p&gt;
Paul
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:5/1472852477753440</guid>
      <description>&lt;p&gt;
With a topic in the support forums we could more easily help you and open a trac ticket if necessary.
&lt;/p&gt;
&lt;p&gt;
When you open the developer console in your browser (F12), you should be able to see the Ajax requests triggered when deleting or installing a plugin/theme. If you could share the responses of those, this would be helpful.
&lt;/p&gt;
&lt;p&gt;
I assume there are some PHP notices or errors being thrown which cause the process to fail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:12/1472852151939331</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38512" title="Embeds: Update the oEmbed provider test suite.
* Remove the manual ..."&gt;38512&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Embeds: Update the oEmbed provider test suite.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove the manual flag for HTTPS support and replace it with a simple check on the URL format.
&lt;/li&gt;&lt;li&gt;Ensure &lt;code&gt;testOembedTestsCoverAllProviders()&lt;/code&gt; actually fails when a new provider is added without a corresponding test.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38512]: Embeds: Update the oEmbed provider test suite.  * Remove the manual ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38512</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38512/1472852151006745</guid>
      <description>&lt;p&gt;
Embeds: Update the oEmbed provider test suite.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove the manual flag for HTTPS support and replace it with a simple check on the URL format.
&lt;/li&gt;&lt;li&gt;Ensure &lt;code&gt;testOembedTestsCoverAllProviders()&lt;/code&gt; actually fails when a new provider is added without a corresponding test.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36824 (do_all_pings function queries all posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36824#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36824#comment:13/1472851882035260</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Fri, 02 Sep 2016 21:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:4/1472850055026449</guid>
      <description>&lt;p&gt;
Are all the sites on the same server? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>Pulsar_Media</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:3/1472849906633474</guid>
      <description>&lt;p&gt;
Looks like an issue with WordPress to me - everything was working perfectly fine until i upgraded to 4.6 and did the database upgrade. I upgraded 7 sites and they are all giving me these errors. I reinstalled WordPress on one of the sites and its working fine now - its definitely an issue with WordPress - or the database upgrade process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:57:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:32/1472849861704949</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any way to avoid introducing a new global? See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) closed</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:53:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:2/1472849623530571</guid>
      <description>invalid: &lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
It appears to be an issue with your WordPress installation or your server, not an issue with WordPress. With that being said, it should be a support ticket and you should open one here with all the details: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:1/1472849428108471</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) created</title>
      
        <dc:creator>Pulsar_Media</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927/1472849281444264</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I am facing several errors in the backend after upgrading to WordPress version 4.6
&lt;/p&gt;
&lt;p&gt;
For example when i try to delete a theme i get the following error outlined in a red notification box:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Deletion failed: undefined&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
When i try to update a plugin i get the following error:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Update Failed: Internal Server Error&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Is there a quick fix for this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37926 (Twenty Eleven &amp; Twenty Twelve: Dropdown category widget exceeds parent ...) created</title>
      
        <dc:creator>gma992</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:40:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37926</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37926/1472848855810986</guid>
      <description>&lt;p&gt;
On Twenty-Eleven and Twenty-Twelve, the drop down menu at the Category Widget exceeds the size of the main body of the website and overlaps with other widgets at the footer.
&lt;/p&gt;
&lt;p&gt;
Image Twenty-Eleven: ​&lt;a class="ext-link" href="https://cloudup.com/ca0bAvmzqz4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/ca0bAvmzqz4&lt;/a&gt;
Image Twenty-Twelve: &lt;a class="ext-link" href="https://cloudup.com/cnK1axsIQ9a"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cnK1axsIQ9a&lt;/a&gt;
Footer overlap: &lt;a class="ext-link" href="https://cloudup.com/cecneIc8O3b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cecneIc8O3b&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;How to replicate:&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Activate Twenty eleven
Go to Categories &amp;gt; new
Add a category with &amp;gt; 30 characters
Create a post or edit existing one and assign the category
Go to Appearance &amp;gt; Widgets &amp;gt; Categories widget &amp;gt; check "Display as dropdown" checkbox
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Proposed fix:&lt;/strong&gt; (Fixed the main issue but not tested properly for all cases)
&lt;/p&gt;
&lt;p&gt;
#cat {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
max-width:100%;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37925 (permalink not updating after editing slug, on post edit admin page) created</title>
      
        <dc:creator>stevepuddick</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37925</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37925/1472847795966582</guid>
      <description>&lt;p&gt;
When editing an existing permalink on a post edit page, the link itself does not update until the post is updated (save draft, or update is clicked). However, the text for the permalink is immediately updated. It is expected that the permalink will also be updated to the new value and not just the permalink text. This bug can be recreated as follows:
&lt;/p&gt;
&lt;p&gt;
1) click the 'edit' button on any post edit screen (on any custom post type that supports permalinks)
2) edit the slug to have an alternate value
3) click on the anchor text next to the 'edit' button. This will bring you to a 404 page since that old link is no longer correct
&lt;/p&gt;
&lt;p&gt;
Refer to this screenshot for more info:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://webrockstar.net/wp-permalink-bug.png"&gt;&lt;img src="http://webrockstar.net/wp-permalink-bug.png" alt="http://webrockstar.net/wp-permalink-bug.png" crossorigin="anonymous" title="http://webrockstar.net/wp-permalink-bug.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37924.patch attached to Ticket #37924</title>
      
        <dc:creator>chrisjean</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:16:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37924/37924.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37924/37924.patch/1472847387337492</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37924 (Cannot delete or update themes in directories containing an uppercase ...) created</title>
      
        <dc:creator>chrisjean</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37924</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37924/1472847362382962</guid>
      <description>&lt;p&gt;
The shiny updates v2 code changes &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37714" title="Update/Install: Shiny Updates v2.
Gone are the days of isolation and ..."&gt;[37714]&lt;/a&gt; introduced a bug where themes in directories with one or more uppercase letters in the directory name cannot be deleted or updated from inside the Appearance &amp;gt; Themes page. This is due to the &lt;code&gt;$_POST['slug']&lt;/code&gt; data being sanitized using &lt;code&gt;sanitize_key()&lt;/code&gt; which forces uppercase characters to lowercase.
&lt;/p&gt;
&lt;p&gt;
The shiny updates v2 changes did not create the same problem with plugins since plugins keep track of plugin (akismet/akismet.php) and slug (akismet) separately with only the slug being passed through &lt;code&gt;sanitize_key()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Looking at the plugin-handling code, the plugin value is sanitized using &lt;code&gt;sanitize_text_field()&lt;/code&gt;. The attached patch updates the theme code to use &lt;code&gt;sanitize_text_field()&lt;/code&gt; rather than &lt;code&gt;sanitize_key()&lt;/code&gt; when sanitizing the slug. In my testing, this fixes both updating and deleting themes in directories with uppercase characters.
&lt;/p&gt;
&lt;p&gt;
I should note that while there aren't any themes on .org that have an uppercase letter in the directory name, all of the themes released by iThemes.com (my employer) use uppercase letters in the theme directory name, I've seen other theme vendors do the same, and I've seen many customer sites where they have custom theme directory names that include uppercase letters.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:15:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:32/1472847356260079</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:31/1472847073919121</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472847069001145"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #25676,​37919 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25676%2C37919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25676%2C37919/1472846600645781</guid>
      <description>duplicate: &lt;p&gt;
Thanks @wpdevart!
&lt;/p&gt;
&lt;p&gt;
The rest of the ticket is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25676" title="#25676: enhancement: Add icons to plugins (closed: wontfix)"&gt;#25676&lt;/a&gt;, going to close as such. Discussion can continue on that ticket.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #14459 (Rotate Full Size Images on Upload) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 02 Sep 2016 20:01:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14459#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14459#comment:49/1472846501012828</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33051 (Pictures rotated 90 degrees left on upload) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33051#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33051#comment:11/1472846376998599</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472846375000142"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14459 (Rotate Full Size Images on Upload) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14459#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14459#comment:48/1472846359646493</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472846354000140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37919 (Mess with plugins) updated</title>
      
        <dc:creator>wpdevart</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37919#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37919#comment:2/1472846233685785</guid>
      <description>&lt;p&gt;
Hi.
&lt;/p&gt;
&lt;p&gt;
Thanks for this information, we changed the title.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:52:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:78/1472845923182763</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472845921000119"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27266 (Front end search for attachment title cannot succeed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27266#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27266#comment:16/1472844935463951</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472844933000085"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:34:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:26/1472844848570530</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472844846000083"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:56/1472843176120522</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472843172000031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:06:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:72/1472843175926799</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472843172000031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37840 (Optimize full size images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37840#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37840#comment:6/1472843174972311</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472843172000031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34823 (image_send_to_editor filter is not fired when an Image is edited or ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 02 Sep 2016 19:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34823#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34823#comment:4/1472842817123516</guid>
      <description>&lt;p&gt;
Sure @joemcgill I can take a look!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34823 (image_send_to_editor filter is not fired when an Image is edited or ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34823#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34823#comment:3/1472842615740397</guid>
      <description>&lt;p&gt;
Hi @nicola.peluchetti,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report. @adamsilverstein is this something you're interested in picking up in 4.7?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37922 (WP_Site_Query does not have a $join query clause to compact) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:45:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37922#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37922#comment:1/1472841940844032</guid>
      <description>&lt;p&gt;
Related:  &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/37923" title="#37923: feature request: Introduce shared wp_blogmeta database table for multisite installation (reopened)"&gt;#37923&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:1/1472841766712659</guid>
      <description>&lt;p&gt;
A first-pass proof of concept on GitHub: &lt;a class="ext-link" href="https://github.com/stuttter/wp-blog-meta"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/stuttter/wp-blog-meta&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:41:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923/1472841713607631</guid>
      <description>&lt;p&gt;
In a multisite installation, it would be nice to be able to query for sites using some kind of other arbitrary method. This currently is not possible because each site has it's own &lt;code&gt;_options&lt;/code&gt; database table. (This is totally fine, and makes sense considering the huge number of options each site will usually have.)
&lt;/p&gt;
&lt;p&gt;
However, with the introduction of &lt;code&gt;WP_Site_Query&lt;/code&gt; and now having the ability to query for sites in a multitude of ways, a dedicated &lt;code&gt;blogmeta&lt;/code&gt; database table would pair nicely with the &lt;code&gt;WP_Site&lt;/code&gt; object.
&lt;/p&gt;
&lt;p&gt;
This may not be necessary for core right away, but eventually, some multisite-specific options could get moved here to avoid polluting the per-site options table. For example, the &lt;code&gt;new_user_&lt;/code&gt; options when inviting existing users to an existing site, are a multisite specific option that is auto-loaded, causing a potentially costly recalculation of &lt;code&gt;alloptions&lt;/code&gt; just to invite a user to your site.
&lt;/p&gt;
&lt;p&gt;
A few other neat potential core usages off-the-top-of-my-head:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Store for the total number of users in each site, and query by most popular
&lt;/li&gt;&lt;li&gt;Store for the total number of published posts in each site, and query by most active
&lt;/li&gt;&lt;li&gt;Store the Blog Name, and query for sites alphabetically
&lt;/li&gt;&lt;li&gt;Store a &lt;code&gt;site_owner&lt;/code&gt; user ID, and query for sites the user "owns" relatively efficiently (compared to the &lt;code&gt;LIKE&lt;/code&gt; query on &lt;code&gt;usermeta&lt;/code&gt;)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36824 (do_all_pings function queries all posts) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:40:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36824#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36824#comment:12/1472841657096380</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472841653001140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34633 (X-pingback header should be generated the same as rel="pingback" link) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34633#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34633#comment:5/1472841174506745</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34633 (X-pingback header should be generated the same as rel="pingback" link) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34633#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34633#comment:4/1472840602483559</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472840599001137"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37922.2.patch attached to Ticket #37922</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37922/37922.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37922/37922.2.patch/1472840578263722</guid>
      <description>&lt;p&gt;
Remove
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37922.patch attached to Ticket #37922</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37922/37922.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37922/37922.patch/1472840529775764</guid>
      <description>&lt;p&gt;
Add
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37922 (WP_Site_Query does not have a $join query clause to compact) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37922</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37922/1472840481846371</guid>
      <description>&lt;p&gt;
The new &lt;code&gt;WP_Site_Query&lt;/code&gt; class tries to &lt;code&gt;compact()&lt;/code&gt; the &lt;code&gt;join&lt;/code&gt; variable, which will never exist because there are no related tables to join against.
&lt;/p&gt;
&lt;p&gt;
Recommend we either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add &lt;code&gt;join&lt;/code&gt; clause &amp;amp; &lt;code&gt;$join = '';&lt;/code&gt; to &lt;code&gt;get_site_ids()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Remove &lt;code&gt;join&lt;/code&gt; from &lt;code&gt;compact()&lt;/code&gt; statement
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Fri, 02 Sep 2016 18:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:168/1472839768272630</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Half the reason Composer was suggested in this ticket was to reduce how much work we'd have to do, since we could have something ready immediately that "just works". Now, the proposal is to rewrite this functionality anyway.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, and there is no reason this cannot be an iterative approach, starting w/ the tried/true composer autoloader and optimizing after the cow paths have become worn in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:27:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:167/1472837261446936</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:166" title="Comment 166"&gt;JohnPBloch&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To that end, I propose that we run with @schlessera's proposal to fork the PHP 5.2 autoloader generator and, in addition to making it use &lt;code&gt;ABSPATH&lt;/code&gt; rather than a path relative to &lt;code&gt;composer.json&lt;/code&gt;, it should strip out (i.e., neglect to generate) all logic in the loading method after the class map until such time that core actually &lt;em&gt;uses&lt;/em&gt; one of the autoloading PSRs (which is a completely different conversation).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Half the reason Composer was suggested in this ticket was to reduce how much work we'd have to do, since we could have something ready immediately that "just works". Now, the proposal is to rewrite this functionality anyway.
&lt;/p&gt;
&lt;p&gt;
I still think this seems to be a solution (Composer) searching for a problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:12:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:10/1472836331747825</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@lukecavanagh sorry for the spam - added a patch with a unit test and sample images with orientation exif data to test against.
&lt;/p&gt;
&lt;p&gt;
This only addresses the issue when actively rotating an image via the admin as per the scope of this ticket but it's a good place to start regarding correcting the problem on upload and for adding additional tests. I'll look into suitable solutions for correcting images on upload next.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>orientation-8.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-8.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-8.jpg/1472836102278587</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-7.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:08:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-7.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-7.jpg/1472836091363079</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-6.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-6.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-6.jpg/1472836079448335</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-5.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-5.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-5.jpg/1472836068232886</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-4.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-4.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-4.jpg/1472836057393625</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-3.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-3.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-3.jpg/1472836047174129</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>orientation-2.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:07:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-2.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-2.jpg/1472836035595887</guid>
      <description>&lt;p&gt;
orientation data value 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>orientation-1.jpg attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/orientation-1.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/orientation-1.jpg/1472836019230411</guid>
      <description>&lt;p&gt;
orientation data value 1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37140-1.patch attached to Ticket #37140</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Fri, 02 Sep 2016 17:06:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.patch/1472835979664341</guid>
      <description>&lt;p&gt;
Same as original but with unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34113 (Add a 'View Archive' link to admin bar for post types.) updated</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:59:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34113#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34113#comment:14/1472835570010986</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34113/34113-unit-tests.diff" title="Attachment '34113-unit-tests.diff' in Ticket #34113"&gt;34113-unit-tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34113/34113-unit-tests.diff" title="Download"&gt;​&lt;/a&gt; adds a unit test.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:12/1472835532874325</guid>
      <description>&lt;p&gt;
@pavelevap no, if you add a nav menu which points to a published post, and then you unpublish that post, the nav menu item status does not change. The nav menu will continue to include that item, even though it points to a &lt;code&gt;draft&lt;/code&gt; post and unauthorized users would not be able to see it. That's probably a separate (yet related) issue to what we're discussing here: limiting non-published posts from being available to be added to a nav menu vs filtering out nav menu items from a nav menu when they point to a non-published post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34113-unit-tests.diff attached to Ticket #34113</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34113/34113-unit-tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34113/34113-unit-tests.diff/1472835453544216</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:54:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:17/1472835289588631</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@joyously the customizer-supplied CSS should be printed _after_ any enqueued stylesheets are printed. So it would come last in the cascade. I don't think there should be an option to come first, but rather to decide it comes last.
&lt;/p&gt;
&lt;p&gt;
And yes, we talked about using a new custom post type for storing the theme CSS. The CSS would be stored in &lt;code&gt;post_content&lt;/code&gt; and each theme would have their own instance of this post type to store the CSS for that theme (like a theme mod is tied to the theme). The &lt;code&gt;post_content&lt;/code&gt; would not include the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag. I would think the CSS would be printed into the document as a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element as opposed to &lt;code&gt;link&lt;/code&gt; an external stylesheet, but maybe not. The CSSTidy library would ensure that only valid CSS is saved to avoid an XSS vulnerability as you've described.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37921 (Make "newbloguser" URL segment customizable/filterable) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37921#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37921#comment:1/1472834178553369</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37921.patch attached to Ticket #37921</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37921/37921.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37921/37921.patch/1472834161318447</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;user_invitation_endpoint()&lt;/code&gt; to &lt;code&gt;ms-functions.php&lt;/code&gt; and use to replace &lt;code&gt;newbloguser&lt;/code&gt; endpoint
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35774 (WordPress admin &lt;title&gt; structure) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35774#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35774#comment:15/1472833723837151</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35774#comment:14" title="Comment 14"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The patch needs translator comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We don't need translator-comments. The patch removes translatable-strings. The placeholders &lt;code&gt;'%1$s %2$s %3$s'&lt;/code&gt; are part of the &lt;code&gt;sprintf()&lt;/code&gt; function, they are not a translatable strings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37921 (Make "newbloguser" URL segment customizable/filterable) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:25:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37921</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37921/1472833545933625</guid>
      <description>&lt;p&gt;
The built-in multisite user invitation URL is forced into using &lt;code&gt;/newbloguser/&lt;/code&gt; as the invitation endpoint to all sites. When employing WordPress Multisite in an environment that isn't for blogging, this endpoint does't make much sense.
&lt;/p&gt;
&lt;p&gt;
Because this value is hardcoded, the only way to change this is to roll your own invitation system entirely, which is a lot of work for a little bit of vanity.
&lt;/p&gt;
&lt;p&gt;
I don't think the invitation system itself is too bad, and it will be easy to make this segment filterable.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 02 Sep 2016 16:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:16/1472832993447163</guid>
      <description>&lt;p&gt;
I didn't read all of the Slack discussions, but what is missing in these comments is
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Some indication of the order of the CSS being added. Does it come first before theme CSS or last or in between?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Since the C in CSS is cascading, when it is emitted is quite important. It could be a user option to have this CSS come out first or last. And this probably needs to be explained a little bit in the Help text.
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;How is this CSS added? If it is stored in a post type, does the theme add it with bracketing style tags? Or does core do that? Or are the style tags part of the post content?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
If the CSS were stored in a file, it would be included with a style tag with a src attribute. Any HTML tags in there would be CSS syntax errors. But if it is included inline with a plain style tag, the user could put an ending style tag and then other HTML including script tags, which would be valid. This is where security problems would arise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37806 (Attachment Details - Edit: uneven height between input field and ...) updated</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37806#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37806#comment:3/1472830353846459</guid>
      <description>&lt;p&gt;
Hi @joemcgill,
&lt;/p&gt;
&lt;p&gt;
thanks for the review. There's a new patch attached that covers both screens. I didn't use the line-height because it made the field 1 px taller and needed to tweak the vertical padding to make it look right
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/GJVRzfKKQM-1200x1200.png"&gt;&lt;img src="https://cldup.com/GJVRzfKKQM-1200x1200.png" alt="https://cldup.com/GJVRzfKKQM-1200x1200.png" crossorigin="anonymous" title="https://cldup.com/GJVRzfKKQM-1200x1200.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
so I just added a tweaked padding plus restored the font size again because otherwise the font was smaller.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/1ddKCEGQ4h-3000x3000.png"&gt;&lt;img src="https://cldup.com/1ddKCEGQ4h-3000x3000.png" alt="https://cldup.com/1ddKCEGQ4h-3000x3000.png" crossorigin="anonymous" title="https://cldup.com/1ddKCEGQ4h-3000x3000.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37806.1.patch attached to Ticket #37806</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37806/37806.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37806/37806.1.patch/1472830330987116</guid>
      <description>&lt;p&gt;
Even height in Edit Media screen and Edit Image view of Media dialog
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37909 (get_terms returns array with missing cells) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37909#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37909#comment:1/1472830265110837</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@eddr Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
I can't reproduce this issue. Even when &lt;code&gt;hide_empty&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, array indexes should be consecutive with a default query.
&lt;/p&gt;
&lt;p&gt;
Are you running any plugins that may be filtering 'get_terms' or some other part of the term query process? Are you using a persistent object cache like Memcached? Are you able to reproduce the issue on a clean installation of WordPress, with no plugins (other than the one you use to register the taxonomy)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:11:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:55/1472829100267477</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31050#comment:35" title="Comment 35"&gt;dglingren&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I added PDF thumbnail generation to my plugin, [Media Library Assistant](&lt;a class="ext-link" href="https://wordpress.org/support/plugin/media-library-assistant"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/plugin/media-library-assistant&lt;/a&gt;), a while back. It supports dynamic generation in the &lt;code&gt;[mla_gallery]&lt;/code&gt; shortcode. It also has a bulk action in the Media/Assistant admin submenu to generate thumbnails and store them as separate Media Library items. You are welcome to incorporate any of the code or ideas in Core.
&lt;/p&gt;
&lt;p&gt;
I also discovered that adding "Featured Image" support to Media Library items is easy and works well:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_post_type_support( 'attachment', 'thumbnail' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Once that's done you can assign an image to any non-image item (PDF, audio, video, Office documents) and use it in gallery displays, etc. It's a nice alternative to generating thumbnails.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Using the post_thumbnail seems like it would be the WordPress way to do things, as attachments are just posts anyway, and it applies to all non-image types instead of just PDFs. Then it's just a matter of generating it on upload, and maybe marking it so the image is not displayed separately in the Media Library (or not).
&lt;/p&gt;
&lt;p&gt;
My opinion for generating the already uploaded ones is that it should only happen when used, as in while displaying the thumbnails in Media Library, the PDF is next, get the thumbnail but if it doesn't exist, create it. It seems to me that all image sizes should be done that way instead of littering the server with unused image sizes. (There's a plugin that does this: Dynamic Image Resizer.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27473 (Thickbox width and height parameters are ignored when using TB_iframe) updated</title>
      
        <dc:creator>Vahan4033</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:06:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27473#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27473#comment:15/1472828795847974</guid>
      <description>&lt;p&gt;
Having the same problem in WP 4.6. Height/Width params. don't work. I tried all possible suggestions listed here. Definitely a bug
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27473" title="#27473: defect (bug): Thickbox width and height parameters are ignored when using TB_iframe (new)"&gt;harmr&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I tried to load a thickbox with custom width and height parameters, like the codex says:
?TB_iframe=true&amp;amp;width=450&amp;amp;height=120
anyway regardsless of what values I use, custom with and height values are ignored.
I debugged /wp-includes/js/thickbox/thickbox.js and parameters are read in correctly,
anyway it does not have any effect when setting them for iframe-tag on line 198:
&lt;/p&gt;
&lt;p&gt;
jQuery("#TB_window").append("&amp;lt;div id='TB_title'&amp;gt;&amp;lt;div id='TB_ajaxWindowTitle'&amp;gt;"+caption+"&amp;lt;/div&amp;gt;&amp;lt;div id='TB_closeAjaxWindow'&amp;gt;&amp;lt;a href='#' id='TB_closeWindowButton' title='"+thickboxL10n.close+"'&amp;gt;&amp;lt;div class='tb-close-icon'&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;iframe frameborder='0' hspace='0' src='"+urlNoQuery&lt;a class="missing changeset" title="No changeset 0 in the repository"&gt;[0]&lt;/a&gt;+"' id='TB_iframeContent' name='TB_iframeContent"+Math.round(Math.random()*1000)+"' onload='tb_showIframe()' style='width:&amp;#34;+(ajaxContentW + 29)+&amp;#34;px;height:&amp;#34;+(ajaxContentH + 17)+&amp;#34;px;' &amp;gt;"+thickboxL10n.noiframes+"&amp;lt;/iframe&amp;gt;");
I tried to add the following code to check if resize is possible:
&lt;/p&gt;
&lt;p&gt;
jQuery("#TB_window").css("width","450");
jQuery("#TB_window").css("height","120");
this failed generally (although it worked when executing the command in the browser console)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37736 (Emails fail on certain server setups) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37736#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37736#comment:21/1472828598691209</guid>
      <description>&lt;p&gt;
4.6.1 is scheduled for release on September 7, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/09/01/4-6-1-release-candidate/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/09/01/4-6-1-release-candidate/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34335 (URL shorteners ( redirects) should to be supported by the embed ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34335#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34335#comment:10/1472828530081261</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34335/34335.2.diff" title="Attachment '34335.2.diff' in Ticket #34335"&gt;34335.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34335/34335.2.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Correct &lt;code&gt;@ticket&lt;/code&gt; annotation
&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;parse_url()&lt;/code&gt; with the &lt;code&gt;PHP_URL_QUERY&lt;/code&gt; argument.
&lt;/li&gt;&lt;li&gt;Correctly declare &lt;code&gt;$_provider_url&lt;/code&gt; in tests.
&lt;/li&gt;&lt;li&gt;Improve docs a bit.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34335.2.diff attached to Ticket #34335</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 15:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34335/34335.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34335/34335.2.diff/1472828455686770</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>JohnPBloch</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:166/1472828049248238</guid>
      <description>&lt;p&gt;
It seems to me that @MikeSchinkel's point that Composer does a lot of extra processing after classmaps is one worth acknowledging and incorporating. For core's own autoloading needs, obviously this won't be an issue. The performance question comes into play later for any plugins that might also trigger the autoloader. Because those plugin classes aren't in core's classmap, it would needlessly run through all the other autoloader checks only to predictably come up with nothing.
&lt;/p&gt;
&lt;p&gt;
To that end, I propose that we run with @schlessera's proposal to fork the PHP 5.2 autoloader generator and, in addition to making it use &lt;code&gt;ABSPATH&lt;/code&gt; rather than a path relative to &lt;code&gt;composer.json&lt;/code&gt;, it should strip out (i.e., neglect to generate) all logic in the loading method after the class map until such time that core actually &lt;em&gt;uses&lt;/em&gt; one of the autoloading PSRs (which is a completely different conversation).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37736 (Emails fail on certain server setups) updated</title>
      
        <dc:creator>peterwsterling</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37736#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37736#comment:20/1472827856573028</guid>
      <description>&lt;p&gt;
Yep - defo fixes the problem. When will this be released?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37898 (Prompt message when removing a plugin is sometimes misleading) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37898#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37898#comment:2/1472827534351393</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this! The confirmation dialog has been added as part of Shiny Updates, where plugin deletion was now made shiny.
&lt;/p&gt;
&lt;p&gt;
It's not that difficult to make the text context-aware, but with &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/20578" title="#20578: enhancement: Allow users to delete a plugin without uninstalling (reviewing)"&gt;#20578&lt;/a&gt; in mind it would make sense to not use a simple JS &lt;code&gt;confirm()&lt;/code&gt; dialog but a custom modal with three options (uninstall completely, delete only, cancel) Tempted to close this one as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37787 (WordPress MU 4.5.3 password reset mail doet not work. Other mail does.) updated</title>
      
        <dc:creator>peterwsterling</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37787#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37787#comment:4/1472826754538073</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is an issue I am finding on WP 4.6 too. Any progress? Can I help? Happy to take direction or provide data/examples/etc...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37526 (Introduce the possibility to register new administration panels) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:25:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37526#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37526#comment:6/1472826332596106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37526/37526.3.diff" title="Attachment '37526.3.diff' in Ticket #37526"&gt;37526.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37526/37526.3.diff" title="Download"&gt;​&lt;/a&gt; I introduce a new class &lt;code&gt;WP_Administration_Panel&lt;/code&gt; and also a new file for Administration Panel API functions. The panel class handles its own instances through a static property and methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37526.3.diff attached to Ticket #37526</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37526/37526.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37526/37526.3.diff/1472826048671725</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37920 (`the_title` filter called in 2 places inconsistently) created</title>
      
        <dc:creator>joelworsham</dc:creator>

      <pubDate>Fri, 02 Sep 2016 14:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37920</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37920/1472826021922398</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35317" title="#35317: defect (bug): Apply the `the_title` filter on original post titles in ... (closed: fixed)"&gt;#35317&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When calling &lt;code&gt;wp_nav_menu()&lt;/code&gt; to build a frontend nav menu, the filter &lt;code&gt;the_title&lt;/code&gt; ends up being called 2 times on page links, due to the above ticket.
&lt;/p&gt;
&lt;p&gt;
It is called here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/nav-menu.php#L754"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/nav-menu.php#L754&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and then here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-nav-menu.php#L169"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-nav-menu.php#L169&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
So it is called once when getting the post object title and then again when actually outputting the nav menu.
&lt;/p&gt;
&lt;p&gt;
I think this is negative for 2 reasons:
&lt;/p&gt;
&lt;p&gt;
1) Anyone who wants to filter &lt;code&gt;the_title&lt;/code&gt; for nav menu items will end up having it called 2 different times, which is odd and can provide inconsistency
2) In both cases, an object ID is included, but the first call the object ID is the Post that the menu item links to (where the title comes from) and the second call the object ID is the nav menu item ID. This means, if a developer anticipates the 2 calls, they cannot check against the supplied object ID to confirm operations only happen once.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:165</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:165/1472823795373256</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:164" title="Comment 164"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:163" title="Comment 163"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One more though on the general direction of this ticket:
&lt;/p&gt;
&lt;p&gt;
My preference would be to only consider Composer as built-time tool for now to build a 5.2-compatible class map that WordPress Core can use. Then use this to modify Core so that it can make better use of the autoloader. I expect his to have a positive impact (directly and indirectly) on the code quality and architecture of Core.
&lt;/p&gt;
&lt;p&gt;
Considering writing an API to provide a class autoloader to plugins &amp;amp; themes is too early right now, and not all of the preconditions for properly designing something like this are met yet.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this sums it up quite nicely.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. To reiterate: the only use of Composer being suggested here is to generate a classmap at build time. The only people who will ever have to worry about using Composer, on this proposal, are committers, and core contributors whose patches change the classmap (by adding/removing/renaming classes).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37446 (Introduce a filter for `self_admin_url()`) updated</title>
      
        <dc:creator>j.hoffmann</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:40:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37446#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37446#comment:5/1472823641034767</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37446/37446.2.diff" title="Attachment '37446.2.diff' in Ticket #37446"&gt;37446.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37446/37446.2.diff" title="Download"&gt;​&lt;/a&gt; I added the &lt;code&gt;$scheme&lt;/code&gt; parameter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37446.2.diff attached to Ticket #37446</title>
      
        <dc:creator>j.hoffmann</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:39:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37446/37446.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37446/37446.2.diff/1472823544067980</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:6/1472822619815875</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37890/37890.3.diff" title="Attachment '37890.3.diff' in Ticket #37890"&gt;37890.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37890/37890.3.diff" title="Download"&gt;​&lt;/a&gt; also looks good. Thanks @westonruter!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37919 (Mess with plugins) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 13:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37919#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37919#comment:1/1472821410077063</guid>
      <description>&lt;p&gt;
Hi @anatolt, thanks for the report!
&lt;/p&gt;
&lt;p&gt;
The issue with the plugin is that it's called &lt;code&gt;Lightbox - Gallery Lightbox&lt;/code&gt; in &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/lightbox-popup/tags/1.2.1/readme.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;readme.txt&lt;/a&gt;, but &lt;code&gt;Wpdevart Lightbox&lt;/code&gt; in the &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/lightbox-popup/tags/1.2.1/wpdevart_lightbox.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plugin file&lt;/a&gt;. @wpdevart, could you please fix that and use a consistent title?
&lt;/p&gt;
&lt;p&gt;
Adding icons to plugins list table was previously proposed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25676" title="#25676: enhancement: Add icons to plugins (closed: wontfix)"&gt;#25676&lt;/a&gt;, see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30186" title="#30186: enhancement: Add plugin icons to plugin list table in update-core.php (closed: fixed)"&gt;#30186&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:164</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:164/1472820919582987</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:163" title="Comment 163"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One more though on the general direction of this ticket:
&lt;/p&gt;
&lt;p&gt;
My preference would be to only consider Composer as built-time tool for now to build a 5.2-compatible class map that WordPress Core can use. Then use this to modify Core so that it can make better use of the autoloader. I expect his to have a positive impact (directly and indirectly) on the code quality and architecture of Core.
&lt;/p&gt;
&lt;p&gt;
Considering writing an API to provide a class autoloader to plugins &amp;amp; themes is too early right now, and not all of the preconditions for properly designing something like this are met yet.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this sums it up quite nicely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17771 (URL-encoded comment_author_url gets broken by MySQL varchar 200 length ...) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17771#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17771#comment:13/1472819230030972</guid>
      <description>&lt;p&gt;
What we need is something to store in comment_author_url to indicate that it is too large and we stored it elsewhere.
&lt;/p&gt;
&lt;p&gt;
The suggestion was a short URL. However, for an outside site, we might not get one of those. Since there are functions for retrieving the URL, we could have those check and replace if too large. However, many people access the comment array on retrieval directly.
&lt;/p&gt;
&lt;p&gt;
comment_author_url is overloaded in its use to be the pingback url storage location to begin with. Doesn't make it easy to determine what the right course of action is. Comment meta didn't exist when this started.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24801 (comments_number() shows "0 Comments" after Theme Unit Test import) updated</title>
      
        <dc:creator>samicooper</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24801#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24801#comment:3/1472818970671907</guid>
      <description>&lt;p&gt;
I experienced the same issue on page comments after importing the WP test data. This seems to do the trick:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'get_comments_number'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_count'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;comment_count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;is_admin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$comments_by_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;separate_comments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;get_comments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'status=approve&amp;amp;post_id='&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comments_by_type&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:20:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:10/1472818818162837</guid>
      <description>&lt;p&gt;
Nick, this is really important work you are doing here. Both providing the opportunity for promotion and limiting it. There should be strict guidelines
&lt;/p&gt;
&lt;p&gt;
Right now the plugin admin interface and admin interface in general is an absolute mess due to too many "creative" approaches to self-promotion (admin notifications, stickies, unwanted dashboard elements, promotion in posts interface not to mention billboard style preference sections). All this needs to be trimmed back (another ticket, or rather several).
&lt;/p&gt;
&lt;p&gt;
We have an opportunity here to stop this before it starts with the Customizer. I think we should provide guidelines and a template. It seems to me any theme which tries to get around the limits should be blocked in the customizer with a simple notice along these lines:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
We notice that your theme breaks Customizer rules. To preserve a better user experience, we have blocked loading X Theme until it meets WordPress standards.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To protect the future of WordPress it's essential that we enforce some controls over the commercialisation of the admin space. Every time a theme or plugin creator pollutes the admin interface, s/he makes alternative platforms more attractive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-scripts-sri-patch.diff attached to Ticket #33948</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:17:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33948/wp-scripts-sri-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33948/wp-scripts-sri-patch.diff/1472818649603126</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33948 (Implement subresource integrity (SRI)) updated</title>
      
        <dc:creator>joe_bopper</dc:creator>

      <pubDate>Fri, 02 Sep 2016 12:15:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33948#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33948#comment:4/1472818551136589</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I have created and attached a patch that allows the application (and removal) of extra attributes to both a wp_script and wp_style (that is, enqueued &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags). The functions for these are:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$handle = 'my-script';
$attrs = array( 'async'=&amp;gt;'true' );
wp_script_add_extra_attributes( $handle, $attrs );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;wp_script_delete_extra_attributes( $handle, $attrs );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I've then added a function for the integrity specific case:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function wp_script_integrity( $handle, $hash, $crossorigin = 'anonymous' ){...}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Note: style functions just replace script with style in the function name.
&lt;/p&gt;
&lt;p&gt;
I think this should suitably fulfill this ticket.
&lt;/p&gt;
&lt;p&gt;
It appears to me that the main purpose of SRI is to prevent XSS when using third-party resources (e.g. cdn). Therefore, the need for a function to create hashes for local scripts seems moot (though I'm not against the idea).
&lt;/p&gt;
&lt;p&gt;
Further note: I added a new formatting function &lt;code&gt;esc_attr_name&lt;/code&gt; as well. This simply ensures no bad characters are used in attribute names and that it is not the empty string.
&lt;/p&gt;
&lt;p&gt;
Cheers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 11:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:25/1472817169627926</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10984 (If content uses the nextpage tag then only the first page is shown in feeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 11:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10984#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10984#comment:51/1472817153095528</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ping @helen! I still like to get this in early enough, but I first need to wrap my head around &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt; first. I'd actually say this ticket here is blocked by it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 02 Sep 2016 11:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:7/1472816086480004</guid>
      <description>&lt;p&gt;
I still think we can safely delete this id.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
it doesn't occur anywhere else in the wordpress core
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 02 Sep 2016 11:13:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:27/1472814783096398</guid>
      <description>&lt;p&gt;
@remedy17 There's also 4.6.1 RC1 you could install on your site: &lt;a class="ext-link" href="https://wordpress.org/wordpress-4.6.1-RC1.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/wordpress-4.6.1-RC1.zip&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:163</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:163/1472813473655692</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:150" title="Comment 150"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I apologize if it came across as rude. That was not my intention.
I used "groupthink" in the same context that management consultants use it to try to improve business decision making, &lt;a class="ext-link" href="https://www.mindtools.com/pages/article/newLDR_82.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;for example&lt;/a&gt;.  Think of it like me saying &lt;em&gt;"Let me propose a strawman"&lt;/em&gt; but in a different context.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No worries, and thanks for taking the time to clarify.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is an effort to bring de facto PHP best practices to WordPress, trying to get it out of the "legacy software" drawer it keeps getting put into more and more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a href="http://core.trac.wordpress.org/ticket/37699#comment:66"&gt;my comments ''(to you)'' here&lt;/a&gt; about there being different levels of programmers and how we should not be forcing all of them to be at the highest skill level.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Discussed this argument &lt;a href="http://core.trac.wordpress.org/ticket/37699#comment:72"&gt;here&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If it is problematic to apply (de-facto) best practices to a project, chances are the best practices are not a fault. This probably just points to an inherent design flaw that should be addressed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are assuming that so-called &lt;em&gt;"best practices"&lt;/em&gt; are actually fit for purpose.  That logic is called &lt;em&gt;"&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Argument_from_authority"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;appeal to authority appeal to authority&lt;/a&gt;"&lt;/em&gt; and is a logical fallacy.
In my 25+ years of professional development I have  seen many &lt;em&gt;"best practices"&lt;/em&gt; exposed as only being &lt;em&gt;Well it seemed like a good idea at the time.&lt;/em&gt;  So we should not view  &lt;em&gt;"best practices"&lt;/em&gt; as a sacred sword and instead validate each practice to see if it actually applies in the current context.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We are talking about a very specific problem here, and the solution we're proposing has been considered a best practice for pretty much the entire PHP ecosystem for years now. I agree that one should always apply critical thinking before accepting "best pratices", but I am fully confident about our assertion here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is not nearly as an autoloader that works like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _autoload( $class ) {
   if ( isset( self::$_classmap[ $class ] ) ) {
	  require self::$_classmap[ $class ]
   }
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
As I already dissected in a later comment, that is pretty much exactly what the Composer ClassMap loader does, plus a single additional instruction to normalize the class name, so that it does not break with absolute class names (which the above one probably does).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I fail to see how that would be preferable to have a mature, 5-year-tested class map builder
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because Composer's defaults actively work against WordPress's architecture.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Composer has no defaults. Its defaults are to do nothing at all. If you are talking about any particular way of setting it up, that's entirely configurable.
&lt;/p&gt;
&lt;p&gt;
One more though on the general direction of this ticket:
&lt;/p&gt;
&lt;p&gt;
My preference would be to only consider Composer as built-time tool for now to build a 5.2-compatible class map that WordPress Core can use. Then use this to modify Core so that it can make better use of the autoloader. I expect his to have a positive impact (directly and indirectly) on the code quality and architecture of Core.
&lt;/p&gt;
&lt;p&gt;
Considering writing an API to provide a class autoloader to plugins &amp;amp; themes is too early right now, and not all of the preconditions for properly designing something like this are met yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37654 (Documentation for widget_tag_cloud_args filter is wrong) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37654#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37654#comment:4/1472812560427444</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37654 (Documentation for widget_tag_cloud_args filter is wrong) updated</title>
      
        <dc:creator>backermann</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37654#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37654#comment:3/1472812516746297</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixed documentation in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37654/37654.diff" title="Attachment '37654.diff' in Ticket #37654"&gt;37654.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37654/37654.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37654.diff attached to Ticket #37654</title>
      
        <dc:creator>backermann</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37654/37654.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37654/37654.diff/1472812343047232</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:24:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:72/1472811841143735</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:66" title="Comment 66"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
You split your argument across two different tickets, so it is difficult to respond. I'll just generally address the issue you're raising here, knowing that this also applies to some of your arguments commented on ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt; .
&lt;/p&gt;
&lt;p&gt;
Your main point is that we fail to keep WordPress development be accessible to "lesser-experienced" developers.
&lt;/p&gt;
&lt;p&gt;
I wholeheartedly agree that a codebase needs to be welcoming and offer a learning curve that is not too steep. However, I think that your conclusions are all backwards.
&lt;/p&gt;
&lt;p&gt;
First of all, an example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$whatever&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$whatever&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I posit that this is more difficult to comprehend and creates more issues, than something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;WP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'whatever'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The first example creates two separate issues:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You need to explicitly tell the code that you're referencing a global. Apart from immediately showing developers a way of how _not_ to do it, you also assume that they have a basic knowledge of local/global namespace differences.
&lt;/li&gt;&lt;li&gt;If the developer uses this in the wrong context (when the global was not initialized yet), it will create very confusing issues/errors that are hard to debug.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The second example improves upon this in the following way:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There's no "pre-qualifying" something before using it. You tell WP what you need, and it will be ready.
&lt;/li&gt;&lt;li&gt;If you use this in the wrong context, the &lt;code&gt;WP&lt;/code&gt; class can immediately show a clear error explaining why the developer is using this the wrong way. So, the &lt;code&gt;WP&lt;/code&gt; class identifies errors during development time, instead of deferring this to the plugin review team.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
More generally:
&lt;/p&gt;
&lt;p&gt;
When trying to have a complex system be more approachable for laymen, you build a complex, flexible system first that allows for all advanced usages, and then provide convenience functions/wrappers/facades for the common use cases.
&lt;/p&gt;
&lt;p&gt;
The other way around just doesn't work. You cannot create a more simple system, and the provide more advanced wrappers for advanced use cases. This will result in what we have now with WordPress: you have a more simple system that covers the common use cases, and all the more advanced developers need to use hack and workarounds to solve their problems.
&lt;/p&gt;
&lt;p&gt;
Why do you think that wordpress.com does not use the .org Core? It is simply not usable as is for more complex scenarios...
&lt;/p&gt;
&lt;p&gt;
Your fear probably comes from frameworks like Symfony or Zend. They can account for the most complex sites/apps, but if you want to build a simple blog, you'll need to deal with hugely complex abstractions before getting anything done.
&lt;/p&gt;
&lt;p&gt;
However, I think WordPress should go a similar route like the (opinionated and controversial) Laravel. Laravel has pretty much the exact same abstractions and architectures behind the scenes than Symfony (and even uses most of Symfony Core as is). But it provides its clever Facades for people that don't care about any of this and just want to solve their problem in a few lines of code. More advanced developers, however, can still get direct access to the dependency injection container or create completely custom handlers.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;You can always solve a simple problem with a too complex architecture (and preferably wrap a simplification around it). But you will not be able to solve a complex problem with a too simple architecture.&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12056 (target="_blank" being stripped from Profile Bio and Category Description) updated</title>
      
        <dc:creator>harmr</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12056#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12056#comment:13/1472811338440729</guid>
      <description>&lt;p&gt;
+1 for enabling href/target by default for $allowedtags
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 02 Sep 2016 10:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:6/1472811320703574</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:162</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:162/1472809738067780</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:160" title="Comment 160"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:158" title="Comment 158"&gt;dnaber-de&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm perfectly fine with the direction the ticket goes (until the discussion went somehow off topic), but thanks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then let me elaborate on my primary reason for wanting another ticket; to ensure that we can get one clear proposal about the direction that is evidently now being proposed because comments don't work well to establish the primary thesis to evaluate. You mention @schlessera' proposal, but he has posted 25 messages in this thread with 159 messages, and it is unclear to me which of his messages was his proposal.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The "proposal" is presented in &lt;a class="ext-link" href="https://www.alainschlesser.com/adding-central-autoloader-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this post&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Worse case, if sticking with this ticket makes sense, can we nominate someone to write up the new thesis in a concise form and post it here as a revised proposal, because as I said it is not longer clear what is actually currently being proposed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would also welcome this. However, there will still be several ways to do this, and several opinions about how to do this "right".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:46:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:161</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:161/1472809619758839</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:159" title="Comment 159"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:157" title="Comment 157"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure I follow or agree here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.  you are again not following my objections and thus are misrepresented them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Mike, I'm afraid he's not the only one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:160/1472809444730104</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:158" title="Comment 158"&gt;dnaber-de&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm perfectly fine with the direction the ticket goes (until the discussion went somehow off topic), but thanks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then let me elaborate on my primary reason for wanting another ticket; to ensure that we can get one clear proposal about the direction that is evidently now being proposed because comments don't work well to establish the primary thesis to evaluate. You mention @schlessera' proposal, but he has posted 25 messages in this thread with 159 messages, and it is unclear to me which of his messages was his proposal.
&lt;/p&gt;
&lt;p&gt;
Worse case, if sticking with this ticket makes sense, can we nominate someone to write up the new thesis in a concise form and post it here as a revised proposal, because as I said it is not longer clear what is actually currently being proposed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:195</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:195/1472808935597664</guid>
      <description>&lt;p&gt;
@pento Latest diff isn't working for me. It seems to be the issue of the pointer losing the correct position. (I think the loop on line &lt;code&gt;class-wp-hook.php:293&lt;/code&gt;)
&lt;/p&gt;
&lt;p&gt;
Interestingly though, if I remove all references of &lt;code&gt;$nesting_level&lt;/code&gt; (or rather, keep it at 0 always), it works perfectly for my initial issue &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37679" title="#37679: defect (bug): Actions that remove and add themselves again, break other actions (closed: duplicate)"&gt;#37679&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:34:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:159</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:159/1472808844400630</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:157" title="Comment 157"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure I follow or agree here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.  you are again not following my objections and thus are misrepresented them.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I maintain that the vast majority whom are new to WordPress and to PHP _really_ don't care how an auto loader in core gets constructed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.  But my issue is not people &lt;em&gt;"New to WordPress" (I only mentioned ""new to WP"" because you said you were new to WP.)&lt;/em&gt;  My issue is that there are many skill levels of people who extend WP, and many of those people are not skilled PHP programmers even though they end up writing PHP.  And most of these people are definitely not new to WP.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The vast majority that touch PHP just tweak themes, and maybe right a simple functional plugins. Nothing about that space changes with an autoloader in core, let alone how an auto loader gets constructed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On this we disagree.  An autoloader for core should not be added to core that does not at least contemplate being used for themes and plugins too. And for that &lt;a class="ext-link" href="http://www.joelonsoftware.com/items/2008/05/01.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Composer is too complicated&lt;/a&gt; for many of the people who are currently empowered by WordPress because it is easy. IMO.
&lt;/p&gt;
&lt;p&gt;
BTW, if the core developers decide to choose Composer I will accept it and move on. But as long as they have not spoken and informed us of a concrete decision I feel the need to provide an opposing voice to what otherwise appears to be group-think based on an unvalidated assumption that using Composer is the best approach to take.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37918 (wp_remote_get skips first line under some cirumstances) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37918#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37918#comment:3/1472808021860802</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37919 (Mess with plugins) created</title>
      
        <dc:creator>anatolt</dc:creator>

      <pubDate>Fri, 02 Sep 2016 09:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37919/1472807584850765</guid>
      <description>&lt;p&gt;
The names of plugins on search page
/wp-admin/plugin-install.php
&lt;a style="padding:0; border:none" href="http://anatolt.ru/i/2016-09-02_140300.jpg"&gt;&lt;img src="http://anatolt.ru/i/2016-09-02_140300.jpg" alt="http://anatolt.ru/i/2016-09-02_140300.jpg" crossorigin="anonymous" title="http://anatolt.ru/i/2016-09-02_140300.jpg" /&gt;&lt;/a&gt;
and on installed page
/wp-admin/plugins.php?plugin_status=all&amp;amp;paged=1&amp;amp;s
&lt;a style="padding:0; border:none" href="http://anatolt.ru/i/2016-09-02_140439.jpg"&gt;&lt;img src="http://anatolt.ru/i/2016-09-02_140439.jpg" alt="http://anatolt.ru/i/2016-09-02_140439.jpg" crossorigin="anonymous" title="http://anatolt.ru/i/2016-09-02_140439.jpg" /&gt;&lt;/a&gt;
is different. No pictures in installed plugins. Sometimes it hard to find a new installed plugin after installation.
Need to make them look similar.
Need to name them same on different pages.
Need to add pictures to installed plugins page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37918 (wp_remote_get skips first line under some cirumstances) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:53:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37918#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37918#comment:2/1472806416515168</guid>
      <description>&lt;p&gt;
Thanks for reporting this @tastenchris - this is being tracked in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37839" title="#37839: defect (bug): wp_remote_get sometimes mutilates the response body (closed: fixed)"&gt;#37839&lt;/a&gt;. It's actually a bug in library being used by WordPress (since 4.6). There's a patch for that bug, and it's now just a matter of updating the library when that patch is merged in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37839,​37918 batch updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37839%2C37918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37839%2C37918/1472806305713268</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37839" title="#37839: defect (bug): wp_remote_get sometimes mutilates the response body (closed: fixed)"&gt;#37839&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37782 (Duplicate Page Entry in View All Pages when generating a Menu) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37782#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37782#comment:4/1472806024250769</guid>
      <description>&lt;p&gt;
I agree this is rather confusing. In my case there is no visual indication as to why the additional reference to "Home" has been added to the list of pages (because my front page is also called "Home" - see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25410#comment:11" title="Comment 11 for #25410: defect (bug): In Admin navigation menu manager Page &amp;gt; View All section, home link ... (closed: fixed)"&gt;comment:11:ticket:25410&lt;/a&gt;). The customizer, on the other hand adds an additional reference to "Home" but this time it is identified as a custom link rather than a page link, which is at least clearer. Both of these features still persist with the "home" and "front page" confusion, however as the link being added is actually a reference to the "front page" (often the site home) rather than the WP concept of "home".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37918 (wp_remote_get skips first line under some cirumstances) created</title>
      
        <dc:creator>tastenchris</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37918/1472805583278593</guid>
      <description>&lt;p&gt;
I am using a WP plugin called "amr event lists with ical files" to display an event list from a google calendar. The plugin uses wp_remote_get to get the calendars ics data. Under some circumstances the return value of wp_remote_get lacks the first line of the calendar ("BEGIN:VCALENDAR"). The plugins author and I tried to figure out in what circumstances this happens, but without success.
There is an example URL showing the described effect used in my WP page: &lt;a class="ext-link" href="https://calendar.google.com/calendar/ical/ldncnjg2a0tjv7f36p4kri9eqg%40group.calendar.google.com/public/basic.ics"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://calendar.google.com/calendar/ical/ldncnjg2a0tjv7f36p4kri9eqg%40group.calendar.google.com/public/basic.ics&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Getting this URL with wget or curl results in consistent calendar data, getting it via wp_remote_get the first line is missing. This happens since WP 4.6, no problem in earlier versions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Fri, 02 Sep 2016 08:20:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:158</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:158/1472804404396320</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:154" title="Comment 154"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Minimally I think if we are going to discuss an autoloader based on Composer we should respect @dnaber-de and not hijack his ticket.  Instead we should discuss his proposal &lt;em&gt;(which I think is mostly good)&lt;/em&gt; and give it a thumbs up or a thumbs down.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm perfectly fine with the direction the ticket goes (until the discussion went somehow off topic), but thanks. My intention was to have a single autoloader instance for performance reasons. If that would have been a custom implementation I'd have to write a composer plugin that uses this WordPress own implementation. If WordPress uses Composer itself, it's even better. I read opposed arguments, thought about it and finally let them convince me that this is the best way to go.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:152" title="Comment 152"&gt;TJNovel&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As an aside, Core could include a Composer autoloader if it exists, even if it doesn't make use of it internally. This would be a great help for those of us who use Composer, eliminating an extra step in the setup, and standardising when the autoloader is added.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly. That would be the next step to take, to make WordPress configurable to include an external composer autoload file if WordPress is installed via composer. So let's focus on the topic and discuss @schlessera 's proposal and move the &lt;code&gt;composer.json&lt;/code&gt; back to the root of the repository.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Fri, 02 Sep 2016 07:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:11/1472800274578682</guid>
      <description>&lt;p&gt;
Thank you, I did not realize that! So the only way to add draft item is publish some post, add it to menu and then unpublish it? It is only callback for unpublished items which were part of menu?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37708 (`wp_http_supports()` doesn't reflect what Requests can do) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2016 07:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37708#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37708#comment:2/1472800040411896</guid>
      <description>&lt;p&gt;
I couldn't see anything in Requests that we could use, but I also feel that adding a method for checking to see if we can *maybe* support SSL wouldn't be out of the question..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:157</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:157/1472799159919095</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:156" title="Comment 156"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You are definitely not in the majority of people working with WordPress and thus I did not include your archetype in the list above. My experience you represent a very tiny percent of people who are new to WordPress; most people new to WordPress were not previously PHP developers.   AND you also represent a group of people who &lt;em&gt;(hopefully would)&lt;/em&gt; have the skills to figure things out vs. those who first learned PHP in order to theme WordPress or write a plugin for WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure I follow or agree here.  I maintain that the vast majority whom are new to WordPress and to PHP _really_ don't care how an auto loader in core gets constructed.  They just care that core works, full stop.  Nothing about an autoloader in core increases the technical hurdle for the vast majority doing all the things they do with WordPress. By the time they care about core, they're at least at my level (Unrelated but you probably over-estimate my PHP skills, I've been around WP a long time and can figure things out by I'm a hack).
&lt;/p&gt;
&lt;p&gt;
The vast majority that touch PHP just tweak themes, and maybe right a simple functional plugins. Nothing about that space changes with an autoloader in core, let alone how an auto loader gets constructed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I do think to discuss Composer it should be done on a ticket that provides the proposal clearly in the title and description of the ticket.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Certainly, adding composer for composer's sake should get discussed elsewhere and I certainly didn't mean to derail into that. Just as I said above, I don't think a composer vs non-composer autoloader makes a technical difference for anyone looking into core for the first time.
&lt;/p&gt;
&lt;p&gt;
FWIW, the interface vs. implementation abstraction seems way more complicated to me but I could figure it out and after a lot of years I've learned to embrace such abstractions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:194</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:194/1472798139973389</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472798137001089"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:10/1472798031638676</guid>
      <description>&lt;p&gt;
@pavelevap that is speaking of the &lt;code&gt;nav_menu_item&lt;/code&gt; post itself, not the status of the underlying &lt;code&gt;object&lt;/code&gt; that is being referenced. See my &lt;a href="https://core.trac.wordpress.org/ticket/33742#comment:5"&gt;comment above&lt;/a&gt; about “draft nav menu items”. There is no UI to create such draft nav menu items, but there is a UI to show them if they are in a draft (pending) status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:26/1472798013937040</guid>
      <description>&lt;p&gt;
Hey @remedy17 Daniel with SiteGround here :) The patch that needs to be applied is:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/37696/37696.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/37696/37696.diff&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you cannot apply it open a support ticket and our support team will apply the patch for you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:31:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705#comment:5/1472797899400440</guid>
      <description>&lt;p&gt;
I think stubbing &lt;code&gt;WP_Http::buildCookieHeader&lt;/code&gt; makes sense.  Agree with the other two pieces.  These should get a dev note when this goes in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:193</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:193/1472797887354994</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.12.diff" title="Attachment '17817.12.diff' in Ticket #17817"&gt;17817.12.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.12.diff" title="Download"&gt;​&lt;/a&gt; fixes some unit tests, and updates the &lt;code&gt;@since&lt;/code&gt; docs.
&lt;/p&gt;
&lt;p&gt;
There was a bug I've been running into, triggered by this code. It's kind of ugly, but not insane.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
Plugin Name: lol
 */&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;remove_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When &lt;code&gt;remove_filter()&lt;/code&gt; is called, it eventually gets to &lt;code&gt;WP_Hook::resort_active_iterations()&lt;/code&gt;. While the logic in this method was sound, the &lt;code&gt;foreach()&lt;/code&gt; was resetting the array pointer for each item in &lt;code&gt;$this-&amp;gt;iterations&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In the above example, the result was that, when &lt;code&gt;foo()&lt;/code&gt; returned to &lt;code&gt;WP_Hook::apply_filters()&lt;/code&gt;, the internal pointer of &lt;code&gt;$this-&amp;gt;iterations[ $nesting_level ]&lt;/code&gt; had been reset to the first element, instead of staying where it was supposed to.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.13.diff" title="Attachment '17817.13.diff' in Ticket #17817"&gt;17817.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.13.diff" title="Download"&gt;​&lt;/a&gt; fixes this bug by operating on a reference to each element in the &lt;code&gt;WP_Hook::resort_active_iterations()&lt;/code&gt; loop.
&lt;/p&gt;
&lt;p&gt;
It also bails on the loop early when the &lt;code&gt;current()&lt;/code&gt; element is &lt;code&gt;false&lt;/code&gt;, there's no need to loop through an array that we're already at the end of.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.13.diff" title="Attachment '17817.13.diff' in Ticket #17817"&gt;17817.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.13.diff" title="Download"&gt;​&lt;/a&gt; needs unit tests to confirm that this behaviour is fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:9/1472797627680416</guid>
      <description>&lt;p&gt;
Interesting, but I do not think that it is a bug, but expected feature? See for example string &lt;code&gt;pendingTitleTpl&lt;/code&gt; with comment &lt;code&gt;/* translators: %s: title of menu item in draft status */&lt;/code&gt; This string will be no longer needed in this case? And what about users using this feature? It can be used for scheduled posts added to menu before publication or it does not work this way?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.13.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:21:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.13.diff/1472797318837031</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705#comment:4/1472797216157424</guid>
      <description>&lt;p&gt;
Judging by that list, I think we can..
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Keep &lt;code&gt;WP_Http::is_ip_address()&lt;/code&gt; as a util
&lt;/li&gt;&lt;li&gt;Stub &lt;code&gt;_get_first_available_transport()&lt;/code&gt; / &lt;code&gt;$wp_http-&amp;gt;_get_first_available_transport&lt;/code&gt; and &lt;code&gt;return null&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Possibly keep &lt;code&gt;WP_Http::buildCookieHeader&lt;/code&gt; or stub it out and &lt;code&gt;return null&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Looking at a few uses where &lt;code&gt;WP_Http::buildCookieHeader&lt;/code&gt; was used, the HTTP api has been extended in such a way that it's broken under 4.6 or they're replacing large chunks of it anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:18:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:5/1472797092568381</guid>
      <description>&lt;p&gt;
@dlh Good question. I think the idea on not checking for a modified &lt;code&gt;notification.message&lt;/code&gt; is that generally the message would just be a human-readable version of the &lt;code&gt;notification.code&lt;/code&gt;. But since this was unexpected for you, it's probably not something that should in fact be assumed. I've updated the patch to also check for a difference in &lt;code&gt;message&lt;/code&gt;: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37890/37890.3.diff" title="Attachment '37890.3.diff' in Ticket #37890"&gt;37890.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37890/37890.3.diff" title="Download"&gt;​&lt;/a&gt;. If that works for you, I'll commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37890.3.diff attached to Ticket #37890</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:16:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37890/37890.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37890/37890.3.diff/1472797008732523</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37705 (Remove unnecessary parts of WP_HTTP which remain) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 06:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37705#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37705#comment:3/1472796692538059</guid>
      <description>&lt;p&gt;
&lt;code&gt;ack-grep --php --ignore-dir=Aws --ignore-dir=Guzzle --ignore-dir=guzzle --ignore-dir=aws "_get_first_available_transport|processResponse|buildCookieHeader|chunkTransferDecode|handle_redirects|is_ip_address"&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Returned a bunch of results (attached above).  Digging through, here is what I found ( besides a number of people that include copies of WP_Http :( )
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/stream/trunk/classes/class-filter-input.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/fakerpress/trunk/inc/class-fp-variable.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/placester/trunk/lib/http.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::buildCookieHeader&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/core-control/trunk/modules/core_control_http_log.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;$wp_http-&amp;gt;_get_first_available_transport&lt;/a&gt; &amp;lt;-- @dd32
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/litespeed-cache/trunk/admin/class-litespeed-cache-admin.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/google-app-engine/trunk/modules/urlfetch.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::buildCookieHeader&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/coschedule-by-todaymade/trunk/tm-scheduler.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;$http-&amp;gt;_get_first_available_transport&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/picasa-express-x2/trunk/picasa-express-2.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::_get_first_available_transport&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/all-in-one-wp-security-and-firewall/trunk/classes/wp-security-utility-ip-address.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/anybackup/trunk/includes/class-persistent-http.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::buildCookieHeader and WP_HTTP::handle_redirects&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/wpgform/trunk/wpgform-core.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;_get_first_available_transport&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/diagnostic-tool/lib/DTOutboundConnection.class.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;_get_first_available_transport&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/mainwp-child-reports/trunk/includes/filter-input.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::is_ip_address&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/feedwordpress/trunk/feedwordpresshttpauthenticator.class.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Http::_get_first_available_transport (in one other file as well)&lt;/a&gt;
&lt;a class="ext-link" href="https://plugins.svn.wordpress.org/facebook/trunk/admin/settings-debug.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;$http_obj-&amp;gt;_get_first_available_transport&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:58:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:8/1472795899083114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm inclined to agree with @welcher that it is a bug to be able to add non-publish posts to a nav menu, and so &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/33742.diff" title="Attachment '33742.diff' in Ticket #33742"&gt;33742.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/33742.diff" title="Download"&gt;​&lt;/a&gt; is the way to go. But actually, the underlying issue here is that the following logic isn't getting applied to searches like it is for when &lt;code&gt;wp_nav_menu_item_post_type_meta_box&lt;/code&gt; runs:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$box&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'args'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;_default_query&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$box&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'args'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;_default_query&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So the fix I think is to make sure the same &lt;code&gt;_default_query&lt;/code&gt; is merged with the query vars when a search as done, just as when the list generated. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/33742.2.diff" title="Attachment '33742.2.diff' in Ticket #33742"&gt;33742.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/33742.2.diff" title="Download"&gt;​&lt;/a&gt; which does this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33742.2.diff attached to Ticket #33742</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:56:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33742/33742.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33742/33742.2.diff/1472795789044374</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37705.txt attached to Ticket #37705</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:36:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37705/37705.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37705/37705.txt/1472794588117023</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:27:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:156/1472794039277604</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:155" title="Comment 155"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As one of the those in the "different levels of programmers" group. I don't see how adding an autoloader to core would hurt my ability, or my fellow novice and intermediates, from working with WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You misunderstood my comments. I would definitely like to see an autoloader added to WordPress. I proposed one 22 months ago &lt;a href="https://core.trac.wordpress.org/ticket/30203"&gt;here on Trac&lt;/a&gt;.  Instead I have an objection to the use of Composer as I believe it is a poor fit for use with WordPress.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In fact I feel like most new developers are coming to WP having learned current best practices elsewhere (Zend/Laravelle) so they are more confused when they discover WP doesn't do things more modern (advanced) way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are definitely not in the majority of people working with WordPress and thus I did not include your archetype in the list above. My experience you represent a very tiny percent of people who are new to WordPress; most people new to WordPress were not previously PHP developers.   AND you also represent a group of people who &lt;em&gt;(hopefully would)&lt;/em&gt; have the skills to figure things out vs. those who first learned PHP in order to theme WordPress or write a plugin for WordPress.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A point I'm unclear on at this point in the discussion is about use outside of core which I think needs at least superficial consideration....If the answer is based on composer. Is the thought that plugin/theme developers could then leverage composer directly from core to create their own auto-loader, or is the thought that they would directly use a Core autoloader class?  As a middle level dev, I only really care about two things, 1) that how core does it works seamlessly and painlessly, and 2) if I can/can't/should/shouldn't leverage how core does it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those are great questions, and ones I am definitely not clear on either.
&lt;/p&gt;
&lt;p&gt;
But I do think to discuss Composer it should be done on a ticket that provides the proposal clearly in the title and description of the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:21:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:7/1472793671972904</guid>
      <description>&lt;p&gt;
@welcher would you be willing to investigate and look into what is going on here? This definitely feels like a bug to me at first glance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37822 (Text area misaligned on network setting.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37822#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37822#comment:4/1472793509998841</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by jorbin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472793507000054"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37822 (Text area misaligned on network setting.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37822#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37822#comment:3/1472793484494378</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:155/1472793209990933</guid>
      <description>&lt;p&gt;
First, I read this whole thread and learned a lot. I really wish more trac tickets had such intelligent discussion. TY to all of you.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:150" title="Comment 150"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is an effort to bring de facto PHP best practices to WordPress, trying to get it out of the "legacy software" drawer it keeps getting put into more and more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a href="http://core.trac.wordpress.org/ticket/37699#comment:66"&gt;my comments ''(to you)'' here&lt;/a&gt; about there being different levels of programmers and how we should not be forcing all of them to be at the highest skill level.
&lt;/p&gt;
&lt;p&gt;
Think of them as diffferent constituents, all of which we should guard their interests and not forsake any of them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As one of the those in the "different levels of programmers" group. I don't see how adding an autoloader to core would hurt my ability, or my fellow novice and intermediates, from working with WordPress.  For the most part novice and intermediate level developers expect core to "just work" out fo the box and it does so with or without an autoloader.
&lt;/p&gt;
&lt;p&gt;
In fact I feel like most new developers are coming to WP having learned current best practices elsewhere (Zend/Laravelle) so they are more confused when they discover WP doesn't do things more modern (advanced) way. Adopting an auto-loader might even help the them.  Really though my point is I don't think developer expertise issue really comes into play when we're talking about core until you get really freaky.
&lt;/p&gt;
&lt;p&gt;
If/when plugin devs can later leverage a core loader I think it would further help those same programmers since they'd start seeing things done in a similar way across multiple plugins, rather than the anarchy that currently exists (most often seems to be using Composer, but I see weird bespoke systems too).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
While it sounds like the goal of this ticket is simply an auto loader for core (yay for narrow focus) and that the likely candidate for the is Composer while still considering other options.  A point I'm unclear on at this point in the discussion is about use outside of core which I think needs at least superficial consideration.
&lt;/p&gt;
&lt;p&gt;
If the answer is based on composer. Is the thought that plugin/theme developers could then leverage composer directly from core to create their own auto-loader, or is the thought that they would directly use a Core autoloader class?  As a middle level dev, I only really care about two things, 1) that how core does it works seamlessly and painlessly, and 2) if I can/can't/should/shouldn't leverage how core does it.
&lt;/p&gt;
&lt;p&gt;
From what I've read here, it sounds like there would be a lot of value to using composer in a way that plugin/theme devs could leverage it directly, but as a middle level developer, I'll certainly defer to the experienced folks here just thought an opinion from a "different group" might help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37875 (Admin sidebar (parent) links don't work when clicked before sub-menu ...) updated</title>
      
        <dc:creator>mklusak</dc:creator>

      <pubDate>Fri, 02 Sep 2016 05:10:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37875#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37875#comment:5/1472793006633841</guid>
      <description>&lt;p&gt;
@adamsilverstein Ha, I didn't notice there is a new version (53) of Chrome, but updating it did not change this behavior. I have Windows 10 Pro OS.
&lt;/p&gt;
&lt;p&gt;
Today I will have another PC with Win10, and will check it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34113 (Add a 'View Archive' link to admin bar for post types.) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34113#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34113#comment:13/1472790653595079</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:49/1472790582428071</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:48" title="Comment 48"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:47" title="Comment 47"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Sorry I didn't explain this here but I made the above plugin so changes to the editor buttons can be tested easily. You can modify what buttons are shown and the ordering, then even upload the modified plugin here so other can test it. There is a list of all supported buttons in the plugin source.
&lt;/p&gt;
&lt;p&gt;
Currently the plugin changes the buttons to what iseulde proposed. To modify it, simply rearrange or remove the button names from the two arrays.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh cool! I'll do that. Thank you for the info Andrew.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37061 (Use `get_sites()` in `get_blogs_of_user()`) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37061#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37061#comment:2/1472790556194532</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37061#comment:1" title="Comment 1"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A minor issue is that on a non-multisite, the array will still contain a raw object since &lt;code&gt;WP_Site&lt;/code&gt; is not available there, so one has to be aware of that. However, I still think we should do this as it's an improvement for Multisite setups.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think having something different returned under MS from single site is a good decision. Seems like something that could cause plugins to have bugs only under one or the other. Or for code originally written for MS to not work and cause confusion when run on single site installs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37053 (Ensure `get_site_by_path()` returns a `WP_Site`) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37053#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37053#comment:3/1472790317819710</guid>
      <description>&lt;p&gt;
@jeremyfelt what are you thoughts on this one?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37596 (Update Press This' `normalize.css` 3rd party external library) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37596#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37596#comment:4/1472790266427142</guid>
      <description>&lt;p&gt;
What about moving normalize into its own file and then having press-this.css include it?  Seems like that will make it easier to keep this up to date going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37553 (Deprecate `wp_get_network()`) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37553#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37553#comment:5/1472790097147993</guid>
      <description>&lt;p&gt;
Should there be a comment about why the function is located here rather than with the other deprecated functions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35774 (WordPress admin &lt;title&gt; structure) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35774#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35774#comment:14/1472789969031005</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch needs translator comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34105 (kses strips tags with hyphens in the name) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:16:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34105#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34105#comment:5/1472789761316234</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38511" title="Formatting: Allow KSES custom elements with hyphens
The W3C Custom ..."&gt;38511&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Formatting: Allow KSES custom elements with hyphens&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The W3C Custom Elements spec (&lt;a class="ext-link" href="http://www.w3.org/TR/custom-elements/#concepts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/custom-elements/#concepts&lt;/a&gt;) allows you to use your own custom DOM elements/tags. One of the main requirements is that the tag name "must contain a U+002D HYPHEN-MINUS character". This adjusts KSES to allow it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34105" title="#34105: defect (bug): kses strips tags with hyphens in the name (closed: fixed)"&gt;#34105&lt;/a&gt;.&lt;br /&gt;
Props batmoo.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38511]: Formatting: Allow KSES custom elements with hyphens  The W3C Custom ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38511</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38511/1472789760851780</guid>
      <description>&lt;p&gt;
Formatting: Allow KSES custom elements with hyphens
&lt;/p&gt;
&lt;p&gt;
The W3C Custom Elements spec (&lt;a class="ext-link" href="http://www.w3.org/TR/custom-elements/#concepts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/custom-elements/#concepts&lt;/a&gt;) allows you to use your own custom DOM elements/tags. One of the main requirements is that the tag name "must contain a U+002D HYPHEN-MINUS character". This adjusts KSES to allow it.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34105" title="#34105: defect (bug): kses strips tags with hyphens in the name (closed: fixed)"&gt;#34105&lt;/a&gt;.
Props batmoo.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37792 (Error messages in wp-includes/class-wp-xmlrpc-server.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37792#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37792#comment:5/1472789573112507</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38510" title="I18N: Add translator comments for XML-RPC strings with placeholders.
 ..."&gt;38510&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Add translator comments for XML-RPC strings with placeholders.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37792" title="#37792: defect (bug): Error messages in wp-includes/class-wp-xmlrpc-server.php (closed: fixed)"&gt;#37792&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38510]: I18N: Add translator comments for XML-RPC strings with placeholders.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38510</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38510/1472789572652707</guid>
      <description>&lt;p&gt;
I18N: Add translator comments for XML-RPC strings with placeholders.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37792" title="#37792: defect (bug): Error messages in wp-includes/class-wp-xmlrpc-server.php (closed: fixed)"&gt;#37792&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 02 Sep 2016 04:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:4/1472788936912735</guid>
      <description>&lt;p&gt;
@westonruter &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37890/37890.2.diff" title="Attachment '37890.2.diff' in Ticket #37890"&gt;37890.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37890/37890.2.diff" title="Download"&gt;​&lt;/a&gt; looks good to me. While I don't have a real-world case to hand that I could test against the change to &lt;code&gt;from_server&lt;/code&gt;, I agree with you generally about not mutating the error data.
&lt;/p&gt;
&lt;p&gt;
One other thing I noticed while testing the patch: &lt;code&gt;$data&lt;/code&gt; is optional in &lt;code&gt;WP_Error::add()&lt;/code&gt;, but, in practice, it seems like the Customizer sometimes requires it because it compares the &lt;code&gt;data&lt;/code&gt; property in JS before determining whether the notification &lt;code&gt;needsReplacement&lt;/code&gt;. Just adding a different &lt;code&gt;$message&lt;/code&gt; to the &lt;code&gt;WP_Error&lt;/code&gt; isn't enough to replace the notification if &lt;code&gt;$code&lt;/code&gt; is unchanged and  &lt;code&gt;$data&lt;/code&gt; is a blank string each time (or the same of whatever value).
&lt;/p&gt;
&lt;p&gt;
Again, not a huge issue, and it might be intentional -- just took me a minute to realize why my error message wasn't changing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37806 (Attachment Details - Edit: uneven height between input field and ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37806#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37806#comment:2/1472788704491082</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35390 (image_constrain_size_for_editor() should not affect images generated ...) updated</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:58:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35390#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35390#comment:23/1472788683311399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37792 (Error messages in wp-includes/class-wp-xmlrpc-server.php) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37792#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37792#comment:4/1472788582917948</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38509" title="Text Changes: Improve Error messages in XML-RPC
Three changes to the ..."&gt;38509&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Text Changes: Improve Error messages in XML-RPC&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Three changes to the error message strings:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add some missing periods.
&lt;/li&gt;&lt;li&gt;merge similar translation strings.
&lt;/li&gt;&lt;li&gt;remove the "Something wrong happened" suffix.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37792" title="#37792: defect (bug): Error messages in wp-includes/class-wp-xmlrpc-server.php (closed: fixed)"&gt;#37792&lt;/a&gt;.&lt;br /&gt;
Props ramiy.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38509]: Text Changes: Improve Error messages in XML-RPC  Three changes to the ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38509</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38509/1472788582456510</guid>
      <description>&lt;p&gt;
Text Changes: Improve Error messages in XML-RPC
&lt;/p&gt;
&lt;p&gt;
Three changes to the error message strings:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add some missing periods.
&lt;/li&gt;&lt;li&gt;merge similar translation strings.
&lt;/li&gt;&lt;li&gt;remove the "Something wrong happened" suffix.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37792" title="#37792: defect (bug): Error messages in wp-includes/class-wp-xmlrpc-server.php (closed: fixed)"&gt;#37792&lt;/a&gt;.
Props ramiy.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22247 (Ensure post ID evaluates to true before adding "Edit post" tab in admin bar) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:51:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22247#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22247#comment:8/1472788261622622</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38508" title="Toolbar: Add unit tests for edit links.
When there is no post ID, ..."&gt;38508&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Toolbar: Add unit tests for edit links.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When there is no post ID, there should be no edit link. This adds unit tests for it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22247" title="#22247: defect (bug): Ensure post ID evaluates to true before adding &amp;#34;Edit post&amp;#34; tab in admin bar (closed: fixed)"&gt;#22247&lt;/a&gt;.&lt;br /&gt;
Props akibjorklund.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38508]: Toolbar: Add unit tests for edit links.  When there is no post ID, ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:51:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38508</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38508/1472788261123712</guid>
      <description>&lt;p&gt;
Toolbar: Add unit tests for edit links.
&lt;/p&gt;
&lt;p&gt;
When there is no post ID, there should be no edit link. This adds unit tests for it.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22247" title="#22247: defect (bug): Ensure post ID evaluates to true before adding &amp;#34;Edit post&amp;#34; tab in admin bar (closed: fixed)"&gt;#22247&lt;/a&gt;.
Props akibjorklund.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37653 (customizer sections with 'active_callback' set to 'is_front_page' ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37653#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37653#comment:5/1472787867674517</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some unit tests might be able to help demonstrate this and get this fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>drtonyb</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:17:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:5/1472786264952350</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37901#comment:4" title="Comment 4"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hmm, I could not reproduce the original issue though.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/admin-bar.php#L683"&gt;wp_admin_bar_comments_menu()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-includes/admin-bar.php#L683" title="Download"&gt;​&lt;/a&gt; is only used in the main toolbar, not in "My Sites" menu.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/admin-bar.php#L494"&gt;Manage Comments item&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-includes/admin-bar.php#L494" title="Download"&gt;​&lt;/a&gt; in &lt;code&gt;wp_admin_bar_my_sites_menu()&lt;/code&gt; does not have a duplicate ID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My mistake - on further investigation I have found that the problem is not in the core function &lt;code&gt;wp_admin_bar_my_sites_menu()&lt;/code&gt;. I've tracked to problem to a plugin called &lt;code&gt;multisite-enhancements&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34981 (Usage of `image_size_names_choose` breaks JS attachment model attributes) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34981#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34981#comment:4/1472785804554029</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thought for a second that maybe the &lt;code&gt;image_size_names_choose&lt;/code&gt; filter could just be removed, but that would reintroduce &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22598" title="#22598: defect (bug): Not using image_downsize() in wp_prepare_attachment_for_js() can break ... (closed: fixed)"&gt;#22598&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think context is going to be the key, but I agree with @dnaber-de that it shouldn't be tied to the name of the function, but to the actual context.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:192</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:192/1472785335275263</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472785331001061"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34981.2.diff attached to Ticket #34981</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 03:00:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34981/34981.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34981/34981.2.diff/1472785221805373</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34335 (URL shorteners ( redirects) should to be supported by the embed ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 02 Sep 2016 02:08:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34335#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34335#comment:9/1472782120002309</guid>
      <description>&lt;p&gt;
@swissspidy what improvements would you like to see on this patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2016 01:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:7/1472780490834286</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37904#comment:6" title="Comment 6"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32 It's not a 4.6 regression, and not even a 4.1 regression, strictly - it was an oversight when the feature was first introduced. That said, it's minor and perfectly safe for 4.6.x inclusion, if you think it's warranted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I misread it and thought that &lt;code&gt;orderby=include&lt;/code&gt; was a 4.6 thing, never mind, this doesn't need to be in a 4.6.x
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 02 Sep 2016 01:39:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:6/1472780369829436</guid>
      <description>&lt;p&gt;
@dd32 It's not a 4.6 regression, and not even a 4.1 regression, strictly - it was an oversight when the feature was first introduced. That said, it's minor and perfectly safe for 4.6.x inclusion, if you think it's warranted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.12.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 01:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.12.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.12.diff/1472779593674236</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:191</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:191/1472777535282956</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472777530001021"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:5/1472775969299829</guid>
      <description>&lt;p&gt;
@boonebgorges Do you want to target this for a potential 4.6.x?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:48/1472775794463481</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:47" title="Comment 47"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Sorry I didn't explain this here but I made the above plugin so changes to the editor buttons can be tested easily. You can modify what buttons are shown and the ordering, then even upload the modified plugin here so other can test it. There is a list of all supported buttons in the plugin source.
&lt;/p&gt;
&lt;p&gt;
Currently the plugin changes the buttons to what iseulde proposed. To modify it, simply rearrange or remove the button names from the two arrays.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37660 (RegEx in wpdb::get_table_from_query( $q ) in wp-db.php returns ...) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37660#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37660#comment:3/1472775529673716</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38507" title="Database: Find the correct table names in `DELETE` queries with table ..."&gt;38507&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Find the correct table names in &lt;code&gt;DELETE&lt;/code&gt; queries with table aliases&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, &lt;code&gt;wpdb::get_table_from_query()&lt;/code&gt; would not find the correct table name in the query &lt;code&gt;DELETE a FROM table a&lt;/code&gt;, due to not recognising the table alias immediately after the &lt;code&gt;DELETE&lt;/code&gt; as correct syntax.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37660" title="#37660: defect (bug): RegEx in wpdb::get_table_from_query( $q ) in wp-db.php returns ... (closed: fixed)"&gt;#37660&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38507]: Database: Find the correct table names in `DELETE` queries with table ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38507</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38507/1472775529208086</guid>
      <description>&lt;p&gt;
Database: Find the correct table names in &lt;code&gt;DELETE&lt;/code&gt; queries with table aliases
&lt;/p&gt;
&lt;p&gt;
Previously, &lt;code&gt;wpdb::get_table_from_query()&lt;/code&gt; would not find the correct table name in the query &lt;code&gt;DELETE a FROM table a&lt;/code&gt;, due to not recognising the table alias immediately after the &lt;code&gt;DELETE&lt;/code&gt; as correct syntax.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37660" title="#37660: defect (bug): RegEx in wpdb::get_table_from_query( $q ) in wp-db.php returns ... (closed: fixed)"&gt;#37660&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37875 (Admin sidebar (parent) links don't work when clicked before sub-menu ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37875#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37875#comment:4/1472775513919588</guid>
      <description>&lt;p&gt;
@mklusak  - what operating system are you using? on a mac, I'm seeing 53 as current stable release of chrome, can you try upgrading your chrome? i am still unable to reproduce.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:9/1472775036988027</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you very much for your work, @ideag!
&lt;/p&gt;
&lt;p&gt;
I made some minor naming and formatting adjustments to the tests, but otherwise, it all looked good!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:8/1472774982508375</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38506" title="Shortcodes: Add the `pre_do_shortcode_tag` filter.
This filter allows ..."&gt;38506&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Shortcodes: Add the &lt;code&gt;pre_do_shortcode_tag&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This filter allows the shortcode generation process to be short-circuited, so expensive short codes can be cached and returned immediately.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ideag.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37906" title="#37906: enhancement: Filter to short-circuit do_shortcode_tag (closed: fixed)"&gt;#37906&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38506]: Shortcodes: Add the `pre_do_shortcode_tag` filter.  This filter allows ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38506</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38506/1472774982051059</guid>
      <description>&lt;p&gt;
Shortcodes: Add the &lt;code&gt;pre_do_shortcode_tag&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
This filter allows the shortcode generation process to be short-circuited, so expensive short codes can be cached and returned immediately.
&lt;/p&gt;
&lt;p&gt;
Props ideag.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37906" title="#37906: enhancement: Filter to short-circuit do_shortcode_tag (closed: fixed)"&gt;#37906&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35905 (Filter to filter default smilies) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35905#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35905#comment:7/1472774842566083</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38505" title="Docs: Correct `@since` entry for the `smilies` filter added in ..."&gt;38505&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Correct &lt;code&gt;@since&lt;/code&gt; entry for the &lt;code&gt;smilies&lt;/code&gt; filter added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38504" title="Smilies: Add the `smilies` filter.
This new filter allows the smilies ..."&gt;[38504]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35905" title="#35905: enhancement: Filter to filter default smilies (closed: fixed)"&gt;#35905&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38505]: Docs: Correct `@since` entry for the `smilies` filter added in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2016 00:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38505</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38505/1472774842063759</guid>
      <description>&lt;p&gt;
Docs: Correct &lt;code&gt;@since&lt;/code&gt; entry for the &lt;code&gt;smilies&lt;/code&gt; filter added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38504" title="Smilies: Add the `smilies` filter.
This new filter allows the smilies ..."&gt;[38504]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35905" title="#35905: enhancement: Filter to filter default smilies (closed: fixed)"&gt;#35905&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35905 (Filter to filter default smilies) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35905#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35905#comment:6/1472774399527535</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38504" title="Smilies: Add the `smilies` filter.
This new filter allows the smilies ..."&gt;38504&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Smilies: Add the &lt;code&gt;smilies&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This new filter allows the smilies array to be modified with a filter, instead of having to directly access the global.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mte90, jorbin.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35905" title="#35905: enhancement: Filter to filter default smilies (closed: fixed)"&gt;#35905&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38504]: Smilies: Add the `smilies` filter.  This new filter allows the smilies ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38504</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38504/1472774399064509</guid>
      <description>&lt;p&gt;
Smilies: Add the &lt;code&gt;smilies&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
This new filter allows the smilies array to be modified with a filter, instead of having to directly access the global.
&lt;/p&gt;
&lt;p&gt;
Props mte90, jorbin.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35905" title="#35905: enhancement: Filter to filter default smilies (closed: fixed)"&gt;#35905&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>remedy17</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:43:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:25/1472773393797310</guid>
      <description>&lt;p&gt;
Hi folks, my site is hosted at SiteGround, have the same issue with a missing strings in SQL query.
&lt;/p&gt;
&lt;p&gt;
.....at line 1]
SELECT wp_comments.comment_ID, wp_comments.comment_parent WHERE AND comment_parent IN (116) ORDER BY comment_date_gmt ASC,....
&lt;/p&gt;
&lt;p&gt;
Is the patch something that I can borrow from you guys at least until WP 4.6.1 or whenever it makes it into core?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37734 (Fix docs for `user_trailingslashit` filter) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37734#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37734#comment:4/1472772652031514</guid>
      <description>&lt;p&gt;
@DrewAPicture LGTY?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722#comment:5/1472772398331211</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Improving the documentation could be a good first bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35905 (Filter to filter default smilies) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35905#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35905#comment:5/1472772052173805</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch is updated and includes two unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35905.diff attached to Ticket #35905</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35905/35905.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35905/35905.diff/1472771980101928</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 23:10:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:11/1472771433111167</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@tollmanz I agree, I'd like to do some research over the course of the release cycle. The &lt;code&gt;async&lt;/code&gt; attribute on inserted scripts is implied.
&lt;/p&gt;
&lt;p&gt;
Does &lt;code&gt;defer&lt;/code&gt; hurt browsers lacking support, Can I Use indicates &lt;a class="ext-link" href="http://caniuse.com/#feat=script-defer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;browser support&lt;/a&gt; has improved?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37589 (Safari, VoiceOver and the CSS property user-select) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37589#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37589#comment:5/1472769250428514</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472769246001013"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37708 (`wp_http_supports()` doesn't reflect what Requests can do) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:15:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37708#comment:1/1472768115862374</guid>
      <description>&lt;p&gt;
I like the first option, though a quick look through Requests makes me think it doesn't have that functionality.  @rmccue - Does that sound correct?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27253 (Enhancement Request: direct link to Drafts under Posts and Pages on ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27253#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27253#comment:9/1472767867635334</guid>
      <description>&lt;p&gt;
Thinking about this in the context of custom post statuses, I wonder if &lt;code&gt;register_post_type&lt;/code&gt; should include a &lt;code&gt;show_status_in_menu&lt;/code&gt; argument that takes an array of statuses and is empty by default.  If a status is passed in, it adds a menu link for the status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37321 (Improve documentation of user_can_richedit()) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37321#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37321#comment:4/1472767544502059</guid>
      <description>&lt;p&gt;
@DrewAPicture - Can you give this a read?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37527 (Customizer: Links within text should be underlined) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37527#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37527#comment:13/1472767425033081</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37527#comment:11" title="Comment 11"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
and then leaving the ticket open for a few weeks to track any issues that come up.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Conversation can continue on closed tickets :) feel free to reopen at any time if you notice issues to address.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37527 (Customizer: Links within text should be underlined) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37527#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37527#comment:12/1472767305096111</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38503" title="Accessibility: Make links in the Customizer underlined by default.
 ..."&gt;38503&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Make links in the Customizer underlined by default.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Links within lines or blocks of text should always be underlined since they can't&lt;br /&gt;
rely on color alone to be distinguished from the surrounding text. Exceptions&lt;br /&gt;
can be handled on a case-by-case basis.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Presskopp for the initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37527" title="#37527: defect (bug): Customizer: Links within text should be underlined (closed: fixed)"&gt;#37527&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38503]: Accessibility: Make links in the Customizer underlined by default.  ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38503</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38503/1472767304624608</guid>
      <description>&lt;p&gt;
Accessibility: Make links in the Customizer underlined by default.
&lt;/p&gt;
&lt;p&gt;
Links within lines or blocks of text should always be underlined since they can't
rely on color alone to be distinguished from the surrounding text. Exceptions
can be handled on a case-by-case basis.
&lt;/p&gt;
&lt;p&gt;
Props Presskopp for the initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37527" title="#37527: defect (bug): Customizer: Links within text should be underlined (closed: fixed)"&gt;#37527&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Thu, 01 Sep 2016 22:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:47/1472767245930471</guid>
      <description>&lt;p&gt;
Just adding my voice here to show support for some ideas:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Moving &lt;code&gt;formatselect&lt;/code&gt; to the first line of options has been on my request list for as long as I've used WordPress. It may be the most important feature in the editor to ensure proper semantic structure within posts and pages.
&lt;/li&gt;&lt;li&gt;Removing H1 in &lt;code&gt;formatselect&lt;/code&gt; is a good idea except for the few cases where a theme dev does something unusual that requires multiple H1s in a post/page. Also worth considering here are page builders and future things like page and post components. I know the whole "how many H1s can one have on a page" question is a huge war in the a11y and standards communities, but I have seen valid cases for both restricting H1 to a single instance and using it multiple times throughout a view. My proposal would be to disable it by default, and then provide a filter theme / plugin devs can use to reintroduce it where necessary.
&lt;/li&gt;&lt;li&gt;I oppose removing any of the buttons currently in the editor because a) people (devs and users) rely on them, and b) they all serve a relevant function. We can argue until the cows come home about the value of each of the existing buttons, but in the end what we have is an already heavily pruned list of features that people are used to. Further reduction of the list doesn't seem to improve UX in any significant way in my opinion.
&lt;/li&gt;&lt;li&gt;Reordering and weighting of the features would provide great UX improvements. Personally I would make the top (always-on) row display as follows: 1. &lt;code&gt;formatselect&lt;/code&gt;, 2. bold, 3. italicized, 4. strike through, 5. underline, 6. unordered list, 7. ordered list, 8. blockquote, 9. link, 10. unlink, 11. &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;, 12, &lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;, 13. kitchen sink toggle.
&lt;/li&gt;&lt;li&gt;Specifically to the question of Underline: An underline is semantically different from an underlined link, functioning as a further emphasis. You can underline normal, bold, and italicized text as well as text links. Theme developers can and should style a standard underline in a different way from a link underline. They should also ensure a link is not solely signified by an underline.
&lt;/li&gt;&lt;li&gt;@iseulde, I understand the idea of reducing the width of &lt;code&gt;formselect&lt;/code&gt; by only displaying "H", but this field is already somewhat mysterious to the end-user, and I fear such a change would make it ununderstandable. That said, I also think providing some form of context to explain this field would improve UX so...
&lt;/li&gt;&lt;li&gt;Any removal of a feature, to be provided only as a shortcut, is effectively a full removal of the feature. Very few users ever look up the shortcuts list, and those who rely on these features will not know to look for them in the shortcuts. If a feature is not visible in the UI, the user will assume the feature does not exist. This is why huge applications with hundreds of features allow the user the option of customizing their toolbar to include the features they want.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:71/1472765772664512</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:70" title="Comment 70"&gt;JamesDiGioia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FWIW, given that PHPStorm has built-in support for WordPress, there's a decent chance they would support the WordPress container OOTB if this landed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am just as concerned about the fact that this pattern if included in WordPress will be copied ad infinitum by plugin developers and few it any of these plugins will get the benefit of built-in support in PhpStorm.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not really sure the lack of IDE support should be a blocker here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not a blocker, just a request to not create the issue to begin with.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, if you're concerned about hitting as broad a group of developers as possible, IDE concerns aren't that high a priority, given that groups 1-3 probably aren't using PHPStorm anyway.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is a saying &lt;em&gt;"Make common cases easy and uncommon cases possible."&lt;/em&gt;  Using &lt;code&gt;WP::get()&lt;/code&gt; this would make those uncommon cases mostly not possible &lt;em&gt;(without a lot of extra work that most people won't know how to do.)&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
What I am suggesting really is as simple as this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If we know the name of the global variables we want to refactor -- which we do in all cases -- then let us create named actual methods to access and update them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
BTW, we could use &lt;code&gt;WP::__callStatic()&lt;/code&gt; instead of WP::get()` and then document all these global-state methods using PHPDoc; that would be another valid approach. But would be less performant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37917.patch attached to Ticket #37917</title>
      
        <dc:creator>ryan.kanner</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:35:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37917/37917.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37917/37917.patch/1472765709190833</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37917 (Users without the edit_private_posts capability can still create ...) created</title>
      
        <dc:creator>ryan.kanner</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37917</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37917/1472765546607172</guid>
      <description>&lt;p&gt;
Currently, users without the "edit_private_posts" capability, can still view the "Private" radio button under "Visibility". They can also save / publish the post (depending on their capabilities) with no issue. The same goes for pages as well with the "edit_private_pages" capability. I think it's reasonable enough to assume that users that don't have the "edit_private_{post_type}" capability, shouldn't be able to create posts with a visibility of private.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>JamesDiGioia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:17:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:70/1472764652554324</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:67" title="Comment 67"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:63" title="Comment 63"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is not true, and as every major framework uses containers, PHPStorm has several ways of providing type inspection for them. For a very simple way of adding this, see the article here: &lt;a class="ext-link" href="https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I was afraid that would be offered up as _"the solution."_  As you can see, &lt;a class="ext-link" href="https://youtrack.jetbrains.com/issue/WI-27830"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;I have been aware of this capability for a while&lt;/a&gt;, and in that link you can see that I think the way PhpStorm implements it is over-the-top complicated and it is very unlikely that most plugin or theme developers will master it.
&lt;/p&gt;
&lt;p&gt;
And yes &lt;code&gt;WP::get()&lt;/code&gt; is in core but if included in core it would define the pattern that many developers would mimic in their own plugins and themes and thus create proliferation of code that PhpStorm would flag with errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, given that PHPStorm has built-in support for WordPress, there's a decent chance they would support the WordPress container OOTB if this landed. I'm not really sure the lack of IDE support should be a blocker here.
&lt;/p&gt;
&lt;p&gt;
Additionally, if you're concerned about hitting as broad a group of developers as possible, IDE concerns aren't that high a priority, given that groups 1-3 probably aren't using PHPStorm anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37912 (Syntax indentation was missing for switch case) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:08:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37912#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37912#comment:2/1472764111778605</guid>
      <description>wontfix: &lt;p&gt;
@mangeshp, thanks for the report!
&lt;/p&gt;
&lt;p&gt;
getID3() is an external library, please submit the patch upstream: &lt;a class="ext-link" href="http://www.getid3.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.getid3.org/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If we update it in the future, the fix would probably be included, there is no need to have an extra Trac ticket for that.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #37475,​37911 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37475%2C37911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37475%2C37911/1472764040555136</guid>
      <description>duplicate: &lt;p&gt;
Hi @mangeshp, welcome to Trac! Thanks for the ticket, this was previously reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37475" title="#37475: defect (bug): Typo in module.audio-video.asf.php (closed: wontfix)"&gt;#37475&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
getID3() is an external library, please submit the patch upstream: &lt;a class="ext-link" href="http://www.getid3.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.getid3.org/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If we update it in the future, the fix would probably be included, there is no need to have an extra Trac ticket for that.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37913 (Switch/case string comparison is case-sensitive) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 21:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37913#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37913#comment:2/1472763730282785</guid>
      <description>wontfix: &lt;p&gt;
@mangeshp, thanks for the report!
&lt;/p&gt;
&lt;p&gt;
getID3() is an external library, please submit the patch upstream: &lt;a class="ext-link" href="http://www.getid3.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.getid3.org/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If we update it in the future, the fix would probably be included, there is no need to have an extra Trac ticket for that.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910#comment:3/1472763431156278</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:57:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910#comment:2/1472763424494138</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37916 (Customize: ability to disable content creation in menus) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:55:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37916</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37916/1472763333130324</guid>
      <description>&lt;p&gt;
There should be a hook to disable the ability to create new posts (and eventually terms, see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/37915" title="#37915: enhancement: Customize: allow terms to be created in nav menus (assigned)"&gt;#37915&lt;/a&gt;) in nav menus in the customizer. Ideally, it should be able to be disabled for specific post types as well as all post types. For terms, we'll need to turn it off for the &lt;code&gt;post_format&lt;/code&gt; taxonomy.
&lt;/p&gt;
&lt;p&gt;
This is being split out from the initial merge in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;, where there are patches with an approach we could take here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37915 (Customize: allow terms to be created in nav menus) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37915/1472763099049226</guid>
      <description>&lt;p&gt;
Follow up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;. When setting up initial site structure, in many cases it's as important to be able to create new terms to add to menus as the ability to create posts. For users, the distinction between terms and posts probably isn't immediately clear, so this functionality gap may be confusing.
&lt;/p&gt;
&lt;p&gt;
There are several patches on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt; that contain the needed framework here, but we need the ability to preview terms before we can add support for terms.
&lt;/p&gt;
&lt;p&gt;
This depends on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37914" title="#37914: enhancement: Taxonomy: Allow terms to be previewed before publishing (new)"&gt;#37914&lt;/a&gt;. Milestoning for 4.7 now for tracking, but we're waiting for that ticket before we can proceed here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37492 (Unifying translation strings in wp_die()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37492#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37492#comment:5/1472763051654132</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1472763049000014"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:48:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:14/1472762926035201</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37914 (Taxonomy: Allow terms to be previewed before publishing) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:40:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37914/1472762431724689</guid>
      <description>&lt;p&gt;
There is currently no mechanism to preview or draft taxonomy terms. As soon as a draft post with new terms is saved, for example, the new term is published, visible to other users in wp-admin, and could be visible on the front end of the site depending on the theme and plugins.
&lt;/p&gt;
&lt;p&gt;
The lack of a draft or preview mechanism also makes it impossible to manage terms in the customizer. Long term, the goal is to enable posts and terms to be able to be live-previewed with front end context, based on functionality being developed in the &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Posts&lt;/a&gt; and, now, &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-terms"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Terms&lt;/a&gt; plugins.
&lt;/p&gt;
&lt;p&gt;
In 4.7, with the new ability to create posts wintih nav menus (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;), we'd like users to also be able to create terms so that they an set up their site structure. Unfortunately this is not possible until we have a mechanism for previewing terms. I'm currently milestoning this for 4.7 so that we can try to add support for that feature (in a separate ticket), but this ticket is for API support only and still may be more than we can complete in time for 4.7.
&lt;/p&gt;
&lt;p&gt;
Based on comments from @boonebgorges on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;, there are a couple of potential approaches for enabling term previewing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduce a &lt;code&gt;term_status&lt;/code&gt; field
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even if we don't have anything as robust as a "term status API", we still have to be sure that, at the very least, term_status != 'publish' terms are excluded from most queries - a change that has the potential for weird back compat issues.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;&lt;li&gt;An internal taxonomy for draft terms, which may be more conservative but also more complex, especially if we want to support things like hierarchy for draft terms.
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It may be easier (maybe more code, but fewer hacks) to do on-the-fly registration of a separate internal taxonomy for each taxonomy that's getting a draft term added via the Customizer.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We'll want a future-proof solution that can support term meta being previewable as well. &lt;code&gt;auto_draft&lt;/code&gt; posts are the inspiration on the posts end for the customizer approach.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:154</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:154/1472761352764869</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:152" title="Comment 152"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would note that a Composer autoloader is not a full copy of Composer...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Pulling back from the debate thanks to @chrisvanpatten and your comments, it is clear I am not even clear what is being debated on this ticket.  I think the reason is because this ticket was inadvertently hijacked to go in a different direction from the OP's intent.
&lt;/p&gt;
&lt;p&gt;
Minimally I think if we are going to discuss an autoloader based on Composer we should respect @dnaber-de and not hijack his ticket.  Instead we should discuss his proposal &lt;em&gt;(which I think is mostly good)&lt;/em&gt; and give it a thumbs up or a thumbs down.
&lt;/p&gt;
&lt;p&gt;
If we instead want to advocate for a Composer autoloader it should be written up in another ticket form and we can and should debate it there.
&lt;/p&gt;
&lt;p&gt;
So rather than me answer your questions here &lt;strong&gt;I would suggest&lt;/strong&gt; someone who is a strong advocate of using a Composer autoloader &lt;strong&gt;create a clear proposal on another ticket and link from here to that ticket&lt;/strong&gt; and then I can register my objections (or agreements) there.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Mike, if you'd like to work on a generator proposal...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Frankly if we consider this ticket's original proposal it would be very close to what I would propose so it would not make sense for me to split discussion of improvements to @dnaber-de's proposal on to another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36010 (New password reset styling changes are confusing to casual users) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36010#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36010#comment:14/1472761137963278</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket is important. There is a lot of confusion out there. I have quite a few of support request about this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:153</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:153/1472760713199540</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:149" title="Comment 149"&gt;chrisvanpatten&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it seems more than flexible enough for anything you can throw at it with regards to autoloading.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Flexibility is not my concern.  Complexity is.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you have specific examples of things that you experienced that make it poorly suited for autoloading?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great question.  See my follow up to @TJNowell in a few minutes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37913 (Switch/case string comparison is case-sensitive) updated</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:10:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37913#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37913#comment:1/1472760611888174</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36912 (Improve documentation for install_plugin_install_status()) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:09:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36912#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36912#comment:8/1472760586451073</guid>
      <description>&lt;p&gt;
@DrewAPicture Can you take a look at the new patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37913.diff attached to Ticket #37913</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37913/37913.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37913/37913.diff/1472760553944802</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37913 (Switch/case string comparison is case-sensitive) created</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:08:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37913/1472760524904954</guid>
      <description>&lt;p&gt;
Switch/case string comparison is case-sensitive. It's better not to assume that whatever data we will receive in a function argument will be in the same case as we will be checking in condition.
&lt;/p&gt;
&lt;p&gt;
Take a look at this snippet from file &lt;code&gt;wp-includes/ID3/getid3.lib.php&lt;/code&gt; :
&lt;/p&gt;
&lt;pre class="wiki"&gt;switch ($charset) {
	case '1251':
	case '1252':
	case '866':
	case '932':
	case '936':
	case '950':
	case 'BIG5':
	case 'BIG5-HKSCS':
	case 'cp1251':
	case 'cp1252':
	case 'cp866':
	case 'EUC-JP':
	case 'EUCJP':
	case 'GB2312':
	case 'ibm866':
	case 'ISO-8859-1':
	case 'ISO-8859-15':
	case 'ISO8859-1':
	case 'ISO8859-15':
	case 'KOI8-R':
	case 'koi8-ru':
	case 'koi8r':
	case 'Shift_JIS':
	case 'SJIS':
	case 'win-1251':
	case 'Windows-1251':
	case 'Windows-1252':
		$HTMLstring = htmlentities($string, ENT_COMPAT, $charset);
		break;
	case 'UTF-8':
		$strlen = strlen($string);
		for ($i = 0; $i &amp;lt; $strlen; $i++) {
			$char_ord_val = ord($string{$i});
			$charval = 0;
			if ($char_ord_val &amp;lt; 0x80) {
				$charval = $char_ord_val;
			} elseif ((($char_ord_val &amp;amp; 0xF0) &amp;gt;&amp;gt; 4) == 0x0F  &amp;amp;&amp;amp;  $i+3 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x07) &amp;lt;&amp;lt; 18);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 12);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 6);
				$charval +=  (ord($string{++$i}) &amp;amp; 0x3F);
			} elseif ((($char_ord_val &amp;amp; 0xE0) &amp;gt;&amp;gt; 5) == 0x07  &amp;amp;&amp;amp;  $i+2 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x0F) &amp;lt;&amp;lt; 12);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 6);
				$charval +=  (ord($string{++$i}) &amp;amp; 0x3F);
			} elseif ((($char_ord_val &amp;amp; 0xC0) &amp;gt;&amp;gt; 6) == 0x03  &amp;amp;&amp;amp;  $i+1 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x1F) &amp;lt;&amp;lt; 6);
				$charval += (ord($string{++$i}) &amp;amp; 0x3F);
			}
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= htmlentities(chr($charval));
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
	case 'UTF-16LE':
		for ($i = 0; $i &amp;lt; strlen($string); $i += 2) {
			$charval = self::LittleEndian2Int(substr($string, $i, 2));
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= chr($charval);
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
	case 'UTF-16BE':
		for ($i = 0; $i &amp;lt; strlen($string); $i += 2) {
			$charval = self::BigEndian2Int(substr($string, $i, 2));
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= chr($charval);
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
&lt;/pre&gt;&lt;p&gt;
Which could have been like this :
&lt;/p&gt;
&lt;pre class="wiki"&gt;switch (strtolower($charset)) {
	case '1251':
	case '1252':
	case '866':
	case '932':
	case '936':
	case '950':
	case 'big5':
	case 'big5-hkscs':
	case 'cp1251':
	case 'cp1252':
	case 'cp866':
	case 'euc-jp':
	case 'eucjp':
	case 'gb2312':
	case 'ibm866':
	case 'iso-8859-1':
	case 'iso-8859-15':
	case 'iso8859-1':
	case 'iso8859-15':
	case 'koi8-r':
	case 'koi8-ru':
	case 'koi8r':
	case 'shift_jis':
	case 'sjis':
	case 'win-1251':
	case 'windows-1251':
	case 'windows-1252':
		$HTMLstring = htmlentities($string, ENT_COMPAT, $charset);
		break;
	case 'utf-8':
		$strlen = strlen($string);
		for ($i = 0; $i &amp;lt; $strlen; $i++) {
			$char_ord_val = ord($string{$i});
			$charval = 0;
			if ($char_ord_val &amp;lt; 0x80) {
				$charval = $char_ord_val;
			} elseif ((($char_ord_val &amp;amp; 0xF0) &amp;gt;&amp;gt; 4) == 0x0F  &amp;amp;&amp;amp;  $i+3 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x07) &amp;lt;&amp;lt; 18);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 12);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 6);
				$charval +=  (ord($string{++$i}) &amp;amp; 0x3F);
			} elseif ((($char_ord_val &amp;amp; 0xE0) &amp;gt;&amp;gt; 5) == 0x07  &amp;amp;&amp;amp;  $i+2 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x0F) &amp;lt;&amp;lt; 12);
				$charval += ((ord($string{++$i}) &amp;amp; 0x3F) &amp;lt;&amp;lt; 6);
				$charval +=  (ord($string{++$i}) &amp;amp; 0x3F);
			} elseif ((($char_ord_val &amp;amp; 0xC0) &amp;gt;&amp;gt; 6) == 0x03  &amp;amp;&amp;amp;  $i+1 &amp;lt; $strlen) {
				$charval  = (($char_ord_val &amp;amp; 0x1F) &amp;lt;&amp;lt; 6);
				$charval += (ord($string{++$i}) &amp;amp; 0x3F);
			}
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= htmlentities(chr($charval));
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
	case 'utf-16le':
		for ($i = 0; $i &amp;lt; strlen($string); $i += 2) {
			$charval = self::LittleEndian2Int(substr($string, $i, 2));
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= chr($charval);
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
	case 'utf-16be':
		for ($i = 0; $i &amp;lt; strlen($string); $i += 2) {
			$charval = self::BigEndian2Int(substr($string, $i, 2));
			if (($charval &amp;gt;= 32) &amp;amp;&amp;amp; ($charval &amp;lt;= 127)) {
				$HTMLstring .= chr($charval);
			} else {
				$HTMLstring .= '&amp;amp;#'.$charval.';';
			}
		}
		break;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:152</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:152/1472760514432631</guid>
      <description>&lt;p&gt;
It's nice to see somebody playing devils advocate :)
&lt;/p&gt;
&lt;p&gt;
I would note that a Composer autoloader is not a full copy of Composer, and PSR standards autoloaders aren't relevant here as Core doesn't use PSR. Composer is being used as a build time tool here much in the way that NPM or Grunt might be used, only the final autoloader produced is relevant.
&lt;/p&gt;
&lt;p&gt;
As an aside, Core could include a Composer autoloader if it exists, even if it doesn't make use of it internally. This would be a great help for those of us who use Composer, eliminating an extra step in the setup, and standardising when the autoloader is added.
&lt;/p&gt;
&lt;p&gt;
The Composer classmap autoloader is widespread and battle tested, I believe atm that puts it ahead of homegrown options regardless of best practices. If better can be made I'm sure the Composer project will be interested in our findings.
&lt;/p&gt;
&lt;p&gt;
Mike, if you'd like to work on a generator proposal so that we can have Composer build an autoloader that matches your own specifications rather than those of the Composer project I believe that would be the most productive action to take. At that point we can make direct comparisons, and perhaps learn things of practical use
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 01 Sep 2016 20:03:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:9/1472760232375606</guid>
      <description>&lt;p&gt;
@tgelles
&lt;/p&gt;
&lt;p&gt;
Glad you got the issue fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:151</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:151/1472759054695942</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:146" title="Comment 146"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think there's much potential for optimization in the code above, for the scenario we have been describing here.
I fail to see how you optimized the above by prepending your own class loader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See the example code from my previous message.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:7/1472758966546904</guid>
      <description>&lt;p&gt;
Modified unit tests as per @pento recommendations and packed everything into a single patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37906_pre_do_shortcode_tag_v2.diff attached to Ticket #37906</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:40:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37906/37906_pre_do_shortcode_tag_v2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37906/37906_pre_do_shortcode_tag_v2.diff/1472758807269484</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:150</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:150/1472758800286445</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, what you call "groupthink" (which I find rude, tbh)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I apologize if it came across as rude. That was not my intention.
&lt;/p&gt;
&lt;p&gt;
I used "groupthink" in the same context that management consultants use it to try to improve business decision making, &lt;a class="ext-link" href="https://www.mindtools.com/pages/article/newLDR_82.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;for example&lt;/a&gt;.  Think of it like me saying &lt;em&gt;"Let me propose a strawman"&lt;/em&gt; but in a different context.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is an effort to bring de facto PHP best practices to WordPress, trying to get it out of the "legacy software" drawer it keeps getting put into more and more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a href="http://core.trac.wordpress.org/ticket/37699#comment:66"&gt;my comments ''(to you)'' here&lt;/a&gt; about there being different levels of programmers and how we should not be forcing all of them to be at the highest skill level.
&lt;/p&gt;
&lt;p&gt;
Think of them as diffferent constituents, all of which we should guard their interests and not forsake any of them.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think that all the people contributing on Trac are interested in seeing a bright future for WordPress,...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And my reason for pushing this issue is that I think that taking it down the path or ratcheting up the skill level required to be productive with WordPress would dim that future significantly.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you use a tried and tested autoloader, there's no need to step through it with XDEBUG, so I don't see why this would be relevant.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In theory.  But the reality is that when debugging you are in discovery mode and frequently you are still trying to get your bearing so frequently (at least I) accidently step into autoloaders when I do not intend to.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If it is problematic to apply (de-facto) best practices to a project, chances are the best practices are not a fault. This probably just points to an inherent design flaw that should be addressed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are assuming that so-called &lt;em&gt;"best practices"&lt;/em&gt; are actually fit for purpose.  That logic is called &lt;em&gt;"&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Argument_from_authority"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;appeal to authority appeal to authority&lt;/a&gt;"&lt;/em&gt; and is a logical fallacy.
&lt;/p&gt;
&lt;p&gt;
In my 25+ years of professional development I have  seen many &lt;em&gt;"best practices"&lt;/em&gt; exposed as only being &lt;em&gt;Well it seemed like a good idea at the time.&lt;/em&gt;  So we should not view  &lt;em&gt;"best practices"&lt;/em&gt; as a sacred sword and instead validate each practice to see if it actually applies in the current context.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but premature optimization at this point is completely useless (and counter-productive),
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unless, by your arguments in support of your positions, that doing so would paint us into an architectural corner that we could not later extract ourself from. And it is my currently believe that once Composer gets into core it will be there until WordPress is no longer relevant such like SVN and other infrastructure technologies.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That being said, the Composer autoloader is already tightly optimized in a proven way, and it is difficult to get any improvements over it with anything but very simple scenarios.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is not nearly as an autoloader that works like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _autoload( $class ) {
   if ( isset( self::$_classmap[ $class ] ) ) {
	  require self::$_classmap[ $class ]
   }
}
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
this discussion is not relevant for the autoloader and should be done in the context of the WP Coding Standards efforts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Beg to disagree. The autoloader is in part driving the requirement.  To discuss in WP Coding Standards would be the cart driving the horse.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The whole point of a class map autoloader is to associate arbitrary filenames with class names. If you can determine one from the other, you don't need a class map. You can just use a PSR-0 or PSR-4 autoloader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PSR-0 and PSR-4 are optimized for PHP framework style projects.  WordPress organizes its code differently and thus -- with the exception of using libraries from packagist.org on WordPress -- PSR-0 and PSR-4 are not a good match for WordPress.
&lt;/p&gt;
&lt;p&gt;
And classmaps can easily be generated.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I fail to see how that would be preferable to have a mature, 5-year-tested class map builder
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because Composer's defaults actively work against WordPress's architecture.
&lt;/p&gt;
&lt;p&gt;
You don't use a sports car to haul a load of hay, even if it is the best damn sports car in the world.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37912 (Syntax indentation was missing for switch case) updated</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37912#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37912#comment:1/1472758760348226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37912.diff attached to Ticket #37912</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37912/37912.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37912/37912.diff/1472758709018680</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37912 (Syntax indentation was missing for switch case) created</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37912/1472758674990424</guid>
      <description>&lt;p&gt;
Syntax indentation was missing for switch case in &lt;code&gt;wp-includes/ID3/module.audio-video.flv.php&lt;/code&gt; file.
&lt;/p&gt;
&lt;p&gt;
Thought code should be well formatted as per the standards.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910#comment:1/1472757959672839</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like &lt;code&gt;gmdate()&lt;/code&gt; is used quite a few places in core (~50), so if we want to address that, it should be in a separate ticket I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37910.diff attached to Ticket #37910</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37910/37910.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37910/37910.diff/1472757695191086</guid>
      <description>&lt;p&gt;
Remove legacy logic and always use &lt;code&gt;date()&lt;/code&gt; in &lt;code&gt;date_i18n()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37911 (Typo/Text change in the warning given by the .asf audio/video files) updated</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37911#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37911#comment:1/1472757637502456</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37911.diff attached to Ticket #37911</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37911/37911.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37911/37911.diff/1472757472009375</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37911 (Typo/Text change in the warning given by the .asf audio/video files) created</title>
      
        <dc:creator>mangeshp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37911/1472757369237203</guid>
      <description>&lt;p&gt;
Noticed a typo in the module.audio-video.asf.php file in ID3 folder line number 352:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$info['warning'][] = '[asf][codec_list_object][codec_entries]['.$CodecEntryCounter.'][description] expected to contain comma-seperated list of parameters: "'.$thisfile_asf_codeclistobject_codecentries_current['description'].'"';
&lt;/pre&gt;&lt;p&gt;
Actually it should be like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$info['warning'][] = '[asf][codec_list_object][codec_entries]['.$CodecEntryCounter.'][description] expected to contain comma-separated list of parameters: "'.$thisfile_asf_codeclistobject_codecentries_current['description'].'"';
&lt;/pre&gt;&lt;p&gt;
The word &lt;code&gt;comma-separated&lt;/code&gt; was written wrong. Thought to correct it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36302 (wp_update_comment needs a filter) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36302#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36302#comment:22/1472757335919839</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36302/36302.2.diff" title="Attachment '36302.2.diff' in Ticket #36302"&gt;36302.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36302/36302.2.diff" title="Download"&gt;​&lt;/a&gt; updates the hook name and adjusts the documentation, placing emphasis on &lt;em&gt;processed&lt;/em&gt; vs &lt;em&gt;raw&lt;/em&gt; data in the available parameters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36302.2.diff attached to Ticket #36302</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:14:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36302/36302.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36302/36302.2.diff/1472757285722777</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37634 (Wrong usage of $gmt parameter in date_i18n() in options-general.php) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37634#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37634#comment:7/1472756993997343</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37634#comment:3" title="Comment 3"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Feel free to open a new ticket for that :-) Such a change would need lots of tests beforehand though.
&lt;/p&gt;
&lt;p&gt;
Simplifying &lt;code&gt;date_i18n&lt;/code&gt; would probably also help for &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/18146" title="#18146: feature request: Add user-level timezone setting (assigned)"&gt;#18146&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37910" title="#37910: enhancement: Remove confusing legacy logic in date_i18n() (closed: fixed)"&gt;#37910&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910/1472756929128543</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37634" title="#37634: defect (bug): Wrong usage of $gmt parameter in date_i18n() in options-general.php (closed: fixed)"&gt;#37634&lt;/a&gt; it was pointed out that &lt;code&gt;date_i18n()&lt;/code&gt; contains the following line:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$datefunc = $gmt? 'gmdate' : 'date';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
However, there is actually no difference between &lt;code&gt;date()&lt;/code&gt; and &lt;code&gt;gmdate()&lt;/code&gt; in WordPress, so that line can be removed. At the time that this logic was added, WordPress was experimenting with setting the default PHP time based on the site's timezone. But in the end it was decided to just always have the default PHP timezome be UTC/GMT. Which means that &lt;code&gt;date()&lt;/code&gt; and &lt;code&gt;time()&lt;/code&gt; always return UTC values, and thus using &lt;code&gt;gmdate()&lt;/code&gt; is unnecessary. (I discovered this just the other day when I was researching a date/time-related bug in a plugin.) See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9588" title="#9588: defect (bug): time() is not GMT time() (closed: fixed)"&gt;#9588&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12727" title="Always set default timezone to UTC. Do offsets on top of that to be ..."&gt;[12727]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Retaining this legacy logic is confusing, since it implies that there is some difference in WordPress between using &lt;code&gt;date()&lt;/code&gt; and &lt;code&gt;gmdate()&lt;/code&gt;, when there really is none. &lt;code&gt;date()&lt;/code&gt; should just be used instead.
&lt;/p&gt;
&lt;p&gt;
Note that although that particular line in the function is unnecessary, the &lt;code&gt;$gmt&lt;/code&gt; parameter is still needed for these lines:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$gmt&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'timestamp'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;// we should not let date() interfere with our
&lt;/span&gt;        &lt;span class="c1"&gt;// specially computed timestamp
&lt;/span&gt;        &lt;span class="nv"&gt;$gmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
However, they could be simplified to just:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'timestamp'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$gmt&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
We should probably consider removing every reference to &lt;code&gt;gmdate()&lt;/code&gt; in core in favor of just using &lt;code&gt;date()&lt;/code&gt;, to avoid this confusion. But maybe that would ultimately be for a separate ticket.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:69/1472756616791024</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:65" title="Comment 65"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here's an example of type inspection at work in PHPStorm, through the container indirection:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which does not address my other concern:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;The simple issue that WP::get('wdpb') won't get caught during development in an IDE like PhpStorm because it can't inspect the string and validate it.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>chrisvanpatten</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:149/1472756605921536</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:144" title="Comment 144"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;In summary related to Composer is that it is not well suited for WordPress website.&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Admittedly I'm coming from the perspective of someone using Composer for WordPress dependency management—which I know is not even remotely in the scope of this ticket—but based on that experience, on my own research, and the comments of Composer pros like @schlessera on this ticket, it seems more than flexible enough for anything you can throw at it with regards to autoloading.
&lt;/p&gt;
&lt;p&gt;
Do you have specific examples of things that you experienced that make it poorly suited for autoloading?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 19:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:68/1472756535900371</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:64" title="Comment 64"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any content store is going to return &lt;code&gt;mixed&lt;/code&gt;:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is exactly my point. Which is why I am stating that it would not be a good idea to follow that pattern where we do not have to.  Clearly for caching we pretty much have to handle any type, but we do not have to for things that are set-in-stone like &lt;code&gt;wpdb&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Minimally I'd argue for both, but I'd prefer that well-known properties just have a &lt;em&gt;"get"&lt;/em&gt; and &lt;em&gt;"set"&lt;/em&gt; method &lt;em&gt;(where the get method omits the &lt;code&gt;get_&lt;/code&gt; prefix because it is really not needed and just makes code that uses it look more cluttered, especially to non-professional developers such as site builders, custom theme developers and often custom plugin developers.)&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36341 (Add a note about the 'init' hook to the DocBlock for get_current_user_id()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36341#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36341#comment:5/1472756257651386</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;init&lt;/code&gt; seems like a good promise to developers
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:67/1472756222966398</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:63" title="Comment 63"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is not true, and as every major framework uses containers, PHPStorm has several ways of providing type inspection for them. For a very simple way of adding this, see the article here: &lt;a class="ext-link" href="https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I was afraid that would be offered up as _"the solution."_  As you can see, &lt;a class="ext-link" href="https://youtrack.jetbrains.com/issue/WI-27830"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;I have been aware of this capability for a while&lt;/a&gt;, and in that link you can see that I think the way PhpStorm implements it is over-the-top complicated and it is very unlikely that most plugin or theme developers will master it.
&lt;/p&gt;
&lt;p&gt;
And yes &lt;code&gt;WP::get()&lt;/code&gt; is in core but if included in core it would define the pattern that many developers would mimic in their own plugins and themes and thus create proliferation of code that PhpStorm would flag with errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37909 (get_terms returns array with missing cells) created</title>
      
        <dc:creator>eddr</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37909/1472756090872327</guid>
      <description>&lt;p&gt;
This call
get_terms( 'settings-set', array('hide_empty' =&amp;gt; true) );
&lt;/p&gt;
&lt;p&gt;
returns and array with cells 0,1,3,4,5,6 set (cell 2 is missing)
There are total of 7 terms and one is empty, so the returned terms of a complete set, but the array is broken
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:51:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:66/1472755896256150</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:62" title="Comment 62"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No, there's no technical conflict, but we might want to plan for conventions ahead of time and avoid confusion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see absolutely no potential confusion here.  I think you clearly understand the difference, no?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With the above example, most people will not need to write any code like this,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To me "most" is not sufficient.  Let's make it all.  Inconsistency in programming is a blight on productivity and reliability IMO.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But it opens up the possibility to do so, for unit tests, for dependency injection or more advanced scenarios.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unless and until ~95% of WordPress developers actively use unit-tests, I'd say this is not a viable solution.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...that's what we do as developers!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am realizing that I need to write an essay layout out one of the fundamental flaws in developer-think that I have witnessed over my many years; the belief that theoretical perfection is always the ideal and as a fallout of that that the skills required for all programming should be equal, or if not those with lesser skills either need to learn or be forsaken.  All too often developers who are skilled think that all developers should always be square pegs whereas there are round holes, triangular holes, etc.
&lt;/p&gt;
&lt;p&gt;
The reality is that we have developers at &lt;strong&gt;all&lt;/strong&gt; skill levels, and we produce the &lt;em&gt;best&lt;/em&gt; platform when we recognize and empower all those skill levels to be successful, especially when they align with well-known roles.  Here is one way to slice up the different roles and different skill sets in WordPress, all of which can be labeled "developer", in roughly increasing order of skills required:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Custom Theme developer
&lt;/li&gt;&lt;li&gt;Custom Plugin developer
&lt;/li&gt;&lt;li&gt;Commercial/Open Source Theme Developer
&lt;/li&gt;&lt;li&gt;Commercial/Open Source Plugin Developer
&lt;/li&gt;&lt;li&gt;WordPress Core contributor
&lt;/li&gt;&lt;li&gt;WordPress Core committer
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The problem I see is that too many people advocate that we only use techniques that are appropriate for &lt;a href="http://core.trac.wordpress.org/query?id=4-6" title="Tickets 4-6"&gt;#4-6&lt;/a&gt; and some of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt; but that is way beyond what is needed for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; &amp;amp; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt; and often &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;, and that are often over the heads of the first three roles. Going this approach makes the platform much harder to use for those roles and thus greatly limits its appeal.
&lt;/p&gt;
&lt;p&gt;
In the mid 90s I watched as Microsoft gutted their own Visual Basic user base by releasing VB.NET. Previously Visual Basic had more than 50% marketshare of people who programmed but has since become a footnote in history because Microsoft forsook the market that made Visual Basic popular.  &lt;em&gt;(And I think &lt;a class="ext-link" href="http://mikeschinkel.com/blog/the-decline-of-drupal-or-how-to-fix-drupal-8/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Drupal is currently doing the same&lt;/a&gt; to itself.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, those techniques may be appropriate for WordPress core developers and commercial plugin developers, but the requirement to use them should be limited to that set of developers, not forced on everyone, even the least-skilled custom theme developer who only know copy-and-paste PHP.
&lt;/p&gt;
&lt;p&gt;
Let's put it another way, pushing for everything to require top skill levels ultimately results in far less adoption and shows no empathy for the vast number of people who just program for a living &lt;em&gt;(on non-enterprise level systems)&lt;/em&gt; as opposed to programming for art. I even &lt;a class="ext-link" href="http://mikeschinkel.com/blog/willmicrosoftmeetoccupationalprogrammersneeds/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;blogged about it&lt;/a&gt; in a prior life.
&lt;/p&gt;
&lt;p&gt;
So please, let's stop thinking that every developer has to be Picasso. Frankly, most of them do not want to be great programmers, they just want to get shit done.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(well, unless we avoid classes and stuck everything in global namespace, which is "probably a good idea")
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure if you are quoting that for irony or you mean it, but I agree with that.  Except I think the global namespace should be a pseudo namespace and not PHP's poorly architected version of namespaces that requires significant develop skill to work with.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I consider this to be a hack.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The are many things in life that are very effective in reality that purists view as a hack.  I'd rather have something that is very usable vs. something that is intellectually pure.  And I think WordPress as-is is a great example of the former. Show me an intellectually pure that is 1/10th as successful as WordPress?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37660 (RegEx in wpdb::get_table_from_query( $q ) in wp-db.php returns ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37660#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37660#comment:2/1472754938181429</guid>
      <description>&lt;p&gt;
@pento I think this might be something worth getting in on the early side.  What kind of unit tests would you recommend someone write for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37634 (Wrong usage of $gmt parameter in date_i18n() in options-general.php) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37634#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37634#comment:6/1472754788059667</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38502" title="Administration: Use a bool when when a bool is called for
The third ..."&gt;38502&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Administration: Use a bool when when a bool is called for&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The third parameter of &lt;code&gt;date_i18n&lt;/code&gt; is a bool.  Currently, it's a weak check, otherwise the call showing the universal time on the "General Settings" screen would be messed up. Use an actual bool so we call our own functions correctly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37634" title="#37634: defect (bug): Wrong usage of $gmt parameter in date_i18n() in options-general.php (closed: fixed)"&gt;#37634&lt;/a&gt;.&lt;br /&gt;
Props fronaldaraujo.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38502]: Administration: Use a bool when when a bool is called for  The third ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38502</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38502/1472754787540426</guid>
      <description>&lt;p&gt;
Administration: Use a bool when when a bool is called for
&lt;/p&gt;
&lt;p&gt;
The third parameter of &lt;code&gt;date_i18n&lt;/code&gt; is a bool.  Currently, it's a weak check, otherwise the call showing the universal time on the "General Settings" screen would be messed up. Use an actual bool so we call our own functions correctly.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37634" title="#37634: defect (bug): Wrong usage of $gmt parameter in date_i18n() in options-general.php (closed: fixed)"&gt;#37634&lt;/a&gt;.
Props fronaldaraujo.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36341 (Add a note about the 'init' hook to the DocBlock for get_current_user_id()) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:26:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36341#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36341#comment:4/1472754394046118</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If &lt;code&gt;init&lt;/code&gt; is where things are guaranteed to be ready, that's what we should promise in the docs. It's possible for things to be ready early, but &lt;code&gt;init&lt;/code&gt; seems like a good promise to developers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37638 (Allow plugins to do comprehensive late validation of settings) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37638#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37638#comment:4/1472753870289561</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's unlikely that running filters multiple times here will result in a problem, but it's certainly plausible.  I would love to see this land early and get called out for testing. Likely can be during the normal customizor post, but I'm also happy to add a note to this week in core when this lands.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15448 (wp_mail() sets Content-Type header twice for multipart emails) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:17:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15448#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15448#comment:38/1472753823573644</guid>
      <description>&lt;p&gt;
Refresh for WP 4.7, with unit tests included in the one patch. Added extra test to make sure the workarounds using &lt;code&gt;phpmailer_init&lt;/code&gt; mentioned in WPSE post still work, around.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37893 (Implementation of is_registered_sidebar() doesn't match its documented ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:16:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37893#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37893#comment:1/1472753809920402</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37576 (Make 'white' in CSS-files #fff) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:13:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37576#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37576#comment:8/1472753602115786</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38501" title="Administration: Use #fff instead of `white`
Cleans up a few places ..."&gt;38501&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Administration: Use #fff instead of &lt;code&gt;white&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Cleans up a few places where the CSS coding standards were not being followed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37576" title="#37576: enhancement: Make 'white' in CSS-files #fff (closed: fixed)"&gt;#37576&lt;/a&gt;.&lt;br /&gt;
Props Presskopp, johnpgreen, netweb&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38501]: Administration: Use #fff instead of `white`  Cleans up a few places ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:13:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38501</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38501/1472753601635059</guid>
      <description>&lt;p&gt;
Administration: Use #fff instead of &lt;code&gt;white&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Cleans up a few places where the CSS coding standards were not being followed.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37576" title="#37576: enhancement: Make 'white' in CSS-files #fff (closed: fixed)"&gt;#37576&lt;/a&gt;.
Props Presskopp, johnpgreen, netweb
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>15448_Sep2016.diff attached to Ticket #15448</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15448/15448_Sep2016.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15448/15448_Sep2016.diff/1472753533437221</guid>
      <description>&lt;p&gt;
Refresh for 4.7. Includes unit tests.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37908 (No confirmation when clicking Delete Permanently for pages or posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 18:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37908#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37908#comment:1/1472753359190619</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>tollmanz</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:10/1472752750071661</guid>
      <description>&lt;p&gt;
I would also like to recommend that the emoji script is loaded more responsibly. Proving the impact via WPT/Dev Tools/{$your_favorite_profiler} is really tricky and likely to lead to bad decisions. I recently observed a 3 second delay in HTML parsing due to the emoji load, but have had a heck of a time reproducing that same result. These types of tests are subject to network, hardware, site construction, and other random variance that makes specific questions like these nearly impossible to answer.
&lt;/p&gt;
&lt;p&gt;
The issue is that the JS is loaded in both a render and HTML parser blocking manner. This means that under the right conditions, the impact of this seemingly innocuous script could be quite dramatic. As developers, when we know best practices for a specific problem, we should default to those practices and argue to not do them if we are so compelled.
&lt;/p&gt;
&lt;p&gt;
I would recommend that we include an &lt;code&gt;async&lt;/code&gt; attribute to the &lt;code&gt;script&lt;/code&gt; tag that wraps the emoji JS, as well as add an &lt;code&gt;async&lt;/code&gt; attribute to the &lt;code&gt;script&lt;/code&gt; that it potentially loads (&lt;code&gt;defer&lt;/code&gt; would be even better, but it does not enjoy great cross-browser support). Further, the script should be loaded in the &lt;code&gt;wp_footer&lt;/code&gt;, instead of the &lt;code&gt;wp_head&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If there are compatibility concerns, we could add some filters to allow people to change the behavior. We should strive to follow best practices for performant loading of this script, regardless of how minor the impact may be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>tgelles</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:8/1472752437183631</guid>
      <description>&lt;p&gt;
Thank you @adamsilverstein and @lukecavanagh.
&lt;/p&gt;
&lt;p&gt;
Turns out it was the expired headers in the .htaccess file. Similar solution here for those using either apache or nginx:(&lt;a class="ext-link" href="https://wordpress.org/support/topic/wordpress-46-has-caused-significant-issues?replies=6#post-8822970"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/wordpress-46-has-caused-significant-issues?replies=6#post-8822970&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37908 (No confirmation when clicking Delete Permanently for pages or posts) created</title>
      
        <dc:creator>b-rad</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:42:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37908/1472751736497081</guid>
      <description>&lt;p&gt;
If you click the 'Delete Permanently' link for a page/post that's in the trash, there isn't a final confirmation asking if you're sure you want to proceed with the action. This makes it terribly easy to accidentally click or tap on a Delete Permanently link when you don't intend to. A basic JavaScript &lt;code&gt;confirm()&lt;/code&gt; would seem like an easy enough final check to prevent this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:54/1472749533315572</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472749530000040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:83/1472749492328334</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472749489000038"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 17:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:66/1472749477531558</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1472749474000036"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:148</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:148/1472748910239753</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:147" title="Comment 147"&gt;dnaber-de&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I think the primary difference is that in the first case multiple plugins can do that, and one can't prevent another from doing so. A plugin can even wrap the original object and pass everything that it doesn't specifically need to override through to the original object with &lt;code&gt;__call()&lt;/code&gt; and &lt;code&gt;__get()&lt;/code&gt;. Multiple plugins can do this, likely without outright killing the site, though results will probably vary. :-)
&lt;/p&gt;
&lt;p&gt;
With the second case, once one plugin has included the class, no other class of that name can be loaded without a fatal error. So it is a race to be first, because only the first to load the class wins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:4/1472748648362030</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38500" title="Query: 'orderby=include' should support comma-separated lists.
 ..."&gt;38500&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: 'orderby=include' should support comma-separated lists.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30052" title="Introduce `orderby=include` support for `get_terms()`.
Props wpsmith. ..."&gt;[30052]&lt;/a&gt; assumed that 'include' would be an array.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props TimothyBlynJacobs.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37904" title="#37904: defect (bug): PHP warning when `include` is passed for `orderby` in get_terms() (closed: fixed)"&gt;#37904&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38500]: Query: 'orderby=include' should support comma-separated lists.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38500</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38500/1472748647871015</guid>
      <description>&lt;p&gt;
Query: 'orderby=include' should support comma-separated lists.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30052" title="Introduce `orderby=include` support for `get_terms()`.
Props wpsmith. ..."&gt;[30052]&lt;/a&gt; assumed that 'include' would be an array.
&lt;/p&gt;
&lt;p&gt;
Props TimothyBlynJacobs.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37904" title="#37904: defect (bug): PHP warning when `include` is passed for `orderby` in get_terms() (closed: fixed)"&gt;#37904&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22894 (Need WordPress Media Uploader Stop or Cancel Button in WP Version 3.5) updated</title>
      
        <dc:creator>thisisbbc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:46:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22894#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22894#comment:13/1472748413366606</guid>
      <description>&lt;p&gt;
Just wanted to express our interest in such a feature. Keeping our fingers crossed!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:41:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:3/1472748104593258</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket and for the patches! Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30052" title="Introduce `orderby=include` support for `get_terms()`.
Props wpsmith. ..."&gt;[30052]&lt;/a&gt;; it was assumed there that &lt;code&gt;'include'&lt;/code&gt; would always be an array, not a comma-separated list.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 16:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:2/1472746161802137</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904#comment:1/1472745278193823</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37904.tests.diff attached to Ticket #37904</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37904/37904.tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37904/37904.tests.diff/1472745264574671</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37904.diff attached to Ticket #37904</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37904/37904.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37904/37904.diff/1472745256703522</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:7/1472744943994501</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:48:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:6/1472744904821828</guid>
      <description>invalid: &lt;p&gt;
@tgelles - Thanks for sharing the details of how you resolved this issue for your install, this may help other users who have a similar issue.
&lt;/p&gt;
&lt;p&gt;
Since this was was a configuration issue with your &lt;code&gt;.htaccess&lt;/code&gt; file and not a WordPress issue I am going to close this ticket. If you continue to see the problem and think they are related to WordPress itself, you can re-open the ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38499]: Post 4.6.1-RC1 version bump </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38499</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38499/1472744408230363</guid>
      <description>&lt;p&gt;
Post 4.6.1-RC1 version bump
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35501 (Dashboard page: incorrect work of "Activity" group box bottom counters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:32:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35501#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35501#comment:18/1472743949390782</guid>
      <description>&lt;p&gt;
@vagios Thanks for your latest patch.
&lt;/p&gt;
&lt;p&gt;
I tested the patch and verified it works as expected.
&lt;/p&gt;
&lt;p&gt;
I like the way you track the xhrs by element and isolate the blocking that way. This neatly resolves the issue presented by slower connections.
&lt;/p&gt;
&lt;p&gt;
I wonder if we should consider a similar approach on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/25696" title="#25696: defect (bug): Double clicking update on list table inline edit removes row from dom (assigned)"&gt;#25696&lt;/a&gt; where slower connections would similarly block the simultaneous editing of multiple rows @azaozz pointed out here.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35501/35501.6.patch" title="Attachment '35501.6.patch' in Ticket #35501"&gt;35501.6.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35501/35501.6.patch" title="Download"&gt;​&lt;/a&gt; is a refreshed patch with a few small changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For undefined checks I switched to &lt;code&gt; 'undefined' !== typeof var &lt;/code&gt;  ( because &lt;code&gt; undefined !== var&lt;/code&gt; throws an error if var is undefined)
&lt;/li&gt;&lt;li&gt;Added some whitespace inside square brackets (&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/javascript/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp js coding standards&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37789 (Strange results in comment number declension) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37789#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37789#comment:3/1472743697897533</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37789#comment:2" title="Comment 2"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can suggest our users for example &lt;code&gt;gettext&lt;/code&gt; filter to change &lt;code&gt;on&lt;/code&gt; to &lt;code&gt;off&lt;/code&gt;, but maybe this could be fixed somehow directly (when original string in &lt;code&gt;comments_popup_link()&lt;/code&gt; is not in English or without localization)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the clarification!
&lt;/p&gt;
&lt;p&gt;
The problem is that &lt;code&gt;get_comments_number_text()&lt;/code&gt; doesn't know if the string is in English or not, it just takes any text or markup passed as the &lt;code&gt;$more&lt;/code&gt; argument and looks for the &lt;code&gt;%&lt;/code&gt; character followed (or preceded) by a word.
&lt;/p&gt;
&lt;p&gt;
So if declension is not needed in certain cases, &lt;code&gt;gettext&lt;/code&gt; filter seems to be the appropriate way to disable it.
&lt;/p&gt;
&lt;p&gt;
You could also use &lt;code&gt;sprintf()&lt;/code&gt; to insert the number yourself, that way the string would not contain the &lt;code&gt;%&lt;/code&gt; character, and the supplied text will be used as is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;comments_popup_link(
	'Komentáře (0)',
	'Komentáře (1)',
	sprintf( 'Komentáře (%s)', number_format_i18n( get_comments_number() ) )
);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38498]: WordPress 4.6.1-RC1 </title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38498</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38498/1472743673185689</guid>
      <description>&lt;p&gt;
WordPress 4.6.1-RC1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33704 (Reduce reliance on wp_is_mobile()) updated</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:21:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33704#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33704#comment:9/1472743305630886</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33704/33704-login.diff" title="Attachment '33704-login.diff' in Ticket #33704"&gt;33704-login.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33704/33704-login.diff" title="Download"&gt;​&lt;/a&gt; removes &lt;code&gt;wp_is_mobile()&lt;/code&gt; from the login page.
&lt;/p&gt;
&lt;p&gt;
The viewport meta tag is returned for all browsers as it has no effect on desktop browsers. I would have removed the whole function that does add it and just inlined the tag with the rest of head HTML, but I was not sure what the policy with removing functions is.
&lt;/p&gt;
&lt;p&gt;
Secondly, no &lt;code&gt;mobile&lt;/code&gt; class will be printed. There were three CSS rules in &lt;code&gt;login.css&lt;/code&gt; that relied on that. The first one that moves the login box close to top I moved under a media query that test against the height of the viewport. The second one did set the left margin of the form to zero, but that was in any case zero, so the rule was redundant. The role of the third rule was mystery to me, it did just misalign links below the form with some extra left margin and thus did not seem useful to me and I removed it.
&lt;/p&gt;
&lt;p&gt;
Lastly, the login shake animation is used for all browsers. I do not have any old mobile phones to test this with (as refresh rate with BrowserStack is poor and thus results inconclusive), so I cannot say if this is a poor experience. My gut tells me it won't perform very well but I doubt it is really an issue either. If it is, maybe a width based rule would do the trick here. I would appreciate if someone could test the patch with a phone with low processing power.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33704-login.diff attached to Ticket #33704</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33704/33704-login.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33704/33704-login.diff/1472743221085614</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35501.6.patch attached to Ticket #35501</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35501/35501.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35501/35501.6.patch/1472743214199798</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:24/1472742857035623</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38497" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;38497&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Don't do direct SQL query when fetching decendants.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The SQL query was built using the clauses compiled when querying for&lt;br /&gt;
top-level comments. But in cases where the top-level comment query&lt;br /&gt;
results are already in the cache, the SQL clauses are not built, and&lt;br /&gt;
so are unavailable for &lt;code&gt;fill_descendants()&lt;/code&gt;. Instead, we call&lt;br /&gt;
&lt;code&gt;get_comments()&lt;/code&gt;, using modified versions of the parameters passed&lt;br /&gt;
to the main &lt;code&gt;WP_Comment_Query&lt;/code&gt; class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38446" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38446]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, Akeif, Rarst for testing.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38497]: Comments: Don't do direct SQL query when fetching decendants.  The SQL ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:14:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38497</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38497/1472742856547686</guid>
      <description>&lt;p&gt;
Comments: Don't do direct SQL query when fetching decendants.
&lt;/p&gt;
&lt;p&gt;
The SQL query was built using the clauses compiled when querying for
top-level comments. But in cases where the top-level comment query
results are already in the cache, the SQL clauses are not built, and
so are unavailable for &lt;code&gt;fill_descendants()&lt;/code&gt;. Instead, we call
&lt;code&gt;get_comments()&lt;/code&gt;, using modified versions of the parameters passed
to the main &lt;code&gt;WP_Comment_Query&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38446" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;[38446]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, Akeif, Rarst for testing.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37872 (Improving instructions wording on password reinit page) updated</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37872#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37872#comment:2/1472742374595420</guid>
      <description>&lt;p&gt;
Thanks @DrewAPicture for the feedback. I have copy-pasted the content to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36010" title="#36010: enhancement: New password reset styling changes are confusing to casual users (new)"&gt;#36010&lt;/a&gt;: I hope this helps! Thanks in advance.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37872#comment:1" title="Comment 1"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @davidbourguignon, I'm going to close this as a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36010" title="#36010: enhancement: New password reset styling changes are confusing to casual users (new)"&gt;#36010&lt;/a&gt;, mostly so we can keep all of the discussion in one place. So feel free to migrate your feedback over there :-)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36010 (New password reset styling changes are confusing to casual users) updated</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Thu, 01 Sep 2016 15:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36010#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36010#comment:13/1472742334394974</guid>
      <description>&lt;p&gt;
(This is a copy-paste of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37872" title="#37872: enhancement: Improving instructions wording on password reinit page (closed: duplicate)"&gt;#37872&lt;/a&gt; following the instructions of @DrewAPicture.)
&lt;/p&gt;
&lt;p&gt;
Many subscribers are confused by the instructions on password reinit page.
&lt;/p&gt;
&lt;p&gt;
Here are three suggestions for improving instructions wording (I am not using the English version of WordPress, so original wordings may be incorrect):
&lt;/p&gt;
&lt;p&gt;
1) "Please enter your new password below."
-&amp;gt; "Please consider using the generated password or enter a new password below"
&lt;/p&gt;
&lt;p&gt;
2) "New password"
-&amp;gt; "Your password"
&lt;/p&gt;
&lt;p&gt;
3) "Hint: &amp;lt;How to choose a good password...&amp;gt;"
-&amp;gt; Remove it by default. Only display this hint when there is a red warning sign due to the detection of a "Weak" or "Very weak" password.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35598 (Use different error code for PHPMailer exceptions in wp_mail_failed) updated</title>
      
        <dc:creator>Kau-Boy</dc:creator>

      <pubDate>Thu, 01 Sep 2016 14:34:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35598#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35598#comment:19/1472740449267755</guid>
      <description>&lt;p&gt;
Saving the original error code in the data array should be OK. I might be able to finalize the unit tests on the Contributor Day at #wcfra tomorrow :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36010,​37872 batch updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 14:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36010%2C37872</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36010%2C37872/1472739925988225</guid>
      <description>duplicate: &lt;p&gt;
Hi @davidbourguignon, I'm going to close this as a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36010" title="#36010: enhancement: New password reset styling changes are confusing to casual users (new)"&gt;#36010&lt;/a&gt;, mostly so we can keep all of the discussion in one place. So feel free to migrate your feedback over there :-)
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #16318,​36010 batch updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2016 14:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=16318%2C36010</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=16318%2C36010/1472739907266288</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16318" title="#16318: enhancement: The reset password process could be clarified (closed: duplicate)"&gt;#16318&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 14:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:4/1472739286280944</guid>
      <description>&lt;p&gt;
Hmm, I could not reproduce the original issue though.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/admin-bar.php#L683"&gt;wp_admin_bar_comments_menu()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-includes/admin-bar.php#L683" title="Download"&gt;​&lt;/a&gt; is only used in the main toolbar, not in "My Sites" menu.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/admin-bar.php#L494"&gt;Manage Comments item&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-includes/admin-bar.php#L494" title="Download"&gt;​&lt;/a&gt; in &lt;code&gt;wp_admin_bar_my_sites_menu()&lt;/code&gt; does not have a duplicate ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37907 (Invalid serialized value for allowedthemes in wp_sitemeta table) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37907#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37907#comment:1/1472737290681092</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:3/1472736619511870</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch removes ID
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37901.diff attached to Ticket #37901</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:29:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37901/37901.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37901/37901.diff/1472736567714118</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37907 (Invalid serialized value for allowedthemes in wp_sitemeta table) created</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:14:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37907/1472735672348294</guid>
      <description>&lt;p&gt;
I dont remember exactly, but what i remember is the following:
before installing WP (or after installation) i have manually deleted all WP themes from &lt;code&gt;wp-content/themes&lt;/code&gt; folder.
then i installed some themes... i dont know when, but once the value of &lt;code&gt;allowedthemes&lt;/code&gt; row in &lt;code&gt;wp-sitemeta&lt;/code&gt; become such:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;a:4:{s:13:"twentysixteen";b:1;  s:5:"meris";b:1;  s:8:"my_theme";b:1;}&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
i mean, there should be &lt;code&gt;a:3&lt;/code&gt; instead of &lt;code&gt;a:4&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
after that, i am unable to enable/disable any theme from "NETWORK&amp;gt;THEMES" , as even after clicking "NETWORK ENABLE" for any theme and page loaded, the theme was not activated and there was still "NETWORK ENABLE"
(i have even opened quiestion at SE : &lt;a class="ext-link" href="http://wordpress.stackexchange.com/q/237864/33667"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/q/237864/33667&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
also, after every clicking the "NETWORK ENABLE", i see that a new value is added in DB TABLE:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/0iVobTS.png"&gt;&lt;img src="http://i.imgur.com/0iVobTS.png" alt="http://i.imgur.com/0iVobTS.png" crossorigin="anonymous" title="http://i.imgur.com/0iVobTS.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
after i manually changed &lt;code&gt;a:4&lt;/code&gt; to &lt;code&gt;a:3&lt;/code&gt; it was fixed... what happened?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>adam.radocz</dc:creator>

      <pubDate>Thu, 01 Sep 2016 13:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:9/1472735405615173</guid>
      <description>&lt;p&gt;
In the video I used a clean installed WordPress without any plugin.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36378#comment:8" title="Comment 8"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36378#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was able to reproduce the issue on a clean install in the latest Chrome (52.0.2743.116 and 53.0.2785.89) exactly as shown on the video.
&lt;/p&gt;
&lt;p&gt;
The markup is correct though, so if the browser downloads both versions of the image in certain conditions, it's up to the browser, I guess.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm still not able to reproduce this with all plugins off and am fairly confident that this isn't a browser bug. In the video it looks like a Pinterest plugin is being used, which might be adding additional HTML to the page to populate the shareable image.  As an aside, if you test this with the Debug bar on, you may appear to get double downloads because the debug bar adds additional markup to the page that can include calls for the original image. This tripped me up at first, but after turning that off, I no longer saw double downloads.
&lt;/p&gt;
&lt;p&gt;
I'm going to go ahead and close this as invalid. Feel free to reopen if it can be demonstrated that this is a reproducible bug that WordPress needs to work around.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:6/1472733573794373</guid>
      <description>&lt;p&gt;
Thanks for feedback - I'll clean it up and have it ready by tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37827 (Some classes still need to be moved into their own file) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37827#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37827#comment:18/1472733338114031</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38496" title="Bootstrap: `class-wp-locale.php` needs to be `require_once()`-ed.
 ..."&gt;38496&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap: &lt;code&gt;class-wp-locale.php&lt;/code&gt; needs to be &lt;code&gt;require_once()&lt;/code&gt;-ed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38364" title="i18n: move `is_rtl()` to `l10n.php` (which loads way earlier). Load ..."&gt;[38364]&lt;/a&gt;, the inclusion of &lt;code&gt;class-wp-locale.php&lt;/code&gt; was changed from a &lt;code&gt;require_once()&lt;/code&gt; to a &lt;code&gt;require()&lt;/code&gt;. This caused problems for anything that called &lt;code&gt;load_text_domain_early()&lt;/code&gt; prior to the &lt;code&gt;require()&lt;/code&gt; but didn't bail, as it was now being &lt;code&gt;require()&lt;/code&gt;-ed a second time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With the use of &lt;code&gt;require_once()&lt;/code&gt;, it doesn't really matter where it's loaded, so it has been moved next to the related &lt;code&gt;l10n.php&lt;/code&gt; load.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37827" title="#37827: enhancement: Some classes still need to be moved into their own file (closed: fixed)"&gt;#37827&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38496]: Bootstrap: `class-wp-locale.php` needs to be `require_once()`-ed.  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38496/1472733337652865</guid>
      <description>&lt;p&gt;
Bootstrap: &lt;code&gt;class-wp-locale.php&lt;/code&gt; needs to be &lt;code&gt;require_once()&lt;/code&gt;-ed.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38364" title="i18n: move `is_rtl()` to `l10n.php` (which loads way earlier). Load ..."&gt;[38364]&lt;/a&gt;, the inclusion of &lt;code&gt;class-wp-locale.php&lt;/code&gt; was changed from a &lt;code&gt;require_once()&lt;/code&gt; to a &lt;code&gt;require()&lt;/code&gt;. This caused problems for anything that called &lt;code&gt;load_text_domain_early()&lt;/code&gt; prior to the &lt;code&gt;require()&lt;/code&gt; but didn't bail, as it was now being &lt;code&gt;require()&lt;/code&gt;-ed a second time.
&lt;/p&gt;
&lt;p&gt;
With the use of &lt;code&gt;require_once()&lt;/code&gt;, it doesn't really matter where it's loaded, so it has been moved next to the related &lt;code&gt;l10n.php&lt;/code&gt; load.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37827" title="#37827: enhancement: Some classes still need to be moved into their own file (closed: fixed)"&gt;#37827&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:15/1472733165353829</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:13/1472733082595685</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38495" title="Docs: Move `term_description()` reference from filter docblock to ..."&gt;38495&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Move &lt;code&gt;term_description()&lt;/code&gt; reference from filter docblock to &lt;code&gt;get_the_archive_description()&lt;/code&gt; function docblock.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38495]: Docs: Move `term_description()` reference from filter docblock to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38495</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38495/1472733082105927</guid>
      <description>&lt;p&gt;
Docs: Move &lt;code&gt;term_description()&lt;/code&gt; reference from filter docblock to &lt;code&gt;get_the_archive_description()&lt;/code&gt; function docblock.
&lt;/p&gt;
&lt;p&gt;
Props dlh.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #33419,​37902 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33419%2C37902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33419%2C37902/1472732631466985</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38494" title="Users: After [33766], don't reset the password when clicking &amp;#34;Show ..."&gt;38494&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Users: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33766" title="Prevent unintended password change after clicking &amp;#34;Generate Password&amp;#34; ..."&gt;[33766]&lt;/a&gt;, don't reset the password when clicking "Show Password" and then "Cancel" on Add New User screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props smerriman for reporting.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37902" title="#37902: defect (bug): Cancelling password when adding a new user results in error (closed: fixed)"&gt;#37902&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33419" title="#33419: defect (bug): Cancelling password update on user-profile fails (closed: fixed)"&gt;#33419&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38494]: Users: After [33766], don't reset the password when clicking "Show ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38494</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38494/1472732630163572</guid>
      <description>&lt;p&gt;
Users: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33766" title="Prevent unintended password change after clicking &amp;#34;Generate Password&amp;#34; ..."&gt;[33766]&lt;/a&gt;, don't reset the password when clicking "Show Password" and then "Cancel" on Add New User screen.
&lt;/p&gt;
&lt;p&gt;
Props smerriman for reporting.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37902" title="#37902: defect (bug): Cancelling password when adding a new user results in error (closed: fixed)"&gt;#37902&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33419" title="#33419: defect (bug): Cancelling password update on user-profile fails (closed: fixed)"&gt;#33419&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37902 (Cancelling password when adding a new user results in error) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:23:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37902#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37902#comment:1/1472732618861127</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 01 Sep 2016 12:20:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:8/1472732429020353</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36378#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was able to reproduce the issue on a clean install in the latest Chrome (52.0.2743.116 and 53.0.2785.89) exactly as shown on the video.
&lt;/p&gt;
&lt;p&gt;
The markup is correct though, so if the browser downloads both versions of the image in certain conditions, it's up to the browser, I guess.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm still not able to reproduce this with all plugins off and am fairly confident that this isn't a browser bug. In the video it looks like a Pinterest plugin is being used, which might be adding additional HTML to the page to populate the shareable image.  As an aside, if you test this with the Debug bar on, you may appear to get double downloads because the debug bar adds additional markup to the page that can include calls for the original image. This tripped me up at first, but after turning that off, I no longer saw double downloads.
&lt;/p&gt;
&lt;p&gt;
I'm going to go ahead and close this as invalid. Feel free to reopen if it can be demonstrated that this is a reproducible bug that WordPress needs to work around.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 11:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:12/1472730418825670</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38493" title="Template: After [38486], actually use the `$description` variable in ..."&gt;38493&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Template: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38486" title="Template: In `get_the_archive_description()`, add support for author ..."&gt;[38486]&lt;/a&gt;, actually use the &lt;code&gt;$description&lt;/code&gt; variable in &lt;code&gt;get_the_archive_description()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38493]: Template: After [38486], actually use the `$description` variable in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 11:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38493</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38493/1472730418331584</guid>
      <description>&lt;p&gt;
Template: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38486" title="Template: In `get_the_archive_description()`, add support for author ..."&gt;[38486]&lt;/a&gt;, actually use the &lt;code&gt;$description&lt;/code&gt; variable in &lt;code&gt;get_the_archive_description()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dlh.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;#37259&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 11:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:5/1472729539036630</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice work, @ideag!
&lt;/p&gt;
&lt;p&gt;
There are a handful of small changes I'd like you to make.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Please put the tests in &lt;code&gt;tests/shortcode.php&lt;/code&gt;, not &lt;code&gt;tests/filters.php&lt;/code&gt;. &lt;code&gt;filters.php&lt;/code&gt; is just for testing the filter handling methods, testing an actual filter belongs in the file related to the area of code where the filter runs.
&lt;/li&gt;&lt;li&gt;Don't use &lt;code&gt;rand_str()&lt;/code&gt; to generate the shortcode. There's a chance (however small), that it could collide with an existing shortcode, unit tests should be as deterministic as possible. Naming the shortcode something related to the new filter will be unique, in the context of the tests.
&lt;/li&gt;&lt;li&gt;We still support PHP 5.2, so the shortcode lambda functions actually need to be methods. The general naming convention for filter helper methods is to prefix them with &lt;code&gt;_filter_&lt;/code&gt;, like test methods are prefixed &lt;code&gt;test_&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Clean up at the end of the test - remove the filters and shortcode. We try to keep unit tests as self-contained as possible, to avoid side effects on tests that run later.
&lt;/li&gt;&lt;li&gt;Please put both the tests and the new filter in the same patch, it makes them easier for folks to apply to their dev installs.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All up, it's looking quite good, thank you for taking the time to get it done! :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37841 (HTML 5 syntax error with rel='https://api.w.org/') updated</title>
      
        <dc:creator>zhanglide2018</dc:creator>

      <pubDate>Thu, 01 Sep 2016 10:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37841#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37841#comment:4/1472726480840714</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37841#comment:3" title="Comment 3"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I dug into this a bit; custom URI relations are not valid in the &lt;a class="ext-link" href="https://html.spec.whatwg.org/multipage/semantics.html#other-link-types"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WHATWG HTML spec&lt;/a&gt; per &lt;a class="ext-link" href="https://www.w3.org/Bugs/Public/show_bug.cgi?id=13068"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this issue&lt;/a&gt;, however they are valid in the &lt;a class="ext-link" href="https://www.w3.org/TR/html5/links.html#linkTypes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;W3C HTML5 spec&lt;/a&gt; per &lt;a class="ext-link" href="https://www.w3.org/html/wg/tracker/issues/170"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this issue&lt;/a&gt; (basically same as the other one).
&lt;/p&gt;
&lt;p&gt;
Anyway, the text of the W3C spec says:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The remaining values must be accepted as valid if they are absolute URLs containing US-ASCII characters only and rejected otherwise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's true for &lt;code&gt;https://api.w.org/&lt;/code&gt;. I suspect the issue is that the validator is coded to follow the WHATWG spec, rather than the W3C spec.
&lt;/p&gt;
&lt;p&gt;
Anyway, tl;dr, we can add it to the &lt;a class="ext-link" href="http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Microformats page&lt;/a&gt;, and then it's definitely valid in either spec.
&lt;/p&gt;
&lt;p&gt;
This is hence a task to add to that wiki page. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks a lot!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30044 (Use subqueries for AND clauses in WP_Meta_Query) updated</title>
      
        <dc:creator>haydenkshaw</dc:creator>

      <pubDate>Thu, 01 Sep 2016 10:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30044#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30044#comment:9/1472725280025021</guid>
      <description>&lt;p&gt;
Hello. Just thought I'd bump the issue as I've had to take an altenative approach with a plug-in I'm developing based on this limitation.
&lt;/p&gt;
&lt;p&gt;
I found that my page response time would jump from a couple seconds to 3 minutes once I had 9 seperate Meta_Query keys that were compared in the following way:
&lt;/p&gt;
&lt;pre class="wiki"&gt;OR(OR(key1,AND(key2,key3)), OR(key4,AND(key5,key6)), OR(key7,AND(key8,key9)))
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:52:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:4/1472723556358953</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37906#comment:1" title="Comment 1"&gt;pento&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I've added some unit tests for this patch. Please keep in mind this is my first time writing unit tests, so I might be doing things wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>pre_do_shortcode_tag_tests.diff attached to Ticket #37906</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37906/pre_do_shortcode_tag_tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37906/pre_do_shortcode_tag_tests.diff/1472723409439845</guid>
      <description>&lt;p&gt;
unit tests for pre_do_shortcode_tag filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>Dang Vu</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:8/1472723008987147</guid>
      <description></description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:7/1472722980783572</guid>
      <description>&lt;p&gt;
I was able to reproduce the issue on a clean install in the latest Chrome (52.0.2743.116 and 53.0.2785.89) exactly as shown on the video.
&lt;/p&gt;
&lt;p&gt;
The markup is correct though, so if the browser downloads both versions of the image in certain conditions, it's up to the browser, I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29785 (User count not correct) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29785#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29785#comment:10/1472721133526976</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mdchiragpatel. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472721129000907"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29785 (User count not correct) updated</title>
      
        <dc:creator>dots</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:11:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29785#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29785#comment:9/1472721091294537</guid>
      <description>&lt;p&gt;
Hi All,
&lt;/p&gt;
&lt;p&gt;
I have added the current test patch which will test the result of this bug. But I am getting the results in Failure. If anyone helps me what exactly I have to do in this file in PHPUnit testing.
&lt;/p&gt;
&lt;p&gt;
Below are the results which I got.
&lt;/p&gt;
&lt;pre class="wiki"&gt;C:\wamp\www\wordpress-core&amp;gt;phpunit tests/phpunit/tests/user/countUsers.php
Installing...
Running as single site... To run multisite, use -c tests/phpunit/multisite.xml
Not running ajax tests. To execute these, use --group ajax.
Not running ms-files tests. To execute these, use --group ms-files.
Not running external-http tests. To execute these, use --group external-http.
Not running external-oembed tests. To execute these, use --group external-oembed
.
PHPUnit 4.1.6 by Sebastian Bergmann.
Configuration read from C:\wamp\www\wordpress-core\phpunit.xml.dist
←[41;37mF←[0m←[41;37mF←[0m←[36;1mS←[0m←[36;1mS←[0m..
You should really fix these slow tests (&amp;gt;150ms)...
 1. 994ms to run Tests_User_CountUsers:test_count_users_is_accurate with data se
t #0
 2. 523ms to run Tests_User_CountUsers:test_count_users_is_accurate with data se
t #1
Time: 13.92 seconds, Memory: 27.75MB
There were 2 failures:
1) Tests_User_CountUsers::test_count_users_is_accurate with data set #0 ('time')
Failed asserting that 9 matches expected 8.
C:\wamp\www\wordpress-core\tests\phpunit\tests\user\countUsers.php:48
2) Tests_User_CountUsers::test_count_users_is_accurate with data set #1 ('memory
')
Failed asserting that 9 matches expected 8.
C:\wamp\www\wordpress-core\tests\phpunit\tests\user\countUsers.php:48
←[37;41m                                                 ←[0m
←[37;41mFAILURES!                                        ←[0m
←[37;41mTests: 6, Assertions: 8, Failures: 2, Skipped: 2.←[0m
C:\wamp\www\wordpress-core&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Thanks in Advance :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>phpunit_test_countUsers.patch attached to Ticket #29785</title>
      
        <dc:creator>dots</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29785/phpunit_test_countUsers.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29785/phpunit_test_countUsers.patch/1472720854822267</guid>
      <description>&lt;p&gt;
Added the phpunit test patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 09:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:3/1472720566942838</guid>
      <description>&lt;p&gt;
I think &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32790" title="#32790: enhancement: Filter for do_shortcode_tag() (closed: fixed)"&gt;#32790&lt;/a&gt; might be related to this too, somehow I didn't see it in my search before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19556 (Make wp_term_checklist() available as a template tag) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:50:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19556#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19556#comment:10/1472719843503335</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28620 (When $depth argument is used in wp_nav_menu last level menu items ...) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28620#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28620#comment:10/1472719615613797</guid>
      <description>&lt;p&gt;
Patch refreshed. This should perhaps even be categorised as a "bug" rather than an "enhancement". Note that a similar issue exists within class &lt;code&gt;Walker_Page&lt;/code&gt; and likely other "walker" classes. These remain unpatched.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:46:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:2/1472719603053929</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15671" title="Admin bar, first pass. see #14772"&gt;[15671]&lt;/a&gt; as &lt;code&gt;awaiting-mod&lt;/code&gt;, changed to &lt;code&gt;ab-awaiting-mod&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16310" title="Admin bar fixes. Props ocean90. see #14772"&gt;[16310]&lt;/a&gt;, unused since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19516" title="Update icons in toolbar: WP logo, comments, update, add new. props ..."&gt;[19516]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think it's safe to remove it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20928.2.diff attached to Ticket #20928</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20928/20928.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20928/20928.2.diff/1472719547537247</guid>
      <description>&lt;p&gt;
class unconditional, refreshed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20928 (Add regular-text style to textareas) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20928#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20928#comment:5/1472719483888647</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think having this unqualified would make sense as it would future proof this to be applied to elements such as selects, datalists, etc
Have refreshed patch and made class unqualified
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28620.2.diff attached to Ticket #28620</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:40:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28620/28620.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28620/28620.2.diff/1472719234156186</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:82/1472718387836510</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35210#comment:81" title="Comment 81"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png"&gt;&lt;img width="300" alt="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" title="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" crossorigin="anonymous" src="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From an accessibility perspective, I'm more concerned about the order of elements in the markup. Ideally, the control that toggles the notifications list should be immediately followed by the... notifications list, meaning there should be no other elements in between.
&lt;/p&gt;
&lt;p&gt;
I'd also recommend to consider a long standing issue in this top part of the Customizer sidebar, again about the order of controls in the source which is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Save (&amp;amp; Publish) button
&lt;/li&gt;&lt;li&gt;Preview/Customize toggle (only in the responsive view)
&lt;/li&gt;&lt;li&gt;Close X link (this one receives the initial focus)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Since the initial focus goes to the X link, the notification red circle would be "skipped" for keyboard and screen reader users and very hard to find. Currently, this happens with the Save button. Users need to tab backwards in order to find it, but their starting point is the X link so why they should even think they have to do so? I'd agree this is related but also a separate issue and should probably go in a separate ticket :)
&lt;/p&gt;
&lt;p&gt;
Other minor things for accessibility would be using aria-label and aria-expanded on the toggle control (and it needs to be a button), these are not a big deal I guess.
&lt;/p&gt;
&lt;p&gt;
Lastly, I'd recommend to carefully consider if there's enough available space. Especially in the responsive view, where the Preview/Customize toggle appears, and considering translations could use longer strings, I'm not so sure there's enough space. There's also a spinner there :)
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/pAGVBgaQIs.png"&gt;&lt;img src="https://cldup.com/pAGVBgaQIs.png" alt="https://cldup.com/pAGVBgaQIs.png" crossorigin="anonymous" title="https://cldup.com/pAGVBgaQIs.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8885 (get_posts() should default orderby post_date_gmt) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8885#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8885#comment:27/1472716955271806</guid>
      <description>wontfix: &lt;p&gt;
I'm going to close this off, &lt;code&gt;wp_posts-&amp;gt;post_date_gmt&lt;/code&gt; isn't indexed and the change has the potential to cause too many backward compatibility problems.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8885 (get_posts() should default orderby post_date_gmt) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 08:02:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8885#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8885#comment:26/1472716922392973</guid>
      <description>&lt;p&gt;
I'm going to close this off, &lt;code&gt;wp_posts-&amp;gt;post_date_gmt&lt;/code&gt; isn't indexed and the change has the potential to cause too many backward compatibility problems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:2/1472716212288532</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37906#comment:1" title="Comment 1"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you have some time, would you mind writing some unit tests for this new filter?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have the time, but I have no experience writing unit tests. I guess this could be a good chance to learn that :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:6/1472716036439685</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm inclined to close following above comment it looks like a browser/theme issue rather than something happening in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37171 (Implement preconnect to Google fonts in themes twenty eleven, twelve, ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37171#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37171#comment:10/1472715957509167</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
MIlestoning, worth preconnecting to the font file server &lt;code&gt;fonts.gstatic.com&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26096 (Caching issue in get_calendar() function) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26096#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26096#comment:7/1472715831511373</guid>
      <description>invalid: &lt;p&gt;
Browser sniffing has since being removed from core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32793 (Combine jQuery and jQuery migrate to reduce HTTP requests) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:38:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32793#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32793#comment:8/1472715514981487</guid>
      <description>wontfix: &lt;p&gt;
No traction.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22951 (Performance enhancements for esc_url()) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22951#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22951#comment:11/1472715403980720</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@schlessera assigning to you as requested ands putting on the 4.7 milestone. It can always be moved off if the security stuff requires additional testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:34:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906#comment:1/1472715244345457</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the suggestion, @ideag!
&lt;/p&gt;
&lt;p&gt;
I like it! If you have some time, would you mind writing some unit tests for this new filter?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12538 (WP should cache menus) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12538#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12538#comment:13/1472715143524448</guid>
      <description>invalid: &lt;p&gt;
Core appears to have changed around this code since the last substantive update. Doesn't appear to remain valid.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:81/1472715007571519</guid>
      <description>&lt;p&gt;
@melchoyce
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Putting aside the creepy eye icon and whatever the calendar icon are (I had no idea until I read "Snapshots" and "Scheduling UI" what they would be, and even now I'm not sure what either of those things means, and in any rate neither should be the focus of this ticket)...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, sorry to muddy things here. I should have made these mocks/screenshots from a pristine environment. Here's another:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png"&gt;&lt;img width="300" alt="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" title="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" crossorigin="anonymous" src="https://core.trac.wordpress.org/raw-attachment/ticket/35210/rough-global-notifications-mock.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How often are you going to receive that many Customizer errors? This seems like overkill.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A few situations where global notifications make sense to me:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When the customizer preview fails to refresh due to a network connectivity error, a notification should be displayed.
&lt;/li&gt;&lt;li&gt;When the server returns with a fatal error when refreshing the preview, there should be a notification instead of failing silently. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29932" title="#29932: enhancement: There is no error reporting in the Customizer (for upload failures) (closed: invalid)"&gt;#29932&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31582" title="#31582: defect (bug): Catching PHP Fatal Errors on WordPress Theme Customizer (closed: fixed)"&gt;#31582&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;When attempting to Save &amp;amp; Publish settings and they are rejected due to validation constraints, in addition to there being a notification displayed with the control related to the invalid setting, there could be a global notification as well to make it clear that there was an error overall on saving the changes: “Unable to save due to invalid settings”.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Again, as @celloexpressions noted, these errors are not necessarily related to a specific control and so the notifications aren't suitable to be displayed in a control's notifications area.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I agree. Using a bubble like that makes it seem like the user is receiving a notification. "Oh, maybe if I click this I'll see my recent comments on my posts? Oh, nope, that's something I don't understand, let me never click this again." This is the wrong metaphor for this kind of interface, which adds an extra layer of confusion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The red disk with a white number in it seems like a common way to show notifications (e.g. Facebook, iOS icon overlays). I'm not sure it would be confused with comments because the styling of the post comments count (&lt;code&gt;.post-com-count&lt;/code&gt;) distinctly has a speech bubble “tail”:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/35210/post-comments-count.png"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/35210/post-comments-count.png" alt="https://core.trac.wordpress.org/raw-attachment/ticket/35210/post-comments-count.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/35210/post-comments-count.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Nevertheless, the Jetpack notifications icon (&lt;code&gt;#wpnt-notes-unread-count&lt;/code&gt;) in the admin bar also looks like a comments count speech bubble icon, and yet it includes notifications other than comments (e.g. booming stats, number of likes, new followers, etc):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/35210/jetpack-unread-notifications-icon.png"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/35210/jetpack-unread-notifications-icon.png" alt="https://core.trac.wordpress.org/raw-attachment/ticket/35210/jetpack-unread-notifications-icon.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/35210/jetpack-unread-notifications-icon.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37905 (Caption shortcode creates non-semantic html in text mode) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:28:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37905#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37905#comment:2/1472714914367722</guid>
      <description>&lt;p&gt;
@wvndev Thanks for your first ticket and steps to reproduce. I've marked it a related to another ticket with similar malformed HTML when using shortcodes. Please can you test the patch on the linked ticket and see if that fixes this issue. (In my testing the patch on that ticket fixes this issue as well)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37905 (Caption shortcode creates non-semantic html in text mode) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37905#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37905#comment:1/1472714797786565</guid>
      <description>&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34722" title="#34722: defect (bug): Open P Tag in shortcode related to h tag (new)"&gt;#34722&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26111 (wp_localize_script array from callback for performance) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26111#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26111#comment:31/1472714714793308</guid>
      <description>maybelater: &lt;p&gt;
between age and the last comment, I'm going to close this out as maybe later.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>jetpack-unread-notifications-icon.png attached to Ticket #35210</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:19:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35210/jetpack-unread-notifications-icon.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35210/jetpack-unread-notifications-icon.png/1472714392671018</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>post-comments-count.png attached to Ticket #35210</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35210/post-comments-count.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35210/post-comments-count.png/1472714282485313</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>pre_do_shortcode_tag.diff attached to Ticket #37906</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37906/pre_do_shortcode_tag.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37906/pre_do_shortcode_tag.diff/1472713892597647</guid>
      <description>&lt;p&gt;
a patch to introduce pre_do_shortcode_tag filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37906 (Filter to short-circuit do_shortcode_tag) created</title>
      
        <dc:creator>ideag</dc:creator>

      <pubDate>Thu, 01 Sep 2016 07:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37906/1472713822673037</guid>
      <description>&lt;p&gt;
Working for a client I noticed that there is no way for plugins to modify or short-circuit shortcode output.
&lt;/p&gt;
&lt;p&gt;
My use case - I wanted to fragment-cache some resource-intensive shortcodes from other plugins. In my case I solved it by introducing new shortcode and calling &lt;code&gt;do_shortcode&lt;/code&gt; from inside, but I think a general filter for this would be good to have. We do have similar &lt;code&gt;pre_&lt;/code&gt; type of filters for http requests, get_option and elswhere, so introducing one for shortcodes would be good for consistency, to.
&lt;/p&gt;
&lt;p&gt;
My suggestion is to introduce a &lt;code&gt;pre_do_shortcode_tag&lt;/code&gt; filter that would allow plugins to short-circuit and return their own value for any shortcode they choose. I am attaching a possible patch for this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>rough-global-notifications-mock.png attached to Ticket #35210</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35210/rough-global-notifications-mock.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35210/rough-global-notifications-mock.png/1472713197941944</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37905 (Caption shortcode creates non-semantic html in text mode) created</title>
      
        <dc:creator>wvndev</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37905/1472713011662514</guid>
      <description>&lt;p&gt;
When adding a caption shortcode to a post in text mode, a blank line is not added after the shortcode.  In visual mode, a blank line is inserted when inserting a caption photo.  When a blank line is not inserted after the caption short code, WP doesn't properly encapsulate the content correctly and is not semantic HTML.  This is 100% reproducible in stock WP site using 2016 theme.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new post
&lt;/li&gt;&lt;li&gt;Switch to text mode
&lt;/li&gt;&lt;li&gt;Upload an image, set the image caption and insert into the post.
&lt;/li&gt;&lt;li&gt;Press return and type a new line of content.
&lt;/li&gt;&lt;li&gt;Publish / preview the post.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;Example content:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;[caption id="attachment_5" align="alignnone" width="240"]&amp;lt;img src="http://some.site/wp-content/uploads/2016/08/Unknown.jpeg" alt="This is the caption text." width="240" height="182" class="size-full wp-image-5" /&amp;gt; This is the caption text.[/caption]
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id metus non tortor suscipit porttutor.
Integer vel risus vitae neque egestas tempus. Nam vehicula laoreet tortor, eget sodales ex tristique quis. Duis eu iaculis orci, at varius libero.
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Output of HTML:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="entry-content"&amp;gt;
	&amp;lt;p&amp;gt;&amp;lt;figure id="attachment_5" style="width: 240px" class="wp-caption alignnone"&amp;gt;&amp;lt;img src="http://some.site/wp-content/uploads/2016/08/Unknown.jpeg" alt="This is the caption text." width="240" height="182" class="size-full wp-image-5" /&amp;gt;&amp;lt;figcaption class="wp-caption-text"&amp;gt;This is the caption text.&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt;&amp;lt;br /&amp;gt;
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id metus non tortor suscipit porttitor. &amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;Integer vel risus vitae neque egestas tempus. Nam vehicula laoreet tortor, eget sodales ex tristique quis. Duis eu iaculis orci, at varius libero.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Expected output of HTML:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="entry-content"&amp;gt;
	&amp;lt;p&amp;gt;&amp;lt;figure id="attachment_5" style="width: 240px" class="wp-caption alignnone"&amp;gt;&amp;lt;img src="http://some.site/wp-content/uploads/2016/08/Unknown.jpeg" alt="This is the caption text." width="240" height="182" class="size-full wp-image-5" /&amp;gt;&amp;lt;figcaption class="wp-caption-text"&amp;gt;This is the caption text.&amp;lt;/figcaption&amp;gt;&amp;lt;/figure&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id metus non tortor suscipit porttitor. &amp;lt;/p&amp;gt;
	&amp;lt;p&amp;gt;Integer vel risus vitae neque egestas tempus. Nam vehicula laoreet tortor, eget sodales ex tristique quis. Duis eu iaculis orci, at varius libero.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Notes -- In visual mode when performing steps 1, 3-5 above, WP does insert a new line after the caption. This issue only appears to be caused in text mode in which the writer needs to add a blank line after the shortcode. In visual mode, the blank line is added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37171 (Implement preconnect to Google fonts in themes twenty eleven, twelve, ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37171#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37171#comment:9/1472712345054919</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472712342000899"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:43:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:77/1472712193153135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Playing with these parts of Core can cause things to break in strange ways. Let's find out what breaks!
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22363/22363.diff" title="Attachment '22363.diff' in Ticket #22363"&gt;22363.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22363/22363.diff" title="Download"&gt;​&lt;/a&gt; looks reasonable, I'm okay with #yolofriday-ing it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:5/1472712123138950</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472712119000894"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32793 (Combine jQuery and jQuery migrate to reduce HTTP requests) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32793#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32793#comment:7/1472712050468943</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472712048000891"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:37:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:3/1472711872708035</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:37:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890#comment:2/1472711860618324</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@dlh I've been thinking about this more, and I think perhaps the (my) initial decision to add &lt;code&gt;from_sever&lt;/code&gt; to the data sent from the server was faulty to begin with. It really shouldn't be mutating the data that was added to the &lt;code&gt;WP_Error&lt;/code&gt;. What if instead we just add the &lt;code&gt;from_server&lt;/code&gt; flag when we process the validities on the client when they are sent from the server? We could introduce a new &lt;code&gt;fromServer&lt;/code&gt; property on &lt;code&gt;wp.customize.Notification&lt;/code&gt; to represent this concretely.
&lt;/p&gt;
&lt;p&gt;
What do you think of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37890/37890.2.diff" title="Attachment '37890.2.diff' in Ticket #37890"&gt;37890.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37890/37890.2.diff" title="Download"&gt;​&lt;/a&gt;?
&lt;/p&gt;
&lt;p&gt;
(This also fixes a bug I noticed with regard to the &lt;code&gt;setting&lt;/code&gt; property being completely ignored when the setting notification is synced to the control notifications.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26096 (Caching issue in get_calendar() function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26096#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26096#comment:6/1472711772538473</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472711769000887"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37890.2.diff attached to Ticket #37890</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37890/37890.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37890/37890.2.diff/1472711620537664</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25787 (wp_page_menu function is very inefficient) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25787#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25787#comment:7/1472711601415924</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472711598000885"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37904 (PHP warning when `include` is passed for `orderby` in get_terms()) created</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37904/1472711458806228</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'include'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'2,4,3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'include'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$terms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_terms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;p&gt;
Warning: array_map(): Argument &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; should be an array in /var/www/trunk.dev/public_html/wp-includes/class-wp-term-query.php on line 776
&lt;/p&gt;
&lt;p&gt;
Warning: implode(): Invalid arguments passed in /var/www/trunk.dev/public_html/wp-includes/class-wp-term-query.php on line 776
&lt;/p&gt;
&lt;p&gt;
WordPress database error: [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') ASC' at line 1]
SELECT t.*, tt.* FROM wp_terms AS t INNER JOIN wp_term_taxonomy AS tt ON t.term_id = tt.term_id WHERE t.term_id IN ( 2,4,3 ) AND tt.count &amp;gt; 0 ORDER BY FIELD( t.term_id, ) ASC
&lt;/p&gt;
&lt;p&gt;
Environment:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WP version: 4.7-alpha-38492
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25419 (Add icon support for widgets on the admin page and customize screens) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:27:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25419#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25419#comment:17/1472711232105410</guid>
      <description>&lt;p&gt;
Tested the styling with dashicons, the spacing looks fine in narrow columns, on mobiles, with accessibility mode.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17771 (URL-encoded comment_author_url gets broken by MySQL varchar 200 length ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:25:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17771#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17771#comment:12/1472711128712008</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472711126000870"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22951 (Performance enhancements for esc_url()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22951#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22951#comment:10/1472710925189099</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472710923000867"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22301 (Performance problem with Recent Comments widget) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22301#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22301#comment:14/1472710902870284</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:20:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:147</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:147/1472710851637645</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:137" title="Comment 137"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right. In "pluggable.php" this is the intended behaviour, and the design is bad. However because of the way WordPress works, adding standard autoloading of classes introduces exactly the same design flaws like in pluggable.php. Of course we can add all the documentation and warnings we want, but do you believe all developers will always follow them? After the example with the shortcodes the answer tends to be firm "No".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you please explain how there's a difference between:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'setup_theme'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'wp_rewrite'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TotallyBrokenWpRewrite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'plugins_loaded'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="s1"&gt;'src/TotallyBrokenWpRewrite.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The last one would possibly bypass the core autoloader. The first one replaces the global instance. Both override the default &lt;code&gt;WP_Rewrite&lt;/code&gt; implementation. The first one is possible right now.
&lt;/p&gt;
&lt;p&gt;
We're talking about a slightly different facet of an &lt;em&gt;already existing problem&lt;/em&gt;. But maybe I miss something here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22301 (Performance problem with Recent Comments widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:17:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22301#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22301#comment:13/1472710678296202</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472710676000864"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12538 (WP should cache menus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:13:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12538#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12538#comment:12/1472710412017012</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472710409000860"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8885 (get_posts() should default orderby post_date_gmt) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8885#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8885#comment:25/1472710119362892</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472710117000856"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26111 (wp_localize_script array from callback for performance) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26111#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26111#comment:30/1472709794710003</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472709792000851"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29076 (The Minor Publishing Actions (Buttons) need some breathing room) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 01 Sep 2016 06:01:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29076#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29076#comment:5/1472709715003032</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote&gt;
&lt;p&gt;
Tested the patch, works as advertised.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27403,​36678 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27403%2C36678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27403%2C36678/1472709272793292</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38492" title="Customize: Introduce `paneVisible` state and ensure pane is visible ..."&gt;38492&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Introduce &lt;code&gt;paneVisible&lt;/code&gt; state and ensure pane is visible when a construct is expanded (or focused).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes issue whereby a user would see nothing happen if the pane is collapsed while they shift-click to edit an element in the preview.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props curdin, celloexpressions, westonruter.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27403" title="#27403: enhancement: Improve UI for linking areas of Customizer preview to corresponding ... (closed: fixed)"&gt;#27403&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36678" title="#36678: defect (bug): Shift-click in Customizer when collapsed does nothing (closed: fixed)"&gt;#36678&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38492]: Customize: Introduce `paneVisible` state and ensure pane is visible ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38492</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38492/1472709272303040</guid>
      <description>&lt;p&gt;
Customize: Introduce &lt;code&gt;paneVisible&lt;/code&gt; state and ensure pane is visible when a construct is expanded (or focused).
&lt;/p&gt;
&lt;p&gt;
Fixes issue whereby a user would see nothing happen if the pane is collapsed while they shift-click to edit an element in the preview.
&lt;/p&gt;
&lt;p&gt;
Props curdin, celloexpressions, westonruter.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27403" title="#27403: enhancement: Improve UI for linking areas of Customizer preview to corresponding ... (closed: fixed)"&gt;#27403&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36678" title="#36678: defect (bug): Shift-click in Customizer when collapsed does nothing (closed: fixed)"&gt;#36678&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:11/1472708649445980</guid>
      <description>&lt;p&gt;
@celloexpressions I'm not sure. If a given panel/section/control is expanded or focused, regardless of whether or not the action originated from the preview, I would expect the pane to become visible if it wasn't already shown.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33141 (Search form clear button is clipped in Safari (OS X)) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:38:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33141#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33141#comment:3/1472708294474211</guid>
      <description>&lt;p&gt;
@mauteri I've checked your solution, but on some versions of Safari it doesn't solve the problem. So doesn't the pseudo selector. The only thing, that really worked across the deck was to adjust the horizontal padding of the search field to
&lt;/p&gt;
&lt;pre class="wiki"&gt;.wp-filter .search-form input[type="search"] {
    - padding: 3px 5px;
    + padding: 3px 4px;
}
&lt;/pre&gt;&lt;p&gt;
On the other hand this also means, that the general rule for input and select fields:
&lt;/p&gt;
&lt;pre class="wiki"&gt;input, select {
    margin: 1px;
    padding: 3px 5px;
}
&lt;/pre&gt;&lt;p&gt;
would have to be changed to padding: 3px 4px;
&lt;/p&gt;
&lt;p&gt;
Not sure, if losing 1 pixel and breathing air on all fields is worth for one specific browser, not to speak of only some of it's older versions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37903 (SQL Consistency ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37903#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37903#comment:2/1472706607738965</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38491" title="Query: Use `AND` in a SQL query rather than `&amp;amp;&amp;amp;`.
This appears to have ..."&gt;38491&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: Use &lt;code&gt;AND&lt;/code&gt; in a SQL query rather than &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.&lt;br /&gt;
This appears to have been the only instance of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; being used in SQL, so for consistency lets remove it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props scrappy@….&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37903" title="#37903: enhancement: SQL Consistency ... (closed: fixed)"&gt;#37903&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38491]: Query: Use `AND` in a SQL query rather than `&amp;&amp;`. This appears to have ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38491</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38491/1472706607252474</guid>
      <description>&lt;p&gt;
Query: Use &lt;code&gt;AND&lt;/code&gt; in a SQL query rather than &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.
This appears to have been the only instance of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; being used in SQL, so for consistency lets remove it.
&lt;/p&gt;
&lt;p&gt;
Props scrappy@….
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37903" title="#37903: enhancement: SQL Consistency ... (closed: fixed)"&gt;#37903&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 05:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:65/1472706531121884</guid>
      <description>&lt;p&gt;
Here's an example of type inspection at work in PHPStorm, through the container indirection:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.alainschlesser.com/wp-content/uploads/2016/09/container_inspection.gif"&gt;&lt;img src="https://www.alainschlesser.com/wp-content/uploads/2016/09/container_inspection.gif" alt="https://www.alainschlesser.com/wp-content/uploads/2016/09/container_inspection.gif" crossorigin="anonymous" title="https://www.alainschlesser.com/wp-content/uploads/2016/09/container_inspection.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:146</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:146/1472705693766121</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:144" title="Comment 144"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For our own project (WPLib) we added our own autoloader in front of Composer's autoloader because Composer's autoloader often runs through a painful amount of code before it actually identifies the file to load.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This made me curious, so I checked to see what the actual code path is for the proposed Composer class map autolaoder that was committed.
&lt;/p&gt;
&lt;p&gt;
First, let's check what function gets registered as the autoload callback:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;spl_autoload_register(array($this, 'loadClass'), true);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, when a class is not yet known, the PHP autoloader will be invoked, and it will call the &lt;code&gt;ClassLoader::loadClass()&lt;/code&gt; method. So far so good, not much to optimize there, as this is all PHP internals up to that point.
&lt;/p&gt;
&lt;p&gt;
It gets more interesting if we take a look at the code if this &lt;code&gt;loadClass()&lt;/code&gt; method:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public function loadClass($class)
{
    if ($file = $this-&amp;gt;findFile($class)) {
        include $file;
        return true;
    }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It tries to find the needed file, includes it and returns. Not much to optimize here either.
&lt;/p&gt;
&lt;p&gt;
And then finally, let's take a look at the code path of the &lt;code&gt;ClassLoader::findFile()&lt;/code&gt; method, provided that we're using a class map as is currently the case here:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public function findFile($class)
{
    if ('\\' === $class[0]) {
        $class = substr($class, 1);
    }
    if (isset($this-&amp;gt;classMap[$class])) {
        return $this-&amp;gt;classMap[$class];
    } // [...]
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, it first makes sure to have a normalized class name, then retrieves it from the class map and returns.
&lt;/p&gt;
&lt;p&gt;
I don't think there's much potential for optimization in the code above, for the scenario we have been describing here.
&lt;/p&gt;
&lt;p&gt;
Yes, if the class was not found, the code continues, and yes, if you use different kinds of autoloaders, different code paths get executed. But as you mentioned you were using class maps, I fail to see how you optimized the above by prepending your own class loader.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37903 (SQL Consistency ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37903#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37903#comment:1/1472705167616312</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @scrappy@… and welcome to Trac :)
&lt;/p&gt;
&lt;p&gt;
I see no reason why we shouldn't be consistent here, I can't find any other occurrences of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; in SQL in core, although I can see a few plugins which use the syntax.
&lt;/p&gt;
&lt;p&gt;
I'd highly suggest adding a conversion for the standard MySQL logic syntaxes, just as plugins are going to do what plugins do :)
&lt;/p&gt;
&lt;p&gt;
Introduced with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36138" title="Feeds: Comments on attachments display in the site-wide comments RSS ..."&gt;[36138]&lt;/a&gt; in 4.5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:64/1472704725332381</guid>
      <description>&lt;p&gt;
Typing happens on the property.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Burrito&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="sd"&gt;/**
     * @var wpdb
     */&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;whatever&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Any content store is going to return &lt;code&gt;mixed&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'object'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:63/1472704170956533</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:60" title="Comment 60"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have real concerns with using &lt;code&gt;WP::get()&lt;/code&gt;, e.g. &lt;code&gt;WP::get('wpdb')&lt;/code&gt;:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There is no way to type the return value thus coding with an IDE like PhpStorm will result in code that is littered with flagged unresolvable references.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;This simple issue that  &lt;code&gt;WP::get('wdpb')&lt;/code&gt; won't get cause during development in an IDE like PhpStorm because it can't inspect the string and validate it.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
This is not true, and as every major framework uses containers, PHPStorm has several ways of providing type inspection for them. For a very simple way of adding this, see the article here: &lt;a class="ext-link" href="https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:26:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:62/1472704004128018</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:59" title="Comment 59"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As far as I know there is no conflict here.  You can have a &lt;code&gt;WP&lt;/code&gt; class and a &lt;code&gt;WP&lt;/code&gt; namespace and they won't conflict.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, there's no technical conflict, but we might want to plan for conventions ahead of time and avoid confusion.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please don't.  Let's not start adding lots of positional parameters to constructors so that in the future we have to  end up writing code like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$query = new WP_Comment_Query(array(...), null, null, null, null, null, null, null, null, new FooBar() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
With the above example, most people will not need to write any code like this, because of the poka-yoke that makes the most used case the default anyway. But it opens up the possibility to do so, for unit tests, for dependency injection or more advanced scenarios.
&lt;/p&gt;
&lt;p&gt;
Typing characters is cheap. Rewriting an architecture because it misses an extensibility point is not.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] so that to code for WordPress requires us to remember which classes we need to be able to call the methods we need [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
...that's what we do as developers! (well, unless we avoid classes and stuck everything in global namespace, which is "probably a good idea")
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are better ways to handle this to create a much more usable "api", IMO. Everything can route through the &lt;code&gt;WP&lt;/code&gt; class using helper classes where the methods are called using &lt;code&gt;__callStatic()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I consider this to be a hack.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:145</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:145/1472703379329808</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:144" title="Comment 144"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Time for a contrary opinion.  I think there has been too much &lt;a class="ext-link" href="http://www.psysr.org/about/pubs_resources/groupthink%20overview.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;group think&lt;/a&gt; on this ticket &lt;em&gt;(except for @azaozz)&lt;/em&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@azaozz raises very valid concerns, and I think we should try our best to address each one of them and find a solution that works for all concerned.
&lt;/p&gt;
&lt;p&gt;
However, what you call "groupthink" (which I find rude, tbh), is an effort to bring de facto PHP best practices to WordPress, trying to get it out of the "legacy software" drawer it keeps getting put into more and more. I think that all the people contributing on Trac are interested in seeing a bright future for WordPress, so it hurts to have it be too tightly stuck in the past.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is relevant not just for performance but because it makes debugging with XDEBUG a &lt;strong&gt;major PITA&lt;/strong&gt;.  Our autoloader is two lines long using a classmap, and it is far less painful to use when XDEBUGging.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you use a tried and tested autoloader, there's no need to step through it with XDEBUG, so I don't see why this would be relevant.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, recently I have come to the conclusion that while Composer is brilliant for PHP frameworks it is a nightmare to work with for WordPress because it is opinionated in many ways and those opinions different in most things that WordPress needs to do.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;If it is problematic to apply (de-facto) best practices to a project, chances are the best practices are not a fault.&lt;/strong&gt; This probably just points to an inherent design flaw that should be addressed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] WPLib Box [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are lots of solutions available for something like this, all with different kinds of merits. I don't think this ticket is the best place to discuss these, though.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;My preference would be that WordPress core would leverage a highly-optimized class-map autoloader&lt;/strong&gt; &lt;em&gt;(and not have the classmap be "temporary")&lt;/em&gt; used both for performance and for minimizing amount of code that one has to step through during debugging with XDEBUG, and encourage plugins and themes to use the class-map too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Composer autoloader is generated by an &lt;code&gt;AutoloadGenerator&lt;/code&gt; ... which can be completely customized. If there is a concensus on how the resulting autoloader should look, just let me know and I'll quickly code up a generator for that particular format. Composer is flexible enough to support ANY resulting classloader format, not just the one shipped by default.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ideally the class-map autoloader would be optimized for the number of lines that need to run for a file to be autoloaded, and that the class-map loader would be run first in front of the other optional autoloaders.  And rather than separating concerns for the class-map loader, optimize it instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The optimization is certainly something that needs to be done, but premature optimization at this point is completely useless (and counter-productive), as we're just figuring out how to autoload at all without breaking stuff at this point.
&lt;/p&gt;
&lt;p&gt;
That being said, the Composer autoloader is already tightly optimized in a proven way, and it is difficult to get any improvements over it with anything but very simple scenarios.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;class-foo-bar.php&lt;/code&gt; vs. &lt;code&gt;WP_Foo_Bar.php&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While I agree that using class names instead of arbitrary filenames, this discussion is not relevant for the autoloader and should be done in the context of the WP Coding Standards efforts.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I started our WPLib autoloader following that pattern, but am currently working on a version that will move to using classnames for filenames because it solves the problem of to find the filename for a class in a classmap. This is very helpful when writing code that needs to be able to determine what plugin a class is in, or if it in the theme, for example.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The whole point of a class map autoloader is to associate arbitrary filenames with class names. If you can determine one from the other, you don't need a class map. You can just use a PSR-0 or PSR-4 autoloader.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Class-Map Generation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
BTW, I've found a really nice way to build a class-map even with the other autoloaders.  Have each autoloader add any classes found to the classmap and then when &lt;code&gt;WP_DEBUG&lt;/code&gt; is active write out to a file on a &lt;code&gt;'shutdown'&lt;/code&gt; hook which can then be loaded in wp-settings.php. Which it works well for WPLib there are issues with implementing it in core, but it is something to explore.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I fail to see how that would be preferable to have a mature, 5-year-tested class map builder that is used by the rest of the PHP world.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>smerriman</dc:creator>

      <pubDate>Thu, 01 Sep 2016 04:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:5/1472702802050070</guid>
      <description>&lt;p&gt;
I'm in the same boat here - our server is unable to correctly route IPv6 addresses. This happens regularly, for example, with Facebook graph requests.
&lt;/p&gt;
&lt;p&gt;
We avoid this by using http_api_curl to set the CURL_IPRESOLVE option to CURL_IPRESOLVE_V4. WP4.6 has broken this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>query.p1 attached to Ticket #37903</title>
      
        <author>scrappy@…</author>

      <pubDate>Thu, 01 Sep 2016 03:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37903/query.p1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37903/query.p1/1472702251738628</guid>
      <description>&lt;p&gt;
Patch for query.php to replace &amp;amp;&amp;amp; with AND for SQL
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37903 (SQL Consistency ...) created</title>
      
        <author>scrappy@…</author>

      <pubDate>Thu, 01 Sep 2016 03:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37903/1472702207632158</guid>
      <description>&lt;p&gt;
I've been working on pg4wp in order to have it work with both WP 4.6 and PostgreSQL 9.5 ... running the regression tests, I've come across what appears to be the only occurance of the use of &amp;amp;&amp;amp; instead of AND in the SQL code ...
&lt;/p&gt;
&lt;p&gt;
I realize that this works under MySQL, but would appreciate it if it was possible to have it changed to SQL Standard AND ...
&lt;/p&gt;
&lt;p&gt;
I have attached a patch against 4.6 ... the code is in wp-include/query.php
&lt;/p&gt;
&lt;p&gt;
Thank you for your consideration ...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 03:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:61/1472701385015440</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; broke BuddyPress's tests. BP had been setting up some initial data in WP &lt;code&gt;page&lt;/code&gt; objects in each &lt;code&gt;setUpBeforeClass()&lt;/code&gt;, and these objects are now wiped out. It's easily fixed, but worth noting, as there may be others relying on the current behavior. It'd be nice to document the change somewhere other than this ticket, whose relationship to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; is not clear. &lt;a class="ext-link" href="https://buddypress.trac.wordpress.org/ticket/7241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://buddypress.trac.wordpress.org/ticket/7241&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37902 (Cancelling password when adding a new user results in error) created</title>
      
        <dc:creator>smerriman</dc:creator>

      <pubDate>Thu, 01 Sep 2016 02:53:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37902/1472698436718518</guid>
      <description>&lt;p&gt;
1) Go to Users - Add New.
2) Fill in a Username + Email
3) Click Show Password, then click Cancel
4) Click Add New User.
&lt;/p&gt;
&lt;p&gt;
A user won't be created, with the error "ERROR: Please enter a password.", even though the same process works if you skip step 3.
&lt;/p&gt;
&lt;p&gt;
I believe this was caused by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33980" title="Prevent unintended password change after clicking &amp;#34;Generate Password&amp;#34; ..."&gt;[33980]&lt;/a&gt;, in which case that should have only been applied to editing a user, not creating one.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 02:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:60/1472696173464356</guid>
      <description>&lt;p&gt;
I have real concerns with using &lt;code&gt;WP::get()&lt;/code&gt;, e.g. &lt;code&gt;WP::get('wpdb')&lt;/code&gt;:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There is no way to type the return value thus coding with an IDE like PhpStorm will result in code that is littered with flagged unresolvable references.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;The simple issue that  &lt;code&gt;WP::get('wdpb')&lt;/code&gt; won't get caught during development in an IDE like PhpStorm because it can't inspect the string and validate it.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Propose instead using &lt;code&gt;WP::&amp;lt;global&amp;gt;()&lt;/code&gt; and &lt;code&gt;WP::set_&amp;lt;global&amp;gt;(&amp;lt;new_value&amp;gt;)&lt;/code&gt; as in &lt;code&gt;WP::wpdb()&lt;/code&gt; and &lt;code&gt;WP::set_wpdb($new_wpdb)&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 02:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:59/1472695858804606</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:1" title="Comment 1"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Relying on the &lt;code&gt;WP&lt;/code&gt; class name as the Service Locator is not ideal, as a future version of WordPress (PHP 5.3+) would most likely have &lt;code&gt;WP&lt;/code&gt; as the root namespace. That future version would probably offer something like &lt;code&gt;WP\Service::get( 'wpdb' );&lt;/code&gt;, so something like &lt;code&gt;WP_Service::get( 'wpdb' );&lt;/code&gt; would be preferable. Keeping this as future-proof and flexible as possible should be a priority.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As far as I know there is no conflict here.  You can have a &lt;code&gt;WP&lt;/code&gt; class and a &lt;code&gt;WP&lt;/code&gt; namespace and they won't conflict.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Dependency injection&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
So, while we cannot yet have a proper injector decide what to inject in what context, we can at least let the constructor take an injected dependency, and provide a "Poka-yoke" for as long as we are not able to do real injection. This would look something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Comment_Query {
   protected $dbh;
   public function __construct( $query = '', $wpdb = null ) {
      $this-&amp;gt;dbh = null !== $wpdb ? $wpdb : WP_service::get( 'wpdb' );
      // [...]
   }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Please don't.  Let's not start adding lots of positional parameters to constructors so that in the future we have to  end up writing code like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$query = new WP_Comment_Query(array(...), null, null, null, null, null, null, null, null, new FooBar() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And please let us not preside over an explosion of classes like &lt;code&gt;WP_service&lt;/code&gt; so that to code for WordPress requires us to remember which classes we need to be able to call the methods we need, even though we've mostly be isolated from that since day 1.
&lt;/p&gt;
&lt;p&gt;
There are better ways to handle this to create a much more usable "api", IMO. Everything can route through the &lt;code&gt;WP&lt;/code&gt; class using helper classes where the methods are called using &lt;code&gt;__callStatic()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 01:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:10/1472694711487232</guid>
      <description>&lt;p&gt;
I think I would prefer only changing the state when a control is being focused after an action in the preview, as the previous patches had done (although this way would also work).
&lt;/p&gt;
&lt;p&gt;
Other than that, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36678/36678.3.diff" title="Attachment '36678.3.diff' in Ticket #36678"&gt;36678.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36678/36678.3.diff" title="Download"&gt;​&lt;/a&gt; looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 01 Sep 2016 01:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:80/1472694704678027</guid>
      <description>&lt;p&gt;
This is primarily needed for general errors that aren't tied to a particular setting. Additionally, setting-specific errors would also be displayed here and linked to the corresponding setting, so that clicking on the notification will provide context. If there are multiple save-blocking errors, with out this you'd have to search through all of the sections to find the other errors. It's important to note that the indicator would only be visible when there are multiple notifications (single notifications are autofocused when you try saving), and it could potentially only be visible when there are errors as well.
&lt;/p&gt;
&lt;p&gt;
The benefit to having the notifications toggle open is that we can also collect info and warning (and custom) notifications here so that users can more easily navigate to the settings with issues. If they display at the top (which isn't actually possible with our current CSS and JS), we'd only show errors there.
&lt;/p&gt;
&lt;p&gt;
What can we do in terms of UI to make an indicator next to the save button that indicates that there are errors to address rather than seeming like notifications such as comments?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2016 01:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:144</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:144/1472694499047741</guid>
      <description>&lt;p&gt;
Time for a contrary opinion.  I think there has been too much &lt;a class="ext-link" href="http://www.psysr.org/about/pubs_resources/groupthink%20overview.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;group think&lt;/a&gt; on this ticket &lt;em&gt;(except for @azaozz)&lt;/em&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Composer
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I assume we are discussing how the average WordPress would work with WordPress. For that I am currently strongly against using Composer for WordPress core.  First, it's autoloader.
&lt;/p&gt;
&lt;p&gt;
For our own project (WPLib) we added our own autoloader in front of Composer's autoloader because Composer's autoloader often runs through a painful amount of code before it actually identifies the file to load.  This is relevant not just for performance but because it makes debugging with XDEBUG a &lt;strong&gt;major PITA&lt;/strong&gt;.  Our autoloader is two lines long using a classmap, and it is far less painful to use when XDEBUGging.
&lt;/p&gt;
&lt;p&gt;
Second is Composer's complexity
&lt;/p&gt;
&lt;p&gt;
I think we should reinvent the wheel here.  I have been working the past year on WPLib Box (Vagrant local dev server) with a goal of creating a standized platform for doing WP development -- at least for users of our box -- I had embraced Composer.
&lt;/p&gt;
&lt;p&gt;
However, recently I have come to the conclusion that while Composer is brilliant for PHP frameworks it is a nightmare to work with for WordPress because it is opinionated in many ways and those opinions different in most things that WordPress needs to do.
&lt;/p&gt;
&lt;p&gt;
So I am now planning to design a WordPress-specific format for WPLib Box with a goal to greatly simplify what you need to specify to get a WP site to work. We might even generate a Composer file and use it behind the scenes, merging in any Composer files that work well with Composer, e.g. those things found at packagist.org.
&lt;/p&gt;
&lt;p&gt;
That said, I would love for the WordPress community to do this work with me so it it can be improved by me not working on it in a vacuum.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;In summary related to Composer is that it is not well suited for WordPress website.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;And I would hate to see Composer become the &lt;em&gt;"standard"&lt;/em&gt; for WordPress.&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Too Much Code Running During Autoloading
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;My preference would be that WordPress core would leverage a highly-optimized class-map autoloader&lt;/strong&gt; &lt;em&gt;(and not have the classmap be "temporary")&lt;/em&gt; used both for performance and for minimizing amount of code that one has to step through during debugging with XDEBUG, and encourage plugins and themes to use the class-map too.
&lt;/p&gt;
&lt;p&gt;
Ideally the class-map autoloader would be optimized for the number of lines that need to run for a file to be autoloaded, and that the class-map loader would be run first in front of the other optional autoloaders.  And rather than separating concerns for the class-map loader, optimize it instead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;class-foo-bar.php&lt;/code&gt; vs. &lt;code&gt;WP_Foo_Bar.php&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I started our WPLib autoloader following that pattern, but am currently working on a version that will move to using classnames for filenames because it solves the problem of to find the filename for a class in a classmap. This is very helpful when writing code that needs to be able to determine what plugin a class is in, or if it in the theme, for example.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Class-Map Generation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
BTW, I've found a really nice way to build a class-map even with the other autoloaders.  Have each autoloader add any classes found to the classmap and then when &lt;code&gt;WP_DEBUG&lt;/code&gt; is active write out to a file on a &lt;code&gt;'shutdown'&lt;/code&gt; hook which can then be loaded in wp-settings.php. Which it works well for WPLib there are issues with implementing it in core, but it is something to explore.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2016 01:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901#comment:1/1472693251755824</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37207.2.diff attached to Ticket #37207</title>
      
        <dc:creator>mboynes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37207/37207.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37207/37207.2.diff/1472691250652784</guid>
      <description>&lt;p&gt;
Only restore query vars if not running core unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37770 (Docs improvements for 4.7) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:48:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37770#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37770#comment:9/1472690923289628</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38490" title="Taxonomy: Correct the function description for ..."&gt;38490&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Correct the function description for &lt;code&gt;wp_ajax_add_link_category()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38490]: Taxonomy: Correct the function description for ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38490</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38490/1472690922811598</guid>
      <description>&lt;p&gt;
Taxonomy: Correct the function description for &lt;code&gt;wp_ajax_add_link_category()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #14162,​37770 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14162%2C37770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14162%2C37770/1472690385314564</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38489" title="Taxonomy: Update various docs for parameters which are now `WP_Term` ..."&gt;38489&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Update various docs for parameters which are now &lt;code&gt;WP_Term&lt;/code&gt; objects.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14162" title="#14162: task (blessed): Introduce WP_Term class (closed: fixed)"&gt;#14162&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38489]: Taxonomy: Update various docs for parameters which are now `WP_Term` ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38489</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38489/1472690384836266</guid>
      <description>&lt;p&gt;
Taxonomy: Update various docs for parameters which are now &lt;code&gt;WP_Term&lt;/code&gt; objects.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14162" title="#14162: task (blessed): Introduce WP_Term class (closed: fixed)"&gt;#14162&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) reopened</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:11/1472690257364431</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38486" title="Template: In `get_the_archive_description()`, add support for author ..."&gt;[38486]&lt;/a&gt; sets &lt;code&gt;$description&lt;/code&gt; but doesn't use it. Patch attached.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>37259.2.diff attached to Ticket #37259</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37259/37259.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37259/37259.2.diff/1472690078209612</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37880 (External Plugins On TeenyMCE) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37880#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37880#comment:3/1472690037169077</guid>
      <description>wontfix: &lt;p&gt;
As @afercia said above, this is a minimal configuration for use in places that require only a minimal editing capabilities. It was intended for use in Press This but is not used in core any more.
&lt;/p&gt;
&lt;p&gt;
In that terms don't think we should be adding any more filters to it. If you really need to, you can access all the TinyMCE options form the &lt;code&gt;teeny_mce_before_init&lt;/code&gt; filter, including adding of external plugins.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37901 (Multisite admin has duplicate HTML id's for ab-awaiting-mod) created</title>
      
        <dc:creator>drtonyb</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37901/1472689984199881</guid>
      <description>&lt;p&gt;
In a multisite installation, the admin bar contains duplicate HTML element id attribute's for span elements with id="ab-awaiting-mod". Fails HTML validation.
&lt;/p&gt;
&lt;p&gt;
This is associated with site items in the My Sites menu and the Manage Comments sub-menu item on each site.
&lt;/p&gt;
&lt;p&gt;
The problem is located in the file wp-includes/admin-bar.php within the function wp_admin_bar_comments_menu() on line 699 where a span element is assigned the same id attribute, "ab-waiting-mod", for each site in the multisite's My Sites menu.
&lt;/p&gt;
&lt;p&gt;
HTML id attributes must be unique for a page, so either this id is made unique for each site in the My Sites menu (append the site ID or similar) or the id is removed (to me it appears that the id may not be of any use since it doesn't occur anywhere else in the wordpress core).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:79/1472689956263452</guid>
      <description>&lt;p&gt;
Putting aside the creepy eye icon and whatever the calendar icon are (I had no idea until I read "Snapshots" and "Scheduling UI" what they would be, and even now I'm not sure what either of those things means, and in any rate neither should be the focus of this ticket)...
&lt;/p&gt;
&lt;p&gt;
How often are you going to receive that many Customizer errors? This seems like overkill.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also think people assume it's something in WordPress we're not using it for. This is for information, notes - not for personal notifications or comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. Using a bubble like that makes it seem like the user is receiving a notification. "Oh, maybe if I click this I'll see my recent comments on my posts? Oh, nope, that's something I don't understand, let me never click this again." This is the wrong metaphor for this kind of interface, which adds an extra layer of confusion.
&lt;/p&gt;
&lt;p&gt;
I also think that we should be focusing on putting errors within the context of whatever is going wrong. Errors are more helpful when displayed inline with whatever feature caused the error. If it's a feature-independent error, I can see displaying it at the top of the Customizer, like in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35210#comment:35" title="Comment 35"&gt;35&lt;/a&gt;, but we should be striving to bring clarity to errors and providing suggestions to fix those errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37464 (Last changed helper function) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:31:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37464#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37464#comment:4/1472689886143598</guid>
      <description>&lt;p&gt;
The fact that the incrementor is tied to the "last change" seems like an implementation detail that shouldn't matter to people building cache keys. The important fact is that it's an incrementor. What do people think about &lt;code&gt;wp_get_cache_incrementor()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35614 (Cannot check capabilities on single taxonomy terms) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35614#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35614#comment:6/1472689813918876</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35614/35614.patch" title="Attachment '35614.patch' in Ticket #35614"&gt;35614.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35614/35614.patch" title="Download"&gt;​&lt;/a&gt; is a first pass at this. Needs a bunch of tests and a bunch of testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35614.patch attached to Ticket #35614</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:29:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35614/35614.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35614/35614.patch/1472689780176003</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37207 (Multiple unit tests for add_rewrite_endpoint lose custom endpoints) updated</title>
      
        <dc:creator>mboynes</dc:creator>

      <pubDate>Thu, 01 Sep 2016 00:28:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37207#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37207#comment:5/1472689711005528</guid>
      <description>&lt;p&gt;
@boonebgorges that approach makes sense to me. I'll update the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>