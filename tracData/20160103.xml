<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>35049.4.diff attached to Ticket #35049</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 23:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35049/35049.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35049/35049.4.diff/1451865377200341</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35049 (Remove title attributes: the Dashboard) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 23:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35049#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35049#comment:14/1451864112048727</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ocean90 thanks. Apparently, I've missed &lt;em&gt;just a few&lt;/em&gt; details. Patch refreshed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35293 (Emoji Regex in wp_encode_emoji() is wildly inaccurate) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 23:33:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35293#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35293#comment:1/1451864011473073</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_encode_emoji()&lt;/code&gt; should be all possible emoji (when they're encoded as an HTML entity for storing in a &lt;code&gt;utf8&lt;/code&gt; database),  &lt;code&gt;wp_staticize_emoji()&lt;/code&gt; should match the twemoji regex.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29795 (Set JPEG quality for individual image_size) updated</title>
      
        <dc:creator>Drivingralle</dc:creator>

      <pubDate>Sun, 03 Jan 2016 23:10:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29795#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29795#comment:6/1451862643183945</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35147 (unregister_sidebar function of the comment document) updated</title>
      
        <dc:creator>tmatsuur</dc:creator>

      <pubDate>Sun, 03 Jan 2016 23:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35147#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35147#comment:2/1451862321701079</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="missing ticket" title="ticket comment does not exist"&gt;welcher&lt;/a&gt;:
Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35273 (Menus Screen Options: various fixes for the Menus Screen and the ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:51:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35273#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35273#comment:2/1451861497552106</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34988 (Screen Options on taxonomy edit screen) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:49:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34988#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34988#comment:13/1451861378070234</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35049 (Remove title attributes: the Dashboard) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:47:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35049#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35049#comment:13/1451861228661955</guid>
      <description>&lt;p&gt;
Feedback on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35049/35049.3.diff" title="Attachment '35049.3.diff' in Ticket #35049"&gt;35049.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35049/35049.3.diff" title="Download"&gt;â€‹&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;src/wp-admin/includes/dashboard.php
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$aria_label = sprintf( _nx( '%s comment in moderation', '%s comments in moderation', $num_comm-&amp;gt;moderated, 'comments' ), $moderated_comments_count_i18n );&lt;/code&gt; needs its own translator comment
&lt;/li&gt;&lt;li&gt;The change to &lt;code&gt;privacy_on_link_title&lt;/code&gt; filter looks good. It was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14237" title="privacy_on_link_title and privacy_on_link_text filters to allow ..."&gt;[14237]&lt;/a&gt;. To be sure you could check some of the privacy plugins.
&lt;/li&gt;&lt;li&gt;Translator comment "%s: draft title." should be "%s: post title" (No periods needed)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_( 'View this comment' )&lt;/code&gt; should be &lt;code&gt;esc_attr__( 'View this comment' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;sprintf( 'Edit &amp;amp;#8220;%s&amp;amp;#8221;', $draft_or_post_title )&lt;/code&gt; is missing a gettext call, the whole string needs to be escaped for attributes
&lt;/li&gt;&lt;li&gt;&lt;code&gt;aria-label="' . sprintf( __( 'Install %s' ), esc_attr( $raw_title ) ) . '"&amp;gt;&lt;/code&gt;: The whole string should be &lt;code&gt;esc_attr&lt;/code&gt;'ed
&lt;/li&gt;&lt;li&gt;&lt;code&gt;'&amp;lt;a href="%1$s"&amp;gt;%2$s &amp;lt;span class="screen-reader-text"&amp;gt;(%3$s)&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;',&lt;/code&gt; doesn't need a translators comment
&lt;/li&gt;&lt;li&gt;&lt;code&gt;'&amp;lt;a href="%1$s" class="musublink"&amp;gt;%2$s &amp;lt;span class="screen-reader-text"&amp;gt;(%3$s)&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;',&lt;/code&gt; doesn't need a translators comment
&lt;/li&gt;&lt;li&gt;&lt;code&gt;__( 'Dismiss the browser warning panel' )&lt;/code&gt; should be &lt;code&gt;esc_attr__( 'Dismiss the browser warning panel' )&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;src/wp-admin/index.php
&lt;ul&gt;&lt;li&gt;&lt;code&gt;_e( 'Dismiss the welcome panel' );&lt;/code&gt; should be &lt;code&gt;esc_attr_e( 'Dismiss the welcome panel' );&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30787 (Shrinkwrap NPM dependencies) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30787#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30787#comment:20/1451860659931553</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@nacin Can you confirm that the build server is able to do it's thing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30787 (Shrinkwrap NPM dependencies) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:36:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30787#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30787#comment:19/1451860604999489</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36165" title="Add npm-shrinkwrap.json for 4.4
By shrinkwraping our dependencies, ..."&gt;36165&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add npm-shrinkwrap.json for 4.4&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By shrinkwraping our dependencies, the same versions of everything will be installed no matter what rules the dependency package.json has specificed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30787" title="#30787: enhancement: Shrinkwrap NPM dependencies (closed: fixed)"&gt;#30787&lt;/a&gt;&lt;br /&gt;
props nacin, ocean90, netweb&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [36165]: Add npm-shrinkwrap.json for 4.4  By shrinkwraping our dependencies, ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36165</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36165/1451860603933921</guid>
      <description>&lt;p&gt;
Add npm-shrinkwrap.json for 4.4
&lt;/p&gt;
&lt;p&gt;
By shrinkwraping our dependencies, the same versions of everything will be installed no matter what rules the dependency package.json has specificed.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30787" title="#30787: enhancement: Shrinkwrap NPM dependencies (closed: fixed)"&gt;#30787&lt;/a&gt;
props nacin, ocean90, netweb
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26396 (Implement a generic clearfix) updated</title>
      
        <dc:creator>michaelarestad</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:29:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26396#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26396#comment:9/1451860154526075</guid>
      <description>&lt;p&gt;
@afercia You know me so well. I agree that &lt;code&gt;.wp-clearfix&lt;/code&gt; is an ideal class name. Once in place, we could remove the need for &lt;code&gt;.nav-tab-wrapper&lt;/code&gt; and any other classes using the rules for a clearfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34756 (Accessibility improvements for Posts Quick Edit and Bulk Edit) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34756#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34756#comment:3/1451859832364858</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30787 (Shrinkwrap NPM dependencies) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30787#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30787#comment:18/1451859787921000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30787/npm-shrinkwrap.json" title="Attachment 'npm-shrinkwrap.json' in Ticket #30787"&gt;npm-shrinkwrap.json&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30787/npm-shrinkwrap.json" title="Download"&gt;â€‹&lt;/a&gt; with node v5.3.0 and npm 3.3.12. &lt;code&gt;npm install&lt;/code&gt; ran without any issues. Same for &lt;code&gt;grunt build&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When comparing the build files of wp-admin and wp-includes with current core.svn I have one changed file: &lt;code&gt;wp-admin/js/customize-controls.min.js&lt;/code&gt;. Diff: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30787/30787.diff.png" title="Attachment '30787.diff.png' in Ticket #30787"&gt;30787.diff.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30787/30787.diff.png" title="Download"&gt;â€‹&lt;/a&gt;
But I get this for trunk too, so it's unrelated to the shrinkwrap file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35101 (image_default_link_type option not being respected) updated</title>
      
        <dc:creator>wetapplemedia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:15:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35101#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35101#comment:13/1451859314646516</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35101#comment:12" title="Comment 12"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The related changeset is &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33729" title="Media:
When inserting an image into a post, the values in ..."&gt;[33729]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I agree with @azaozz. A user should be able to override a default/initial value, which in this case is provided by the &lt;code&gt;image_default_*&lt;/code&gt; options. That's in line with the default category or default header color/image handling.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I guess the question is, then...  who is the user? The one who downloads, installs, and expects their website/theme installation to run as they define? Or, the visitor or editor of that website?
&lt;/p&gt;
&lt;p&gt;
I vote that the webmaster is the "user" and therefore the image defaults overrides set by my default theme should override any visitor or editor's choices on initial load of edit screens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30787.diff.png attached to Ticket #30787</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:14:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30787/30787.diff.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30787/30787.diff.png/1451859241427644</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35101 (image_default_link_type option not being respected) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Jan 2016 22:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35101#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35101#comment:12/1451858481276534</guid>
      <description>&lt;p&gt;
The related changeset is &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33729" title="Media:
When inserting an image into a post, the values in ..."&gt;[33729]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I agree with @azaozz. A user should be able to override a default/initial value, which in this case is provided by the &lt;code&gt;image_default_*&lt;/code&gt; options. That's in line with the default category or default header color/image handling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34058 (Proposal: wp_get_archives_object() function) updated</title>
      
        <dc:creator>davetgreen</dc:creator>

      <pubDate>Sun, 03 Jan 2016 21:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34058#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34058#comment:7/1451854928131783</guid>
      <description>&lt;p&gt;
Apologies for the delay in following up!
&lt;/p&gt;
&lt;p&gt;
@boonebgorges @pathartl  I think whilst my need for an archives object came about as a result of working with the REST API, I don't think we should be specifically catering for the RAPI itself. As long as the resulting object can be consumed via either PHP in the theme or via the RAPI without &lt;strong&gt;too much&lt;/strong&gt; hassle then I think we should be ok.
&lt;/p&gt;
&lt;p&gt;
So just to summarise, we're looking at creating a new function called something along the lines of &lt;code&gt;wp_get_archives_object&lt;/code&gt; that returns an object containing a hierarchical array of objects containing the properties I mentioned earlier in the thread. The function also needs to have a $flat parameter that switches the output from hierarchical to flat.
&lt;/p&gt;
&lt;p&gt;
Does that sound like a decent foundation for a patch moving forward? If so, I'd love to give this a shot this month.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>dossy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 21:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:33/1451854837021888</guid>
      <description>&lt;p&gt;
@nacin - Sure, but as I understand it, this bug was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt;, so reverting that "fixes" this bug.  Really, we should re-open &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt; as that's no longer fixed after reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Do you still want me to create another bug?  There's also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25399" title="#25399: defect (bug): XML-RPC and wp-mail.php struggle with timezone offsets (new)"&gt;#25399&lt;/a&gt;, which I actually suspect my improved &lt;code&gt;iso8601_to_datetime()&lt;/code&gt;will also fix, but I need to figure out what are appropriate unit tests to demonstrate the bugs that are relevant for that ticket based on the discussion from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20328" title="#20328: defect (bug): get_date_from_gmt assumes current gmt_offset is appropriate (closed: fixed)"&gt;#20328&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25399 (XML-RPC and wp-mail.php struggle with timezone offsets) updated</title>
      
        <dc:creator>dossy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 21:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25399#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25399#comment:2/1451854808222141</guid>
      <description>&lt;p&gt;
See also: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35053" title="#35053: defect (bug): XML-RPC when post with date_created_gmt, its post_date will gmt date ... (closed: fixed)"&gt;#35053&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30787 (Shrinkwrap NPM dependencies) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 20:10:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30787#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30787#comment:17/1451851842191572</guid>
      <description>&lt;p&gt;
Okay, I've generated the following &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; using the build server. Also note the build server currently runs node 0.10.25 and npm 1.3.24. Both can change upon request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>npm-shrinkwrap.json attached to Ticket #30787</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 20:10:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30787/npm-shrinkwrap.json</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30787/npm-shrinkwrap.json/1451851810356907</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 19:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:32/1451850639935787</guid>
      <description>&lt;p&gt;
@dossy Want to spin work here off into a new ticket, so we can close this one as fixed for 4.4.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #30429,â€‹35053 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 19:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30429%2C35053</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30429%2C35053/1451850574929379</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36164" title="XML-RPC: Revert [34681] as it broke date handling.
Merges [36163] to ..."&gt;36164&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
XML-RPC: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt; as it broke date handling.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36163" title="XML-RPC: Revert [34681] as it broke date handling.
props dossy, hnle, ..."&gt;[36163]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props dossy, hnle, redsweater.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35053" title="#35053: defect (bug): XML-RPC when post with date_created_gmt, its post_date will gmt date ... (closed: fixed)"&gt;#35053&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt; (original ticket).&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [36164]: XML-RPC: Revert [34681] as it broke date handling.  Merges [36163] to ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 19:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36164</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36164/1451850574417279</guid>
      <description>&lt;p&gt;
XML-RPC: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt; as it broke date handling.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36163" title="XML-RPC: Revert [34681] as it broke date handling.
props dossy, hnle, ..."&gt;[36163]&lt;/a&gt; to the 4.4 branch.
&lt;/p&gt;
&lt;p&gt;
props dossy, hnle, redsweater.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35053" title="#35053: defect (bug): XML-RPC when post with date_created_gmt, its post_date will gmt date ... (closed: fixed)"&gt;#35053&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt; (original ticket).
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #30429,â€‹35053 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 19:48:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30429%2C35053</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30429%2C35053/1451850488337243</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36163" title="XML-RPC: Revert [34681] as it broke date handling.
props dossy, hnle, ..."&gt;36163&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
XML-RPC: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt; as it broke date handling.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props dossy, hnle, redsweater.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35053" title="#35053: defect (bug): XML-RPC when post with date_created_gmt, its post_date will gmt date ... (closed: fixed)"&gt;#35053&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt; (original ticket).&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [36163]: XML-RPC: Revert [34681] as it broke date handling.  props dossy, hnle, ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 19:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36163</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36163/1451850487635760</guid>
      <description>&lt;p&gt;
XML-RPC: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt; as it broke date handling.
&lt;/p&gt;
&lt;p&gt;
props dossy, hnle, redsweater.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35053" title="#35053: defect (bug): XML-RPC when post with date_created_gmt, its post_date will gmt date ... (closed: fixed)"&gt;#35053&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt; (original ticket).
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34945 (HTTPS website with HTTP images) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 03 Jan 2016 18:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34945#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34945#comment:33/1451846404018407</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34945#comment:29" title="Comment 29"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unfortunately, we can't apply this logic directly in &lt;code&gt;wp_uploads_dir()&lt;/code&gt; because that function is used to build URLs for content that is then inserted into posts in the database. Eventually, we should reverse all of this logic so that we default to HTTPS and make exceptions for the functions that insert content in the database, but for 4.4.1 a more conservative approach is probably wise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree that the most conservative fix we can do here is the way to go for 4.4.1. Changing it where it only affects RespImg attributes seems the safest here, with expanding to a general remedy in 4.5. With that reasoning, &lt;code&gt;_wp_upload_dir_baseurl()&lt;/code&gt; looks like the right choice here.
&lt;/p&gt;
&lt;p&gt;
I'd like to see this go out in 4.4.1, since we're talking about a regression in image display for front-end user content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:58:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:29/1451843936414494</guid>
      <description>&lt;p&gt;
I am going to defer to anyone who actually still uses XML-RPC. A lot of these methods didn't/still don't have exhaustive unit tests, so I think we should do whatever causes the least amount of harm. If we revert, let's also keep this ticket open, fix the underlying issues, and fill out the unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>dossy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:28/1451843638578131</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35053#comment:27" title="Comment 27"&gt;nacin&lt;/a&gt;:
[...]
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This actually isn't necessary. You're right that &lt;code&gt;tearDown()&lt;/code&gt; is normally the correct approach, but our own &lt;code&gt;WP_UnitTestCase&lt;/code&gt; rolls back DB writes as well as the local object cache, so you don't need to restore option values.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, that's very cool.  I just assumed that since @hnle's &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35053/35053.patch" title="Attachment '35053.patch' in Ticket #35053"&gt;original patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35053/35053.patch" title="Download"&gt;â€‹&lt;/a&gt; stashed and restored the &lt;code&gt;timezone_string&lt;/code&gt; option value that it needed to be done explicitly in each test.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34780 (Updates screen: Plugin and Theme tables improvements) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34780#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34780#comment:3/1451843195963373</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1451843193001729"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28864 (Cannot access edit menu options with keyboard inside Image Editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28864#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28864#comment:22/1451842910798896</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1451842908000309"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26396 (Implement a generic clearfix) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26396#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26396#comment:8/1451842910699774</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1451842908000309"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:27/1451842783450012</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for the feedback, @redsweater and @dossy. Marking &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt; for revert.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35053#comment:26" title="Comment 26"&gt;dossy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Oh, now I remember why I used the try/catch pattern in the tests I wrote: I needed to ensure that &lt;code&gt;update_option( 'timezone_string', $tz );&lt;/code&gt; got called &lt;em&gt;after&lt;/em&gt; a failed PHPUnit assertion, to restore the pre-test &lt;code&gt;timezone_string&lt;/code&gt; value, since the tests modify it.
&lt;/p&gt;
&lt;p&gt;
Really, I should have done this inside PHPUnit's &lt;code&gt;setUp()&lt;/code&gt; and &lt;code&gt;tearDown()&lt;/code&gt;.  I've uploaded a fresh patch that improves the tests this way, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35053/35053-3.patch" title="Attachment '35053-3.patch' in Ticket #35053"&gt;35053-3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35053/35053-3.patch" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This actually isn't necessary. You're right that &lt;code&gt;tearDown()&lt;/code&gt; is normally the correct approach, but our own &lt;code&gt;WP_UnitTestCase&lt;/code&gt; rolls back DB writes as well as the local object cache, so you don't need to restore option values.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35049 (Remove title attributes: the Dashboard) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:38:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35049#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35049#comment:12/1451842738450770</guid>
      <description>&lt;p&gt;
Would greatly appreciate feedback on the &lt;code&gt;privacy_on_link_title&lt;/code&gt; filter that shouldn't output anything by default and also the translator comments introduced here. cc @SergeyBiryukov @ocean90 thanks! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30787 (Shrinkwrap NPM dependencies) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:36:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30787#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30787#comment:16/1451842619372448</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35064 (Remove title attributes: options-general.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35064#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35064#comment:7/1451842510965454</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1451842508000307"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28864 (Cannot access edit menu options with keyboard inside Image Editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 17:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28864#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28864#comment:21/1451840725975871</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36162" title="Media: set the image editor spinner on the smallest possible area.
 ..."&gt;[36162]&lt;/a&gt;. Also, some cleanup and improvements.
&lt;/p&gt;
&lt;p&gt;
Worth reminding this ticket focuses only on keyboard accessibility. The image editor would need further improvements, for example audible confirmation messages with &lt;code&gt;wp.a11y.speak()&lt;/code&gt; after image edits complete successfully, etc. Also, the (lack of) responsive view could be improved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28864.8.patch attached to Ticket #28864</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 16:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28864/28864.8.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28864/28864.8.patch/1451840359467458</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35296 (Image editor spinner and high CPU usage) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 16:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35296#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35296#comment:2/1451839728329494</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36162" title="Media: set the image editor spinner on the smallest possible area.
 ..."&gt;36162&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: set the image editor spinner on the smallest possible area.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When using spinners as background images, the re-painted area should be the smallest&lt;br /&gt;
possible one. See similar performance issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31196" title="#31196: enhancement: Loading indicators for the Customizer preview (closed: fixed)"&gt;#31196&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33311" title="#33311: enhancement: TB_window spinner should probably disappear when loading is done (closed: fixed)"&gt;#33311&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33322" title="#33322: defect (bug): Theme Installer: spinner animated GIF and high CPU usage (closed: fixed)"&gt;#33322&lt;/a&gt;, and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34951" title="#34951: defect (bug): Authentication modal dialog spinner should disappear when loading is done (closed: fixed)"&gt;#34951&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35296" title="#35296: defect (bug): Image editor spinner and high CPU usage (closed: fixed)"&gt;#35296&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36162]: Media: set the image editor spinner on the smallest possible area.  ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 16:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36162</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36162/1451839727539754</guid>
      <description>&lt;p&gt;
Media: set the image editor spinner on the smallest possible area.
&lt;/p&gt;
&lt;p&gt;
When using spinners as background images, the re-painted area should be the smallest
possible one. See similar performance issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31196" title="#31196: enhancement: Loading indicators for the Customizer preview (closed: fixed)"&gt;#31196&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33311" title="#33311: enhancement: TB_window spinner should probably disappear when loading is done (closed: fixed)"&gt;#33311&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33322" title="#33322: defect (bug): Theme Installer: spinner animated GIF and high CPU usage (closed: fixed)"&gt;#33322&lt;/a&gt;, and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34951" title="#34951: defect (bug): Authentication modal dialog spinner should disappear when loading is done (closed: fixed)"&gt;#34951&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35296" title="#35296: defect (bug): Image editor spinner and high CPU usage (closed: fixed)"&gt;#35296&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34521 (Unifying permission error messages) updated</title>
      
        <dc:creator>Compute</dc:creator>

      <pubDate>Sun, 03 Jan 2016 16:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34521#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34521#comment:16/1451839686263607</guid>
      <description>&lt;p&gt;
+1 for the work Rami has done here! Hope this idea gets into core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35296 (Image editor spinner and high CPU usage) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 16:40:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35296#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35296#comment:1/1451839223673286</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The proposed patch removes also the semi-transparent layer height calculation made with JavaScript. As far as I see it can be set using just CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35296.patch attached to Ticket #35296</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 16:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35296/35296.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35296/35296.patch/1451839101970806</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35296 (Image editor spinner and high CPU usage) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 16:37:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35296</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35296/1451839050620147</guid>
      <description>&lt;p&gt;
Similar to other spinner performance-related issues, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31196" title="#31196: enhancement: Loading indicators for the Customizer preview (closed: fixed)"&gt;#31196&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33311" title="#33311: enhancement: TB_window spinner should probably disappear when loading is done (closed: fixed)"&gt;#33311&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33322" title="#33322: defect (bug): Theme Installer: spinner animated GIF and high CPU usage (closed: fixed)"&gt;#33322&lt;/a&gt;, and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34951" title="#34951: defect (bug): Authentication modal dialog spinner should disappear when loading is done (closed: fixed)"&gt;#34951&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In the image editor (both in the Media Library and in the Media Modal), when performing an action a semi-transparent layer appears with a spinner set as background.
&lt;/p&gt;
&lt;p&gt;
While on powerful machines with a modern CPU and a dedicated GPU there's just a barely noticeable CPU usage increment, on older machines the spinner set on a so large area, especially when this area is semi-transparent, can make the CPU usage grow significantly and also get stuck at 100%.
&lt;/p&gt;
&lt;p&gt;
Tested on a very old desktop PC with Windows XP and Firefox 43, the time required for a single image "flip" decreases from &lt;strong&gt;minutes&lt;/strong&gt; to about 2 seconds when removing the spinner.
&lt;/p&gt;
&lt;p&gt;
As a best practice, spinners used as backgrounds should always be set on the smallest possible area. In this specific case there's no need to completely remove the spinner when the action completes because it's already in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; that gets hidden with &lt;code&gt;display: none&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See in the screenshot below: before the patch the whole image editor area gets continuously re-painted while after the patch it happens only on the 20x20 pixels spinner area.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/-FbBiJKev6.png"&gt;&lt;img src="https://cldup.com/-FbBiJKev6.png" alt="https://cldup.com/-FbBiJKev6.png" crossorigin="anonymous" title="https://cldup.com/-FbBiJKev6.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/8oh9_9F43G.png"&gt;&lt;img src="https://cldup.com/8oh9_9F43G.png" alt="https://cldup.com/8oh9_9F43G.png" crossorigin="anonymous" title="https://cldup.com/8oh9_9F43G.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35295 (Bug in date time published posts and list) created</title>
      
        <dc:creator>VicHaunter</dc:creator>

      <pubDate>Sun, 03 Jan 2016 16:25:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35295</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35295/1451838340315361</guid>
      <description>&lt;p&gt;
When selected a time zone in wordpress admin &amp;gt; preferences &amp;gt; general.
&lt;/p&gt;
&lt;p&gt;
If you select a timezone by city name the system can't recover right the current date. It shows right in settings, but when you publish a post it get 5 hours difference. If you schedule a post inside this time, say in 2 hours, it publish instantly and show the messange published 3 hours ago in the posts list.
&lt;/p&gt;
&lt;p&gt;
Deactivated all plugins and checked with twenty Sixteen.
&lt;/p&gt;
&lt;p&gt;
If you set time with UTC+1 or your zone and update the post then the time is right.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 15:55:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:5/1451836549477368</guid>
      <description>&lt;p&gt;
Thanks for the quick feedback! It led me to another round of testing.
&lt;/p&gt;
&lt;p&gt;
It's clear that using &lt;code&gt;load_plugin_textdomain()&lt;/code&gt; and &lt;code&gt;load_theme_textdomain()&lt;/code&gt; isn't the solution. I like the idea of caching the list of translation files, so in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34114/34114.2.diff" title="Attachment '34114.2.diff' in Ticket #34114"&gt;34114.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34114/34114.2.diff" title="Download"&gt;â€‹&lt;/a&gt; I added a &lt;code&gt;load_textdomain_just_in_time()&lt;/code&gt; function that does this the first time it's called (using &lt;code&gt;get_available_languages()&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I haven't done any in-depth testing, but this method is definitely faster. Presumably even better than having every plugin call &lt;code&gt;load_plugin_textdomain()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Defining &lt;code&gt;WP_LANG_DIR&lt;/code&gt; as &lt;code&gt;DIR_TESTDATA . '/languages'&lt;/code&gt; would help simplifying and extending the tests. Copying files just feels so wrong. See &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1435764072001069"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.slack.com/archives/core/p1435764072001069&lt;/a&gt; (ping @ocean90)
&lt;/li&gt;&lt;li&gt;Should &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34213" title="#34213: enhancement: Change priority for loading theme/plugin translations (closed: fixed)"&gt;#34213&lt;/a&gt; be a prerequisite?
&lt;/li&gt;&lt;li&gt;What happens when a theme and a plugin have the same textdomain?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34114.2.diff attached to Ticket #34114</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 15:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34114/34114.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34114/34114.2.diff/1451835574795641</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>dossy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 15:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:26/1451835420964829</guid>
      <description>&lt;p&gt;
Oh, now I remember why I used the try/catch pattern in the tests I wrote: I needed to ensure that &lt;code&gt;update_option( 'timezone_string', $tz );&lt;/code&gt; got called &lt;em&gt;after&lt;/em&gt; a failed PHPUnit assertion, to restore the pre-test &lt;code&gt;timezone_string&lt;/code&gt; value, since the tests modify it.
&lt;/p&gt;
&lt;p&gt;
Really, I should have done this inside PHPUnit's &lt;code&gt;setUp()&lt;/code&gt; and &lt;code&gt;tearDown()&lt;/code&gt;.  I've uploaded a fresh patch that improves the tests this way, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35053/35053-3.patch" title="Attachment '35053-3.patch' in Ticket #35053"&gt;35053-3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35053/35053-3.patch" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35053-3.patch attached to Ticket #35053</title>
      
        <dc:creator>dossy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 15:36:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35053/35053-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35053/35053-3.patch/1451835376385269</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>dossy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 15:26:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:25/1451834816892517</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35053#comment:22" title="Comment 22"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] And the patch to make this work is a) not ready (for one, exceptions should absolutely be trapped within &lt;code&gt;iso8601_to_datetime()&lt;/code&gt;),
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, I just realized - I originally wrote the code using the PHP Date/Time object oriented interface, which throws exeptions.  I later changed the code to exclusively use the procedural interface, which returns errors instead of throwing exceptions.  So, my actual implementation of &lt;code&gt;iso8601_to_datetime()&lt;/code&gt; no longer throws exceptions, but I never update the unit tests to reflect this.  I can go ahead and update the tests, if that's your objection ...
&lt;/p&gt;
&lt;p&gt;
(FWIW, &lt;code&gt;get_gmt_from_date()&lt;/code&gt; and &lt;code&gt;get_date_from_gmt()&lt;/code&gt; both use the object oriented interface, c.f. &lt;code&gt;new DateTimeZone(...)&lt;/code&gt;, &lt;code&gt;$datetime-&amp;gt;setTimezone(...)&lt;/code&gt; and &lt;code&gt;$datetime-&amp;gt;format(...)&lt;/code&gt;, all of which could throw exceptions and are not caught.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
b) as it stands, too big and too hairy for a point release.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So, 4.5 then?  In the meantime, revert all the partial attempts to fix date handling in 4.4 which fix one bug and introduce another?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sun, 03 Jan 2016 15:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:24/1451833933378426</guid>
      <description>&lt;p&gt;
@nacin Just to clarify the severity of the regression: since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt;, in my tests, both "local" (dateCreated) and GMT (date_created_gmt) are broken. I still use the local field in MarsEdit, which is where my customers noticed that the time zone information, which could always optionally be supplied, was being ignored.
&lt;/p&gt;
&lt;p&gt;
My first attempt to work around the bug was to see if switching to date_created_gmt would give me a better experience, but of course because of the initial bug described here by @hnle, that path is also not working right.
&lt;/p&gt;
&lt;p&gt;
In short: since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt;, I believe it's impossible to specify a date with useful time zone information through the API.
&lt;/p&gt;
&lt;p&gt;
My feeling is you should revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt; and apply @dossy's valuable efforts towards creating a bona fide fix for both issues in 4.4.2 or a later release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35294 (Modification in phpdoc and unit tests for wp_dropdown_languages()) updated</title>
      
        <dc:creator>realloc</dc:creator>

      <pubDate>Sun, 03 Jan 2016 12:29:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35294#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35294#comment:1/1451824183774794</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35284 (Unit tests for wp_get_pomo_file_data()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Jan 2016 12:28:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35284#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35284#comment:2/1451824111359388</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1435764072001069"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.slack.com/archives/core/p1435764072001069&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35294.patch attached to Ticket #35294</title>
      
        <dc:creator>realloc</dc:creator>

      <pubDate>Sun, 03 Jan 2016 12:28:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35294/35294.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35294/35294.patch/1451824088374659</guid>
      <description>&lt;p&gt;
PhpDoc and unit test for wp_dropdown_languages()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35294 (Modification in phpdoc and unit tests for wp_dropdown_languages()) created</title>
      
        <dc:creator>realloc</dc:creator>

      <pubDate>Sun, 03 Jan 2016 12:25:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35294/1451823938745128</guid>
      <description>&lt;p&gt;
I wrote a unit test for &lt;em&gt;wp_dropdown_languages()&lt;/em&gt;. I added also a filter when this test is running so there will be no call to the API. I changed the php documentation too because this function returns always the generated output even when the param &lt;em&gt;echo&lt;/em&gt; is set to &lt;em&gt;true&lt;/em&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35287 (get_site_url does not accept path parameter) updated</title>
      
        <dc:creator>WebDevDLo</dc:creator>

      <pubDate>Sun, 03 Jan 2016 11:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35287#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35287#comment:4/1451822215164228</guid>
      <description>&lt;p&gt;
Ah, it's the order of parameters. I get it now. What was really throwing me off was how site_url() worked without anything specified, but I see now in @swissspidy's response that blog_id is automatically passed with null in that wrapper function.
&lt;/p&gt;
&lt;p&gt;
Thank you @dd32 and @swissspidy for the detailed answer!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 11:41:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:33/1451821263726223</guid>
      <description>&lt;p&gt;
Actually, I just had another look at the regex, and it's missing a bunch of edge cases. I opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35293" title="#35293: defect (bug): Emoji Regex in wp_encode_emoji() is wildly inaccurate (closed: fixed)"&gt;#35293&lt;/a&gt; to fix it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35293 (Emoji Regex in wp_encode_emoji() is wildly inaccurate) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 11:40:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35293</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35293/1451821246340849</guid>
      <description>&lt;p&gt;
It's just plain wrong, it misses masses of edge cases.
&lt;/p&gt;
&lt;p&gt;
We should figure out how to keep the regex from &lt;code&gt;twemoji.js&lt;/code&gt; in sync, instead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Jan 2016 11:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:32/1451820617481575</guid>
      <description>&lt;p&gt;
Should we clarify this in docs of &lt;code&gt;wp_encode_emoji()&lt;/code&gt;? I was confused by the "Currently, only Unicode 7 emoji are supported." line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 11:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:31/1451820263186886</guid>
      <description>&lt;p&gt;
Nope. That regex covers (rather lazily, admittedly) the entire character space of emoji, rather than just the individual characters supported by twemoji.
&lt;/p&gt;
&lt;p&gt;
There's probably a good argument that we should figure out how to keep the twemoji.js regex in sync with the &lt;code&gt;wp_encode_emoji()&lt;/code&gt; regex.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Jan 2016 11:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:30/1451819669994260</guid>
      <description>&lt;p&gt;
Shouldn't &lt;code&gt;wp_encode_emoji()&lt;/code&gt; be updated as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #22287,â€‹35277 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 03 Jan 2016 11:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=22287%2C35277</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=22287%2C35277/1451819283941739</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22287" title="#22287: defect (bug): Plugin in another plugin folder causes Activate link to be wrong on ... (new)"&gt;#22287&lt;/a&gt;, See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21954" title="#21954: defect (bug): Nested plugins cause activation link error (closed: duplicate)"&gt;#21954&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #34945 (HTTPS website with HTTP images) updated</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Sun, 03 Jan 2016 10:57:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34945#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34945#comment:32/1451818658170450</guid>
      <description>&lt;p&gt;
Hi, is this ticket not related to that one: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33909" title="#33909: defect (bug): The `home` option not equivalent to the WP_HOME constant value in ... (new)"&gt;#33909&lt;/a&gt; ? Where defined &lt;code&gt;WP_HOME&lt;/code&gt; and &lt;code&gt;WP_SITEURL&lt;/code&gt; constants are not used properly to populate the options table?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35277 (Install/Activate issue: The plugin does not have a valid header.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 03 Jan 2016 10:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35277#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35277#comment:1/1451818449077698</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why does the code in the plugin installer KEEP looking for a new plugin header sequence after is has found a valid on in the plugin's root?
On the other hand, the Activate action from the Installed Plugins page seems to use a DIFFERENT algorithm to get the plugin name, and will properly activate the plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Although it isn't really a best practice and not allowed in the plugin directory, multiple plugin files can be bundled in a single directory. For example, foo/bar.php and foo/baz.php can both contain valid plugin headers and can therefore be activated separately.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This report is triggered by the latest version of TGM Plugin Activation (2.5.2), a fairly widely used plugin accessory library. For whatever reason, TGMPA added a valid looking plugin header into its library file which my plugin included in a sub-directory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
TGMPA has had this plugin header for a long time.
&lt;/p&gt;
&lt;p&gt;
Per &lt;a class="ext-link" href="https://wordpress.org/support/topic/the-plugin-does-not-have-a-valid-header-99"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/topic/the-plugin-does-not-have-a-valid-header-99&lt;/a&gt;, you were experiencing this with version 1.3.3 of your &lt;a class="ext-link" href="https://wordpress.org/plugins/show-sliders/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Show Sliders&lt;/a&gt; plugin. Correct?
&lt;/p&gt;
&lt;p&gt;
I just uploaded this version on a local install and didn't experience any issues. Are there any specific steps needed to reproduce?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35187 (Remove title attributes: the terms List Table) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 03 Jan 2016 10:23:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35187#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35187#comment:5/1451816596693178</guid>
      <description>&lt;p&gt;
@joedolson thanks. See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33002" title="#33002: defect (bug): List table: avoid redundant Edit links and reduce noise for screen readers (new)"&gt;#33002&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32254" title="#32254: defect (bug): List Table: avoid adjacent links pointing to the same resource (closed: fixed)"&gt;#32254&lt;/a&gt;. I'd be tempted to remove the link from the item name (see for example the Plugins table) but that would need some discussion I guess :) What about moving "Edit" after the name? Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Name column 2
"sub" (Edit) link
Edit "sub" link | Quick edit "sub" inline button | Delete "sub" button | View "sub" link
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 03 Jan 2016 09:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:4/1451811763052682</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main problem here is we'll double the number of file_exists() checks, as at the time of call, we don't know whether to look in plugins or themes. I think there's a decent way out of this one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My thoughts here is that we should pre-cache the files which we know about for plugins:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Plugins: &lt;code&gt;glob()&lt;/code&gt; &lt;code&gt;languages/plugins/&lt;/code&gt; to find out which files exist once per pageload, never &lt;code&gt;file_exists()&lt;/code&gt; just load directly
&lt;/li&gt;&lt;li&gt;Themes: Can only be one of two, if the textdomain matches STYLESHEET/TEMPLATE then just perform the needed &lt;code&gt;file_exists()&lt;/code&gt; checks it's not really worth optimizing this. It could be optimized to not performing &lt;code&gt;file_exists()&lt;/code&gt; and just attempting to read the file (which should fail just as fast).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31281 (Register JavaScript/Underscore templates using the WP Dependency API) updated</title>
      
        <dc:creator>ChriCo</dc:creator>

      <pubDate>Sun, 03 Jan 2016 08:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31281#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31281#comment:14/1451808468234432</guid>
      <description>&lt;p&gt;
Heyho.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I think this solution can provide some more benefits to the script-/style-management in WordPress. Think about the use case for "above the fold styles" or the inline script/styles for emoji's, or the new WordPress-Embed-Script which is inline too.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;The DOMDocument only works, if we delivery valid HTML and works with UTF-8 encoding. Hm...maybe you don't need the DOMDocument to create inline scripts - see &lt;code&gt;wp_localize_script()&lt;/code&gt; which just echos the script tag.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Some hosting providers are not allowing &lt;code&gt;file_get_contents()&lt;/code&gt; via http, so we have to replace this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_home_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$src&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Another solution could be, to add a new function to load script_templates with some filters - something like &lt;code&gt;get_script_template( ... );&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35153 (Default link target for media files is none) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 07:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35153#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35153#comment:17/1451804793907501</guid>
      <description>&lt;p&gt;
LGTM, @azaozz.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34945 (HTTPS website with HTTP images) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 07:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34945#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34945#comment:31/1451804612319043</guid>
      <description>&lt;p&gt;
Also @boonebgorges...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34945 (HTTPS website with HTTP images) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 07:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34945#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34945#comment:30/1451804595635611</guid>
      <description>&lt;p&gt;
@johnbillion, do you have an opinion here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 07:00:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:23/1451804454009477</guid>
      <description>&lt;p&gt;
@wonderboymusic, any thoughts here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 07:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:22/1451804441540138</guid>
      <description>&lt;p&gt;
Some questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What bug is worse: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt; or &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35053" title="#35053: defect (bug): XML-RPC when post with date_created_gmt, its post_date will gmt date ... (closed: fixed)"&gt;#35053&lt;/a&gt; (this ticket)? It's possible we fixed a major bug and caused a minor one, so a revert may not be worth the tradeoff, but I don't know.
&lt;/li&gt;&lt;li&gt;Is this bug a regression? As in, did it work fine prior to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt;?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This sounds like a revert of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34681" title="XML-RPC: calculate the proper offset for GMT in `wp.newPost`, ..."&gt;[34681]&lt;/a&gt;, assuming it is a regression and it's an equally bad bug â€” local used to be broken, now that's fixed but GMT is broken. I'd rather GMT work, since it's always worked. And the patch to make this work is a) not ready (for one, exceptions should absolutely be trapped within &lt;code&gt;iso8601_to_datetime()&lt;/code&gt;), b) as it stands, too big and too hairy for a point release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34962 (Issues with wp_get_document_title function causing problems with ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 06:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34962#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34962#comment:10/1451804051833167</guid>
      <description>&lt;p&gt;
I mostly follow this logic. The patch looks good.
&lt;/p&gt;
&lt;p&gt;
For the unit test: there's no need to reset the option at the end of the test. This would only run if the test succeeded â€” if the test failed, the reset would happen and then it'd spill over into other tests. The fix normally would be to thus use a &lt;code&gt;tearDown()&lt;/code&gt; method. However, in this case, our &lt;code&gt;WP_UnitTestCase&lt;/code&gt; automatically rolls back database writes as well as resets the internal object cache. So given that, we can just remove that line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30787 (Shrinkwrap NPM dependencies) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 06:42:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30787#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30787#comment:15/1451803375882472</guid>
      <description>&lt;p&gt;
On a fresh &lt;code&gt;npm install&lt;/code&gt;, the output of &lt;code&gt;grunt build&lt;/code&gt; diffs clean on &lt;a class="ext-link" href="https://core.svn.wordpress.org/branches/4.4"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://core.svn.wordpress.org/branches/4.4&lt;/a&gt;. This means that, for the moment, we won't generate churn by doing a fresh &lt;code&gt;npm install&lt;/code&gt; and committing the resulting &lt;code&gt;npm shrinkwrap&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@jorbin, want to commit a shrinkwrap file to branches/4.4 directly? Per our discussion, we should leave it out of trunk for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35292 (Terms: get_terms by name mismatches emoji) created</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 03 Jan 2016 06:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35292</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35292/1451803302156275</guid>
      <description>&lt;p&gt;
When assigning emoji-named terms to a post, it appears the post processing will match some emoji characters incorrectly. So far, it appears it occurs within get_terms.
&lt;/p&gt;
&lt;p&gt;
Steps to duplicate:
Write a post and attempt to add two flag emoji (e.g. Mexico and Germany) as individual tags.
&lt;/p&gt;
&lt;p&gt;
Expected: Both terms are assigned.
&lt;/p&gt;
&lt;p&gt;
Actual: Only one.
&lt;/p&gt;
&lt;p&gt;
Another method: Create two tags of just the two flags, then assign the second one created. The first one created will be assigned instead.
&lt;/p&gt;
&lt;p&gt;
It doesn't happen for all emoji, but I didn't isolate if it by plane, etc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28625 (Enhancement: Add constants to support SSL connections for mysqli) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 05:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28625#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28625#comment:9/1451799710182638</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Other projects generally use PDO, and do their DB config as arrays, instead of constants.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;mysqli_ssl_set()&lt;/code&gt; was added in PHP 5.3 - we probably should add a &lt;code&gt;function_exists()&lt;/code&gt; check, even though it'd really only be a problem if someone has defined &lt;code&gt;WP_USE_EXT_MYSQL&lt;/code&gt; as &lt;code&gt;false&lt;/code&gt; in PHP 5.2. (And maybe fail to connect in this case, so that we're not silently using a non-SSL connection.)
&lt;/p&gt;
&lt;p&gt;
For the concern about new wpdb instances, perhaps we need to add an &lt;code&gt;$options&lt;/code&gt; parameter to &lt;code&gt;wpdb::__construct()&lt;/code&gt;? &lt;code&gt;$options['ssl']&lt;/code&gt; would be an array of the SSL options (if your global config doesn't do SSL, or you want different SSL options), or &lt;code&gt;false&lt;/code&gt; to prevent an SSL connection. Undefined uses the global config.
&lt;/p&gt;
&lt;p&gt;
For the actual patch itself, I'm not wild about adding a pile of constants, but that's kind of the best option that keeps with the WordPress-y way. I can't decide if the &lt;code&gt;foreach&lt;/code&gt; / &lt;code&gt;call_user_func_array&lt;/code&gt; combination is too clever, or just the right amount of clever. It'd need to be reworked to work with &lt;code&gt;$options&lt;/code&gt;, anyway. Also, it needs unit tests.
&lt;/p&gt;
&lt;p&gt;
With all that said, I find myself being in favour of adding this functionality to Core, instead of recommending a drop-in. It's useful, it increases security, and I don't think it's possible to render your site unrecoverably broken (worst case: remove the constants from &lt;code&gt;wp-config.php&lt;/code&gt;) with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 04:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:29/1451796138502937</guid>
      <description>&lt;p&gt;
Leaving this ticket open, pending feedback from Systems as to whether we can purge the CDN or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 04:41:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:28/1451796071946415</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36161" title="Emoji: Add Emoji Diversity support, and fall back to twemoji if the ..."&gt;36161&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Emoji: Add Emoji Diversity support, and fall back to twemoji if the browser doesn't support diverse emoji.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36126" title="Emoji: Update emoji support to Unicode 8.0, including the Diversity ..."&gt;[36126]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36160" title="Emoji: Add a test to the emoji loader, to see if the browser supports ..."&gt;[36160]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33592" title="#33592: task (blessed): Unicode 8.0 Emoji (closed: fixed)"&gt;#33592&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [36161]: Emoji: Add Emoji Diversity support, and fall back to twemoji if the ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 04:41:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36161</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36161/1451796071321740</guid>
      <description>&lt;p&gt;
Emoji: Add Emoji Diversity support, and fall back to twemoji if the browser doesn't support diverse emoji.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36126" title="Emoji: Update emoji support to Unicode 8.0, including the Diversity ..."&gt;[36126]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36160" title="Emoji: Add a test to the emoji loader, to see if the browser supports ..."&gt;[36160]&lt;/a&gt; to the 4.4 branch.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33592" title="#33592: task (blessed): Unicode 8.0 Emoji (closed: fixed)"&gt;#33592&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 04:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:27/1451795560816808</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Chrome should just be replacing everything - they still haven't fixed rendering colour emoji when the &lt;code&gt;font-weight&lt;/code&gt; is greater than 500.
&lt;/p&gt;
&lt;p&gt;
I wasn't able to reproduce the hot dog emoji being saved as an &lt;code&gt;img&lt;/code&gt; tag.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27770 (Can't save a widget that uses a namespace) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 04:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27770#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27770#comment:3/1451795532292845</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sounds like a good thing to fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 04:28:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:3/1451795315238536</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The first time core encounters a localised string with a textdomain that has not already been loaded, it should look for a corresponding MO file first in the WP_LANG_DIR/plugins directory and then in the WP_LANG_DIR/themes directory, and load it if it's found.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very smart approach, @johnbillion. And @swissspidy, a very elegant patch with some solid tests.
&lt;/p&gt;
&lt;p&gt;
The main problem here is we'll double the number of &lt;code&gt;file_exists()&lt;/code&gt; checks, as at the time of call, we don't know whether to look in &lt;code&gt;plugins&lt;/code&gt; or &lt;code&gt;themes&lt;/code&gt;. I think there's a decent way out of this one.
&lt;/p&gt;
&lt;p&gt;
There's only ever going to be one or two themes, so maybe we can do that one a bit differently â€” perhaps by always calling it and eating the 2 or 4 &lt;code&gt;file_exists()&lt;/code&gt; checks â€” and then using &lt;code&gt;load_plugin_textdomain()&lt;/code&gt; inside &lt;code&gt;get_translations_for_domain()&lt;/code&gt;. Thus &lt;code&gt;2p + 2t + 2c&lt;/code&gt; (where c is child theme and can be 0), rather than &lt;code&gt;4(p + t + c)&lt;/code&gt;. That's still a change from what we have now, which is &lt;code&gt;2( p + t + c)&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
That's still not great, as there's a good chance a plugin is internationalized but not translated, which means we're burning &lt;code&gt;file_exists()&lt;/code&gt; checks on those sites. This includes en_US sites, by the way.
&lt;/p&gt;
&lt;p&gt;
The underlying &lt;code&gt;stat()&lt;/code&gt; call isn't going to be terribly expensive in most situations, but we should still seek to avoid unnecessary calls with whatever is reasonable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 04:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:26/1451795153437344</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36160" title="Emoji: Add a test to the emoji loader, to see if the browser supports ..."&gt;36160&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Emoji: Add a test to the emoji loader, to see if the browser supports emoji diversity. If it doesn't, fall back to twemoji.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33592" title="#33592: task (blessed): Unicode 8.0 Emoji (closed: fixed)"&gt;#33592&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [36160]: Emoji: Add a test to the emoji loader, to see if the browser supports ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 03 Jan 2016 04:25:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36160/1451795152698016</guid>
      <description>&lt;p&gt;
Emoji: Add a test to the emoji loader, to see if the browser supports emoji diversity. If it doesn't, fall back to twemoji.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33592" title="#33592: task (blessed): Unicode 8.0 Emoji (closed: fixed)"&gt;#33592&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35291 (filters for responsive image srcset and sizes attributes) updated</title>
      
        <dc:creator>Hube2</dc:creator>

      <pubDate>Sun, 03 Jan 2016 03:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35291#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35291#comment:2/1451791741441226</guid>
      <description>&lt;p&gt;
Has WP started supporting some type of &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element editor or some other way to insert this element into the content that I've somehow missed?
&lt;/p&gt;
&lt;p&gt;
If not then my problem is simple, my clients are not capable of adding the html needed. This is great for those of us that do code but I build sites for people with no coding skills and no desire to learn these skills, they just want to put an image into the content. I have built custom fields that allow them to select alternate images while they are adding the image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31281 (Register JavaScript/Underscore templates using the WP Dependency API) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 03 Jan 2016 03:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31281#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31281#comment:13/1451790233015775</guid>
      <description>&lt;ol&gt;&lt;li&gt;Does it make sense to have something like this in core, given the filesystem hit?
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;I do not believe we can reliably use DOMDocument in core.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35291 (filters for responsive image srcset and sizes attributes) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35291#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35291#comment:1/1451789395933968</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @Hube2,
&lt;/p&gt;
&lt;p&gt;
Thanks for the request. I may be misunderstanding, but it sounds like you're trying to implement the &lt;a class="ext-link" href="https://usecases.responsiveimages.org/#art-direction"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;art direction use case&lt;/a&gt;, which is where you would use different crops and/or aspect ratios at specific breakpoints, rather than different sizes of the same image. Is that correct?
&lt;/p&gt;
&lt;p&gt;
If so, then &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; attributes on an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element aren't really the right tool for the job. Instead, you'll want to use the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element, where you can specify a set of sources at different breakpoints.
&lt;/p&gt;
&lt;p&gt;
It I'm misunderstanding, could you give an example of the markup you'd like to be able to produce?
&lt;/p&gt;
&lt;p&gt;
Thanks,
Joe
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35211 (excluded_terms filter in `get_adjacent_link()` doesn't do anything) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35211#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35211#comment:4/1451788999420217</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36159" title="Fix incorrect `@covers` annotation in `get_adjacent_post()` tests.
 ..."&gt;36159&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Fix incorrect &lt;code&gt;@covers&lt;/code&gt; annotation in &lt;code&gt;get_adjacent_post()&lt;/code&gt; tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36077" title="Move `get_adjacent_post()` tests to their own file.
See #35211.
"&gt;[36077]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props netweb.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35211" title="#35211: defect (bug): excluded_terms filter in `get_adjacent_link()` doesn't do anything (closed: fixed)"&gt;#35211&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36159]: Fix incorrect `@covers` annotation in `get_adjacent_post()` tests.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36159</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36159/1451788998669691</guid>
      <description>&lt;p&gt;
Fix incorrect &lt;code&gt;@covers&lt;/code&gt; annotation in &lt;code&gt;get_adjacent_post()&lt;/code&gt; tests.
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36077" title="Move `get_adjacent_post()` tests to their own file.
See #35211.
"&gt;[36077]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props netweb.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35211" title="#35211: defect (bug): excluded_terms filter in `get_adjacent_link()` doesn't do anything (closed: fixed)"&gt;#35211&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #34723,â€‹35265 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34723%2C35265</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34723%2C35265/1451788896019627</guid>
      <description>&lt;p&gt;
I'm pretty sure this is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34723" title="#34723: defect (bug): Warning in get_the_terms() because of non-array (closed: fixed)"&gt;#34723&lt;/a&gt;, and should be fixed by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35850" title="Improve handling for `WP_Error` objects in `get_the_terms()`.
 ..."&gt;[35850]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #8071,â€‹35175 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=8071%2C35175</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=8071%2C35175/1451786764721530</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36158" title="Ensure that non-default pagination values work in ..."&gt;36158&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Ensure that non-default pagination values work in &lt;code&gt;wp_list_comments()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prior to 4.4, it was possible to pass 'page' and 'per_page' values to&lt;br /&gt;
&lt;code&gt;wp_list_comments()&lt;/code&gt; that do not match the corresponding global query vars.&lt;br /&gt;
This ability was lost in 4.4 with the refactor of how &lt;code&gt;comments_template()&lt;/code&gt;&lt;br /&gt;
queries for comments; when the main comment query started fetching only the&lt;br /&gt;
comments that ought to appear on a page, instead of all of a post's comments,&lt;br /&gt;
it became impossible for the comment walker to select comments corresponding to&lt;br /&gt;
custom pagination parameters. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8071" title="#8071: task (blessed): Refrain from querying all the comments on a post when paged (closed: fixed)"&gt;#8071&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We restore the previous behavior by (a) detecting when a 'page' or 'per_page'&lt;br /&gt;
parameter has been passed to &lt;code&gt;wp_list_comments()&lt;/code&gt; that does not match the&lt;br /&gt;
corresponding query vars (so that the desired comments will not be found in&lt;br /&gt;
&lt;code&gt;$wp_query&lt;/code&gt;), and if so, then (b) querying for all of the post's comments and&lt;br /&gt;
passing them to the comment walker for pagination, as was the case before 4.4.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36157" title="Ensure that non-default pagination values work in ..."&gt;[36157]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, smerriman.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35175" title="#35175: defect (bug): Page parameter no longer works in wp_list_comments (closed: fixed)"&gt;#35175&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [36158]: Ensure that non-default pagination values work in ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36158</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36158/1451786764195343</guid>
      <description>&lt;p&gt;
Ensure that non-default pagination values work in &lt;code&gt;wp_list_comments()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Prior to 4.4, it was possible to pass 'page' and 'per_page' values to
&lt;code&gt;wp_list_comments()&lt;/code&gt; that do not match the corresponding global query vars.
This ability was lost in 4.4 with the refactor of how &lt;code&gt;comments_template()&lt;/code&gt;
queries for comments; when the main comment query started fetching only the
comments that ought to appear on a page, instead of all of a post's comments,
it became impossible for the comment walker to select comments corresponding to
custom pagination parameters. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8071" title="#8071: task (blessed): Refrain from querying all the comments on a post when paged (closed: fixed)"&gt;#8071&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
We restore the previous behavior by (a) detecting when a 'page' or 'per_page'
parameter has been passed to &lt;code&gt;wp_list_comments()&lt;/code&gt; that does not match the
corresponding query vars (so that the desired comments will not be found in
&lt;code&gt;$wp_query&lt;/code&gt;), and if so, then (b) querying for all of the post's comments and
passing them to the comment walker for pagination, as was the case before 4.4.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36157" title="Ensure that non-default pagination values work in ..."&gt;[36157]&lt;/a&gt; to the 4.4 branch.
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, smerriman.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35175" title="#35175: defect (bug): Page parameter no longer works in wp_list_comments (closed: fixed)"&gt;#35175&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35175 (Page parameter no longer works in wp_list_comments) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:04:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35175#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35175#comment:10/1451786655363850</guid>
      <description>&lt;p&gt;
Reopening for 4.4.1.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #8071,â€‹35175 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:03:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=8071%2C35175</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=8071%2C35175/1451786581309113</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36157" title="Ensure that non-default pagination values work in ..."&gt;36157&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Ensure that non-default pagination values work in &lt;code&gt;wp_list_comments()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prior to 4.4, it was possible to pass 'page' and 'per_page' values to&lt;br /&gt;
&lt;code&gt;wp_list_comments()&lt;/code&gt; that do not match the corresponding global query vars.&lt;br /&gt;
This ability was lost in 4.4 with the refactor of how &lt;code&gt;comments_template()&lt;/code&gt;&lt;br /&gt;
queries for comments; when the main comment query started fetching only the&lt;br /&gt;
comments that ought to appear on a page, instead of all of a post's comments,&lt;br /&gt;
it became impossible for the comment walker to select comments corresponding to&lt;br /&gt;
custom pagination parameters. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8071" title="#8071: task (blessed): Refrain from querying all the comments on a post when paged (closed: fixed)"&gt;#8071&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We restore the previous behavior by (a) detecting when a 'page' or 'per_page'&lt;br /&gt;
parameter has been passed to &lt;code&gt;wp_list_comments()&lt;/code&gt; that does not match the&lt;br /&gt;
corresponding query vars (so that the desired comments will not be found in&lt;br /&gt;
&lt;code&gt;$wp_query&lt;/code&gt;), and if so, then (b) querying for all of the post's comments and&lt;br /&gt;
passing them to the comment walker for pagination, as was the case before 4.4.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, smerriman.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35175" title="#35175: defect (bug): Page parameter no longer works in wp_list_comments (closed: fixed)"&gt;#35175&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [36157]: Ensure that non-default pagination values work in ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 03 Jan 2016 02:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36157</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36157/1451786579980889</guid>
      <description>&lt;p&gt;
Ensure that non-default pagination values work in &lt;code&gt;wp_list_comments()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Prior to 4.4, it was possible to pass 'page' and 'per_page' values to
&lt;code&gt;wp_list_comments()&lt;/code&gt; that do not match the corresponding global query vars.
This ability was lost in 4.4 with the refactor of how &lt;code&gt;comments_template()&lt;/code&gt;
queries for comments; when the main comment query started fetching only the
comments that ought to appear on a page, instead of all of a post's comments,
it became impossible for the comment walker to select comments corresponding to
custom pagination parameters. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8071" title="#8071: task (blessed): Refrain from querying all the comments on a post when paged (closed: fixed)"&gt;#8071&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
We restore the previous behavior by (a) detecting when a 'page' or 'per_page'
parameter has been passed to &lt;code&gt;wp_list_comments()&lt;/code&gt; that does not match the
corresponding query vars (so that the desired comments will not be found in
&lt;code&gt;$wp_query&lt;/code&gt;), and if so, then (b) querying for all of the post's comments and
passing them to the comment walker for pagination, as was the case before 4.4.
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, smerriman.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35175" title="#35175: defect (bug): Page parameter no longer works in wp_list_comments (closed: fixed)"&gt;#35175&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35291 (filters for responsive image srcset and sizes attributes) created</title>
      
        <dc:creator>Hube2</dc:creator>

      <pubDate>Sun, 03 Jan 2016 01:46:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35291</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35291/1451785582748968</guid>
      <description>&lt;p&gt;
I think that hooks need to be added to the new responsive image features that allow the filtering of the srcset and the sizes attributes, which as far as I can see there isn't any way to modify what WP creates at any step of the operation.
&lt;/p&gt;
&lt;p&gt;
Why does this need to be added. I have clients that want to be able to specify alternate images. Meaning that for some screen sizes they want to use an image that has been modified and cropped to a different ratio. This allows them to have a short wide image on large screens and a tall narrow image on narrow screens.
&lt;/p&gt;
&lt;p&gt;
Lets look at the facts. If you take an image that is 1200x300 and reduce that image to 300x75, or worse 150x37, that image is going to be pretty useless as far as conveying any information is concerned. At that point the image may as well not be there.
&lt;/p&gt;
&lt;p&gt;
Selecting alternate images that are cropped at different ratios allows the client to add an image that is taller and narrow that conveys the same information and can actually be seen on a narrow screen.
&lt;/p&gt;
&lt;p&gt;
I don't expect WP to make it possible for users to actually do this alternate image selection. This is something that I can and have added to WP it the past.
&lt;/p&gt;
&lt;p&gt;
What I would like is a way to filter the size and srcset attributes so that I can make the needed changes to accomplish what the client wants.
&lt;/p&gt;
&lt;p&gt;
This is not something that I have encountered only once or once in a while, this is requirement that I run into consistently.
&lt;/p&gt;
&lt;p&gt;
As it stands, the only way that I can meet this requirement since WP4.4 is to completely disable all of the filters used by WP to accomplish it and substitute my own, which I would prefer not to do.
&lt;/p&gt;
&lt;p&gt;
Thanks for considering it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18584 (Nav menus need more hooks for extensibility (on admin page &amp; in customizer)) updated</title>
      
        <dc:creator>helgatheviking</dc:creator>

      <pubDate>Sun, 03 Jan 2016 01:00:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18584#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18584#comment:55/1451782816274396</guid>
      <description>&lt;p&gt;
What kind of help do you need to move forward? I know we're supposed to be learning Javascript deeply this year, but I'm not there yet.
&lt;/p&gt;
&lt;p&gt;
Here's a screenshot of what I am doing in the admin:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://imagizer.imageshack.com/img910/6105/dSZwk2.jpg"&gt;&lt;img src="http://imagizer.imageshack.com/img910/6105/dSZwk2.jpg" alt="http://imagizer.imageshack.com/img910/6105/dSZwk2.jpg" crossorigin="anonymous" title="http://imagizer.imageshack.com/img910/6105/dSZwk2.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So in the Customizer I'd like to do a similar thing, adding the first row of radio buttons. And the radio buttons toggling the display of the checkboxes below as they are only needed if the "logged in" radio is selected. The whole thing is saved as 1 post meta field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>helgatheviking</dc:creator>

      <pubDate>Sun, 03 Jan 2016 00:53:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:175</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:175/1451782407825355</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reiterating my thoughts, a significant amount of work would be required to refactor the menus screen in the admin to be properly performant.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Does it have to be completely refactored to be "performant"? Knowing that the primary work is being done in the customizer, couldn't we aim for a patch that was more like "good enough" or "better than what we have"?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The biggest issue that this fixes is unblocking things like the ability to add custom fields to nav menu items; however, that is already unblocked for the customizer UI and can be addressed in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18584" title="#18584: enhancement: Nav menus need more hooks for extensibility (on admin page &amp;amp; in customizer) (new)"&gt;#18584&lt;/a&gt; when those that need said hooks are able to provide input there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't unblocked in the Customizer, unless I'm misinterpreting what you mean by unblocked. Currently the admin is the &lt;em&gt;only&lt;/em&gt; way for users to add post meta to menu items via plugin. So my plugin's UI doesn't work at all in the Customizer. Myself and a few other plugin authors have taken to implementing our own common action hook as a work around for the lack of a core action hook, but users are still at risk for running into the $_POST limit described by this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35287 (get_site_url does not accept path parameter) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 03 Jan 2016 00:25:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35287#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35287#comment:3/1451780715444012</guid>
      <description>invalid: &lt;blockquote class="citation"&gt;
&lt;p&gt;
So, the issue is that first parameter is not defaulted as specified. That's the bug. Does that make sense?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When you call  &lt;code&gt;get_site_url('ajax-random-ad/')&lt;/code&gt; you are specifying the first parameter, so the defaults do not kick in. In order to specify the 2nd parameter, you need to specify the first, so &lt;code&gt;get_site_url( null, '/ajax-random-ad/' );&lt;/code&gt; or as pointed out, use &lt;code&gt;site_url( 'ajax-random-ad/' )&lt;/code&gt; directly instead.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 03 Jan 2016 00:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:174</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:174/1451779594765969</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I was about to suggest that we close this ticket, and then I saw my comment doing just that from 3 months ago.
&lt;/p&gt;
&lt;p&gt;
Reiterating my thoughts, a significant amount of work would be required to refactor the menus screen in the admin to be properly performant. This work has already been done in the context of the customizer, along with a UX redesign, taking thousands of hours and over a year of work. I haven't seen any interest in applying a similar effort here, but that could be done in the future if someone is compelled to do so.
&lt;/p&gt;
&lt;p&gt;
The biggest issue that this fixes is unblocking things like the ability to add custom fields to nav menu items; however, that is already unblocked for the customizer UI and can be addressed in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18584" title="#18584: enhancement: Nav menus need more hooks for extensibility (on admin page &amp;amp; in customizer) (new)"&gt;#18584&lt;/a&gt; when those that need said hooks are able to provide input there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24689.2.diff attached to Ticket #24689</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Sat, 02 Jan 2016 23:53:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24689/24689.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24689/24689.2.diff/1451778797507949</guid>
      <description>&lt;p&gt;
More useful message when admin page doesn't exist
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24689 (Improve error  wp-admin page) updated</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Sat, 02 Jan 2016 23:27:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24689#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24689#comment:7/1451777275311882</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Also need to disambiguate between lack of permissions and lack of admin page, since &lt;code&gt;You do not have sufficient permissions to access this page&lt;/code&gt; will show when accessing any page that doesn't exist and no capability -- besides the capability to make that page exists -- would be sufficient.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35175 (Page parameter no longer works in wp_list_comments) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 02 Jan 2016 22:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35175#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35175#comment:8/1451774131390122</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35290 (Use CSPRNG to generate salt instead of API, if possible.) created</title>
      
        <dc:creator>sarciszewski</dc:creator>

      <pubDate>Sat, 02 Jan 2016 22:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35290</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35290/1451773879385657</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://security.stackexchange.com/questions/61676/why-do-wordpress-installations-retrieve-the-crypto-secrets-remotely-on-installat"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://security.stackexchange.com/questions/61676/why-do-wordpress-installations-retrieve-the-crypto-secrets-remotely-on-installat&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/ced6b063a3b7cb7f7b33d9eafb356881ca1ea199/wp-admin/setup-config.php#L282"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/WordPress/blob/ced6b063a3b7cb7f7b33d9eafb356881ca1ea199/wp-admin/setup-config.php#L282&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since we have &lt;code&gt;random_bytes()&lt;/code&gt; as of WordPress 4.4 (even on PHP 5.2.x), I propose something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;try {
	$chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&amp;amp;*()-_ []{}&amp;lt;&amp;gt;~`+=,.;:/?|';
	$maxl = strlen($chars) - 1;
	for ( $i = 0; $i &amp;lt; 8; $i++ ) {
		$key = '';
		for ( $j = 0; $j &amp;lt; 64; $j++ ) {
			$key .= $chars[random_int(0, $max)];
		}
		$secret_keys[] = $key;
	}
} catch (Exception $ex) {
	$secret_keys = wp_remote_get( 'https://api.wordpress.org/secret-key/1.1/salt/' );
}
&lt;/pre&gt;&lt;p&gt;
Instead of just using &lt;code&gt;wp_generate_password(64, true true)&lt;/code&gt;, this prioritizes the CSPRNG and falls back to the API approach if it's not available (since &lt;code&gt;wp_generate_password()&lt;/code&gt; falls back silently if random_compat throws an &lt;code&gt;Exception&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35101 (image_default_link_type option not being respected) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 02 Jan 2016 22:13:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35101#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35101#comment:11/1451772839705860</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1451772837008113"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35153 (Default link target for media files is none) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 02 Jan 2016 22:10:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35153#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35153#comment:16/1451772631450998</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1451772629008111"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35289 (Docs: Fix phpdoc tags for WP Http methods) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 02 Jan 2016 22:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35289#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35289#comment:1/1451772357250024</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30787 (Shrinkwrap NPM dependencies) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 02 Jan 2016 20:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30787#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30787#comment:14/1451768100277202</guid>
      <description>&lt;p&gt;
When I attempt to build with the modules that @nacin uploaded above, it gives me an error. I have 0.12.6 installed on this box.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Loading "imagemin.js" tasks...ERROR
&amp;gt;&amp;gt; Error: Cannot find module 'clone'
Loading "sass.js" tasks...ERROR
&amp;gt;&amp;gt; Error: The `libsass` binding was not found in /home/jorbin/wp/node_modules/grunt-sass/node_modules/node-sass/vendor/linux-ia32-14/binding.node
&amp;gt;&amp;gt; This usually happens because your node version has changed.
&amp;gt;&amp;gt; Run `npm rebuild node-sass` to build the binding for your current node version.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10377 (Comment fields should have max lengths) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 02 Jan 2016 20:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10377#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10377#comment:26/1451767636630558</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10377#comment:25" title="Comment 25"&gt;rachelbaker&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
10377.4.diff is starting to look good.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;We could add hardcoded attributes like this to the two other comment form inputs.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Thinking this is a must. Having &lt;code&gt;maxlength&lt;/code&gt; on the other &lt;strong&gt;three&lt;/strong&gt; ( Name, Email, Website ) text fields will improve UX if these limits are reached.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Is there a good way to convert characters to bytes?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
If you want to check the byte length of a string, &lt;code&gt;mb_strlen( $string, '8bit' )&lt;/code&gt; should work well. That's the proper way to test it when the "real" mb_strlen() exists. If it doesn't exist, the &lt;a href="https://core.trac.wordpress.org/browser/tags/4.4/src/wp-includes/compat.php#L105"&gt;compat function&lt;/a&gt; will return &lt;code&gt;strlen( $string )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Also this looks like a typo:
&lt;/p&gt;
&lt;pre class="wiki"&gt;} elseif ( is_array( $col_length ) &amp;amp;&amp;amp; isset( $col_length['length'] ) &amp;amp;&amp;amp; (int) $col_length &amp;gt; 0 ) {
&lt;/pre&gt;&lt;p&gt;
should probably be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;} elseif ( is_array( $col_length ) &amp;amp;&amp;amp; isset( $col_length['length'] ) &amp;amp;&amp;amp; intval( $col_length['length'] ) &amp;gt; 0 ) {
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34874 (dbDelta Case Sensitive Key Names Duplicates Indexes) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 02 Jan 2016 19:41:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34874#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34874#comment:1/1451763688215962</guid>
      <description>&lt;p&gt;
I can confirm that this bug is still present in trunk.
&lt;/p&gt;
&lt;p&gt;
From the &lt;a class="ext-link" href="https://dev.mysql.com/doc/refman/5.6/en/identifier-case-sensitivity.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;MySQL reference&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Column, index, stored routine, and event names are not case sensitive on any platform, nor are column aliases.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So this ticket is correct that we shouldn't be treating indexes as if they are case sensitive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33592 (Unicode 8.0 Emoji) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 02 Jan 2016 16:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33592#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33592#comment:25/1451752909821838</guid>
      <description>&lt;p&gt;
Quick drive-by report while still on vacation: On Trunk, at least some native emoji is being replaced. OS X on latest stable Chrome. Example "Snowman Without Snow" (U+26C4) is being rendered natively, then replaced by Twiemoji on my prod site ( &lt;a class="ext-link" href="https://kraft.im/2016/01/snow-day/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://kraft.im/2016/01/snow-day/&lt;/a&gt; ).
&lt;/p&gt;
&lt;p&gt;
In another post, I can't save the hot dog emoji without it being saved in the db as an img tag. I can debug these a bit more (and spin off into a new ticket if needbe) next week when I'm back in the saddle.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35287 (get_site_url does not accept path parameter) reopened</title>
      
        <dc:creator>WebDevDLo</dc:creator>

      <pubDate>Sat, 02 Jan 2016 16:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35287#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35287#comment:2/1451751007183418</guid>
      <description>&lt;p&gt;
Hi @swissspidy -
&lt;/p&gt;
&lt;p&gt;
Thank you for the prompt reply! That isn't quite the answer. The &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_site_url/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;documentation for get_site_url()&lt;/a&gt; says the following about the $blog_id parameter. It is optional and defaults to null (current site), see below.
&lt;/p&gt;
&lt;p&gt;
Parameters
&lt;/p&gt;
&lt;p&gt;
$blog_id
(int) (Optional) Blog ID. Default null (current site).
Default value: null
&lt;/p&gt;
&lt;p&gt;
So, the issue is that first parameter is not defaulted as specified. That's the bug. Does that make sense?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>35289.patch attached to Ticket #35289</title>
      
        <dc:creator>Frozzare</dc:creator>

      <pubDate>Sat, 02 Jan 2016 15:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35289/35289.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35289/35289.patch/1451750265171626</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35289 (Docs: Fix phpdoc tags for WP Http methods) created</title>
      
        <dc:creator>Frozzare</dc:creator>

      <pubDate>Sat, 02 Jan 2016 15:57:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35289</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35289/1451750228932313</guid>
      <description>&lt;p&gt;
I notice that &lt;code&gt;_get_first_available_transport&lt;/code&gt; method in &lt;code&gt;WP_Http&lt;/code&gt; has the wrong access value, it's used public but the access tag says private and that &lt;code&gt;_dispatch_request&lt;/code&gt; method has static tag but is not used as a static method.
&lt;/p&gt;
&lt;p&gt;
This patch will change the access value for &lt;code&gt;_get_first_available_transport&lt;/code&gt; and remove static from &lt;code&gt;_dispatch_request&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35057 (bug in new default_hidden_columns filter) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 02 Jan 2016 15:15:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35057#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35057#comment:12/1451747753917199</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36156" title="Docs: Remove indentation from the `hidden_columns` changelog entry.
 ..."&gt;36156&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Remove indentation from the &lt;code&gt;hidden_columns&lt;/code&gt; changelog entry.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36154" title="List Tables: When a user has hidden all columns, do not override that ..."&gt;[36154]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35057" title="#35057: defect (bug): bug in new default_hidden_columns filter (closed: fixed)"&gt;#35057&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [36156]: Docs: Remove indentation from the `hidden_columns` changelog entry.  ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 02 Jan 2016 15:15:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36156/1451747753044418</guid>
      <description>&lt;p&gt;
Docs: Remove indentation from the &lt;code&gt;hidden_columns&lt;/code&gt; changelog entry.
&lt;/p&gt;
&lt;p&gt;
Added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36154" title="List Tables: When a user has hidden all columns, do not override that ..."&gt;[36154]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35057" title="#35057: defect (bug): bug in new default_hidden_columns filter (closed: fixed)"&gt;#35057&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35288 (Search Engines Discouraged message improvements) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 02 Jan 2016 14:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35288</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35288/1451746451577774</guid>
      <description>&lt;p&gt;
While working on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35049" title="#35049: defect (bug): Remove title attributes: the Dashboard (closed: fixed)"&gt;#35049&lt;/a&gt; was wondering why this text is capitalized. Investigated a bit and realized this message could probably be improved a bit too, especially now that its title attribute is going to be removed.
At the very least, I'd propose to don't use capitalized text and try to style it to make it a bit more evident.
&lt;/p&gt;
&lt;p&gt;
TL;DR
&lt;/p&gt;
&lt;p&gt;
As noted in the ticket that introduced it, users may forget to turn privacy mode off with disastrous consequences in search results. So, as a first step, the message should probably be made a bit more evident. Please consider the "At a Glance" widget can display additional things (updates, network storage) and plugins can add their own stuff. See screenshot below:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/uN1C3IyYRl.png"&gt;&lt;img src="https://cldup.com/uN1C3IyYRl.png" alt="https://cldup.com/uN1C3IyYRl.png" crossorigin="anonymous" title="https://cldup.com/uN1C3IyYRl.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Being in the middle of all that text, the message looks somehow hidden and not so prominent as it should be. WordPress already has CSS classes for this, thinking at notices (maybe &lt;code&gt;notice-warning&lt;/code&gt; ?). It would be great to have a design proposal from UI people and designers :)
&lt;/p&gt;
&lt;p&gt;
Also, was thinking there's probably no need to use a so short text because the widget provides enough room to use a more meaningful message and link.
&lt;/p&gt;
&lt;p&gt;
As a general rule, text used for links should be self-explanatory, make sense even when read out of context, and should describe the link purpose. Introducing changes here can be a bit tricky since there are filters in place so I'd consider this part optional but also a nice improvement worth considering.
&lt;/p&gt;
&lt;p&gt;
Ideally, there should be some text to indicate the privacy status followed by a meaningful link. Since in the related options page this setting is called "Search Engine Visibility" (but it can be "Site Visibility" and use radio buttons if the &lt;code&gt;blog_privacy_selector&lt;/code&gt; action is used. see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21838" title="Fold Privacy Settings into Reading Settings, moving blog_public ..."&gt;[21838]&lt;/a&gt;, the discussion on the related ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16416" title="#16416: defect (bug): Settings -&amp;gt; Privacy &amp;#34;block search engines&amp;#34; option is not accurate (closed: fixed)"&gt;#16416&lt;/a&gt;, and &lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2012-08-29&amp;amp;sort=asc#m446982"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;the discussion on IRC&lt;/a&gt;) I'd propose to use something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Search engines are currently asked not to index your content.[br]
[link]Change search engine visibility settings[/link]
&lt;/pre&gt;&lt;p&gt;
For reference, here's some history:
&lt;/p&gt;
&lt;p&gt;
introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12211" title="#12211: feature request: Make it obvious when a blog is set to private (closed: fixed)"&gt;#12211&lt;/a&gt; and initially meant to look like a button because it was close to the "Visit Site" button:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/lYrYTBgNEU.png"&gt;&lt;img src="https://cldup.com/lYrYTBgNEU.png" alt="https://cldup.com/lYrYTBgNEU.png" crossorigin="anonymous" title="https://cldup.com/lYrYTBgNEU.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since it looked like a button, text was capitalized following WordPress conventions &lt;em&gt;and I guess this is the reason why it's still capitalized&lt;/em&gt;. Then it was changed to look like a link and later the original "Privacy On" text was changed in "Search Engines Blocked". Still capitalized :)
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/FDsJzQk_ca.png"&gt;&lt;img src="https://cldup.com/FDsJzQk_ca.png" alt="https://cldup.com/FDsJzQk_ca.png" crossorigin="anonymous" title="https://cldup.com/FDsJzQk_ca.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Then it went through many other changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;visually changed from a button to a link in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13182" title="Modify style of new &amp;#34;Privacy On&amp;#34; admin header indicator. props ..."&gt;[13182]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;restricted by capabilities in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13559" title="Only show &amp;#34;Privacy On&amp;#34; notice/link if the user can manage options. ..."&gt;[13559]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;text changed from "Privacy On" to "Search Engines Blocked" in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13767" title="Update search engines blocked text so that we do not imply that the ..."&gt;[13767]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;filters were introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14237" title="privacy_on_link_title and privacy_on_link_text filters to allow ..."&gt;[14237]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;moved from admin-header.php to the 'Right Now' widget in the Dashboard in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17829" title="Move 'Search Engines Blocked' to 'Right Now' from admin header. see #17324."&gt;[17829]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;text changed from 'Search Engines Blocked' to 'Search Engines Discouraged' in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21838" title="Fold Privacy Settings into Reading Settings, moving blog_public ..."&gt;[21838]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;removed with the Dashboard redesign in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26144" title="Merge the new dashboard design into core.
Merges ..."&gt;[26144]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;then restored in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26700" title="Restore &amp;#34;Search Engines Discouraged&amp;#34; to the dashboard.
props ..."&gt;[26700]&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35286 (Broken theme error message is very confusing) updated</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 02 Jan 2016 14:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35286#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35286#comment:3/1451746427415375</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35286#comment:2" title="Comment 2"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps a link to the documentation could be added?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
documentation about requirement files of child theme:
&lt;a class="ext-link" href="https://codex.wordpress.org/Child_Themes#How_to_Create_a_Child_Theme"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://codex.wordpress.org/Child_Themes#How_to_Create_a_Child_Theme&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Let me know if I misunderstood your question or wrote wrong link. Thank you so much!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34945 (HTTPS website with HTTP images) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 02 Jan 2016 14:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34945#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34945#comment:29/1451746136943737</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34945#comment:27" title="Comment 27"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &lt;code&gt;upload_url_path&lt;/code&gt; option could be set to a CDN or other remote host which is only available over one scheme. It could be set to a HTTPS url while the current page is being served over HTTP.
&lt;/p&gt;
&lt;p&gt;
One option would be to only &lt;code&gt;set_url_scheme()&lt;/code&gt; if the hostnames match.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The above point is a good one an needs to be considered before "upgrading" an HTTP request to an HTTPS one. We can apply the same fix that was applied to &lt;code&gt;wp_get_attachment_url()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31614" title="In `wp_get_attachment_url()`, convert to HTTPS when possible.
 ..."&gt;r31614&lt;/a&gt;, which only changes schemes when &lt;code&gt;is_ssl()&lt;/code&gt; is true, and the hostnames match.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, we can't apply this logic directly in &lt;code&gt;wp_uploads_dir()&lt;/code&gt; because that function is used to build URLs for content that is then inserted into posts in the database. Eventually, we should reverse all of this logic so that we default to HTTPS and make exceptions for the functions that insert content in the database, but for 4.4.1 a more conservative approach is probably wise.
&lt;/p&gt;
&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/34945/34945.2.diff"&gt;34945.2.diff&lt;/a&gt; I've used the same narrow applied in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31614" title="In `wp_get_attachment_url()`, convert to HTTPS when possible.
 ..."&gt;r31614&lt;/a&gt; which will take care of situations where:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The site has the home and siteurl options set to URLs with HTTP schemes,
&lt;/li&gt;&lt;li&gt;WP_HOME and WP_SITEURL constants are not defined to HTTPS,
&lt;/li&gt;&lt;li&gt;The site is optionally available over HTTPS on the front end, or HTTPS is being used in the admin with a self-signed certificate but the front end is only available over HTTP.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I also prefer placing this fix in &lt;code&gt;_wp_upload_dir_baseurl()&lt;/code&gt; instead of &lt;code&gt;wp_calculate_image_srcset()&lt;/code&gt; because this way we only run the code once per page load rather than once per image on the page, which could be quite a performance hit for the display filter that adds &lt;code&gt;srcset&lt;/code&gt; attributes to content images.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35287 (get_site_url does not accept path parameter) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 02 Jan 2016 14:35:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35287#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35287#comment:1/1451745340407309</guid>
      <description>invalid: &lt;p&gt;
Please have a look at the &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_site_url/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;documentation for get_site_url()&lt;/a&gt;. The function takes &lt;code&gt;$blog_id&lt;/code&gt; as the first parameter, and &lt;code&gt;$path&lt;/code&gt; as the &lt;em&gt;second&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
So your code should probably look like &lt;code&gt;get_site_url( null, '/some-path' );&lt;/code&gt; â€” or just &lt;code&gt;site_url( '/some-path' );&lt;/code&gt;. &lt;code&gt;site_url()&lt;/code&gt; is just a wrapper for &lt;code&gt;get_site_url()&lt;/code&gt;, always passing &lt;code&gt;$blog_id = null&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The same goes for &lt;code&gt;get_home_url()&lt;/code&gt; and &lt;code&gt;home_url()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>34945.2.diff attached to Ticket #34945</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 02 Jan 2016 14:31:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34945/34945.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34945/34945.2.diff/1451745094337048</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>remove-orphaned-closing-td.patch attached to Ticket #35281</title>
      
        <dc:creator>ash.matadeen</dc:creator>

      <pubDate>Sat, 02 Jan 2016 14:25:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35281/remove-orphaned-closing-td.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35281/remove-orphaned-closing-td.patch/1451744737110509</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35287 (get_site_url does not accept path parameter) created</title>
      
        <dc:creator>WebDevDLo</dc:creator>

      <pubDate>Sat, 02 Jan 2016 14:00:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35287</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35287/1451743250241974</guid>
      <description>&lt;p&gt;
I've tried this several times and am convinced this is a bug. site_url (which automatically echoes) works, but the sister function get_site_url (which I am using to create a javascript variable for use in AJAX) does not work. It is very easy to replicate the issue.
&lt;/p&gt;
&lt;p&gt;
Here are a few lines to show you the problem I've run into. These are lines that I can get to work:
&lt;/p&gt;
&lt;p&gt;
$.ajax({
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
url: &amp;lt;?php echo json_encode(get_site_url() . '/ajax-random-ad/'); ?&amp;gt;,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is a work around. The proper way to write this is the following, which does not work:
&lt;/p&gt;
&lt;p&gt;
$.ajax({
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
url: &amp;lt;?php echo json_encode(get_site_url('ajax-random-ad/')); ?&amp;gt;,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the first time I've submitted a bug so I'm not an expert on exactly what you would prefer for troubleshooting, but I am hoping this is enough for you to do a simple test of your own to replicate the problem.
&lt;/p&gt;
&lt;p&gt;
I have searched the forums and I do not see this but reported yet.
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35280 (Should feed_links_extra run when current theme doesn't support ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 02 Jan 2016 12:58:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35280#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35280#comment:1/1451739533866766</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35286 (Broken theme error message is very confusing) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 02 Jan 2016 12:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35286#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35286#comment:2/1451739423384414</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Perhaps a link to the documentation could be added?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>child-theme_broken_message_inside-it.diff attached to Ticket #35286</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 02 Jan 2016 11:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35286/child-theme_broken_message_inside-it.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35286/child-theme_broken_message_inside-it.diff/1451734896930159</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35286 (Broken theme error message is very confusing) updated</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 02 Jan 2016 11:41:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35286#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35286#comment:1/1451734872055985</guid>
      <description>&lt;p&gt;
With first patch I'd like to change to it.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Themes must have a stylesheet and a template &lt;strong&gt;tag within it&lt;/strong&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Or this with second one (I'm not native English speaker, I'm sorry! :p)
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Themes must have a stylesheet and a template &lt;strong&gt;tag inside it&lt;/strong&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>child-theme_broken_message.diff attached to Ticket #35286</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 02 Jan 2016 11:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35286/child-theme_broken_message.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35286/child-theme_broken_message.diff/1451734145090250</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>screenshot_2016_01_02_20_15.png attached to Ticket #35286</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 02 Jan 2016 11:28:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35286/screenshot_2016_01_02_20_15.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35286/screenshot_2016_01_02_20_15.png/1451734129688962</guid>
      <description>&lt;p&gt;
Screenshot and my notes.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35286 (Broken theme error message is very confusing) created</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 02 Jan 2016 11:26:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35286</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35286/1451734010959836</guid>
      <description>&lt;p&gt;
When we start creating child theme, we should have a stylesheet and a template tag within it.
&lt;/p&gt;
&lt;p&gt;
If we forget to include template tag (it means parent theme name in style.css) and try to activate it, WordPress says:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Themes must have &lt;strong&gt;a stylesheet and a template.&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This sentence, people must imagine that after the word &lt;strong&gt;"a stylesheet"&lt;/strong&gt;, there are some required file not tag.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35049 (Remove title attributes: the Dashboard) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 02 Jan 2016 11:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35049#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35049#comment:11/1451732982013583</guid>
      <description>&lt;p&gt;
In the new patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;remove title attributes and use &lt;code&gt;aria-label&lt;/code&gt; and &lt;code&gt;screen-reader-text&lt;/code&gt; where appropriate
&lt;/li&gt;&lt;li&gt;remove the &lt;code&gt;privacy_on_link_title&lt;/code&gt; title attribute by default, preserve the ability to use the filter
&lt;/li&gt;&lt;li&gt;add translator comments
&lt;/li&gt;&lt;li&gt;simplify the Popular plugin links
&lt;/li&gt;&lt;li&gt;unfortunately, comments don't have a title so the only way to give some context to the action links is using the text "this comment", far from ideal since they will suffer from the "Read more" link syndrome
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The Comments and News widget need some accessibility improvements, will open new separate tickets
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35049.3.diff attached to Ticket #35049</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 02 Jan 2016 11:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35049/35049.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35049/35049.3.diff/1451732787147654</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35049 (Remove title attributes: the Dashboard) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 02 Jan 2016 11:05:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35049#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35049#comment:10/1451732720245144</guid>
      <description>&lt;p&gt;
Recently noticed a bit of inconsistency in the way we're using &lt;code&gt;.screen-reader-text&lt;/code&gt; and &lt;code&gt;aria-label&lt;/code&gt;. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1450370604001259"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Discussed on Slack with the accessibility team&lt;/a&gt; and decided to stick on &lt;code&gt;aria-label&lt;/code&gt; when the intent is to completely replace the visible text and &lt;code&gt;.screen-reader-text&lt;/code&gt; when adding additional text.
&lt;/p&gt;
&lt;p&gt;
Other things in the Dashboard need some love, for example the title attributes on the Comments action links:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/qFmXDyR2fZ.png"&gt;&lt;img src="https://cldup.com/qFmXDyR2fZ.png" alt="https://cldup.com/qFmXDyR2fZ.png" crossorigin="anonymous" title="https://cldup.com/qFmXDyR2fZ.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
New patch incoming.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35284 (Unit tests for wp_get_pomo_file_data()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 02 Jan 2016 10:20:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35284#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35284#comment:1/1451730007928832</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35285 (Unable to select (gallery) view on iOS) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Jan 2016 10:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35285</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35285/1451729907666339</guid>
      <description>&lt;p&gt;
Tapping only sets the cursor left or right of the view.
Hitting return also seems to remove the view sometimes even if the cursor is behind the view.
Tried both gallery and audio views.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="ext-link" href="https://make.wordpress.org/flow/2015/02/13/gallery-edit-bar-doesnt-show-iphone-6/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://make.wordpress.org/flow/2015/02/13/gallery-edit-bar-doesnt-show-iphone-6/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32502 (Cannot advance the cursor through input fields on iOS) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Jan 2016 10:06:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32502#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32502#comment:23/1451729173595398</guid>
      <description>&lt;p&gt;
iOS 9.2 and this is still an issue...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>dossy</dc:creator>

      <pubDate>Sat, 02 Jan 2016 08:02:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:21/1451721746926212</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35053#comment:20" title="Comment 20"&gt;smerriman&lt;/a&gt;:
[...]
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With the current approach if post_date is used, it is consistent and correct when a local time is passed to post_date, and buggy if you try to pass things in another timezone format (as per redsweater's comment). [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And, the patch I provided fixes this, as @redsweater confirmed.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35053#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] Is there any good reason why this should be pushed into 4.4.1 in preference to a revert of behaviour to pre-4.4? The behaviour previous was well known as buggy, but consistent, this has simply changed it to be buggy in a different way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
AFAICT, the patch I submitted implements the correct behavior in all cases currently described.  If I missed a case, describe it and I'll work on implementing the test for it.  I don't agree that it's "simply changed ... to b buggy in different way."  The key improvement that I implemented in &lt;code&gt;iso8601_to_datetime()&lt;/code&gt; is to properly use the PHP Date/Time functions to coerce the date either to GMT or to local timezone (per &lt;code&gt;get_option( 'timezone_string ')&lt;/code&gt;'s setting).
&lt;/p&gt;
&lt;p&gt;
My implementation might even coincidentally fix &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25399" title="#25399: defect (bug): XML-RPC and wp-mail.php struggle with timezone offsets (new)"&gt;#25399&lt;/a&gt;, but I'm not completely sure since there's no tests that document exactly what the breakage is.  I'll read &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20328" title="#20328: defect (bug): get_date_from_gmt assumes current gmt_offset is appropriate (closed: fixed)"&gt;#20328&lt;/a&gt; more carefully and try to decipher exactly what @nacin might be referring to as still broken.  It looks like the code all uses the old &lt;code&gt;get_date_from_gmt()&lt;/code&gt; and &lt;code&gt;get_gmt_from_date()&lt;/code&gt; functions and could probably benefit from the changes in &lt;code&gt;iso8601_to_datetime()&lt;/code&gt; ...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35284.patch attached to Ticket #35284</title>
      
        <dc:creator>realloc</dc:creator>

      <pubDate>Sat, 02 Jan 2016 07:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35284/35284.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35284/35284.patch/1451720349282342</guid>
      <description>&lt;p&gt;
Tests for wp_get_pomo_file_data and modified simple.po
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35284 (Unit tests for wp_get_pomo_file_data()) created</title>
      
        <dc:creator>realloc</dc:creator>

      <pubDate>Sat, 02 Jan 2016 07:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35284</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35284/1451720017260192</guid>
      <description>&lt;p&gt;
I wrote an unit test for wp_get_pomo_file_data(). I needed also some header information in one of the po-files so I decided to modify the simple.po file too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>smerriman</dc:creator>

      <pubDate>Sat, 02 Jan 2016 07:04:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:20/1451718286992228</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35053#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The behaviour previous was well known as buggy, but consistent, this has simply changed it to be buggy in a different way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can see now why what I thought was the fix is flawed and both new and old are buggy, but I disagree that the previous approach was consistent. As per &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt;, with the old approach it was &lt;em&gt;impossible&lt;/em&gt; to get a consistent value for post_date and post_date_gmt in the database if you pass the post_date parameter (and not post_date_gmt), unless your site was running in the GMT timezone. One of them was guaranteed to be incorrect.
&lt;/p&gt;
&lt;p&gt;
With the current approach if post_date is used, it is consistent and correct when a local time is passed to post_date, and buggy if you try to pass things in another timezone format (as per redsweater's comment). I'm probably missing a use-case but I would have thought that's where you'd use post_date_gmt; you're using post_date specifically because you do want a local time.
&lt;/p&gt;
&lt;p&gt;
However, my approach was never meant to affect when post_date_gmt was passed. Perhaps a simpler quick-fix would be to apply the previous logic only when post_date_gmt is empty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 06:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:19/1451716404125271</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
And, yes, America/New_York has DST, but because our tests have specific dates in the tests, we already know if they're during the DST time of year, or not, therefore there's no need to use UTC-5.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, Got it. That's fine then.
&lt;/p&gt;
&lt;p&gt;
Given the extent of this patch compared to the original commit, the lack of any committer with a reasonable grasp of the issues at play, and the fact that the timezone handling issues are a long standing issues (See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30429" title="#30429: defect (bug): wp.newPost gets non-GMT date calculation wrong (reopened)"&gt;#30429&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25399" title="#25399: defect (bug): XML-RPC and wp-mail.php struggle with timezone offsets (new)"&gt;#25399&lt;/a&gt;).
Is there any good reason why this should be pushed into 4.4.1 in preference to a revert of behaviour to pre-4.4? The behaviour previous was well known as buggy, but consistent, this has simply changed it to be buggy in a different way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>dossy</dc:creator>

      <pubDate>Sat, 02 Jan 2016 05:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:18/1451711584919444</guid>
      <description>&lt;p&gt;
&lt;code&gt;get_gmt_from_date()&lt;/code&gt; and &lt;code&gt;get_date_from_gmt()&lt;/code&gt; were already using PHP's Date/Time functions, so I figured it would be okay to use in &lt;code&gt;iso8601_to_datetime()&lt;/code&gt; as well.
&lt;/p&gt;
&lt;p&gt;
Similarly, yes, the date/time functions can throw exceptions, and the other WP functions that I mentioned above don't catch them, either, so I was trying to stay consistent with what's already in the codebase.  I agree, personally, that the functions should catch and handle the exceptions, but I didn't want to reach into those other functions to change their implementations - it seems weird that one set of functions would catch exceptions while the others don't.
&lt;/p&gt;
&lt;p&gt;
And, yes, America/New_York has DST, but because our tests have specific dates in the tests, we already know if they're during the DST time of year, or not, therefore there's no need to use &lt;code&gt;UTC-5&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35053 (XML-RPC when post with date_created_gmt, its post_date will gmt date ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 04:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35053#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35053#comment:17/1451710774165402</guid>
      <description>&lt;p&gt;
I'm hesitant to change &lt;code&gt;iso8601_to_datetime()&lt;/code&gt; to use date functions directly, especially in a point release.
&lt;/p&gt;
&lt;p&gt;
FYI WordPress also sets the datetimezone to UTC during bootstrap, so it can be assumed to be set to that if it makes life easier.
&lt;/p&gt;
&lt;p&gt;
Why is there &lt;code&gt;try{} catch{}&lt;/code&gt; handling in the unit tests wrapping &lt;code&gt;iso8601_to_datetime()&lt;/code&gt;? If those datetimes can throw exceptions they need to be caught inside &lt;code&gt;iso8601_to_datetime()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Doesn't the &lt;code&gt;America/New_York&lt;/code&gt; timezone respect DST? If that's the case, adding 5hrs isn't always correct. Probably best to use a &lt;code&gt;UTC+x&lt;/code&gt; timezone for tests so it's explicit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35057 (bug in new default_hidden_columns filter) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 04:44:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35057#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35057#comment:11/1451709871280711</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36155" title="List Tables: When a user has hidden all columns, do not override that ..."&gt;36155&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
List Tables: When a user has hidden all columns, do not override that with the &lt;code&gt;default_hidden_columns&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36154" title="List Tables: When a user has hidden all columns, do not override that ..."&gt;[36154]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Props Compute, jorbin, voldemortensen.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35057" title="#35057: defect (bug): bug in new default_hidden_columns filter (closed: fixed)"&gt;#35057&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [36155]: List Tables: When a user has hidden all columns, do not override that ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 04:44:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36155/1451709870760245</guid>
      <description>&lt;p&gt;
List Tables: When a user has hidden all columns, do not override that with the &lt;code&gt;default_hidden_columns&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36154" title="List Tables: When a user has hidden all columns, do not override that ..."&gt;[36154]&lt;/a&gt; to the 4.4 branch.
Props Compute, jorbin, voldemortensen.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35057" title="#35057: defect (bug): bug in new default_hidden_columns filter (closed: fixed)"&gt;#35057&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35057 (bug in new default_hidden_columns filter) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 04:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35057#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35057#comment:10/1451709788199793</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36154" title="List Tables: When a user has hidden all columns, do not override that ..."&gt;36154&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
List Tables: When a user has hidden all columns, do not override that with the &lt;code&gt;default_hidden_columns&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Compute, jorbin, voldemortensen.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35057" title="#35057: defect (bug): bug in new default_hidden_columns filter (closed: fixed)"&gt;#35057&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36154]: List Tables: When a user has hidden all columns, do not override that ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 04:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36154</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36154/1451709787667007</guid>
      <description>&lt;p&gt;
List Tables: When a user has hidden all columns, do not override that with the &lt;code&gt;default_hidden_columns&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
Props Compute, jorbin, voldemortensen.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35057" title="#35057: defect (bug): bug in new default_hidden_columns filter (closed: fixed)"&gt;#35057&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34987 ("Configure" link for dashboard widgets no longer displayed.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 04:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34987#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34987#comment:22/1451709188740183</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36153" title="Admin: After [35128], make the 'Configure' link work again for ..."&gt;36153&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Admin: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35128" title="Accessibility: bump headings one level up in post meta boxes for a ..."&gt;[35128]&lt;/a&gt;, make the 'Configure' link work again for dashboard widgets.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This merges the CSS changes from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35896" title="Admin: After [35128], make the 'Configure' link work again for ..."&gt;[35896]&lt;/a&gt; into an inline function in formatting.php to avoid a &lt;code&gt;wp-admin.min.css&lt;/code&gt; rebuild.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34987" title="#34987: defect (bug): &amp;#34;Configure&amp;#34; link for dashboard widgets no longer displayed. (closed: fixed)"&gt;#34987&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36153]: Admin: After [35128], make the 'Configure' link work again for ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 04:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36153</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36153/1451709188125236</guid>
      <description>&lt;p&gt;
Admin: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35128" title="Accessibility: bump headings one level up in post meta boxes for a ..."&gt;[35128]&lt;/a&gt;, make the 'Configure' link work again for dashboard widgets.
&lt;/p&gt;
&lt;p&gt;
This merges the CSS changes from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35896" title="Admin: After [35128], make the 'Configure' link work again for ..."&gt;[35896]&lt;/a&gt; into an inline function in formatting.php to avoid a &lt;code&gt;wp-admin.min.css&lt;/code&gt; rebuild.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34987" title="#34987: defect (bug): &amp;#34;Configure&amp;#34; link for dashboard widgets no longer displayed. (closed: fixed)"&gt;#34987&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #35045,â€‹35102 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:55:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35045%2C35102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35045%2C35102/1451706948017942</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36152" title="Responsive images: fix the check whether the attachment meta matches ..."&gt;36152&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Responsive images: fix the check whether the attachment meta matches the image src to work with http/https and CDNs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36121" title="Responsive images: fix the check whether the attachment meta matches ..."&gt;[36121]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Props webaware, joemcgill, azaozz.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35045" title="#35045: defect (bug): Responsive images not added when effective scheme differs from image ... (closed: fixed)"&gt;#35045&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35102" title="#35102: defect (bug): Responsive images support for external URLs (closed: fixed)"&gt;#35102&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [36152]: Responsive images: fix the check whether the attachment meta matches ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36152</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36152/1451706947492273</guid>
      <description>&lt;p&gt;
Responsive images: fix the check whether the attachment meta matches the image src to work with http/https and CDNs.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36121" title="Responsive images: fix the check whether the attachment meta matches ..."&gt;[36121]&lt;/a&gt; to the 4.4 branch.
Props webaware, joemcgill, azaozz.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35045" title="#35045: defect (bug): Responsive images not added when effective scheme differs from image ... (closed: fixed)"&gt;#35045&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35102" title="#35102: defect (bug): Responsive images support for external URLs (closed: fixed)"&gt;#35102&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35106 (Responsive images break uploads with full path stored in metadata) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:53:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35106#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35106#comment:13/1451706802136684</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36151" title="Responsive images: add compatibility for versions &amp;lt; 2.7 when the full ..."&gt;36151&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Responsive images: add compatibility for versions &amp;lt; 2.7 when the full image path was stored in the metadata. Introduces &lt;code&gt;_wp_get_attachment_relative_path()&lt;/code&gt; and uses it in &lt;code&gt;wp_get_attachment_url()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36120" title="Responsive images: add compatibility for versions &amp;lt; 2.7 when the full ..."&gt;[36120]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Props dd32, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35106" title="#35106: defect (bug): Responsive images break uploads with full path stored in metadata (closed: fixed)"&gt;#35106&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36151]: Responsive images: add compatibility for versions &lt; 2.7 when the full ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36151</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36151/1451706801610659</guid>
      <description>&lt;p&gt;
Responsive images: add compatibility for versions &amp;lt; 2.7 when the full image path was stored in the metadata. Introduces &lt;code&gt;_wp_get_attachment_relative_path()&lt;/code&gt; and uses it in &lt;code&gt;wp_get_attachment_url()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36120" title="Responsive images: add compatibility for versions &amp;lt; 2.7 when the full ..."&gt;[36120]&lt;/a&gt; to the 4.4 branch.
Props dd32, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35106" title="#35106: defect (bug): Responsive images break uploads with full path stored in metadata (closed: fixed)"&gt;#35106&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35108 (Responsive images blurry - srcset attribute doesn't include full size ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:52:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35108#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35108#comment:17/1451706722430300</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36150" title="Responsive Images: when creating `srcset` do not exclude the image ..."&gt;36150&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Responsive Images: when creating &lt;code&gt;srcset&lt;/code&gt; do not exclude the image size which is in the src attribute even when it is larger than &lt;code&gt;max_srcset_image_width&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36110" title="Responsive images: when creating `srcset` do not exclude the image ..."&gt;[36110]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Props joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35108" title="#35108: defect (bug): Responsive images blurry - srcset attribute doesn't include full size ... (closed: fixed)"&gt;#35108&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36150]: Responsive Images: when creating `srcset` do not exclude the image ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36150</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36150/1451706721870810</guid>
      <description>&lt;p&gt;
Responsive Images: when creating &lt;code&gt;srcset&lt;/code&gt; do not exclude the image size which is in the src attribute even when it is larger than &lt;code&gt;max_srcset_image_width&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36110" title="Responsive images: when creating `srcset` do not exclude the image ..."&gt;[36110]&lt;/a&gt; to the 4.4 branch.
Props joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35108" title="#35108: defect (bug): Responsive images blurry - srcset attribute doesn't include full size ... (closed: fixed)"&gt;#35108&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [36149]: Bump the `license.txt` year to 2016 to appease the unit tests.  Merges ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:47:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36149/1451706468278441</guid>
      <description>&lt;p&gt;
Bump the &lt;code&gt;license.txt&lt;/code&gt; year to 2016 to appease the unit tests.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36141" title="Bump the `license.txt` year to 2016.
Happy New Year, all y'all!
"&gt;[36141]&lt;/a&gt; to the 4.4 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #23423,â€‹34995 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23423%2C34995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23423%2C34995/1451705925861029</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36148" title="Widgets: Revert [34465], as it introduced a regression, making the ..."&gt;36148&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34465" title="Widgets: when passing a string arg value to `dynamic_sidebar()`, don't ..."&gt;[34465]&lt;/a&gt;, as it introduced a regression, making the &lt;code&gt;$index&lt;/code&gt; argument of &lt;code&gt;dynamic_sidebar()&lt;/code&gt; case-sensitive.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36130" title="Widgets: Revert [34465], as it introduced a regression, making the ..."&gt;[36130]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/23423" title="#23423: defect (bug): sanitize_title() in dynamic_sidebar() restricts the use of specific ... (reopened)"&gt;#23423&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34995" title="#34995: defect (bug): WP_Widget::widget not called (closed: fixed)"&gt;#34995&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [36148]: Widgets: Revert [34465], as it introduced a regression, making the ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36148</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36148/1451705925343886</guid>
      <description>&lt;p&gt;
Widgets: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34465" title="Widgets: when passing a string arg value to `dynamic_sidebar()`, don't ..."&gt;[34465]&lt;/a&gt;, as it introduced a regression, making the &lt;code&gt;$index&lt;/code&gt; argument of &lt;code&gt;dynamic_sidebar()&lt;/code&gt; case-sensitive.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36130" title="Widgets: Revert [34465], as it introduced a regression, making the ..."&gt;[36130]&lt;/a&gt; to the 4.4 branch.
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/23423" title="#23423: defect (bug): sanitize_title() in dynamic_sidebar() restricts the use of specific ... (reopened)"&gt;#23423&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34995" title="#34995: defect (bug): WP_Widget::widget not called (closed: fixed)"&gt;#34995&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35237 (Invalid argument supplied for foreach() in ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:35:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35237#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35237#comment:8/1451705747958284</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36147" title="Embeds: Change attachment metadata condition to prevent a warning in ..."&gt;36147&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Embeds: Change attachment metadata condition to prevent a warning in the embeds template.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36123" title="Embeds: Change attachment metadata condition to prevent a warning in ..."&gt;[36123]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35237" title="#35237: defect (bug): Invalid argument supplied for foreach() in ... (closed: fixed)"&gt;#35237&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36147]: Embeds: Change attachment metadata condition to prevent a warning in ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:35:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36147</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36147/1451705747452878</guid>
      <description>&lt;p&gt;
Embeds: Change attachment metadata condition to prevent a warning in the embeds template.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36123" title="Embeds: Change attachment metadata condition to prevent a warning in ..."&gt;[36123]&lt;/a&gt; to the 4.4 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35237" title="#35237: defect (bug): Invalid argument supplied for foreach() in ... (closed: fixed)"&gt;#35237&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35006 (Comments sent immediately to Trash for matching keyword blacklist ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35006#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35006#comment:29/1451705675886879</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36146" title="Comments: Ensure only approved comments trigger post author ..."&gt;36146&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Ensure only approved comments trigger post author notifications&lt;br /&gt;
Posts that are trashed shouldn't trigger post author notifications. Adds unit tests to enforce this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36119" title="Ensure only approved comments trigger post author notifications
Posts ..."&gt;[36119]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Props scottbrownconsulting, peterwilsoncc, swissspidy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35006" title="#35006: defect (bug): Comments sent immediately to Trash for matching keyword blacklist ... (closed: fixed)"&gt;#35006&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36146]: Comments: Ensure only approved comments trigger post author ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36146</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36146/1451705675376229</guid>
      <description>&lt;p&gt;
Comments: Ensure only approved comments trigger post author notifications
Posts that are trashed shouldn't trigger post author notifications. Adds unit tests to enforce this.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36119" title="Ensure only approved comments trigger post author notifications
Posts ..."&gt;[36119]&lt;/a&gt; to the 4.4 branch.
Props scottbrownconsulting, peterwilsoncc, swissspidy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35006" title="#35006: defect (bug): Comments sent immediately to Trash for matching keyword blacklist ... (closed: fixed)"&gt;#35006&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35112 (Screen Options in Appearance -&gt; Menu not saved correctly sometimes) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:33:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35112#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35112#comment:19/1451705596507216</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36145" title="Admin: Restore the &amp;#34;Show advanced menu properties&amp;#34; checkboxes IDs. ..."&gt;36145&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Admin: Restore the "Show advanced menu properties" checkboxes IDs.&lt;br /&gt;
These checkboxes are used on the Menus screen options and the Customizer Menus options.&lt;br /&gt;
Their IDs were removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34991" title="Administration: Convert H5 usage in Screen Options to use fieldsets ..."&gt;[34991]&lt;/a&gt; but they're needed to get the checkboxes to be saved&lt;br /&gt;
via AJAX. Also, avoids a useless AJAX call.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36137" title="Admin: Restore the &amp;#34;Show advanced menu properties&amp;#34; checkboxes IDs.
 ..."&gt;[36137]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Props afercia.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35112" title="#35112: defect (bug): Screen Options in Appearance -&amp;gt; Menu not saved correctly sometimes (closed: fixed)"&gt;#35112&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36145]: Admin: Restore the "Show advanced menu properties" checkboxes IDs. ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36145</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36145/1451705595996152</guid>
      <description>&lt;p&gt;
Admin: Restore the "Show advanced menu properties" checkboxes IDs.
These checkboxes are used on the Menus screen options and the Customizer Menus options.
Their IDs were removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34991" title="Administration: Convert H5 usage in Screen Options to use fieldsets ..."&gt;[34991]&lt;/a&gt; but they're needed to get the checkboxes to be saved
via AJAX. Also, avoids a useless AJAX call.
&lt;/p&gt;
&lt;p&gt;
Merge &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36137" title="Admin: Restore the &amp;#34;Show advanced menu properties&amp;#34; checkboxes IDs.
 ..."&gt;[36137]&lt;/a&gt; to the 4.4 branch.
Props afercia.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35112" title="#35112: defect (bug): Screen Options in Appearance -&amp;gt; Menu not saved correctly sometimes (closed: fixed)"&gt;#35112&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35047 (Notices are not moved to first header when header-elements are nested ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35047#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35047#comment:16/1451705490525757</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36144" title="Admin: fix repositioning of notices when the first header is not an ..."&gt;36144&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Admin: fix repositioning of notices when the first header is not an immediate children of &lt;code&gt;.wrap&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36134" title="Admin: fix repositioning of notices when the first header is not an ..."&gt;[36134]&lt;/a&gt; to the 4.4 branch.&lt;br /&gt;
Props afercia, DvanKooten.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35047" title="#35047: defect (bug): Notices are not moved to first header when header-elements are nested ... (closed: fixed)"&gt;#35047&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36144]: Admin: fix repositioning of notices when the first header is not an ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 03:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36144</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36144/1451705488611722</guid>
      <description>&lt;p&gt;
Admin: fix repositioning of notices when the first header is not an immediate children of &lt;code&gt;.wrap&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36134" title="Admin: fix repositioning of notices when the first header is not an ..."&gt;[36134]&lt;/a&gt; to the 4.4 branch.
Props afercia, DvanKooten.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35047" title="#35047: defect (bug): Notices are not moved to first header when header-elements are nested ... (closed: fixed)"&gt;#35047&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35060 (Allow filtering of comment count) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 02 Jan 2016 02:55:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35060#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35060#comment:8/1451703327026160</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35060#comment:7" title="Comment 7"&gt;rachelbaker&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@swissspidy Curious why you are using &lt;code&gt;null&lt;/code&gt; as the default value of the &lt;code&gt;wp_update_comment_count_now&lt;/code&gt; filter?  Is there any reason we should not just pass in the &lt;code&gt;$new&lt;/code&gt; comment count?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That was my suggestion, the intention is to avoid the extra database lookup if the filter returns a valid value. The query is uncached and &lt;code&gt;comment_approved&lt;/code&gt; is not indexed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29325 (Use &lt;time datetime&gt; tag in Post Date) updated</title>
      
        <dc:creator>diddledan</dc:creator>

      <pubDate>Sat, 02 Jan 2016 02:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29325#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29325#comment:4/1451702900213686</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The attached patch adds a new function hooked into &lt;code&gt;the_date&lt;/code&gt; filter. This function will add &lt;code&gt;&amp;lt;time datetime=""&amp;gt;&amp;lt;/time&amp;gt;&lt;/code&gt; tags if the active theme specifies that it supports this. Adding theme support is via html5/time-tag:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; add_theme_support( 'html5', array( 'time-tag', ... ) ); &lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29325.diff attached to Ticket #29325</title>
      
        <dc:creator>diddledan</dc:creator>

      <pubDate>Sat, 02 Jan 2016 02:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29325/29325.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29325/29325.diff/1451702613680046</guid>
      <description>&lt;p&gt;
add new function to include &amp;lt;time&amp;gt; tags if the theme declares support
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35060 (Allow filtering of comment count) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 02 Jan 2016 01:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35060#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35060#comment:7/1451699708944076</guid>
      <description>&lt;p&gt;
@swissspidy Curious why you are using &lt;code&gt;null&lt;/code&gt; as the default value of the &lt;code&gt;wp_update_comment_count_now&lt;/code&gt; filter?  Is there any reason we should not just pass in the &lt;code&gt;$new&lt;/code&gt; comment count?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10377 (Comment fields should have max lengths) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 02 Jan 2016 01:47:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10377#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10377#comment:25/1451699223670372</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/10377/10377.4.diff" title="Attachment '10377.4.diff' in Ticket #10377"&gt;10377.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/10377/10377.4.diff" title="Download"&gt;â€‹&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;hardcoded &lt;code&gt;maxlength&lt;/code&gt; attribute on the &lt;code&gt;comment_field&lt;/code&gt;, the markup here can be modified via the &lt;code&gt;comment_form_defaults&lt;/code&gt; filter (1)
&lt;/li&gt;&lt;li&gt;added &lt;code&gt;wp_get_comment_column_max_length()&lt;/code&gt; which returns the max column length for a given column name, and is filterable (2)
&lt;/li&gt;&lt;li&gt;added logic in &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; to return a WP_Error when the &lt;code&gt;comment_author&lt;/code&gt;, &lt;code&gt;comment_author_url&lt;/code&gt;, or &lt;code&gt;comment_content&lt;/code&gt; values exceed the max length of their columns
&lt;/li&gt;&lt;li&gt;added unit tests for the error conditions in &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;We could add hardcoded attributes like this to the two other comment form inputs.  Open to second opinions here.
&lt;/li&gt;&lt;li&gt;Is there a good way to convert characters to bytes?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21022 (Allow bcrypt to be enabled via filter for pass hashing) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Sat, 02 Jan 2016 01:47:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21022#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21022#comment:70/1451699221663424</guid>
      <description>&lt;p&gt;
Also consider the efforts involved in the two factor plan, insofar as to ensure email resets are working.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21022 (Allow bcrypt to be enabled via filter for pass hashing) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Sat, 02 Jan 2016 01:44:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21022#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21022#comment:69/1451699070083888</guid>
      <description>&lt;p&gt;
I agree that this is a UX thing, and giving solid reasoning and information to the user about why is important.
&lt;/p&gt;
&lt;p&gt;
If the password-hash is detectable (via length or header), then this is possible. 3 months ago, we didn't have PHP 7 getting adopted, or 4.4 with increased length password fields. This seems doable now, but maybe making the password hash mechanism more generic and pluggable is the way forward?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35282 (Wordpress Code Error) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 01:42:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35282#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35282#comment:4/1451698931262239</guid>
      <description>invalid: &lt;p&gt;
Hi @robfontano
&lt;/p&gt;
&lt;p&gt;
It appears that you may have run into an incomplete or failed upgrade - Your host should've helped you resolve both of these issues.
I'll send you an email shortly to get a few more details.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21022 (Allow bcrypt to be enabled via filter for pass hashing) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 02 Jan 2016 01:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21022#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21022#comment:68/1451698630808139</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd like to see what kind of stats we have on .org that can help us understand how often a site downgrades the PHP version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unfortunately our stats for this are not very good, it appears that there's probably a lot of sites which are switching between versions of PHP very often which is making our stats very noisy - I'm going to assume these are test or dev sites.. (I'm working on filtering these out so hopefully I'll have some better data to share in a week or so)
&lt;/p&gt;
&lt;p&gt;
I don't think a user would intentionally switch to another host which runs PHP 5.2, however someone who maintains WordPress sites might move a site onto their infrastructure, and run into that problem. I don't see this being an issue to that segment of users though.
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;password_hash()&lt;/code&gt; in 5.5+ could be a better idea than switching to bcrypt with phpass directly, however, with only ~35% of 4.3/4.4 sites running PHP 5.5/5.6/7 the user experience of a PHP downgrade (no matter how rare) would need to be far better than simply using phpass+bcrypt in PHP 5.3.7+. The number of hosts which are still PHP 5.4 is common enough that a user may switch to one.
&lt;/p&gt;
&lt;p&gt;
I do however wonder if the ideal user experience would simply be a login error with a link to WordPress.org &amp;amp; a password reset email, is something such as &lt;code&gt;Whoops! PHP can no longer decrypt your password, &amp;lt;a href="w.org"&amp;gt;find out why&amp;lt;/a&amp;gt; or &amp;lt;a&amp;gt;reset your password&amp;lt;/a&amp;gt;&lt;/code&gt; as user friendly as the rest of WordPress which just works?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10377.4.diff attached to Ticket #10377</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 02 Jan 2016 01:28:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10377/10377.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10377/10377.4.diff/1451698087143294</guid>
      <description>&lt;p&gt;
with new function wp_get_comment_column_max_length() and unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21022 (Allow bcrypt to be enabled via filter for pass hashing) updated</title>
      
        <dc:creator>mojorob</dc:creator>

      <pubDate>Sat, 02 Jan 2016 00:23:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21022#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21022#comment:67/1451694205604691</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21022#comment:66" title="Comment 66"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Actually, looking at this one again, I think it's been so long on this one that we should instead consider switching to the PHP 5.5+ password_hash() function, and including a compatibility library such as &lt;a class="ext-link" href="https://github.com/ircmaxell/password_compat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/ircmaxell/password_compat/&lt;/a&gt; for older PHP versions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I suggested the (PHP5.5+) native password_hash 3 months ago, and I still think it's the way to go. So I would agree with such a switch.
&lt;/p&gt;
&lt;p&gt;
All except one of the WordPress sites I look after are now running on PHP7, and still using the wp-bcrypt plugin due to what some might suggest is an excessive need to retain backward compatibility. Surely when it comes to password security a better approach is to keep up with standards for those who can. For those who can't/won't then include an alternative as suggested. As mentioned before when there is a downgrade of PHP on a live site, then it could be made to have minimal impact - any large sites would (should?) know of potential issues when downgrading PHP.
&lt;/p&gt;
&lt;p&gt;
Rather than simply having bcrypt in WP4.5, I'd suggest moving over to native password_hash in a manner suggested by Otto.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>