<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #17118 ([17552] can generate notices for meta_query) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17118#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17118#comment:2/1302649197269482</guid>
      <description>&lt;p&gt;
I was doing a wp_query-&amp;gt;set() on pre_get_posts, but avoided meta query. It triggered query_vars_changed but meta query wasn't set for some reason.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17118 ([17552] can generate notices for meta_query) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17118#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17118#comment:1/1302648977728094</guid>
      <description>&lt;p&gt;
The only possible reason I think of is unsetting &lt;code&gt;meta_query&lt;/code&gt; using &lt;code&gt;pre_get_posts&lt;/code&gt; filter... if that is the case then adding &lt;code&gt;meta_query&lt;/code&gt; in &lt;code&gt;WP_Query::fill_query_vars()&lt;/code&gt; will solve it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17119 (Comment moderation emails going to post authors AND admin) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:43:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17119#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17119#comment:1/1302648218475681</guid>
      <description>&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16705" title="#16705: defect (bug): Unclear wording: &amp;#34;An administrator must always approve the comment &amp;#34; (closed: fixed)"&gt;#16705&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:35:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:14/1302647732659305</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached patch moves the font declaration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17107.diff attached to Ticket #17107</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17107/17107.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17107/17107.diff/1302647621674359</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) reopened</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:13/1302647588366573</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17626" title="Stop themes and plugins from overriding the admin bar CSS, props ..."&gt;[17626]&lt;/a&gt; changed the "My sites" dropdown color.. see attached screenshot
&lt;/p&gt;
&lt;p&gt;
Reporduced on Chrome 10.0.648 on Ubuntu
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Screenshot.png attached to Ticket #17107</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17107/Screenshot.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17107/Screenshot.png/1302647475076767</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15238 (XML-RPC class should have better documentation) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:24:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15238#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15238#comment:8/1302647087934414</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17000 (Allow Pages to be set to Pending Status via XML-RPC) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17000#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17000#comment:6/1302646971040689</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16748 (wp_die() should return proper errors when called from xmlrpc) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16748#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16748#comment:10/1302646942616835</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17094 (Add support for fetching postFormats supported by the active theme) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:21:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17094#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17094#comment:5/1302646900342739</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17119 (Comment moderation emails going to post authors AND admin) created</title>
      
        <dc:creator>shacker</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:14:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17119/1302646444633947</guid>
      <description>&lt;p&gt;
In WP 3.1 and 3.1.1, comment approval emails  started being sent to both the site admin AND the post author - a departure from previous behavior. This is true even when the Author role is set to NOT have the comment_moderation privilege. And the author can click the link in the email to approve the comment.
&lt;/p&gt;
&lt;p&gt;
Sites with multiple authors may want to retain the old behavior, where all comment moderation has to go through the administrator first.
&lt;/p&gt;
&lt;p&gt;
Reading through other posts, It's unclear whether this new behavior is a feature or a bug, or how to disable it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17116 (Right-click paste not available in edit box - v3.1.1) updated</title>
      
        <dc:creator>GRM</dc:creator>

      <pubDate>Tue, 12 Apr 2011 22:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17116#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17116#comment:4/1302646333079786</guid>
      <description>&lt;p&gt;
hebbet
Sorry, I misunderstood your question. IE8 cache cleared. In Pages 'add new' right-click paste is available and working when in in 'Visual' mode. In Posts 'add new' right-click paste is still greyed out if the text box is empty. This problem was reported to me by one of my blogging team (I don't know what browser he is using) and I subsequently repeated it in my sandbox and on the live site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17111 (Remove unnecessary copy-by-reference in do_action()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 12 Apr 2011 21:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17111#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17111#comment:6/1302643727255010</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17111#comment:4" title="Comment 4"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Link, or it didn't happen. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, not in much of a drive to google.com/archive.org the reference. FWIW, though, I vaguely recall seeing as an example of good things to do in the codex somewhere between 2005 and 2006. Plus, in case memory serves me wrong, that was the only means of getting the expected behavior (with php4 objects) back then anyway.
&lt;/p&gt;
&lt;p&gt;
I'm arguably biased in some sense, since my own plugins called things that way back then. (Those versions are completely obsolete, so I don't care much; but pointing out why I'm raising the issue.)
&lt;/p&gt;
&lt;p&gt;
This probably may no longer be a necessity with php5 objects (since that is what the array with a reference was all about)... But the rational behind the original behavior shouldn't be forgotten. And I dare suggest that a few test cases might be needed before things do change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17118 ([17552] can generate notices for meta_query) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 21:16:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17118/1302643008100359</guid>
      <description>&lt;p&gt;
Just published a new post, and saw:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Undefined index: meta_query in /Users/nacin/Sites/beta/wp-includes/query.php on line 2469
Notice: Undefined index: meta_query in /Users/nacin/Sites/beta/wp-includes/query.php on line 2470
&lt;/pre&gt;&lt;p&gt;
Setting to 3.1.2 for now as I haven't yet evaluated if these notices are indicative of an actual bug being triggered.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16919 (style.css can sometimes conflict with custom background image) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 20:58:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16919#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16919#comment:9/1302641931479054</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16919 (style.css can sometimes conflict with custom background image) updated</title>
      
        <dc:creator>iandstewart</dc:creator>

      <pubDate>Tue, 12 Apr 2011 20:50:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16919#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16919#comment:8/1302641459124411</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For what it's worth, I've seen several complaints about themes not working correctly because the a theme has a default background image and a user finds that they can't select a custom background color. I've never seen any complaints where a user expected the background image to stay when they selected a color.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17114 (Blog URLs need canonical redirect functionality similar to post URLs) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 12 Apr 2011 20:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17114#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17114#comment:1/1302639620105938</guid>
      <description>&lt;p&gt;
Paths are case sensitive.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://example.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/&lt;/a&gt; and &lt;a class="ext-link" href="http://Example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://Example.com&lt;/a&gt; are same but &lt;a class="ext-link" href="http://example.com/A"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/A&lt;/a&gt; and &lt;a class="ext-link" href="http://example.com/a"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/a&lt;/a&gt; are not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17116 (Right-click paste not available in edit box - v3.1.1) updated</title>
      
        <dc:creator>hebbet</dc:creator>

      <pubDate>Tue, 12 Apr 2011 20:13:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17116#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17116#comment:3/1302639188918896</guid>
      <description>&lt;p&gt;
there are two different types of postings in wordpress. one is page (for static stuff like contact form) the other is post. that is why i asked.
&lt;/p&gt;
&lt;p&gt;
using chrome 10 and Firefox on windows and ubuntu i can paste via right click menu (both with wordpress 3.1.1
&lt;/p&gt;
&lt;p&gt;
Can you clear the cache of your internet explorer and retest it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") updated</title>
      
        <dc:creator>JDTrower</dc:creator>

      <pubDate>Tue, 12 Apr 2011 19:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:16/1302637208758806</guid>
      <description>&lt;p&gt;
In my attached patch, I updated every instance of "Error:&amp;#34; to be &amp;#34;ERROR:&amp;#34;  In most places, I wrapped &amp;#34;ERROR" in strong tags.  However, there were a few places that were unclear as to whether or not HTML tags could be used, for example:
wp-admin/includes/class-ftp.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;SendMSG("ERROR: Cannot connect to remote host \"".$this-&amp;gt;_fullhost." :".$this-&amp;gt;_port."\"");
&lt;/pre&gt;&lt;p&gt;
wp-admin/includes/class-wp-importer.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;fwrite( STDERR, "ERROR: can not determine blog_id from $blog_id\n" );
&lt;/pre&gt;&lt;p&gt;
wp-includes/class-snoopy.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;error = "ERROR: cURL could not retrieve the document, error $return.";
&lt;/pre&gt;&lt;p&gt;
wp-includes/ms-functions.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;return __( 'ERROR: Site URL already taken.' );
&lt;/pre&gt;&lt;p&gt;
I also brought up on IRC about whether words like "Warning" and "Caution" (maybe "Notice" as well) needed to be in all caps for consistency purposes.  JJJ responded with "For some reason, I don't think Warning or Caution should be capitalized. I feel like those words alone already mean something important, and capitalizing them runs the risk of overemphasizing them."
&lt;/p&gt;
&lt;p&gt;
If the examples above can include strong tags, I'll add them in and recreate the patch.  Also, if we decide to capitalize words like "Warning" and "Caution" I'll create a patch that does that.
&lt;/p&gt;
&lt;p&gt;
This patch, capitalizes the word Error in the code.  If we want to use CSS text-transform: uppercase I'll incorporate that method.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>t15887-Capitalize-ERROR.diff attached to Ticket #15887</title>
      
        <dc:creator>JDTrower</dc:creator>

      <pubDate>Tue, 12 Apr 2011 19:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15887/t15887-Capitalize-ERROR.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15887/t15887-Capitalize-ERROR.diff/1302636343944671</guid>
      <description>&lt;p&gt;
Let's be consistent in ERROR
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17116 (Right-click paste not available in edit box - v3.1.1) updated</title>
      
        <dc:creator>GRM</dc:creator>

      <pubDate>Tue, 12 Apr 2011 19:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17116#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17116#comment:2/1302635973334445</guid>
      <description>&lt;p&gt;
hebbet
I don't understand. In my bug report I said the problem occurs in the edit box (when in Visual mode) on the 'add new' page which is where a post is created.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17116 (Right-click paste not available in edit box - v3.1.1) updated</title>
      
        <dc:creator>hebbet</dc:creator>

      <pubDate>Tue, 12 Apr 2011 19:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17116#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17116#comment:1/1302635178861174</guid>
      <description>&lt;p&gt;
does that also happens when creating posts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17111 (Remove unnecessary copy-by-reference in do_action()) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Tue, 12 Apr 2011 17:05:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17111#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17111#comment:5/1302627905014680</guid>
      <description>&lt;p&gt;
I've seen &lt;code&gt;do_action( 'whatever', &amp;amp;$this );&lt;/code&gt; but not &lt;code&gt;do_action( 'something', array( &amp;amp;$this ) );&lt;/code&gt;:
&lt;/p&gt;
&lt;p&gt;
If a plugin somewhere &lt;em&gt;does&lt;/em&gt; pass &lt;code&gt;array( &amp;amp;$this )&lt;/code&gt;, how bad would things break?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16748-2.diff attached to Ticket #16748</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Tue, 12 Apr 2011 16:11:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16748/16748-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16748/16748-2.diff/1302624702467367</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16748 (wp_die() should return proper errors when called from xmlrpc) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Tue, 12 Apr 2011 16:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16748#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16748#comment:9/1302624685606492</guid>
      <description>&lt;p&gt;
I like your solution, and I think the location is accurate since we're hooking in to the &lt;code&gt;wp_die_handler&lt;/code&gt; filter.  The only thing I would recommend is changing the method name to &lt;code&gt;xmlrpc_die_handler()&lt;/code&gt; for consistency (since the default is &lt;code&gt;_default_wp_die_handler&lt;/code&gt;).  I'd hate for some unsuspecting developer to call &lt;code&gt;xmlrpc_wp_die()&lt;/code&gt; directly rather than &lt;code&gt;wp_die()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Attaching a slightly modified patch that changes the method name and uses a simpler filter return.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17094 (Add support for fetching postFormats supported by the active theme) updated</title>
      
        <dc:creator>daniloercoli</dc:creator>

      <pubDate>Tue, 12 Apr 2011 14:55:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17094#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17094#comment:4/1302620135540132</guid>
      <description>&lt;p&gt;
+1 I like your proposed solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17111 (Remove unnecessary copy-by-reference in do_action()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 12 Apr 2011 14:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17111#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17111#comment:4/1302618615484551</guid>
      <description>&lt;p&gt;
Link, or it didn't happen. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17117 (WordPress serves up wrong MIME type for Office 2007 downloads) created</title>
      
        <dc:creator>LafayetteNuke</dc:creator>

      <pubDate>Tue, 12 Apr 2011 14:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17117/1302618295933618</guid>
      <description>&lt;p&gt;
When serving up hosted files for download, WordPress assigns the wrong MIME type for Office 2007. For example, docx files are served up as "application/msword" instead of "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
&lt;/p&gt;
&lt;p&gt;
As a result, browsers end up interpreting the files in different ways. Some, like IE8 on Windows 7 or Safari on Mac OS X 10.6, will add a ".doc" to the end of the file name. Others (Firefox, Chrome) will see the Office 98-2003 MIME type, but keep the existing file name. The iPad displays a "Unknown file type" error. The issue is not limited to Word 2007 files however; all Office 2007 files (pptx, xlsx) appear to have the same issue.
&lt;/p&gt;
&lt;p&gt;
There is a forum discussion for this issue:
&lt;a class="ext-link" href="http://wordpress.org/support/topic/docx-files-and-functionsphp?replies=9"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/docx-files-and-functionsphp?replies=9&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It's possible this bug was introduced here:
&lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/9662"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/changeset/9662&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The proposed change is to tweak the MIME declarations in wp-includes/functions.php to reflect the proper MIME type information.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17116 (Right-click paste not available in edit box - v3.1.1) created</title>
      
        <dc:creator>GRM</dc:creator>

      <pubDate>Tue, 12 Apr 2011 13:27:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17116/1302614853607340</guid>
      <description>&lt;p&gt;
Updated from 3.0.? to 3.1.1 on Sunday. Now on the 'add new' page, when in Visual mode (HTML mode is fine) it is no longer possible to right-click paste into an empty edit box (the option is greyed out). Adding a character to the edit box restores the right-click paste option and Crtl+v still works. This is with IE8, I'm unable to check other browsers.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16520 (When selecting more than 10 plugins to up date Update not working) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 12 Apr 2011 13:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16520#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16520#comment:8/1302614628110577</guid>
      <description>&lt;p&gt;
It should be bailing with a message along the lines of "Sorry, nothing was selected" or redirecting you back to the updates page.. As as far as WordPress will be able to tell, thats exactly what would've happened..
&lt;/p&gt;
&lt;p&gt;
I do agree, the bulk upgrader shouldn't be displaying the way it does provided no input.
&lt;/p&gt;
&lt;p&gt;
The "Success" message is, in many ways true, It's succeeded in completing the tasks provided (None!). See also: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/16817" title="#16817: defect (bug): All updates have been completed (new)"&gt;#16817&lt;/a&gt; - Success is shown when an individual upgrade failed, it's not refering to the overall success of the items, rather the success of itself in the script not timing out - that needs to change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17113 (Core should warn when comment spam and caching plugins are not active) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Tue, 12 Apr 2011 13:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17113#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17113#comment:3/1302614010427704</guid>
      <description>&lt;p&gt;
What about a site where you have to be registered, and people are only manually registered by Admin?  (For a club where only members are registered for example).
&lt;/p&gt;
&lt;p&gt;
No need for Spam plugin there, is there?
&lt;/p&gt;
&lt;p&gt;
It goes without saying to turn off the nag if comments are turned off.... ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16520 (When selecting more than 10 plugins to up date Update not working) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Tue, 12 Apr 2011 13:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16520#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16520#comment:7/1302613601597735</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16520#comment:6" title="Comment 6"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I unfortunately can't see anything that WordPress itself can do about this, It's a server configuration issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is it possible for WordPress to figure out that there's a problem, so at the least it can give a useful error message instead of a false "Success"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") updated</title>
      
        <dc:creator>doktorbro</dc:creator>

      <pubDate>Tue, 12 Apr 2011 12:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:15/1302612529444832</guid>
      <description>&lt;p&gt;
Dion, yes, &lt;em&gt;they&lt;/em&gt; need education. But &lt;em&gt;you&lt;/em&gt; can set a good &lt;em&gt;example&lt;/em&gt; by writing correct English and using CSS for markup &lt;em&gt;wherever&lt;/em&gt; possible.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
HTML Tags may be striped, or displayed inline in some locations, it will all come down to the particular string, and where'd being used; In general, you can include HTML in translated strings, however, if it's being output as part of a error message (for example in XML-RPC) the client may not support HTML.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand the complexity of the wordpress. But in cases like
&lt;/p&gt;
&lt;pre class="wiki"&gt;'&amp;lt;strong&amp;gt;ERROR&amp;lt;/strong&amp;gt;: Enter a username or e-mail address.'
&lt;/pre&gt;&lt;p&gt;
the message appears as HTML return only. And you still put markup inside the word itself. This is wrong.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So if something is being escaped that shouldn't be, You need to raise a bug about the exact string and where it's occuring to allow us to modify the code in question to allow translations to happen properly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I promise I will raise a bug next time I see it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16984 (WP Importer doesn't properly remap resized images) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 12 Apr 2011 11:37:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16984#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16984#comment:2/1302608275724126</guid>
      <description>fixed: &lt;p&gt;
Closing this one as fixed now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #17115 (Publishing an empty post results in success) created</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Tue, 12 Apr 2011 11:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17115/1302607970494993</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Steps to reproduce:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to Add New post screen
&lt;/li&gt;&lt;li&gt;Publish post
&lt;/li&gt;&lt;li&gt;Success message is displayed with link to initial auto-draft of post
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The issue can be traced back to the &lt;code&gt;editpost&lt;/code&gt; switch case in &lt;code&gt;post.php&lt;/code&gt; (line 204), which calls &lt;code&gt;edit_post()&lt;/code&gt; and &lt;code&gt;redirect_post()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;edit_post()&lt;/code&gt; saves any meta values passed with the post to the auto-draft, which isn't necessarily desirable, and returns the auto-draft post ID.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;redirect_post()&lt;/code&gt; then defaults to status message code 6 which incorrectly reports success in publishing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5389 (Suspend and resume object cache) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 12 Apr 2011 10:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5389#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5389#comment:11/1302604782015648</guid>
      <description>&lt;p&gt;
Was thinking about this again and two ideas for slightly different approaches.
&lt;/p&gt;
&lt;p&gt;
Could use a filter instead of a global: &lt;code&gt;if ( apply_filters( 'suspend_caching', false ...&lt;/code&gt;. Downside being more overhead in a filter than another check.
&lt;/p&gt;
&lt;p&gt;
Or take Ryan's old patch, move the functions out of cache.php and still allow gets. Therefore not introducing a new global, reusing &lt;code&gt;$wp_object_cache&lt;/code&gt; instead. I prefer this approach.
&lt;/p&gt;
&lt;p&gt;
Will re-test and upload patch later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12738 (Notice Helper) updated</title>
      
        <dc:creator>andddd</dc:creator>

      <pubDate>Tue, 12 Apr 2011 10:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12738#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12738#comment:11/1302604697674330</guid>
      <description>&lt;p&gt;
westi, we need this because every plugin has this function and it kinda frustrating to copy-n-paste this stuff from plugin to plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17111 (Remove unnecessary copy-by-reference in do_action()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 12 Apr 2011 10:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17111#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17111#comment:3/1302603856630321</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
unlikely that plugins call do_action( 'whatever', array( &amp;amp;$this ) );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If memory serves, that unlikely call used to be an documented best practice a few years back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16920 (PHP5-Port: Take out unnecessary compat functions from diverse files) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 09:21:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16920#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16920#comment:11/1302600075707598</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17632" title="Remove more E_RECOVERABLE_ERROR checks. props duck_, see #16920."&gt;[17632]&lt;/a&gt;) Remove more E_RECOVERABLE_ERROR checks. props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16920" title="#16920: defect (bug): PHP5-Port: Take out unnecessary compat functions from diverse files (closed: fixed)"&gt;#16920&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17632]: Remove more E_RECOVERABLE_ERROR checks. props duck_, see #16920.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 09:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17632</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17632/1302600073539916</guid>
      <description>&lt;p&gt;
Remove more E_RECOVERABLE_ERROR checks. props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16920" title="#16920: defect (bug): PHP5-Port: Take out unnecessary compat functions from diverse files (closed: fixed)"&gt;#16920&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 12 Apr 2011 09:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:14/1302599955006595</guid>
      <description>&lt;p&gt;
The WordPress files are in (US) English, This means all strings inside WordPress will be in a US English format.
&lt;/p&gt;
&lt;p&gt;
Translations can do whatever they please with these strings.
&lt;/p&gt;
&lt;p&gt;
A Translation can already convert '&lt;code&gt;&amp;lt;strong&amp;gt;ERROR:&amp;lt;/strong&amp;gt; something&lt;/code&gt;' into '&lt;code&gt;something &amp;lt;em&amp;gt;(error)&amp;lt;/em&amp;gt;&lt;/code&gt;' if thats how their locale treats messages with that tone.
&lt;/p&gt;
&lt;p&gt;
I see no reason for anything other than standardising the way error's are referred to in strings that needs to be done here to support other languages...
&lt;/p&gt;
&lt;p&gt;
If the problem is that translations are being incorrectly done due to translators not understanding how to translate English text into whatever language they're translating it to.. then &lt;em&gt;they need&lt;/em&gt; education.. Monkey, ape, or super-human being..
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For now, if I use &amp;lt;strong&amp;gt; in some msgid's, wordpress displays the CSS-Tags itself inside the warning
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
HTML Tags may be striped, or displayed inline in some locations, it will all come down to the particular string, and where'd being used; In general, you can include HTML in translated strings, however, if it's being output as part of a error message (for example in XML-RPC) the client may not support HTML.
&lt;/p&gt;
&lt;p&gt;
We may also be over-escaping data in some locations, We do this for security reasons most of the time, So if something is being escaped that shouldn't be, &lt;strong&gt;You need to raise a bug about the exact string and where it's occuring&lt;/strong&gt; to allow us to modify the code in question to allow translations to happen properly.
&lt;/p&gt;
&lt;p&gt;
I'm sorry that I'm completely against your suggestions here, my only reason is that I believe that there is a better way to achieve it in this case than modifying the current practices...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16920.E_RECOVERABLE_ERROR.diff attached to Ticket #16920</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 12 Apr 2011 09:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16920/16920.E_RECOVERABLE_ERROR.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16920/16920.E_RECOVERABLE_ERROR.diff/1302599879197049</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16920 (PHP5-Port: Take out unnecessary compat functions from diverse files) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 12 Apr 2011 09:15:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16920#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16920#comment:10/1302599737284904</guid>
      <description>&lt;p&gt;
Three other instances of E_RECOVERABLE_ERROR checks. Patch attached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12738 (Notice Helper) updated</title>
      
        <dc:creator>john316media</dc:creator>

      <pubDate>Tue, 12 Apr 2011 08:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12738#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12738#comment:10/1302597629653397</guid>
      <description>&lt;p&gt;
As is each message I need to show requires 4 lines of code
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('admin_notices', 'some_function_name');
function some_function_name() {
    echo '&amp;lt;div id="message" class="updated"&amp;gt;&amp;lt;p&amp;gt;Hello World!&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;';
}
&lt;/pre&gt;&lt;p&gt;
At its simplest, this way to make the same message all it would take is
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_admin_notice('updated', 'Hello World!');
&lt;/pre&gt;&lt;p&gt;
What looks simpler to you?  4 lines becomes 1 line, multiply this by the number fo messages a given plugin needs to display and thats alot of extra typing saved for the plugin authoer, makes things easier and does this really overbloat core?  I personally don't think so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16980 (Empty Values are ignored by class-ixr.php) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Tue, 12 Apr 2011 08:35:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16980#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16980#comment:17/1302597319502392</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
there is a clear and obvious work around: always include a type.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Most XML-RPC clients don't let you control that. You just supply them the data and they produce the XML, which in this case wordpress is handling incorrectly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12738 (Notice Helper) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 12 Apr 2011 08:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12738#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12738#comment:9/1302596479089017</guid>
      <description>&lt;p&gt;
I really don't see why we need this.
&lt;/p&gt;
&lt;p&gt;
Why do we need to store all these notices in another global rather than plugins hooking in a function as they have always done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17008 (nepude) updated</title>
      
        <dc:creator>Asep Saiful Bahri</dc:creator>

      <pubDate>Tue, 12 Apr 2011 08:02:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17008#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17008#comment:2/1302595373587519</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17113 (Core should warn when comment spam and caching plugins are not active) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 12 Apr 2011 07:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17113#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17113#comment:2/1302592569992584</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not sure how this helps.
&lt;/p&gt;
&lt;p&gt;
Rather than nagging we should be encouraging.
&lt;/p&gt;
&lt;p&gt;
Add a whole api like this just makes it look more like these things should be bundled in core.
&lt;/p&gt;
&lt;p&gt;
80-90% of WP installs do not need caching.
&lt;/p&gt;
&lt;p&gt;
Spam protection is a different beast but we still should be encouraging not nagging whatever we do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16996 (oEmbed: Allow custom arguments to be specified) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Tue, 12 Apr 2011 06:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16996#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16996#comment:13/1302591505925074</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") updated</title>
      
        <dc:creator>doktorbro</dc:creator>

      <pubDate>Tue, 12 Apr 2011 06:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:13/1302591039579660</guid>
      <description>&lt;p&gt;
Let me show you my simple solution. Save the code below as HTML file:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="my"&amp;gt;
&amp;lt;head&amp;gt;
	&amp;lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&amp;gt;
	&amp;lt;title&amp;gt;Error international&amp;lt;/title&amp;gt;
	&amp;lt;style type="text/css"&amp;gt;
		strong:lang(en) { font-weight: normal; text-transform: uppercase; }
		strong:lang(he) { font-weight: bold; }
		strong:lang(my) { font-weight: normal; color: red; }
	&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
	&amp;lt;div lang="en"&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Error:&amp;lt;/strong&amp;gt; English style is uppercase.&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;div lang="he"&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Error:&amp;lt;/strong&amp;gt; Hebrew style is bold.&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;div&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Error:&amp;lt;/strong&amp;gt; My style is red.&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;p&gt;
As you can see in Firefox and Chrome, the attribute &lt;em&gt;lang&lt;/em&gt; controls the style of the element &lt;em&gt;strong&lt;/em&gt;. Note the line 2 where I define the language of the whole document. That affects my red error style only.
&lt;/p&gt;
&lt;p&gt;
Now we have to do 3 things:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Use CSS element &lt;em&gt;strong&lt;/em&gt; to mark important words, like “Error” or “Warning”.
&lt;/li&gt;&lt;li&gt;Define CSS depending on language of the document.
&lt;/li&gt;&lt;li&gt;Make sure display procedures are ready for CSS.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17114 (Blog URLs need canonical redirect functionality similar to post URLs) created</title>
      
        <dc:creator>amattie</dc:creator>

      <pubDate>Tue, 12 Apr 2011 06:29:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17114/1302589769845565</guid>
      <description>&lt;p&gt;
Take a look at these two URLs:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.nileguide.com/destination/blog/amsterdam/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.nileguide.com/destination/blog/amsterdam/&lt;/a&gt;
&lt;a class="ext-link" href="http://www.nileguide.com/destination/blog/Amsterdam/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.nileguide.com/destination/blog/Amsterdam/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The first URL loads up the Amsterdam blog home while the second URL loads up a post on the Amsterdam blog that starts with the word "amsterdam." The reason for this is because WordPress currently uses a case-sensitive match on &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class-wp.php#L164"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;line 164 in class-wp.php&lt;/a&gt;. Since a case-sensitive match of a form of home_url() isn't found in the requested path, the request URL is never set up right. redirect_guess_404_permalink() ultimately ends up redirecting the request in this case.
&lt;/p&gt;
&lt;p&gt;
Changing the regex match to be a case-insensitive match on that line fixes the problem, but it also allows that blog to then be loaded from multiple URLs. Breaking canonical URLs like that would be bad obviously.
&lt;/p&gt;
&lt;p&gt;
It seems that functionality needs to be added to not only handle the canonical URLs for pages / posts, but also for blogs. I'm not familiar enough with that code to attempt a fix, but I wanted to bring it up anyway as this seems unintended.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17065 (Independent ASC/DESC in multiple ORDER BY statement.) updated</title>
      
        <dc:creator>linuxologos</dc:creator>

      <pubDate>Tue, 12 Apr 2011 05:36:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17065#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17065#comment:6/1302586598517973</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17113 (Core should warn when comment spam and caching plugins are not active) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 04:04:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17113#comment:1/1302581042721854</guid>
      <description>&lt;p&gt;
I'd also be willing to drop the caching plugins suggestion for now. I think spam is an easier problem to solve, and more people need help with spam than with caching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17113 (Core should warn when comment spam and caching plugins are not active) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 03:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17113/1302579705965631</guid>
      <description>&lt;p&gt;
WordPress should implement a feature registration system for two types of plugins that every site should have: plugins that guard against comment spam, and plugins that implement caching.
&lt;/p&gt;
&lt;p&gt;
When a plugin does not implement such a feature, administrators should be warned with a persistent admin notice.
&lt;/p&gt;
&lt;p&gt;
The notice should then link to the plugin installation screen, to a tab that specifically shows plugins specifically in this category.
&lt;/p&gt;
&lt;p&gt;
Plugins will need to implement this two-fold. One, it would be a function call, akin to add_theme_support(). Two, the plugin directory will keep a curated list of plugins for each category. Registering support is not enough to actually be returned in a search -- the plugin needs to be blessed.
&lt;/p&gt;
&lt;h2 id="SomeReasoning"&gt;Some Reasoning&lt;/h2&gt;
&lt;p&gt;
What this does:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It helps users, who often struggle with comment spam (often not even seeing Akismet is there) and often worse, with caching, when a site gets hammered. This shows them the way in clear, explicit terms.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;It helps with a perception issue that WordPress does't care about caching in core, or worse, that WordPress can't scale. Even though we've left it out of core for good reason, we still owe it to our users to solve the problem. (The same argument can be made for spam -- just because it shouldn't be core code doesn't mean it's not our responsibility.)
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Implementation"&gt;Implementation&lt;/h2&gt;
&lt;p&gt;
How I see this API working:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_plugin_support( 'comment-spam', __FILE__ );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_plugin_support( 'caching', __FILE__ );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
And potentially with special keywords, but I don't know what we'd necessarily leverage these for:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_plugin_support( 'caching', __FILE__, array( 'disk-caching', 'memory-caching', 'object-caching' ) );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
A plugin would not be allowed to specify a tag in the readme for the plugins directory. It would be a tag manually applied by the core team after petition and review.
&lt;/p&gt;
&lt;p&gt;
There's one other consideration: An inactive but installed plugin should ideally be included in the notice, or be pushed to the top of the search results when you click through. Though this is part of a separate issue of better differentiating which plugins are already installed when searching for plugins.
&lt;/p&gt;
&lt;p&gt;
Should the notice be dismissible? Probably, but maybe the comments one should be persistent anyway on edit-comments.php and possibly both under Right Now in the dashboard. Maybe it can even start in the Right Now area, and after the installation is older than X days, it becomes a more visible nag. (Prevents overwhelming a user upon installation, especially since spam and traffic would be low then.) These are UX decisions that would be made upon agreeing to implement the feature.
&lt;/p&gt;
&lt;h2 id="WhenandHow"&gt;When and How&lt;/h2&gt;
&lt;p&gt;
Implementing this consists of a decision to do it, deciding on basic user experience (particularly language and appearance), and adding add_plugin_support(). We'll also need to do some wp.org work, specifically to convert the tags to be special cases. (In the plugin installer, we can simply link to the tag, searched.)
&lt;/p&gt;
&lt;p&gt;
I'll be proposing that this be added to the dev chat agenda for discussion. It needs to be done early in a dev cycle, in order to alert specific plugin authors to roll these into their plugins now, to prevent issues that would arise from failing to detect an active plugin.
&lt;/p&gt;
&lt;p&gt;
Should this be done in 3.2? Well, this idea has been floated around quite a bit. It would lay some of the desired groundwork for eventually no longer shipping with bundled plugins. I've already made the case that the actual implementation is negligible work. And importantly, with regards to project scope, it squarely fits under our broad goal of "faster." Not only do we want to make the admin faster, but we want to make sure your site is fast too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17112 (Remove default-embeds.php) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 03:27:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17112/1302578868982367</guid>
      <description>&lt;p&gt;
default-embeds.php is a file loaded conditionally, which triggers an extra sysopen call. This also goes for default-widgets.php, but that's a much larger file.
&lt;/p&gt;
&lt;p&gt;
On the other hand, if we move the single function, wp_embed_handler_googlevideo(), to wp-includes/media.php, we can improve some performance. I don't think we plan to add too many more default embeds, so this seems pretty safe.
&lt;/p&gt;
&lt;p&gt;
We can still only call wp_embed_register_handler() if the load_default_embeds filter returns true (found in wp_maybe_load_embeds(), attached to plugins_loaded).
&lt;/p&gt;
&lt;p&gt;
Only issue could be someone returning false through the filter then treating it as a pluggable function, stealing its name, but I doubt we'd see that anywhere. At worst, we could add a function_exists() check (still better than what we have) or simply rename the function, as embed handlers are identified by a unique ID, not the function name.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17110 (apply_filters() performance) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Tue, 12 Apr 2011 01:52:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17110#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17110#comment:3/1302573142579022</guid>
      <description>&lt;p&gt;
Above my head to do it myself, but since apply_filters_ref_array() is almost identical, could this patch be used in that function as well (but slightly modified if needed)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>test-do-action.php attached to Ticket #17111</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 12 Apr 2011 01:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17111/test-do-action.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17111/test-do-action.php/1302571372438382</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17111 (Remove unnecessary copy-by-reference in do_action()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 12 Apr 2011 01:17:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17111#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17111#comment:2/1302571044459547</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It basically transformed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array( array( &amp;amp;$this ), 'foo' )
&lt;/pre&gt;&lt;p&gt;
into
&lt;/p&gt;
&lt;pre class="wiki"&gt;array( &amp;amp;$this, 'foo' )
&lt;/pre&gt;&lt;p&gt;
for the callback hooked to that action.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17111/conservative.17111.diff" title="Attachment 'conservative.17111.diff' in Ticket #17111"&gt;conservative.17111.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17111/conservative.17111.diff" title="Download"&gt;​&lt;/a&gt; simply removes the reference.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17111/17111.diff" title="Attachment '17111.diff' in Ticket #17111"&gt;17111.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17111/17111.diff" title="Download"&gt;​&lt;/a&gt; removes the check entirely. Reasons:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;not a useful behaviour anymore
&lt;/li&gt;&lt;li&gt;WP core doesn't use it anywhere; instead, it uses the more flexible do_action_ref_array()
&lt;/li&gt;&lt;li&gt;unlikely that plugins call &lt;code&gt;do_action( 'whatever', array( &amp;amp;$this ) );&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;speed improvement
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>17111.diff attached to Ticket #17111</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 12 Apr 2011 01:07:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17111/17111.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17111/17111.diff/1302570474864957</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>conservative.17111.diff attached to Ticket #17111</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 12 Apr 2011 01:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17111/conservative.17111.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17111/conservative.17111.diff/1302570326707369</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17111 (Remove unnecessary copy-by-reference in do_action()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 12 Apr 2011 01:00:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17111#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17111#comment:1/1302570021881428</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17111 (Remove unnecessary copy-by-reference in do_action()) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 12 Apr 2011 00:59:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17111/1302569966166686</guid>
      <description>&lt;p&gt;
There's this weird check in do_action():
&lt;/p&gt;
&lt;pre class="wiki"&gt;	if ( is_array($arg) &amp;amp;&amp;amp; 1 == count($arg) &amp;amp;&amp;amp; isset($arg[0]) &amp;amp;&amp;amp; is_object($arg[0]) ) // array(&amp;amp;$this)
		$args[] =&amp;amp; $arg[0];
&lt;/pre&gt;&lt;p&gt;
It was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4177" title="do_action and apply_filters arg passing sanity from mdawaffe. fixes #3116"&gt;[4177]&lt;/a&gt;, probably to fix PHP4 nastiness.
&lt;/p&gt;
&lt;p&gt;
But, since we're on PHP5 now, the copy-by-reference is not needed anymore.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17110 (apply_filters() performance) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 12 Apr 2011 00:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17110#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17110#comment:2/1302568168103201</guid>
      <description>&lt;p&gt;
Nice catch.
&lt;/p&gt;
&lt;p&gt;
Could this be applied to do_action() as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10384 (Make IIS Permalink support enabled based on capability not on version ...) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Tue, 12 Apr 2011 00:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10384#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10384#comment:11/1302567553547835</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin.diff attached to Ticket #12738</title>
      
        <dc:creator>john316media</dc:creator>

      <pubDate>Tue, 12 Apr 2011 00:08:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12738/plugin.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12738/plugin.diff/1302566885238021</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12738 (Notice Helper) updated</title>
      
        <dc:creator>john316media</dc:creator>

      <pubDate>Tue, 12 Apr 2011 00:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12738#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12738#comment:8/1302566727383110</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I opted to include a function that handles adding the message to the global array for the plugin author, to make their life easy.  Though thats just one function and can easily be removed if necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17110 (apply_filters() performance) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 23:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17110#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17110#comment:1/1302563885509348</guid>
      <description>&lt;p&gt;
On my test setup, that patch eliminates 2886 calls to array_pop() as well as the corresponding assignments and reduces time spent in apply_filters() by almost 50%.  Most filters, like the often called gettext one, have nothing hooked to them so the pushing and popping is a waste of time.  For cases where there is hook on the filter, the patch adds one isset check.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11697 (Keep private posts in the admin area / Was: Make private posts a ...) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 11 Apr 2011 23:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11697#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11697#comment:23/1302563701659126</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>apply_filters.diff attached to Ticket #17110</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 23:13:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17110/apply_filters.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17110/apply_filters.diff/1302563619497902</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17110 (apply_filters() performance) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 23:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17110/1302563596587980</guid>
      <description>&lt;p&gt;
Pushing and popping to the wp_current_filter array is not necessary if there is not a function hooked to the filter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12738 (Notice Helper) updated</title>
      
        <dc:creator>john316media</dc:creator>

      <pubDate>Mon, 11 Apr 2011 23:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12738#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12738#comment:7/1302563450735351</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12738 (Notice Helper) updated</title>
      
        <dc:creator>john316media</dc:creator>

      <pubDate>Mon, 11 Apr 2011 23:10:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12738#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12738#comment:6/1302563440155218</guid>
      <description>&lt;p&gt;
THe one issue with this is you still have to hook into admin_notices and have a function that calls this helper function to generate the message.  What I do in my plugins is I create a global array, each element of the array is then another array consisting of the message type "updated" or "error" the the message.  I then hook into admin_noteces once and itterate though the array echoing out the appropriatie divs and messages.  Perhaps that might be something that could be implimented, then its as simple as
&lt;/p&gt;
&lt;pre class="wiki"&gt;global $admin_notices;
$admin_notices[] = array('updated', 'Hello World!');
&lt;/pre&gt;&lt;p&gt;
then core would handle the rest.  Or you could have a function that you pass the message type and the message content into and it could add it to the global array for the developer than it's as easy as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_admin_notice('updated', 'Hello World!');
&lt;/pre&gt;&lt;p&gt;
If this is something you think would work, I can attach a diff of the code I use in my plugins to do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 11 Apr 2011 23:09:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:12/1302563398192478</guid>
      <description>&lt;p&gt;
If there are any places where ERROR is used at the start of a string without strong tags, then yes, it does need to be changed to be consistent. I'd also argue that any which use "Error" should also be updated to be consistent.
&lt;/p&gt;
&lt;p&gt;
I see one case in the attached patch where &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; is not included.
&lt;/p&gt;
&lt;p&gt;
My vote would be to standardise on &lt;code&gt;ERROR&lt;/code&gt;, I'm sure we do use &lt;code&gt;Error&lt;/code&gt; in a few locations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 11 Apr 2011 23:08:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:46/1302563288104316</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16684 (PHP5 Performance improvement for wptexturize) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 22:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16684#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16684#comment:4/1302561274090596</guid>
      <description>&lt;p&gt;
5000 runs with performance.php yields numbers like 10.505 seconds without the patch and 9.510 with.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>performance.php attached to Ticket #16684</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 22:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16684/performance.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16684/performance.php/1302561140931713</guid>
      <description>&lt;p&gt;
Quick microtime perfomance test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 22:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:20/1302560092421425</guid>
      <description>&lt;p&gt;
What about users that have permanently disabled TinyMCE in their profile settings? You would then be forced to load it all the time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 22:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:19/1302559657180353</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16695#comment:18" title="Comment 18"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"maybe build-in resizing of the textareas" - most modern browsers already do that automatically for all textareas, so I don't think it's worth wasting time on that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True but we want it saved in a cookie so we can size the Visual editor when switching and resize it on page load.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't really undertand which functionality you are refering to...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The whole HTML editor functionality. TinyMCE can be hidden on demand exposing the textarea but is still active in the background, so a plugin that adds buttons for easy entering of HTML tags there would work nicely.
&lt;/p&gt;
&lt;p&gt;
I'll be adding the functions from our editor.js in a TinyMCE plugin anyways, no need to load a separate file for them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 21:48:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:18/1302558506472869</guid>
      <description>&lt;p&gt;
"maybe build-in resizing of the textareas" - most modern browsers already do that automatically for all textareas, so I don't think it's worth wasting time on that.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm even debating the possibility of just adding this functionality into a TinyMCE plugin for the main WP editor and keeping quicktags.js for places where we need limited HTML code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't really undertand which functionality you are refering to. If it's rearanging buttons, I would consider it plugin territory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 21:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:11/1302558167117897</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree that if we want to emphasize the error, it's better to use CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17109 (Add post-success action hooks to edit/create/delete calls.) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 11 Apr 2011 21:23:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17109#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17109#comment:3/1302556998507332</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17109#comment:2" title="Comment 2"&gt;josephscott&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In order to potentially modify the data before returning it shouldn't we be filtering instead and returning the filter variable?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a good question.  But I would say no.
&lt;/p&gt;
&lt;p&gt;
For many of these calls, the only thing returned at this stage is the ID or a boolean representing whether or not the call succeeded.  Adding a filter doesn't add any value, but adding an action hook provides the user with a way to further manipulate data or act on the content of a successful call after it's completed.  But there's no further output at this stage to be filtered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 21:19:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:17/1302556768966270</guid>
      <description>&lt;p&gt;
This is an interesting project and the patches look good. Although I don't think it only needs "some refactoring". IMHO it needs full rewriting.
&lt;/p&gt;
&lt;p&gt;
For example it would be nice to have init options similar to the way TinyMCE works, i.e. an init object that overrides the internal defaults: instances can be added to several textareas by ID (or even CSS class), buttons can be enabled|disabled|rearranged, the toolbar can start hidden, etc. Also a clear documented API for extending the editor (well, adding buttons), maybe build-in resizing of the textareas, some basic CSS overrides from the JS like font and background color, font face, line spacing, etc.
&lt;/p&gt;
&lt;p&gt;
I'm even debating the possibility of just adding this functionality into a TinyMCE plugin for the main WP editor and keeping quicktags.js for places where we need limited HTML code.
&lt;/p&gt;
&lt;p&gt;
Perhaps we can have this new editor in 3.3 :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16985 (XML-RPC endpoint set the datetime when saving a Draft) updated</title>
      
        <dc:creator>daniloercoli</dc:creator>

      <pubDate>Mon, 11 Apr 2011 21:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16985#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16985#comment:12/1302556568689512</guid>
      <description>&lt;p&gt;
yes, we should be very careful.  I have set the date to January 1 1970, when it is missing into the db, instead to keep it empty in the xml-rpc response to prevents crashes on the client side. I will check with other 3rd-party  clients.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16426 (jQuery 1.5.2) updated</title>
      
        <dc:creator>JDTrower</dc:creator>

      <pubDate>Mon, 11 Apr 2011 21:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16426#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16426#comment:23/1302555909140426</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16426#comment:22" title="Comment 22"&gt;demetris&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thank you for you taking the time to do this, JDTrower.
&lt;/p&gt;
&lt;p&gt;
By the way, nacin suggested the other day on the IRC channel that we should make a checklist for testing jQuery and jQuery UI updates. I think this is a good idea, as it would make testing better and easier: you open the checklist, launch the supported browsers, and you start going through the checklist point by point.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're welcome demetris.
&lt;/p&gt;
&lt;p&gt;
I agree that that is a good idea.  It would make testing not only better and easier, but also more consistent.  I assume a checklist like that would be a Codex page or would it be located somewhere else?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17109 (Add post-success action hooks to edit/create/delete calls.) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 11 Apr 2011 21:02:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17109#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17109#comment:2/1302555760949979</guid>
      <description>&lt;p&gt;
In order to potentially modify the data before returning it shouldn't we be filtering instead and returning the filter variable?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") reopened</title>
      
        <dc:creator>doktorbro</dc:creator>

      <pubDate>Mon, 11 Apr 2011 20:54:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:10/1302555270201087</guid>
      <description>&lt;p&gt;
One more time, for Latin-alphabet lovers: I don't care how you want to see emphasis in &lt;em&gt;your&lt;/em&gt; language. All I want, that you use the CSS property &amp;lt;strong&amp;gt; to display it. Semantic web is not a buzzword. The official &lt;a class="ext-link" href="http://dev.w3.org/html5/markup/strong.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;description&lt;/a&gt; is: “The strong element represents a span of text with strong importance”.
&lt;/p&gt;
&lt;p&gt;
Do you know about scripts without capital letters? Yes, they exist. Hebrew, Arabic, Thai and so on. If they don't have the possibility to mark words with CSS, they don't get any chance to show the importance of a word inside the warning. Bad usability for our non-occident friends.
&lt;/p&gt;
&lt;p&gt;
For now, if I use &amp;lt;strong&amp;gt; in some msgid's, wordpress displays the CSS-Tags itself inside the warning. We need to change some message procedures for making them compatible to msgid's with CSS inside. I'm sure it's all about
&lt;/p&gt;
&lt;pre class="wiki"&gt;strip_tags()
&lt;/pre&gt;&lt;p&gt;
on some places and the whole world smiles. So please, don't ignore the semantic web.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16684 (PHP5 Performance improvement for wptexturize) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 20:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16684#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16684#comment:3/1302554599256554</guid>
      <description>&lt;p&gt;
16684.patch passes TestWPTexturize unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17065 (Independent ASC/DESC in multiple ORDER BY statement.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 20:21:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17065#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17065#comment:5/1302553284777721</guid>
      <description>&lt;p&gt;
I would replace 'key' with 'field', to avoid confusion with 'meta_key'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15031 (order via meta_query) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 20:15:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15031#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15031#comment:14/1302552932646368</guid>
      <description>wontfix: &lt;p&gt;
Closing. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17065" title="#17065: task (blessed): Independent ASC/DESC in multiple ORDER BY statement. (closed: fixed)"&gt;#17065&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #17109 (Add post-success action hooks to edit/create/delete calls.) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:50:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17109#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17109#comment:1/1302551407206510</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Add action hooks to the following calls:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp_newCategory
&lt;/li&gt;&lt;li&gt;wp_deleteCategory
&lt;/li&gt;&lt;li&gt;wp_deleteComment
&lt;/li&gt;&lt;li&gt;wp_editComment
&lt;/li&gt;&lt;li&gt;wp_newComment
&lt;/li&gt;&lt;li&gt;mw_newMediaObject
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Post-related hooks are added by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14283" title="#14283: enhancement: Add a new action, fired when a post is added via XMLRPC (closed: fixed)"&gt;#14283&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17109.diff attached to Ticket #17109</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17109/17109.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17109/17109.diff/1302551395339757</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16768 (PHP5-port - Class Constructors Review for 3.2) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:26:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16768#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16768#comment:8/1302550000997867</guid>
      <description>&lt;p&gt;
&lt;code&gt;16768.class-oembed.patch&lt;/code&gt; should be the last one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16768.class-oembed.patch attached to Ticket #16768</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16768/16768.class-oembed.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16768/16768.class-oembed.patch/1302549832635396</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16996 (oEmbed: Allow custom arguments to be specified) updated</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:18:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16996#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16996#comment:12/1302549494891757</guid>
      <description>&lt;p&gt;
FYI, if a shortcode is passed with any additional arguments, WP will automatically add them.
&lt;/p&gt;
&lt;p&gt;
You just need to make sure you add any custom arguments (like &lt;code&gt;color&lt;/code&gt;) to $provider via the filter in my patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17106 (oEmbed - PollDaddy regex needs updating) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17106#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17106#comment:6/1302549168509310</guid>
      <description>&lt;p&gt;
How about
&lt;/p&gt;
&lt;pre class="wiki"&gt;#http://(.+\.)?polldaddy\.com/.*#i
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16996 (oEmbed: Allow custom arguments to be specified) updated</title>
      
        <dc:creator>jacobwg</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:07:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16996#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16996#comment:11/1302548860529502</guid>
      <description>&lt;p&gt;
That patch should allow for arguments from the shortcode and the URI, which are passed through a filter for in-code modification of basically anything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16996-5.diff attached to Ticket #16996</title>
      
        <dc:creator>jacobwg</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16996/16996-5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16996/16996-5.diff/1302548785367639</guid>
      <description>&lt;p&gt;
Passes custom params from shortcode and URL - we need to check to see if we need to filter these params (it also currently passes the discover arg to the request which the oEmbed provider ignores)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16996 (oEmbed: Allow custom arguments to be specified) updated</title>
      
        <dc:creator>jacobwg</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:04:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16996#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16996#comment:10/1302548690853952</guid>
      <description>&lt;p&gt;
While I agree that a filter should be added, that still doesn't solve the issue for users who do not have access to the code (authors, editors, etc.) but who want to paste in a URI like &lt;code&gt;http://vimeo.com/12345?color=7AB800&lt;/code&gt; and change the color.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16996 (oEmbed: Allow custom arguments to be specified) updated</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 19:01:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16996#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16996#comment:9/1302548494390005</guid>
      <description>&lt;p&gt;
Using the filter, it's possible to add arguments on a per-URL basis (not shortcode) if you use the parse_url() function to see if any arguments (that you want) exist in the URL string.
&lt;/p&gt;
&lt;p&gt;
If they exist, then you could tack them on to $provider.  If they don't, don't add them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16768 (PHP5-port - Class Constructors Review for 3.2) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16768#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16768#comment:7/1302548256806270</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17631" title="Remove PHP4 constructor. Props Jayjdk. see #16768"&gt;[17631]&lt;/a&gt;) Remove PHP4 constructor. Props Jayjdk. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16768" title="#16768: enhancement: PHP5-port - Class Constructors Review for 3.2 (closed: fixed)"&gt;#16768&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17631]: Remove PHP4 constructor. Props Jayjdk. see #16768</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:57:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17631</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17631/1302548254969443</guid>
      <description>&lt;p&gt;
Remove PHP4 constructor. Props Jayjdk. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16768" title="#16768: enhancement: PHP5-port - Class Constructors Review for 3.2 (closed: fixed)"&gt;#16768&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16920 (PHP5-Port: Take out unnecessary compat functions from diverse files) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:55:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16920#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16920#comment:9/1302548113616261</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17630" title="Use stripos() instead of strpos( strtolower() ). Props hakre. see #16920"&gt;[17630]&lt;/a&gt;) Use stripos() instead of strpos( strtolower() ). Props hakre. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16920" title="#16920: defect (bug): PHP5-Port: Take out unnecessary compat functions from diverse files (closed: fixed)"&gt;#16920&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17630]: Use stripos() instead of strpos( strtolower() ). Props hakre. see #16920</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:55:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17630</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17630/1302548111244856</guid>
      <description>&lt;p&gt;
Use stripos() instead of strpos( strtolower() ). Props hakre. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16920" title="#16920: defect (bug): PHP5-Port: Take out unnecessary compat functions from diverse files (closed: fixed)"&gt;#16920&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16920 (PHP5-Port: Take out unnecessary compat functions from diverse files) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16920#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16920#comment:8/1302547915199043</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17629" title="E_RECOVERABLE_ERROR is always available in PHP 5.2+.  Remove back ..."&gt;[17629]&lt;/a&gt;) E_RECOVERABLE_ERROR is always available in PHP 5.2+.  Remove back compat code.  Props hakre. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16920" title="#16920: defect (bug): PHP5-Port: Take out unnecessary compat functions from diverse files (closed: fixed)"&gt;#16920&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17629]: E_RECOVERABLE_ERROR is always available in PHP 5.2+.  Remove back ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17629</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17629/1302547912786095</guid>
      <description>&lt;p&gt;
E_RECOVERABLE_ERROR is always available in PHP 5.2+.  Remove back compat code.  Props hakre. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16920" title="#16920: defect (bug): PHP5-Port: Take out unnecessary compat functions from diverse files (closed: fixed)"&gt;#16920&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16476 (Custom post types support in XML-RPC) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16476#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16476#comment:5/1302547655079376</guid>
      <description>&lt;p&gt;
I like having custom post type support in XML-RPC, but I don't think this is the way forward on it.  I think this is a good time to consider some new methods that will work on any post type (custom and built in).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17108 (YouTube iframe embed (HTML5)) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:46:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17108#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17108#comment:6/1302547608055905</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17106 (oEmbed - PollDaddy regex needs updating) updated</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17106#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17106#comment:5/1302547481273100</guid>
      <description>&lt;p&gt;
If you update the patch to add the dot, then would the following not match:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://polldaddy.com/poll/xxx
&lt;/pre&gt;&lt;p&gt;
I kind of copied the regex that Smugmug was using ;)
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class-oembed.php#L46"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/class-oembed.php#L46&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16980 (Empty Values are ignored by class-ixr.php) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16980#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16980#comment:16/1302547214048490</guid>
      <description>&lt;p&gt;
It looks like this all hinges on "If no type is indicated, the type is string.".  I'm not going to consider this critical for WP 3.2 at this point since there is a clear and obvious work around: always include a type.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16426 (jQuery 1.5.2) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:29:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16426#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16426#comment:22/1302546551021856</guid>
      <description>&lt;p&gt;
Thank you for you taking the time to do this, JDTrower.
&lt;/p&gt;
&lt;p&gt;
By the way, nacin suggested the other day on the IRC channel that we should make a checklist for testing jQuery and jQuery UI updates. I think this is a good idea, as it would make testing better and easier: you open the checklist, launch the supported browsers, and you start going through the checklist point by point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16985 (XML-RPC endpoint set the datetime when saving a Draft) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16985#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16985#comment:11/1302546266599221</guid>
      <description>&lt;p&gt;
I'm very hesitant/careful about making date/time interaction changes to XML-RPC.  This is one of the most fragile areas, it is very easy to break clients by changing the behavior here.
&lt;/p&gt;
&lt;p&gt;
I'd like to see some comparisons to how other clients (like Mars Edit and Windows Live Writer) are dealing with this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17628]: Fix EOL for newly added files</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17628</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17628/1302546231811830</guid>
      <description>&lt;p&gt;
Fix EOL for newly added files
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16426 (jQuery 1.5.2) updated</title>
      
        <dc:creator>JDTrower</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16426#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16426#comment:21/1302545560268643</guid>
      <description>&lt;p&gt;
Should have mentioned that IE 8 and 9, I did encounter problems that are listed in detail on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17070" title="#17070: defect (bug): Metaboxes not draggable in IE 8 and IE 9 (closed: fixed)"&gt;#17070&lt;/a&gt;.  But other than that ticket and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16955" title="#16955: defect (bug): It's tricky to drag metaboxes (closed: fixed)"&gt;#16955&lt;/a&gt; (which the fix has been applied upstream and just waiting on the release of jQuery UI 1.8.12) everything else worked fine for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17000 (Allow Pages to be set to Pending Status via XML-RPC) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17000#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17000#comment:5/1302545501119437</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>rpc.diff attached to Ticket #17000</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17000/rpc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17000/rpc.diff/1302545464596649</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17000 (Allow Pages to be set to Pending Status via XML-RPC) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17000#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17000#comment:4/1302545454123395</guid>
      <description>&lt;p&gt;
This looks fine as a potential WP 3.2 item.  I'm cleaning up the patches a bit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16426 (jQuery 1.5.2) updated</title>
      
        <dc:creator>JDTrower</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16426#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16426#comment:20/1302545210117656</guid>
      <description>&lt;p&gt;
I have tested the latest patch in IE 8, IE 9, FF 3.6, FF 4.0, Safari 5, Chrome 10, Opera 10, and Opera 11 on Windows Vista and Windows 7 computers and I didn't notice any bugs.  Everything worked as expected.  This was done on a test install with 311 posts, 387 pages, 216 categories, 408 tags, and 401 comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14283 (Add a new action, fired when a post is added via XMLRPC) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14283#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14283#comment:5/1302545155835663</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17109" title="#17109: enhancement: Add post-success action hooks to edit/create/delete calls. (closed: fixed)"&gt;#17109&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17109 (Add post-success action hooks to edit/create/delete calls.) created</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 11 Apr 2011 18:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17109/1302545143201591</guid>
      <description>&lt;p&gt;
It was suggested in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14283" title="#14283: enhancement: Add a new action, fired when a post is added via XMLRPC (closed: fixed)"&gt;#14283&lt;/a&gt; that we add &lt;code&gt;call_success&lt;/code&gt; hooks for post creation using the Blogger API.  The ticket was later expanded to add hooks for all relevant post/page methods.
&lt;/p&gt;
&lt;p&gt;
We should extend this workflow concept and add hooks to all edit/create/delete calls for different data types (comments, media, etc) to make the XML-RPC system more pluggable.
&lt;/p&gt;
&lt;p&gt;
These hooks should use the following format:
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action( 'xmlrpc_call_success_{method name}', {object id}, $args );
&lt;/pre&gt;&lt;p&gt;
These hooks should be called before returning data to the client, but should not be called before any processing is done or before error messages are created.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>rpc.diff attached to Ticket #17094</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 11 Apr 2011 17:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17094/rpc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17094/rpc.diff/1302544576107692</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13265 (Filter results of get_page_templates()) updated</title>
      
        <dc:creator>arpowers</dc:creator>

      <pubDate>Mon, 11 Apr 2011 17:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13265#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13265#comment:15/1302543650270827</guid>
      <description>&lt;p&gt;
Ya, basically having this functionality is the only thing preventing database driven template handing.
&lt;/p&gt;
&lt;p&gt;
In PageLines' framework, templates are more dynamic. Basically, it allows users to configure their own templates using the 'drag and drop' interface.
&lt;/p&gt;
&lt;p&gt;
Ideally we'd be able to allow them to create and remove templates at will, then set those templates up.
Unfortunately, because of this issue; we'd have to resort to generating static files, which leads to other problems.
&lt;/p&gt;
&lt;p&gt;
We will look in to doing the patch/plugin for you if needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17106 (oEmbed - PollDaddy regex needs updating) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Mon, 11 Apr 2011 17:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17106#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17106#comment:4/1302543146686464</guid>
      <description>&lt;p&gt;
I think we will want to add an escaped dot to the regex:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#http://(.+)?\.polldaddy\.com/.*#i
&lt;/pre&gt;&lt;p&gt;
to avoid matching completely different domains, e.g. &lt;a class="ext-link" href="http://notpolldaddy.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://notpolldaddy.com/&lt;/a&gt;, and only allow polldaddy.com subdomains.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16996 (oEmbed: Allow custom arguments to be specified) updated</title>
      
        <dc:creator>newmediarts</dc:creator>

      <pubDate>Mon, 11 Apr 2011 16:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16996#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16996#comment:8/1302539097448763</guid>
      <description>&lt;p&gt;
r-a-y's solution may solve my site's needs, since I'd want to change the player colour globally for this site, so I can just use &lt;code&gt;add_filter&lt;/code&gt; to add the addtional params in my theme's &lt;code&gt;functions.php&lt;/code&gt; file. However, I don't know if this would solve the greater overarching issue of being able to pass arguments on a per–oEmbed-URL basis.
&lt;/p&gt;
&lt;p&gt;
I'll test try out this patch when I have some free time this week.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17108 (YouTube iframe embed (HTML5)) updated</title>
      
        <dc:creator>newmediarts</dc:creator>

      <pubDate>Mon, 11 Apr 2011 16:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17108#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17108#comment:5/1302538351584619</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14283 (Add a new action, fired when a post is added via XMLRPC) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 11 Apr 2011 14:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14283#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14283#comment:4/1302533764661393</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14283.diff attached to Ticket #14283</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 11 Apr 2011 14:55:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14283/14283.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14283/14283.diff/1302533732240523</guid>
      <description>&lt;p&gt;
Add success hooks to post/page calls.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14283 (Add a new action, fired when a post is added via XMLRPC) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 11 Apr 2011 14:55:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14283#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14283#comment:3/1302533706190592</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like the idea, so I'm submitting a patch that adds an action hook to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp.deletePage
&lt;/li&gt;&lt;li&gt;blogger.newPost
&lt;/li&gt;&lt;li&gt;blogger.editPost
&lt;/li&gt;&lt;li&gt;blogger.deletePost
&lt;/li&gt;&lt;li&gt;mw.newPost
&lt;/li&gt;&lt;li&gt;mw.editPost
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These are all the relevant post/page methods where this kind of hook makes sense.  The &lt;code&gt;wp&lt;/code&gt; methods for editing and creating posts just direct to &lt;code&gt;mw_editPost()&lt;/code&gt; and &lt;code&gt;mw_newPost()&lt;/code&gt; anyway, so they'll end up using the same hooks.
&lt;/p&gt;
&lt;p&gt;
I'm using westi's proposed schema as well:
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action( 'xmlrpc_call_success_{method name}', $post_ID, $args );
&lt;/pre&gt;&lt;p&gt;
We might want to consider adding similar hooks for comments and media calls, but that would be another ticket ...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11517 (Make Admin more MVC-like) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 14:45:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11517#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11517#comment:36/1302533107134056</guid>
      <description>maybelater: &lt;p&gt;
Looking back at the comments made to this ticket, nothing useful has come out of it in 16 months.
&lt;/p&gt;
&lt;p&gt;
Only impractical suggestions and a general disregard for existing APIs.
&lt;/p&gt;
&lt;p&gt;
Closing.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11517 (Make Admin more MVC-like) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 14:36:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11517#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11517#comment:35/1302532607884379</guid>
      <description>&lt;p&gt;
The list table API will hopefully be made public in WP 3.2.
&lt;/p&gt;
&lt;p&gt;
Even before that, you still had some helper functions: get_column_headers(), print_column_headers() etc.
&lt;/p&gt;
&lt;p&gt;
General comment (not particularly directed at john316media): If you're going to complain about the current implementation, at least take time to learn what's already there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16996 (oEmbed: Allow custom arguments to be specified) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 13:17:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16996#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16996#comment:7/1302527838670755</guid>
      <description>&lt;p&gt;
We might need to add in a parameter for YouTube at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17108" title="#17108: enhancement: YouTube iframe embed (HTML5) (closed: invalid)"&gt;#17108&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17108 (YouTube iframe embed (HTML5)) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 13:16:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17108#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17108#comment:4/1302527818213240</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Apparently you can add iframe=1 and you get the new embed code. Since this is the default code now, I'm fine with adding on that argument to YouTube requests.
&lt;/p&gt;
&lt;p&gt;
Reference: &lt;a class="ext-link" href="http://www.quora.com/When-will-YouTube-update-their-oEmbed-endpoint-to-return-their-new-default-iframe-based-embeds"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.quora.com/When-will-YouTube-update-their-oEmbed-endpoint-to-return-their-new-default-iframe-based-embeds&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Cross-referencing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16996" title="#16996: enhancement: oEmbed: Allow custom arguments to be specified (closed: fixed)"&gt;#16996&lt;/a&gt; for custom parameter support.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17108 (YouTube iframe embed (HTML5)) updated</title>
      
        <dc:creator>hebbet</dc:creator>

      <pubDate>Mon, 11 Apr 2011 13:13:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17108#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17108#comment:3/1302527587254703</guid>
      <description>&lt;p&gt;
i think the new tinymce is good enough.
The iframe-Code is btw. no longer beta. it is the default code for embedding.
&lt;/p&gt;
&lt;p&gt;
Maybe Wordpress or Automattic could contact Google and ask if they are going to provide the iframe code via oEmbed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17097 (make_clickable() regex should exclude close-quotation marks after URLs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 12:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17097#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17097#comment:5/1302525061469925</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
No problem, Boone. Yeah, I was just using comment_text as an example -- my point was that it explicitly runs just before wptexturize in core, so that seems like that's how it should be expected to be used by plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17097 (make_clickable() regex should exclude close-quotation marks after URLs) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 11 Apr 2011 12:27:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17097#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17097#comment:4/1302524836193598</guid>
      <description>invalid: &lt;pre class="wiki"&gt; http://example.com?foo=bar&amp;amp;#8217 looks like a valid URL to me.
&lt;/pre&gt;&lt;p&gt;
Yeah, I guess that's right. Though my related issue is that, given the input string &lt;a class="ext-link" href="http://example.com?foo=bar&amp;amp;#8217"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com?foo=bar&amp;amp;#8217&lt;/a&gt;;, which of the following outcomes is more likely to be expected:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://example.com?foo=bar&amp;amp;#8217"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com?foo=bar&amp;amp;#8217&lt;/a&gt;"&amp;gt;&lt;a class="ext-link" href="http://example.com?foo=bar&amp;amp;#8217"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com?foo=bar&amp;amp;#8217&lt;/a&gt;&amp;lt;/a&amp;gt;;
&lt;/p&gt;
&lt;p&gt;
or
&lt;/p&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://example.com?foo=bar&amp;amp;#8217"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com?foo=bar&amp;amp;#8217&lt;/a&gt;;"&amp;gt;&lt;a class="ext-link" href="http://example.com?foo=bar&amp;amp;#8217"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com?foo=bar&amp;amp;#8217&lt;/a&gt;;&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;p&gt;
(FWIW, Trac is doing the same thing as WP here and excluding the semi-colon. So I'm probably just wrong.)
&lt;/p&gt;
&lt;pre class="wiki"&gt;make_clickable runs on comment_text at 9, just before wptexturize. I would consider that to be a requirement for its use.
&lt;/pre&gt;&lt;p&gt;
I'm referring to the use of make_clickable in a plugin, outside of comment_text. So I guess the answer is probably just that I'm doing it wrong, and should make sure that it runs before wptexturize. Thanks for your help.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #17097 (make_clickable() regex should exclude close-quotation marks after URLs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 12:17:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17097#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17097#comment:3/1302524247013556</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://example.com?foo=bar&amp;amp;#8217"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com?foo=bar&amp;amp;#8217&lt;/a&gt; looks like a valid URL to me. make_clickable runs on comment_text at 9, just before wptexturize. I would consider that to be a requirement for its use. Or do I not fully understand your related issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17097 (make_clickable() regex should exclude close-quotation marks after URLs) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 11 Apr 2011 12:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17097#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17097#comment:2/1302523788843050</guid>
      <description>&lt;p&gt;
Good call, greuben - that worked.
&lt;/p&gt;
&lt;p&gt;
But now, a related issue: should make_clickable() be smart enough not to break up the HTML code for one of these special characters? Aside from a whitelist? This is definitely an edge case, but something to consider.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17104 (Redirecting wordpress.org/themes) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 10:27:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17104#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17104#comment:2/1302517649291851</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12922 (Setting featured image does not require the post to be saved) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2011 10:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12922#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12922#comment:6/1302517180749555</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17104 (Redirecting wordpress.org/themes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2011 10:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17104#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17104#comment:1/1302516657658702</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17108 (YouTube iframe embed (HTML5)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 09:01:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17108#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17108#comment:2/1302512499842043</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Agree with @nacin. Apart from the iframe support in the Visual editor (that is in trunk already) there's not much we can do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13265 (Filter results of get_page_templates()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 08:46:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13265#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13265#comment:14/1302511616001492</guid>
      <description>&lt;p&gt;
This won't be enough to make this work. You'd also have to filter get_page_template() (via the {$type}_template filter in get_query_template(), with $type being 'page'), because the validate_file() check in get_page_template() will fail.
&lt;/p&gt;
&lt;p&gt;
Selecting a special template doesn't help much when the template loader can't do anything with it.
&lt;/p&gt;
&lt;p&gt;
In order to back a patch like this, it would be great seeing a plugin uploaded here that then implements something using it. That way we know we're doing it correctly. If that happens soon this is something that can make it into trunk after some review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16919 (style.css can sometimes conflict with custom background image) updated</title>
      
        <dc:creator>pseudoxiah</dc:creator>

      <pubDate>Mon, 11 Apr 2011 08:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16919#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16919#comment:7/1302510951434562</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11517 (Make Admin more MVC-like) updated</title>
      
        <dc:creator>john316media</dc:creator>

      <pubDate>Mon, 11 Apr 2011 08:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11517#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11517#comment:34/1302510214414537</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+10 (can I do that?)
&lt;/p&gt;
&lt;p&gt;
But seriously this would be perfect.  To try to make my plugin admin screens looks WP-like I end up finding an existing admin screen that has the effect I'm looking for, such as the posts list for a table, then view that in a browser, copy the source into an HTML editor and try to clean out the header, footer, menu, then rename the columns and add the content, the code ends up looking like a frenkenstein mess but I get a WP-like layout at least.  I would really like this but IMO this would literally take rewriting the entire admin interface.  Start with developing the API framework then recreate each and every admin page using the framework.  Much needed though IMO.
&lt;/p&gt;
&lt;p&gt;
Perhaps the best way to do this is to first get a group together to code up the API framework then when thats finished add it to core then over the next release cycle to two redo admin pages to then work off the API then after a few releases we could have a nice good setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 08:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:12/1302508896590293</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17627" title="Not 12, 13px, see #17107"&gt;[17627]&lt;/a&gt;) Not 12, 13px, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17107" title="#17107: defect (bug): Theme/plugin CSS can override admin bar parent menu fonts (closed: fixed)"&gt;#17107&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17627]: Not 12, 13px, see #17107</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 08:01:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17627</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17627/1302508894425157</guid>
      <description>&lt;p&gt;
Not 12, 13px, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17107" title="#17107: defect (bug): Theme/plugin CSS can override admin bar parent menu fonts (closed: fixed)"&gt;#17107&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17108 (YouTube iframe embed (HTML5)) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17108#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17108#comment:1/1302508706695870</guid>
      <description>&lt;p&gt;
Beyond iframe support in TinyMCE (in trunk), I don't see how that affects us. We use whatever HTML is provided via oEmbed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:11/1302508461527223</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17107#comment:7" title="Comment 7"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Cool, but I don't necessarily see that as a discrepancy. On my screen 12px looks quite visibly different.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To clarify, by "top level links" I meant items that did not have submenus. Items like "Edit Post" and "Comments" were always 13px, but any item with a submenu was 12px.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17107#comment:8" title="Comment 8"&gt;andrewryno&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd be curious as to see what the performance is like of that universal selector, especially with the added font declarations. There's a limited number of elements that would appear in the admin bar, so replacing * with each element (similar to Eric Meyer's reset, HTML5 boilerplate reset, etc.) that is used, and then also only add the font styles to the elements which have a font in them. Also, no specificity should be lost by switching.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also makes sense. One of the goals of this patch was to modify as few lines as possible, and this was the simplest solution. Can always revisit more exacting CSS later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17108 (YouTube iframe embed (HTML5)) created</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:53:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17108/1302508408022950</guid>
      <description>&lt;p&gt;
Since July 2010 Youtube supports iframe`s for integrating youtube movies
&lt;/p&gt;
&lt;p&gt;
for users this has two benefits:
html5 video support (still in beta - I know)
valid XHTML pages because of no flash
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://apiblog.youtube.com/2010/07/new-way-to-embed-youtube-videos.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://apiblog.youtube.com/2010/07/new-way-to-embed-youtube-videos.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:10/1302508353746145</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:51:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:9/1302508316154496</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17626" title="Stop themes and plugins from overriding the admin bar CSS, props ..."&gt;[17626]&lt;/a&gt;) Stop themes and plugins from overriding the admin bar CSS, props johnjamesjacoby, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17107" title="#17107: defect (bug): Theme/plugin CSS can override admin bar parent menu fonts (closed: fixed)"&gt;#17107&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17626]: Stop themes and plugins from overriding the admin bar CSS, props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:51:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17626</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17626/1302508313536018</guid>
      <description>&lt;p&gt;
Stop themes and plugins from overriding the admin bar CSS, props johnjamesjacoby, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17107" title="#17107: defect (bug): Theme/plugin CSS can override admin bar parent menu fonts (closed: fixed)"&gt;#17107&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17105 (HTML 5.0 support) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17105#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17105#comment:1/1302507483497670</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:37:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:8/1302507442653729</guid>
      <description>&lt;p&gt;
I'd be curious as to see what the performance is like of that universal selector, especially with the added font declarations. There's a limited number of elements that would appear in the admin bar, so replacing * with each element (similar to Eric Meyer's reset, HTML5 boilerplate reset, etc.) that is used, and then also only add the font styles to the elements which have a font in them. Also, no specificity should be lost by switching.
&lt;/p&gt;
&lt;p&gt;
Granted, this was probably brought up before when it was initially made, but thought I'd like to bring up the point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:31:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:7/1302507106296135</guid>
      <description>&lt;p&gt;
Cool, but I don't necessarily see that as a discrepancy. On my screen 12px looks quite visibly different.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:6/1302506707299607</guid>
      <description>&lt;p&gt;
Attached patch moves the main bar font styling up into #wpadminbar *
&lt;/p&gt;
&lt;p&gt;
This works because all of the other core admin bar elements have dedicated styling already to change their respective font sizes, colors, and shadows, including submenus.
&lt;/p&gt;
&lt;p&gt;
As a result, this patch also fixes a small font discrepancy where top level links had a 13px font size, and elements with submenus has a 12px font size.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-bar.patch attached to Ticket #17107</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 11 Apr 2011 07:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17107/admin-bar.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17107/admin-bar.patch/1302506202487878</guid>
      <description>&lt;p&gt;
Add font styling to #wpadminbar *
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16216 (Hide core updater if running an svn checkout) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 11 Apr 2011 06:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16216#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16216#comment:13/1302503466179927</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we are to offer Git checkout detection, which I'm not inclined to do
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree here, Support the VCS we're using, we can't support every single VCS out there..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 11 Apr 2011 06:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:5/1302503463807392</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17107#comment:4" title="Comment 4"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wouldn't something like this work there?
&lt;/p&gt;
&lt;pre class="wiki"&gt;#wpadminbar * {
    font: normal 12px/28px Arial, Helvetica, sans-serif;
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Depends how much prevention we're baking in. I initially started including color and text-shadow in addition to the font, and realized it changes for submenus.
&lt;/p&gt;
&lt;p&gt;
I also noticed that the CSS at &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/css/admin-bar.dev.css#L74"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/css/admin-bar.dev.css#L74&lt;/a&gt; bumps the font-size up to 13px for some reason. Wasn't sure if that was intentional or not, so rather than start recoding all the CSS for the conditions I was finding, I opened this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8882 (Tag and Category results links in backend) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 11 Apr 2011 06:20:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8882#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8882#comment:4/1302502856450515</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is there any traction for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2011 06:17:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:4/1302502629536709</guid>
      <description>&lt;p&gt;
Wouldn't something like this work there?
&lt;/p&gt;
&lt;pre class="wiki"&gt;#wpadminbar * {
    font: normal 12px/28px Arial, Helvetica, sans-serif;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16216 (Hide core updater if running an svn checkout) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 11 Apr 2011 06:12:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16216#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16216#comment:12/1302502339980024</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, please don't replace patches -- just upload new ones.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Okay.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16216.3.diff attached to Ticket #16216</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 11 Apr 2011 06:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16216/16216.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16216/16216.3.diff/1302502265889900</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 06:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:3/1302501817392361</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17107#comment:2" title="Comment 2"&gt;andrewryno&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Dupe of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt;? It was meant for 3.1.1 but it should probably just be reopened if there is more that can be done. I'll leave it up for someone else to decide.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nope, once a ticket is closed on a completed milestone, it's time for a new ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16216 (Hide core updater if running an svn checkout) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 06:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16216#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16216#comment:11/1302501775135005</guid>
      <description>&lt;p&gt;
If we are to offer Git checkout detection, which I'm not inclined to do, I'd rather not combine the string.
&lt;/p&gt;
&lt;p&gt;
Also, let's spell out "Subversion". My take: &amp;lt;strong&amp;gt;Warning:&amp;lt;/strong&amp;gt; It appears that you are running Subversion checkout of WordPress. You may wish to keep WordPress up to date using Subversion instead.
&lt;/p&gt;
&lt;p&gt;
Also, please don't replace patches -- just upload new ones.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16216 (Hide core updater if running an svn checkout) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 11 Apr 2011 05:56:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16216#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16216#comment:10/1302501396933829</guid>
      <description>&lt;p&gt;
There we go. I thought about customising the string for SVN and Git, but it seems like overkill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16216.2.diff attached to Ticket #16216</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 11 Apr 2011 05:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16216/16216.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16216/16216.2.diff/1302501325486060</guid>
      <description>&lt;p&gt;
Add ABSPATH, use is_dir(), and capital P, dangit!
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Mon, 11 Apr 2011 05:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:2/1302500384148384</guid>
      <description>&lt;p&gt;
Dupe of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt;? It was meant for 3.1.1 but it should probably just be reopened if there is more that can be done. I'll leave it up for someone else to decide.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu-bar.png attached to Ticket #17107</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 11 Apr 2011 04:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17107/menu-bar.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17107/menu-bar.png/1302497418785448</guid>
      <description>&lt;p&gt;
Menu Bar with overridden fonts
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 11 Apr 2011 04:50:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107#comment:1/1302497414597153</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17107 (Theme/plugin CSS can override admin bar parent menu fonts) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 11 Apr 2011 04:49:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17107/1302497361911092</guid>
      <description>&lt;p&gt;
Attaching a screenshot of the menu-bar when using the Mystique theme as an example of what happens.
&lt;/p&gt;
&lt;p&gt;
Spent a few minutes playing with the admin-bar CSS trying to come up with a patch that didn't conflict with existing CSS but couldn't come up with a solution that didn't replace a bunch of it. Will revisit a patch this week.
&lt;/p&gt;
&lt;p&gt;
The admin bar font is originally applied here to the entire #wpadminbar: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/css/admin-bar.dev.css#L27"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/css/admin-bar.dev.css#L27&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Single link root-level menu items aren't affected in my screen shot because they have specific CSS that prevents it here: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/css/admin-bar.dev.css#L74"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/css/admin-bar.dev.css#L74&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(Putting this in the "Menus" component even though that's meant for Appearance -&amp;gt; Menus. Will probably want to add a dedicated "Admin Bar" component.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16216 (Hide core updater if running an svn checkout) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 04:45:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16216#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16216#comment:9/1302497115775579</guid>
      <description>&lt;p&gt;
Since we're at it, how about checking for a &lt;code&gt;.git&lt;/code&gt; directory too? :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16216 (Hide core updater if running an svn checkout) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 11 Apr 2011 04:37:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16216#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16216#comment:8/1302496624277076</guid>
      <description>&lt;p&gt;
Everyone's allowed to make that mistake once, right? :P
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17097 (make_clickable() regex should exclude close-quotation marks after URLs) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Mon, 11 Apr 2011 03:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17097#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17097#comment:1/1302493380313549</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You are running the filter after &lt;code&gt; add_filter( 'the_content', 'wptexturize' ); &lt;/code&gt; which converts the end &lt;code&gt;'&lt;/code&gt; to &lt;code&gt;&amp;amp;#8217;&lt;/code&gt;. That is why make_clickable includes the '(&amp;amp;#8217).  Set the priority of the filter to less than 10, you won't have that problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16919 (style.css can sometimes conflict with custom background image) updated</title>
      
        <dc:creator>nathanrice</dc:creator>

      <pubDate>Mon, 11 Apr 2011 01:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16919#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16919#comment:6/1302486727436023</guid>
      <description>&lt;p&gt;
That would take some work. Instead of a checkbox like that, we'd need to have some sort of system, like custom header, for defining the default background image, and a button to remove it (like custom header).
&lt;/p&gt;
&lt;p&gt;
And that defeats the purpose of simplicity that the &lt;code&gt;add_custom_background();&lt;/code&gt; call was supposed to introduce.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16919 (style.css can sometimes conflict with custom background image) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 11 Apr 2011 01:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16919#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16919#comment:5/1302485946686243</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Instead of guessing what a hypothetical user may want – couldn’t we just ask him? Add a checkbox to the background options page:
&lt;/p&gt;
&lt;p&gt;
[×] Use default background image
&lt;/p&gt;
&lt;p&gt;
I think this would be most predictable for both, theme authors and end users, and we would know &lt;em&gt;exactly&lt;/em&gt; when to insert &lt;code&gt;background-image: none&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 11 Apr 2011 01:21:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:9/1302484877238615</guid>
      <description>invalid: &lt;p&gt;
Closing then.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #17092 (use dirname(__file__).'/file.php' instead of './file' for includes) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:53:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17092#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17092#comment:4/1302483212135602</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We absolutely should not be doing dirname( &lt;span class="underline"&gt;FILE&lt;/span&gt; ) for every include, include_once, require, require_once.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No we shouldn't. It should only be used before ABSPATH is defined. so files in the loading process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17092 (use dirname(__file__).'/file.php' instead of './file' for includes) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:51:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17092#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17092#comment:3/1302483093824503</guid>
      <description>&lt;p&gt;
We absolutely should not be doing &lt;code&gt;dirname( __FILE__ )&lt;/code&gt; for every include, include_once, require, require_once.
&lt;/p&gt;
&lt;p&gt;
My tests show that if you do it for the roughly 200 places that WordPress uses ./ that it increases memory usage by 0.087MB and increases execution time by 0.000830888748169 seconds.
&lt;/p&gt;
&lt;p&gt;
These figures seem small, but as core grows, and added on top of other things these changes only add to inefficiency.
&lt;/p&gt;
&lt;p&gt;
If we were to do this at all we need to start utilizing ABSPATH, that we use for most of the other includes, especially for files within wp-includes.
&lt;/p&gt;
&lt;p&gt;
In general I am -1 for this, but if we do it, we should rely on already in use file path constants from core, and not add new vars/constants or run dirname for every include/require.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) updated</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759#comment:11/1302482283424034</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12686 (Make embed API easier to use with plugins) updated</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12686#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12686#comment:2/1302481644866979</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've also been attempting something as well (most notably with BuddyPress).
&lt;/p&gt;
&lt;p&gt;
Viper, let me know where you're at with this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16996-4.diff attached to Ticket #16996</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16996/16996-4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16996/16996-4.diff/1302481439281466</guid>
      <description>&lt;p&gt;
Passes $url as a parameter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16996-3.diff attached to Ticket #16996</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16996/16996-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16996/16996-3.diff/1302481121014414</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16996 (oEmbed: Allow custom arguments to be specified) updated</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16996#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16996#comment:6/1302481109045471</guid>
      <description>&lt;p&gt;
You shouldn't be unsetting any of the arguments.
&lt;/p&gt;
&lt;p&gt;
I do agree though that you should be able to pass additional arguments.  So I believe a filter is the best option here.
&lt;/p&gt;
&lt;p&gt;
Attached patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17106.03.patch attached to Ticket #17106</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:02:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17106/17106.03.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17106/17106.03.patch/1302480127628718</guid>
      <description>&lt;p&gt;
Escapes period.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:8/1302480096741599</guid>
      <description>&lt;p&gt;
Agreed with @marcoceppi.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17106.02.patch attached to Ticket #17106</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17106/17106.02.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17106/17106.02.patch/1302480023836413</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17106 (oEmbed - PollDaddy regex needs updating) updated</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Mon, 11 Apr 2011 00:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17106#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17106#comment:3/1302480006353834</guid>
      <description>&lt;p&gt;
You're correct about hardcoding "/poll/".
&lt;/p&gt;
&lt;p&gt;
Removing the subdomain will work.
New patch fixes this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>