<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 31 Aug 2009 22:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:21/1251759346000000</guid>
      <description>&lt;p&gt;
The bad attempt I wrote at avoiding embedding &lt;code&gt;&amp;lt;a href="#"&amp;gt;url here&amp;lt;/a&amp;gt;&lt;/code&gt; messed up more than it fixed, so I reverted it. We're back to embedding those (when they shouldn't be). Someone with l33t regex skills will need to modify the regex to fix it up.
&lt;/p&gt;
&lt;p&gt;
I also added using oEmbed as a configuration option (it's on by default for upgrades, but patch users will need to manually enable it due to lack of DB upgrade) and you can leave the width setting blank to use the theme width.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10337.2.patch attached to Ticket #10337</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 31 Aug 2009 22:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10337/10337.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10337/10337.2.patch/1251759067000000</guid>
      <description>&lt;p&gt;
Revert bad attempt at preventing link embedding (see comment) + options page improvements (using oEmbed is an option now)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>media_upload_form_url.diff attached to Ticket #10707</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 31 Aug 2009 21:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10707/media_upload_form_url.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10707/media_upload_form_url.diff/1251754460000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10707 (media_upload_form_url isn't applied to all links to the media upload form) created</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 31 Aug 2009 21:34:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10707</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10707/1251754449000000</guid>
      <description>&lt;p&gt;
There are two cases, in which the &lt;code&gt;apply_filters()&lt;/code&gt; call is omitted and the URL is used as-is.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10705 (Pass Post ID to the get_comments_number filter) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 31 Aug 2009 21:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10705#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10705#comment:1/1251753058000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>strict-force-ssl-test.diff attached to Ticket #10706</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 31 Aug 2009 20:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10706/strict-force-ssl-test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10706/strict-force-ssl-test.diff/1251752337000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>strict-force-ssl.diff attached to Ticket #10706</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 31 Aug 2009 20:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10706/strict-force-ssl.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10706/strict-force-ssl.diff/1251752312000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10706 (foce_ssl_admin/login don't work if the argument is false) created</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 31 Aug 2009 20:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10706</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10706/1251752293000000</guid>
      <description>&lt;p&gt;
Expected: &lt;code&gt;force_ssl_admin()&lt;/code&gt; to set the static var inside the function to false.
&lt;/p&gt;
&lt;p&gt;
Actual: nothing happens.
&lt;/p&gt;
&lt;p&gt;
The condition on which the value is changed is &lt;code&gt;if ( '' != $force )&lt;/code&gt;, which can't be fulfilled by any false value. The condition is equal to &lt;code&gt;if ( false != $force)&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Here is a patch, which uses &lt;code&gt;null&lt;/code&gt; as a default value and checks using &lt;code&gt;is_null()&lt;/code&gt;. Similar effect can be accomplished by using &lt;code&gt;!==&lt;/code&gt;, but the prefer seems to convey better the meaninglessness of the default value.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Mon, 31 Aug 2009 19:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:9/1251748199000000</guid>
      <description>&lt;p&gt;
Hints:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;you can use regular expressions to split text into tokens;&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;use stack to store open tags (or write everything using recursion - IMO more tricky way).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>comment-template.php.diff attached to Ticket #10705</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Mon, 31 Aug 2009 19:39:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10705/comment-template.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10705/comment-template.php.diff/1251747572000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10705 (Pass Post ID to the get_comments_number filter) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Mon, 31 Aug 2009 19:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10705/1251747534000000</guid>
      <description>&lt;p&gt;
See attached path.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset in tests [236]: Add some more code nest test </title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 31 Aug 2009 18:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/236/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/236/tests/1251745071178278</guid>
      <description>&lt;p&gt;
Add some more code nest test
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10703 (Logarithmic scale for tag cloud tag size) updated</title>
      
        <dc:creator>kometbomb</dc:creator>

      <pubDate>Mon, 31 Aug 2009 17:03:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10703#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10703#comment:5/1251738213000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ok, thanks for your input. I fixed the issue with the alt text and added a callback parameter (topic_count_scale_callback). Also, it now defaults to log10 since I detected some sort of consensus.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>logarithmic_tag_cloud.diff attached to Ticket #10703</title>
      
        <dc:creator>kometbomb</dc:creator>

      <pubDate>Mon, 31 Aug 2009 17:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10703/logarithmic_tag_cloud.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10703/logarithmic_tag_cloud.diff/1251738043000000</guid>
      <description>&lt;p&gt;
Added callback, fixed the alt tag
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10703 (Logarithmic scale for tag cloud tag size) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 31 Aug 2009 15:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10703#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10703#comment:4/1251732275000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've put it on my site: &lt;a class="ext-link" href="http://scribu.net/tags"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://scribu.net/tags&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And I also think it should be the default.
&lt;/p&gt;
&lt;p&gt;
However, with the current patch, the displayed count is also inflated.
&lt;/p&gt;
&lt;p&gt;
For example: hovering over Viewer2 tag shows "136 topics" with log10 and "22 topics" without (the real number).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10703 (Logarithmic scale for tag cloud tag size) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Mon, 31 Aug 2009 15:20:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10703#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10703#comment:3/1251732009000000</guid>
      <description>&lt;p&gt;
+1 dd32's suggestion. If this logarithmic sizing is included though, maybe shorten it from 'logarithmic' to just 'log10'. I think a better option, if the an extra parameter like 'logarithmic' is desirable, is to have log10 be the default, and provide the ability to give any callback function name as the scale determination factor.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10704 (Prevent logout before post save from destroying your changes) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 31 Aug 2009 10:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10704</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10704/1251716227000000</guid>
      <description>&lt;p&gt;
Current: If you get logged out of WordPress due to cookie timeout, accidental logout in another window, etc, and then you try to save a post with a bunch of changes you will get booted to the login screen and upon logging in, your changes will be gone.
&lt;/p&gt;
&lt;p&gt;
Better: Changes will be saved through the login session OR you'll be intercepted on the login screen when you try to save and be given a chance to do an XHR login.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10703 (Logarithmic scale for tag cloud tag size) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 31 Aug 2009 08:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10703#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10703#comment:2/1251706612000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looking purely at the example you've given, i'd actually support making log10 the default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10703 (Logarithmic scale for tag cloud tag size) updated</title>
      
        <dc:creator>kometbomb</dc:creator>

      <pubDate>Mon, 31 Aug 2009 08:10:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10703#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10703#comment:1/1251706202000000</guid>
      <description>&lt;p&gt;
The difference can be seen here: &lt;a class="ext-link" href="http://kometbomb.net/tags/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://kometbomb.net/tags/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10703 (Logarithmic scale for tag cloud tag size) created</title>
      
        <dc:creator>kometbomb</dc:creator>

      <pubDate>Mon, 31 Aug 2009 08:00:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10703</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10703/1251705652000000</guid>
      <description>&lt;p&gt;
The tag clouds generated by wp_tag_cloud() tend to work poorly if there's one or two dominant tags, i.e. the tag could has very many small tags and one or two huge tags. This can be avoided by not resizing the tags by the normalized absolute post count but by the normalized log10 of the count. This makes the offending "peak" tags smaller.
&lt;/p&gt;
&lt;p&gt;
Here's a patch that adds a new boolean arg for wp_tag_cloud() called 'logarithmic'. The default is false which makes wp_tag_cloud() generate the same cloud as before, setting the arg to true makes wp_tag_cloud() generate a tag cloud with the tag sizes based on log10.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 14:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:8/1251642506000000</guid>
      <description>&lt;p&gt;
No, it has the same problem as Wordpress has.
A regex either looks for the widest match or the smallest, looking at the code above you can see that both cause trouble.
Explanation: &lt;a class="ext-link" href="http://kore-nordmann.de/blog/do_NOT_parse_using_regexp.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://kore-nordmann.de/blog/do_NOT_parse_using_regexp.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You somehow need to match tags on the same nesting level. But as I said, I never wrote a parser so I don't know how.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 30 Aug 2009 14:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:7/1251641642000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10702#comment:6" title="Comment 6"&gt;pepijndevos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No, BBCode Lite is not usable, it's based on regex also.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So what if it's based on regex? It gets the job done: nested tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 14:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:6/1251641154000000</guid>
      <description>&lt;p&gt;
Forgot to say:
url: &lt;a class="ext-link" href="http://textpattern.com/weblog/318/tag-parser-part-1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://textpattern.com/weblog/318/tag-parser-part-1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
No, BBCode Lite is not usable, it's based on regex also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 14:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:5/1251640871000000</guid>
      <description>&lt;p&gt;
Maybe...
&lt;/p&gt;
&lt;p&gt;
They stated in shortcode.php that it's based on textpatern:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
/**
 * WordPress API for creating bbcode like tags or what WordPress calls
 * "shortcodes." The tag and attribute parsing or regular expression code is
 * based on the Textpattern tag parser.
&lt;/pre&gt;&lt;p&gt;
On the Textpattern site I found this article saying that before version X they also did not support nesting of the same tags, but now they do. Maybe that code is usable?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 30 Aug 2009 13:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:4/1251640087000000</guid>
      <description>&lt;p&gt;
Perhaps the code for &lt;a class="ext-link" href="http://bbpress.org/plugins/topic/bbcode-lite/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;bbCode Lite&lt;/a&gt; plugin for bbPress will be of help.
&lt;/p&gt;
&lt;p&gt;
Shortcodes and bbCode are very similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 13:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:3/1251639833000000</guid>
      <description>&lt;p&gt;
Because I can't.
&lt;/p&gt;
&lt;p&gt;
I've never written a complex non-regex parser(and have no idea how to do it*) and never contributed a patch to Wordpress.
&lt;/p&gt;
&lt;p&gt;
It'd be an interesting learning experience, but I doubt if it will work, be Wordpress coding style, backwards compatible, etc...
Looking at shortcode.php I'm not sure which parts are mandatory an what I can throw out to write something new(with all those comments).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If I had to write a parser I think I would do it with a lot of foreach loops starting a new loop for every new tag and ending a loop for every end tag(to create some sort of 'levels'). I don't know exactly how, else I would have written it.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 30 Aug 2009 13:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:2/1251637375000000</guid>
      <description>&lt;p&gt;
Well, if you're so dissatisfied, why don't you contribute with a patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 30 Aug 2009 12:59:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702#comment:1/1251637168000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10702 (Support for complex nested shorttags) created</title>
      
        <dc:creator>pepijndevos</dc:creator>

      <pubDate>Sun, 30 Aug 2009 11:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10702</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10702/1251632861000000</guid>
      <description>&lt;p&gt;
The documentations is misleading on this point.
It is said that you can have nested shorttags by calling do_shorttag on the content.
&lt;/p&gt;
&lt;p&gt;
However the shorttag parser isn't really a parser, it's just a non-greedy regex of some sort. It does work for simple tags without content, but when we define a [div] tag, look at the following code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[div]
    [div]
        test1
    [/div]
    [div]
        test2
    [/div]
[/div]
&lt;/pre&gt;&lt;p&gt;
Results is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div&amp;gt;
    &amp;lt;div&amp;gt;(tag without content)
    test1
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
    test2
    [/div](not parsed at all)
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I think that if you want to stop people from writing their own parsers you should include some decent parser with Wordpress, not a regex I could do myself.
&lt;/p&gt;
&lt;p&gt;
Workaround: Assign div2 and probably div3 and 4 to the same function, and use these for the nested tags. &amp;lt;--- very ugly!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 30 Aug 2009 06:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425#comment:8/1251613341000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8754 (Uploading images whose dimensions are greater than the maximum size ...) updated</title>
      
        <dc:creator>DRGDC</dc:creator>

      <pubDate>Sun, 30 Aug 2009 01:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8754#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8754#comment:8/1251596753000000</guid>
      <description>&lt;p&gt;
Sorry, the file size of the image is over the limit, see &lt;a class="ext-link" href="http://blog.radian.net/wp-content/uploads/2009/08/LEGO-DSCN3977.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.radian.net/wp-content/uploads/2009/08/LEGO-DSCN3977.jpg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8754 (Uploading images whose dimensions are greater than the maximum size ...) updated</title>
      
        <dc:creator>DRGDC</dc:creator>

      <pubDate>Sun, 30 Aug 2009 01:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8754#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8754#comment:7/1251596658000000</guid>
      <description>&lt;p&gt;
I am providing updated information as this bug is frustrating for me.  All I want is a 200x200 thumbnail automatically generated for the first image in my post (either first uploaded or set to order position 1).
&lt;/p&gt;
&lt;p&gt;
Thumbnail generation is silently failing.  Without errors it is next to impossible to debug.  I am attaching an image that fails with the following configuration:
&lt;/p&gt;
&lt;p&gt;
WordPress 2.8.3
&lt;/p&gt;
&lt;p&gt;
General
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;OS: Linux
&lt;/li&gt;&lt;li&gt;Server: Apache/2.2.3 (Red Hat)
&lt;/li&gt;&lt;li&gt;Hostname: blog.radian.net
&lt;/li&gt;&lt;li&gt;IP:Port: 76.12.173.65:80
&lt;/li&gt;&lt;li&gt;Document Root: /xxxxx/xxxxx/htdocs
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
PHP
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;v5.1.6
&lt;/li&gt;&lt;li&gt;GD: bundled (2.0.28 compatible)
&lt;/li&gt;&lt;li&gt;Magic Quotes GPC: Off
&lt;/li&gt;&lt;li&gt;Memory Limit: 16.0 MiB
&lt;/li&gt;&lt;li&gt;Max Upload Size: 30.0 MiB
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
MYSQL
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;v5.0.45
&lt;/li&gt;&lt;li&gt;Maximum No. Connections: 100
&lt;/li&gt;&lt;li&gt;Maximum Packet Size: 1,024.0 KiB
&lt;/li&gt;&lt;li&gt;Data Disk Usage: 3.2 MiB
&lt;/li&gt;&lt;li&gt;Index Disk Usage: 449.0 KiB
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've tried editing /wp-admin/includes/image.php:
&lt;/p&gt;
&lt;p&gt;
function wp_shrink_dimensions( $width, $height, $wmax = 900, $hmax = 900 ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return wp_constrain_dimensions( $width, $height, $wmax, $hmax );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;p&gt;
with the above setting the file upload progress bar hits 100% and then disappears, but the image doesn't upload.
&lt;/p&gt;
&lt;p&gt;
With the following the file upload progress bar hits 100% and then disappears, the file is uploaded but no thumbnail is generated:
&lt;/p&gt;
&lt;p&gt;
function wp_shrink_dimensions( $width, $height, $wmax = 200, $hmax = 200 ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return wp_constrain_dimensions( $width, $height, $wmax, $hmax );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 30 Aug 2009 00:47:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:88/1251593242000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah; I also thought that would be best. But that ticket is three years old... is it going to be done soon?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. As mentioned in the last comment on that ticket, it'll happen for 2.9
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>