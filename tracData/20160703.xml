<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37264 (Please do not chmod 666 the wp-config.php file on installation.) updated</title>
      
        <dc:creator>chriskuehl</dc:creator>

      <pubDate>Sun, 03 Jul 2016 23:11:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37264#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37264#comment:3/1467587471977229</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sun, 03 Jul 2016 22:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:2/1467586163842181</guid>
      <description>&lt;p&gt;
The author bio does seem like the most appropriate field to use for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37264 (Please do not chmod 666 the wp-config.php file on installation.) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 03 Jul 2016 22:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37264#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37264#comment:2/1467585904639967</guid>
      <description>&lt;pre class="wiki"&gt;This file is initially created with 644 permissions, and it's a hazard to leave it like that. See Security and Hardening.
wp-config.php should be 440 or 400 to prevent other users on the server from reading it.
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Changing_File_Permissions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Changing_File_Permissions&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Component = Security?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37264 (Please do not chmod 666 the wp-config.php file on installation.) updated</title>
      
        <dc:creator>chriskuehl</dc:creator>

      <pubDate>Sun, 03 Jul 2016 22:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37264#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37264#comment:1/1467585696652291</guid>
      <description>&lt;p&gt;
("666 grants read, write, and execute permissions" should say just "666 grants read and write", sorry -- apparently I can't edit the description)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37257 (Minor CSS fix on ".nav-tab-wrapper" class) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Jul 2016 22:36:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37257#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37257#comment:2/1467585368192679</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37253 (Add several missing "_deprecated_function()" calls) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Jul 2016 22:31:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37253#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37253#comment:4/1467585067234133</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37264 (Please do not chmod 666 the wp-config.php file on installation.) created</title>
      
        <dc:creator>chriskuehl</dc:creator>

      <pubDate>Sun, 03 Jul 2016 22:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37264</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37264/1467584867575163</guid>
      <description>&lt;p&gt;
On installation, WordPress invariantly does a &lt;code&gt;chmod 666&lt;/code&gt; of the &lt;code&gt;wp-config.php&lt;/code&gt; file:
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.5.3/wp-admin/setup-config.php#L393"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.5.3/wp-admin/setup-config.php#L393&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This file is very sensitive; it contains the database password and authentication keys, among other things.
&lt;/p&gt;
&lt;p&gt;
666 grants read, write, and execute permissions to every single user on the system. Even read permissions are too much; not only can you dump the database, but you can easily escalate to code execution via template changes (which are stored in the database and &lt;code&gt;eval&lt;/code&gt;'d).
&lt;/p&gt;
&lt;p&gt;
There are virtually no situations where 666 is the appropriate level of permission for this file. It should be something like 600 instead.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;On shared web hosts, other users may be able to read (or even edit!) the file, depending on what isolation the host provides. Most large shared hosting providers do it by making the home directory ~600 so that only the user can traverse it, then run the webserver as that user (and so there's no point making it 666 anyway, it might as well be 600). Other shared web hosts use suexec or suphp to achieve the same, but in these setups, 666 is incredibly dangerous and allows others to modify it (and it should be 600).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Even on dedicated hosts with no other users or websites, these permissions mean that pretty much any compromise on the system can be elevated to full control of your site. And 600 will still work here.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If there is too much concern about this not working across diverse hosting environments, then the installer could incrementally try wider permissions until the file can be read by the PHP code (I would still argue it should never silently make files world-writable, or even world-readable, though).
&lt;/p&gt;
&lt;p&gt;
Please consider changing the default to 600.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Jul 2016 22:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:1/1467584749949274</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37259" title="#37259: enhancement: the_archive_description() doesn't output a description on author ... (closed: fixed)"&gt;henry.wright&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;the_archive_description()&lt;/code&gt; uses &lt;code&gt;term_description()&lt;/code&gt; to output a description on archive pages. Tag, term and category archives are covered but author archives aren't.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Where should an author archive description come from? The author's "Biographical Info" field?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 03 Jul 2016 20:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:7/1467577320828248</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by presskopp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1467577318000470"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35622 (Color contrast: audit all the "#f00" and "red" reds) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 03 Jul 2016 20:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35622#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35622#comment:25/1467576222593081</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1467576220000468"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37186 (Media library shows post titles for posts the user can't read) updated</title>
      
        <dc:creator>littler.chicken</dc:creator>

      <pubDate>Sun, 03 Jul 2016 20:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37186#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37186#comment:4/1467576161229133</guid>
      <description>&lt;p&gt;
I think this change needs to check if a &lt;code&gt;$parent_type&lt;/code&gt; (line 478 in &lt;code&gt;class-wp-media-list-table.php&lt;/code&gt;) returns a &lt;code&gt;null&lt;/code&gt; value; eg if a post type is no longer registered (not usual, but it happens). Currently, if a post type is not registered and I visit the Media Library, or just use the Media Uploader, I get a notice along the lines of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Notice:  map_meta_cap was called &amp;lt;strong&amp;gt;incorrectly&amp;lt;/strong&amp;gt;. The post type {no longer registered CPT} is not registered, so it may not be reliable to check the capability "read_post" against a post of that type.
&lt;/pre&gt;&lt;p&gt;
Even if a post type is no longer registered, &lt;code&gt;$parent = get_post( $post-&amp;gt;post_parent );&lt;/code&gt; is returned as an object (line 471). Line 478, however, returns &lt;code&gt;null&lt;/code&gt; for the parent post type:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$parent_type = get_post_type_object( $parent-&amp;gt;post_type );
&lt;/pre&gt;&lt;p&gt;
which then throws the notice for the &lt;code&gt;elseif&lt;/code&gt; when WP checks if the current user can read the post of this post type.
&lt;/p&gt;
&lt;p&gt;
My guess is then that this function needs to add in a check for a &lt;code&gt;null&lt;/code&gt; value of the parent post type, and deal with it accordingly, but I don't know how you would want that to show in the list. It does currently show the title of the no longer registered post type's post, which seems reasonable enough, and it's not linked, also reasonable, but I think it would be good to get rid of this notice. Changing the &lt;code&gt;elseif&lt;/code&gt; conditional (line 484) to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;elseif ( null === $parent_type || current_user_can( 'read_post', $post-&amp;gt;post_parent ) )
&lt;/pre&gt;&lt;p&gt;
leaves the title intact, unlinked, without causing the notices, although I suppose it leaves the title visible for users without read privileges, so probably needs a little more something. In the &lt;code&gt;wp-includes/media.php&lt;/code&gt; file, changing the conditional in line 3069 to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( null !== $parent_type &amp;amp;&amp;amp; current_user_can( 'read_post', $attachment-&amp;gt;post_parent ) )
&lt;/pre&gt;&lt;p&gt;
seems to address the issue for the media uploader, and I don't know that the parent title is displayed there, so that may be enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37263 (New capability: write a comment) created</title>
      
        <dc:creator>colomet</dc:creator>

      <pubDate>Sun, 03 Jul 2016 17:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37263</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37263/1467568265736323</guid>
      <description>&lt;p&gt;
New capability: write a comment
&lt;/p&gt;
&lt;p&gt;
It will be nice if just some roles can write comments in our post. Will make more powerful and flexible (perfect for membership web sites)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36933 (TinyMCE failing when using ModPagespeed) updated</title>
      
        <dc:creator>franmaWp</dc:creator>

      <pubDate>Sun, 03 Jul 2016 16:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36933#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36933#comment:6/1467563871503813</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37262 (Slug Field Can not Be Saved after Submitting For Review) created</title>
      
        <dc:creator>repenter</dc:creator>

      <pubDate>Sun, 03 Jul 2016 15:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37262</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37262/1467559998347380</guid>
      <description>&lt;p&gt;
When contributors prepare the article and then "submit for review", the custom slug will be erased.
&lt;/p&gt;
&lt;p&gt;
This does not happen for "saving as draft".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 03 Jul 2016 14:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:6/1467555981209758</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1467555979000464"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 03 Jul 2016 13:57:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:5/1467554245368972</guid>
      <description>&lt;p&gt;
@patilswapnilv and also, FYI, the RTL files are also automatically generated from the LTR files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37261 (Consider removing the `$start` argument from ...) created</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Sun, 03 Jul 2016 12:46:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37261</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37261/1467549977412764</guid>
      <description>&lt;p&gt;
As a follow up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35244" title="Unit Tests: `WP_UnitTest_Generator_Sequence` needs a static ..."&gt;[35244]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37299" title="Tests: Use the same incrementor for all fields belonging to a given ..."&gt;[37299]&lt;/a&gt;, I wonder whether the &lt;code&gt;$start&lt;/code&gt; argument in &lt;code&gt;WP_UnitTest_Generator_Sequence&lt;/code&gt; still makes sense.
&lt;/p&gt;
&lt;p&gt;
Currently the class handles two things:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Global increments (via the static incrementor variable).
&lt;/li&gt;&lt;li&gt;Local increments (via the &lt;code&gt;$start&lt;/code&gt; argument).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So I'd propose to remove the &lt;code&gt;$start&lt;/code&gt; argument. A different, simpler class could be used for local increments instead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #31525,​32630 batch updated</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Sun, 03 Jul 2016 12:39:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31525%2C32630</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31525%2C32630/1467549570081980</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31525" title="#31525: enhancement: Request for filter hook for has_nav_menu() (closed: duplicate)"&gt;#31525&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37260 (Request: Functions to check if there's a 2nd page) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sun, 03 Jul 2016 11:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37260</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37260/1467544803541550</guid>
      <description>&lt;p&gt;
Sometimes it's useful to wrap a pagination function in HTML:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;nav&amp;gt;&amp;lt;?php some_wp_pag_function(); ?&amp;gt;&amp;lt;/nav&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
But if there's no 2nd page, we're left with markup such as:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;nav&amp;gt; &amp;lt;/nav&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
It would be useful to have a set of functions available which check if there's a 2nd page so we could do stuff like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_there_a_second_page() ) { ?&amp;gt;
    &amp;lt;nav&amp;gt;&amp;lt;?php some_wp_pag_function(); ?&amp;gt;&amp;lt;/nav&amp;gt;
&amp;lt;?php }
&lt;/pre&gt;&lt;p&gt;
Things that can be paginated which spring to mind are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Posts
&lt;/li&gt;&lt;li&gt;Comments
&lt;/li&gt;&lt;li&gt;A single post via &lt;code&gt;&amp;lt;!-- nextpage --&amp;gt;&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sun, 03 Jul 2016 10:41:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259/1467542478517608</guid>
      <description>&lt;p&gt;
&lt;code&gt;the_archive_description()&lt;/code&gt; uses &lt;code&gt;term_description()&lt;/code&gt; to output a description on archive pages. Tag, term and category archives are covered but author archives aren't.
&lt;/p&gt;
&lt;p&gt;
Related is &lt;code&gt;the_archive_title()&lt;/code&gt;. This function outputs a title on all archive pages as would be expected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36773 (Showing incorrect number of Updates from dashboard Home) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 03 Jul 2016 10:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36773#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36773#comment:4/1467540037907482</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37127" title="#37127: defect (bug): Shiny Updates: Decrement update count for translation updates (closed: fixed)"&gt;#37127&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37258 (Missing parameter in getNodes method of wp.mce.views) created</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Sun, 03 Jul 2016 08:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37258</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37258/1467532834587206</guid>
      <description>&lt;p&gt;
In current WP, and in last few versions, calling a view's getNodes with callback, expects a callback that will take:
&lt;/p&gt;
&lt;p&gt;
editor, this, $( this ).find( '.wpview-content' ).get( 0 )
&lt;/p&gt;
&lt;p&gt;
as arguments.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.5.3/src/wp-includes/js/mce-view.js#L379"&gt;https://core.trac.wordpress.org/browser/tags/4.5.3/src/wp-includes/js/mce-view.js#L379&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In current WP 4.6 beta, this same getNodes function expects a callback to accept only editor, and this as arguments:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;
                getNodes: function( callback, rendered ) {
                        this.getEditors( function( editor ) {
                                var self = this;
                                $( editor.getBody() )
                                        .find( '[data-wpview-text="' + self.encodedText + '"]' )
                                        .filter( function() {
                                                var data;
                                                if ( rendered == null ) {
                                                        return true;
                                                }
                                                data = $( this ).data( 'rendered' ) === true;
                                                return rendered ? data : ! data;
                                        } )
                                        .each( function() {
                                                callback.call( self, editor, this );
                                        } );
                        } );
                },
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Was there a reason for this breaking change, a reworking of wp-views system? Or just removing the redundant parameter?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>patch-to-37016-revision.patch attached to Ticket #37016</title>
      
        <dc:creator>patilswapnilv</dc:creator>

      <pubDate>Sun, 03 Jul 2016 02:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37016/patch-to-37016-revision.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37016/patch-to-37016-revision.patch/1467514703497182</guid>
      <description>&lt;p&gt;
Revised Patch to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37016" title="#37016: defect (bug): Minor Fixes: Text color for &amp;#34;Delete&amp;#34; button on widget should be Red (closed: fixed)"&gt;#37016&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>patilswapnilv</dc:creator>

      <pubDate>Sun, 03 Jul 2016 02:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:4/1467513800409745</guid>
      <description>&lt;p&gt;
Two files actually. &lt;code&gt;wp-admin/css/common.css&lt;/code&gt; and &lt;code&gt;wp-admin/css/common-rtl.css&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I think, I made some mistake while making the patch. I will remake it and then upload. Sorry for that, and thanks for bringing it to notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34079 (#a11y-headings - the Network navigation tab H3) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 03 Jul 2016 00:08:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34079#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34079#comment:11/1467504532005997</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37257" title="#37257: defect (bug): Minor CSS fix on &amp;#34;.nav-tab-wrapper&amp;#34; class (closed: fixed)"&gt;#37257&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33559 (#a11y-headings - WordPress Updates headings fixes) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 03 Jul 2016 00:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33559#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33559#comment:20/1467504204126582</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37257" title="#37257: defect (bug): Minor CSS fix on &amp;#34;.nav-tab-wrapper&amp;#34; class (closed: fixed)"&gt;#37257&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35960 (Remove excess padding from .nav-tab-wrapper) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 03 Jul 2016 00:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35960#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35960#comment:11/1467504192299244</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37257" title="#37257: defect (bug): Minor CSS fix on &amp;#34;.nav-tab-wrapper&amp;#34; class (closed: fixed)"&gt;#37257&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37257 (Minor CSS fix on ".nav-tab-wrapper" class) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 03 Jul 2016 00:02:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37257#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37257#comment:1/1467504162705420</guid>
      <description>&lt;p&gt;
The attached patch fixes the issue. It was tested on plugins, and on the About Page, verifying &lt;a href="https://core.trac.wordpress.org/ticket/33559#comment:18"&gt;this issue on ticket #33559&lt;/a&gt; won't happen again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37257.patch attached to Ticket #37257</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 23:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37257/37257.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37257/37257.patch/1467503389845194</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37257 (Minor CSS fix on ".nav-tab-wrapper" class) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 23:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37257</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37257/1467503362293152</guid>
      <description>&lt;p&gt;
When a plugin author want to create navigation menu with tabs in the plugin settings page, he uses:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="wrap"&amp;gt;
	&amp;lt;h1&amp;gt;&amp;lt;?php esc_html_e( 'Plugin Name', 'textdomain' ); ?&amp;gt;&amp;lt;/h1&amp;gt;
	&amp;lt;h2 class="nav-tab-wrapper"&amp;gt;
		&amp;lt;a href="?page=plugin_slug&amp;amp;tab=general"  class="nav-tab &amp;lt;?php echo $active_tab == 'general'  ? 'nav-tab-active' : ''; ?&amp;gt;"&amp;gt;&amp;lt;?php esc_html_e( 'General',  'textdomain' ); ?&amp;gt;&amp;lt;/a&amp;gt;
		&amp;lt;a href="?page=plugin_slug&amp;amp;tab=settings" class="nav-tab &amp;lt;?php echo $active_tab == 'settings' ? 'nav-tab-active' : ''; ?&amp;gt;"&amp;gt;&amp;lt;?php esc_html_e( 'Settings', 'textdomain' ); ?&amp;gt;&amp;lt;/a&amp;gt;
		&amp;lt;a href="?page=plugin_slug&amp;amp;tab=addons"   class="nav-tab &amp;lt;?php echo $active_tab == 'addons'   ? 'nav-tab-active' : ''; ?&amp;gt;"&amp;gt;&amp;lt;?php esc_html_e( 'Addons',   'textdomain' ); ?&amp;gt;&amp;lt;/a&amp;gt;
	&amp;lt;/h2&amp;gt;
&lt;/pre&gt;&lt;h3 id="TheProblem"&gt;The Problem&lt;/h3&gt;
&lt;p&gt;
When using &lt;code&gt;.nav-tab-wrapper&lt;/code&gt; css class, we have to use it only with &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; tags.
&lt;/p&gt;
&lt;p&gt;
We can't use &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; or any other HTML tag. Because the class applied only h1-h3 tags.
&lt;/p&gt;
&lt;p&gt;
This is why external plugins like WooCommerce (and many others) use &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; tags and add extra CSS.
&lt;/p&gt;
&lt;h3 id="TheSolution"&gt;The Solution&lt;/h3&gt;
&lt;p&gt;
To fix this and apply &lt;code&gt;.nav-tab-wrapper&lt;/code&gt; to all the HTML tags we need to edit the &lt;code&gt;wp-admin/css/common.css&lt;/code&gt; and replace this code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;h1.nav-tab-wrapper, /* Back-compat for pre-4.4 */
.wrap h2.nav-tab-wrapper, /* higher specificity to override .wrap &amp;gt; h2:first-child */
h3.nav-tab-wrapper {
	...
	...
}
&lt;/pre&gt;&lt;p&gt;
with this code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.wrap .nav-tab-wrapper,
.nav-tab-wrapper {
	...
	...
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37253 (Add several missing "_deprecated_function()" calls) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 23:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37253#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37253#comment:3/1467501993903395</guid>
      <description>&lt;p&gt;
By the way, each and every WordPress deprecated function uses &lt;code&gt;_deprecated_function()&lt;/code&gt;. All, besides those 13 functions in the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37192,​37247 batch updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 02 Jul 2016 23:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37192%2C37247</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37192%2C37247/1467500565919696</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37943" title="REST API: Reverse order of setting sanitization/validation, validating ..."&gt;37943&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Reverse order of setting sanitization/validation, validating prior to sanitizing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes mistake in the current behavior, where the sanitization callback ran before the validation callback. Now the validation callback will run before the sanitization.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props schlessera, rachelbaker.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37247" title="#37247: defect (bug): Sanitization needs to come after validation in WP_Customize_Manager (closed: fixed)"&gt;#37247&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37192" title="#37192: defect (bug): Validate before sanitizing when processing REST Request arguments (closed: fixed)"&gt;#37192&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37943]: REST API: Reverse order of setting sanitization/validation, validating ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 02 Jul 2016 23:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37943</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37943/1467500565457543</guid>
      <description>&lt;p&gt;
REST API: Reverse order of setting sanitization/validation, validating prior to sanitizing.
&lt;/p&gt;
&lt;p&gt;
Fixes mistake in the current behavior, where the sanitization callback ran before the validation callback. Now the validation callback will run before the sanitization.
&lt;/p&gt;
&lt;p&gt;
Props schlessera, rachelbaker.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37247" title="#37247: defect (bug): Sanitization needs to come after validation in WP_Customize_Manager (closed: fixed)"&gt;#37247&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37192" title="#37192: defect (bug): Validate before sanitizing when processing REST Request arguments (closed: fixed)"&gt;#37192&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37192 (Validate before sanitizing when processing REST Request arguments) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 02 Jul 2016 22:56:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37192#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37192#comment:7/1467500197306288</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37192/37192.2.diff" title="Attachment '37192.2.diff' in Ticket #37192"&gt;37192.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37192/37192.2.diff" title="Download"&gt;​&lt;/a&gt; I fixed the unit test that was returning a &lt;code&gt;404&lt;/code&gt; instead of &lt;code&gt;200&lt;/code&gt; due to mismatched namespace in the route registration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37192.2.diff attached to Ticket #37192</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 02 Jul 2016 22:52:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37192/37192.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37192/37192.2.diff/1467499952234907</guid>
      <description>&lt;p&gt;
Fix test and trim whitespace
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19464 (Auto add do_action for menu in admin) updated</title>
      
        <dc:creator>slushman</dc:creator>

      <pubDate>Sat, 02 Jul 2016 20:44:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19464#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19464#comment:7/1467492285828265</guid>
      <description>&lt;p&gt;
I'm not seeing any hooks in Customizer for this concept either. Is there any way to do this? I need to add some menu options/settings to the area described in this ticket and in the matching areas the Customizer menu areas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3517 (WordPress should be 100% UTF-8) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 02 Jul 2016 20:33:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3517#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3517#comment:31/1467491628963169</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1467491625000110"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34893,​37192,​37247 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Jul 2016 18:38:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34893%2C37192%2C37247</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34893%2C37192%2C37247/1467484688439377</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37942" title="Customize: Reverse order of setting sanitization/validation, ..."&gt;37942&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Reverse order of setting sanitization/validation, validating prior to sanitizing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reverses order where sanitization was being applied before validation originally in accordance with REST API logic.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter, schlessera.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37192" title="#37192: defect (bug): Validate before sanitizing when processing REST Request arguments (closed: fixed)"&gt;#37192&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37247" title="#37247: defect (bug): Sanitization needs to come after validation in WP_Customize_Manager (closed: fixed)"&gt;#37247&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37942]: Customize: Reverse order of setting sanitization/validation, ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Jul 2016 18:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37942</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37942/1467484687934465</guid>
      <description>&lt;p&gt;
Customize: Reverse order of setting sanitization/validation, validating prior to sanitizing.
&lt;/p&gt;
&lt;p&gt;
Reverses order where sanitization was being applied before validation originally in accordance with REST API logic.
&lt;/p&gt;
&lt;p&gt;
Props westonruter, schlessera.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37192" title="#37192: defect (bug): Validate before sanitizing when processing REST Request arguments (closed: fixed)"&gt;#37192&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37247" title="#37247: defect (bug): Sanitization needs to come after validation in WP_Customize_Manager (closed: fixed)"&gt;#37247&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37176 (A really long title is breaking the layout with the default themes) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 02 Jul 2016 18:30:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37176#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37176#comment:6/1467484208398494</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37225 (Update TinyMCE to 4.3.13) updated</title>
      
        <dc:creator>bduclos</dc:creator>

      <pubDate>Sat, 02 Jul 2016 17:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37225#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37225#comment:2/1467480320133379</guid>
      <description>&lt;p&gt;
Just to let you know that TinyMCE has been updated to 4.4.0: &lt;a class="ext-link" href="https://github.com/tinymce/tinymce/blob/master/changelog.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tinymce/tinymce/blob/master/changelog.txt&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37256 (Support for User taxonomies: Automatically add menu items and admin ...) created</title>
      
        <dc:creator>helgatheviking</dc:creator>

      <pubDate>Sat, 02 Jul 2016 15:04:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37256</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37256/1467471894055991</guid>
      <description>&lt;p&gt;
Apparently it is possible to register a taxonomy for Users:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function create_user_tax() {
    register_taxonomy(
        'group',
        'user',
        array(
            'label' =&amp;gt; __( 'Group' )
        )
    );
}
add_action('init', 'create_user_tax');
&lt;/pre&gt;&lt;p&gt;
as described in [Justin Tadlock's tutorial](&lt;a class="ext-link" href="http://justintadlock.com/archives/2011/10/20/custom-user-taxonomies-in-wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://justintadlock.com/archives/2011/10/20/custom-user-taxonomies-in-wordpress&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
And &lt;code&gt;wp_set_object_terms()&lt;/code&gt; and &lt;code&gt;wp_get_object_terms()&lt;/code&gt; already work (though it *just* occurred to me there could be a slight issue if a user ID has the same ID as a post and they share a taxonomy), but as the tutorial describes you need to add your own Manage terms page *and* your own term count callback. I'd like to propose that those be added automatically just like any post type taxonomy.
&lt;/p&gt;
&lt;p&gt;
I'd also like to propose &lt;code&gt;WP_User_Query&lt;/code&gt; support &lt;code&gt;tax_query&lt;/code&gt; args the same as posts. The query can already be modified via &lt;code&gt;pre_get_users&lt;/code&gt; to support this, I think it'd just be cooler if it were in core.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function user_tax_query( $query ) {
    global $wpdb;
    // fake a tax query
    if ( isset( $query-&amp;gt;query_vars['tax_query'] ) &amp;amp;&amp;amp; is_array( $query-&amp;gt;query_vars['tax_query'] ) ) {
        $tax_args = $query-&amp;gt;query_vars['tax_query'];
        if ( isset( $tax_args['taxonomy'] &amp;amp;&amp;amp; isset( $tax_args['terms'] ) ) ) {
            $args = array(
        		array(
        			'taxonomy' =&amp;gt; $tax_args['taxonomy'],
        			'field'    =&amp;gt; 'slug', // eventually account for IDs
        			'terms'    =&amp;gt; isset( $tax_args['terms'] ),
        		),
        	);
	        $sql = get_tax_sql( $args, $wpdb-&amp;gt;prefix . 'users', 'ID' );
            if( isset( $sql['join'] ) ){
                $query-&amp;gt;query_from .= $sql['join'];
            }
            if( isset( $sql['where'] ) ){
                $query-&amp;gt;query_where .= $sql['where'];
            }
        }
    }
}
add_action( 'pre_user_query', 'user_tax_query' );
&lt;/pre&gt;&lt;p&gt;
With that filter in place a &lt;code&gt;WP_User_Query&lt;/code&gt; can query the users in a specific taxonomy:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array( 'tax_query' =&amp;gt; array(
                    array(
                        'taxonomy' =&amp;gt; 'group',
                        'field'    =&amp;gt; 'slug',
                        'terms'    =&amp;gt; 'blue-group',
                    ),
                )
            );
$users = new WP_User_Query( $args );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36996 (get_the_post_thumbnail and the usage of class attribute) updated</title>
      
        <dc:creator>wido</dc:creator>

      <pubDate>Sat, 02 Jul 2016 13:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36996#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36996#comment:1/1467465394230668</guid>
      <description>&lt;p&gt;
Your problem is inside the get_attachment_image function where the default arguments ( class included ) are parsed with the ones you provide.
&lt;/p&gt;
&lt;pre class="wiki"&gt;// wp-includes/media.php:811 ( trunk )
$default_attr = array(
			'src'	=&amp;gt; $src,
			'class'	=&amp;gt; "attachment-$size_class size-$size_class",
			'alt'	=&amp;gt; trim(strip_tags( get_post_meta($attachment_id, '_wp_attachment_image_alt', true) )), // Use Alt field first
		);
&lt;/pre&gt;&lt;p&gt;
then
&lt;/p&gt;
&lt;pre class="wiki"&gt;// wp-includes/media.php:821 ( trunk )
$attr = wp_parse_args( $attr, $default_attr );
&lt;/pre&gt;&lt;p&gt;
The wp_parse_args use an array_merge where the $default_attr is the first parameter and the second is $attr, so, the second parameter override the first one.
&lt;/p&gt;
&lt;p&gt;
I don't know if this is a bug or not, but you can use the 'wp_get_attachment_image_attributes' filter which will pass $attr, $attachment and $size to add again the classes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35736 (Replace 'Lost Password' phrase with 'Reset Password') updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 12:59:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35736#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35736#comment:20/1467464398143188</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35736#comment:19" title="Comment 19"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So "Forgot password?" is more common than "Lost Password" or "Reset password"… Why don't we settle for this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We don't settle. We need to do what is right for WordPress, not what done by others.
&lt;/p&gt;
&lt;p&gt;
As I mentioned above, the 3 action links under the login form should not contain any question. We are not asking the user what he is looking for, we are telling him what he can do.
&lt;/p&gt;
&lt;p&gt;
The questions "Lost my password?" and "Forgot password?" belong to an older era when you could manually change passwords. Now, you can't do this by yourself, the system is resetting your password. The semantics should be updated accordingly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37254 ($this-&gt;request duplication in WP_Term_Query) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 02 Jul 2016 10:55:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37254#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37254#comment:4/1467456953541442</guid>
      <description>&lt;p&gt;
thanks @swissspidy
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37254 ($this-&gt;request duplication in WP_Term_Query) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 10:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37254#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37254#comment:3/1467454989538232</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37255 (wp_get_attachment_caption and post parameter) created</title>
      
        <dc:creator>wido</dc:creator>

      <pubDate>Sat, 02 Jul 2016 09:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37255</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37255/1467451562683235</guid>
      <description>&lt;p&gt;
Some WordPress functions accept the $post object as parameter instead only the $post_id.
&lt;/p&gt;
&lt;p&gt;
Since most of the time we write our code within the loop or we use the $post object, could be an improvement to standardize the functions that require a post id even support the $post object?
&lt;/p&gt;
&lt;p&gt;
For the wp_get_attachment_caption for example, could be like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Retrieves the caption for an attachment.
 *
 * @since 4.6.0
 *
 * @param int|WP_Post|null $post Optional. Post ID or post object. Defaults to global $post.
 * @return string|false False on failure. Attachment caption on success.
 */
function wp_get_attachment_caption( $post = null ) {
	if ( ! $post instanceof WP_Post ) {
		if ( ! $post = get_post( $post ) ) {
			return false;
		}
	}
	if ( 'attachment' !== $post-&amp;gt;post_type ) {
		return false;
	}
	$caption = $post-&amp;gt;post_excerpt;
	/**
	 * Filters the attachment caption.
	 *
	 * @since 4.6.0
	 *
	 * @param string $caption Caption for the given attachment.
	 * @param WP_Post   $post Attachment object.
	 */
	return apply_filters( 'wp_get_attachment_caption', $caption, $post );
}
&lt;/pre&gt;&lt;p&gt;
The get_the_post_thumbnail_caption that use the wp_get_attachment_caption accept the $post object.
&lt;/p&gt;
&lt;p&gt;
Also, instead of passing the $post-&amp;gt;ID to the wp_get_attachment_caption, use the $post object, so we can work directly with the object instead of calling again the get_post function to retrieve it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37249 (Missing url escapes and 'author' link relation in wp_list_authors()) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 02 Jul 2016 09:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37249#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37249#comment:1/1467451431064304</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37254 ($this-&gt;request duplication in WP_Term_Query) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 02 Jul 2016 09:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37254#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37254#comment:2/1467451012973189</guid>
      <description>&lt;p&gt;
ps: I meant of course &lt;code&gt;WP_Term_Query&lt;/code&gt;, not &lt;code&gt;WP_Tax_Query&lt;/code&gt;, but I can't modify the original ticket ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37254 ($this-&gt;request duplication in WP_Term_Query) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 02 Jul 2016 09:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37254#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37254#comment:1/1467450757410253</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-term-query.diff attached to Ticket #37254</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 02 Jul 2016 09:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37254/class-wp-term-query.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37254/class-wp-term-query.diff/1467450654005892</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37254 ($this-&gt;request duplication in WP_Term_Query) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 02 Jul 2016 09:10:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37254</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37254/1467450643052070</guid>
      <description>&lt;p&gt;
This part of &lt;code&gt;WP_Term_Query&lt;/code&gt; looks like a duplication:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;request = $this-&amp;gt;request = "{$this-&amp;gt;sql_clauses['select']} ... etc
&lt;/pre&gt;&lt;p&gt;
I guess this structure originates from the &lt;code&gt;WP_Query&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;request = $old_request = "SELECT ... etc";
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37253 (Add several missing "_deprecated_function()" calls) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 07:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37253#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37253#comment:2/1467444630476537</guid>
      <description>&lt;p&gt;
It's important because I still see many plugins that use &lt;code&gt;get_screen_icon()&lt;/code&gt; and &lt;code&gt;screen_icon()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Many developers don't know that they use those deprecated function because those functions don't call &lt;code&gt;_deprecated_function()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37253 (Add several missing "_deprecated_function()" calls) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 07:25:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37253#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37253#comment:1/1467444337661644</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37253.patch attached to Ticket #37253</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 07:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37253/37253.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37253/37253.patch/1467444143614756</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37253 (Add several missing "_deprecated_function()" calls) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 02 Jul 2016 07:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37253</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37253/1467444114787121</guid>
      <description>&lt;p&gt;
I found 13 deprecated functions that don't use &lt;code&gt;_deprecated_function()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We have to use the deprecated functions call to trigger an error when &lt;code&gt;WP_DEBUG&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. It helps developers to catch and fix their code.
&lt;/p&gt;
&lt;p&gt;
See the attached patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37252 (Generic driver access to database) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 02 Jul 2016 05:10:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37252#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37252#comment:2/1467436252461523</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for the ticket, @alain91gmail! We've discussed implementing a DB driver system in the past (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21663" title="#21663: task (blessed): Use mysqli for MySQL queries when available (closed: fixed)"&gt;#21663&lt;/a&gt;, for example), but I think now's a good time to start that discussion again.
&lt;/p&gt;
&lt;p&gt;
Your implementation reminds me a lot of @markoheijnen's &lt;a class="ext-link" href="https://wordpress.org/plugins/wp-db-driver/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP DB Driver&lt;/a&gt; plugin, I'd absolutely recommend looking at that.
&lt;/p&gt;
&lt;p&gt;
Ultimately, the primary requirements for this to get into core would be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;100% backwards compatibility. The changes in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21663" title="#21663: task (blessed): Use mysqli for MySQL queries when available (closed: fixed)"&gt;#21663&lt;/a&gt; bore most of the pain of getting plugins to switch to using WPDB (instead of the &lt;code&gt;ext/mysql&lt;/code&gt; functions), so that shouldn't be too much of an issue, but it does need to be considered.
&lt;/li&gt;&lt;li&gt;Ease of use. We cannot make the WPDB interface more complex than it already is. About the only exception to that would be to provide a real query prepare interface.
&lt;/li&gt;&lt;li&gt;Performance. We would need a good set of benchmarks to show that the change doesn't have a negative effect on performance or memory usage. Ideally, I'd like to see performance improvements.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As a side note, we won't be able to drop &lt;code&gt;ext/mysql&lt;/code&gt; support until WordPress officially drops PHP 5.5 support, which isn't on the roadmap (and isn't the topic of this ticket).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35658.26.diff attached to Ticket #35658</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Sat, 02 Jul 2016 02:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.26.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.26.diff/1467428373688138</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34905 (zxcvbn() not defined (and making it impossible to edit an existing user)) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 02 Jul 2016 01:40:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34905#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34905#comment:25/1467423622938722</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34905#comment:23" title="Comment 23"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems that the appropriate ESLint rules would be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;beforeBlockComment: true
beforeLineComment: true
allowBlockStart: true
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Thanks @pento :+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37252 (Generic driver access to database) updated</title>
      
        <dc:creator>tw2113</dc:creator>

      <pubDate>Sat, 02 Jul 2016 00:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37252#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37252#comment:1/1467420265029301</guid>
      <description>&lt;p&gt;
The mysql extension version should not be considered. It has been deprecated in PHP 5.5.0 and removed in PHP 7. The mysqli and PDO ones are recommended, so those would be fine if this gets traction at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37223 (Fatal error when adding a new multi-site user due to incorrect error ...) updated</title>
      
        <dc:creator>deronimo</dc:creator>

      <pubDate>Sat, 02 Jul 2016 00:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37223#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37223#comment:3/1467420029090213</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I created a pull request:
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/221"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pull/221&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Does it address the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>