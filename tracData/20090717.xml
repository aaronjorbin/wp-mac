<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) updated</title>
      
        <dc:creator>ruslany</dc:creator>

      <pubDate>Fri, 17 Jul 2009 23:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425#comment:3/1247873131000000</guid>
      <description>&lt;p&gt;
After more investigation I do not think that support for verbose rules should be added to IIS specific code. It is still not clear to me whether verbose rules option is ever used. Manually enabling it on Apache causes WP to generate about 70 mod_rewrite rules in .htaccess file. I do not understand why it is needed, as the only rule that is required for pretty permalinks to work is the rule to rewrite everything to index.php. In addition to that, having so many rules in either .htaccess file or in web.config file may degrade the performance of the web server.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10434 (New filter request in feed.php) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 17 Jul 2009 22:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10434#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10434#comment:1/1247869551000000</guid>
      <description>worksforme: &lt;p&gt;
Only feed_link I found was in get_feed_link(), and it has a filter. Please re-open with feedback if this is still current in trunk.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10433 (Add an function to add user capable to switch the current template to ...) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 17 Jul 2009 22:22:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10433#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10433#comment:2/1247869335000000</guid>
      <description>invalid: &lt;p&gt;
indeed there are...
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10432 (Dynamic classes for current blog post item, current term item) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 17 Jul 2009 22:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10432#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10432#comment:2/1247869297000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10434 (New filter request in feed.php) created</title>
      
        <dc:creator>mogman1</dc:creator>

      <pubDate>Fri, 17 Jul 2009 22:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10434/1247868534000000</guid>
      <description>&lt;p&gt;
When writing a plugin that works with the URLs in the RSS feeds, I noticed that one of the functions used by the RSS feed generator, "self_link" in wp-includes/feed.php does not have a filter associated with it.  I had to manually modify the function in order to get the behaviour I desired.
&lt;/p&gt;
&lt;p&gt;
The other functions used by the feed generator (the_permalink_rss, comments_link, the_guid, etc) all have filters associated with them either directly or indirectly and it would be nice for this one to have a filter placed on it as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wordpress_2.8_metadata_bug.jpg attached to Ticket #10290</title>
      
        <dc:creator>cqrt</dc:creator>

      <pubDate>Fri, 17 Jul 2009 21:27:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10290/wordpress_2.8_metadata_bug.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10290/wordpress_2.8_metadata_bug.jpg/1247866039000000</guid>
      <description>&lt;p&gt;
Screenshot and commentary of WP Media Gallery after upgrade to WP 2.8.1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10290 (Images uploaded via WLW do not add to Gallery) updated</title>
      
        <dc:creator>cqrt</dc:creator>

      <pubDate>Fri, 17 Jul 2009 20:05:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10290#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10290#comment:7/1247861128000000</guid>
      <description>&lt;p&gt;
Bump and confirm that Wordpress 2.8 is no longer adding image metadata to posts when post is uploaded via XMLRPC solutions like Windows Live Writer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10433 (Add an function to add user capable to switch the current template to ...) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Fri, 17 Jul 2009 17:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10433#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10433#comment:1/1247851810000000</guid>
      <description>&lt;p&gt;
There are plugins that do this and it should probably stay that way
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10433 (Add an function to add user capable to switch the current template to ...) created</title>
      
        <dc:creator>fabiode34</dc:creator>

      <pubDate>Fri, 17 Jul 2009 17:19:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10433/1247851148000000</guid>
      <description>&lt;p&gt;
here is my own themes.php (that is located under wp-includes) and a theme.php (in my site is located under root directory) that i already tested and user is capable to change the current template to another.
Please visit &lt;a class="ext-link" href="http://www.fabiode34.com"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.fabiode34.com&lt;/a&gt; and go to page named "Templates" and choose one of the available templates.
This page is result of the available templates in the "themes" dir.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10130 (Suggested tags list adds partial tag when selecting suggested tag with ...) updated</title>
      
        <dc:creator>robertaccettura</dc:creator>

      <pubDate>Fri, 17 Jul 2009 16:28:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10130#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10130#comment:4/1247848084000000</guid>
      <description>&lt;p&gt;
I've noticed this as well in Firefox 3.5.  It's quite annoying since it's a change in expected behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10432 (Dynamic classes for current blog post item, current term item) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Fri, 17 Jul 2009 16:01:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10432#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10432#comment:1/1247846490000000</guid>
      <description>&lt;p&gt;
This should apply for all types of wp_list_objects() and wp_object_cloud()s then. Archives, tags, cats, custom taxonomies, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 17 Jul 2009 15:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:51/1247845969000000</guid>
      <description>&lt;p&gt;
I don't like the concept of a separate "trash" top level menu. I prefer the UI I have implemented in my patches, where "deleted" is just another status - that seems to make most sense to me. Anything else would seem odd and be hard to use, in my opinion.
&lt;/p&gt;
&lt;p&gt;
I don't see the need for an "empty all trashes" button either - comments and posts (for example) are separate in almost all respects, and I don't see why they should be bunched together in this one respect.
&lt;/p&gt;
&lt;p&gt;
I hadn't thought about deleting comments on posts which are deleted, but of course you are right that it would have to be done.&lt;br /&gt;
I think the best thing here would be simply to not show comments on deleted posts in the comments admin panel, and then when the post is actually &lt;em&gt;destroyed&lt;/em&gt;, destroy the comments too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10432 (Dynamic classes for current blog post item, current term item) created</title>
      
        <dc:creator>dnusim</dc:creator>

      <pubDate>Fri, 17 Jul 2009 14:35:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10432/1247841333000000</guid>
      <description>&lt;p&gt;
wp_list_pages() produces a class .current_page_item for the page you are currently viewing. This makes it possible to style the current page item different from the other page items in the list.
&lt;/p&gt;
&lt;p&gt;
But there are several other places the same functionality would come in handy: There should be equivalent ways to style the current blog post item in the Recent Posts widget, the current category in wp_list_categories(), and the current tag in wp_tag_cloud('format=list').
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>better.WP.update.notifiaction.patch attached to Ticket #10431</title>
      
        <dc:creator>Simek</dc:creator>

      <pubDate>Fri, 17 Jul 2009 12:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10431/better.WP.update.notifiaction.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10431/better.WP.update.notifiaction.patch/1247834948000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10431 (Fresh look for WP update notification on the top of page) created</title>
      
        <dc:creator>Simek</dc:creator>

      <pubDate>Fri, 17 Jul 2009 12:48:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10431/1247834924000000</guid>
      <description>&lt;p&gt;
Fresh look for WP update notification on the top of page.
&lt;/p&gt;
&lt;p&gt;
Additional - shorter form for "moz-border-radius" in "wp-admin.css" if possible.
&lt;/p&gt;
&lt;p&gt;
Preview: &lt;a class="ext-link" href="http://i28.tinypic.com/2cokfpw.png"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://i28.tinypic.com/2cokfpw.png&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10430 (Add hooks for edit_user after updating the user's profile) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 17 Jul 2009 12:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10430#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10430#comment:3/1247834093000000</guid>
      <description>invalid: &lt;p&gt;
See &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/registration.php#L225"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/registration.php#L225&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10430 (Add hooks for edit_user after updating the user's profile) reopened</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Fri, 17 Jul 2009 12:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10430#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10430#comment:2/1247832647000000</guid>
      <description>&lt;p&gt;
well, if you speak about
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action('personal_options_update', $user_id);
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action('edit_user_profile_update', $user_id);
&lt;/pre&gt;&lt;p&gt;
these hooks are executed before the actual update occurs. - thus, if you implement one of them, it will return the user's old metadata, in my case his/her previous set url...
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Fri, 17 Jul 2009 10:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425#comment:2/1247827506000000</guid>
      <description>&lt;ol&gt;&lt;li&gt;What is the use of the Verbose option?
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;I think a plugin can add non-WordPress rules via the iis7_url_rewrite_rules filter. The $non_wp_rules was designed for Apache mod_rewrite and those rules cannot be used in IIS.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;It looks like using starts-with(@name,'wordpress') is good solution.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6807 (Unable to embed iFrame objects in visual view) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 17 Jul 2009 10:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6807#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6807#comment:5/1247827074000000</guid>
      <description>duplicate: &lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9874" title="#9874: enhancement: extended and invalid elements for tinymce (closed: wontfix)"&gt;#9874&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10430 (Add hooks for edit_user after updating the user's profile) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 17 Jul 2009 10:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10430#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10430#comment:1/1247826397000000</guid>
      <description>invalid: &lt;p&gt;
edit_user() et al contain those two hooks (with different names) already.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>10430.patch attached to Ticket #10430</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Fri, 17 Jul 2009 07:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10430/10430.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10430/10430.patch/1247817121000000</guid>
      <description>&lt;p&gt;
adds two hooks if a user's profile has been updated
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10430 (Add hooks for edit_user after updating the user's profile) created</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Fri, 17 Jul 2009 07:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10430</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10430/1247817031000000</guid>
      <description>&lt;p&gt;
i have public authors' pages including the users' url to give them some link love. - to avoid links to spam-pages, i wanted to monitor my users' changes on their urls' by sending a mail after a user has updated his/her profile.
&lt;/p&gt;
&lt;p&gt;
afaik there's no possibility to fire an action AFTER a user's profile has been updated. - the attached patch adds this functionality.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10126 (Warning upon saving draft page) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 17 Jul 2009 07:00:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10126#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10126#comment:18/1247814051000000</guid>
      <description>&lt;p&gt;
can you give some precise details (server OS, apache version, mysql version, etc.) on servers that fail and those that don't?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10126 (Warning upon saving draft page) updated</title>
      
        <dc:creator>tobiasheuken</dc:creator>

      <pubDate>Fri, 17 Jul 2009 05:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10126#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10126#comment:17/1247806921000000</guid>
      <description>&lt;p&gt;
Hi Denis
&lt;/p&gt;
&lt;p&gt;
??? I still updated the Blog from WP 2.7.1 -&amp;gt; 2.8.1
&lt;/p&gt;
&lt;p&gt;
I did the following to Update the pages - after a complete backup (files + database)
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;delete every file in the root-directory and the directorys /wp-admin/ and /wp-includes/   (without wp-config.php)
&lt;/li&gt;&lt;li&gt;Upload the new files and directorys
&lt;/li&gt;&lt;li&gt;LogIn, update database
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So what do you mean with overwrite wpdb class?
&lt;/p&gt;
&lt;p&gt;
By the way ... this phenomenon appears not in every blog I updated. There are differences between the webhosters. I found the error above at webhoster all-inkl.com and hosteurope.de - but not at artfiles.de.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10429 (wrong theme files selected for editing) created</title>
      
        <dc:creator>miken32</dc:creator>

      <pubDate>Fri, 17 Jul 2009 02:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10429/1247796053000000</guid>
      <description>&lt;p&gt;
I opened up the theme editor and edited header.php. My changes were saved but weren't getting applied to the site.
Later I checked the file, and it was unchanged. But I had a backup directory (ie /wp-content/themes/mytheme/backup files/) where I had saved the original theme; the header.php in that directory was updated.
&lt;/p&gt;
&lt;p&gt;
I would guess this was broken by the fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4131" title="#4131: task (blessed): Edit Theme should allow editing files in subfolders (closed: fixed)"&gt;#4131&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Fri, 17 Jul 2009 01:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:50/1247794044000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4529#comment:49" title="Comment 49"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking at delete-comment.10.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;As "deleted" is a new comment_status we will need separate Trash Can for comments, posts, pages, etc. which differs from the OS Trash Can functionality (but may be acceptable).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Currently the Undelete action is not very clear. For comments we have "Approve | Spam | Delete Permanently" and for posts, pages, attachments will probably have "Undelete (or Restore) | Delete Permanently".
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Don't think we need Edit and Quick Edit for deleted items. That's consistent with the OS Trash Can.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
From a UI perspective, multiple trash cans make sense for WP's different kinds of objects; however, there should only be a single top-level trash can menu (preferably below all the other top level menus), and clicking on the icon/menu name, would open up whatever item's trash is likely to be filled most often (e.g. comments), and/or the 'empty all trash cans' dialogue (in that case it might be most clear to users if tabs for each type of trash appear above the list of trashed items, similar to the plugin viewing options for recently active, etc.). All types of trash cans should be submenus of the main trash menu. In this case, the max-fill counts should apply to each can separately to avoid confusion.
&lt;/p&gt;
&lt;p&gt;
When anything like a post is trashed, its comments need to also go into trash (not sure what the WP standard is for deletion of parent pages and how that affects child pages/attachments, etc. but those things need consideration as well). As azaozz mentioned, there is no need for quick edit, but perhaps it would be useful to have some sort of reassignment function for the orphans (otherwise where would undeleted comments go when their parent remains deleted). Such a reassignment feature might quickly become unwieldy with larger blogs, but perhaps by combining the post-slug guessing functions with some ajax auto-listing (like google search), it could be doable to have a field where the user can type the post slug to reassign 1 or multiple comment(s).
&lt;/p&gt;
&lt;p&gt;
Otherwise, I think the other option is to disallow undeletion of deleted comments whose parents are still deleted, and then make a default behavior (or option) when undeleting posts that have comments, such that the post's comments are also restored. In that case, there needs to be some sort of indication that the user cannot undelete a given comment because they need to first undelete its parent post (a link to the parent post's trash location).
&lt;/p&gt;
&lt;p&gt;
Lastly, if the ability to empty trash is going to remain (rather than just emptying by time/amount and allowing those values to be filtered), then there needs to be an 'empty all trashes' button, as well as 'empty this trash' buttons.
&lt;/p&gt;
&lt;p&gt;
If all trash is to be combined into a single bin (which seems more confusing and messy than what I just described, even though what I just described seems somewhat confusing as well), then there obviously needs to be some way to distinguish the type of objects in trash (via labels / icons).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 17 Jul 2009 00:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:49/1247789661000000</guid>
      <description>&lt;p&gt;
Looking at delete-comment.10.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;As "deleted" is a new comment_status we will need separate Trash Can for comments, posts, pages, etc. which differs from the OS Trash Can functionality (but may be acceptable).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Currently the Undelete action is not very clear. For comments we have "Approve | Spam | Delete Permanently" and for posts, pages, attachments will probably have "Undelete (or Restore) | Delete Permanently".
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Don't think we need Edit and Quick Edit for deleted items. That's consistent with the OS Trash Can.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:5/1247786495000000</guid>
      <description>&lt;p&gt;
Expanding on andrew's comment, the livequery approach has worked fine since 2.5. there was a slight issue with 2.8, since jquery got upgraded, and livequery needed version 1.1 which is still in beta (so needs to be checked out from CVS). But it totally works.
&lt;/p&gt;
&lt;p&gt;
Things end up looking like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery(document).ready(function(){
	jQuery("div.nav_menu_item_sortables").livequery(function() {
		// do stuff
	});
	jQuery("input.nav_menu_item_add").livequery('click', function() {
		// do stuff
	});
});
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:4/1247786293000000</guid>
      <description>wontfix: &lt;p&gt;
Not exactly. Using $.live() or livequery to attach events to html created by your plugin will work in all cases regardless of the other elements or scripts.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:16/1247786210000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:15/1247785956000000</guid>
      <description>&lt;p&gt;
I need an edit button here in Trac... I make typos every time.
&lt;/p&gt;
&lt;p&gt;
*It's seam that this &lt;strong&gt;not&lt;/strong&gt; the best answer...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) closed</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:14/1247785822000000</guid>
      <description>wontfix: &lt;p&gt;
This problem doesn't effect me, because I know how to program and only use my own self created themes, so I will not fight to the death for this. It's seam that this the best answer and there really isn't an out cry from end users for this theme &amp;amp; plugin incompatibility problem to be fixed, so I'll close this and move on.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) updated</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Thu, 16 Jul 2009 23:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:3/1247785243000000</guid>
      <description>&lt;p&gt;
I think the ultimate problem is that all of these "solutions" are very hackish and are very dependent of the current widget interface. Plugins that needs to hook into these places will break if another plugin/admin theme make changes to the widget admin interface. Also, if a future version of wordpress changes the widgets interface again (even just the look-and-feel), maintaing backwards compatibility is going to be painful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:42:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:13/1247784139000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:12" title="Comment 12"&gt;dcole07&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How could someone insert code into the page div, before (or after) the header div, and at the same level as the header div?
How could someone insert code into the header div?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And then, how can you be sure a theme has a header at all? Not all do.
&lt;/p&gt;
&lt;p&gt;
Even if they did, there are so many possibilities here that a generic hook simply cannot work. What happens when a plugin tosses in some clunky code into a theme's header that wrecks the layout. It will happen. (I even happen on the default theme with sidebars: add a &amp;lt;div style="clear: both"&amp;gt; in the sidebar, and giggle at the mess.)
&lt;/p&gt;
&lt;p&gt;
Now, imagine we introduce a dozen more hooks in locations that are inconsistently named and styled from a theme to the next. Sadly, it's just asking for trouble...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10427 (The 'recent comments' widget needs to flush its cache on ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:34:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10427#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10427#comment:2/1247783696000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;transition_comment_status&lt;/code&gt; is called together with &lt;code&gt;wp_set_comment_status&lt;/code&gt; and runs only when the status changes. Seems the right hook to clear cache.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10427 (The 'recent comments' widget needs to flush its cache on ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10427#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10427#comment:1/1247783485000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11718" title="Flush the cache in Recent Comments widget on ..."&gt;[11718]&lt;/a&gt;) Flush the cache in Recent Comments widget on transition_comment_status, props josephscott, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10427" title="#10427: defect (bug): The 'recent comments' widget needs to flush its cache on ... (closed: fixed)"&gt;#10427&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11718]: Flush the cache in Recent Comments widget on ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11718/1247783482473559</guid>
      <description>&lt;p&gt;
Flush the cache in Recent Comments widget on transition_comment_status, props josephscott, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10427" title="#10427: defect (bug): The 'recent comments' widget needs to flush its cache on ... (closed: fixed)"&gt;#10427&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 22:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:2/1247783402000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
you can also use livequery. suggesting wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426#comment:1/1247780528000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since most widgets are multi-instance chances are that there will be more than one of each on the screen. So html IDs cannot be used anywhere in the widgets (that would break any js). In that terms using the ID of the widgets is not recommended as it needs to change for each widget added to a sidebar.
&lt;/p&gt;
&lt;p&gt;
We could add a callback to wpWidgets.addEvents() however in js it's very easy to overwrite this (like you've already done):
&lt;/p&gt;
&lt;pre class="wiki"&gt;wpWidgets._addEvents = wpWidgets.addEvents;
wpWidgets.addEvents = function(scope) {...}
&lt;/pre&gt;&lt;p&gt;
Other notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Returning "false" for an event doesn't stop other listeners attached to it, propagation or bubbling. Copying the widget's html and inserting it in a sidebar removes all previously attached events. Also when a widget is saved, the html is reloaded from the ajax return.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Unless you need some (quite) advanced functionality like ajax loading an arbitrary number of tabs, etc. it's better not to use ui.tabs. The basic tab switching/hiding/disabling is easily done directly with jQuery (and won't break next time they decide to change ui.tabs).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;You can use the jQuery.live() (new in 1.3) to attach the functions to all tabs at once, including tabs that are loaded after a widget has been saved. Then you can get the current ID (if you still need it) by doing &lt;code&gt;jQuery(this).parents('.widget').attr('id')&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>hayadan-co-il.PNG attached to Ticket #10395</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:40:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10395/hayadan-co-il.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10395/hayadan-co-il.PNG/1247780415000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:12/1247779738000000</guid>
      <description>&lt;p&gt;
If there are work-a-rounds to inserting code any where within a, then maybe we should include functions in core, so plugins can use them without having to think it up for themselves.
&lt;/p&gt;
&lt;p&gt;
How could someone insert code into the page div, before (or after) the header div, and at the same level as the header div?
How could someone insert code into the header div?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:11/1247778847000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:10" title="Comment 10"&gt;dcole07&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:9" title="Comment 9"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note the complete absence of hooks in the second one. It took me an awful lot of time to reeducate users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Inserting code manually is a bad idea in so many ways. I think it's clear we don't want just anyone doing that. Having hooks creates problems because plugins actually use them, but theme authors don't care enough to add them or something. So what's a solution to this problem? The current way is far from perfect IMO... It seams like we have to put the burden on someone, who should it be? End users? Plugin developers? Theme Developers? Were currently putting in on End users, because plugins are making end users copy and paste code in manually. (Not to mention the other side effects of them doing that.) A solution is not to force plugin developers to come up with some obscure way of adding code in automatically. It's clearly not working now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What's wrong with using widgets for most of the things plugins want to insert into themes? Widgets have been greatly enhanced and simplified with 2.8. If the plugin wants to insert something in an area that is not accessible by a dynamic sidebar, then there is likely already a hook to place it correctly anyway (such as at the end or beginning of posts, etc). If plugin developers provide widgets and options to hook onto any other areas they wish to modify in a theme, I don't see any real reason to make any standardized hooks that aren't already included.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10408 (Standard Naming of Hooks in Themes) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Thu, 16 Jul 2009 21:07:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10408#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10408#comment:10/1247778446000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10408#comment:9" title="Comment 9"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note the complete absence of hooks in the second one. It took me an awful lot of time to reeducate users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Inserting code manually is a bad idea in so many ways. I think it's clear we don't want just anyone doing that. Having hooks creates problems because plugins actually use them, but theme authors don't care enough to add them or something. So what's a solution to this problem? The current way is far from perfect IMO... It seams like we have to put the burden on someone, who should it be? End users? Plugin developers? Theme Developers? Were currently putting in on End users, because plugins are making end users copy and paste code in manually. (Not to mention the other side effects of them doing that.) A solution is not to force plugin developers to come up with some obscure way of adding code in automatically. It's clearly not working now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10428 (incorrect rendering of an accented character) created</title>
      
        <dc:creator>donpaolo</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10428</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10428/1247777436000000</guid>
      <description>&lt;p&gt;
I'm using wordpress in an all-unicode server.
&lt;/p&gt;
&lt;p&gt;
My browser is gnome's epiphany.
&lt;/p&gt;
&lt;p&gt;
If I put in a post an "Ã " at the end of a line, instead of the "Ã " I see a rare character in the blog, a typical rapresentation of an incorrect unicode character.
&lt;/p&gt;
&lt;p&gt;
I saw that a temporary workaround is to make the "Ã " not the last character, adding a dot or a no breaking space, but the bug is there.
&lt;/p&gt;
&lt;p&gt;
I see the bug with firefox and IE too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10401 (Importing future posts through WXR doesn't schedule posts) closed</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10401#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10401#comment:6/1247776803000000</guid>
      <description>invalid: &lt;p&gt;
Should have checked better, while testing the import on an unpatched version, I noticed it works already, so the server I encountered the issue on had other problems. _transition_post_status actually DOES schedule the post on insertion.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>wp-includes--default-widgets.php.diff attached to Ticket #10427</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10427/wp-includes--default-widgets.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10427/wp-includes--default-widgets.php.diff/1247776173000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10427 (The 'recent comments' widget needs to flush its cache on ...) created</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10427</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10427/1247776161000000</guid>
      <description>&lt;p&gt;
The WP iPhone app uses the wp.editComment XML-RPC method to change the status of a comment.  This uses the core wp_update_comment() function to do the actual updates to a comment.  Which in turn calls the wp_transition_comment_status() function to trigger hooks that are watching for comment status changes.
&lt;/p&gt;
&lt;p&gt;
Currently the recent comment widget only clears the cache on comment_post and wp_set_comment_status events.  So comments that get their status changed through wp_update_comment() don't cause the recent comments widget cache to get updated.  To solve this here is my one line patch that adds transition_comment_status to the list of actions that cause the recent comments widget cache to get updated.
&lt;/p&gt;
&lt;p&gt;
As a side note, I think that we could remove the wp_set_comment_status action from the flush cache list for this widget.  That event should get caught by the transition_comment_status action as well.  I didn't not verify that this was case though, so I did not remove that line in my patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10401 (Importing future posts through WXR doesn't schedule posts) updated</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10401#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10401#comment:5/1247775307000000</guid>
      <description>&lt;p&gt;
Fixed, thanks for the remarks Mark!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>import-wordpress.php.patch attached to Ticket #10401</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Thu, 16 Jul 2009 20:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10401/import-wordpress.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10401/import-wordpress.php.patch/1247775286000000</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) updated</title>
      
        <dc:creator>ruslany</dc:creator>

      <pubDate>Thu, 16 Jul 2009 19:22:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425#comment:1/1247772154000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
1) Does the verbose rules options ever get used? It looks like in the rewrite.php file it is hardcoded to be off.
&lt;/p&gt;
&lt;p&gt;
2) I'll need to better understand how non_wp_rules work. Do you have an example of such rule? Or may be a plugin that uses those rules.
&lt;/p&gt;
&lt;p&gt;
3) This should be fixed. I'll try to spend some time on preparing a patch for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10426 (Should introduce JavaScript hooks/events/callback after a widget has ...) created</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Thu, 16 Jul 2009 19:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10426/1247771889000000</guid>
      <description>&lt;p&gt;
The new widget interface provides a very nice experience for the end-users, but not so much for the developers.
&lt;/p&gt;
&lt;p&gt;
As a developer, you will often find the need to use JavaScript in your widget controls, such as creating the tabs in our section widget (see: &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/section-widget/screenshots/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/extend/plugins/section-widget/screenshots/&lt;/a&gt;). This, however, is really a lot more tricky than it should have been. When WP loads the widgets interface, it will create some "stub" widgets on the left. In the "stub" widgets, all HTML IDs will include a placeholder like section-widget-&lt;span class="underline"&gt;_i&lt;/span&gt;_. When the user drags the stub widget to the sidebar, WP will copy its content and then do a search and replace of all the IDs so it will look like section-widget-1 in the end.
&lt;/p&gt;
&lt;p&gt;
This ID change causes a lot of problem for other JS code. For instance, if you tab-ify your divs on document.ready using jQueryUI Tabs, it would no longer work after the stub widget is copied over to the sidebar, because the actions it uses are dependent on the actual IDs of the divs. You might think that adding an event listener for the onClick event on the expand button will solve the problem, but it won't work because WP already attached a listen to that event, which unfortunately returns "false" - which stops the event from bubbling up.
&lt;/p&gt;
&lt;p&gt;
Currently, it requires a lot of hacking to get around this problem, (see: &lt;a class="ext-link" href="http://svn.wp-plugins.org/section-widget/trunk/section-widget.dev.js"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://svn.wp-plugins.org/section-widget/trunk/section-widget.dev.js&lt;/a&gt;) so I am suggesting we should either: a) provide a way to register JS callbacks when a widget has been added to the sidebar, or b) trigger a custom event on the widget after it has been added to the sidebar.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Thu, 16 Jul 2009 18:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:48/1247768282000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4529#comment:47" title="Comment 47"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Oh, I think I see (looking at the logs) - you mean delete after X (configurable) days &lt;em&gt;and&lt;/em&gt; delete the oldest item in the trash when there are X (configurable) items in it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's the idea. X is only configurable by hooks, so as not to clutter the backend with extra options most won't need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9264 (Self closing shortcodes) updated</title>
      
        <dc:creator>sebastien.barre</dc:creator>

      <pubDate>Thu, 16 Jul 2009 17:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9264#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9264#comment:27/1247766912000000</guid>
      <description>&lt;p&gt;
+1 / I second that. Even with the diff above, it seems to persist. I'm surprised it's not affecting more people; within the same page, you can't have the same shortcode with and without content.
&lt;/p&gt;
&lt;p&gt;
Example/Test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function shortcode_test($atts, $content=null) {
  return '&amp;lt;p&amp;gt;Shortcode Test Content: {' . $content . '}&amp;lt;/p&amp;gt;';
}
add_shortcode('test', 'shortcode_test');
&lt;/pre&gt;&lt;p&gt;
Page:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[test/]
[test]foobar[/test]
&lt;/pre&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Shortcode Test Content: {
[test]foobar}
&lt;/pre&gt;&lt;p&gt;
i.e. the first short code completely swallowed the first half of the second shortcode. Is the regexp set to be "greedy"?
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 16 Jul 2009 16:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:47/1247761245000000</guid>
      <description>&lt;p&gt;
Oh, I think I see (looking at the logs) - you mean delete after X (configurable) days &lt;em&gt;and&lt;/em&gt; delete the oldest item in the trash when there are X (configurable) items in it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 16 Jul 2009 16:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:46/1247760938000000</guid>
      <description>&lt;p&gt;
Sorry I wasn't around for the discussion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Hooks to do what exactly? Change the time before deletion? Why not just have an option in the discussion preferences?
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;What is meant by "needs to be based on how old &lt;em&gt;and how big&lt;/em&gt;"? It is already based on how old in my patch, but where does &lt;em&gt;size&lt;/em&gt; come into it? Delete longer comments sooner? Why?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) created</title>
      
        <dc:creator>bforchhammer</dc:creator>

      <pubDate>Thu, 16 Jul 2009 14:12:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425/1247753529000000</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8974" title="#8974: enhancement: WordPress permalinks settings page should work with IIS 7.0 URL ... (closed: fixed)"&gt;#8974&lt;/a&gt; introduced a set of functions and changes which allow to automatically generate Rewrite Rules for Wordpress installs running on IIS7.
&lt;/p&gt;
&lt;p&gt;
There are some issues with that implementation that I think are worth being written down and discussed somewhere so here we go:
&lt;/p&gt;
&lt;p&gt;
1) There's no &lt;strong&gt;"Verbose" option&lt;/strong&gt; for IIS rules; while I can't say when it would make sense to have a verbose listing of all WordPress rewrite rules in &lt;code&gt;.htaccess&lt;/code&gt;/&lt;code&gt;web.config&lt;/code&gt; it might be something that should be available for both systems?
&lt;/p&gt;
&lt;p&gt;
2) IIS does not add &lt;strong&gt;non wordpress rules&lt;/strong&gt; (&lt;code&gt;$non_wp_rules&lt;/code&gt;) to the &lt;code&gt;web.config&lt;/code&gt; file (&lt;code&gt;iis7_url_rewrite_rules()&lt;/code&gt;) which means that any custom rewriting which plugins/users can do on apache don't work on IIS.
&lt;/p&gt;
&lt;p&gt;
3) At the moment it's assumed that there is only ONE single rule needed for IIS. Especially when looking at the merge with WPMU this is going to become a problem because WPMU uses &lt;strong&gt;multiple rules&lt;/strong&gt;. Every rule has to have a unique name and functions like &lt;code&gt;iis7_rewrite_rule_exists()&lt;/code&gt; and &lt;code&gt;iis7_delete_rewrite_rule()&lt;/code&gt; only look for one rule with name "wordpress". Custom Rules (see 2) also won't work without a change here. For a partial fix see misc.php in &lt;a class="ext-link" href="http://trac.mu.wordpress.org/attachment/ticket/991/991-webconfig.patch"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Patch on MU #991&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Any comments?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Thu, 16 Jul 2009 14:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:10/1247753159000000</guid>
      <description>&lt;p&gt;
I'm not sure how you would style individual plugins listed without some sort of unique identifier in either the class or by adding an ID?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10422 (Answering to comment from Dashboard does not update Dashboard statistics) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 16 Jul 2009 13:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10422#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10422#comment:3/1247751966000000</guid>
      <description>&lt;p&gt;
Same thing applies when you create new posts/drafts with the QuickPress box on the dashboard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10424 (change get_filesystem_method()'s code for direct to reflect actual purpose) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10424</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10424/1247744321000000</guid>
      <description>&lt;p&gt;
due to tickets such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10205" title="#10205: enhancement: getmyuid() called instead of posix_getuid() in get_filesystem_method() ... (closed: duplicate)"&gt;#10205&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10423" title="#10423: defect (bug): get_filesystem_method() uses uses wrong owner for validation (closed: duplicate)"&gt;#10423&lt;/a&gt; I propose we add some documentation, or change the code a bit to reflect to others the intended purpose of the code.
&lt;/p&gt;
&lt;p&gt;
Eg, something such as this could potentially work:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( file_owner($temp_file) !== false &amp;amp;&amp;amp; file_owner(__FILE__) === file_owner($temp_file) ) {
//use direct
}
&lt;/pre&gt;&lt;p&gt;
Too many people assume its a typo, and just a complex is_writable() call..
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:6/1247744214000000</guid>
      <description>duplicate: &lt;p&gt;
ok, i'll make a new ticket for that instead..
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:5/1247744078000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
maybe we could add a filter, though. you know... so that users who want to check this differently can do so
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then they can use the filter already present, or force it through the constant. Please stop closing things so soon.
&lt;/p&gt;
&lt;p&gt;
Re-opening pending close due to a commit to add some documentation or coding it differently to show that its not a typo.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:4/1247743426000000</guid>
      <description>&lt;p&gt;
maybe we could add a filter, though. you know... so that users who want to check this differently can do so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:3/1247743245000000</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10205" title="#10205: enhancement: getmyuid() called instead of posix_getuid() in get_filesystem_method() ... (closed: duplicate)"&gt;#10205&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:2/1247742709000000</guid>
      <description>&lt;p&gt;
see &lt;a class="ext-link" href="http://core.trac.wordpress.org/search?q=get_filesystem_method"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/search?q=get_filesystem_method&lt;/a&gt; for a tonne of previous tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 11:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423#comment:1/1247742588000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is a potential security risk.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you explain that a bit further before i just close this as duplicate and refer you to the previous tickets/explanations?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
The Wordpress files can be owned by someone else and the update system works as long as the webserver has permissions to write.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If that was the intended direction, I'd have just used an is_writable() call.
&lt;/p&gt;
&lt;p&gt;
The intended aim of that code, Is that if the owner of the Created files, Differs from that of the currently running process then to NOT use the direct setup, due to the created files being owned by someone other than the actual user.
&lt;/p&gt;
&lt;p&gt;
Another way that code could be written which may work on more hosts is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( file_owner($temp_file) !== false &amp;amp;&amp;amp; file_owner(__FILE__) === file_owner($temp_file) ) {
//use direct
}
&lt;/pre&gt;&lt;p&gt;
but that would NOT cause the direct setup to be used in your situation either..
&lt;/p&gt;
&lt;p&gt;
the usage of &lt;code&gt;getmyuid()&lt;/code&gt; was used to replace &lt;code&gt;fileowner(__FILE__)&lt;/code&gt; basically.
&lt;/p&gt;
&lt;p&gt;
Still tempted to close as duplicate, but might be worth changing the code, or at least adding a comment that its the intended code..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10423 (get_filesystem_method() uses uses wrong owner for validation) created</title>
      
        <dc:creator>cyberspice</dc:creator>

      <pubDate>Thu, 16 Jul 2009 10:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10423</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10423/1247741903000000</guid>
      <description>&lt;p&gt;
The function get_filesystem_method() creates a temporary file and then checks the ownership comparing it with the result of getmyuid().  getmyuid() does not return the owner of the web server process but of the file calling getmyid().  In this case wp-admin/includes/file.php.  This means that in order to support automatic update the Wordpress files have to be own by the same process as the webserver regardless of permissions on the files.  This is a potential security risk.
&lt;/p&gt;
&lt;p&gt;
If posix_getiud() is used where available then the owner of the webserver process is compared to the ownership of the temp file.  The Wordpress files can be owned by someone else and the update system works as long as the webserver has permissions to write.
&lt;/p&gt;
&lt;p&gt;
I have written more about this (together with a fix) in my bog.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.cyberspice.org.uk/blog/2009/07/15/wordpress-automatic-update-bug/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.cyberspice.org.uk/blog/2009/07/15/wordpress-automatic-update-bug/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10344 (Delete link should show up after Draft Autosave) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 10:41:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10344#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10344#comment:1/1247740914000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 that this would be nice to have.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10382 (plugins descriptions aren't localized) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 16 Jul 2009 07:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10382#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10382#comment:17/1247730313000000</guid>
      <description>&lt;p&gt;
OK, but translated plugin description is displayed only when plugin was sometimes activated. When I download fresh plugin and do not activate it, then description is not translated...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10422 (Answering to comment from Dashboard does not update Dashboard statistics) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 07:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10422#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10422#comment:2/1247729889000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Theres something similar for other counts such as plugin update count not changing upon updating, and comment count not changing upon spamming/deleting from the dashboard.
&lt;/p&gt;
&lt;p&gt;
Maybe a new function that inserts inline JS into Ajax responses about number-changes would be possible.. just a thought there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 07:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:7/1247729724000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
so having a "preferred transport" filter would be better solution.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A filter on the order would actually accomplish both parties here..
&lt;/p&gt;
&lt;p&gt;
If we keep the filter named to enforce that it should be used to re-order the list, then that'll prevent abuse by most developers.. But it would also allow for someone to return mearly 1 transport...
&lt;/p&gt;
&lt;p&gt;
I'm still -1 though, I'd rather help others who might end up in the same server circumstances than help a developer or too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10422 (Answering to comment from Dashboard does not update Dashboard statistics) updated</title>
      
        <dc:creator>honza.skypala</dc:creator>

      <pubDate>Thu, 16 Jul 2009 05:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10422#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10422#comment:1/1247721654000000</guid>
      <description>&lt;p&gt;
Just a note - of course the complex solution would update the statistics in the "Right now" box also for other actions on comments taken in Dashboard, like deleting a comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10422 (Answering to comment from Dashboard does not update Dashboard statistics) created</title>
      
        <dc:creator>honza.skypala</dc:creator>

      <pubDate>Thu, 16 Jul 2009 05:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10422</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10422/1247721528000000</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
there is a short statistics "Right now/At a Glance" box in Dashboard, containing number of posts, pages, comments etc.
&lt;/p&gt;
&lt;p&gt;
There is also a box with list of most recent comments in the Dashboard.
&lt;/p&gt;
&lt;p&gt;
If a user answers to a comment in this "Recent comments" box in Dashboard, which uses AJAX, so it does not reload the whole page, it creates a new comment, but the number of comments in the "Right now" box is not updated.
&lt;/p&gt;
&lt;p&gt;
I know this is not a critical bug, but it would be really nice if it works.
&lt;/p&gt;
&lt;p&gt;
Take care, Honza
&lt;/p&gt;
&lt;p&gt;
P.S.: As there is no "Dashboard" component in the Trac, I did not know whether to assign it to Administration or Comments component. I put it into Administration, if you think it better suits to Comments or any other component, please feel free to change it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10416 (Create filter and or constant for forcing use of a specific http transport) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 01:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10416#comment:6/1247709354000000</guid>
      <description>&lt;p&gt;
-1 from me too in the current form. Perhaps in some cases one transport works better than another, so having a "preferred transport" filter would be better solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 01:49:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:9/1247708958000000</guid>
      <description>&lt;p&gt;
The last patch looks good but why is this needed? A plugin would be able to add the required css only while active or perhaps one plugin could highlight another? Or plugins can be hidden with js or css? Not sure if that's a good idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:8/1247705156000000</guid>
      <description>&lt;p&gt;
This works perfect for the intended goal.  Just needed a way to style individual plugins listed and this update accomplishes just that!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10390 (attachments should store the WP uploads path that was configured when ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10390#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10390#comment:6/1247705041000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10390#comment:3" title="Comment 3"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 (Like another ticket somewhere in WP) to change the url's in posts retroactively
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To do that properly at the moment a db backup has to be made, URLs replaced, then some old posts tested to confirm success and eventually the db restored on failure. Think that's best left for a plugin or for the user to do manually as it would be needed in relatively few cases.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10390#comment:5" title="Comment 5"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or rather, what needs to be done is, we store the current value of get_option(upload_dir) ... That way, if the folder is changed later on, we still have the correct url
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
But that will return the wrong URL when the folder has been moved or renamed which seem to be the most common cases.
&lt;/p&gt;
&lt;p&gt;
Perhaps we need a good "canonical" plugin that can handle the different cases when moving, copying, renaming, etc. the uploads directory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:9/1247703574000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10407#comment:8" title="Comment 8"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's actually not. It creates bugs in apply_filters() and do_action(), which were closed (as wontfix, for good reasons) when I reported them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Completely different scenario's. remove_filter will work in that case, Its only an issue when removing functions hooked to the current filter that is not the current function. (ie. As long as you're not attempting to remove a function that is going to be fired on THIS iteration of the stack)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No no, it also affects later functions on the same hook in some weird edge cases. But that's not the point of this ticket, is it? :-)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but based on the workaround code I had to use when I was maintaining my own FTP filesystem class (i.e. disconnect/reconnect after so many files), it actually is the entire sessions' timeout on a lot of platforms.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which sounds entirely possible, Just need to find a value which is going to work for all of core.. I know FTP takes sub 5 seconds in total on my new host.. I know it takes &amp;gt;120seconds on others.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It took well over 90s on Jeff's host. I've bumped it to 600s (as I did for the timeout) to see how things went. Will report back when he replies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10407 (FTP Extension-based filesystem fails on WP core upgrade/re-install) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10407#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10407#comment:8/1247703368000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's actually not. It creates bugs in apply_filters() and do_action(), which were closed (as wontfix, for good reasons) when I reported them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Completely different scenario's. remove_filter will work in that case, Its only an issue when removing functions hooked to the current filter that is not the current function. (ie. As long as you're not attempting to remove a function that is going to be fired on THIS iteration of the stack)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but based on the workaround code I had to use when I was maintaining my own FTP filesystem class (i.e. disconnect/reconnect after so many files), it actually is the entire sessions' timeout on a lot of platforms.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which sounds entirely possible, Just need to find a value which is going to work for all of core.. I know FTP takes sub 5 seconds in total on my new host.. I know it takes &amp;gt;120seconds on others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10421 (Unique ID on installed plugins) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 16 Jul 2009 00:07:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10421#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10421#comment:7/1247702829000000</guid>
      <description>&lt;p&gt;
Cool. So, quick question... Is this behavior the behavior we're wanting (now you're seeing why I so preferred the class to the ID):
&lt;/p&gt;
&lt;pre class="wiki"&gt;	&amp;lt;tr class='inactive plugin-Akismet'&amp;gt;
...	&amp;lt;/tr&amp;gt;
	&amp;lt;tr class='inactive plugin-Akismet second'&amp;gt;
...	&amp;lt;/tr&amp;gt;
&lt;/pre&gt;&lt;p&gt;
To me, it makes sense, based on your stated goals, i.e. style a particular plugin in the admin area.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>