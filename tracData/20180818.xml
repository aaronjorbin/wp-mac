<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>44812.diff attached to Ticket #44812</title>
      
        <dc:creator>torontodigits</dc:creator>

      <pubDate>Sat, 18 Aug 2018 23:05:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44812/44812.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44812/44812.diff/1534633508658767</guid>
      <description>&lt;p&gt;
Patch refreshed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44812 (Undefined variable unset) updated</title>
      
        <dc:creator>torontodigits</dc:creator>

      <pubDate>Sat, 18 Aug 2018 23:04:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44812#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44812#comment:1/1534633474060526</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @hitendra-chopda,
&lt;/p&gt;
&lt;p&gt;
Welcome to the Trac.
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting the bug.
&lt;/p&gt;
&lt;p&gt;
Regarding the &lt;code&gt;admin_body_class&lt;/code&gt; filter I don't think there should be inline documentation for $admin_body_classes parameter as this filter takes only on parameter and it is already documented.
&lt;/p&gt;
&lt;p&gt;
I have refreshed the patch accordingly. Let's wait for second opinion as well.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17737 (Be better at forcing data types for query vars) updated</title>
      
        <dc:creator>arcturusink</dc:creator>

      <pubDate>Sat, 18 Aug 2018 19:13:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17737#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17737#comment:32/1534619604584806</guid>
      <description>&lt;p&gt;
Made a mistake and uploaded the patch as 44652 instead of 17737. Any suggestion on how to fix it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44652.diff attached to Ticket #17737</title>
      
        <dc:creator>arcturusink</dc:creator>

      <pubDate>Sat, 18 Aug 2018 19:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17737/44652.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17737/44652.diff/1534619171482586</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44373 (Add a privacy setting to disable comment cookie consent) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Sat, 18 Aug 2018 15:42:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44373#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44373#comment:34/1534606968848917</guid>
      <description>&lt;p&gt;
There are 3 things.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;no comment cookies whatsover, which doesn't require user consent
&lt;/li&gt;&lt;li&gt;comment cookies or no cookies based on user consent.
&lt;/li&gt;&lt;li&gt;comment cookies always with no need for the consent.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This ticket/fix however has mixed option 1 and 3.
&lt;/p&gt;
&lt;p&gt;
Wordpress admins might want 3 and end up choosing 1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-header.php.patch attached to Ticket #44812</title>
      
        <dc:creator>Hitendra Chopda</dc:creator>

      <pubDate>Sat, 18 Aug 2018 11:57:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44812/admin-header.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44812/admin-header.php.patch/1534593441219727</guid>
      <description>&lt;p&gt;
This is patch file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44812 (Undefined variable unset) created</title>
      
        <dc:creator>Hitendra Chopda</dc:creator>

      <pubDate>Sat, 18 Aug 2018 11:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44812</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44812/1534593392361754</guid>
      <description>&lt;p&gt;
I have checked out that the variable name $title_class is undefined and used it for unset.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44810 (New GDPR menu options and non default roles not working) created</title>
      
        <dc:creator>itsnotrocketsurgery</dc:creator>

      <pubDate>Sat, 18 Aug 2018 09:11:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44810</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44810/1534583508751554</guid>
      <description>&lt;p&gt;
Hi
&lt;/p&gt;
&lt;p&gt;
I use multisite and stand alone installs of wordpress. I also use a couple of plugins that deal with roles, capabilities and menu items. Using those plugins on the single site doesnt show any issues at all. However the multisite is a different matter.
&lt;/p&gt;
&lt;p&gt;
I have contacted the plugin developers and they all state it isnt their plugin so thought I would send the to you to see if it my be an issue with wordpress multisite.
&lt;/p&gt;
&lt;p&gt;
Ok so when I create a new role, copied from the admin role for a subsite all menu items show as they should, such as privacy, erase and export personal data. However if I change one capability or menu item those options disappear even if they aren't the options I was changing. I have cleaned up the plugins by uninstalling them removed their tables from the database and reset the default wordpress roles. Nothing seems to bring those options back to the menu.
&lt;/p&gt;
&lt;p&gt;
Could this be an issue in WordPress multisite? The plugins I use are Admin Menu Editor Pro, Adminimize and WPFront User Role Editor Business Pro. All plugins, themes and wordpress are on the latest version. I have tried on several different multisites with different combinations of using these plugins. No matter which one I use first If I cane anything in any of them the new GDPR options disappear from the menu on all user roles except Super Admin.
&lt;/p&gt;
&lt;p&gt;
I was wondering if you wouldn't mind looking into this as I really need to be able to use those plugins and have those options for my clients.
&lt;/p&gt;
&lt;p&gt;
Many thanks in advance.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 21:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749#comment:16/1534540312659494</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@netweb In core today, there is no unminified version of the &lt;code&gt;zxcvbn&lt;/code&gt; library. The change you suggested would result in an unminified version of the library being added to core at about &lt;code&gt;~850kb&lt;/code&gt;. I think that would be ok, but it would add nearly &lt;code&gt;1MB&lt;/code&gt; to the package.
&lt;/p&gt;
&lt;p&gt;
But, just wanted to call that addition out to make sure the decision to add the unminified version of the library is clear.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44708 (Coding consistency, seeing both $request and $request_data) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 21:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44708#comment:1/1534539967372395</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44084 (Privacy: The personal data export file should be generated in the ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 21:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44084#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44084#comment:15/1534539822425241</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44084/44084.diff" title="Attachment '44084.diff' in Ticket #44084"&gt;44084.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44084/44084.diff" title="Download"&gt;​&lt;/a&gt; is a different approach than &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44084/file.diff" title="Attachment 'file.diff' in Ticket #44084"&gt;file.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44084/file.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It utilizes the user ID stored in the &lt;code&gt;WP_User_Request&lt;/code&gt; object to prevent an unnecessary database query in &lt;code&gt;get_user_by()&lt;/code&gt;. It also switches to the site's default locale if the current user is using a different locale, and switches back after the file is done generating.
&lt;/p&gt;
&lt;p&gt;
There are a few strings not included in the actual file that are still not translated:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the stripped email, which has &lt;code&gt;@&lt;/code&gt; replaced with &lt;code&gt;-at-&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;the file basename, which is &lt;code&gt;wp-personal-data-file-$stripped_email&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These two strings should probably be translated as well. But proper sanitization will need to be added for filenames with non-English characters.
&lt;/p&gt;
&lt;p&gt;
Another situation to consider. An administrator can click a link to download the data export file in the admin. When that is clicked, a fresh file is generated. With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44084/44084.diff" title="Attachment '44084.diff' in Ticket #44084"&gt;44084.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44084/44084.diff" title="Download"&gt;​&lt;/a&gt;, the file will always be in the user's selected locale. Should the file ever be generated in the administrator's locale instead?
&lt;/p&gt;
&lt;p&gt;
Tests for this change should be added to the test class being worked on in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/44233" title="#44233: enhancement: Add missing unit tests for exporting personal data by username or ... (reviewing)"&gt;#44233&lt;/a&gt;. I can add those once that is committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44084.diff attached to Ticket #44084</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:53:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44084/44084.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44084/44084.diff/1534539234706474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44721 (The privacy data erase fulfillment email should be in the user's language) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:44:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44721#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44721#comment:2/1534538647157452</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unit tests are blocked by the class being introduced in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/44234" title="#44234: enhancement: Add missing unit tests for erasing personal data by username or email ... (assigned)"&gt;#44234&lt;/a&gt;. I can write them once that is committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44721.diff attached to Ticket #44721</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:42:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44721/44721.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44721/44721.diff/1534538579052413</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44234 (Add missing unit tests for erasing personal data by username or email ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44234#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44234#comment:9/1534537961330312</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44234.diff attached to Ticket #44234</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44234/44234.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44234/44234.diff/1534537953790343</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44558 (Unable to add new items to menu) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44558#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44558#comment:2/1534532116905880</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44558 (Unable to add new items to menu) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44558#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44558#comment:1/1534531156875931</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @kundan1255 ! Thanks for the ticket and welcome to trac!
&lt;/p&gt;
&lt;p&gt;
Can you reproduce this error with a default install of WordPress running a standard theme? This may be caused by 3rd party code.
&lt;/p&gt;
&lt;p&gt;
If you have any kind of error log output that will help to diagnose the issues as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43714 (remove_menu_page(): E_WARNING: Invalid argument supplied for foreach()) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43714#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43714#comment:1/1534530836297784</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@conner_bw thanks for the ticket! It looks like you're calling &lt;code&gt;remove_menu_item()&lt;/code&gt; via a custom framework. Are you able to reproduce this error with a clean install of WordPress without any third-party code?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:8/1534530399945971</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41801#comment:6" title="Comment 6"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It also adds a call to &lt;code&gt;wp_get_image_extensions()&lt;/code&gt; in &lt;code&gt;populate_network()&lt;/code&gt; to go along with the existing calls to &lt;code&gt;wp_get_audio_extensions()&lt;/code&gt; and &lt;code&gt;wp_get_video_extensions()&lt;/code&gt; there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The following question probably deserves a ticket of its own but I'll ask it here: why does &lt;code&gt;populate_network()&lt;/code&gt; add a number of audio and video extensions to &lt;code&gt;upload_filetypes&lt;/code&gt; that aren't included in the default &lt;code&gt;wp_get_[audio|video]_extensions()&lt;/code&gt; return values?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:7/1534530239458879</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:6/1534530226647858</guid>
      <description>&lt;p&gt;
I now remember why my original patch didn't include unit tests: there were no unit tests for &lt;code&gt;wp_get_audio_extensions()&lt;/code&gt; and &lt;code&gt;wp_get_video_extensions()&lt;/code&gt;, so I figured they weren't needed for the new &lt;code&gt;wp_get_image_extensions()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/41801/41801.2.diff"&gt;41801.2.diff&lt;/a&gt; adds unit tests for all 3 &lt;code&gt;wp_get_xxx_extensions()&lt;/code&gt; funcs.
&lt;/p&gt;
&lt;p&gt;
It also adds a call to &lt;code&gt;wp_get_image_extensions()&lt;/code&gt; in &lt;code&gt;populate_network()&lt;/code&gt; to go along with the existing calls to &lt;code&gt;wp_get_audio_extensions()&lt;/code&gt; and &lt;code&gt;wp_get_video_extensions()&lt;/code&gt; there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41801.2.diff attached to Ticket #41801</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:23:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41801/41801.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41801/41801.2.diff/1534530192465196</guid>
      <description>&lt;p&gt;
revised patch: add unit tests, add call to  wp_get_image_extensions() in populate_network()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39122 (REST API: Add Term Meta Unit Test Coverage) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:22:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39122#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39122#comment:9/1534530146830912</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39122#comment:7" title="Comment 7"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nevermind, I accidentally committed the &lt;code&gt;wp-api-generated.js&lt;/code&gt; update in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt; .
&lt;/p&gt;
&lt;p&gt;
@birgire: If you wouldn't mind refreshing your patch since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt; auto-fixed a bunch of coding standards issues, we can get that committed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
yes sure, it looks like the WPCS has been fixed, so I updated the patch with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39122/39122.3.diff" title="Attachment '39122.3.diff' in Ticket #39122"&gt;39122.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39122/39122.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When I was preparing the previous &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39122/39122.2.diff" title="Attachment '39122.2.diff' in Ticket #39122"&gt;39122.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39122/39122.2.diff" title="Download"&gt;​&lt;/a&gt;, I almost patched the changes to the auto generated &lt;code&gt;wp-api-generated.js&lt;/code&gt; too :-) I suspect we will see more of such patches in the future :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39122.3.diff attached to Ticket #39122</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:15:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39122/39122.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39122/39122.3.diff/1534529722844070</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44589 (password reset email link faulty in some email clients) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 17 Aug 2018 17:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44589#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44589#comment:9/1534527873088549</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44589.diff attached to Ticket #44589</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 17 Aug 2018 17:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44589/44589.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44589/44589.diff/1534527861208011</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44589 (password reset email link faulty in some email clients) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Aug 2018 17:29:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44589#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44589#comment:8/1534526960995153</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by otto42. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1534526960000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28212 (determine_current_user filter with priority &lt;10 gets overridden) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28212#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28212#comment:5/1534524611443997</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm moving this old ticket into the REST API component on the basis that fixing this would be necessary for alternative authentication. If a client is setting credentials be it basic auth, a bearer token, what have you, that should go before cookie authentication.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:13/1534524508098300</guid>
      <description>&lt;p&gt;
The patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44215/44215.2.diff" title="Attachment '44215.2.diff' in Ticket #44215"&gt;44215.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44215/44215.2.diff" title="Download"&gt;​&lt;/a&gt; is based on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44215/44215.diff" title="Attachment '44215.diff' in Ticket #44215"&gt;44215.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44215/44215.diff" title="Download"&gt;​&lt;/a&gt; and additionally:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds the &lt;code&gt;@group privacy&lt;/code&gt; annotation.
&lt;/li&gt;&lt;li&gt;Uses &lt;code&gt;assertCount(...)&lt;/code&gt; instead of &lt;code&gt;assertSame(..., count(...) )&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Moves the cleanup before assertions, so it runs also on failures.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
ps: I hope you don't mind that I used the opportunity to do similar minor adjustments
on few other privacy test methods + removed unused &lt;code&gt;$c&lt;/code&gt; variables. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44809 (Safeguard `has_errors()` check in extra Customizer validation) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44809#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44809#comment:2/1534524415580348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good change. Feel free to commit!
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37638" title="#37638: enhancement: Allow plugins to do comprehensive late validation of settings (closed: fixed)"&gt;#37638&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44215.2.diff attached to Ticket #44215</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44215/44215.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44215/44215.2.diff/1534524229622284</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:23/1534522634807929</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't love the name &lt;code&gt;date_floating&lt;/code&gt;, but I don't see another way around the problem at this point. My preferred naming would denote its boolean nature (and it would be explicitly defined a read-only field too).
&lt;/p&gt;
&lt;p&gt;
Filing against WordPress 5.0 milestone because we need to sort this out one way or another by then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44215.diff attached to Ticket #44215</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 15:57:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44215/44215.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44215/44215.diff/1534521458297032</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 15:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:12/1534521371170515</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Did some testing. Here are my findings of the current behaviors in core.
&lt;/p&gt;
&lt;p&gt;
The fields currently included in a data export are core user fields, a few core user meta fields, and core comment fields. All of these are either varchars, int/bigints, or text types.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Passing &lt;code&gt;false&lt;/code&gt; as a meta value results in an empty string being stored.
&lt;/li&gt;&lt;li&gt;Passing a &lt;code&gt;0&lt;/code&gt; integer as a meta value results in a &lt;code&gt;0&lt;/code&gt; string being stored.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All values for these fields are passed through &lt;code&gt;if ( ! empty( $value ) )&lt;/code&gt; before adding the data to the export. This means that in the current state, any empty field (which indicates an absence of data) will always be removed from the export. This should probably be changed.
&lt;/p&gt;
&lt;p&gt;
If the meta key exists, it potentially means something and should be displayed in the export, even if empty. Users, for example, may have an empty description, last name, or nickname field. Comments may have an empty author URL or Author IP. It could be important for the user to know that those fields are present and are in fact empty.
&lt;/p&gt;
&lt;p&gt;
If a core user meta field has been deleted, a PHP notice is currently thrown. Example: A plugin deletes the &lt;code&gt;last_name&lt;/code&gt; meta field for a user. When this happens, the field can be excluded from the report because it does not exist.
&lt;/p&gt;
&lt;p&gt;
Incoming patch with these changes.
&lt;/p&gt;
&lt;p&gt;
Worth noting, only the behavior in core's data exporters can be controlled. Plugins with custom data exporters will have their own logic about what to include and why. I think that the plugin handbook pages about creating data exporters should be updated to include a section about the differences between no data and empty data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44340 (Make use of sprintf function while translating strings) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Fri, 17 Aug 2018 14:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44340#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44340#comment:2/1534517036384445</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @saimonh,
&lt;/p&gt;
&lt;p&gt;
Congrats on creating your first ticket :-)
&lt;/p&gt;
&lt;p&gt;
In this case, I'd say that the change is unnecessary.
&lt;/p&gt;
&lt;p&gt;
It's fine for strings to have basic HTML in them. In some cases, it's necessary, so that the translator can choose what word has the strong emphasis, or which words are the link text, etc.
&lt;/p&gt;
&lt;p&gt;
In this case, you've split the strings up into multiple strings, which doesn't help with understanding context - they might be a different word for "ERROR", depending on what the issue is, but after your patch, that wouldn't be easy to adjust for, without also adding context (&lt;code&gt;_x()&lt;/code&gt;) which then results in the same string having to be translated mutliple times.
&lt;/p&gt;
&lt;p&gt;
Also, you've left the colon (&lt;code&gt;:&lt;/code&gt;) in the sprintf template, meaning other punctuation can't be used if other locales use something different to a colon.
&lt;/p&gt;
&lt;p&gt;
If markup is only at the ends of a string, then that's more likely to be a good candidate for pulling the markup out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44808 (Creating subsite with un-trimmed space results in "Missing or invalid ...) updated</title>
      
        <dc:creator>dharmin16</dc:creator>

      <pubDate>Fri, 17 Aug 2018 13:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44808#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44808#comment:1/1534512163717476</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44808.patch attached to Ticket #44808</title>
      
        <dc:creator>dharmin16</dc:creator>

      <pubDate>Fri, 17 Aug 2018 13:20:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44808/44808.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44808/44808.patch/1534512000563056</guid>
      <description>&lt;p&gt;
Add domain into trim function to trim spaces if added by mistake.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44781 (Filter for Bypass or customize admin notification email after site creation) updated</title>
      
        <dc:creator>dharmin16</dc:creator>

      <pubDate>Fri, 17 Aug 2018 13:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44781#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44781#comment:4/1534511282639960</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41956 (Errno in $wpdb) updated</title>
      
        <dc:creator>hywan</dc:creator>

      <pubDate>Fri, 17 Aug 2018 12:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41956#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41956#comment:15/1534507782893661</guid>
      <description>&lt;p&gt;
This patch is useful! Keep going :-).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44809 (Safeguard `has_errors()` check in extra Customizer validation) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 17 Aug 2018 10:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44809#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44809#comment:1/1534502747578255</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44809/44809.diff" title="Attachment '44809.diff' in Ticket #44809"&gt;44809.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44809/44809.diff" title="Download"&gt;​&lt;/a&gt; fixes the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44809.diff attached to Ticket #44809</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 17 Aug 2018 10:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44809/44809.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44809/44809.diff/1534502732798694</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44809 (Safeguard `has_errors()` check in extra Customizer validation) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 17 Aug 2018 10:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44809</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44809/1534502629043686</guid>
      <description>&lt;p&gt;
The &lt;code&gt;customize_validate_{$setting_id}&lt;/code&gt; filter is run in both the &lt;code&gt;WP_Customize_Setting&lt;/code&gt; class, but then again in &lt;code&gt;WP_Customize_Manager&lt;/code&gt;, to account for cases where someone might have overridden that method without maintaining the filter.
&lt;/p&gt;
&lt;p&gt;
I ran into an issue earlier causing a fatal error: While the documentation for &lt;code&gt;customize_validate_{$setting-&amp;gt;id}&lt;/code&gt; states that the parameter is a &lt;code&gt;WP_Error&lt;/code&gt;, several plugins and themes have been returning true in case of success. This is correctly taken care of in &lt;code&gt;WP_Customize_Setting&lt;/code&gt;, but not when the filter is executed again in &lt;code&gt;WP_Customize_Manager::validate_setting_values()&lt;/code&gt;. &lt;code&gt;has_errors()&lt;/code&gt; is called on the filter result, which however (unfortunately) may not always be a &lt;code&gt;WP_Error&lt;/code&gt; object. We should add a &lt;code&gt;is_wp_error()&lt;/code&gt; check to be safe.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 10:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:8/1534500068004127</guid>
      <description>&lt;p&gt;
@swissspidy thanks for your feedback and sorry for the mistake.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Aug 2018 08:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:7/1534496301800293</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@audrasjb Note that the version field indicates the version where the issue was first reported or introduced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 07:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:6/1534491537245733</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi, Welcome to WordPress Trac @mihaivalentin :)
&lt;/p&gt;
&lt;p&gt;
Thanks for the issue, it's a good catch!
&lt;/p&gt;
&lt;p&gt;
I tested removing the CSS declaration you quoted, and it seems to work fine.
&lt;/p&gt;
&lt;p&gt;
I'd say we can remove that line since WordPress Admin doesn't support IE8 anymore.
&lt;/p&gt;
&lt;p&gt;
Cheers,
&lt;/p&gt;
&lt;p&gt;
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39738.gif attached to Ticket #39738</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 07:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39738/39738.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39738/39738.gif/1534491397277169</guid>
      <description>&lt;p&gt;
Removing that line seems to solve the issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39738.diff attached to Ticket #39738</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 07:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39738/39738.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39738/39738.diff/1534491331221581</guid>
      <description>&lt;p&gt;
Drop support for IE8 since it's not supported anymore by WordPress Admin and this line is breaking image resizing
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17737 (Be better at forcing data types for query vars) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Aug 2018 06:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17737#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17737#comment:31/1534486571449178</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Instead of &lt;code&gt;! is_array()&lt;/code&gt;, it's probably better to check &lt;code&gt;is_string()&lt;/code&gt; specifically, see the patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44652" title="#44652: defect (bug): Lack of proper type checking in parse_query leads to PHP warnings (closed: duplicate)"&gt;#44652&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #17737,​44652 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Aug 2018 06:14:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=17737%2C44652</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=17737%2C44652/1534486443474290</guid>
      <description>duplicate: &lt;p&gt;
Hi @sfasfsafds, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/17737" title="#17737: defect (bug): Be better at forcing data types for query vars (reviewing)"&gt;#17737&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@arcturusink, thanks for the patch! Could you please upload it to &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/17737" title="#17737: defect (bug): Be better at forcing data types for query vars (reviewing)"&gt;#17737&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39122 (REST API: Add Term Meta Unit Test Coverage) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 04:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39122#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39122#comment:8/1534479109179870</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43572" title="Tests: Revert `wp-api-generated.js` change added in [43571].
The ..."&gt;43572&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Revert &lt;code&gt;wp-api-generated.js&lt;/code&gt; change added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The fixtures file was accidentally included in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt;, but that caused other tests to fail.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39122" title="#39122: enhancement: REST API: Add Term Meta Unit Test Coverage (closed: fixed)"&gt;#39122&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43572]: Tests: Revert `wp-api-generated.js` change added in [43571].  The ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 04:11:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43572</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43572/1534479108151154</guid>
      <description>&lt;p&gt;
Tests: Revert &lt;code&gt;wp-api-generated.js&lt;/code&gt; change added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The fixtures file was accidentally included in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt;, but that caused other tests to fail.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39122" title="#39122: enhancement: REST API: Add Term Meta Unit Test Coverage (closed: fixed)"&gt;#39122&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:21/1534471048005733</guid>
      <description>&lt;p&gt;
Let's schedule a Core CS chat, we can mention that it's happening in the Core chat, so folks are aware.
&lt;/p&gt;
&lt;p&gt;
I agree that it'd be valuable to go through &lt;code&gt;WordPress-Extra&lt;/code&gt; and see what we can move to &lt;code&gt;WordPress-Core&lt;/code&gt;, as well as any other discussion that comes up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749#comment:15/1534470976917335</guid>
      <description>&lt;p&gt;
Looking good, I see one issue, the following can be removed:
&lt;/p&gt;
&lt;pre class="wiki"&gt; //.min files that still need to be minified.
 'wp-includes/js/zxcvbn.min.js'
&lt;/pre&gt;&lt;p&gt;
And instead, change the &lt;code&gt;dest&lt;/code&gt; on line 1060 to &lt;code&gt;dest: 'build/wp-includes/js/zxcvbn.js'&lt;/code&gt; (Remove the &lt;code&gt;.min&lt;/code&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:52:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:20/1534470723926872</guid>
      <description>&lt;p&gt;
Would it be an idea to put WPCS on the agenda for a core chat in the near future ? And if so, which core chat would be the best one to use ?
Or should there maybe be a dedicated bi-monthly Core CS chat ?
&lt;/p&gt;
&lt;p&gt;
Aside from the above mentioned ruleset changes - which are basically a foregone conclusion -, there are a number of other sniffs in the &lt;code&gt;WordPress-Extra&lt;/code&gt; ruleset which are good candidates to be moved to the &lt;code&gt;WordPress-Core&lt;/code&gt; ruleset and some issues which could use some more discussion before a sniff can be written for them.
&lt;/p&gt;
&lt;p&gt;
We could also discuss how to bring the non-autofixable issues down further in such a chat.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39122 (REST API: Add Term Meta Unit Test Coverage) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:51:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39122#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39122#comment:7/1534470678121820</guid>
      <description>&lt;p&gt;
Nevermind, I accidentally committed the &lt;code&gt;wp-api-generated.js&lt;/code&gt; update in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt; 🙂.
&lt;/p&gt;
&lt;p&gt;
@birgire: If you wouldn't mind refreshing your patch since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt; auto-fixed a bunch of coding standards issues, we can get that committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:19/1534470628822834</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;43571&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Upgrade WPCS to 1.0.0&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
WPCS 1.0.0 includes a bunch of new auto-fixers, which drops the number of coding standards issues across WordPress significantly. Prior to running the auto-fixers, there were 15,312 issues detected. With this commit, we now drop to 4,769 issues.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This change includes three notable additions:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Multiline function calls must now put each parameter on a new line.
&lt;/li&gt;&lt;li&gt;Auto-formatting files is now part of the &lt;code&gt;grunt precommit&lt;/code&gt; script.
&lt;/li&gt;&lt;li&gt;Auto-fixable coding standards issues will now cause Travis failures.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44600" title="#44600: task (blessed): Update WPCS to 1.0.0, and enforce coding standards (closed: fixed)"&gt;#44600&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43571]: Coding Standards: Upgrade WPCS to 1.0.0  WPCS 1.0.0 includes a bunch ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43571</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43571/1534470626855384</guid>
      <description>&lt;p&gt;
Coding Standards: Upgrade WPCS to 1.0.0
&lt;/p&gt;
&lt;p&gt;
WPCS 1.0.0 includes a bunch of new auto-fixers, which drops the number of coding standards issues across WordPress significantly. Prior to running the auto-fixers, there were 15,312 issues detected. With this commit, we now drop to 4,769 issues.
&lt;/p&gt;
&lt;p&gt;
This change includes three notable additions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Multiline function calls must now put each parameter on a new line.
&lt;/li&gt;&lt;li&gt;Auto-formatting files is now part of the &lt;code&gt;grunt precommit&lt;/code&gt; script.
&lt;/li&gt;&lt;li&gt;Auto-fixable coding standards issues will now cause Travis failures.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44600" title="#44600: task (blessed): Update WPCS to 1.0.0, and enforce coding standards (closed: fixed)"&gt;#44600&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:18/1534468909033872</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-committers by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-committers/p1534468908000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 17 Aug 2018 00:47:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:17/1534466844282483</guid>
      <description>&lt;p&gt;
@pento
&lt;/p&gt;
&lt;p&gt;
Let's move the implementation discussion to the WPCS ticket please.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be possible to write a sniff for param line count &amp;gt; 1? It seems like that would take care of the cases where inline comments or blank lines exist inside the function call.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The determination is not a problem, the "should an error/warning be thrown" bit, is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 00:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:16/1534465943061225</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44600#comment:14" title="Comment 14"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Correct, this is impossible to auto-fix, though it will be relatively easy to write a sniff to warn against multi-line parameters (&lt;code&gt;line count &amp;gt; param count&lt;/code&gt;), but how to handle function calls with inline comments ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would it be possible to write a sniff for &lt;code&gt;param line count &amp;gt; 1&lt;/code&gt;? It seems like that would take care of the cases where inline comments or blank lines exist inside the function call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>