<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) updated</title>
      
        <dc:creator>nlstm</dc:creator>

      <pubDate>Thu, 28 Jun 2018 23:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:6/1530230203904611</guid>
      <description>&lt;p&gt;
I don't disagree with your strategy necessarily. A client would love that ability of course. A developer doesnt. You're strategy requires extra work for a developer, my entire point is a default behavior first which sets the priority to the_content images, if a client wants to change and override that priority then that's fine.
&lt;/p&gt;
&lt;p&gt;
But as a developer, I would never care to manually find an image and put that URL in a field, it's extra steps. Why wouldnt I just put the images in the_content section post-editor, appropriately according to a priority the developer chooses and human behavior is to always show your best images first when writing in the post-editor, because then I will know without thinking at all that a specific image will show first and it's always going to be the first image in the content then the second one and so on.
&lt;/p&gt;
&lt;p&gt;
I would want this as an automatic feature, if someone wants to override it by all means great to have that ability.
&lt;/p&gt;
&lt;p&gt;
What I am also trying to accomplish too by this is get some of the top OG plugin developers like you, some extra insight on a topic that I care a lot a lot about. I personally dont want to have to build functions or plugins for open graphs, if I can get some of the top ones to build out extra functionality.
&lt;/p&gt;
&lt;p&gt;
I am willing to continue on with the research and help in anyways, and if I figure out any filters or solutions I will post them, but I have a lot of other projects I need to do instead of building filters this month, and the filters I sometimes find often get deprecated after a few updated versions of a plugin.
&lt;/p&gt;
&lt;p&gt;
Main goal right now above anything is figure out how to get shortcodes within the content to register in open graph metas in the head, like I said no advanced shortcode plugins, php insert or any og plugins right now can accomplish this, Im worried about that being a wp core issue because of the post editor limitations when executing a shortcode.
&lt;/p&gt;
&lt;p&gt;
I appreciate your thoughts, and I agree that you are right in principle, but your principle requires thought processes in real time by real people to accomplish it. My principle is automation. Just two different strategies in which both are right.
&lt;/p&gt;
&lt;p&gt;
Lastly Facebook does a few things with images even if no og: protocols are there at all, but facebook does not do it well, caching bugs, constant refreshing is the problem currently when suggesting facebook does a few things natively, and takes a good amount of time to get facebook to do something natively without og: protocols. But agreed their native practices for Facebook, Andriod, and IOS are the_content if no og protocols exist. Keep in mind, facebook is not the only network I am considering, either, images.google.com indexing is important for og:protocols and other social networks that have bad native behavior for website images or no behavior at all, which is why you want a default behavior. And you want more than one og:image meta more often than not, looks nice on the social networks and provides more options there if you want them. A user can override the og:images with their own custom pick or simply turn off the default behavior right? Dont forget [shortcodes] are the main problem in the_content for registering og:images automatically is what this is about nothing more. Thanks @webdados I dont disagree that your strategies are actually best here, it just requires more time and work, when I want it automated by default first like how yoast does, they just cant parse shortcodes that execute images either right now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44479 (Twenty Seventeen: Video header issues) created</title>
      
        <dc:creator>stansk1954</dc:creator>

      <pubDate>Thu, 28 Jun 2018 23:38:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44479</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44479/1530229123785363</guid>
      <description>&lt;p&gt;
I have run into a problem with 2017 theme. I put a video in the header and when I do I loose all the picture posts on the front page except for Home page. When I remove the video they come back. Plus it was very difficult to remove the video. I had to do a hack to remove it.
stephenstefanski2@…
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44393 (on blog page pagination not working after 75th pages.) closed</title>
      
        <dc:creator>nunomorgadinho</dc:creator>

      <pubDate>Thu, 28 Jun 2018 23:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44393#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44393#comment:1/1530228523117079</guid>
      <description>invalid: &lt;p&gt;
Most likely not a problem with core but rather your theme. If you can replicate this issue with twentyseventeen and other themes hit us up again.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44451 (Help with WordPress asking for FTP credentials) closed</title>
      
        <dc:creator>nunomorgadinho</dc:creator>

      <pubDate>Thu, 28 Jun 2018 23:15:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44451#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44451#comment:1/1530227719367286</guid>
      <description>invalid: &lt;p&gt;
This is not needed in the default wp-config-sample. Generally, this is something people should only change if they are experiencing update problems.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44370 (wp_privacy_delete_old_export_files runs too much on some setups) updated</title>
      
        <dc:creator>nunomorgadinho</dc:creator>

      <pubDate>Thu, 28 Jun 2018 23:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44370#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44370#comment:1/1530227467189721</guid>
      <description>&lt;p&gt;
@boonebgorges if you feel strongly about this you may want to submit a patch so it can be considered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44469 (Bug encontrado) closed</title>
      
        <dc:creator>nunomorgadinho</dc:creator>

      <pubDate>Thu, 28 Jun 2018 23:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44469#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44469#comment:1/1530227268229372</guid>
      <description>invalid: &lt;p&gt;
Not enough information provided. In order to identify an issue please provide the necessary steps to reproduce the problem, a screenshot, information of the browser you were using, what you expected to happen, what happened instead and any other necessary information for someone to replicate the issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40415 (Imagick resize filter hook) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Jun 2018 20:04:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40415#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40415#comment:7/1530216261837785</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1530216261000141"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40439 (Save progress of intermediate image creation after upload) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Jun 2018 20:04:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40439#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40439#comment:11/1530216245330070</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1530216244000397"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40415 (Imagick resize filter hook) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 28 Jun 2018 20:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40415#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40415#comment:6/1530216161770654</guid>
      <description>&lt;p&gt;
Hi @losangelos – Thanks for sharing the planet4 image option. When we implemented the current solution in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33642" title="#33642: task (blessed): Improve default Imagick compression settings (closed: fixed)"&gt;#33642&lt;/a&gt; one of the constraints we needed to balance was the output quality against the resources consumed by each compression method in order to reduce/avoid resize failures on underpowered shared hosting.
&lt;/p&gt;
&lt;p&gt;
I'd love to see some performance data based on the current recommended WordPress hosting requirements to see if we can improve the defaults.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44083 (Add action to wp_mkdir_p() when directory is created successfully) updated</title>
      
        <dc:creator>seusmaniqbal</dc:creator>

      <pubDate>Thu, 28 Jun 2018 18:57:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44083#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44083#comment:6/1530212250396080</guid>
      <description>&lt;p&gt;
@desrosj Thank you for feedback. I will update new patch soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39965 (REST API: Introduce a controller for searching across post types) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Jun 2018 18:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39965#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39965#comment:31/1530210355876865</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by aduth. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1530210354000387"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>felipeloureirosantos</dc:creator>

      <pubDate>Thu, 28 Jun 2018 17:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:29/1530208219263092</guid>
      <description>&lt;p&gt;
I was looking into a way that could be really simple, and easy for new users getting at all.
&lt;/p&gt;
&lt;p&gt;
I believe that we should keep it as simple as possible. Maybe something like that.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/JejuGXS.png"&gt;&lt;img src="https://i.imgur.com/JejuGXS.png" alt="https://i.imgur.com/JejuGXS.png" crossorigin="anonymous" title="https://i.imgur.com/JejuGXS.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44391 (Improving the notification badges in admin menu) updated</title>
      
        <dc:creator>JoshuaWold</dc:creator>

      <pubDate>Thu, 28 Jun 2018 17:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44391#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44391#comment:11/1530206448146067</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
hedgefield: I mocked the most viable options up in Sketch proper, this time also with a 3-digit number (do we support higher than 999? If so, damn, we should cap it there though).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;sup&gt; @hedgefield I like the approach Slack takes, which is 9+ on the icon notification bar. In this case could we get away with 99+ ? In my experience comments has really been the only one where this becomes an issue where having 3 digits could be helpful.
&lt;/sup&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42986 (Insert default filters to wp_delete_file to don't delete core files.) reopened</title>
      
        <dc:creator>lenon</dc:creator>

      <pubDate>Thu, 28 Jun 2018 15:39:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42986#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42986#comment:2/1530200361976980</guid>
      <description>&lt;p&gt;
The recently vulnerability published by ripstech ( &lt;a class="ext-link" href="https://blog.ripstech.com/2018/wordpress-file-delete-to-code-execution/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://blog.ripstech.com/2018/wordpress-file-delete-to-code-execution/&lt;/a&gt; ) could have been avoided if had accept implementation and use wp_delete_file. I belive yet that wordpress need of option more security to delete files.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14110 (Expose height and width attributes to ...) updated</title>
      
        <dc:creator>divinenephron</dc:creator>

      <pubDate>Thu, 28 Jun 2018 15:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14110#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14110#comment:24/1530199695472537</guid>
      <description>&lt;p&gt;
I don't recall the details of exactly why I needed this, but &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14110#comment:23" title="Comment 23"&gt;comment:23&lt;/a&gt; (maintain image aspect ratio) sounds like my original reason for opening the ticket.
&lt;/p&gt;
&lt;p&gt;
Apologies for the strangeness of the original patch – I had never committed to an open source project when I wrote it and didn't know about these unwritten norms.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44391 (Improving the notification badges in admin menu) updated</title>
      
        <dc:creator>felipeloureirosantos</dc:creator>

      <pubDate>Thu, 28 Jun 2018 15:01:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44391#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44391#comment:10/1530198119799728</guid>
      <description>&lt;p&gt;
I believe that the white version is the best option. Besides that, I believe that we could put as +99 in case it is higher than 99. In this way, we wouldn't have problems related to big numbers. What's about it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44083 (Add action to wp_mkdir_p() when directory is created successfully) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 28 Jun 2018 14:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44083#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44083#comment:5/1530195534503343</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@seusmaniqbal this is looking good. Handful of small things.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can we tweak the action names a bit more. How about &lt;code&gt;before_create_directory&lt;/code&gt; / &lt;code&gt;after_create_directory&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;@since&lt;/code&gt; docblock tags don't need a description when it indicates the function is being introduced. Only when changes are made do these need notes.
&lt;/li&gt;&lt;li&gt;Can we change the doclbock descriptions a bit? Thinking "Fires before the directory is created." and "Fires after the directory is created and the permissions are set." sound a bit better.
&lt;/li&gt;&lt;li&gt;For the after action, the &lt;code&gt;$target&lt;/code&gt; parameter should not say attempt because it only fires if the directory is created. How about "Full path to the created directory."?
&lt;/li&gt;&lt;li&gt;Please add spaces between the opening and closing parentheses and the contents of the actions to &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#space-usage"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;adhere to the coding standards&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;I think we could include the &lt;code&gt;$dir_permissions&lt;/code&gt; as a second optional filter parameter. Might be useful for plugins to be able to match permissions or perform actions only when the directory has a certain permission level.
&lt;/li&gt;&lt;li&gt;Can we move the after action below the &lt;code&gt;if()&lt;/code&gt; statement? This way, if the permissions need to be reset because of the presence of a umask, the action can reasonably expect the permissions on the directory to be correct.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 28 Jun 2018 14:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:68/1530195019686774</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43438/43438.13.diff" title="Attachment '43438.13.diff' in Ticket #43438"&gt;43438.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43438/43438.13.diff" title="Download"&gt;​&lt;/a&gt; updates the &lt;code&gt;Tests_Ajax_PrivacyExportPersonalData&lt;/code&gt; class with more test cases.
&lt;/p&gt;
&lt;p&gt;
An update for &lt;code&gt;Tests_Ajax_PrivacyErasePersonalData&lt;/code&gt; is in progress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43438.13.diff attached to Ticket #43438</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 28 Jun 2018 14:07:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43438/43438.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43438/43438.13.diff/1530194822073205</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14110 (Expose height and width attributes to ...) updated</title>
      
        <dc:creator>puggan</dc:creator>

      <pubDate>Thu, 28 Jun 2018 13:20:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14110#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14110#comment:23/1530192051128987</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14110#comment:22" title="Comment 22"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14110#comment:21" title="Comment 21"&gt;puggan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 ReOpen?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would be good to have answers to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14110#comment:15" title="Comment 15"&gt;comment:15&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you define a max-width, and don't have the height-attribute, it keeps the ratio.
If you define a max-width, and have a height-attribute, it keeps the height.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.dropbox.com/s/xk8uz0jbdkgwl32/Screen%20Shot%202018-06-28%20at%2015.17.30.png?dl=0"&gt;&lt;img src="https://www.dropbox.com/s/xk8uz0jbdkgwl32/Screen%20Shot%202018-06-28%20at%2015.17.30.png?dl=0" alt="https://www.dropbox.com/s/xk8uz0jbdkgwl32/Screen%20Shot%202018-06-28%20at%2015.17.30.png" crossorigin="anonymous" title="https://www.dropbox.com/s/xk8uz0jbdkgwl32/Screen%20Shot%202018-06-28%20at%2015.17.30.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;
&amp;lt;style&amp;gt; img { max-width: 100%; } &amp;lt;/style&amp;gt;
&amp;lt;div style="width: 150px"&amp;gt;
&amp;lt;p&amp;gt;
Image with attributes
&amp;lt;/p&amp;gt;
&amp;lt;img src="https://www.google.se/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png" height="92" width="272" /&amp;gt;
&amp;lt;p&amp;gt;
Image without attributes
&amp;lt;/p&amp;gt;
&amp;lt;img src="https://www.google.se/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png" /&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20688 (Forward slash in custom taxonomy rewrite causes 404s because of ...) updated</title>
      
        <dc:creator>ianpegg</dc:creator>

      <pubDate>Thu, 28 Jun 2018 12:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20688#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20688#comment:6/1530190578853063</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20688#comment:5" title="Comment 5"&gt;polevaultweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@harikaram try registering the taxonomy earlier than the post type.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@polevaultweb -- your suggestion fixed the issue for me, thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot (1).png attached to Ticket #42912</title>
      
        <dc:creator>simplyniknaks</dc:creator>

      <pubDate>Thu, 28 Jun 2018 12:56:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42912/Screenshot%20(1).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42912/Screenshot%20(1).png/1530190567675343</guid>
      <description>&lt;p&gt;
Screenshot of error message for this problem when opening console
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42912 (JavaScript Error with Emoji Script) updated</title>
      
        <dc:creator>simplyniknaks</dc:creator>

      <pubDate>Thu, 28 Jun 2018 12:50:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42912#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42912#comment:1/1530190235676664</guid>
      <description>&lt;p&gt;
Yes I get the same error as well sometimes so would be interested in a solution.
&lt;/p&gt;
&lt;p&gt;
So far it has only happened when using the Chrome browser - changing to a different computer or a different browser on same computer and it does not happen. Sometimes it goes away after a few days but I have 1 laptop where it has not gone away (but again only when using Chrome).
&lt;/p&gt;
&lt;p&gt;
I think it may be some caching issue but do not know where to start looking looking or how to resolve.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 28 Jun 2018 12:30:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:5/1530189057418317</guid>
      <description>&lt;p&gt;
The previous language files must have been older than &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34046" title="Use `_x()` instead of string hacks for weekday and month ..."&gt;[34046]&lt;/a&gt;, that would explain it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44391 (Improving the notification badges in admin menu) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Jun 2018 12:30:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44391#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44391#comment:9/1530189026913199</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by hedgefield. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1530189026000088"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40415 (Imagick resize filter hook) updated</title>
      
        <dc:creator>losangelos</dc:creator>

      <pubDate>Thu, 28 Jun 2018 11:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40415#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40415#comment:5/1530184031608110</guid>
      <description>&lt;p&gt;
We have added a few images test results in a github page for anyone to see.
The settings of method 6 (which are included in 40415.2.diff) produce a much sharper image with smaller size at the same time for jpg images uploaded to Media Library.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Resize: Lanczos
Sharpening: unsharpMask( Radius 1, Sigma 0.45, Amount 3, Threshold 0 )
Compression: Interlace_Plane
Quality: 60
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://greenpeace.github.io/planet4-imagestest-results/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://greenpeace.github.io/planet4-imagestest-results/&lt;/a&gt; Here you can see results for 2 different images in 3 different sizes.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Method 1 is the currently used one.
&lt;/li&gt;&lt;li&gt;Method 6 seems to produce best quality and size (up to -47%) combination.
&lt;/li&gt;&lt;li&gt;Method 7 (the one used in 40415.1.diff) produces lower quality resized jpg images and at the same time larger in size. This is more evident in retina-large size images.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
You can find also info in imagemagick's website &lt;a class="ext-link" href="https://www.imagemagick.org/Usage/filter/#lanczos"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.imagemagick.org/Usage/filter/#lanczos&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40415.2.diff attached to Ticket #40415</title>
      
        <dc:creator>losangelos</dc:creator>

      <pubDate>Thu, 28 Jun 2018 10:53:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40415/40415.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40415/40415.2.diff/1530183231553153</guid>
      <description>&lt;p&gt;
Use a windowed resizing filter (Lanczos). Improve sharpening for better quality images. Use progressive compression for smaller size images.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>trac-34835.patch attached to Ticket #34835</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 28 Jun 2018 10:30:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34835/trac-34835.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34835/trac-34835.patch/1530181806935817</guid>
      <description>&lt;p&gt;
Patch with unit test.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>trac-38771.patch attached to Ticket #38771</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 28 Jun 2018 09:42:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38771/trac-38771.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38771/trac-38771.patch/1530178936090575</guid>
      <description>&lt;p&gt;
Added unit test for gmt argument fix.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44391 (Improving the notification badges in admin menu) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Thu, 28 Jun 2018 09:40:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44391#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44391#comment:8/1530178835472837</guid>
      <description>&lt;p&gt;
@Clorith I think extra digits on the icon can work, but it's a good point that it could get messy when the icons are colored or very different from the WP ones.
&lt;/p&gt;
&lt;p&gt;
I mocked the most viable options up in Sketch proper, this time also with a 3-digit number (do we support higher than 999? If so, damn, we should cap it there though).
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://sketch.cloud/s/ek9La"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://sketch.cloud/s/ek9La&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
My top 3 would be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;default placement with the high contrast white
&lt;/li&gt;&lt;li&gt;default red with added border
&lt;/li&gt;&lt;li&gt;the one on the icon without a number
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44478 (Plugin) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Jun 2018 09:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44478#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44478#comment:2/1530178620530403</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Also worth pointing out that "Plugin" is not really helpful as a ticket title :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25345 (WordPress Network uses UTC for default time zone for new blogs) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 28 Jun 2018 09:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25345#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25345#comment:23/1530177852703688</guid>
      <description>&lt;p&gt;
I'd like to point out that by now users can set their language independently from site language, so language is definitely even less tied time zones.
&lt;/p&gt;
&lt;p&gt;
I would say the main problem here is lack of universal logic to go by. For someone running multisite in a strictly single time zone inheriting is obvious, for someone running multisite all over the world it's not.
&lt;/p&gt;
&lt;p&gt;
I am not much of a multisite user, but leaving this for extension space feels ok to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44478 (Plugin) closed</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Thu, 28 Jun 2018 09:20:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44478#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44478#comment:1/1530177629073060</guid>
      <description>invalid: &lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Core Trac. Here we follow up on things that need to be corrected in WordPress Core.
As far as I can tell, you're not reporting about any problem or enhancement of WordPress core here, so the ticket will be closed.
If you have questions around the procedures for plugin or theme review, the most convenient channel is probably the relevant chat channels in our Slack team. (pluginreview themereview)
You can register yourself there via &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/chat/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44478 (Plugin) created</title>
      
        <dc:creator>fbchville</dc:creator>

      <pubDate>Thu, 28 Jun 2018 09:07:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44478</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44478/1530176848471066</guid>
      <description>&lt;p&gt;
I submitted fixes for our SeT (Simple eSpace Table) 10 days ago along with two additional messages asking for an update, but have gotten no response.
&lt;/p&gt;
&lt;p&gt;
The email that was sent to fix the plugin issues said to respond to the email.  Is that not the correct way to resond?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #24730 (Introduce a timezone-retrieval method) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 28 Jun 2018 08:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24730#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24730#comment:8/1530175011445211</guid>
      <description>&lt;p&gt;
I am very hopeful about this one now, if we have combined timezone retrieval then awful lot of offset math code can be upgraded to DateTime.
&lt;/p&gt;
&lt;p&gt;
Will work on writing unit tests for this.
&lt;/p&gt;
&lt;p&gt;
PS I would prefer &lt;code&gt;wp_timezone()&lt;/code&gt; for name, since I am working on &lt;code&gt;wp_date()&lt;/code&gt; to replace &lt;code&gt;date_i18n()&lt;/code&gt; (ticket pending, getting there).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25399 (XML-RPC and wp-mail.php struggle with timezone offsets) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 28 Jun 2018 08:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25399#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25399#comment:3/1530174870818104</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could we get a bit more detail on "struggles" ? :) Background issue had been marked as resolved since.
&lt;/p&gt;
&lt;p&gt;
I am not too hopeful, but I will be looking into eliminating offset math as much as possible. :\
&lt;/p&gt;
&lt;p&gt;
If we manage to introduce combined timezone retrieval in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/24730" title="#24730: enhancement: Introduce a timezone-retrieval method (new)"&gt;#24730&lt;/a&gt;, then a lot of old crappy logic can be upgraded to DateTime.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35295 (Bug in date time published posts and list) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 28 Jun 2018 08:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35295#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35295#comment:2/1530174307373909</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42152 (datetimepicker feature not available) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 28 Jun 2018 08:22:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42152#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42152#comment:2/1530174127503289</guid>
      <description>worksforme: &lt;p&gt;
I don't think WP core generally includes components just for the sake of having them. If there is a specific core function that could be improved by this it might be worth suggesting. Otherwise it is probably up to extensions.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44477 (Add Media on selected text should use the text as the link anchor.) created</title>
      
        <dc:creator>dotancohen</dc:creator>

      <pubDate>Thu, 28 Jun 2018 07:13:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44477</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44477/1530170036147556</guid>
      <description>&lt;p&gt;
The the site admin or editor selects text in the WYSIWYG control and presses the "Add Media" button, the link has the media filename or title as the anchor text.
&lt;/p&gt;
&lt;p&gt;
Instead, the anchor text should be the highlighted text.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44471 (Theme Editor: Modern CSS is marked as errors by CodeMirror) updated</title>
      
        <dc:creator>ThemeZee</dc:creator>

      <pubDate>Thu, 28 Jun 2018 06:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44471#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44471#comment:3/1530168782588687</guid>
      <description>&lt;p&gt;
Yes, it is hard to explain to end users that the theme is working fine although WordPress Core shows a bunch of error notices. The majority of users thinks these are major theme issues, because updating the style.css is basically deactivated unless the extra checkbox is clicked.
&lt;/p&gt;
&lt;p&gt;
Disabling the CSS property validation would be great, although I'm not sure if it works everywhere. The CSS variables cause an "Expected RBRACE" error. This could perhaps be a syntax validation issue, because CodeMirror doesn't know how to handle the two hyphens at the beginning.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40657 (Deprecate current_time( 'timestamp' )) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 28 Jun 2018 06:47:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40657#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40657#comment:4/1530168430866130</guid>
      <description>&lt;p&gt;
I’ve just recently started on that very major fixup of whole Date/Time component, so getting there. :)
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;current_time()&lt;/code&gt; is clearly one of the most problematic functions (after &lt;code&gt;date_i18n()&lt;/code&gt;) and there are 6+ tickets about dealing with it. So I don't have a clear idea what are we going to do with it yet, but we definitely handle it in some way. It would be nice to deprecate it altogether, if possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44476 (Backend section Access based on Role/User) created</title>
      
        <dc:creator>kartiks16</dc:creator>

      <pubDate>Thu, 28 Jun 2018 06:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44476</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44476/1530167617582374</guid>
      <description>&lt;p&gt;
Hello Team,
&lt;/p&gt;
&lt;p&gt;
I would like to suggest a Feature which we can plan in the current/Newer Version of WordPress.
&lt;/p&gt;
&lt;p&gt;
In WordPress backend, we can give a setting to Administrator that he can set restriction or give access only to the limited section.
&lt;/p&gt;
&lt;p&gt;
For example, if Admin wants that Subscriber can only Add Posts and can only view the pages. We can do that with Access Management.
&lt;/p&gt;
&lt;p&gt;
I understand there are certain plugins available for this, but we can have such feature by default in wordpress it will be really helpful as nowadays Admin Panel is being operated by multiple Admins/Roles.
&lt;/p&gt;
&lt;p&gt;
Let me know your thoughts on this and if this is no a good idea or suggestion, please feel free to share your opinion
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40657 (Deprecate current_time( 'timestamp' )) updated</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Thu, 28 Jun 2018 03:10:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40657#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40657#comment:3/1530155428765622</guid>
      <description>&lt;p&gt;
FWIW, I was one of those learning devs who completely misunderstood, and had to do massive changes and upgrade routines to fix it all.
&lt;/p&gt;
&lt;p&gt;
I wonder if we could at least remove this out-dated instruction [here]&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/current_time"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/current_time&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
current_time( 'timestamp' ) should be used in lieu of time() to return the blog's local time. In WordPress, PHP's time() will always return UTC and is the same as calling current_time( 'timestamp', true ).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Jun 2018 00:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:5/1530146276159456</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by nlstm. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1530146274000208"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44402 (Flickering Tinymce Link toolbox on mouseover. (Only on Windows) - ...) updated</title>
      
        <dc:creator>jcastaneda</dc:creator>

      <pubDate>Wed, 27 Jun 2018 23:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44402#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44402#comment:2/1530142189159076</guid>
      <description>&lt;p&gt;
I was able to replicate this on Windows 10, using Chrome Version 67.0.3396.99. On Edge It simply doesn't even load the toolbar, it works fine on IE. I'm running WordPress 5.0-alpha-43320 and the only active plugin is the Beta Tester plugin.
&lt;/p&gt;
&lt;p&gt;
I tried to edit an image and this is what is happening:
&lt;a class="ext-link" href="https://cloudup.com/ckf_Mr9Zf-w"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/ckf_Mr9Zf-w&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You can see in the image that the &lt;code&gt;link&lt;/code&gt; button is selected as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) updated</title>
      
        <dc:creator>webdados</dc:creator>

      <pubDate>Wed, 27 Jun 2018 23:03:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:4/1530140608977918</guid>
      <description>&lt;p&gt;
I still think the open graph image should be set explicitly, either by using the post featured image, a custom field, or a WordPress filter. Getting it from the post content is the last resort and Facebook already does that on the final HTML, no shortcodes hassle whatsoever. (And yes, I also do that on my plugin, but I do not parse shortcodes. God knows what each and every shortcode does each time he's parsed and I don't think I want to mess with that.)
&lt;/p&gt;
&lt;p&gt;
I strongly disagree with this: "the best practice is to by default get the images from the content section of the site".
&lt;/p&gt;
&lt;p&gt;
Maybe Open Graph tags will be supported in core sometime in the future but with Gutenberg around the corner, I seriously doubt "parsing shortcodes to find images for Open Graph" will ever be something implemented in core. WordPress is moving towards making shortcodes deprecated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44350 (Block plugin updates if required PHP version is not supported - ...) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44350#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44350#comment:9/1530139323120914</guid>
      <description>&lt;p&gt;
These patches are dependent upon some changes in the patch for &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43987" title="#43987: task (blessed): Block plugin updates if required PHP version is not supported - ... (assigned)"&gt;#43987&lt;/a&gt; for the View Details window to display a &lt;em&gt;Cannot Update&lt;/em&gt; button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44350.3.diff attached to Ticket #44350</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:33:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44350/44350.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44350/44350.3.diff/1530138793845198</guid>
      <description>&lt;p&gt;
changed messaging text from 'upgrading' to 'updating'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43986-final.5.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986-final.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986-final.5.diff/1530138754402301</guid>
      <description>&lt;p&gt;
changed messaging text from 'upgrading' to 'updating'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43987v3.3.diff attached to Ticket #43987</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:31:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43987/43987v3.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43987/43987v3.3.diff/1530138707177936</guid>
      <description>&lt;p&gt;
changed all messaging text from 'upgrading' to 'updating'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) reopened</title>
      
        <dc:creator>nlstm</dc:creator>

      <pubDate>Wed, 27 Jun 2018 22:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:3/1530136979510391</guid>
      <description>&lt;p&gt;
I'm going to always continue to respond and move forward on this issue, until I can either solve it, or a lot of research has been produced, I am moving forward with trying to gain continued attention to this matter and or prove it unworkable with Wordpress Core, because Open Graph Functionality is a primary focus of marketing work being done on websites. Firstly, Yoast CANNOT parse any shortcodes that execute images, to register the image source in the &amp;lt;head&amp;gt; metas, show me a filter or an example that can and I will admit defeat. From what I can tell that issue was first defined on the internet in November 2016 found here --&amp;gt; &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-seo/issues/6110"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Yoast/wordpress-seo/issues/6110&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I did also infact test older versions of yoast 2.5.3 and --&amp;gt; v3.0.4 and I think was updated on November 25th 2015 which deprecated a lot of yoast add filter settings, I mention that because something in my continued research pointed me to trying to use that version to avoid the shortcode execution problem I was having. I guess I dont know how to explain my thought process on that at this point, I just know it didnt work, maybe because I thought it did before November 2015, but that was also a way earlier version of wordpress core as well too. Regardless though.
&lt;/p&gt;
&lt;p&gt;
To respond to @webdados I respectfully disagree with your humble opinion. Your plugin by default as well as yoast and every other single plugin for Open Graphs, and every single piece of functional code for open graphs all in which accomplish the same task, by default picks up the image src if they are hard coded in the post or manually inserted into page editor.
&lt;/p&gt;
&lt;p&gt;
og:Image size metas and og:alt metas are removed from the head in the known plugins if the developers remove the html attributes for them anyways by default, so it doesnt matter on that point either, plus the social media platforms with their OG protocols are intelligent enough to know the size of the image without attributes as well as know if an alt or title is present or not. The Image Size and image alt and title metas are important to use through for SEO and to basically crop the image for facebook manually and detail better information for the fb protocols so they don’t do it manually for you.
&lt;/p&gt;
&lt;p&gt;
@webdados Your comment is asking developers to perform tedious work and tasks in which we should have automated in which your plugin does so as well as yoast does it too right but again only if manually placed in the post editor?? But now youre saying if a shortcode placed in the page or post editor that we have to manually set the image through both of your heavily loaded post-editor meta boxes, that I like to disable portions of anyways by theme default. And but, as far as I can tell, both yoast and every other plugin that allows us to set the image which is fairly nice to be able to do for less skilled developers, you can only set 1 image, Which destroys an ability to create sliding image carousels on facebook and other more intelligent features you can do, that essentially can be automated, because you can only by default set 1 image per post with all these OG plugins. Having multiple OG image metas is important to have in the head section, because when you push the link out to facebook or other social platforms including google and bing, you can adjust there very quickly on their platforms if you want them removed before you click the share and post button, which means 99% of the work is done for you.
&lt;/p&gt;
&lt;p&gt;
Again, so if you have to manually set an image because your plugins wont parse shortcodes that contain hardcoded images, and the shortcode is inserted into the post-editor, then the only workable alternative is to hardcode and write content the old fashioned way, again meaning no php functionality executed within the post editor will work with OG metas on your plugins.
&lt;/p&gt;
&lt;p&gt;
Adding multiple images manually the old fashioned traditional Wordpress way through the post editor, it's tedious work and not worth it. If I have to manually set the images that I want on 300 page websites, I mean thatd be a complete trip to hell maybe ya know.
&lt;/p&gt;
&lt;p&gt;
This is the suggestion I am trying to make, is there anything that a plugin developer can do within your theme functions to make this work with OG plugins or to create your own og plugin or functions to make this work WITHOUT modifying any wordpress core files? If it is impossible to do so then it is a wordpress CORE issue or an issue with the most widely used plugin in the world Yoast.
&lt;/p&gt;
&lt;p&gt;
You have to have the ability to USE SHORTCODES in the post editor and still get the same functionality. Again Even with STOCK WORDPRESS SHORTCODE FOR THEIR OWN IMAGE GALLERY SHORTCODE [gallery ids=”1, 2, 3,”] will not automatically parse on any know OG plugin.
&lt;/p&gt;
&lt;p&gt;
Lastly, a Marketing tip and GOOD Practice to always follow, if you intend on sharing post and page links to facebook or other social networks, like many many do, then you want to organize your images, on your post from top to bottom structuring in an intelligent and ordered way, (which is the default way yoast and other og plugins parse the content anyways) also good for SEO on search engines as well, to understand that the first image inserted is your featured image, then your 2nd image inserted is you second featured image and so on, and in that way you automate the OG protocols on facebook, as mentioned earlier before you hit the post button on facebook or other Social Post-Pushing plugins like JETPACK, you can remove certain pictures, instead of trying to find the ones you want to use and manually insert them the way @webdados suggested or yoast allows too. The only reason yoast and og plugins have that feature is to override the images contained in the content if you want to.
&lt;/p&gt;
&lt;p&gt;
And as far as what @jonoaldersonwp suggested about some of cumbersome problems associated with what I want to get accomplished here, hes not necessarily wrong that it is infact cumbersome for a plugin developer to do and get streamlined, so I push it to WORDPRESS CORE to adjust the way it interprets shortcodes in the post-editor to be able to pull the array of images from the content and their attributes the same way It does for the [gallery ids=”1,2,”] shortcode and grant the ability to editor to understand that is code first before it is outputed and executed I think maybe. Which logically if I think about this all correctly is leading me again to believing this to be a wordpress core issue because it cannot interpret an array of images in the content if it is a shortcode not even for their own gallery shortcodes. I HATE this that theirs no known good solution you have to use shortcodes in wordpress if youre ever going to place well crafted and dynamic code in the post-editor.
&lt;/p&gt;
&lt;p&gt;
Wordpress core might have to ability to make some changes to the tinymce post editor and grant the ability for the Post-Page Visual Editor to understand very intelligently the content being inserted via a SHORTCODE, because I think if that can be accomplished by Wordpress CORE default then no filters or modifications ever have to be made by theme and plugin developers, which is suggesting that wordpress core should and ought to consider caring because a primary focus of wordpress is to push content to the search engines and social networks, which also means wordpress core doesnt have to enable OG protocols they just have to more intelligently understand what the contents of a shortcode are within the wordpress admin post editor before it is executed on the front-end, I THINK maybe. Thanks for reading and caring. This is the worst issue Ive ever faced with wordpress. I’m probably going to continue to light of the internet on this, until someone cares as much as I do about it or can prove their is a known solution to at least the [gallery] shortcode as a simple test. If a filter can be added to fix this with the og: plugins ill cave, plus im sure developers will be interested in knowing about this issue and want patches and fixes for the future, if wordpress core cant do it. And again I strongly disagree with what @webdados, because the best practice is to by default get the images from the content section of the site only per post or page, having to manually add filters to a website on a per post and per page is what I think you were suggesting is a bad practice, and only good for maybe small websites 10 or 20 pages. Developers want good default behavior first then specific customization after.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44467 (Ensure meta wrapper functions do not contain additional logic) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 27 Jun 2018 21:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44467#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44467#comment:1/1530133669587176</guid>
      <description>&lt;p&gt;
I think this is a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43813" title="#43813: enhancement: Meta API should set `last_changed` cache key internally (new)"&gt;#43813&lt;/a&gt; . I think we should move the convo. Also see this &lt;a class="ext-link" href="https://github.com/wp-cli/entity-command/issues/172"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;issue&lt;/a&gt; with WP-CLI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44083 (Add action to wp_mkdir_p() when directory is created successfully) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:43:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44083#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44083#comment:4/1530128614962925</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by seusmaniqbal. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1530128613000081"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32326 (Improve Support for Structured Data) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32326#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32326#comment:9/1530128487467983</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joyously. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1530128486000096"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43904 (Media toolbar spacing inconsistent across views) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43904#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43904#comment:6/1530128281217316</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by seusmaniqbal. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1530128279000408"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) updated</title>
      
        <dc:creator>jonoaldersonwp</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:13:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:2/1530126814477645</guid>
      <description>&lt;p&gt;
I agree in principle that open graph tags should be supported in core. They're a basic universal standard, and it's a little embarrassing that WP doesn't handle basic representation of content on third party networks without a plugin.
&lt;/p&gt;
&lt;p&gt;
However...
&lt;/p&gt;
&lt;p&gt;
I'm not convinced that we should be trying to intelligently sniff for images in shortcodes, for a number of reasons.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We'd have to execute those shortcodes in the process of evaluating the_content, which is a bit performance heavy, and messy in multiple regards (we have no idea what they'll do / output).
&lt;/li&gt;&lt;li&gt;We'd then need to parse the resultant HTML to detect any if any images exist, and then, try and extract and parse them. This is riddled with issues, performance considerations, etc.
&lt;/li&gt;&lt;li&gt;There are no hints in those images as to whether they're the preferred OG image(s), or what their additional attributes (like the &lt;em&gt;alt&lt;/em&gt; or dimensions etc) should be, which requires a lot of inference + guestimation, and another (albeit minor) performance hit
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Lastly, Open Graph support from the &lt;em&gt;platforms&lt;/em&gt; (Facebook, WhatsApp, Twitter, etc) is erratic at best (see my research at &lt;a class="ext-link" href="https://yoast.com/advanced-technical-seo-social-image-ogimage-tags/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://yoast.com/advanced-technical-seo-social-image-ogimage-tags/&lt;/a&gt;), so I'm nervous about 'fudging in' extra images, there are already frameworks for registering and hooking them in.
&lt;/p&gt;
&lt;p&gt;
Having said that... At Yoast, we actually parse the shortcodes, and look for images already, if I'm not mistaken.
&lt;/p&gt;
&lt;p&gt;
So... I think that your best course of action is probably to identify the use-cases where you'd want an open currently only accessible in a shortcode reside, and patch the problem for your own requirements, or collaborate on an addition/enhancement to the Yoast SEO plugin via our GitHub (&lt;a class="ext-link" href="https://github.com/Yoast/wordpress-seo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Yoast/wordpress-seo&lt;/a&gt;) - I'd love to see some use-cases!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36726 (Date Picker field label not translated after 4.5.1) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 19:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36726#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36726#comment:4/1530126042450911</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43480 (Add $gmt parameter to the_time() function) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 18:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43480#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43480#comment:4/1530125752532110</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40050 (WordPress Timezone) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 18:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40050#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40050#comment:2/1530125423285985</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42451 (Fix WordPress UTC Time not correct issue) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 18:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42451#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42451#comment:5/1530125351347752</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44475 (wp_trim_excerpt does not trim text if you pass text in.) created</title>
      
        <dc:creator>aubreypwd</dc:creator>

      <pubDate>Wed, 27 Jun 2018 17:43:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44475/1530121381981715</guid>
      <description>&lt;pre class="wiki"&gt;/**
 * Generates an excerpt from the content, if needed.
 *
 * The excerpt word amount will be 55 words and if the amount is greater than
 * that, then the string ' [&amp;amp;hellip;]' will be appended to the excerpt. If the string
 * is less than 55 words, then the content will be returned as is.
 *
 * The 55 word limit can be modified by plugins/themes using the {@see 'excerpt_length'} filter
 * The ' [&amp;amp;hellip;]' string can be modified by plugins/themes using the {@see 'excerpt_more'} filter
 *
 * @since 1.5.0
 *
 * @param string $text Optional. The excerpt. If set to empty, an excerpt is generated.
 * @return string The excerpt.
 */
function wp_trim_excerpt( $text = '' ) {
	$raw_excerpt = $text;
	if ( '' == $text ) {
		$text = get_the_content('');
		$text = strip_shortcodes( $text );
		/** This filter is documented in wp-includes/post-template.php */
		$text = apply_filters( 'the_content', $text );
		$text = str_replace(']]&amp;gt;', ']]&amp;amp;gt;', $text);
		/**
		 * Filters the number of words in an excerpt.
		 *
		 * @since 2.7.0
		 *
		 * @param int $number The number of words. Default 55.
		 */
		$excerpt_length = apply_filters( 'excerpt_length', 55 );
		/**
		 * Filters the string in the "more" link displayed after a trimmed excerpt.
		 *
		 * @since 2.9.0
		 *
		 * @param string $more_string The string shown within the more link.
		 */
		$excerpt_more = apply_filters( 'excerpt_more', ' ' . '[&amp;amp;hellip;]' );
		$text = wp_trim_words( $text, $excerpt_length, $excerpt_more );
	}
	/**
	 * Filters the trimmed excerpt string.
	 *
	 * @since 2.8.0
	 *
	 * @param string $text        The trimmed text.
	 * @param string $raw_excerpt The text prior to trimming.
	 */
	return apply_filters( 'wp_trim_excerpt', $text, $raw_excerpt );
}
&lt;/pre&gt;&lt;p&gt;
If I pass in &lt;code&gt;$text&lt;/code&gt; it would not get trimmed and stripped. Ideally, the passed in $text should override the &lt;code&gt;$text = get_the_content('');&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Fixed shorthand date formats in date_i18n.patch attached to Ticket #20973</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 17:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20973/Fixed%20shorthand%20date%20formats%20in%20date_i18n.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20973/Fixed%20shorthand%20date%20formats%20in%20date_i18n.patch/1530120005868560</guid>
      <description>&lt;p&gt;
Fixed whitespace, getting used to new workflow :)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Fixed shorthand date formats in date_i18n.patch.txt attached to Ticket #20973</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 17:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20973/Fixed%20shorthand%20date%20formats%20in%20date_i18n.patch.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20973/Fixed%20shorthand%20date%20formats%20in%20date_i18n.patch.txt/1530119718994791</guid>
      <description>&lt;p&gt;
Adjusted unit tests and added tests for handling escaping.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 16:30:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:28/1530117057413427</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by hedgefield. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1530117056000344"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44471 (Theme Editor: Modern CSS is marked as errors by CodeMirror) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Wed, 27 Jun 2018 15:53:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44471#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44471#comment:2/1530114836633190</guid>
      <description>&lt;p&gt;
I think that since the Theme Editor is something that end-users can access, the CSS property validation should probably be disabled by default. The majority of users will not understand that these type of "errors", are not really errors. End-users seeing these unnecessary error notices could lead to them doubting themes, plugins an their developers. IMHO
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44341 (Replace  _deprecated_function( 'add_filter' ) with ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 27 Jun 2018 14:41:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44341#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44341#comment:7/1530110513831254</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-docs by ianbelanger. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-docs/p1530110513000050"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>psycleuk</dc:creator>

      <pubDate>Wed, 27 Jun 2018 13:43:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:8/1530107021319293</guid>
      <description>&lt;p&gt;
I take your point about users that can comment and not have a user account, so forcing a login step on this action would not be possible.
&lt;/p&gt;
&lt;p&gt;
Just because there is nothing that you can do about is a users email account has been compromised, does not mean you can be lax with security of users data. The point is the file should not be in the public domain, which it is, regardless of how hard it is to find.
&lt;/p&gt;
&lt;p&gt;
If adding a login control to access the file is not possible, it should at least only be accessible through the use of a single use token. The zip should not be downloadable directly as you can not verify who downloaded it, you can only assume because the file is obscured that it was the correct user. I don't see that as a good enough implementation when it comes to the security of user data. The only way this process could then be exploited is to have access to the users email account, which i am aware is out of your control, but at least WordPress has done everything within it's control to ensure data security.
&lt;/p&gt;
&lt;p&gt;
Also, with relation to &lt;a class="ext-link" href="https://blog.ripstech.com/2018/wordpress-file-delete-to-code-execution/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://blog.ripstech.com/2018/wordpress-file-delete-to-code-execution/&lt;/a&gt; that was posted on the 26th June, there is a potential vulnerability where the index.html could be deleted, leaving the entire wp-personal-data-exports folder publicly traversable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) closed</title>
      
        <dc:creator>webdados</dc:creator>

      <pubDate>Wed, 27 Jun 2018 13:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470#comment:1/1530106073605009</guid>
      <description>invalid: &lt;p&gt;
This is NOT a WordPress Core issue. WordPress does NOT output OG tags.
&lt;/p&gt;
&lt;p&gt;
This is related to SEO and Open Graph plugins that, IMHO, shouldn't mess around with themes shortcodes.
If the themes use shortcodes to display so simple thins as images, and they want that image to be the open graph image for that post, they should hook into the available SEO / Open Graph filters and set the correct image.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44471 (Theme Editor: Modern CSS is marked as errors by CodeMirror) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 27 Jun 2018 12:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44471#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44471#comment:1/1530103932080525</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I feel like this is something that Codemirror will forever be playing catch-up with, especially given the pace of CSS development at the moment.
&lt;/p&gt;
&lt;p&gt;
I wonder whether it's better for the CSS property validation to be disabled?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44474 (Add print styles to backend) created</title>
      
        <dc:creator>strarsis</dc:creator>

      <pubDate>Wed, 27 Jun 2018 12:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44474/1530103134871129</guid>
      <description>&lt;p&gt;
It would be great if lists and content can be printed from WordPress backend (admin).
Currently the whole UI is printed which wastes space, ink and clutters everything, also content fields are clipped.
&lt;/p&gt;
&lt;p&gt;
A dedicated default print stylesheet for WordPress backend would use a different ink-saving, reading-friendly font, remove all unnecessary UI elements, ensure that all content fields are printed completely.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #40415,​44473 batch updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 27 Jun 2018 11:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40415%2C44473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40415%2C44473/1530099694659194</guid>
      <description>duplicate: &lt;p&gt;
Hi @losangelos and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Thank you for this ticket, but this issue is already tracked in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40415" title="#40415: enhancement: Imagick resize filter hook (new)"&gt;#40415&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You are very welcome to contribute to the existing ticket :)
&lt;/p&gt;
&lt;p&gt;
Cheers,
&lt;/p&gt;
&lt;p&gt;
Jb
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44473 (Produce better image quality/size combination via php Imagick module) created</title>
      
        <dc:creator>losangelos</dc:creator>

      <pubDate>Wed, 27 Jun 2018 11:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44473/1530099031643800</guid>
      <description>&lt;p&gt;
The current implementation of the WP_Image_Editor abstract class via the php-imagick module has a resize function (thumbnail_image) which uses FILTER_TRIANGLE as resize filter by default and some specific values for sharpening and compressing the uploaded jpg image (resize -&amp;gt; sharpen -&amp;gt; compress).
&lt;/p&gt;
&lt;p&gt;
The currently used combination of values/methods for manipulating the uploaded jpg image can be improved by using a combination which produces jpg images better in quality and considerably smaller in size.
&lt;/p&gt;
&lt;p&gt;
We have created a github page &lt;a class="ext-link" href="https://greenpeace.github.io/planet4-imagestest-results/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://greenpeace.github.io/planet4-imagestest-results/&lt;/a&gt; where we can compare results produced by 6 different methods.
Method &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; is the default method used by WP currently.
Method &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6" title="#6: defect (bug): the_excerpt() on non-excerpt posts doesn't stripslashes (closed: fixed)"&gt;#6&lt;/a&gt; produces best quality/size combination among those.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Resize: Lanczos
Sharpening: unsharpMask( Radius 1, Sigma 0.45, Amount 3, Threshold 0 )
Compression: Interlace_Plane
Quality: 60
&lt;/pre&gt;&lt;p&gt;
Will upload diff file soon.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:49:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:4/1530096576272376</guid>
      <description>worksforme: &lt;p&gt;
Ok, I manually wiped all Russian locale files and after re-download the issue went away. Something must have stuck in wrong state there before.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19550 (Please provide option to disable wptexturize entirely) updated</title>
      
        <dc:creator>pixeline</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19550#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19550#comment:40/1530096037836626</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19550#comment:38" title="Comment 38"&gt;TomasM&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hello, I would like to ask for the usage example. I would like to disable certain texturized elements, like quotes. What code should I add to functions.php? Currently I use in parent theme:
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_filter('the_content', 'wptexturize');
remove_filter ('the_excerpt', 'wptexturize');
remove_filter ('comment_text', 'wptexturize');
&lt;/pre&gt;&lt;p&gt;
Also what code could I use in a child theme to enable wptexturize?
&lt;/p&gt;
&lt;p&gt;
Thank you!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To disable entirely the curly replacement throughout your site, simply add to your functions.php :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;add_filter('run_wptexturize', '__return_false');
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:38:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:3/1530095922062383</guid>
      <description>&lt;p&gt;
I tried to reproduce it using Russian localized installation.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;var_export( date_i18n( 'F M' ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Return: &lt;code&gt;'Июнь Июн'&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
So everything seems to be okay on my side.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:2/1530095654759030</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 27 Jun 2018 10:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472#comment:1/1530095530941454</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Thanks for your ticket!
&lt;/p&gt;
&lt;p&gt;
For information, I checked on translate.w.org and &lt;code&gt;Jun&lt;/code&gt; abbreviation is actually translated in Russian locale:
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/ru/default?filters%5Bterm%5D=June&amp;amp;filters%5Buser_login%5D=&amp;amp;filters%5Bstatus%5D=current_or_waiting_or_fuzzy_or_untranslated&amp;amp;filter=Filter&amp;amp;sort%5Bby%5D=priority&amp;amp;sort%5Bhow%5D=desc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/ru/default?filters%5Bterm%5D=June&amp;amp;filters%5Buser_login%5D=&amp;amp;filters%5Bstatus%5D=current_or_waiting_or_fuzzy_or_untranslated&amp;amp;filter=Filter&amp;amp;sort%5Bby%5D=priority&amp;amp;sort%5Bhow%5D=desc&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I will perform some tests to check if this is a Core issue.
&lt;/p&gt;
&lt;p&gt;
Cheers,
&lt;/p&gt;
&lt;p&gt;
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11942 (Use JS Calendar control for date picking) reopened</title>
      
        <dc:creator>herbertwest1</dc:creator>

      <pubDate>Wed, 27 Jun 2018 09:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11942#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11942#comment:11/1530092337741260</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
In 2018, couldn't please reconsider not having a UX calendar in the core Wordpress in order to chose the publication date instead of manually putting a date?
I personnally believe that it's a lot better and easier for users to see which DAY their post will be programmed for : not specifically a date, but also knowing that it will be on a tuesday, will help the editorial decisions.
&lt;/p&gt;
&lt;p&gt;
Thanks !
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #7665 (Add jQuery UI's datepicker() where applicable) updated</title>
      
        <dc:creator>herbertwest1</dc:creator>

      <pubDate>Wed, 27 Jun 2018 09:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7665#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7665#comment:49/1530092311345521</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
In 2018, couldn't please reconsider not having a UX calendar in the core Wordpress in order to chose the publication date instead of manually putting a date?
I personnally believe that it's a lot better and easier for users to see which DAY their post will be programmed for : not specifically a date, but also knowing that it will be on a tuesday, will help the editorial decisions.
&lt;/p&gt;
&lt;p&gt;
Thanks !
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34711 (date_i18n bug with format M-t) closed</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 09:02:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34711#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34711#comment:7/1530090177648328</guid>
      <description>worksforme: &lt;p&gt;
I've opened a new issue for locale thing: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44472" title="#44472: defect (bug): Month abbreviation is not getting translated in Russian locale (closed: worksforme)"&gt;#44472&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44472 (Month abbreviation is not getting translated in Russian locale) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 27 Jun 2018 09:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44472</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44472/1530090129988539</guid>
      <description>&lt;p&gt;
I am seeing month abbreviation not getting correctly translated for Russian locale:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( date_i18n( 'F M' ) );
// English: June Jun
// Ukrainian: Червень Чер
// Russian: Июнь Jun
&lt;/pre&gt;&lt;p&gt;
Since the code executing is the same, I am assuming some issue with translation files?
&lt;/p&gt;
&lt;p&gt;
Not sure if more locales are affected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>theme-editor-errors.png attached to Ticket #44471</title>
      
        <dc:creator>ThemeZee</dc:creator>

      <pubDate>Wed, 27 Jun 2018 07:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44471/theme-editor-errors.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44471/theme-editor-errors.png/1530084080719206</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44471 (Theme Editor: Modern CSS is marked as errors by CodeMirror) created</title>
      
        <dc:creator>ThemeZee</dc:creator>

      <pubDate>Wed, 27 Jun 2018 07:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44471</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44471/1530084069320278</guid>
      <description>&lt;p&gt;
I got some reports from users of my newest theme Donovan saying the style.css is broken.
&lt;/p&gt;
&lt;p&gt;
The reason is that the code editor on Appearance &amp;gt; Theme Editor does not know modern CSS.
&lt;/p&gt;
&lt;p&gt;
The CodeMirror plugin does not recognize CSS variables, new properties like grid-gap or the new fr units (fractions for CSS grids).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44466-unittests.diff attached to Ticket #44466</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Wed, 27 Jun 2018 06:49:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44466/44466-unittests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44466/44466-unittests.diff/1530082170335657</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44466-2.diff attached to Ticket #44466</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Wed, 27 Jun 2018 06:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44466/44466-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44466/44466-2.diff/1530080092964117</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44454-3.diff attached to Ticket #44454</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 27 Jun 2018 04:57:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44454/44454-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44454/44454-3.diff/1530075474194916</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44454-2.diff attached to Ticket #44454</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 27 Jun 2018 04:56:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44454/44454-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44454/44454-2.diff/1530075390977961</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35216 (Return empty string from wp.shortcode.replace() callback is ignored) updated</title>
      
        <dc:creator>talldanwp</dc:creator>

      <pubDate>Wed, 27 Jun 2018 04:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35216#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35216#comment:6/1530074779883937</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've attached 35216.diff.
&lt;/p&gt;
&lt;p&gt;
This change makes &lt;code&gt;wp.shortcode.replace()&lt;/code&gt; behave more like its php counterpart &lt;code&gt;do_shortcode&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
If the result of the callback is a string, number or truthy value, we replace the shortcode with that value (so therefore if an empty string is returned from the callback we'll see the desired behaviour).
&lt;/p&gt;
&lt;p&gt;
For other falsey values that are not strings or numbers returned from the callback, the shortcode and shortcode content will be removed
&lt;/p&gt;
&lt;p&gt;
Tests have been added for the various values that might be returned from the callback (empty string, null, undefined, 0, empty string)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35216.diff attached to Ticket #35216</title>
      
        <dc:creator>talldanwp</dc:creator>

      <pubDate>Wed, 27 Jun 2018 04:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35216/35216.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35216/35216.diff/1530074222993686</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44470 (meta property=“og:image” doesn't register if an image is executed via ...) created</title>
      
        <dc:creator>nlstm</dc:creator>

      <pubDate>Wed, 27 Jun 2018 03:28:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44470</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44470/1530070121655855</guid>
      <description>&lt;p&gt;
I want to try and explain a WordPress core issue and bug, in which I dont feel there is an available solution, at least I dont think after exhaustive research. I ran many many tests on fresh WP installations and twenty17 themes. And some may suggest this is a 3rd party plugin issue, while I am suggesting that it is both a Core and 3rd Party Plugin issue with the most widely used plugin in the world perhaps WPSEO. Applying shortcodes to WP post and Pages, of course it renders fine in the front-end, the output code that is. However, many recent updates to social media platforms Open Graph Protocols. The WPSEO plugin cannot understand that an image &amp;lt;img src="file.jpg"&amp;gt; is being executed via php through a shortcode, unless the image is hard-coded directly into the WP page editor then it works fine. Problem is, no image executed from literally any 3rd party plugin shortcode contained within a wordpress post or page will execute the meta property="og:image" in the &amp;lt;head&amp;gt; .... In short WordPress Core does not support opengraph functions or plugins when shortcodes are being used.
&lt;/p&gt;
&lt;p&gt;
one of the last tests to try to continue to prove this is a WP core issue from their last several updates, that I am certainly of course trying to gain some attention on, that even an out of the box wordpress stock short codes like [gallery ids="21"] to display images, cool enough that it displays visually in the post editor, still impossible to hook into the main property=og:image meta. Of course the other primary issue, no rhyme or reason either that a static front page cannot display the meta in the &amp;lt;head&amp;gt; either by any know third party plugin or hard coded functions in the theme directory. Being that exhaustive testing has been done, without the modification of stock wordpress core files, continues to lead me to believe that this is a core issue again.
&lt;/p&gt;
&lt;p&gt;
And after a lot of I intelligent research I believe wordpress next core update should fix this. Please read some other additional testing I have done on this issue as well. I am certainly trying to gain some attention to this issue because developers need to be able to execute php via shortcodes into wp post editors therefore execute images in a dynamic way via short codes and still be in compliance with al know third party plugins like yoasts og: settings and the social media platform og protocols. &lt;a class="ext-link" href="https://wordpress.stackexchange.com/questions/306973/property-ogimage-doesnt-register-with-including-a-php-file-as-a-shortcode-in"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.stackexchange.com/questions/306973/property-ogimage-doesnt-register-with-including-a-php-file-as-a-shortcode-in&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43542 (Duplicate MIME-Version header) updated</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43542#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43542#comment:6/1530059835180668</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44305 (The 'fields' query parameter for WP_Query supports only a string) updated</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44305#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44305#comment:1/1530059764382664</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:22:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:10/1530058939431230</guid>
      <description>&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43941/43941.diff"&gt;43941.diff&lt;/a&gt; all the logic has been moved to filters, to keep inline with other functionality in the meta api.
&lt;/p&gt;
&lt;p&gt;
I also changed the name of the key to &lt;code&gt;default&lt;/code&gt; and change the default value to &lt;code&gt;null&lt;/code&gt; to keep inline with existing values in the rest api.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43941.diff attached to Ticket #43941</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43941/43941.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43941/43941.diff/1530058729522358</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 27 Jun 2018 00:17:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:9/1530058630114904</guid>
      <description>&lt;p&gt;
I think we should discuss in detail in a REST API meeting whether &lt;code&gt;register_meta()&lt;/code&gt; should require &lt;code&gt;default&lt;/code&gt; to always be a &lt;code&gt;$single&lt;/code&gt; value or whether it should dynamically adjust depending on whether &lt;code&gt;$single&lt;/code&gt; is true or false. I'm thinking we need to do the latter because otherwise it would be impossible to register an array of default values where &lt;code&gt;$single&lt;/code&gt; is false, which would be a perfectly valid use-case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>