<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>hotforwords</dc:creator>

      <pubDate>Sat, 07 Aug 2010 23:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:9/1281223804000000</guid>
      <description>&lt;p&gt;
This is very important and needs to be addressed as highly trafficked websites like Mashable use Disqus because Disqus is able to show the first 10 comments with a link to Show All Comments PLUS Disqus is able to index the comments properly as they state here:  &lt;a class="ext-link" href="http://wiki.disqus.net/FAQ#Willsearchenginesstillindexmycomments.3F"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wiki.disqus.net/FAQ#Willsearchenginesstillindexmycomments.3F&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As they state:
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Disqus provides plugins for self-hosted blogs, running software such as WordPress or MovableType, that uses our API to interface with Disqus. Search engines will index this content perfectly.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
So they offer some kind of solution for Self Hosted Blogs that allows for the proper indexing of the comments, they offer another solution for non-self-hosted blogs which puts the comments on the Discus site, but we are not interested in that solution.
&lt;/p&gt;
&lt;p&gt;
Disqus charges $500/mo to integrate comments with your existing comments and existing users, so I cannot justify using them currently, plus is seems a shame to move all commenting outside of Wordpress!
&lt;/p&gt;
&lt;p&gt;
If someone could look at how Disqus is addressing the indexing issue that might be the solution we need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14212 (Hide more meta boxes by default) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 07 Aug 2010 22:46:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14212#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14212#comment:3/1281221177000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14544 (Add action to post_comment_status_meta_box()) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 21:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14544#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14544#comment:4/1281215168000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15490" title="Allow plugins to add more options to the comment status meta box ..."&gt;[15490]&lt;/a&gt;) Allow plugins to add more options to the comment status meta box easily. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14544" title="#14544: enhancement: Add action to post_comment_status_meta_box() (closed: fixed)"&gt;#14544&lt;/a&gt; props ryan.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15490]: Allow plugins to add more options to the comment status meta box ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 21:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15490</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15490/1281215166300457</guid>
      <description>&lt;p&gt;
Allow plugins to add more options to the comment status meta box easily. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14544" title="#14544: enhancement: Add action to post_comment_status_meta_box() (closed: fixed)"&gt;#14544&lt;/a&gt; props ryan.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14544 (Add action to post_comment_status_meta_box()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 21:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14544#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14544#comment:3/1281215151000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14560 (class 'current-page-parent' is being to the parent page and  to the ...) updated</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14560#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14560#comment:2/1281202445000000</guid>
      <description>&lt;p&gt;
correction the line
Note that PAGE-PARENT has the class 'current-page-parent current-page-parent'.
should be
Note that PAGE-PARENT has the class 'current-page-parent current_page_parent'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14560 (class 'current-page-parent' is being to the parent page and  to the ...) updated</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14560#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14560#comment:1/1281202368000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:10/1281201807000000</guid>
      <description>&lt;p&gt;
it is not a problem of the server or plugins as it happens only with the admin user - when the post is saved and also published. With the other user types editor for example it works without problems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14481 (Shortcode Enhancements) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14481#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14481#comment:20/1281201763000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14557" title="#14557: defect (bug): Side by side shortcodes leave one as text (closed: duplicate)"&gt;#14557&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14557 (Side by side shortcodes leave one as text) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:22:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14557#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14557#comment:2/1281201737000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14481" title="#14481: enhancement: Shortcode Enhancements (closed: maybelater)"&gt;#14481&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14560 (class 'current-page-parent' is being to the parent page and  to the ...) created</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14560</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14560/1281201603000000</guid>
      <description>&lt;p&gt;
Description: The class 'current-page-parent' is being assigned twice to the parent page and is being assigned to the parent page of other menu items.
&lt;/p&gt;
&lt;p&gt;
To reproduce
&lt;/p&gt;
&lt;p&gt;
1) use the TwentyTen theme
&lt;/p&gt;
&lt;p&gt;
2) add two categories: CAT-PARENT and CAT-CHILD
&lt;/p&gt;
&lt;p&gt;
3) add two pages: PAGE-PARENT and PAGE-CHILD
&lt;/p&gt;
&lt;p&gt;
4) add a menu, add the two categories and two pages and adjust them so the children are under the parents
&lt;/p&gt;
&lt;p&gt;
5) select the PAGE-CHILD and look at the source
&lt;/p&gt;
&lt;p&gt;
Note that the CAT-PARENT has the class 'current-page-parent'
&lt;/p&gt;
&lt;p&gt;
Note that PAGE-PARENT has the class 'current-page-parent current-page-parent'.
&lt;/p&gt;
&lt;p&gt;
Here is the HTML that is generated.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;ul id="menu-cat_test" class="menu"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1408" class="menu-item menu-item-type-taxonomy current-page-parent menu-item-1408"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?cat=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?cat=3&lt;/a&gt;"&amp;gt;CAT-PARENT&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;ul class="sub-menu"&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1409" class="menu-item menu-item-type-taxonomy menu-item-1409"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?cat=8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?cat=8&lt;/a&gt;"&amp;gt;CAT-CHILD&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1413" class="menu-item menu-item-type-post_type current-page-ancestor current-menu-ancestor current-menu-parent current-page-parent current_page_parent current_page_ancestor menu-item-1413"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http:///wp301/?page_id=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http:///wp301/?page_id=3&lt;/a&gt;"&amp;gt;PAGE-PARENT&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;ul class="sub-menu"&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1411" class="menu-item menu-item-type-post_type current-menu-item page_item page-item-7 current_page_item menu-item-1411"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?page_id=7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?page_id=7&lt;/a&gt;"&amp;gt;PAGE-CHILD&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14558 (Separate Database Table Support for Custom Post Types) updated</title>
      
        <dc:creator>rahul286</dc:creator>

      <pubDate>Sat, 07 Aug 2010 13:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14558#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14558#comment:2/1281188159000000</guid>
      <description>&lt;p&gt;
@Peter (westi)
&lt;/p&gt;
&lt;p&gt;
Of course you know better and I respect ur opinion.
&lt;/p&gt;
&lt;p&gt;
But can register_post_type be extended (as a class) or atleast changed to have enough actions and filter so experienced developers can take some extra efforts where this kind of requirement is critical for this.
&lt;/p&gt;
&lt;p&gt;
I really do not believe in copying lots of codes from core and then patching them up to get desired results. It becomes harder to maintain.
&lt;/p&gt;
&lt;p&gt;
Anyway, thanks for being so quick to reply. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14465 (Update Plugins Hangs while displaying 'updating') updated</title>
      
        <dc:creator>stevemagruder</dc:creator>

      <pubDate>Sat, 07 Aug 2010 13:02:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14465#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14465#comment:1/1281186149000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am seeing the exact same problem as reported in both 3.0 and 3.0.1.
&lt;/p&gt;
&lt;p&gt;
I am using Mozilla Firefox 3.6.8 and my host is running:
&lt;/p&gt;
&lt;p&gt;
MySQL 5.0.90-community
PHP 5.2.13
Apache 2.2.15
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 12:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:8/1281184512000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 12:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:7/1281184485000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14556#comment:5" title="Comment 5"&gt;guigouz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you're not using mod_rewrite, wouldn't esc_url() mess with navigation ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nope. esc_url() is for escaping any type of URL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14559 (wp_admin_css Filter Broken) created</title>
      
        <dc:creator>tech163</dc:creator>

      <pubDate>Sat, 07 Aug 2010 11:43:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14559</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14559/1281181393000000</guid>
      <description>&lt;p&gt;
I think the wp_admin_css filter is broken. I created a plugin with the following code, and nothing happens (I did activate it though).
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_admin_css_blah($test) {
	die($test);
}
add_filter('wp_admin_css', 'wp_admin_css_blah');
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14472 (get_categories - child_of) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Sat, 07 Aug 2010 11:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14472#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14472#comment:7/1281179618000000</guid>
      <description>&lt;p&gt;
what is the status of the problem???
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14471 (wp_create_category not working properly) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Sat, 07 Aug 2010 11:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14471#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14471#comment:6/1281178902000000</guid>
      <description>&lt;p&gt;
can anyone give a feedback about the status of this problem???
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 08:16:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:6/1281168981000000</guid>
      <description>&lt;p&gt;
In future the correct way to report potential security issues is detailed here: &lt;a class="ext-link" href="http://codex.wordpress.org/Security_FAQ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Security_FAQ&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14558 (Separate Database Table Support for Custom Post Types) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 08:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14558#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14558#comment:1/1281168902000000</guid>
      <description>wontfix: &lt;p&gt;
This is not something we would likely consider.
&lt;/p&gt;
&lt;p&gt;
We are happy with storing the custom post types in the existing table structures.
&lt;/p&gt;
&lt;p&gt;
We don't recommend on adding extra tables - in some installation scenarios it isn't even possible.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14558 (Separate Database Table Support for Custom Post Types) created</title>
      
        <dc:creator>rahul286</dc:creator>

      <pubDate>Sat, 07 Aug 2010 06:55:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14558/1281164107000000</guid>
      <description>&lt;p&gt;
While working on custom post types, I felt need for this enhancements.
&lt;/p&gt;
&lt;p&gt;
This can be achieved by adding an extra argument to the register_post_type function like below...
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_post_type( 'acme_product',
    array(
      'labels' =&amp;gt; array(
        'name' =&amp;gt; __( 'Products' ),
        'singular_name' =&amp;gt; __( 'Product' )
      ),
      'public' =&amp;gt; true,
      /* Database separation */
     'db_tables' =&amp;gt; array(
        'prefix' =&amp;gt; '', //by default, value of $table_prefix will be used. If user sets this value to something, it will be used as prefix for both of following tables
        'base_prefix' =&amp;gt; '' , //this will control it tables are to be kept sitewide or per blog
        'posts_name' =&amp;gt; 'acme',
        'postmeta_name' =&amp;gt; 'acmemeta',
      ),
  );
&lt;/pre&gt;&lt;p&gt;
This small enhancement (not from coding perspective) will help more plugins authors go for custom post type.
Reasons are - first they will get option to have separate data storage.
Second - if some other badly coded plugin manipulates wp_posts table in some wrong way, it won't have sideeffect on third-party data.
Third - Plugin authors will get more space to experiment as at any time they will be dealing with their own plugin's data.
&lt;/p&gt;
&lt;p&gt;
Of course, one of the goal of this nice feature must be to abstract database layer, but as a developer I feel it would be better if I can have some control over database without loosing power of this new (custom post type) feature.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11953 (wp_nonce_field() does not pass the result of wp_referer_field()) updated</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Sat, 07 Aug 2010 05:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11953#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11953#comment:4/1281159621000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>guigouz</dc:creator>

      <pubDate>Sat, 07 Aug 2010 03:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:5/1281151429000000</guid>
      <description>&lt;p&gt;
The code is here - &lt;a class="ext-link" href="http://robertbasic.com/blog/wordpress-paging-navigation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://robertbasic.com/blog/wordpress-paging-navigation/&lt;/a&gt;
If you're not using mod_rewrite, wouldn't esc_url() mess with navigation ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14082 (wp_nav_menu inserts newline char (carriage return) between &lt;li&gt;) updated</title>
      
        <dc:creator>artworkmonger</dc:creator>

      <pubDate>Sat, 07 Aug 2010 02:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14082#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14082#comment:3/1281148578000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
no, it's not an IE thing. it's present in any browser, any os. just add borders to the &amp;lt;li&amp;gt; tags rendered by wp_nav_menu() and you'll see the spaces.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sat, 07 Aug 2010 02:08:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:22/1281146925000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13449 (Filter Cron URL) updated</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Sat, 07 Aug 2010 02:02:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13449#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13449#comment:5/1281146560000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11003 (wp_get_object_terms Returns Duplicate Terms) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 00:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11003#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11003#comment:12/1281139587000000</guid>
      <description>&lt;p&gt;
How about this: use DISTINCT to remove duplicate terms, but only when $fields != 'all_with_object_id'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11003 (wp_get_object_terms Returns Duplicate Terms) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 23:52:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11003#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11003#comment:11/1281138767000000</guid>
      <description>&lt;p&gt;
It's better than nothing, but not a true solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11003.notice.patch attached to Ticket #11003</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11003/11003.notice.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11003/11003.notice.patch/1281135056000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11003 (wp_get_object_terms Returns Duplicate Terms) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:47:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11003#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11003#comment:10/1281134845000000</guid>
      <description>&lt;p&gt;
It's pretty easy to make the terms unique afterwards, once you know there might be duplicates.
&lt;/p&gt;
&lt;p&gt;
Maybe we should just add a notice in the documentation?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11003 (wp_get_object_terms Returns Duplicate Terms) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11003#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11003#comment:9/1281134734000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9698 (WordPress back end is not accessible) updated</title>
      
        <dc:creator>gormer</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9698#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9698#comment:15/1281134141000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
What about Authoring Tool Accessibility Guidelines 1.0 (ATAG)?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.w3.org/TR/WAI-AUTOOLS/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/WAI-AUTOOLS/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14550 (No action when comments are closed by WP after close_comments_days_old) updated</title>
      
        <dc:creator>gormer</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14550#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14550#comment:2/1281133825000000</guid>
      <description>&lt;p&gt;
Not really relevant as _close_comments_for_old_posts doesn't modify db state, but only memory post state. W
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14550 (No action when comments are closed by WP after close_comments_days_old) closed</title>
      
        <dc:creator>gormer</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:29:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14550#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14550#comment:1/1281133769000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:4/1281132858000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13051" title="#13051: defect (bug): admin_url() and site_url() shouldn't need esc_url() (closed: wontfix)"&gt;#13051&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13051 (admin_url() and site_url() shouldn't need esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13051#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13051#comment:25/1281132840000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14556" title="#14556: enhancement: get_pagenum_link() needs esc_url() (closed: fixed)"&gt;#14556&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:3/1281132590000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You need to use esc_url() before outputing what get_pagenum_link() returns.
&lt;/p&gt;
&lt;p&gt;
Decreasing severity because it's used properly everywhere in core.
&lt;/p&gt;
&lt;p&gt;
Should probably add a warning somewhere in the function's doc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14557 (Side by side shortcodes leave one as text) updated</title>
      
        <dc:creator>adiant</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14557#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14557#comment:1/1281132207000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14557 (Side by side shortcodes leave one as text) created</title>
      
        <dc:creator>adiant</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:03:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14557/1281132191000000</guid>
      <description>&lt;p&gt;
Coding
&lt;/p&gt;
&lt;pre class="wiki"&gt;[gallery][gallery]text
&lt;/pre&gt;&lt;p&gt;
displays the current page's gallery then "[gallery]text".  The problem reproduces consistently when coded using the HTML tab of TinyMCE in Edit Page, immediately hitting Update, and viewing the actual page.
&lt;/p&gt;
&lt;p&gt;
This was first observed when using the Shortcode Exec PHP plug-in, so I installed a fresh version of WordPress and tested with the gallery shortcode to remove the possibility of this being a problem with the plug-in.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:02:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:2/1281132171000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not able to reproduce. Please paste the code you're using to generate the page links.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 22:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:1/1281132029000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) created</title>
      
        <dc:creator>guigouz</dc:creator>

      <pubDate>Fri, 06 Aug 2010 21:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556/1281131372000000</guid>
      <description>&lt;p&gt;
We're using get_pagenum_link() to build a page navigation instead of older/newer posts only. We've found this vulnerability on multiple sites, here's an example
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://robertbasic.com/blog/?%3E%22'%3E%3CScRiPt%3Ealert(428017202033)%3C/ScRiPt%3E"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://robertbasic.com/blog/?%3E%22'%3E%3CScRiPt%3Ealert(428017202033)%3C/ScRiPt%3E&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>rhoare</dc:creator>

      <pubDate>Fri, 06 Aug 2010 19:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:23/1281122583000000</guid>
      <description>&lt;p&gt;
After testing, I can still confirm that dates before 1970, back to 1901, work when the bug introduced in 2.8 is commented out.
&lt;/p&gt;
&lt;p&gt;
In addition, to get dates before 1901 you need to use a 64 bit operating system, which has a 64 version of PHP.  In my case, it works with 64 bit Ubuntu 9.10 and PHP 5.2.10-2ubuntu6.4.  I can modify a post to historical dates (such as 1485), and the date seems to be displayed correctly everywhere so far (including archives) (ignoring Gregorian/Julian calendar changes or old style/new style years, which would really be the job of an extension as it's specialist).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14443 (Stop notifying spammers about newly installed blogs) updated</title>
      
        <dc:creator>KKWangen</dc:creator>

      <pubDate>Fri, 06 Aug 2010 19:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14443#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14443#comment:8/1281121862000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14443#comment:3" title="Comment 3"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should keep it but add to Settings &amp;gt; Discussion:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A radio selection: &lt;code&gt;"Be spammed [X] now or [] later?"&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;An input field, so users have the freedom to choose: &lt;code&gt;"Enter the evil spammer to notify (required): [spammers@stupidjerks.com]"&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Two new action hooks for plugin developers: &lt;code&gt;pre_spammer_notification&lt;/code&gt; and &lt;code&gt;prior_to_pre_spammer_notification&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Wouldn't it be better to add these options to the install-prosess as well. - You know, it's already hooked for public, so adding a "be spamed now" option should not be that much efort to add..
&lt;/p&gt;
&lt;p&gt;
Anyway, there should be a prefered_spammer_network() hook somewhere..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14545 (move wp-settings from wp-config to wp-load) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 06 Aug 2010 17:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14545#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14545#comment:3/1281115555000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14545#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This isn't backwards compatible...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would work with any existing installs which load wp-settings in wp-config.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14545#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
More than a few plugins call wp-config.php directly, hence the additional conditional ABSPATH define.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point. It would break those plugins in new installs.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14545#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What else can we do?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I know. A bit of a rock and hard place. What about adding a last comment line instructing adding above the stop editing line?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14243 (Content of css interfering with functions) updated</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Fri, 06 Aug 2010 17:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14243#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14243#comment:9/1281114920000000</guid>
      <description>&lt;p&gt;
Some new findings:
&lt;/p&gt;
&lt;p&gt;
It seems that all default header tags can be populated through CSS selectors, given that they were not defined earlier on the theme header.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
Theme Name: Test
Template: twentyten
*/
#status:hover p {
  color: #666; }
#author:hover p {
  color: #666; }
#themeuri:hover p {
  color: #666; }
#description:hover p {
  color: #666; }
#authoruri:hover p {
  color: #666; }
#version:hover p {
  color: #666; }
#tags:hover p {
  color: #666; }
&lt;/pre&gt;&lt;p&gt;
On the WordPress admin theme tab you should see some "hover p {" around.
&lt;/p&gt;
&lt;p&gt;
This does not seem to be too much of a concern when tags are already defined; but eventually you could set a template for themes which don't have one, effectively displaying a &lt;em&gt;The parent theme is missing. Please install the "hover p {" parent theme.)&lt;/em&gt; on the admin.
&lt;/p&gt;
&lt;p&gt;
Just add &lt;strong&gt;#template:hover p { color: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/666" title="#666: defect (bug): correct author uri in google-hilite.php (closed: fixed)"&gt;#666&lt;/a&gt;; }&lt;/strong&gt; to Twenty Ten's style.css not too far from the top and you have a broken Twenty Ten.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11624 (Stop using $id global) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 16:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11624#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11624#comment:14/1281113073000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updated patch removes all instances of $id that I could find.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11624.2.diff attached to Ticket #11624</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 16:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11624/11624.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11624/11624.2.diff/1281113041000000</guid>
      <description>&lt;p&gt;
Replace all instances
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14554 (Only run update checks from the main site) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 06 Aug 2010 16:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14554#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14554#comment:2/1281112636000000</guid>
      <description>&lt;p&gt;
Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13450 (Filter Comments Link) updated</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 15:55:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13450#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13450#comment:3/1281110101000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13449 (Filter Cron URL) updated</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 15:52:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13449#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13449#comment:4/1281109957000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13450 (Filter Comments Link) updated</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 15:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13450#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13450#comment:2/1281109915000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14555 (broken sprintf calls at multi site localization) created</title>
      
        <dc:creator>codestyling</dc:creator>

      <pubDate>Fri, 06 Aug 2010 15:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14555</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14555/1281109411000000</guid>
      <description>&lt;p&gt;
The current version 3.0.1 contains this 2 places, where the brackets are not closed after the gettext phrase part and the surounded sprintf fails without having an argument that's why! Not sure, if this could be used to format anything from internal php stack stack into output!
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;file: wp-admin/ms-edit.php:211&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die( sprintf( __( 'You probably need to go back to the &amp;lt;a href="%s"&amp;gt;sites page&amp;lt;/a&amp;gt;', esc_url( admin_url( 'ms-sites.php' ) ) ) ) );
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;file: wp-admin/ms-edit.php:32&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die( sprintf( __( 'You probably need to go back to the &amp;lt;a href="%s"&amp;gt;options page&amp;lt;/a&amp;gt;.', esc_url( admin_url( 'ms-options.php' ) ) ) ) );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14553 (Prevent localized MS sites from stomping core update checks) updated</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 06 Aug 2010 15:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14553#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14553#comment:2/1281107873000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I tested the patch and it fixes the nag messages for me, for all blogs and after deleting the _site_transient_update_core entry repeatedly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14553 (Prevent localized MS sites from stomping core update checks) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:59:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14553#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14553#comment:1/1281103192000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14554 (Only run update checks from the main site) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14554#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14554#comment:1/1281103176000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14554.diff attached to Ticket #14554</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14554/14554.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14554/14554.diff/1281103163000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14554 (Only run update checks from the main site) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:58:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14554</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14554/1281103096000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14435" title="#14435: task (blessed): Network Admin (closed: fixed)"&gt;#14435&lt;/a&gt; (network admin), &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14553" title="#14553: defect (bug): Prevent localized MS sites from stomping core update checks (closed: fixed)"&gt;#14553&lt;/a&gt; (related locale bug).
&lt;/p&gt;
&lt;p&gt;
Simple patch attached. Doesn't affect the functions themselves, only them hooking onto various actions and also being scheduled for the cron.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14553.diff attached to Ticket #14553</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:51:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14553/14553.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14553/14553.diff/1281102709000000</guid>
      <description>&lt;p&gt;
Adding an arg to get_locale()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14552 (Eternal upgrade nag message with network and localized blogs) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:48:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14552#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14552#comment:1/1281102523000000</guid>
      <description>duplicate: &lt;p&gt;
You beat me by a few minutes. I'll mark as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14553" title="#14553: defect (bug): Prevent localized MS sites from stomping core update checks (closed: fixed)"&gt;#14553&lt;/a&gt; though and I'll be attaching a patch there soon.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14553 (Prevent localized MS sites from stomping core update checks) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14553</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14553/1281102425000000</guid>
      <description>&lt;p&gt;
For reasons currently passing my understanding, we fire core, plugin, and theme checks on all sites in a network.
&lt;/p&gt;
&lt;p&gt;
One issue is if sites run different locales, then they will stomp on the transient set by the previous check and potentially return bad information.
&lt;/p&gt;
&lt;p&gt;
Example. The network runs 3.0.1. WPLANG is set to &lt;code&gt;''&lt;/code&gt;, which means get_locale() would return &lt;code&gt;en_US&lt;/code&gt;. When site A runs an update check, there's no update. Site B has a blog-level WPLANG option of de_DE. When it runs an update check, the API returns 3.0.1-de_DE, even though the install is defined as 3.0.1-en_US. As this is then stored in a sitemeta transient, each update stomps over the last, and so depending on whether an en_US blog or de_DE blog ran the update check last, you may have a very annoying nag telling you to upgrade to the version you're already at.
&lt;/p&gt;
&lt;p&gt;
Ironically, this is a performance improvement over MU (even if more annoying), since MU stored update check results in a blog transient. Instead of the checks stomping each other, they all ran independently.
&lt;/p&gt;
&lt;p&gt;
I'm not sure of the fix here. I'm not convinced we should put logic in either get_locale() or wp_version_check(). Nor do I think we should attach a MS default filter.
&lt;/p&gt;
&lt;p&gt;
Here's my idea currently -- introduce get_network_locale(), or a &lt;code&gt;$network_wide = false&lt;/code&gt; argument on get_locale(), that would skip checking the blog-level WPLANG option.
&lt;/p&gt;
&lt;p&gt;
Originally reported by nkuttler in IRC yesterday.
&lt;/p&gt;
&lt;p&gt;
I'll be opening a new ticket on 3.1 to restrict core, plugin, and theme update checks to the root site only. Thankfully, our network admin makes that a bit more intuitive.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13639 (Theme "unit tests" are outdated) closed</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13639#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13639#comment:1/1281102236000000</guid>
      <description>fixed: &lt;p&gt;
The unit tests have been updated &lt;a class="ext-link" href="http://codex.wordpress.org/Theme_Unit_Test"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Theme_Unit_Test&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:43:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:15/1281102219000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Big +1 on this idea. I agree that it is a no-brainer to have it supported by default.
&lt;/p&gt;
&lt;p&gt;
If someone doesn't want an archive like this then they should use a setting in their post type definition to do so, though it seems like maybe the 'private' flag would work. If its private, no index, otherwise do the routing people expect.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>eternal_nag_fix.diff attached to Ticket #14552</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14552/eternal_nag_fix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14552/eternal_nag_fix.diff/1281102094000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14552 (Eternal upgrade nag message with network and localized blogs) created</title>
      
        <dc:creator>nkuttler</dc:creator>

      <pubDate>Fri, 06 Aug 2010 13:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14552/1281102082000000</guid>
      <description>&lt;p&gt;
I always get the "WordPress 3.0.1 is available! Please update now." nag message, when I dismiss it it comes back after some time.
&lt;/p&gt;
&lt;p&gt;
To quote nacin from IRC:
&lt;/p&gt;
&lt;p&gt;
In wp_version_check() we're asking for the locale via get_locale(), which in turn on some of your blogs is de_DE. So if that blog gets wp_version_check() triggered, then your transient will be showing the de_DE 3.0.1, which you're not running. If is_multisite() we should rely on get_site_option('WP_LANG') and WP_LANG, and we should ignore the individual blog settings. I'm actually not sure the best way to patch it.
&lt;/p&gt;
&lt;p&gt;
I have attached a minimal patch but don't understand in full detail what's going on. The problem might be in the filter or somewhere else. The patch fixes the recurring nag messages.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14551 (menu item : current_page_parent : issue with Front page displays) updated</title>
      
        <author>hughestm@…</author>

      <pubDate>Fri, 06 Aug 2010 13:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14551#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14551#comment:2/1281100367000000</guid>
      <description>&lt;p&gt;
Change to the two lines: need to remove (int) from get_option.
&lt;/p&gt;
&lt;p&gt;
$front_page_displays = get_option( 'show_on_front' );
if($front_page_display == 'posts'){$home_page_id=0;}
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14551 (menu item : current_page_parent : issue with Front page displays) updated</title>
      
        <author>hughestm@…</author>

      <pubDate>Fri, 06 Aug 2010 13:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14551#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14551#comment:1/1281099883000000</guid>
      <description>&lt;p&gt;
Possible solution:
File: wp-includes/nav-menu-template.php
&lt;/p&gt;
&lt;p&gt;
Add after line 260:
$front_page_displays = (int) get_option( 'show_on_front' );
if($front_page_display == 'posts'){$home_page_id=0;}
&lt;/p&gt;
&lt;p&gt;
This checks to make sure the first toggle is set to have page or posts on the front.  If posts, then reset $home_page_id (page_for_posts) to 0 (value when drop down is set to "select").
&lt;/p&gt;
&lt;p&gt;
I know there are possibly a few other locations you could add similar logic.  I'm not sure what else the $home_page_id (page_for_posts) value would be used for.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Fri, 06 Aug 2010 12:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540#comment:7/1281099227000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14540#comment:4" title="Comment 4"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@mark-k: Yes, it can be a PITA, but it the blog owner's choice, not ours. We should not try to make core override the blog owner's choice. It's their site; WP is just the underlying platform.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Surely this is not overriding any functionality - overriding would be actually adding the extra depth. The Reply link becomes just a convenient way to add a reply to the parent comment. The blog owners are probably setting a max depth so they don't get really narrow comments, which doing the stated would not interfere with.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14551 (menu item : current_page_parent : issue with Front page displays) created</title>
      
        <author>hughestm@…</author>

      <pubDate>Fri, 06 Aug 2010 12:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14551</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14551/1281098784000000</guid>
      <description>&lt;p&gt;
Settings &amp;gt; Reading &amp;gt; Front page displays: set to your latest posts
Settings &amp;gt; Reading &amp;gt; Posts page: set to anything
&lt;/p&gt;
&lt;p&gt;
When the menus are building, they are only checking that something was set by the dropdown for posts page, even though the parent setting says the posts are to be on the home page.  The pages on the site have the correct logic, however the menu adds "current_page_parent" to the item selected in the "Posts page" menu, even though it's not really the parent.
&lt;/p&gt;
&lt;p&gt;
The work around is to just remember if you switch from having posts on a different page back to having them on the front, you need to set the "Posts page" back to "select" and everything works correctly, but getting users in my multi-site install to do that might be asking a bit much.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 10:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:35/1281090858000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 06 Aug 2010 10:34:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:34/1281090849000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The above code is not so bad if there are &amp;lt;1000 or even &amp;lt;2500 records in wp_terms but if we have 10,000 records (movies) with 10 relationships a piece (actors) this absolutely does not scale.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How is the number of relationships relevant? They are stored in the wp_term_relationships table.
&lt;/p&gt;
&lt;p&gt;
Please run through the actual queries that happen when using my API before saying "this absolutely does not scale".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
your code current does not recognize the reciprocal relationship when one is encoded so a user would have to do both tasks: 1.) Add Actors to a Movie and 2.) Add Movies to an Actor which is crazy.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes it does:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_connected($id, 'from');&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_connected($id, 'to');&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 06 Aug 2010 07:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:18/1281081486000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14550 (No action when comments are closed by WP after close_comments_days_old) created</title>
      
        <dc:creator>gormer</dc:creator>

      <pubDate>Fri, 06 Aug 2010 07:26:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14550</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14550/1281079592000000</guid>
      <description>&lt;p&gt;
There doesn't seem to be any action triggered when comments for a post is closed by WordPress itself.
&lt;/p&gt;
&lt;p&gt;
The function in question is called _close_comments_for_old_posts in wp-includes/comment.php
&lt;/p&gt;
&lt;p&gt;
The use-case I want to support is dispatching a request to external archiving system after WP closes the comments.
&lt;/p&gt;
&lt;p&gt;
Since comments also could be closed from a number of other reasons, I suggest adding just an event for the particular case that a comment gets closed by WP itself. That is, when the option close_comments_for_old_posts is set and close_comments_days_old is &amp;gt; 0.
&lt;/p&gt;
&lt;p&gt;
I can provide a patch for this, but would first check if such an action is considered interesting enough to be added or if there are other ways to achieve the same use-case that I'm not aware of.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13213 (Add Home option to Nav Menus) updated</title>
      
        <dc:creator>kanuck54</dc:creator>

      <pubDate>Fri, 06 Aug 2010 06:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13213#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13213#comment:18/1281077232000000</guid>
      <description>&lt;p&gt;
(I just thought it might be &lt;strong&gt;&lt;em&gt;worth&lt;/em&gt;&lt;/strong&gt; mentioning. Typo!)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13213 (Add Home option to Nav Menus) updated</title>
      
        <dc:creator>kanuck54</dc:creator>

      <pubDate>Fri, 06 Aug 2010 06:45:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13213#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13213#comment:17/1281077140000000</guid>
      <description>&lt;p&gt;
I just thought it might be mentioning that as a long-time WordPress user, new to 3.0, this was not at all discoverable. This is the only place I actually found the information I was looking for! And it just feels very hacked in — the way it shows up as "custom," the way it's just my URL in the URL box. I think you can do better, IMO.
&lt;/p&gt;
&lt;p&gt;
Still, this new menus feature in general is wonderful. I can see myself making extensive use of it!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>rhoare</dc:creator>

      <pubDate>Fri, 06 Aug 2010 05:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:22/1281071322000000</guid>
      <description>&lt;p&gt;
To correct my above note (which I can't see a way to edit).
&lt;/p&gt;
&lt;p&gt;
Commenting out the lines as given in the fix DO work (so why isn't it in the latest version?).
&lt;/p&gt;
&lt;p&gt;
But only back to 1901.  There is a separate bug/feature that makes it impossible to show dates before Dec 14, 1901.  Since that is the start of the Unix epoch it's probably rbecause I use a 32-bit OS, I'll try it on a 64-bit server next to see if that helps.
&lt;/p&gt;
&lt;p&gt;
So, just to clarify, the fix shown does work (back to 1901), and should be applied, allowing for the lines being different on the latest version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>rhoare</dc:creator>

      <pubDate>Fri, 06 Aug 2010 04:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:21/1281069525000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Bug still exists in a clean install of 3.0.1.  (Ubuntu Linux 9.10, PHP 5.2.10)
&lt;/p&gt;
&lt;p&gt;
Presumably there are no plans to ever fix it?  Does anybody know of a plugin to work around this long-standing bug?
&lt;/p&gt;
&lt;p&gt;
Commenting out just the lines mentioned in function.php no longer fixes it, something else thinks it knows better and comes along and changes the date when you try to save the modified post.
&lt;/p&gt;
&lt;p&gt;
Maybe programmed by somebody aged under 40, who can't imagine there are any dates before they were born. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>flush_rewrite_rules_on_submit.3.diff attached to Ticket #14547</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 03:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14547/flush_rewrite_rules_on_submit.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14547/flush_rewrite_rules_on_submit.3.diff/1281065463000000</guid>
      <description>&lt;p&gt;
Better Code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) closed</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 06 Aug 2010 03:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:33/1281065283000000</guid>
      <description>wontfix: &lt;p&gt;
Based on Andrew Nacin's comments I'm going to go ahead and close this ticket.  My goal was to get people thinking about the need and applicable use-cases.  I think that was accomplished.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 06 Aug 2010 03:26:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:32/1281065210000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:31" title="Comment 31"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This ticket is not going to get anywhere if it's just a lot of back and forth, some of it not in the most appropriate tone, complete with questioning the intelligence of a core developer willing to share the current collective opinion of the core team on this. It's only going to cause the folks who you want to pay attention to this ticket to simply mute it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Point taken.
&lt;/p&gt;
&lt;p&gt;
But please reread my comments because I don't want to be misunderstood; I questioned only the level of familiarity related to the use cases. In no way did question intelligence and if that is how it came across I profusely apologize.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
At the moment, this reads more like a wp-hackers discussion, and it belongs there. If any movement is going to happen on this, there needs to be solid consensus on a flexible system that can address clear, popular use cases. I see all sorts of use cases but I'm not convinced they can't be implemented with the existing schema; I've also seen, what, three or four conflicting ideas for how this should be implemented, to the point where the definitions of "this" are different depending on the developer and the use cases they were considering.
&lt;/p&gt;
&lt;p&gt;
We need to see both demand and innovation, and preferably some consensus, before even considering this. Give it a year, I imagine that will evolve, but being ahead of one's time is not always a good thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's all fair.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14549 (Allow Control over Hard vs. Soft Rewrite Flush) updated</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 03:11:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14549#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14549#comment:1/1281064295000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14547 (Flush Rewrite Rules on Submit, not on Page Load) updated</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 03:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14547#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14547#comment:1/1281064274000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14508 (Always require wp-db.php) updated</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 02:59:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14508#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14508#comment:12/1281063549000000</guid>
      <description>&lt;p&gt;
My plugin (WP Hive) currently uses db.php because it must do some work very early in the WP lifecycle. It's pretty hacky to include this functionality here, but it's the only spot that occurs after $wpdb is instantiated and before $table_prefix is set.
&lt;/p&gt;
&lt;p&gt;
Optimally, it would be nice to be able to hook in separately from db.php, since many users of WP Hive also use caching plugins, and the way it is now causes db.php collisions &amp;amp; overwrites.
&lt;/p&gt;
&lt;p&gt;
While there's still some work to do to resolve these collisions, this patch is a step in the right direction and it's a two-line fix in my plugin to adapt. +1 from me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14549 (Allow Control over Hard vs. Soft Rewrite Flush) created</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 02:20:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14549</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14549/1281061224000000</guid>
      <description>&lt;p&gt;
Many times when the rewrite rules are flushed, it really only requires that the rules be written to the database and not .htaccess. In some cases, re-writing .htaccess can cause detrimental changes to the mod rewrite rules.
&lt;/p&gt;
&lt;p&gt;
This patch allows a plugin author to have control over whether a hard flush is executed when flush_rewrite_rules() is called.
&lt;/p&gt;
&lt;p&gt;
Introduces filter: flush_rewrite_rules_hard
&lt;/p&gt;
&lt;p&gt;
Depends on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14546" title="#14546: enhancement: Refactor direct references for $wp_rewrite class members (closed: fixed)"&gt;#14546&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:31/1281059902000000</guid>
      <description>&lt;p&gt;
This ticket is not going to get anywhere if it's just a lot of back and forth, some of it not in the most appropriate tone, complete with questioning the intelligence of a core developer willing to share the current collective opinion of the core team on this. It's only going to cause the folks who you want to pay attention to this ticket to simply mute it.
&lt;/p&gt;
&lt;p&gt;
I spent some time yesterday reading through old threads and tickets around the time the taxonomy schema was originally implemented in 2.2. wp-hackers was very effectively used as a discussion of use cases, demand, consensus-building on a schema and API, and the consideration of future situations. Tickets, on the other hand, are for code. In my opinion, a ticket like this -- a major feature request that can only get into core as a blessed task -- should not be created until it has been slated for a milestone at a scope meeting.
&lt;/p&gt;
&lt;p&gt;
At the moment, this reads more like a wp-hackers discussion, and it belongs there. If any movement is going to happen on this, there needs to be solid consensus on a flexible system that can address clear, popular use cases. I see all sorts of use cases but I'm not convinced they can't be implemented with the existing schema; I've also seen, what, three or four conflicting ideas for how this should be implemented, to the point where the definitions of "this" are different depending on the developer and the use cases they were considering.
&lt;/p&gt;
&lt;p&gt;
We need to see both demand and innovation, and preferably some consensus, before even considering this. Give it a year, I imagine that will evolve, but being ahead of one's time is not always a good thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14548 (registered sidebars with capital letter in the ID don't get loaded) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:55:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14548#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14548#comment:1/1281059735000000</guid>
      <description>&lt;p&gt;
this issue was found here,
&lt;a class="ext-link" href="http://www.wpquestions.com/question/show/id/713"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.wpquestions.com/question/show/id/713&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>register_sidebar_sanitize_id.patch attached to Ticket #14548</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:54:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14548/register_sidebar_sanitize_id.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14548/register_sidebar_sanitize_id.patch/1281059659000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14548 (registered sidebars with capital letter in the ID don't get loaded) created</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14548</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14548/1281059638000000</guid>
      <description>&lt;p&gt;
if you use register_sidebar() and set ID to have a capital letter, it will be displayed in the widgets section but its widgets won't get loaded.
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_sidebar(array(
'name' =&amp;gt; 'RightSideBar',
'id' =&amp;gt; 'Rsidebar',
));
&lt;/pre&gt;&lt;p&gt;
it won't work but
&lt;/p&gt;
&lt;p&gt;
while...
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_sidebar(array(
'name' =&amp;gt; 'RightSideBar',
'id' =&amp;gt; 'rsidebar',
));
&lt;/pre&gt;&lt;p&gt;
... will work.
&lt;/p&gt;
&lt;p&gt;
This has to do with dynamic_sidebar() using sanitize_title() to sanitize the id,
the thing is that sanitize_title() (which calls sanitize_title_with_dashes()) will turn every upper case to a lower case, and later it will look in $wp_registered_sidebars for the key which is non-existant.
&lt;/p&gt;
&lt;p&gt;
This patch sanitizes the sidebar ID at the time of registering it,
so using
'id' =&amp;gt; 'Rsidebar',
or
'id' =&amp;gt; 'rsidebar',
&lt;/p&gt;
&lt;p&gt;
registers the same sidebar.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14481 (Shortcode Enhancements) updated</title>
      
        <dc:creator>deadowl</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:44:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14481#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14481#comment:19/1281059050000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14481#comment:18" title="Comment 18"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm assuming we'd still need to keep a stack of registered shortcodes so we can use those names in the regex? I've not a regular expressions guru by any means (I'm fine at writing them to meet my needs, but it ends there), so how advantageous is it to create the regex using the list of registered shortcode names?  Also, at what point (if any) does it become a problem (what if there are 1,000 shortcodes? 10,000?)? I know that the problems it may create are probably edge cases, but I'm curious.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The regular expression doesn't have to use the registered shortcode names if the interpreter does the checking. The interpreter can use an associative array, so it would generally be faster for the interpreter to check. Using the shortcode in the regex probably takes about the same amount of time as an in_array call as it's interpreted.
&lt;/p&gt;
&lt;p&gt;
Keeping track of valid shortcodes would still be needed in interpretation so something like [not-a-shortcode] would remain content and not be thrown out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>flush_rewrite_rules_on_submit.2.diff attached to Ticket #14547</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14547/flush_rewrite_rules_on_submit.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14547/flush_rewrite_rules_on_submit.2.diff/1281058876000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14547 (Flush Rewrite Rules on Submit, not on Page Load) created</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14547</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14547/1281058805000000</guid>
      <description>&lt;p&gt;
Current: Rewrite rules are flushed when /wp-admin/options-permalink.php is loaded.
&lt;/p&gt;
&lt;p&gt;
Expected: Rewrite rules should be flushed only after the user submits the request.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:30/1281058091000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:27" title="Comment 27"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:26" title="Comment 26"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you are still ignoring the problem of posts getting renamed by users that have mirrored terms that are shared by other taxonomies.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought we covered that. Why do you keep bringing up an argument that has already been addressed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:28" title="Comment 28"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Oh, and yeah, I looked at your code on gist and it's NOT similar to what I'm doing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The reason I kept bringing it up was that I misunderstood; I thought you were essentially the same as what I was doing. You  are correct, &lt;strong&gt;I apologize&lt;/strong&gt;, is it NOT similar.
&lt;/p&gt;
&lt;p&gt;
However, not only is your solution NOT similar, it is &lt;em&gt;worse&lt;/em&gt;. When you boil away all the other stuff the problem is that you are overloaded a 200 character text field to store a 20 byte key.  It's actually a cool little hack, but it doesn't scale and shouldn't be recommended.
&lt;/p&gt;
&lt;p&gt;
When I run EXPLAIN on this simply query:
&lt;/p&gt;
&lt;pre class="wiki"&gt;mysql&amp;gt; EXPLAIN SELECT term_id,name,slug FROM wp_terms WHERE slug='p24';
&lt;/pre&gt;&lt;p&gt;
This is what we get (I don't know why MySQL makes the key 602 bytes but while it's not as bad as trying to key off a longtext field, it is close):
&lt;/p&gt;
&lt;pre class="wiki"&gt;*************************** 1. row ***************************
id           : 1
select_type  : SIMPLE
table        : wp_terms
type         : const
possible_keys: slug
key          : slug
key_len      : 602
ref          : const
rows         : 1
Extra        :
1 rows in set (0.00 sec)
&lt;/pre&gt;&lt;p&gt;
Your code ultimately runs this (assuming it is not cached) which is basically the same thing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT t.*, tt.* FROM wp_terms AS t INNER JOIN wp_term_taxonomy AS tt ON t.term_id = tt.term_id WHERE tt.taxonomy = 'p2p' AND slug = 'p24' LIMIT 1
&lt;/pre&gt;&lt;p&gt;
The above code is not so bad if there are &amp;lt;1000 or even &amp;lt;2500 records in wp_terms but if we have 10,000 records (movies) with 10 relationships a piece (actors) this absolutely does not scale. (And to make matters worse, your code current does not recognize the reciprocal relationship when one is encoded so a user would have to do both tasks: 1.) Add Actors to a Movie and 2.) Add Movies to an Actor which is crazy.
&lt;/p&gt;
&lt;p&gt;
So I can't endorse your implementation except for use on a site that will never have more than a small number of posts.
&lt;/p&gt;
&lt;p&gt;
Heck, if I were going to hack the taxonomy system and use it in a non-standard way that could cause confusion, I'd add an index for "&lt;code&gt;term_group&lt;/code&gt;" and the store foreign key values for &lt;code&gt;$post-&amp;gt;ID&lt;/code&gt; there.  Then you'd at least be to relate to 8 bytes keys with an index with an EXPLAIN that looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;mysql&amp;gt; EXPLAIN SELECT term_id,name,slug FROM wp_terms WHERE term_group=24  \G
*************************** 1. row ***************************
id           : 1
select_type  : SIMPLE
table        : wp_terms
type         : ref
possible_keys: term_group
key          : term_group
key_len      : 8
ref          : const
rows         : 1
Extra        :
1 rows in set (0.01 sec)
&lt;/pre&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:29" title="Comment 29"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:18" title="Comment 18"&gt;mikeschinkel&lt;/a&gt;:
Well, if you "must" know...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've been interested in much the same but have never dug deep so I'll defer to your research and judgement.  Frankly I'd have to really think about what you posted at length and right now I'm too tired.  What's important to me on this ticket is 1.) that we recognize that post-to-post relations are a common and important use-case and 2.) that we don't accept a solution that is impractical and/or doesn't scale simply because nobody stood up to challenge it.  Of course I'd like to support get added to core but frankly I knew that it might be an uphill battle so I'm prepared for that not to happen.
&lt;/p&gt;
&lt;p&gt;
So in the spirit of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; another option could be to add an indexed field to postmeta (maybe "&lt;code&gt;meta_int&lt;/code&gt;") that can be used to start bigint values in (like post_ids) and/or anything else that can be serialized into a big int (i.e. time, etc.)  If it is &lt;code&gt;null&lt;/code&gt; then is should behave in a backward compatible manner. If it is not null then we could look to meta_value for the "type" (post, date, date/time, etc.)  Just a thought...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14546 (Refactor direct references for $wp_rewrite class members) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:26:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14546#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14546#comment:1/1281057964000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>refactor_for_wp_rewrite.diff attached to Ticket #14546</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14546/refactor_for_wp_rewrite.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14546/refactor_for_wp_rewrite.diff/1281057669000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14546 (Refactor direct references for $wp_rewrite class members) created</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Fri, 06 Aug 2010 01:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14546</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14546/1281057583000000</guid>
      <description>&lt;p&gt;
This patch replaces direct references to class members $wp_rewrite-&amp;gt;* with their public functions.
&lt;/p&gt;
&lt;p&gt;
Removes:
$wp_rewrite-&amp;gt;flush_rules(), $wp_rewrite-&amp;gt;add_permastruct(), $wp_rewrite-&amp;gt;add_rewrite_tag()
&lt;/p&gt;
&lt;p&gt;
Replaces with:
flush_rewrite_rules(), add_permastruct(), add_rewrite_tag()
&lt;/p&gt;
&lt;p&gt;
Also removes extraneous $wp_rewrite globals.
&lt;/p&gt;
&lt;p&gt;
Follow-Up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10912" title="#10912: enhancement: Complete the rewrite API (closed: fixed)"&gt;#10912&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>