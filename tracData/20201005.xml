<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #49145 (Undefined index: host in/wp-includes/l10n.php on line 989, suggested fix) updated</title>
      
        <dc:creator>nourma</dc:creator>

      <pubDate>Mon, 05 Oct 2020 23:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49145#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49145#comment:17/1601942042515763</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49145#comment:15" title="Comment 15"&gt;justinahinon&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The initial patch proposed by Sergey still needs a look.&lt;br /&gt;
@nourma proposed to work on it during yesterday's i18n bug scrub.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And I can write the unit tests when ready.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am unable to duplicate the undefined index in &lt;code&gt;l10n.php&lt;/code&gt;. When I use &lt;code&gt;wp_make_link_relative&lt;/code&gt; to filter &lt;code&gt;site_url&lt;/code&gt; to make URLs relative,  I get undefined indexes in &lt;code&gt;theme.php&lt;/code&gt;(lines 3479 &amp;amp; 3544), &lt;code&gt;class-wp-customize-manager.php&lt;/code&gt;(line 4598), and&lt;code&gt; http.php&lt;/code&gt;(lines 421 and 422). In each case, a function is trying to access &lt;code&gt;$admin_origin['host']&lt;/code&gt;, which has no &lt;code&gt;host&lt;/code&gt; index. On a side note, I was able to successfully apply the patch 49145.diff (but obviously was unable to test that it actually solved the problem, since I was unable to replicate the error in &lt;code&gt;l10n.php&lt;/code&gt;). I applied the patch on the latest build WordPress 5.6.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu-item.jpg attached to Ticket #51451</title>
      
        <dc:creator>BackuPs</dc:creator>

      <pubDate>Mon, 05 Oct 2020 21:12:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51451/menu-item.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51451/menu-item.jpg/1601932352607706</guid>
      <description>&lt;p&gt;
the add to menu button
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51451 (What event is triggered when a menu item is added to the menu) created</title>
      
        <dc:creator>BackuPs</dc:creator>

      <pubDate>Mon, 05 Oct 2020 21:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51451</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51451/1601932322674146</guid>
      <description>&lt;p&gt;
Hi&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What js event is triggered when a new menu item is added to the menu by clicking the add to menu button?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51025 (Add support for the anyOf and oneOf JSON Schema keywords.) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Mon, 05 Oct 2020 20:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51025#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51025#comment:8/1601930396699459</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refresh needed as PR has merge conflicts.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47058 (Site Health: does not distinguish between production / staging / ...) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Mon, 05 Oct 2020 20:19:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47058#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47058#comment:19/1601929141149028</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like the idea of a function to check if it's a dev environment, to determine if certain checks should run, so I'd love to keep that, and the check it performs makes sense to me as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I do want to keep the warning from @knutsp in mind as well, that we should be careful about what we do and don't change based on environments, and which environments. With that in mind, I think we should start by replacing the &lt;code&gt;localhost&lt;/code&gt; checks with the environment checks, which should be more reliable in that scenario.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I also think it's reasonable to not call &lt;code&gt;WP_DEBUG&lt;/code&gt; being enabled as critical on a dev/localhost setup, as it's expected to be on there for most users, I would still like to keep the &lt;code&gt;DEBUG_LOG&lt;/code&gt; check as is though, because sensitive information may still end up in a public file when that is enabled (I know I will happily use &lt;code&gt;error_log()&lt;/code&gt; to write debug data to the file, over displaying it publicly when doing some deep-dive debugging, because I know I'm in control of the moment, but everyone might not be).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48105 (Move Site Health async checks to a REST API endpoint) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 05 Oct 2020 20:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48105#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48105#comment:29/1601928740718262</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/Clorith"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Clorith&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/381#issuecomment-703862655"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #381&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry, I think the last thing. Do we need each REST API endpoint to wrap its results in the &lt;code&gt;data&lt;/code&gt; property? We don't typically do this. Looking at the JS it looks like it passes on &lt;code&gt;response.data&lt;/code&gt;, can we then just change that to &lt;code&gt;response&lt;/code&gt;?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch, in my head I was trying to maintain the same format as the &lt;code&gt;admin-ajax&lt;/code&gt; calls had when using &lt;code&gt;wp_send_json_success&lt;/code&gt; for the sake of the filters in place, but the filters take just the response data any way, and not the whole response object, so this shouldn't need ot be mimiced.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51299 (Remove the title attribute from Walker_Nav_Menu) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Mon, 05 Oct 2020 20:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51299#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51299#comment:8/1601928517332996</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per @audrasjb in Slack conversation:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This change will probably deserve a small dev note, too&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51450.diff attached to Ticket #51450</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Mon, 05 Oct 2020 20:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51450/51450.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51450/51450.diff/1601928490070090</guid>
      <description>&lt;p&gt;
Patch mentioned in ticket.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51450 (Incorrect @since value for add_allowed_options()) created</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Mon, 05 Oct 2020 20:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51450/1601928440652992</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48121" title="General: Remove “whitelist” and “blacklist” in favor of more clear and ..."&gt;[48121]&lt;/a&gt; for WP 5.5, &lt;code&gt;add_option_whitelist()&lt;/code&gt; was deprecated and renamed to &lt;code&gt;add_allowed_options()&lt;/code&gt;. However, the &lt;code&gt;@since&lt;/code&gt; documentation value for the new function was not updated to "5.5.0". The pre-existing value of "2.7.0" only properly applies to &lt;code&gt;add_option_whitelist()&lt;/code&gt; and gives the mistaken impression that &lt;code&gt;add_allowed_options()&lt;/code&gt; was available for use prior to 5.5.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This looks to just be an oversight as the similar &lt;code&gt;remove_option_allowed_list()&lt;/code&gt; (which replaced &lt;code&gt;remove_option_whitelist()&lt;/code&gt; in the same commit) has its &lt;code&gt;@since&lt;/code&gt; value updated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Patch attached.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48105 (Move Site Health async checks to a REST API endpoint) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 05 Oct 2020 19:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48105#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48105#comment:28/1601927011309836</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/TimothyBJacobs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TimothyBJacobs&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/381#issuecomment-703848156"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #381&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry, I think the last thing. Do we need each REST API endpoint to wrap its results in the &lt;code&gt;data&lt;/code&gt; property? We don't typically do this. Looking at the JS it looks like it passes on &lt;code&gt;response.data&lt;/code&gt;, can we then just change that to &lt;code&gt;response&lt;/code&gt;?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51142 (Invalid Moment.js locale from get_user_locale()) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Mon, 05 Oct 2020 19:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51142#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51142#comment:3/1601927010094434</guid>
      <description>&lt;p&gt;
Related:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/15221"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/15221&lt;/a&gt; - Ordinal suffix token does not work in &lt;code&gt;wp.date.format&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/25782"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/25782&lt;/a&gt; - Use date-fns and date-fns-tz instead of moment
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #7194,​51386 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Oct 2020 19:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=7194%2C51386</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=7194%2C51386/1601926839908399</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just noting this has come up multiple times before, please see the previous discussions in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7194" title="#7194: enhancement: Change hard-coded WP-Admin to variable like $table_prefix (closed: wontfix)"&gt;#7194&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13118" title="#13118: enhancement: wp-login.php and wp-admin folder location/name choice during the ... (closed: duplicate)"&gt;#13118&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15289" title="#15289: feature request: Make it easier for a non-standard URL to be used to access wp-admin (closed: wontfix)"&gt;#15289&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21924" title="#21924: feature request: add action / filter to wp-login.php so we can replace WordPress login ... (closed: worksforme)"&gt;#21924&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24673" title="#24673: defect (bug): provide mainline supported rename of wp-login (closed: wontfix)"&gt;#24673&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38444" title="#38444: defect (bug): WP_ADMIN_DIR not set properly (closed: duplicate)"&gt;#38444&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38800" title="#38800: enhancement: add WP_ADMIN_URL and WP_INCLUDES_URL constants (new)"&gt;#38800&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44552" title="#44552: feature request: Better security for wp-admin console (closed: duplicate)"&gt;#44552&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To summarize, the &lt;code&gt;wp-login.php&lt;/code&gt; or &lt;code&gt;wp-admin&lt;/code&gt; URLs are not intended to be customizable, as that's just security through obscurity and doesn't really help with anything, so there are currently no plans to implement this in core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To improve website security, I would suggest following these general recommendations instead:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Have strong password (at least 24 characters long, with numbers and special characters).
&lt;/li&gt;&lt;li&gt;Don't give Administrator or Editor access to people you don't completely trust.
&lt;/li&gt;&lt;li&gt;Download plugins and themes from official resources only.
&lt;/li&gt;&lt;li&gt;Keep WordPress, plugins, and themes updated to the latest stable version.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #42852 (Add new user: new password not generated when reopening Show Password) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 05 Oct 2020 19:40:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42852#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42852#comment:24/1601926830064249</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42852 (Add new user: new password not generated when reopening Show Password) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 05 Oct 2020 19:40:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42852#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42852#comment:23/1601926806381178</guid>
      <description>&lt;p&gt;
@michaelarestad thanks for the feedback!&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for the "Generate" button, I don't think that's necessary. I don't know how many folks are opinionated about their generated random string. If so, they can customize it.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What do you think?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That seems fine to me and simplifies the UI. Any problems with removing the from an a11y standpoint @afercia ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50774 (include version updated FROM in plugin/theme auto-updates emails) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Oct 2020 19:20:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50774#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50774#comment:15/1601925641580296</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-auto-updates by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-auto-updates/p1601925640056900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47058 (Site Health: does not distinguish between production / staging / ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Oct 2020 19:17:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47058#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47058#comment:18/1601925478251949</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-site-health by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-site-health/p1601925476000800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48654 (Consider a solution/endpoint to lazy-load scripts and styles) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Mon, 05 Oct 2020 19:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48654#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48654#comment:35/1601925260113458</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Punting per @TimothyBlynJacobs' comment above&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Bumping to Future Release, this hasn't seen much activity in the past few months. If someone is interested in taking it on for 5.6, feel free to re-milestone.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42766 (Issue in update password From admin side and login ith same password) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 05 Oct 2020 18:46:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42766#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42766#comment:30/1601923609810766</guid>
      <description>&lt;p&gt;
This is pretty close, although after the last patch some additional concerns were raised. I think we can address these by adding the same 'trim' logic for passwords that are all spaces to the JavaScript side, so we can make the action button disabled (just like when the field is blank). I'll plan to get back to this soon unless someone else beats me to it :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42766 (Issue in update password From admin side and login ith same password) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Mon, 05 Oct 2020 18:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42766#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42766#comment:29/1601922714786012</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per @paaljoachim comment above, this ticket does not need design.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We looked at this during Monday's Design triage and agreed on that this ticket does not need design. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15317 (My Sites limited to 23 sites on Admin Bar) updated</title>
      
        <dc:creator>zephyr7501</dc:creator>

      <pubDate>Mon, 05 Oct 2020 18:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15317#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15317#comment:56/1601921661195577</guid>
      <description>&lt;p&gt;
I've solved it with CSS and JavaScript. Give it a try if you want.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://qiita.com/zephyr7501/items/dd0967fddabd888b28c4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://qiita.com/zephyr7501/items/dd0967fddabd888b28c4&lt;/a&gt;&lt;br /&gt;
(Sorry, it's only in Japanese. I'll add an explanation in English later.)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51415 (5.6 About Page) updated</title>
      
        <dc:creator>yvettesonneveld</dc:creator>

      <pubDate>Mon, 05 Oct 2020 17:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51415#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51415#comment:7/1601920700879685</guid>
      <description>&lt;p&gt;
I think that is a great idea, @elmastudio.  &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51446 (CORS issues with QUnit while running tests) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Mon, 05 Oct 2020 17:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51446#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51446#comment:5/1601918117773071</guid>
      <description>&lt;p&gt;
Those lines where introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37714" title="Update/Install: Shiny Updates v2.
Gone are the days of isolation and ..."&gt;r37714&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40640" title="Widgets: Introduce media widgets for images, audio, and video with ..."&gt;r40640&lt;/a&gt;. I'm guessing they intentionally used relative URLs, so that people could run it from any host. It'd be great to keep that flexibility if we can.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;rm -f compiled.html&lt;/code&gt; &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1601405096188300?thread_ts=1601402311.187600&amp;amp;cid=C02RQBWTW"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;fixed a similar problem for me&lt;/a&gt;. At a quick glance, grunt &lt;em&gt;should&lt;/em&gt; do that, but there may be some edge cases where it gets stuck and needs to be done manually. If your copy is outdated, that could be the cause.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What URL do run Core from normally?
&lt;/li&gt;&lt;li&gt;Can you share your Apache vhost config for the site?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51446 (CORS issues with QUnit while running tests) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Mon, 05 Oct 2020 16:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51446#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51446#comment:4/1601916538283162</guid>
      <description>&lt;p&gt;
Hey @desrosj I'm on macOS Catalina (10.15.6), using MAMP 5.7 and SVN 1.10.4.&lt;br /&gt;
NPM v6.14.8&lt;br /&gt;
GRUNT-cli v1.3.2&lt;br /&gt;
GRUNT v1.1.0&lt;br /&gt;
QUnit v2.9.3&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Steps to run tests (skipping other unrelated steps);&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create folder.
&lt;/li&gt;&lt;li&gt;Install via SVN.
&lt;/li&gt;&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Rename wp-tests-config-sample.php to wp-tests-config.php
&lt;/li&gt;&lt;li&gt;Create DB, update wp-tests-config.php
&lt;/li&gt;&lt;li&gt;Run &lt;code&gt;grunt test&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
*This is just going straight to testing, I often patch or build but always same CORS issue when running the tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note: I mentioned on Slack a couple times the last couple months so feels like it started since 5.5.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19879_WordPress_56-AddedFilterForDirSizeCalculation.2.patch attached to Ticket #19879</title>
      
        <dc:creator>janthiel</dc:creator>

      <pubDate>Mon, 05 Oct 2020 15:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19879/19879_WordPress_56-AddedFilterForDirSizeCalculation.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19879/19879_WordPress_56-AddedFilterForDirSizeCalculation.2.patch/1601912334779513</guid>
      <description>&lt;p&gt;
New filter comment wrongly stated to expect the dir size in megabytes and not in bytes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19879 (Better caching for get_dirsize) updated</title>
      
        <dc:creator>janthiel</dc:creator>

      <pubDate>Mon, 05 Oct 2020 15:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19879#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19879#comment:25/1601912113092753</guid>
      <description>&lt;p&gt;
I just added another patch file. It includes one additional filter which will alow one to change the calculation of the dirsize without losing the new caching benefits.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Currently one can only use the &lt;code&gt;pre_get_space_used&lt;/code&gt; filter which then required to either duplicate large parts of the actual &lt;code&gt;get_dirsize&lt;/code&gt; and &lt;code&gt;recurse_dirsize&lt;/code&gt; functions or lose the benefits of the new caching.&lt;br /&gt;
The new filter allows for custom code to run per directory and the result will fill the dirsize_cache. Yet the previous existing filter &lt;code&gt;pre_get_space_used&lt;/code&gt; can still be used to implement a complete own space calculation which might or might not rely on the dirsize_cache. So there will be complete backward compatibility for those who implemented their own logic.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Particular use cases for the new filter are:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Calling CDN APIs to get the actual usage of the requested directory
&lt;/li&gt;&lt;li&gt;Implement custom logic benefiting from deep integration into native operating system tools for much faster calculations (like &lt;code&gt;du&lt;/code&gt; on unix)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19879_WordPress_56-AddedFilterForDirSizeCalculation.patch attached to Ticket #19879</title>
      
        <dc:creator>janthiel</dc:creator>

      <pubDate>Mon, 05 Oct 2020 15:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19879/19879_WordPress_56-AddedFilterForDirSizeCalculation.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19879/19879_WordPress_56-AddedFilterForDirSizeCalculation.patch/1601911627319471</guid>
      <description>&lt;p&gt;
Added new filter to allow for custom dir size calculation without losing the new caching
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51441 (Add brackets to @see tags) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Oct 2020 14:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51441#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51441#comment:5/1601906471329490</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/49092" title="Docs: Add brackets to function names in some `@see` tags, for ..."&gt;49092&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add brackets to function names in some &lt;code&gt;@see&lt;/code&gt; tags, for consistency.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ravipatel, davidbaumwald.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51441" title="#51441: defect (bug): Add brackets to @see tags (closed: fixed)"&gt;#51441&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [49092]: Docs: Add brackets to function names in some `@see` tags, for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Oct 2020 14:01:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/49092</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/49092/1601906470198614</guid>
      <description>&lt;p&gt;
Docs: Add brackets to function names in some &lt;code&gt;@see&lt;/code&gt; tags, for consistency.
&lt;/p&gt;
&lt;p&gt;
Props ravipatel, davidbaumwald.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51441" title="#51441: defect (bug): Add brackets to @see tags (closed: fixed)"&gt;#51441&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #51441 (Add brackets to @see tags) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Oct 2020 13:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51441#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51441#comment:4/1601906226204281</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41949 (Allow multiple values for the same meta key to be passed to ...) updated</title>
      
        <dc:creator>stuffradio</dc:creator>

      <pubDate>Mon, 05 Oct 2020 13:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41949#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41949#comment:23/1601905749743755</guid>
      <description>&lt;p&gt;
@TimothyBlynJacobs @desrosj Are you able to give feedback on the ticket? :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51448 (Add missing @return tag to Language_Pack_Upgrader::check_package()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Oct 2020 13:42:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51448#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51448#comment:7/1601905326127166</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/49091" title="Docs: Add missing `@return` tag to ..."&gt;49091&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add missing &lt;code&gt;@return&lt;/code&gt; tag to &lt;code&gt;Language_Pack_Upgrader::check_package()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Synchronize documentation of the &lt;code&gt;::check_package()&lt;/code&gt; method between &lt;code&gt;Plugin_Upgrader&lt;/code&gt;, &lt;code&gt;Theme_Upgrader&lt;/code&gt;, and &lt;code&gt;Language_Pack_Upgrader&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ankitmaru, mukesh27, desrosj.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51448" title="#51448: defect (bug): Add missing @return tag to Language_Pack_Upgrader::check_package() (closed: fixed)"&gt;#51448&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [49091]: Docs: Add missing `@return` tag to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Oct 2020 13:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/49091</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/49091/1601905324942512</guid>
      <description>&lt;p&gt;
Docs: Add missing &lt;code&gt;@return&lt;/code&gt; tag to &lt;code&gt;Language_Pack_Upgrader::check_package()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Synchronize documentation of the &lt;code&gt;::check_package()&lt;/code&gt; method between &lt;code&gt;Plugin_Upgrader&lt;/code&gt;, &lt;code&gt;Theme_Upgrader&lt;/code&gt;, and &lt;code&gt;Language_Pack_Upgrader&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ankitmaru, mukesh27, desrosj.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51448" title="#51448: defect (bug): Add missing @return tag to Language_Pack_Upgrader::check_package() (closed: fixed)"&gt;#51448&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #51448 (Add missing @return tag to Language_Pack_Upgrader::check_package()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Oct 2020 13:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51448#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51448#comment:6/1601905183961373</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51448 (Add missing @return tag to Language_Pack_Upgrader::check_package()) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 05 Oct 2020 13:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51448#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51448#comment:5/1601904585267249</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can we also update the function's &lt;code&gt;@param&lt;/code&gt; tags to include descriptions?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, since this file is only ~500 lines, it would be great to audit the inline documentation for the entire file at the same time. At first glance, it looks like most of the functions have all of the required inline docs, but if it could be double checked, that would be great!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51446 (CORS issues with QUnit while running tests) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 05 Oct 2020 12:56:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51446#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51446#comment:3/1601902561010910</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @garrett-eclipse! Can you give a bit of information around your set up? I'm curious why this has not been encountered before.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51330 (Allow more granular control over enqueuing editor scripts and styles) updated</title>
      
        <dc:creator>zieladam</dc:creator>

      <pubDate>Mon, 05 Oct 2020 11:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51330#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51330#comment:13/1601897343603184</guid>
      <description>&lt;p&gt;
@frank-klein good note! See &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/570"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/570&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51330 (Allow more granular control over enqueuing editor scripts and styles) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 05 Oct 2020 11:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51330#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51330#comment:12/1601897316887537</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/570"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #570&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/adamziel"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;adamziel&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/537"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/537&lt;/a&gt; introduced the &lt;code&gt;_should_load_block_editor_scripts_and_styles&lt;/code&gt; function. While it got generally good feedback, one comment noted it would be useful to make it a public function. This PR does just that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/51330"&gt;https://core.trac.wordpress.org/ticket/51330&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51157 (Bundled Themes: List block appears too far to the left after 5.5 upgrade) updated</title>
      
        <dc:creator>francina</dc:creator>

      <pubDate>Mon, 05 Oct 2020 09:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51157#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51157#comment:13/1601891030408332</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@sabernhardt my understanding from your last comment is:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For LTR and RTL non-nested lists, this is good to go and ready for commit
&lt;/li&gt;&lt;li&gt;Only Twenty Eleven shows nested lists in RTL &amp;gt; Needs new ticket?
&lt;/li&gt;&lt;li&gt;Twenty Thirteen has trouble with nested lists in both LTR and RTL languages &amp;gt; Needs new ticket?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Paging @ianbelanger for this, to assess if something can be done to get this into 5.6&lt;br /&gt;
Thanks!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51447 ("type" attribute is unnecessary for JavaScript resources.) updated</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Mon, 05 Oct 2020 09:22:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51447#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51447#comment:1/1601889728993686</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello and welcome to trac, @mhimon. Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This was earlier fixed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42804" title="#42804: task (blessed): type is not required in HTML5 (closed: fixed)"&gt;#42804&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I could not reproduce this in the Twenty Twenty theme using the latest WordPress version. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can you help by sharing some more details of your setup - especially how jQuery script is enqueued?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Further, the notice that you see is only a &lt;code&gt;warning&lt;/code&gt; - which means the site will continue to work without any issue. Hence, I'm changing the severity of this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51449 (Image caption missing after saving in multisite with non super ...) created</title>
      
        <dc:creator>gochisiyan</dc:creator>

      <pubDate>Mon, 05 Oct 2020 08:21:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51449</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51449/1601886116880412</guid>
      <description>&lt;p&gt;
I created a new multisite environment and create a new post with a plugin classic editor activated. Edit using the Editor account, adding media, and add caption then save the post. Switch to the HTML tab and back to Visual tab, the caption will be gone.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I can confirm this of not happening just to me but also to my client which originally reported the issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51448 (Add missing @return tag to Language_Pack_Upgrader::check_package()) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Mon, 05 Oct 2020 07:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51448#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51448#comment:4/1601881366344614</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for update.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Patch looks fine for me.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51448 (Add missing @return tag to Language_Pack_Upgrader::check_package()) updated</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Mon, 05 Oct 2020 06:51:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51448#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51448#comment:3/1601880663905296</guid>
      <description>&lt;p&gt;
@mukesh27 Thanks, I have updated the patch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51448.patch attached to Ticket #51448</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Mon, 05 Oct 2020 06:50:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51448/51448.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51448/51448.patch/1601880645910153</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51448 (Add missing @return tag to Language_Pack_Upgrader::check_package()) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Mon, 05 Oct 2020 06:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51448#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51448#comment:2/1601880438237209</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please update return type with below description.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; * @return string|WP_Error The source or a WP_Error. &lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51448 (Add missing @return tag to Language_Pack_Upgrader::check_package()) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Mon, 05 Oct 2020 06:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51448#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51448#comment:1/1601880138532034</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>class-language-pack-upgrader.php.patch attached to Ticket #51448</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Mon, 05 Oct 2020 06:26:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51448/class-language-pack-upgrader.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51448/class-language-pack-upgrader.php.patch/1601879191824368</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51448 (Add missing @return tag to Language_Pack_Upgrader::check_package()) created</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Mon, 05 Oct 2020 06:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51448</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51448/1601879162488115</guid>
      <description>&lt;p&gt;
Missing @return tag in function/method PHPDoc comment&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51156 (Create developer documentation for disclosures.json) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Oct 2020 06:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51156#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51156#comment:12/1601878348898811</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by poena. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1601878347162600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) updated</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Mon, 05 Oct 2020 05:42:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442#comment:5/1601876572591802</guid>
      <description>&lt;p&gt;
OK, last update, I hope. Problem persists. I re-checked with default theme and all plugins off (did that before, but did it again just to be sure).&lt;br /&gt;
I managed to add 4 embed blocks with youtube videos (2 50:50 columns blocks with 2 videos each). This worked, after a few tries. I failed consistemtly when trying to add another columns block and adding videos, or even when trying to add a paragraph containing a youtube link (as before); Gutenberg would throw the JSON error and would not update.&lt;br /&gt;
I created another post using Gutenberg, with 1 columns block, as I tried above. Switched to Classic, copied the block in text mode, included this in the original post, updated.&lt;br /&gt;
Post now shows all 6 videos as intended (3 rows of 2 veideos each). Gutenberg still cannot update the block and *immediately* shows "You cannot embed this …" for each video, plus the JSON error, the moment I edit the post.&lt;br /&gt;
Workaround found. Contact me if there are any q.s or if you need site access.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51447 ("type" attribute is unnecessary for JavaScript resources.) created</title>
      
        <dc:creator>mhimon</dc:creator>

      <pubDate>Mon, 05 Oct 2020 04:48:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51447</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51447/1601873298627396</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I got an "HTML" validation issue on my client site. Well, I checked some of my client websites and they all have the same validation error! &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://scontent.fdac10-1.fna.fbcdn.net/v/t1.15752-9/120774202_2703280896605781_6902198684136881457_n.png?_nc_cat=107&amp;amp;_nc_sid=ae9488&amp;amp;_nc_eui2=AeGbyasXOHnrPs4yw_qBhyNDo2fUAOavxwGjZ9QA5q_HAaSgRvE8O14vG9oq-h3K0MPYRFlJqEhMc2oaIO_rZoJc&amp;amp;_nc_ohc=fwWUYynpku4AX8K2vus&amp;amp;_nc_ht=scontent.fdac10-1.fna&amp;amp;oh=66e08268a18a303b1e28208f8c160fc5&amp;amp;oe=5FA21ECC"&gt;&lt;img src="https://scontent.fdac10-1.fna.fbcdn.net/v/t1.15752-9/120774202_2703280896605781_6902198684136881457_n.png?_nc_cat=107&amp;amp;_nc_sid=ae9488&amp;amp;_nc_eui2=AeGbyasXOHnrPs4yw_qBhyNDo2fUAOavxwGjZ9QA5q_HAaSgRvE8O14vG9oq-h3K0MPYRFlJqEhMc2oaIO_rZoJc&amp;amp;_nc_ohc=fwWUYynpku4AX8K2vus&amp;amp;_nc_ht=scontent.fdac10-1.fna&amp;amp;oh=66e08268a18a303b1e28208f8c160fc5&amp;amp;oe=5FA21ECC" alt="https://scontent.fdac10-1.fna.fbcdn.net/v/t1.15752-9/120774202_2703280896605781_6902198684136881457_n.png" crossorigin="anonymous" title="https://scontent.fdac10-1.fna.fbcdn.net/v/t1.15752-9/120774202_2703280896605781_6902198684136881457_n.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
update-core.php file content: &lt;br /&gt;
You have the latest version of WordPress.&lt;br /&gt;
If you need to re-install version &lt;strong&gt;5.5.1&lt;/strong&gt;, you can do so here:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51446 (CORS issues with QUnit while running tests) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Oct 2020 04:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51446#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51446#comment:2/1601870737683148</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by garrett-eclipse. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1601870735251400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51446 (CORS issues with QUnit while running tests) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Mon, 05 Oct 2020 04:04:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51446#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51446#comment:1/1601870695618148</guid>
      <description>&lt;p&gt;
One other note, going directly to the qunit index.html file in the browser had all tests passing properly without CORS issue. It was only via command line that it threw the errors.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51446.diff attached to Ticket #51446</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Mon, 05 Oct 2020 04:02:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51446/51446.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51446/51446.diff/1601870556358507</guid>
      <description>&lt;p&gt;
Specifically use localhost in the qunit tests to avoid CORS issues from localost to &lt;a class="ext-link" href="file:///"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;file:///&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51446 (CORS issues with QUnit while running tests) created</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Mon, 05 Oct 2020 04:01:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51446/1601870508861243</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For a while I've been having an error when running &lt;code&gt;grunt test&lt;/code&gt; with the qunit tests;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Running "qunit:files" (qunit) task
Testing tests/qunit/compiled.html ......................................................................................................................................................................................................................................................................................................OK
Testing tests/qunit/index.html Access to XMLHttpRequest at 'file:///wp-admin/admin-ajax.php' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, https.
Failed to load resource: net::ERR_FAILED
......................................................................................................................................................................................................................................................................................................OK
&amp;gt;&amp;gt; 588 tests completed with 0 failed, 0 skipped, and 0 todo.
&amp;gt;&amp;gt; 1738 assertions (in 8024ms), passed: 1738, failed: 0
&lt;/pre&gt;&lt;p&gt;
Looking into this a little I was able to resolve these by updating the &lt;code&gt;tests/qunit/index.html&lt;/code&gt; to use localhost for the ajax urls. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Uploading patch but am unsure if it's the correct action, seems to work nicely for me at least and suppresses the error.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51390 (PHP error: Trying to access array offset on value of type bool in ...) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sun, 04 Oct 2020 21:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51390#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51390#comment:10/1601847311942114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @Mista-Flo this tests well and unit tests are passing, moving forward for a committer review.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/51390/51390.4.diff"&gt;51390.4.diff&lt;/a&gt; the only change was adding the missing period to the comment sentence in test_post_format_doing_it_wrong.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51390.4.diff attached to Ticket #51390</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sun, 04 Oct 2020 21:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51390/51390.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51390/51390.4.diff/1601847291276016</guid>
      <description>&lt;p&gt;
Minor refresh to make the comment a sentence.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51404 ('Change logo' button in customizer doesn't work in Firefox) closed</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 04 Oct 2020 21:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51404#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51404#comment:5/1601846337686087</guid>
      <description>invalid: &lt;p&gt;
Hi @majorlabel,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unfortunately, support for individual installations isn't available in Trac, but you'll be able to find help in &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the WordPress support forums&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If it turns out there is a bug in autoupdates that leads to this issue in the Customizer, it would be best to open a dedicated Trac ticket for that in the upgrade component. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For now, as there doesn't appear to be an issue in the Customizer (I am also unable to replicate it in Firefox 81 on a fresh installation with a default theme), I'm going to close this ticket, but feel free to reopen it if steps to replicate the issue reliably can be developed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #51445 ([Multiple Bundled Themes] Add theme support for navigation-widgets) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51445#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51445#comment:2/1601842468403904</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by hareesh-pillai. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1601842466404000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51445 ([Multiple Bundled Themes] Add theme support for navigation-widgets) updated</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51445#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51445#comment:1/1601842408026595</guid>
      <description>&lt;p&gt;
Twenty Thirteen and later themes have declared HTML5 support. &lt;br /&gt;
51445.diff adds &lt;code&gt;navigation-widgets&lt;/code&gt; type to the &lt;code&gt;html5&lt;/code&gt; feature.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>collage.png attached to Ticket #51445</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51445/collage.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51445/collage.png/1601842170120134</guid>
      <description>&lt;p&gt;
Comparison of the HTML structure before and after applying the patch for Twenty Twenty theme
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>51445.diff attached to Ticket #51445</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51445/51445.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51445/51445.diff/1601842084246636</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51445 ([Multiple Bundled Themes] Add theme support for navigation-widgets) created</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51445/1601842044593143</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48170" title="#48170: enhancement: Switch link list widgets to nav blocks (closed: fixed)"&gt;#48170&lt;/a&gt; introduced a theme support feature to wrap widgets displaying a lists of links within the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element. All core WordPress themes should support this feature to improve semantics and accessibility.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) updated</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Sun, 04 Oct 2020 17:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442#comment:4/1601830832027240</guid>
      <description>&lt;p&gt;
I am beginning to suspect that this may indeed be not a functional error but a case of wrong error message, like (just an example) translating a timeout error because of a slow network connection into a completely misleading error message. Juts now it works again …&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51439 (Docs: Undocumented @global instances) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Sun, 04 Oct 2020 16:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51439#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51439#comment:4/1601828714864011</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ravipatel Looking at these patches more in depth, it looks like most of these added global vars are not necessary, as they are already defined earlier in execution. For example, &lt;a href="https://core.trac.wordpress.org/attachment/ticket/51439/51439-edit-form-comment.php.patch"&gt;this patch&lt;/a&gt; is not necessary.  &lt;code&gt;edit-form-comment.php&lt;/code&gt; is an included template, and both &lt;code&gt;$action&lt;/code&gt; and &lt;code&gt;$comment&lt;/code&gt; are defined in the parent file &lt;code&gt;src/wp-admin/comment.php&lt;/code&gt;.  Same goes for the &lt;code&gt;$typenow&lt;/code&gt; and &lt;code&gt;$wpdb&lt;/code&gt; in &lt;code&gt;src/wp-admin/edit.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm adding the &lt;code&gt;close&lt;/code&gt; keyword because I think this ticket is not needed.  I'll leave it open for a couple of days to see if anyone think s this does deserve to be a standalone ticket.  Please ensure that these variables are indeed undefined at runtime, if they aren't I suggest adding to &lt;a href="https://core.trac.wordpress.org/ticket/50768"&gt;this ticket&lt;/a&gt; instead.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46635 (Improve identifying of non–trivial callbacks in hooks) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 04 Oct 2020 15:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46635#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46635#comment:27/1601825080239613</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/569"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #569&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/gmazzap"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;gmazzap&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/46635"&gt;https://core.trac.wordpress.org/ticket/46635&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
---&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## Premise&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now that WordPress is having PHP 5.6 as minimum version, and it is working toward plans to move forward the minimum version at a predictable pace, the usage of closures, or even _short closures_, is something that &lt;a class="ext-link" href="https://twitter.com/markjaquith/status/1309480913047355392"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;many developers will be willling to use&lt;/a&gt;, many already do.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, it is "officially"&amp;lt;sup&amp;gt;1&amp;lt;sup&amp;gt; considered bad practice to use those because it is not possible to remove hook callbacks added that way.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the linked ticket, Rarst proposed make it possible to remove hooks by a sort of predictable "string representation" of closures, and more generally for hooks callbacks that make use of object instances.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Rarst's proposal is inspired by what &lt;a class="ext-link" href="https://brain-wp.github.io/BrainMonkey/docs/wordpress-hooks-added.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Brain Monkey&lt;/a&gt;, a testing tool for WordPress that I happen to write a few ago and still maintain.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What Brain Monkey does, and what Rarst proposes is however something that will make calculation and retrieval of "string representation" too expensive for something like hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In this PR I will _not_ support all the possibilities listed by Rarst in the Trac ticket, but it I will support a basic subset (with some variations) but keeping an open door to the possibility to extend the support for other possibilities in a later iteraction.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## Scope&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When I started working on this PR I had in mind the following priorities:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;do not break backward compatibility in &lt;strong&gt;*any&lt;/strong&gt;* way, even supporting code that makes use of "internal" or "private" WordPress functions
&lt;/li&gt;&lt;li&gt;allow the check (&lt;code&gt;has_filter&lt;/code&gt;/ &lt;code&gt;has_action&lt;/code&gt;) and the removal of hook callbacks supporting all the possibility offered by PHP callable
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
## Implementation&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Assuming a &lt;code&gt;functions.php&lt;/code&gt; that contain the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
add_action('some_hook', function () { /* some code here */ });&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('some_other_hook', [new SomeObject, 'a_method']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If merged, this PR will make possible to check and remove the added hooks like so:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
&lt;em&gt; Check&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
has_action('some_hook', 'function()@functions.php'); &lt;em&gt; true&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
has_filter('some_other_hook', 'SomeObject-&amp;gt;a_method'); &lt;em&gt; true&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Remove&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
remove_action('some_hook', 'function()@functions.php');&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_action('some_other_hook', 'SomeObject-&amp;gt;a_method');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please note that:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;for closures, the file name to use after the &lt;code&gt;@&lt;/code&gt; is the *basename*, not the full path.
&lt;/li&gt;&lt;li&gt;in both cases namespace is relevant.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
### Namespace&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Let's assume our  &lt;code&gt;functions.php&lt;/code&gt; contains:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
namespace My\Awesome\Plugin;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
use Another\Name\Space\SomeObject;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_action('some_hook', function () { /* some code here */ });&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('some_other_hook', [new SomeObject, 'a_method']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If merged, this PR will make possible to check and remove the added hooks like so:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
remove_action('some_hook', 'My\Awesome\Plugin\function()@functions.php');&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_action('some_other_hook', 'Another\Name\Space\SomeObject-&amp;gt;a_method');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note how the namespace is the namespace where classes/closures are _defined_ not where they are _used_ even if for closures the great majority of times the namespace where they are defined is the same where they are used.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There're peculiar cases that it is worth to see in detail.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
### Anonymous classes&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP does not allow to retrieve the namespace of &lt;a class="ext-link" href="https://www.php.net/manual/en/language.oop5.anonymous.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;anonymous classes&lt;/a&gt;. In other words, anonymous classes are always in the root namespace. Similarly to what is done for anonymous functions (aka closures) the way anonymous classes can be identified is &lt;code&gt;class()@filename.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, unlike functions, classes can extend other classes. This is captured by the code in this PR that requires the parent class to be included in the "string representation" of the class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
$object1 = new class {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function toArray() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return [];&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
};&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$object2 = new class extends ArrayObject {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function toArray() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $this-&amp;gt;getArrayCopy();&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
};&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('some_filter', [$object1, 'toArray']);&lt;br /&gt;
add_filter('some_filter', [$object2, 'toArray']);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Remove filter using $object1&lt;br /&gt;
remove_filter('some_filter', 'class()filename.php');&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Remove filter using $object2&lt;br /&gt;
remove_filter('some_filter', 'class()ArrayObject@filename.php');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Remember that namespace does not affect "callback id" for anonymous classes but does affect id generated for closures and named classes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
### Invokable objects&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In PHP any object implementing a method named &lt;code&gt;__invoke()&lt;/code&gt; &lt;a class="ext-link" href="https://www.php.net/manual/en/language.oop5.magic.php#object.invoke"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;can be used as a callback&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Anonymous funcitons are behind the scenes nothing more than instances of a class (&lt;code&gt;Closure&lt;/code&gt;) that has a &lt;code&gt;__invoke()&lt;/code&gt; method. (see &lt;a class="ext-link" href="https://3v4l.org/OXpBe"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/OXpBe&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Whne using an invokable object, we can use the &lt;code&gt;__invoke()&lt;/code&gt; as hook callback both explicitly and implicitly. For example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
class MyInvokable {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function &lt;span class="underline"&gt;invoke() {&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return true;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$invokable = new MyInvokable;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Following two lines do &lt;strong&gt;exact same thing&lt;/strong&gt;:&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
add_filter('an_hook', $invokable);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('an_hook', [$invokable, '&lt;span class="underline"&gt;invoke']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
For this reason the "string representation" used by this PR will use exact same representation for both. For example, *both* the two filters added in the snippet right above can be removed like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
remove_filter('an_hook', 'MyInvokable-&amp;gt;&lt;span class="underline"&gt;invoke');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
To see how things works together, we can see an anonymous class that extend another class and is also invokable:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
$invokable = new class extends AnotherClass {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function &lt;span class="underline"&gt;invoke() {&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return true;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
};&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Hook added like this:&lt;br /&gt;
add_filter('an_hook', $invokable);&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Can be removed like this:&lt;br /&gt;
remove_filter('an_hook', 'class()AnotherClass-&amp;gt;&lt;span class="underline"&gt;invoke');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
## Backward compatility&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This PR is 100% backward compatible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Code that uses "static" callbacks, like funciton names or static methods are &lt;strong&gt;not&lt;/strong&gt; affected at all.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For code that make use of object instances (and that ioncludes anonymus functions) all the current approaches continue to work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example, let's assume the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
global $func, $object; &lt;br /&gt;
$func =  function () { /* some code here */ };&lt;br /&gt;
$object = new SomeObject;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_action('some_hook', $func);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('some_other_hook', [$object, 'a_method']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Currently, we can remove these hooks, in some other file, like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
global $func, $object;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_action('some_hook', $func);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_filter('some_other_hook', [$object, 'a_method']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we have access to exact same instance that was used to add the hooks, we can alos remove the hooks. This PR continue to support this approach.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Even more, something that is not really documented is that we can use &lt;a class="ext-link" href="https://www.php.net/manual/en/function.spl-object-hash.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`spl_object_hash`&lt;/a&gt; to remove hooks that make use of objects. For example, following code has the exact same effect of the code right above:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
global $func, $object;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_action('some_hook', spl_object_hash($func));&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_filter('some_other_hook', spl_object_hash($object) . 'a_method');&lt;br /&gt;
&lt;em&gt; or alternatively:&lt;br /&gt;
remove_filter('some_other_hook', _wp_filter_build_unique_id(&lt;em&gt;, [$object, 'a_method'], false);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
This approach, even if can be considered quite "hackish", continues to be supported by this PR.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## A new approach: custom callback ID&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As *additional* functionality, that works side-by-side with the workflow described above, this PR introduces a new parameter to &lt;code&gt;add_action&lt;/code&gt; and &lt;code&gt;add_filter&lt;/code&gt; that allow to define a custom ID for callbacks that make use of object instances.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example, hooks added like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
class MyPlugin {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function init() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
add_action('init', [$this, 'init'], 10, 2, 'my-plugin/init');&lt;br /&gt;
add_action('wp', [$this, 'wp'], 10, 2, 'my-plugin/wp');&lt;br /&gt;
add_action('pre_get_posts', [$this, 'pre_get_posts'], 10, 2, 'my-plugin/pre_get_posts');&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can be removed like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
remove_action('init', 'my-plugin/init');&lt;br /&gt;
remove_action('wp', 'my-plugin/wp');&lt;br /&gt;
remove_action('pre_get_posts', 'my-plugin/pre_get_posts');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The additional ID is entirely optional, but when it is used the &lt;strong&gt;only&lt;/strong&gt; way to check or remove the hook will be the custom ID.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the current implementation the custom ID is only supported for callbacks that make use of object instances, any custom ID used for callbacks represented by plain funciton names or static methods will be ignored and will end up in &lt;code&gt;_doing_it_wrong_&lt;/code&gt; being called (assuming that funcitons isalredy loaded).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## Tests&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This PR includes small change to the WordPress unit tests suite to prevent existing tests to fail, however the new funcionality is not really tested in here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason is that not being familiar with development practices at core I'm not sure how I should test things that require PHP 7+ (like anonymous classes) or closusres declared in a namespaced context.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thsi is why to test my code I created a &lt;a class="ext-link" href="https://github.com/gmazzap/wp-hooks-tests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;separate repository&lt;/a&gt; where I copied &lt;code&gt;plugin.php&lt;/code&gt; and &lt;code&gt;class-wp-hook.php&lt;/code&gt; from this PR and &lt;a class="ext-link" href="https://github.com/gmazzap/wp-hooks-tests/blob/main/tests/cases/HookCallbacksSerializationTest.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;I tested&lt;/a&gt; them to ensure the new functionality works as expected and that backward compatibility is ensured.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## Gotchas&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Even if this PR took backward compatibility as primary goal there's a sort-of edge case that will break if it woudl be merged.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Consider following code:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
add_action('say_hi', function() { echo "Hello"; });&lt;br /&gt;
add_action('say_hi', function() { echo "World"; });&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
do_action('say_hi');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This code will actually end in *"Hello World"* being printed, because _both_ closures are being added, even if the hook and priority are the same. With this PR merged the second closure will override the first, and executing the code only *"World"* is printed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason is that both closures are "serialized" as &lt;code&gt;function()@filename.php&lt;/code&gt; and this identifier is identical for both (assuming both are placed in the same file).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If this look bad to you, please notice that this is something that *already* happens for "static" callbacks and even for object methods uisng same instance.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
function say_hi() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
echo "Hi";&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_action('say_hi', 'say_hi');&lt;br /&gt;
add_action('say_hi', 'say_hi');&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
do_action('say_hi');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The code above prints *"Hi"* once, not twice.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Or consider the following:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
public MyPlugin {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function add_test_hook() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
add_action('test', [$this, 'test']);&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function test() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
static $counter = 1;&lt;br /&gt;
echo "Counter: $counter";&lt;br /&gt;
$counter++;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$plugin = new MyPlugin;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$plugin-&amp;gt;add_test_hook();&lt;br /&gt;
$plugin-&amp;gt;add_test_hook();&lt;br /&gt;
$plugin-&amp;gt;add_test_hook();&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
do_action('test');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The code above will print *"Counter: 1"* even if &lt;code&gt;add_test_hook&lt;/code&gt; was called 3 times. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What I mean is that by using same hook, and same callback, and same priority WordPress _already_ add the hook only once so I believe that what this PR does is actually to add more consistence.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Of course, by defining closures in different files, or even just using a different priority will be enough to make them distinguable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
add_action('say_hi', function() { echo "Hello"; });&lt;br /&gt;
add_action('say_hi', function() { echo "World"; }, 11);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
do_action('say_hi');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Will print *"Hello World"* as expected.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
---&lt;br /&gt;
&lt;strong&gt;This Pull Request is for code review only. Please keep all other discussion in the Trac ticket. Do not merge this Pull Request. See &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/contribute/git/github-pull-requests-for-code-review/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;GitHub Pull Requests for Code Review&lt;/a&gt; in the Core Handbook for more details.&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&amp;lt;sup&amp;gt;1&amp;lt;sup&amp;gt; For "officially" I mean _for code to be written for core_.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42663 (Imagick support for stream wrappers) updated</title>
      
        <dc:creator>p00ya</dc:creator>

      <pubDate>Sun, 04 Oct 2020 14:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42663#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42663#comment:23/1601822452406262</guid>
      <description>&lt;p&gt;
Please take another look at &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/521"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/521&lt;/a&gt; (updated to use a custom stream wrapper instead of &lt;code&gt;file://&lt;/code&gt; URLs).  I borrowed some of calin's code.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51439-edit-form-comment.php.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sun, 04 Oct 2020 08:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439-edit-form-comment.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439-edit-form-comment.php.patch/1601799614482401</guid>
      <description>&lt;p&gt;
$comment &amp;amp; $action not defined edit-form-comment.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>51439.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sun, 04 Oct 2020 07:59:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439.patch/1601798368362861</guid>
      <description>&lt;p&gt;
Combile all chnages + $post_id missing to define on comment file.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>51439-ajax-actions.php.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sun, 04 Oct 2020 07:22:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439-ajax-actions.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439-ajax-actions.php.patch/1601796159426777</guid>
      <description>&lt;p&gt;
Added file patch another file - undefined variable
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) updated</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Sun, 04 Oct 2020 06:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442#comment:3/1601794744122113</guid>
      <description>&lt;p&gt;
Sorry, read "post" for "page" throughout.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) updated</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Sun, 04 Oct 2020 06:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442#comment:2/1601794701293016</guid>
      <description>&lt;p&gt;
But then it happened again. I worked on a page for a while, all was well, and then added a new embed block on the page - wham. Same as before: "Could not embed", JSON error etc. , and it was not Youtube's fault - I had the same block on the same page before, removed it and then decided I'd add it again in a different place on the page. Switched to Classic editor, no problem editing + saving the page there. Back to Gutenberg - same error.&lt;br /&gt;
Something is definitely wrong here.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51439 (Docs: Undocumented @global instances) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Oct 2020 06:28:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51439#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51439#comment:3/1601792919953112</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ravi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1601792917242000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51439-install.php.2.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sun, 04 Oct 2020 06:27:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439-install.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439-install.php.2.patch/1601792872629538</guid>
      <description>&lt;p&gt;
Added with full path for undefined varibale
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48778 (PDF Upload Bug in 5.3) updated</title>
      
        <dc:creator>togmission</dc:creator>

      <pubDate>Sun, 04 Oct 2020 05:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48778#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48778#comment:21/1601791130291799</guid>
      <description>&lt;p&gt;
"Unexpected response from the server. The file may have been uploaded successfully. Check in the Media Library or reload the page."\&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I was having the same error message with mp3 with the size of 10.6mb (lesser than that got uploaded). &lt;strong&gt;Finally deactivating WP Security Plugin solved the issue.&lt;/strong&gt; (I am using All in One WP Security)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Give a try!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51351 (Improve clarity of privacy error strings) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Oct 2020 03:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51351#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51351#comment:5/1601781699449439</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/49090" title="Privacy: Improve clarity of privacy error strings.
Primarily this ..."&gt;49090&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: Improve clarity of privacy error strings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Primarily this adds "user privacy" to the strings for privacy requests, so they are more easily distinguished from other system actions within logs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props garrett-eclipse, carike, birgire.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51351" title="#51351: enhancement: Improve clarity of privacy error strings (closed: fixed)"&gt;#51351&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [49090]: Privacy: Improve clarity of privacy error strings.  Primarily this ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Oct 2020 03:21:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/49090</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/49090/1601781698244141</guid>
      <description>&lt;p&gt;
Privacy: Improve clarity of privacy error strings.
&lt;/p&gt;
&lt;p&gt;
Primarily this adds "user privacy" to the strings for privacy requests, so they are more easily distinguished from other system actions within logs.
&lt;/p&gt;
&lt;p&gt;
Props garrett-eclipse, carike, birgire.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51351" title="#51351: enhancement: Improve clarity of privacy error strings (closed: fixed)"&gt;#51351&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33924 (sanitize_html_class valid characters) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 04 Oct 2020 02:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33924#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33924#comment:16/1601777972065587</guid>
      <description>&lt;p&gt;
From the discussion on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44988" title="#44988: defect (bug): The sanitize_html_class() is deceptive / &amp;#34;buggy&amp;#34; (closed: duplicate)"&gt;#44988&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@ayeshrajans pointed out the W3 spec does say that class names cannot start with a digit, single or double hyphens. &lt;a class="ext-link" href="https://www.w3.org/TR/CSS21/syndata.html#characters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/CSS21/syndata.html#characters&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@ChiefAlchemist also suggested an additional parameter for strict and permissive mode&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@davidwebca mentioned with libraries such as tailwind using characters outside of the permitted set, this has potential to become a bigger issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #33924,​44988 batch updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 04 Oct 2020 02:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33924%2C44988</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33924%2C44988/1601777669750786</guid>
      <description>duplicate: &lt;p&gt;
I missed this been opened a couple of years ago, ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33924" title="#33924: defect (bug): sanitize_html_class valid characters (new)"&gt;#33924&lt;/a&gt; exists previously and hit the roadblock mentioned above: that modifying how the classes are sanitized could cause backward compatibility breakages.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A similar suggestion was made at the time, using a second parameter to toggle between permissive and strict escaping.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as a duplicate so discussion can continue on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33924" title="#33924: defect (bug): sanitize_html_class valid characters (new)"&gt;#33924&lt;/a&gt; and focus on a single ticket. I'm sorry it's taken some time for this to happen.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44988 (The sanitize_html_class() is deceptive / "buggy") updated</title>
      
        <dc:creator>davidwebca</dc:creator>

      <pubDate>Sun, 04 Oct 2020 00:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44988#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44988#comment:7/1601772931923140</guid>
      <description>&lt;p&gt;
Hello! I came here searching about the escaping mecanism for classes added through the menu items in the admin. I found myself surprised to see colons being removed altogether. With the prevalence and popularity of tailwindcss.com, we should maybe reconsider what is allowed as a special character in the sanitize_html_class and it could be part of the same discussion you guys have been having for quite a while. Here's an additional link about the specificity of what is "allowed" in CSS. &lt;a class="ext-link" href="https://mathiasbynens.be/notes/css-escapes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://mathiasbynens.be/notes/css-escapes&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>