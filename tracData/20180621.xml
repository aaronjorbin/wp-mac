<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:5/1529620152988210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afragen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1529620151000356"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:4/1529619723397420</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:3/1529618791172486</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44429.diff attached to Ticket #44429</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44429/44429.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44429/44429.diff/1529618703586902</guid>
      <description>&lt;p&gt;
test for WP_CLI in wp_redirect() and exit early
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:04:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:2/1529618654953827</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This issue has occurred in a number of plugins.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/_serverhttp_host-is-undefined-when-access-site-via-wp-cli/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/_serverhttp_host-is-undefined-when-access-site-via-wp-cli/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/johngodley/redirection/issues/222"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/johngodley/redirection/issues/222&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/SiteGround/sg-cachepress/issues/38"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/SiteGround/sg-cachepress/issues/38&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) updated</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428#comment:4/1529618521597539</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) updated</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428#comment:3/1529618489433035</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44428#comment:2" title="Comment 2"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @sllimrovert - Thanks for the ticket and for the test!
&lt;/p&gt;
&lt;p&gt;
Have a look at &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43049" title="Taxonomy: Ensure that invalid term objects are discarded in ..."&gt;[43049]&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42691" title="#42691: defect (bug): WP_Term_Query get_terms generates invalid sql queries (closed: fixed)"&gt;#42691&lt;/a&gt; - it's likely that this is what fixed the bug in trunk.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that's likely what fixed it in trunk.  Will that be released on a 4.9.x release, or waiting until 5.0?
&lt;/p&gt;
&lt;p&gt;
No matter for me really, I used the &lt;code&gt;pre_get_posts&lt;/code&gt; filter to always set &lt;code&gt;$query-&amp;gt;query_vars['update_post_term_cache']&lt;/code&gt; to false for my use case.
&lt;/p&gt;
&lt;p&gt;
Feel free to close this if you feel that's appropriate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 21 Jun 2018 21:56:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428#comment:2/1529618167265317</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @sllimrovert - Thanks for the ticket and for the test!
&lt;/p&gt;
&lt;p&gt;
Have a look at &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43049" title="Taxonomy: Ensure that invalid term objects are discarded in ..."&gt;[43049]&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42691" title="#42691: defect (bug): WP_Term_Query get_terms generates invalid sql queries (closed: fixed)"&gt;#42691&lt;/a&gt; - it's likely that this is what fixed the bug in trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) closed</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 21 Jun 2018 21:06:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:86/1529615211768356</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43378" title="REST API: Support meta registration for specific object subtypes.
 ..."&gt;43378&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Support meta registration for specific object subtypes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduce an &lt;code&gt;object_subtype&lt;/code&gt; argument to the args array for &lt;code&gt;register_meta()&lt;/code&gt; which can be used to limit meta registration to a single subtype (e.g. a custom post type or taxonomy, vs all posts or taxonomies).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduce &lt;code&gt;register_post_meta()&lt;/code&gt; and &lt;code&gt;register_term_meta()&lt;/code&gt; wrapper methods for &lt;code&gt;register_meta&lt;/code&gt; to provide a convenient interface for the common case of registering meta for a specific taxonomy or post type. These methods work the way plugin developers have often expected &lt;code&gt;register_meta&lt;/code&gt; to function, and should be used in place of direct &lt;code&gt;register_meta&lt;/code&gt; where possible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props flixos90, tharsheblows, spacedmonkey.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38323" title="#38323: enhancement: Reconsider $object_subtype handling in `register_meta()` (closed: fixed)"&gt;#38323&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43378]: REST API: Support meta registration for specific object subtypes.  ...</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 21 Jun 2018 21:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43378/1529615210637720</guid>
      <description>&lt;p&gt;
REST API: Support meta registration for specific object subtypes.
&lt;/p&gt;
&lt;p&gt;
Introduce an &lt;code&gt;object_subtype&lt;/code&gt; argument to the args array for &lt;code&gt;register_meta()&lt;/code&gt; which can be used to limit meta registration to a single subtype (e.g. a custom post type or taxonomy, vs all posts or taxonomies).
&lt;/p&gt;
&lt;p&gt;
Introduce &lt;code&gt;register_post_meta()&lt;/code&gt; and &lt;code&gt;register_term_meta()&lt;/code&gt; wrapper methods for &lt;code&gt;register_meta&lt;/code&gt; to provide a convenient interface for the common case of registering meta for a specific taxonomy or post type. These methods work the way plugin developers have often expected &lt;code&gt;register_meta&lt;/code&gt; to function, and should be used in place of direct &lt;code&gt;register_meta&lt;/code&gt; where possible.
&lt;/p&gt;
&lt;p&gt;
Props flixos90, tharsheblows, spacedmonkey.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38323" title="#38323: enhancement: Reconsider $object_subtype handling in `register_meta()` (closed: fixed)"&gt;#38323&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 21:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:1/1529615044047335</guid>
      <description>&lt;p&gt;
There is likely an error in &lt;a href="https://core.trac.wordpress.org/home/rsed43dqsw/public_html/wp-content/plugins/force-https-littlebizzy/core/redirect.php:68"&gt;https://core.trac.wordpress.org/home/rsed43dqsw/public_html/wp-content/plugins/force-https-littlebizzy/core/redirect.php:68&lt;/a&gt; that needs to return when using in WP-CLI.
&lt;/p&gt;
&lt;p&gt;
The issue is &lt;code&gt;wp_redirect()&lt;/code&gt; doesn’t play well with HTTPS and WP-CLI and you will need to modify the code to exit early and not perform the &lt;code&gt;wp_redirect()&lt;/code&gt; call when using in WP-CLI.
&lt;/p&gt;
&lt;p&gt;
Adding something like the following at the beginning of that &lt;code&gt;redirect()&lt;/code&gt; function should fix it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( defined( 'WP_CLI' ) &amp;amp;&amp;amp; WP_CLI ) {
    return;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) created</title>
      
        <dc:creator>ecahost7</dc:creator>

      <pubDate>Thu, 21 Jun 2018 20:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429/1529613811907255</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
My wordpress wouldn't update and I see errors below,
I also trying to update my site URL to include www to it but I can't change it due update failure.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: The system could not load some of this WordPress installation’s data. Certain sections of this interface may not function correctly.
(XID nw85up) The system failed to run the wp-cli batch commands with the following issues: Warning: Some code is trying to do a URL redirect.
Backtrace:
#0 WP_CLI\Utils\wp_redirect_handler(https://)
#1 call_user_func_array(WP_CLI\Utils\wp_redirect_handler, Array ([0] =&amp;gt; https://)) called at [/home/rsed43dqsw/public_html/wp-includes/class-wp-hook.php:288]
#2 WP_Hook-&amp;gt;apply_filters(https://, Array ([0] =&amp;gt; https://,[1] =&amp;gt; 301)) called at [/home/rsed43dqsw/public_html/wp-includes/plugin.php:203]
#3 apply_filters(wp_redirect, https://, 301) called at [/home/rsed43dqsw/public_html/wp-includes/pluggable.php:1196]
#4 wp_redirect(https://, 301) called at [/home/rsed43dqsw/public_html/wp-content/plugins/force-https-littlebizzy/core/redirect.php:91]
#5 FHTTPS_Core_Redirect-&amp;gt;redirect() called at [/home/rsed43dqsw/public_html/wp-content/plugins/force-https-littlebizzy/core/redirect.php:68]
#6 FHTTPS_Core_Redirect-&amp;gt;start()
#7 call_user_func_array(Array ([0] =&amp;gt; FHTTPS_Core_Redirect Object (),[1] =&amp;gt; start), Array ([0] =&amp;gt; )) called at [/home/rsed43dqsw/public_html/wp-includes/class-wp-hook.php:286]
#8 WP_Hook-&amp;gt;apply_filters(, Array ([0] =&amp;gt; )) called at [/home/rsed43dqsw/public_html/wp-includes/class-wp-hook.php:310]
#9 WP_Hook-&amp;gt;do_action(Array ([0] =&amp;gt; )) called at [/home/rsed43dqsw/public_html/wp-includes/plugin.php:453]
#10 do_action(plugins_loaded) called at [/home/rsed43dqsw/public_html/wp-settings.php:327]
#11 require(/home/rsed43dqsw/public_html/wp-settings.php) called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/WP_CLI/Runner.php:1174]
#12 WP_CLI\Runner-&amp;gt;load_wordpress() called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/WP_CLI/Runner.php:1100]
#13 WP_CLI\Runner-&amp;gt;start() called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/WP_CLI/Bootstrap/LaunchRunner.php:23]
#14 WP_CLI\Bootstrap\LaunchRunner-&amp;gt;process(WP_CLI\Bootstrap\BootstrapState Object ([] =&amp;gt; Array ())) called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/bootstrap.php:75]
#15 WP_CLI\bootstrap() called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/wp-cli.php:23]
#16 include(phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/wp-cli.php) called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/boot-phar.php:8]
#17 include(phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/boot-phar.php) called at [/usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar:4]
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44416 (`compact()` will throw notice for undefined variables in PHP 7.3) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 21 Jun 2018 20:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44416#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44416#comment:3/1529613291556349</guid>
      <description>&lt;p&gt;
Dove into &lt;code&gt;wp_insert_post()&lt;/code&gt;. Notices being thrown for the following variables not existing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$filter&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$context&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$ID&lt;/code&gt; (&lt;code&gt;$post_ID&lt;/code&gt; is used instead)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$file&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$post_mime_type&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$category&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$comment_count&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$ancestors&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$page_template&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$tags_input&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The first &lt;code&gt;compact()&lt;/code&gt; call is causing all of the issues. This is because it is passing &lt;code&gt;array_keys( $postarr )&lt;/code&gt; to the call, so all indexes passed to the function may not be represented in variable form. The second &lt;code&gt;compact()&lt;/code&gt; call is not causing any issues because those variable names are manually defined in the &lt;code&gt;compact()&lt;/code&gt; call and all exist.
&lt;/p&gt;
&lt;p&gt;
The result of the first &lt;code&gt;compact()&lt;/code&gt; call is passed to the &lt;code&gt;wp_insert_post_parent&lt;/code&gt; filter, which attempts to prevent hierarchy loops. Core has one function that hooks into this filter, but it does not even use the result of the &lt;code&gt;compact()&lt;/code&gt; call.
&lt;/p&gt;
&lt;p&gt;
I think there are a few options here.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Make sure all documented &lt;code&gt;$postarr&lt;/code&gt; arguments get a defined variable&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This would fix the notice for all core values, but it would not fix issues where a plugin or theme is passing a custom value to &lt;code&gt;$postarr&lt;/code&gt;. While some variables can just be moved above this first call (&lt;code&gt;$post_mime_type&lt;/code&gt;, for example), it would also require defining new variables only for the purpose of avoiding a PHP notice, which makes me sway away from this option.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Manually define the variables to compact in the third argument of &lt;code&gt;wp_insert_post_parent&lt;/code&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This would ensure that PHP notices are never thrown (similar to the second call to &lt;code&gt;compact()&lt;/code&gt; further down). But, it could cause a backwards compatibility issue. A value being used by a filter could start to be excluded. This is not a very well known or used filter, so communication in a Make post ahead of time could help prevent issues with this change. The filter could also be deprecated in favor of a new one. But this would not fix the notices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14356 (Better string for onbeforeunload event dialog) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 21 Jun 2018 20:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14356#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14356#comment:14/1529611312722926</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) updated</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 19:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428#comment:1/1529610533925165</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>test-object-cache-bug.php attached to Ticket #44428</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 19:30:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44428/test-object-cache-bug.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44428/test-object-cache-bug.php/1529609438687428</guid>
      <description>&lt;p&gt;
Unit test for issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) created</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 19:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428/1529609403702071</guid>
      <description>&lt;p&gt;
I have a situation where I want to limit access to terms based on some meta about the current user.  There's a filter ( 'get_terms_args' ) for when I call &lt;code&gt;get_terms()&lt;/code&gt; that I can use to prevent that from returning the terms I don't want to let them have.  However, I also want to prevent when calling &lt;code&gt;get_term&lt;/code&gt; on a specific term.
&lt;/p&gt;
&lt;p&gt;
There's a filter in there called &lt;code&gt;'get_term'&lt;/code&gt; that I can use.  I return &lt;code&gt;null&lt;/code&gt; when the user doesn't have access to it.
&lt;/p&gt;
&lt;p&gt;
With that filter in place, if I call &lt;code&gt;get_posts()&lt;/code&gt;, I get a fatal error within the &lt;code&gt;update_object_term_cache()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
I've attached a test case which shows the error.
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) FeedsByTag\test\TermObjectCache::testObjectTermCache
Trying to get property of non-object
/Users/trevor/Sites/dev/wordpress-develop/src/wp-includes/taxonomy.php:3183
&lt;/pre&gt;&lt;p&gt;
The bug exists in 4.9.6.
&lt;/p&gt;
&lt;p&gt;
It does NOT occur in &lt;code&gt;master&lt;/code&gt;, so something has fixed this for the 5.0 release.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) updated</title>
      
        <dc:creator>tabrisrp</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427#comment:1/1529603901885398</guid>
      <description>&lt;p&gt;
As the developer of a performance optimization plugin, I definitely relate with points 3 and 4, which are recurring issues for both our development &amp;amp; support teams.
&lt;/p&gt;
&lt;p&gt;
Having a standardized lazy-loading API in core would greatly reduce the conflicts we encounter, and reduce our need to consistently &amp;amp; accurately parse the HTML content of pages to detect and rewrite lazy-loadable media assets.
&lt;/p&gt;
&lt;p&gt;
I believe it would also help solve difficult situations like lazy-loading background images, a common user-requested feature, which is hard to get around without a core standard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35214 (Custom Comment Types) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:55:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35214#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35214#comment:20/1529603757694382</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by tharsheblows. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529603757000134"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:9/1529603200820495</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529603199000760"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:85/1529603181689113</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529603180000625"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44387 (Add support for site meta in `register_meta()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44387#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44387#comment:1/1529603123214827</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529603122000064"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:44:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:8/1529603099046594</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) created</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427/1529602301730733</guid>
      <description>&lt;h2 id="Synopsis"&gt;Synopsis&lt;/h2&gt;
&lt;p&gt;
Lazy-loading of media and other elements (iframes, embeds, etc) is a performance best practice. Currently, various plugins including Jetpack, and themes including WP Rig ship lazy loading features to improve performance. These solutions rely on conditionally rewriting the HTML for images and other media as it is being loaded from core which is sub-optimal.
&lt;/p&gt;
&lt;h2 id="Proposal"&gt;Proposal&lt;/h2&gt;
&lt;p&gt;
Introduce a lazy-loading API in core which lazy-loads media and other elements out of the box based on various conditions, with an opt-out feature in the Customizer. This takes the onus of having extensive knowledge of performance optimization and how to add lazy-loading to your site off the shoulders of the end-user and gives developers control over how and when content is lazy-loaded.
&lt;/p&gt;
&lt;p&gt;
The lazy-loading API should allow theme- and plugin developers detailed control over how lazy-loading works. As an example, the AMP plugin would disable core lazy-loading and replace it with its own custom method. Another example: A theme developer may choose to immediately load the featured image of the first post in an index or archive template while all other images are lazy-loaded.
&lt;/p&gt;
&lt;h2 id="Whythisisntpluginterritory"&gt;Why this isn't plugin territory&lt;/h2&gt;
&lt;p&gt;
Lazy-loading is currently considered plugin territory. I disagree for a couple of reasons:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Lazy-loading is performance best-practice: &lt;a class="ext-link" href="https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;WordPress should not put the onus on site-owners to have in-depth knowledge of performance best-practices and how to meet them.
&lt;/li&gt;&lt;li&gt;With no consistent API, plugins and themes may introduce different and conflicting solutions to the same problem which in turn causes unexpected behavior for the end-user.
&lt;/li&gt;&lt;li&gt;Lazy-loading introduced at plugin/theme level forces aggressive rewriting of content which would be more consistently performed at core.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44238 (Add protected param to register meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:27:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44238#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44238#comment:5/1529602037757721</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529602037000160"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:26:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:3/1529601988630551</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529601987000593"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44426 (Privacy policy for a plugin isn't saved when a policy page isn't created) created</title>
      
        <dc:creator>PerS</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:12:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44426/1529601123341054</guid>
      <description>&lt;p&gt;
If a policy page isn't created and you call &lt;code&gt;wp_add_privacy_policy_content('plugin name', 'privacy content')&lt;/code&gt; from a plugin, the privacy content isn't saved in the &lt;code&gt;_wp_suggested_privacy_policy_content&lt;/code&gt; cache.
&lt;/p&gt;
&lt;p&gt;
This might be by design, but it would be very nice to be able to grab all privacy policies for activated plugins even if you don't (want to) use the WordPress policy page, especially on a multisite.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44425 (Add WP_CACHE_KEY_SALT to WordPress.org secret-key service) created</title>
      
        <dc:creator>paulschreiber</dc:creator>

      <pubDate>Thu, 21 Jun 2018 16:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44425</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44425/1529599924403814</guid>
      <description>&lt;p&gt;
Currently, the WordPress.org secret-key service
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://api.wordpress.org/secret-key/1.1/salt/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://api.wordpress.org/secret-key/1.1/salt/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
generates &lt;code&gt;AUTH_KEY&lt;/code&gt;, &lt;code&gt;SECURE_AUTH_KEY&lt;/code&gt;, &lt;code&gt;LOGGED_IN_KEY&lt;/code&gt;, &lt;code&gt;NONCE_KEY&lt;/code&gt;, &lt;code&gt;AUTH_SALT&lt;/code&gt;, &lt;code&gt;SECURE_AUTH_SALT&lt;/code&gt;, &lt;code&gt;LOGGED_IN_SALT&lt;/code&gt; and &lt;code&gt;NONCE_SALT&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It would be helpful if it also generated &lt;code&gt;WP_CACHE_KEY_SALT&lt;/code&gt;. That way, people who install the object-cache.php drop-in would be less likely to experience unexpected behaviour.
&lt;/p&gt;
&lt;p&gt;
See also:
&lt;a class="ext-link" href="https://github.com/Automattic/wp-memcached/issues/31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/wp-memcached/issues/31&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44424.diff attached to Ticket #44424</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:44:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44424/44424.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44424/44424.diff/1529595878562223</guid>
      <description>&lt;p&gt;
Proposed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #40951,​44417 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40951%2C44417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40951%2C44417/1529595854824404</guid>
      <description>duplicate: &lt;p&gt;
You can add that filter on your own install if you like, but in core the goal is consistency between the Text widgets and the post editor. The solutions were debated extensively in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;#40951&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44424 (PHPDoc comments and @return tags missing at many places) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:44:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44424</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44424/1529595843584318</guid>
      <description>&lt;p&gt;
Function/methods and property declarations are missing PHPDoc comment and &lt;code&gt;@return&lt;/code&gt; tags at many places of &lt;code&gt;src/wp-includes/pomo/translations.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Proposed patch added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44233 (Add missing unit tests for exporting personal data by username or ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44233#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44233#comment:6/1529594680250668</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44233/44233.diff" title="Attachment '44233.diff' in Ticket #44233"&gt;44233.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44233/44233.diff" title="Download"&gt;​&lt;/a&gt; combines the uncommitted tests from the three patches into one and contains the following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Added a test in &lt;code&gt;wpPrivacyDeleteOldExportFiles.php&lt;/code&gt; that tests file deletion when the expiration time period is filtered.
&lt;/li&gt;&lt;li&gt;Changed &lt;code&gt;@since&lt;/code&gt; tag to &lt;code&gt;4.9.7&lt;/code&gt; in &lt;code&gt;Tests_Privacy_WpPrivacyProcessPersonalDataExportPage&lt;/code&gt; and &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile&lt;/code&gt; classes. Not sure if this &lt;code&gt;@since&lt;/code&gt; should match the function or test introduction version (thinking the test).
&lt;/li&gt;&lt;li&gt;Removed variable declarations for &lt;code&gt;$filtered_response&lt;/code&gt; in test methods that did not utilize the variable in &lt;code&gt;wpPrivacyProcessPersonalDataExportPage&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Move &lt;code&gt;register_custom_personal_data_exporters()&lt;/code&gt; closer to the top of the class &lt;code&gt;Tests_Privacy_WpPrivacyProcessPersonalDataExportPage&lt;/code&gt; class where it is used.
&lt;/li&gt;&lt;li&gt;Add a skip condition to &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile-&amp;gt;setUp()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Replace &lt;code&gt;@unlink()&lt;/code&gt; call with a &lt;code&gt;wp_delete_file()&lt;/code&gt; call.
&lt;/li&gt;&lt;li&gt;Move &lt;code&gt;$exception_was_thrown&lt;/code&gt; variables in each test method within the &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile&lt;/code&gt; class to a class property to avoid repeating in every method.
&lt;/li&gt;&lt;li&gt;Added checks that the export file was actually created for success scenario test methods in the &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile&lt;/code&gt; class.
&lt;/li&gt;&lt;li&gt;Log the created export file on the &lt;code&gt;&lt;/code&gt; action in a class property within the &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile&lt;/code&gt; class and use it to test that the file exists after calling the function.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I set up a &lt;a class="ext-link" href="https://travis-ci.org/desrosj/wordpress-develop/builds/395055138"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;branch on my `wordpress-develop` fork to show the tests passing&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Remaining items:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There are some PHP 5.2 failures that I am looking into.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;test_wp_privacy_generate_personal_data_export_file_detects_cannot_create_index()&lt;/code&gt; and &lt;code&gt;test_wp_privacy_generate_personal_data_export_file_detects_cannot_write_html()&lt;/code&gt; test methods are failing locally for me but passing on Travis. I think this is permissions related. Going to look into a more system independent way to set up these test methods.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44233.diff attached to Ticket #44233</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44233/44233.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44233/44233.diff/1529594378764016</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44422 (Missing @return tag and wrong parameter reference in function/method ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:14:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44422#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44422#comment:2/1529594063740850</guid>
      <description>&lt;p&gt;
I have uploaded modified patch. Please let me know if this looks OK.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44422#comment:1" title="Comment 1"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you remove the spacing between the types please @subrataemfluence i.e. &lt;code&gt;string|false&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44422-2.diff attached to Ticket #44422</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44422/44422-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44422/44422-2.diff/1529593999327787</guid>
      <description>&lt;p&gt;
Updated patch with extra spaces removed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:18/1529593679798322</guid>
      <description>&lt;p&gt;
&lt;code&gt;rm -rf node_nodules &amp;amp;&amp;amp; npm cache clear -force &amp;amp;&amp;amp; npm install&lt;/code&gt; didn't give me a &lt;code&gt;sha512&lt;/code&gt;. I haven't dug into it beyond that though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23165 (Admin validation errors on form nonce element IDs (_wpnonce)) updated</title>
      
        <dc:creator>aeboi80</dc:creator>

      <pubDate>Thu, 21 Jun 2018 14:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23165#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23165#comment:13/1529592053891449</guid>
      <description>&lt;p&gt;
I am encountering this as well. It appears there has not been an official resolution to this in many years. Has any further thought be given to this in the past 6 months?
&lt;/p&gt;
&lt;p&gt;
WP: 4.9.6
&lt;/p&gt;
&lt;p&gt;
WooCommerce: 3.4
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.dropbox.com/s/ob5n1e3cqxs3zxd/2018-06-21%20at%2010.38%20AM.jpeg"&gt;&lt;img src="https://www.dropbox.com/s/ob5n1e3cqxs3zxd/2018-06-21%20at%2010.38%20AM.jpeg" alt="https://www.dropbox.com/s/ob5n1e3cqxs3zxd/2018-06-21%20at%2010.38%20AM.jpeg" crossorigin="anonymous" title="https://www.dropbox.com/s/ob5n1e3cqxs3zxd/2018-06-21%20at%2010.38%20AM.jpeg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 21 Jun 2018 13:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:91/1529588437888138</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:90" title="Comment 90"&gt;aduth&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...I'm confused by the proposed flow where an error is returned from the endpoint (when deleting identical autosaves).
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Do we really need to return an error? Can't we just treat it as though it were successful even if in-fact the server is ensuring there are no redundant revisions?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yeah, generally the autosave logic is pretty complex. I'd be happy if we can streamline it a bit (for the API), if possible.
&lt;/p&gt;
&lt;p&gt;
Deleting an autosave revision when the content is identical to the post_content is done for two reasons:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It ensures there aren't any revisions with no diff/without any changes.
&lt;/li&gt;&lt;li&gt;It reduces the number of revisions.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Don't think the second reason matters much, but the first is confusing when viewing revisions, so this behaviour makes sense.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Because we delete the revision and then return immediately with an error, isn't it true that we're not simply not storing redundant revision, we're in fact destroying a revision without having anything new to serve in its place?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes, technically there is no reason to delete the old autosave revision. Even then, what should be returned for such requests? Seems we have to return the "old" autosave ID? Then the autosave revision content will be different from the submitted content.
&lt;/p&gt;
&lt;p&gt;
Another option is to standardize on always returning the post_ID of the actual post being edited. Currently this is the case for drafts (same user) when the post is updated, but the returned ID is the autosave revision ID when draft for different user or published post. Thinking it will probably be best to always return the "real" post_ID for all autosave requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 21 Jun 2018 13:23:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:7/1529587435338431</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44230#comment:6" title="Comment 6"&gt;psycleuk&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Following up on this again, as there has been no response to concerns about the data file being public and only obscured from general access.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's say you know the user's email that you are after. You'd still have to find the time-window that the zip is available + the hash.
&lt;/p&gt;
&lt;p&gt;
The only way to have everything is to actually have access to the user's e-mail. And then there's seriously nothing 'we' can do about it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After further review of the process, i believe there is another flaw. A user does not need to log into the site the confirm the request, all they need to do it click the link in the email. The process flow assumes that the person clicking the link in the email will always be the person who triggered the request, but if the users email account is compromised it may not be the case.
&lt;/p&gt;
&lt;p&gt;
The current process flow would allow as user to request data from a WordPress site without ever logging into the site to confirm who they are, all they would need access to is the email with the confirmation link.
&lt;/p&gt;
&lt;p&gt;
Given that the data being requested is about a user of the site and will therefore have an account on the site, surely the safest process to ensure data security is to have the user log into their account at each step to confirm they are the correct user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A user does not need to log in to a website because he might not have an account. For example comments don't require user registration, so there's no need for a login to retrieve that data, you just need the e-mail address that you made the comments with. There are plenty of use-cases that will never require actual 'registration' or even actual 'access' to an application/website that collects data.
&lt;/p&gt;
&lt;p&gt;
If a users e-mail is compromised as you say, then the attacker would probably have access on all of the subjects data already. The users e-mail security isn't our problem I believe nor we can do anything about it. On the other hand most companies that I know handling important data, do require extra validation measures i.e. by phone as well first before even they reach the point of e-mail validation (if they don't want to skip it) etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42785 (Change default of `show_in_rest` in register_post_type and ...) updated</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Thu, 21 Jun 2018 13:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42785#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42785#comment:35/1529586413599243</guid>
      <description>&lt;p&gt;
I was looking at the latest diff file and I have one point of consideration. I discovered the following being used twice, why not wrapping this a function, make it reusable?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$show_in_rest_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'public'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'publicly_queryable'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$show_in_rest_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Another thing to consider is assigning the if-statement directly to the variable:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$show_in_rest_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'public'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'publicly_queryable'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44422 (Missing @return tag and wrong parameter reference in function/method ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 21 Jun 2018 13:02:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44422#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44422#comment:1/1529586145335570</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you remove the spacing between the types please @subrataemfluence i.e. &lt;code&gt;string|false&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44383 (Deprecate the media_buttons_context filter with apply_filters_deprecated()) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 21 Jun 2018 12:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44383#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44383#comment:10/1529585860370480</guid>
      <description>&lt;p&gt;
Awesome to hear you've decided to dive into WordPress development.
&lt;/p&gt;
&lt;p&gt;
There are also many ways to help with tickets; like patching, testing, refreshing, documentation, designing, etc.
&lt;/p&gt;
&lt;p&gt;
I'm sure creating themes and plugins is a good way to better understand WordPress mechanics.
&lt;/p&gt;
&lt;p&gt;
Also helping out on support forums, can enhance debugging skills.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Core Contributor Handbook&lt;/a&gt; is also very helpful, regarding core contributions.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Maybe this can help how to approach the PHP errors/notices:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Debugging_in_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Debugging_in_WordPress&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are also plugins, like &lt;em&gt;Query Monitor&lt;/em&gt;, that display it in an easy to read manner.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
I have already created a another ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44406" title="#44406: defect (bug): Mismatch in the default value of the optional replacement argument in ... (new)"&gt;#44406&lt;/a&gt; regarding the input mismatch.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
It seems that using &lt;code&gt;'media_buttons'&lt;/code&gt; for the replacement input, is currently more suitable than using &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@zsiderov maybe you could checkout those outputs, so we have them documented here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44421 (Missing @return tag in function/method PHPDoc comment) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 21 Jun 2018 12:57:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44421#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44421#comment:2/1529585840726005</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>psycleuk</dc:creator>

      <pubDate>Thu, 21 Jun 2018 12:20:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:6/1529583632910339</guid>
      <description>&lt;p&gt;
Following up on this again, as there has been no response to concerns about the data file being public and only obscured from general access.
&lt;/p&gt;
&lt;p&gt;
After further review of the process, i believe there is another flaw. A user does not need to log into the site the confirm the request, all they need to do it click the link in the email. The process flow assumes that the person clicking the link in the email will always be the person who triggered the request, but if the users email account is compromised it may not be the case.
&lt;/p&gt;
&lt;p&gt;
The current process flow would allow as user to request data from a WordPress site without ever logging into the site to confirm who they are, all they would need access to is the email with the confirmation link.
&lt;/p&gt;
&lt;p&gt;
Given that the data being requested is about a user of the site and will therefore have an account on the site, surely the safest process to ensure data security is to have the user log into their account at each step to confirm they are the correct user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44423 (Unicode characters in get string breaks pagination) created</title>
      
        <dc:creator>jessepearson</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44423</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44423/1529582360040462</guid>
      <description>&lt;p&gt;
This was found when working with this plugin: [Ajax-Enabled Enhanced Layered Navigation](&lt;a class="ext-link" href="https://woocommerce.com/products/ajax-layered-navigation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://woocommerce.com/products/ajax-layered-navigation/&lt;/a&gt;) .
&lt;/p&gt;
&lt;p&gt;
If there are unicode characters used in a parameter in a get string, then it breaks pagination by not allowing access to page 2+.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Set your blog posts to display 1 per page
&lt;/li&gt;&lt;li&gt;View blog
&lt;/li&gt;&lt;li&gt;Append this to the url in address bar and hit enter: &lt;code&gt;?dddd%D7%99%D7%A6%D7%A8%D7%9F=metabo&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Once page reloads, try to go to page 2
&lt;/li&gt;&lt;li&gt;You should receive a too many redirects error
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>44422.diff attached to Ticket #44422</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44422/44422.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44422/44422.diff/1529581043586384</guid>
      <description>&lt;p&gt;
Proposed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44422 (Missing @return tag and wrong parameter reference in function/method ...) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44422</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44422/1529580913095506</guid>
      <description>&lt;p&gt;
File name: &lt;code&gt;src/wp-includes/pomo/streams.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Wrong parameter name reference
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
* ...
* @param integer count How many elements should be read
* ...
*/&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;readint32array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Missing &lt;code&gt;@return&lt;/code&gt; tag.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
* @param int $bytes
*/&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$bytes&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;fread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;_f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$bytes&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44421 (Missing @return tag in function/method PHPDoc comment) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44421#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44421#comment:1/1529579298901779</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44421.diff attached to Ticket #44421</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:06:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44421/44421.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44421/44421.diff/1529579180186337</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44421 (Missing @return tag in function/method PHPDoc comment) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44421</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44421/1529579171687079</guid>
      <description>&lt;p&gt;
&lt;code&gt;@return&lt;/code&gt; tag is missing in function/method PHPDoc comment.
&lt;/p&gt;
&lt;pre class="wiki"&gt;File: src/wp-includes/pomo/mo.php
&lt;/pre&gt;&lt;p&gt;
Functions that missing &lt;code&gt;@return&lt;/code&gt; tag are:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;import_from_file&lt;/code&gt;, &lt;code&gt;&amp;amp;make_entry&lt;/code&gt;, &lt;code&gt;import_from_reader&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Proposed patch uploaded.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44420 (Missing doc in property declaration) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 21 Jun 2018 10:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44420#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44420#comment:2/1529577394393450</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44420 (Missing doc in property declaration) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 10:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44420#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44420#comment:1/1529577160296709</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44410" title="#44410: defect (bug): Properties in class missing type definition and description in DOC comments (new)"&gt;#44410&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44411" title="#44411: enhancement: Add property doc in child class (new)"&gt;#44411&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44420.diff attached to Ticket #44420</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 10:31:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44420/44420.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44420/44420.diff/1529577083271045</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44420 (Missing doc in property declaration) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 10:31:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44420</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44420/1529577070234228</guid>
      <description>&lt;p&gt;
No public property in class &lt;code&gt;class-wp-widget-form-customize-control.php&lt;/code&gt; is associated with inline documentation.
&lt;/p&gt;
&lt;pre class="wiki"&gt;File: src/wp-includes/customize/class-wp-widget-form-customize-control.php
&lt;/pre&gt;&lt;p&gt;
Proposed patch uploaded.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44417 (Text widget breaks code sometimes, and it's inconsistent) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Thu, 21 Jun 2018 08:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44417#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44417#comment:2/1529568926439744</guid>
      <description>&lt;p&gt;
That works there, but still many people are using text widget system.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;remove_filter('widget_text_content', 'wptexturize');
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
makes it not output the weird ampersand inconsistently in the one example but not the other, so the bug is in that function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35667 (Maximum execution time error in WP_Text_Diff_Renderer_Table) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35667#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35667#comment:15/1529563079782204</guid>
      <description>&lt;p&gt;
I've run into this on some other posts, so I did some performance work on it, in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35667/35667.4.diff" title="Attachment '35667.4.diff' in Ticket #35667"&gt;35667.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35667/35667.4.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
As has been noted on this ticket, &lt;code&gt;compute_string_distance()&lt;/code&gt; is slow, which is caused by a combination of the &lt;code&gt;count_chars()&lt;/code&gt; calls (mostly on very long lines), and the difference calculation, for all lines. A simple cache of these values reduces the total time spent in &lt;code&gt;compute_string_distance()&lt;/code&gt; by 50%, more if there are any repeated lines in either of the posts.
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;md5()&lt;/code&gt; to generate the cache keys gives us fixed length keys, which causes future lookups to be much faster, and memory usage to be lower, provided the average line length is &amp;lt; 32 chars.
&lt;/p&gt;
&lt;p&gt;
The second slow part is in &lt;code&gt;interleave_changed_lines()&lt;/code&gt;, when adding blank lines for padding. &lt;code&gt;array_splice()&lt;/code&gt; is a super expensive function call, calling it in a loop causes a significant slowdown. Instead, we can call it once with an array of blank lines to insert.
&lt;/p&gt;
&lt;p&gt;
Running on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35667/revision1.txt" title="Attachment 'revision1.txt' in Ticket #35667"&gt;revision1.txt&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35667/revision1.txt" title="Download"&gt;​&lt;/a&gt; / &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35667/revision1.txt" title="Attachment 'revision1.txt' in Ticket #35667"&gt;revision1.txt&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35667/revision1.txt" title="Download"&gt;​&lt;/a&gt;, it reduces a call to &lt;code&gt;wp_text_diff()&lt;/code&gt; from 1 second to 0.1 second. It does cause an increase in memory usage, approximately 3MB for this test case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35667.4.diff attached to Ticket #35667</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35667/35667.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35667/35667.4.diff/1529562901590774</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44411.class-wp-customize-upload-control.diff attached to Ticket #44411</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:18:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44411/44411.class-wp-customize-upload-control.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44411/44411.class-wp-customize-upload-control.diff/1529561891469658</guid>
      <description>&lt;p&gt;
Proposed patch for class-wp-customize-upload-control.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>44411.class-wp-customize-image-control.diff attached to Ticket #44411</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:17:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44411/44411.class-wp-customize-image-control.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44411/44411.class-wp-customize-image-control.diff/1529561869059369</guid>
      <description>&lt;p&gt;
Proposed patch for class-wp-customize-image-control.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35667.3.diff attached to Ticket #35667</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35667/35667.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35667/35667.3.diff/1529561237865653</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35667.2.diff attached to Ticket #35667</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:04:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35667/35667.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35667/35667.2.diff/1529561057104430</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44410-4.diff attached to Ticket #44410</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 05:46:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44410/44410-4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44410/44410-4.diff/1529559962752198</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 05:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410#comment:6/1529559946252690</guid>
      <description>&lt;p&gt;
Silly mistake with &lt;code&gt;@since&lt;/code&gt; version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44407 (Please add page_attributes_meta_box_parent action to meta-boxes.php) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44407#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44407#comment:2/1529557008787831</guid>
      <description>&lt;p&gt;
I wanted to inject a grandparent selector in that position, I relied heavily on ajax for the logic so simply injected it via jQuery instead. With that though there was slim pickings for targetting so ended up having to traverse up from &lt;code&gt;$('label.post-attributes-label[for="parent_id"])&lt;/code&gt; and created &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44408" title="#44408: enhancement: Add classes to .post-attributes-label-wrapper paragraphs to make them ... (new)"&gt;#44408&lt;/a&gt; to address that and make it easier to target/manipulate the individual attributes via css/js.&lt;br /&gt;
So I'm able to jQuery what I needed for this specific ticket can be minor if anything&lt;br /&gt;
Thank you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44419 (Custom classes and markup for pagination) created</title>
      
        <dc:creator>sami.keijonen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44419</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44419/1529556954830523</guid>
      <description>&lt;p&gt;
In most cases we can modify outputted classes and markup, so that we can have naming convention we want. &lt;a class="ext-link" href="https://webdesign.tutsplus.com/tutorials/quick-tip-bem-naming-and-wordpress-filters-for-navigation--cms-31268?_ga=2.172652963.1871067249.1529556196-1741110366.1504949040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Navigation is a good example&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
But using &lt;code&gt;the_posts_pagination()&lt;/code&gt; function there are no filters to modify output. For example this kind of markup and classes should be possible but I think it's not at the moment:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;nav class="pagination pagination--posts" role="navigation"&amp;gt;
&amp;lt;h2 class="pagination__title screen-reader-text"&amp;gt;Posts Navigation&amp;lt;/h2&amp;gt;
    &amp;lt;ul class="pagination__items"&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--current"&amp;gt;&amp;lt;span aria-current="page" class="page-numbers current"&amp;gt;Page 1&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--number"&amp;gt;&amp;lt;a class="page-numbers" href="http://foxland-products.test/blog/page/2/"&amp;gt;Page 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--dots"&amp;gt;&amp;lt;span class="page-numbers dots"&amp;gt;…&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--number"&amp;gt;&amp;lt;a class="page-numbers" href="http://foxland-products.test/blog/page/5/"&amp;gt;Page 5&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--next"&amp;gt;&amp;lt;a class="next page-numbers" href="http://foxland-products.test/blog/page/2/"&amp;gt;Next page →&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/pre&gt;&lt;p&gt;
To sum it up:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can't add custom classes.
&lt;/li&gt;&lt;li&gt;There is no way to add wrapping &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;I get lost when trying to figure out Singular-post, posts and comment pagination.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
With that said I'm sure there is a way to add all these things in backwards compatible way but I need to look the code first before I can suggest something.
&lt;/p&gt;
&lt;p&gt;
At first look pagination functions seems messy:)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44410-3.diff attached to Ticket #44410</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44410/44410-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44410/44410-3.diff/1529556639436065</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410#comment:5/1529556626852257</guid>
      <description>&lt;p&gt;
Thank you @westonruter ! I have uploaded the modified patch. Hope this is OK now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Fix fs_unavailable error.png attached to Ticket #44418</title>
      
        <dc:creator>ecomevo</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44418/Fix%20fs_unavailable%20error.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44418/Fix%20fs_unavailable%20error.png/1529554266763901</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44418 (fs_unavailable while auto-updating plugins) created</title>
      
        <dc:creator>ecomevo</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:10:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44418</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44418/1529554226415116</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38024" title="#38024: defect (bug): fs_unavailable while auto-updating several plugins in a row (closed: fixed)"&gt;#38024&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This happens when plugins are updated automatically in the background (see attached screenshot).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36824 (do_all_pings function queries all posts) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 21 Jun 2018 03:15:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36824#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36824#comment:37/1529550915746389</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've refreshed this patch and would like to see if we can get this in finally. This is a performance optimization as opposed to a strict enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36824.7.diff attached to Ticket #36824</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 21 Jun 2018 03:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36824/36824.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36824/36824.7.diff/1529550543991094</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44012 (Store the agreed-to-privacy-policy date/timestamp to help prove GDPR ...) updated</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Thu, 21 Jun 2018 01:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44012#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44012#comment:11/1529542923610250</guid>
      <description>&lt;p&gt;
Thanks for clarifying. As long as there's a place to store agreements somewhere I think that will be very helpful.
&lt;/p&gt;
&lt;p&gt;
If there's a separate ticket where those general agreements will be stored, can that be linked here to help point people there who might end up here looking for it?
&lt;/p&gt;
&lt;p&gt;
P.S. Why don't you need a lawyer for GDPR?
&lt;/p&gt;
&lt;p&gt;
P.P.S. I'm Canadian...so maybe "Americanism" is a "Europeanism"? lol
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44417 (Text widget breaks code sometimes, and it's inconsistent) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 21 Jun 2018 00:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44417#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44417#comment:1/1529539232971707</guid>
      <description>&lt;p&gt;
@programmin I assume this code similarly has problems as post content? You should be putting JS code inside of a Custom HTML widget not the Text widget.
&lt;/p&gt;
&lt;p&gt;
For more, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/08/01/fixes-to-text-widget-and-introduction-of-custom-html-widget-in-4-8-1/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2017/08/01/fixes-to-text-widget-and-introduction-of-custom-html-widget-in-4-8-1/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31245 (Replace alloptions with a key cache) updated</title>
      
        <dc:creator>jerclarke</dc:creator>

      <pubDate>Wed, 20 Jun 2018 23:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31245#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31245#comment:68/1529535775008006</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31245#comment:67" title="Comment 67"&gt;lkraav&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Heya @jeremyclarke are you able to show what you did to get better insight into what plugins are triggering option updates on every page load?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In my case, I had an object caching plugin running, which meant that options were going straight there, and not to the DB, so I couldn't use normal DB profiling to figure it out.
&lt;/p&gt;
&lt;p&gt;
If you aren't using an object cache, I recommend Query Monitor:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://en-ca.wordpress.org/plugins/query-monitor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en-ca.wordpress.org/plugins/query-monitor/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Easy to use and super effective at showing you what is taking time, causing queries, and eating up resources on your site. If you disable object cache, you should see anything updating options because it will cause DB queries that will show in the plugin.
&lt;/p&gt;
&lt;p&gt;
p.s. PLZ tag @jerclarke, unfortunately there's no way to rename my old wordpress.org account.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44417 (Text widget breaks code sometimes, and it's inconsistent) created</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Wed, 20 Jun 2018 22:27:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44417/1529533664607879</guid>
      <description>&lt;p&gt;
I add the following in a text widget:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script type="text/javascript"&amp;gt;
loadCountdown = function(data){
      var seconds_till;
      $("#churchonline_counter").show();
      if (data.response.item.isLive) {
        return goLive();
      } else {
        // Parse ISO 8601 date string
        date = data.response.item.eventStartTime.match(/^(\d{4})-0?(\d+)-0?(\d+)[T ]0?(\d+):0?(\d+):0?(\d+)Z$/)
        dateString = date[2] + "/" + date[3] + "/" + date[1] + " " + date[4] + ":" + date[5] + ":" + date[6] + " +0000"
        seconds_till = ((new Date(dateString)) - (new Date())) / 1000;
        days = Math.floor(seconds_till / 86400);
        hours = Math.floor((seconds_till % 86400) / 3600);
        minutes = Math.floor((seconds_till % 3600) / 60);
        seconds = Math.floor(seconds_till % 60);
        return intervalId = setInterval(function() {
          if (--seconds &amp;lt; 0) {
            seconds = 59;
            if (--minutes &amp;lt; 0) {
              minutes = 59;
              if (--hours &amp;lt; 0) {
                hours = 23;
                if (--days &amp;lt; 0) {
                  days = 0;
                }
              }
            }
          }
          $("#churchonline_counter .days").html((days.toString().length &amp;lt; 2) ? "0" + days : days);
          $("#churchonline_counter .hours").html((hours.toString().length &amp;lt; 2 ? "0" + hours : hours));
          $("#churchonline_counter .minutes").html((minutes.toString().length &amp;lt; 2 ? "0" + minutes : minutes));
          $("#churchonline_counter .seconds").html((seconds.toString().length &amp;lt; 2 ? "0" + seconds : seconds));
          if (seconds === 0 &amp;amp;&amp;amp; minutes === 0 &amp;amp;&amp;amp; hours === 0 &amp;amp;&amp;amp; days === 0) {
            goLive();
            return clearInterval(intervalId);
          }
        }, 1000);
      }
    }
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
and it breaks all js on the page, turns &amp;amp;&amp;amp; into odd ampersand characters.
&lt;/p&gt;
&lt;p&gt;
The odd thing is that adding a text widget with this code inside it, does not break and change it into odd ampersand characters:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script type="text/javascript"&amp;gt;
loadCountdown = function(data){
          if (seconds === 0 &amp;amp;&amp;amp; minutes === 0 &amp;amp;&amp;amp; hours === 0 &amp;amp;&amp;amp; days === 0) {
            goLive();
          }
    }
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Tested on 4.9.7 and 4.9.6. Some regex/processing must be corrupting it in more complex cases like this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44383 (Deprecate the media_buttons_context filter with apply_filters_deprecated()) updated</title>
      
        <dc:creator>zsiderov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 21:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44383#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44383#comment:9/1529529621271570</guid>
      <description>&lt;p&gt;
Thanks @birgire  and @audrasjb for the help! I have attached the new file.
&lt;/p&gt;
&lt;p&gt;
@birgire I wasn't sure what to do about the bug you mentioned about &lt;code&gt;$replacement&lt;/code&gt; being used in &lt;code&gt;apply_filters_deprecated&lt;/code&gt; and &lt;code&gt;_deprecated_hook&lt;/code&gt; differently. I left it as &lt;code&gt;false&lt;/code&gt; as this is what the is also mentioned in &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/apply_filters_deprecated/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/apply_filters_deprecated/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Should this go as a separate PR if it needs to be changed? I can see the docs talking about it as being &lt;code&gt;false&lt;/code&gt; as default argument. So if a change is going to be made - will the change need to be reflected in the docs as well? Alternatively both functions can check for &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; which will help with it since we only want to hit the &lt;code&gt;if&lt;/code&gt; statement when this is only &lt;code&gt;true&lt;/code&gt; - so this brings the question should we not be checking for &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in the first place?
&lt;/p&gt;
&lt;p&gt;
I failed miserably again with viewing the error and creating a screenshot. My assumption was that when I open the &lt;code&gt;dashboard&lt;/code&gt; in the browser and navigate to &lt;code&gt;Edit Post&lt;/code&gt; I will see it as a message there 😎 My lack of knowledge of WordPress mechanics is pretty obvious there - not sure how to trigger it i.e. visit the Edit Post page in the back-end  😞
&lt;/p&gt;
&lt;p&gt;
What will you guys recommend to do first before continue with any other tickets? Create a &lt;code&gt;theme&lt;/code&gt; and &lt;code&gt;plugin&lt;/code&gt;? Something else? I really need to get familiar with WordPress mechanics and common behaviour first as this bug is just one line change and I have troubles making such a simple change let alone something more complex.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44383.2.diff attached to Ticket #44383</title>
      
        <dc:creator>zsiderov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 21:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44383/44383.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44383/44383.2.diff/1529528886874330</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44415 (Create a new user role for DPOs) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Wed, 20 Jun 2018 20:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44415#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44415#comment:1/1529526756040353</guid>
      <description>&lt;p&gt;
I like this idea, if done with new capabilities and a new role then those capabilities should be enabled for admin as well in the case there's no one with the DPO role.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 20:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410#comment:4/1529526555135705</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44416 (`compact()` will throw notice for undefined variables in PHP 7.3) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 20:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44416#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44416#comment:2/1529526523590576</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44416 (`compact()` will throw notice for undefined variables in PHP 7.3) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 20 Jun 2018 20:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44416#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44416#comment:1/1529526125941111</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44416 (`compact()` will throw notice for undefined variables in PHP 7.3) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 20 Jun 2018 20:17:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44416</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44416/1529525858777778</guid>
      <description>&lt;p&gt;
PHP 7.3 has released &lt;a class="ext-link" href="http://php.net/archive/2018.php#id2018-06-07-1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Alpha 1 version&lt;/a&gt;. While this is still an early development version, one of the &lt;a class="ext-link" href="https://wiki.php.net/rfc/compact"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;accepted&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/php/php-src/pull/3240"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;committed&lt;/a&gt; changes is exposing some undefined variables.
&lt;/p&gt;
&lt;p&gt;
In PHP 7.3, the &lt;code&gt;compact()&lt;/code&gt; function has been changed to issue an &lt;code&gt;E_NOTICE&lt;/code&gt; level error if a passed string refers to an unset variable. In previous versions of PHP, this notice was silently skipped. The full RFC can be viewed here: &lt;a class="ext-link" href="https://wiki.php.net/rfc/compact"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wiki.php.net/rfc/compact&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
While it may be early to fix PHP 7.3 compatibility issues, this one exposes variables that are potentially being handled incorrectly and should be investigated.
&lt;/p&gt;
&lt;p&gt;
The main offenders appear to be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp_insert_post()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_xmlrpc_server-&amp;gt;mw_newPost();&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Comment_Query-&amp;gt;get_comment_ids()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
To see the warnings thrown, &lt;a class="ext-link" href="https://travis-ci.org/WordPress/wordpress-develop/jobs/394396151"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;look at the nightly PHP job on any recent build for `master`&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44414 (Granular erasure, alteration or anonymization of data) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 20:12:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44414#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44414#comment:1/1529525566743140</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44401 (Trying to save draft, publishes live) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 20:01:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44401#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44401#comment:5/1529524894086031</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44391 (Improving the notification badges in admin menu) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44391#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44391#comment:7/1529524554762133</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44390 (PHPUnit tutorial page lacking build vital step) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44390#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44390#comment:1/1529524472944980</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44399 (Add unique capability for oembed) updated</title>
      
        <dc:creator>jason_the_adams</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44399#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44399#comment:4/1529524374045773</guid>
      <description>&lt;p&gt;
Hi!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44399#comment:3" title="Comment 3"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this ticket reporting a problem with the capability check for embeds or is it proposing a new capability? Or maybe both.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Both. There is an issue with oembed capability checks as they require either a post context or the user to have &lt;code&gt;edit_posts&lt;/code&gt; which doesn't fit custom post types with capabilities.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems to me that the existing capability check assumes a post context, which your use case has a problem with. Would putting a filter on that capability check work? Are there other places where embeds might be wanted, but checking &lt;code&gt;edit_posts&lt;/code&gt; wouldn't work? Like comments or custom widgets?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Regarding the filter, that could work but the issue is that there isn't really any further context that a hook could do anything with. If there's a post, it's working fine; if there's no post, there's not much context.
&lt;/p&gt;
&lt;p&gt;
You're right on with the other scenarios. That's why, along with my last point, I'm suggesting a new capability, similar to &lt;code&gt;upload_files&lt;/code&gt; or other one-off capabilities. I think it's good to check if a user has a capability, I just don't think &lt;code&gt;edit_posts&lt;/code&gt; is the right one as it impacts far too much else.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is it just embeds that has this problem? I've seen some other discussions about other places where core checks for a capability that doesn't work in all contexts. &lt;em&gt;(I also have a use case for custom role with custom post type created with a custom editor, and I don't want the user to &lt;code&gt;edit_posts&lt;/code&gt;. This seems likely to be common for sites with user-created content.)&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm trying to keep the scope of this issue to just embeds. I think other scenarios are worth considering, but I don't think there's a fundamental issue with the capability system, just niche situations that could use some tweaking.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Thanks for chiming in! I hope this helps clarify my thinking. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44389 (Cannot upgrade to 4.9.6) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:52:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44389#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44389#comment:2/1529524340046847</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44012 (Store the agreed-to-privacy-policy date/timestamp to help prove GDPR ...) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44012#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44012#comment:10/1529522624015426</guid>
      <description>&lt;p&gt;
Hi everyone
&lt;/p&gt;
&lt;p&gt;
The comments above are correct. The privacy policy is not a contract - it is a transparent statement of data use and a means for the user to clarify their options and rights.
&lt;/p&gt;
&lt;p&gt;
I think you may be conflating the consent requirements of granular aspects of data collection and processing - e.g. the user consented to this use of their data, or that cookie - with the presentation of the document used to inventory that information. We're certainly going to be looking at granular consent logging and UX as part of the second roadmap.
&lt;/p&gt;
&lt;p&gt;
For now, though, there is no timestamp consent required to be provided or captured for the privacy notice itself.
&lt;/p&gt;
&lt;p&gt;
(IANAL but you don't need lawyers for GDPR - that's another Americanism!)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44415 (Create a new user role for DPOs) created</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:19:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44415</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44415/1529522351516928</guid>
      <description>&lt;p&gt;
We had a chat during the Contribution Day in WCEU2018 and there was an idea to have a new role implemented just for Data Protection Officers ( DPO ).
&lt;/p&gt;
&lt;p&gt;
The points of this were that:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;only the DPO would have access to edit the policy page
&lt;/li&gt;&lt;li&gt;only the DPO would have access to the privacy tools
&lt;/li&gt;&lt;li&gt;there's no need for other user levels to have access to it (it was mentioned that not even the admin should have access, but I think we where over this part :)).
&lt;/li&gt;&lt;li&gt;the DPO doesn't need to be an 'administrator/editor or any other role' so he wouldn't have access to anything else other than the privacy tools as well.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
My only valid counter thinking at that time was that there isn't always a DPO needed of course so it wouldn't be nice to force anyone to have 2 different users to tackle a simple thing as creating a policy page. So even though I do see the points above valid I think they would eventually be counter productive and might make more harm than good let's say.
&lt;/p&gt;
&lt;p&gt;
Just bringing this here for more input and see if it is worth thinking up something that would benefit both sides, for example just an extra DPO role if anybody wants to give access only to the privacy tools that we added (the administrator would still of course have access to everything).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44012 (Store the agreed-to-privacy-policy date/timestamp to help prove GDPR ...) updated</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:15:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44012#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44012#comment:9/1529522114974678</guid>
      <description>&lt;p&gt;
Bringing @Idea15 (Heather Burns) in on this...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44414 (Granular erasure, alteration or anonymization of data) created</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44414</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44414/1529521768847399</guid>
      <description>&lt;p&gt;
In the Erasure tool, we need to give the possibility of only erasing, altering or anonymizing parts of the data.
&lt;/p&gt;
&lt;p&gt;
This means that an erasure request, need to output all data in &lt;strong&gt;editable&lt;/strong&gt; fields along with buttons to &lt;strong&gt;anonymize&lt;/strong&gt; that one piece of data - or completely &lt;strong&gt;delete&lt;/strong&gt; it.
&lt;/p&gt;
&lt;p&gt;
-- Granular erasure of data
People may want to delete just some part of the datas (maybe a second address, the family status, their phone number) and let other data to be processed for their sake (they want to be in your interest based newsletter).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44012 (Store the agreed-to-privacy-policy date/timestamp to help prove GDPR ...) reopened</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:07:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44012#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44012#comment:8/1529521632488076</guid>
      <description>&lt;p&gt;
@dejliglama Is there a specific section of the GDPR that has clarified that to you? Personally, I'm still in a state of confusion on it. It would be great to have a lawyer chime in.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #4890 (WXR does not export users and links) updated</title>
      
        <dc:creator>lukefiretoss</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4890#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4890#comment:8/1529521477389415</guid>
      <description>&lt;p&gt;
Not being able to export users with usermeta to a WXR file seems like something missing in WordPress core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44186 (Possibles enhancements to 4.9.6 privacy tools) updated</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:03:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44186#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44186#comment:5/1529521427320403</guid>
      <description>&lt;p&gt;
I'm pulling this part out of this ticket and amending it to a new ticket on granular deletion/anonymization of data:
&lt;/p&gt;
&lt;p&gt;
-- Granular erasure of data
&lt;/p&gt;
&lt;p&gt;
As 4.9.6 the request of deleting personal data is an all or nothing actions. People can request to delete all the data from the website and maybe delete his / her account. People may want to delete just some part of the datas (maybe a second address, the family status, their phone number) but let other to be processed for their sake (they want to be in your interest based newsletter).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44068 (Provide a way to check whether a user's data has been erased) updated</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 19:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44068#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44068#comment:6/1529521246543731</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44012 (Store the agreed-to-privacy-policy date/timestamp to help prove GDPR ...) closed</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 18:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44012#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44012#comment:7/1529520946103380</guid>
      <description>wontfix: &lt;p&gt;
The privacy policy itself is not a thing users should consent to, so we don't have this problem.
&lt;/p&gt;
&lt;p&gt;
Asking for this ticket to be closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43880 (Add functionality to add an anonymous user an get its ID for ...) updated</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 18:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43880#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43880#comment:12/1529520465984876</guid>
      <description>&lt;p&gt;
Instead of moving data to a fake user "anonymous" - why not use the anonymizing functions on what ever user we anonymize, and instead change the ROLE of the user to anonymous.
&lt;/p&gt;
&lt;p&gt;
So what IS new in the system, is a role that has no rights what so ever.
&lt;/p&gt;
&lt;p&gt;
Doing it like this, you keep any data integrity between posts, and other data, since you don't move things arround.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43879 (Add tools for anonymizing of post authors) updated</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 18:44:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43879#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43879#comment:16/1529520285188877</guid>
      <description>&lt;p&gt;
I Agree with @iandunn on this, putting published posts to a non existing user seems odd.
And as @allendav also mentions earlier, wouldn't it be possible to use the functions we already have for when you delete a user - posts etc. get's reassigned to another user - or deleted ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 20 Jun 2018 18:42:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410#comment:3/1529520120805961</guid>
      <description>&lt;p&gt;
The phpdoc should include the &lt;code&gt;@since&lt;/code&gt; tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44266 (Add per-request-row delete row action for privacy actions) updated</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 18:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44266#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44266#comment:4/1529519171292178</guid>
      <description>&lt;p&gt;
We should have in mind that the request for data export and erasure is a matter of documentation (logging), and should not be deleted lightly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Wed, 20 Jun 2018 18:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:83/1529518082175298</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 20 Jun 2018 18:03:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:82/1529517788240382</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by joyously. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1529517787000451"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44391 (Improving the notification badges in admin menu) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 20 Jun 2018 17:46:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44391#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44391#comment:6/1529516803985512</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by boemedia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1529516803000028"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14682 (Privacy leakage: gravatars leak identity information) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Wed, 20 Jun 2018 17:38:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14682#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14682#comment:37/1529516290561311</guid>
      <description>&lt;p&gt;
A sample implementation of a possible solution to the privacy issues is available in the form of &lt;a class="ext-link" href="https://wordpress.org/plugins/avatar-privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Avatar Privacy&lt;/a&gt;. The plugin uses a salted hash (SHA256) as the on-site identifier and caches the gravatars locally (it also does some other things that do not directly apply to this issue, such as adding a Gravatar.com consent checkbox to the comment form).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31245 (Replace alloptions with a key cache) updated</title>
      
        <dc:creator>lkraav</dc:creator>

      <pubDate>Wed, 20 Jun 2018 17:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31245#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31245#comment:67/1529514455468156</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31245#comment:26" title="Comment 26"&gt;jeremyclarke&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Quick note on stupid plugins&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
FWIW for anyone experiencing problems related to &lt;code&gt;alloptions&lt;/code&gt; I recommend doing an audit of the ongoing actions taken by your object cache. I added logging to our &lt;code&gt;object-cache.php&lt;/code&gt; and found several plugin features (some by me, some from repo) that were triggering option changes on every pageload for foolish reasons. Cleaning up these noisy/constant updates will probably make a huge difference to the incidence of {{[alloptions}}} bugs and obviously reduce the overall load on your system.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Heya @jeremyclarke are you able to show what you did to get better insight into what plugins are triggering option updates on every page load?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Wed, 20 Jun 2018 16:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:90/1529511794065810</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:62" title="Comment 62"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Auto-save:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;[...]&lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When creating a revision following the above logic, if an autosaved revision already exists, it is updated instead of creating another autosaved revision. &lt;strong&gt;Additionally if the post content is identical to the new content that is being auto-saved, the previous autosave revision is deleted to prevent having a redundant revision (i.e. if the update of the previous autosaved revision will make it identical to the current post, there is no need of it).&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
With regards to this and relating to &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43316/43316.14.diff"&gt;the most recent patch version&lt;/a&gt;, I'm confused by the proposed flow where an error is returned from the endpoint.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Do we really need to return an error? Can't we just treat it as though it were successful even if in-fact the server is ensuring there are no redundant revisions? Otherwise this can result in challenges from the client in ensuring to not send fields which are already the saved value for the autosave.
&lt;/li&gt;&lt;li&gt;Because we delete the revision and then return immediately with an error, isn't it true that we're not simply not storing redundant revision, we're in fact destroying a revision without having anything new to serve in its place?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40472 (Update PHPMailer to 5.2.27) updated</title>
      
        <dc:creator>rogueresearch</dc:creator>

      <pubDate>Wed, 20 Jun 2018 15:42:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40472#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40472#comment:24/1529509371978976</guid>
      <description>&lt;p&gt;
Is there any paid support to get this fixed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44413 (Privacy policy page select is not up-to-date if the options is setted ...) updated</title>
      
        <dc:creator>f2cmb</dc:creator>

      <pubDate>Wed, 20 Jun 2018 14:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44413#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44413#comment:2/1529505254859285</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44413#comment:1" title="Comment 1"&gt;subrataemfluence&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would you please mind to describe the exact steps to reproduce the issue?
Thank you!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hello there !
&lt;/p&gt;
&lt;p&gt;
After updating the post ID, via an update_option(), or directly in the wp_options field, the select stays empty. Here is the way i do it in my plugin (assuming the post with this slug exist) :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;//set the regular policy page in wp-admin privacy.php
&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;register_policy_post&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_page_by_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'politique-de-confidentialite'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OBJECT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'page-systeme'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;update_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_page_for_privacy_policy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Only the choice made in wp-admin/privacy.php is displayed, even if the post selected is a regular page. I guess a patch would be not to loop for populating the dropdown through all existing posts, but at least display the one registered in the option field in database.
&lt;/p&gt;
&lt;p&gt;
Best regards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Wed, 20 Jun 2018 14:04:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:89/1529503481318842</guid>
      <description>&lt;p&gt;
Adding to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:88" title="Comment 88"&gt;comment:88&lt;/a&gt; , it is not immediately obvious what fields this endpoint is capable of receiving, and in fact it varies by post status / authorship.
&lt;/p&gt;
&lt;p&gt;
For auto-drafts / drafts authored by the current user, the following fields are supported:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;id
&lt;/li&gt;&lt;li&gt;date
&lt;/li&gt;&lt;li&gt;date_gmt
&lt;/li&gt;&lt;li&gt;slug
&lt;/li&gt;&lt;li&gt;status
&lt;/li&gt;&lt;li&gt;password
&lt;/li&gt;&lt;li&gt;title
&lt;/li&gt;&lt;li&gt;content
&lt;/li&gt;&lt;li&gt;author
&lt;/li&gt;&lt;li&gt;excerpt
&lt;/li&gt;&lt;li&gt;comment_status
&lt;/li&gt;&lt;li&gt;ping_status
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Notably this excludes: featured_media, format, meta, sticky, template, categories, tags
&lt;/p&gt;
&lt;p&gt;
This was determined in the autosaves controller's use of &lt;code&gt;WP_REST_Posts_Controller::prepare_item_for_database&lt;/code&gt;, which assigns only these fields.
&lt;/p&gt;
&lt;p&gt;
On the other hand, in all other circumstances only the following fields are supported:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;id
&lt;/li&gt;&lt;li&gt;title
&lt;/li&gt;&lt;li&gt;content
&lt;/li&gt;&lt;li&gt;excerpt
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This was determined in the use of &lt;code&gt;_wp_post_revision_fields&lt;/code&gt; to intersect fields for &lt;code&gt;_wp_put_post_revision&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Given then the need to pass &lt;code&gt;status&lt;/code&gt; with the payload as described in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:88" title="Comment 88"&gt;comment:88&lt;/a&gt; , it is especially confusing since it is only respected for some, but not all requests (only those which are auto-draft/draft by current user).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 20 Jun 2018 14:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:17/1529503417210528</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44339#comment:11" title="Comment 11"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... &lt;code&gt;sha512&lt;/code&gt; signatures, instead of &lt;code&gt;sha1&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is typically due to cached packages locally, the npm cache has to be force cleaned to remove the old &lt;code&gt;sha1&lt;/code&gt;'s:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;npm cache clear -force&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5983 (Allow locale team personalize help and forum links on dashboard) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 20 Jun 2018 14:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5983#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5983#comment:6/1529503411147673</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1529503410000436"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44413 (Privacy policy page select is not up-to-date if the options is setted ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 20 Jun 2018 13:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44413#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44413#comment:1/1529503155864364</guid>
      <description>&lt;p&gt;
Would you please mind to describe the exact steps to reproduce the issue?
Thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot-2018-6-19 Réglages de confidentialité ‹ Mairie de Martignas-sur-Jalle — WordPress.png attached to Ticket #44413</title>
      
        <dc:creator>f2cmb</dc:creator>

      <pubDate>Wed, 20 Jun 2018 13:42:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44413/Screenshot-2018-6-19%20R%C3%A9glages%20de%20confidentialit%C3%A9%20%E2%80%B9%20Mairie%20de%20Martignas-sur-Jalle%20%E2%80%94%20WordPress.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44413/Screenshot-2018-6-19%20R%C3%A9glages%20de%20confidentialit%C3%A9%20%E2%80%B9%20Mairie%20de%20Martignas-sur-Jalle%20%E2%80%94%20WordPress.png/1529502168862571</guid>
      <description>&lt;p&gt;
privacy.php page with empty select
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screenshot-2018-6-19 Sélectionner martignas_options - Adminer.png attached to Ticket #44413</title>
      
        <dc:creator>f2cmb</dc:creator>

      <pubDate>Wed, 20 Jun 2018 13:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44413/Screenshot-2018-6-19%20S%C3%A9lectionner%20martignas_options%20-%20Adminer.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44413/Screenshot-2018-6-19%20S%C3%A9lectionner%20martignas_options%20-%20Adminer.png/1529502150229094</guid>
      <description>&lt;p&gt;
option
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44413 (Privacy policy page select is not up-to-date if the options is setted ...) created</title>
      
        <dc:creator>f2cmb</dc:creator>

      <pubDate>Wed, 20 Jun 2018 13:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44413</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44413/1529502119053941</guid>
      <description>&lt;p&gt;
When registering a privacy policy page or custom post, via 'update_options()' or directly in database via putting a post ID in the 'wp_page_for_privacy_policy' in 'wp_options', the given post is effectively registered as the privacy policy page (for example the link is in the action confirmation mail sent to user), but if i open wp-admin/privacy.php page, the select field is displayed empty.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #229 (generic_ping does not return argument) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 20 Jun 2018 13:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/229#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/229#comment:4/1529502029527364</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #docs by pskli. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/docs/p1529502028000727"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44246 (Add `check-node-version` to check required Node.js and npm versions ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 20 Jun 2018 13:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44246#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44246#comment:8/1529501962537007</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44246#comment:7" title="Comment 7"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right. We can also run this from grunt and just show a "non-blocking" message. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44246/44246.3.diff" title="Attachment '44246.3.diff' in Ticket #44246"&gt;44246.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44246/44246.3.diff" title="Download"&gt;​&lt;/a&gt;  output a non-blocking warning &lt;code&gt;grunt.log.writeln()&lt;/code&gt; when node or npm need updating.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nice 👌
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43405 (CS: Fix violations for wp-signup.php) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 20 Jun 2018 13:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43405#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43405#comment:6/1529500776753778</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Wed, 20 Jun 2018 12:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:88/1529499334712778</guid>
      <description>&lt;p&gt;
In the latest patch: When creating an autosave, we allow a post with &lt;code&gt;auto-draft&lt;/code&gt; status to be saved in-place. Should it ever be the case that we'd want an auto-draft post to stay as auto-draft after an autosave occurs? Or should we at least change this status to &lt;code&gt;draft&lt;/code&gt; from the server? Otherwise it requires that the developer include &lt;code&gt;status&lt;/code&gt; in the payload to bump the post to draft status. This is more a workflow expectation, and admittedly it seems we should want to limit the amount of "magic" happening on the server, but in this instance we're already varying logic automatically based on the status of the post being saved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44412 ('pre_cache_alloptions' filter in wp_load_alloptions() in option.php ...) created</title>
      
        <dc:creator>redsnowcompany</dc:creator>

      <pubDate>Wed, 20 Jun 2018 12:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44412</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44412/1529498852982421</guid>
      <description>&lt;p&gt;
Whenever wordpress loads, it fetches all options with the wp_load_alloptions() function in the option.php file. There is a filter in the function before sending it to the cache: {{{#!php
&amp;lt;?php
$alloptions = apply_filters( 'pre_cache_alloptions', $alloptions );
}}}.
&lt;/p&gt;
&lt;p&gt;
However, there is no way to hook into this filter in the theme or plugin because the theme or plugin are loaded afterwards.
&lt;/p&gt;
&lt;p&gt;
So the full array is always send to the cache.
&lt;/p&gt;
&lt;p&gt;
We were having trouble with a site that loaded all of the options with autoload 'yes' and it crashed with a memory limit exhausted error because there were too many options.
&lt;/p&gt;
&lt;p&gt;
An action needs to be added to hook into this filter or move the calling of this function some steps further after a theme or plugin is loaded.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44410-2.diff attached to Ticket #44410</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 20 Jun 2018 12:09:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44410/44410-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44410/44410-2.diff/1529496595899033</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 20 Jun 2018 12:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410#comment:2/1529496580823619</guid>
      <description>&lt;p&gt;
Thank you @GaryJ for pointing out the mistake :)
Uploaded a fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44411 (Add property doc in child class) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 20 Jun 2018 12:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44411</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44411/1529496056267817</guid>
      <description>&lt;p&gt;
There are few classes where doc comments are missing for public property declaration.
&lt;/p&gt;
&lt;p&gt;
Examples:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WP_Customize_Image_Control&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;WP_Customize_Upload_Control&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'image'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$mime_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'image'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The above class extends &lt;code&gt;WP_Customize_Upload_Control&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WP_Customize_Upload_Control&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;WP_Customize_Media_Control&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'upload'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$mime_type&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$button_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$removed&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// unused
&lt;/span&gt;  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// unused
&lt;/span&gt;  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// unused
&lt;/span&gt;  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Although the properties are documented in &lt;code&gt;WP_Customize_Media_Control&lt;/code&gt;, it would be good to have them documented inside the scope of each class also. Otherwise one has to navigate to the class which it extends to read the actual documentation. Some cases like the one above could have a multi-level navigation.
&lt;/p&gt;
&lt;p&gt;
Is this worth doing for the sake of better code readability?
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44410" title="#44410: defect (bug): Properties in class missing type definition and description in DOC comments (new)"&gt;#44410&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Wed, 20 Jun 2018 11:57:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410#comment:1/1529495829237638</guid>
      <description>&lt;p&gt;
The middle DocBlock description is missing a full stop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43573 (Convert plugin cards into four columns for hi-res screens) reopened</title>
      
        <dc:creator>nielslange</dc:creator>

      <pubDate>Wed, 20 Jun 2018 11:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43573#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43573#comment:7/1529494985805625</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43573 (Convert plugin cards into four columns for hi-res screens) closed</title>
      
        <dc:creator>nielslange</dc:creator>

      <pubDate>Wed, 20 Jun 2018 11:42:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43573#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43573#comment:6/1529494971657627</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43573 (Convert plugin cards into four columns for hi-res screens) updated</title>
      
        <dc:creator>nielslange</dc:creator>

      <pubDate>Wed, 20 Jun 2018 11:42:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43573#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43573#comment:5/1529494934354188</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44398 (`list_pages` filter docblock improvement) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 20 Jun 2018 11:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44398#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44398#comment:2/1529493931408687</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44410.diff attached to Ticket #44410</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 20 Jun 2018 11:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44410/44410.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44410/44410.diff/1529493809923311</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 20 Jun 2018 11:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410/1529493789819954</guid>
      <description>&lt;p&gt;
Doc comment section is missing for declared public properties.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;File: src/wp-includes/customize/class-wp-customize-header-image-control.php
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;class WP_Customize_Header_Image_Control extends WP_Customize_Image_Control {
  public $type = 'header';
  public $uploaded_headers;
  public $default_headers;
  ...
}
&lt;/pre&gt;&lt;p&gt;
Can the proposed patch help?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44246 (Add `check-node-version` to check required Node.js and npm versions ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 20 Jun 2018 10:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44246#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44246#comment:7/1529490613583057</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44246#comment:6" title="Comment 6"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44246/44246.2.diff" title="Attachment '44246.2.diff' in Ticket #44246"&gt;44246.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44246/44246.2.diff" title="Download"&gt;​&lt;/a&gt; would achieve this
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. We can also run this from grunt and just show a "non-blocking" message. See 44246.3.diff: output a non-blocking warning &lt;code&gt;grunt.log.writeln()&lt;/code&gt; when node or npm need updating.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44246.3.diff attached to Ticket #44246</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 20 Jun 2018 10:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44246/44246.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44246/44246.3.diff/1529490252863394</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 20 Jun 2018 09:42:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:84/1529487765478352</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38323/38323.16.diff" title="Attachment '38323.16.diff' in Ticket #38323"&gt;38323.16.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38323/38323.16.diff" title="Download"&gt;​&lt;/a&gt; is a small update that removes comment types from the patch.
&lt;/p&gt;
&lt;p&gt;
With that, the patch now only contains everything that is crucial to registering metadata for subtypes, as mentioned above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38323.16.diff attached to Ticket #38323</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 20 Jun 2018 09:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38323/38323.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38323/38323.16.diff/1529487685868614</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 20 Jun 2018 09:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:83/1529487362764422</guid>
      <description>&lt;p&gt;
I agree with the ideas that both of you @kadamwhite and @spacedmonkey are highlighting.
&lt;/p&gt;
&lt;p&gt;
However, my main point is the following: Both of you are mentioning specific "extra parts" to registering metadata should be part of this ticket right here. I don't see why. Everything related to &lt;code&gt;register_meta()&lt;/code&gt; should definitely be part of 5.0, but this ticket is indeed quite complex already, and it is much easier to take care of the rest in follow-up tickets, for the sake of overview and also granular commits like @spacedmonkey mentioned.
&lt;/p&gt;
&lt;p&gt;
Instead of arguing why one thing should be part of this and another doesn't, I really think we should keep things simple here and do all the following things afterwards:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Meta default values (&lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43941" title="#43941: enhancement: Add default value to register meta (assigned)"&gt;#43941&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Registerable protected meta values per subtype (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44238" title="#44238: enhancement: Add protected param to register meta (new)"&gt;#44238&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Site meta support when registering meta (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44387" title="#44387: enhancement: Add support for site meta in `register_meta()` (new)"&gt;#44387&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Comment types support or not? (ticket yet to be created)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44392 (get_user_field) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 20 Jun 2018 09:16:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44392#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44392#comment:3/1529486219478395</guid>
      <description>wontfix: &lt;p&gt;
Closing this for the reasons outlined in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44409" title="#44409: defect (bug): get_userdata and get_user_field_by (closed: duplicate)"&gt;#44409&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #44392,​44409 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 20 Jun 2018 09:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=44392%2C44409</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=44392%2C44409/1529486169838848</guid>
      <description>duplicate: &lt;p&gt;
Hey there
&lt;/p&gt;
&lt;p&gt;
No need to create a new ticket for that, a comment on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44392" title="#44392: enhancement: get_user_field (closed: wontfix)"&gt;#44392&lt;/a&gt; would suffice.
&lt;/p&gt;
&lt;p&gt;
That being said, a function like &lt;code&gt;get_user_field_by&lt;/code&gt; probably has no use case in core or in many plugins either.
&lt;/p&gt;
&lt;p&gt;
Even if you only need the user's email address I'd highly recommend you to use &lt;code&gt;get_userdata()&lt;/code&gt;. Fetching a user this way will try to avoid querying the database directly when the user has already been requested before and is available either in memory or in the object cache.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44409 (get_userdata and get_user_field_by) created</title>
      
        <dc:creator>markuscode</dc:creator>

      <pubDate>Wed, 20 Jun 2018 09:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44409</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44409/1529485706701393</guid>
      <description>&lt;p&gt;
Hi last time I ask about the get_user_field, on the ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44392" title="#44392: enhancement: get_user_field (closed: wontfix)"&gt;#44392&lt;/a&gt;.
I ask not about usermeta, I ask about users table. How can get just user_email by user ID without selecting all information, just user_email.
&lt;/p&gt;
&lt;p&gt;
Always I do for myself something like that:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'get_user_field_by'&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Gets the user field by.
         *
         * @param      string  $fuild  The fuild
         * @param      array   $where  The where
         */&lt;/span&gt;
        &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_user_field_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fuild&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$where&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
                &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"SELECT "&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fuild&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;" FROM &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;users"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$wherecount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$where&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wherecount&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                                &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s2"&gt;" WHERE &lt;/span&gt;&lt;span class="si"&gt;$key&lt;/span&gt;&lt;span class="s2"&gt; = '&lt;/span&gt;&lt;span class="si"&gt;$value&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s2"&gt;" AND &lt;/span&gt;&lt;span class="si"&gt;$key&lt;/span&gt;&lt;span class="s2"&gt; = '&lt;/span&gt;&lt;span class="si"&gt;$value&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$wherecount&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;OBJECT&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$results&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                        &lt;span class="nv"&gt;$results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$results&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 20 Jun 2018 09:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:82/1529485245150393</guid>
      <description>&lt;p&gt;
My view on this is the following.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Comment type is something I would really love to support, but I don't think that core currently supports it. There is no register comment type and no go way to workout type in the api. Until we have all that in place, I don't believe it should go in. However, I don't want this to block this ticket. I will open another ticket register comment types and how core can better support them.
&lt;/li&gt;&lt;li&gt;I am not sure what the confusion with site meta. The meta type is blog and there is nothing we can do about that. As this function is most going to be used by core and develop interaction with it is likely to be with the get sub types filter, I don't see why we don't just put the case statement found in my patch.
&lt;/li&gt;&lt;li&gt;I have updated on my patch for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44238" title="#44238: enhancement: Add protected param to register meta (new)"&gt;#44238&lt;/a&gt; with &lt;a href="https://core.trac.wordpress.org/attachment/ticket/44238/44238.2.diff"&gt;44238.2.diff&lt;/a&gt;. This requires this patch to be in for it work, so I was unable to test it. But this patch alone is already 10kb of code. I think we should do it as patch, just for the sake of cleaness of commit and ablity to revert if something is wrong with protected meta.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44238.2.diff attached to Ticket #44238</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 20 Jun 2018 08:53:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44238/44238.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44238/44238.2.diff/1529484802901352</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42888 (Add a "Show" button next to password fields on mobile) updated</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Wed, 20 Jun 2018 08:08:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42888#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42888#comment:21/1529482135769951</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Me &amp;amp; @Iceable briefly sat together during WCEU contributor day. We checked this on both mine (MAMP) and his (VVV) local environment, but there was a difference in display. We couldn't quite replicate what caused the display being wrong on my install (we did use grunt build) because of time and wifi issues, I have to see if I can get VVV installed on my computer and test again. Maybe someone else can test on MAMP and see if they can replicate my issue?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42888#comment:20" title="Comment 20"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@boemedia can you please give this another test following the steps @Iceable outlined? notably, use grunt patch and grunt build to make sure the patch applies to the correct code and is built into the build directory.. Also, since &lt;a href="https://core.trac.wordpress.org/changeset/43309"&gt;https://core.trac.wordpress.org/changeset/43309&lt;/a&gt; you'll need to be testing by running WordPress from the build directory as well.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40245 (Youtube embeds lack title attribute) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 20 Jun 2018 07:10:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40245#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40245#comment:28/1529478652877458</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Wed, 20 Jun 2018 06:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:30/1529477671720447</guid>
      <description>&lt;p&gt;
An update on where we're headed in a test setup internally.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Step 1&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Pseudo coding a bit here :
&lt;/p&gt;
&lt;p&gt;
Log_function (email, action, status);
&lt;em&gt;3 strings are required, e-mail being a unique identifyer, action is the hook that has been run, and status is a string detailing the intend and status of the action (remove, delete, revoke, failed, deleted...  and so on).
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
The email is hashed into a key - this makes the log entry anonymized
A date for the entry is also stored.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
-----
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Step 2&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Fetch_log_Function (hash, date-range);
The function takes a hashed value (so an e-mail, that is hashed, so that we can match it in the log).
Date start and Date end.
&lt;/p&gt;
&lt;p&gt;
The function returns an array of entries within that daterange where there is a match on the hash.
Sort by date
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Step 3&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Save it somewhere outside of WP database  - since it cant be a part of the database it's trying to govern.
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44408 (Add classes to .post-attributes-label-wrapper paragraphs to make them ...) created</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Wed, 20 Jun 2018 06:05:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44408</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44408/1529474716005345</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
Currently the Post Attributes meta box markup for the individual post attributes doesn't allow for easy targetting for either css or js.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="inside"&amp;gt;
&amp;lt;p class="post-attributes-label-wrapper"&amp;gt;&amp;lt;label class="post-attributes-label" for="parent_id"&amp;gt;Parent&amp;lt;/label&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;select name="parent_id" id="parent_id"&amp;gt;&amp;lt;/select&amp;gt;
&amp;lt;p class="post-attributes-label-wrapper"&amp;gt;&amp;lt;label class="post-attributes-label" for="page_template"&amp;gt;Template&amp;lt;/label&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;select name="page_template" id="page_template"&amp;gt;&amp;lt;/select&amp;gt;
&amp;lt;p class="post-attributes-label-wrapper"&amp;gt;&amp;lt;label class="post-attributes-label" for="menu_order"&amp;gt;Order&amp;lt;/label&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;input name="menu_order" type="text" size="4" id="menu_order" value="0"&amp;gt;
&amp;lt;p&amp;gt;Need help? Use the Help tab above the screen title.&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Could each attribute either be wrapped in a div with ID or class on it. Otherwise can an ID or unique class be added to the post-attributes-label-wrapper paragraphs in order to target them.
&lt;/p&gt;
&lt;p&gt;
Personally I prefer an entire div wrapping to allow better targetting the attribute as a whole to hide or style it or update it.
&lt;/p&gt;
&lt;p&gt;
Thank you
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44407 (Please add page_attributes_meta_box_parent action to meta-boxes.php) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 20 Jun 2018 06:02:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44407#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44407#comment:1/1529474525589575</guid>
      <description>&lt;p&gt;
What‘s a use case for that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44407 (Please add page_attributes_meta_box_parent action to meta-boxes.php) created</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Wed, 20 Jun 2018 05:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44407</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44407/1529473669686581</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
Can we add a new action after the 'Parent' label to match the one that follows after the 'Template' label.
&lt;/p&gt;
&lt;p&gt;
Placement for new action - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/cd4c960a6c17e683bcc76f1efaadcb272955bb83/wp-admin/includes/meta-boxes.php#L924"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/cd4c960a6c17e683bcc76f1efaadcb272955bb83/wp-admin/includes/meta-boxes.php#L924&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Existing action for 'Template' - &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/cd4c960a6c17e683bcc76f1efaadcb272955bb83/wp-admin/includes/meta-boxes.php#L943"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/cd4c960a6c17e683bcc76f1efaadcb272955bb83/wp-admin/includes/meta-boxes.php#L943&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Wed, 20 Jun 2018 04:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:16/1529470312027436</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed the patch for 4.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44339.6.diff attached to Ticket #44339</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Wed, 20 Jun 2018 04:50:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44339/44339.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44339/44339.6.diff/1529470253779401</guid>
      <description>&lt;p&gt;
Patch for the 4.9 branch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 20 Jun 2018 04:27:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:15/1529468848857809</guid>
      <description>&lt;p&gt;
Reopen for backport, though the patch will need a refresh, due to the 4.9 branch including a copy of twemoji in src, instead of in &lt;code&gt;package.json&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 20 Jun 2018 04:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:14/1529468433178824</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43377" title="Emoji: Update Twemoji to version 11.0.
🦹
Props kraftbj,
Fixes #44339.
"&gt;43377&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Emoji: Update Twemoji to version 11.0.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
🦹&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kraftbj,&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44339" title="#44339: task (blessed): Emoji: Update Twemoji to 11.0 (closed: fixed)"&gt;#44339&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43377]: Emoji: Update Twemoji to version 11.0.  🦹  Props kraftbj, Fixes #44339.  </title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 20 Jun 2018 04:20:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43377/1529468432078030</guid>
      <description>&lt;p&gt;
Emoji: Update Twemoji to version 11.0.
&lt;/p&gt;
&lt;p&gt;
🦹
&lt;/p&gt;
&lt;p&gt;
Props kraftbj,
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44339" title="#44339: task (blessed): Emoji: Update Twemoji to 11.0 (closed: fixed)"&gt;#44339&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 20 Jun 2018 03:48:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:13/1529466482965758</guid>
      <description>&lt;p&gt;
Hrrm, that's interesting. &lt;code&gt;package-lock.json&lt;/code&gt; can have some strange behaviour at times. 🙃
&lt;/p&gt;
&lt;p&gt;
I'm not sure why it doesn't update the signature to use &lt;code&gt;sha512&lt;/code&gt;, but &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44339/44339.5.diff" title="Attachment '44339.5.diff' in Ticket #44339"&gt;44339.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44339/44339.5.diff" title="Download"&gt;​&lt;/a&gt; is reasonable, I think.
&lt;/p&gt;
&lt;p&gt;
I've also included the results of &lt;code&gt;grunt precommit:emoji&lt;/code&gt;, which updates the list of HTML entities that twemoji can replace.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44339.5.diff attached to Ticket #44339</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 20 Jun 2018 03:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44339/44339.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44339/44339.5.diff/1529466313955447</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44339.4.diff attached to Ticket #44339</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Wed, 20 Jun 2018 03:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44339/44339.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44339/44339.4.diff/1529465359937092</guid>
      <description>&lt;p&gt;
Fresh run of npm install
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Wed, 20 Jun 2018 03:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:12/1529465333590292</guid>
      <description>&lt;p&gt;
Thanks @pento! Appreciate your patience-my first patch touching all this new build fun. I reverted, rm -rf node_modules, vvv already has 6.1 (that may have been upgraded after I did the twemoji update), and ran &lt;code&gt;npm install&lt;/code&gt;, but it still gave me a &lt;code&gt;sha1&lt;/code&gt; best I can tell. It made some other changes.
&lt;/p&gt;
&lt;p&gt;
Attaching what it gave me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44406 (Mismatch in the default value of the optional replacement argument in ...) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 20 Jun 2018 03:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44406</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44406/1529464976250769</guid>
      <description>&lt;p&gt;
There's a mismatch in the default value of the optional &lt;em&gt;replacement&lt;/em&gt; argument in the functions &lt;code&gt;do_action_deprecated()&lt;/code&gt;, &lt;code&gt;apply_filters_deprecated()&lt;/code&gt;  and &lt;code&gt;_deprecated_hook()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We have:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function do_action_deprecated( ..., $replacement = false, ... ) { ... }
function apply_filters_deprecated( ..., $replacement = false, ... ) { ... }
&lt;/pre&gt;&lt;p&gt;
but then on the other hand:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _deprecated_hook( ..., $replacement = null, ... ) { ... }
&lt;/pre&gt;&lt;p&gt;
containing a &lt;code&gt;! is_null( $replacement ) &lt;/code&gt; check.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;How to fix:&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
I think adjusting the private function &lt;code&gt;_deprecated_hook()&lt;/code&gt;, could be a safer route, as it's not supposed to be used by plugins or themes. Either adjust the optional input value to &lt;code&gt;false&lt;/code&gt;, or e.g. replace &lt;code&gt;! is_null( $replacement )&lt;/code&gt; with  &lt;code&gt;! $replacement &lt;/code&gt; to handle both.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;How to replicate - Example:&lt;/em&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'init', function() {
    add_action( 'foo_action', 'foo_action_callback' );
    do_action_deprecated( 'foo_action', array( '123' ), '4.9' );
    remove_action( 'foo_action', 'foo_action_callback' );
} );
function foo_action_callback( $var ) {
}
&lt;/pre&gt;&lt;p&gt;
&lt;em&gt;Actual message:
&lt;/em&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;foo_action is deprecated since version 4.9! Use instead.
&lt;/pre&gt;&lt;p&gt;
&lt;em&gt;Expected message:
&lt;/em&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;foo_action is deprecated since version 4.9 with no alternative available.
&lt;/pre&gt;&lt;p&gt;
Related ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10441" title="#10441: feature request: Show warning when deprecated hook is registered (closed: fixed)"&gt;#10441&lt;/a&gt; and changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37861" title="Allow action and filter hooks to be deprecated.
When a filter or ..."&gt;[37861]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 20 Jun 2018 02:44:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:11/1529462697444657</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://twitter.com/GaryPendergast/status/1005074470455861248"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Twitter&lt;/a&gt; is the only reliable commit notification system.
&lt;/p&gt;
&lt;p&gt;
Minor note on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44339/44339.3.diff" title="Attachment '44339.3.diff' in Ticket #44339"&gt;44339.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44339/44339.3.diff" title="Download"&gt;​&lt;/a&gt;, you need to revert the change to &lt;code&gt;package-lock.json&lt;/code&gt;, (maybe remove your &lt;code&gt;node_modules&lt;/code&gt; directory) upgrade to NPM 6.1, then run &lt;code&gt;npm install&lt;/code&gt; again, so that it creates &lt;code&gt;sha512&lt;/code&gt; signatures, instead of &lt;code&gt;sha1&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Wed, 20 Jun 2018 02:41:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:10/1529462462550073</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @kraftbj,
&lt;/p&gt;
&lt;p&gt;
Before it can go in to core I'm assigning it to @pento for committing to the w.org CDN (apologies if you have done/can do it, I'm not up to date with meta committers).
&lt;/p&gt;
&lt;p&gt;
If there is a risk &lt;code&gt;s.w.org/images/core/emoji/11&lt;/code&gt; has been warmed with 404s during testing, we might need to make the directory &lt;code&gt;s.w.org/images/core/emoji/11.0&lt;/code&gt; depending how aggressively 404s are cached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44374 (Remove deprecated contact methods) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 20 Jun 2018 02:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44374#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44374#comment:4/1529461281850100</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44374#comment:3" title="Comment 3"&gt;butterflymedia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And what is &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23588" title="Remove the three default contact methods (AIM, YIM, Jabber) for new ..."&gt;[23588]&lt;/a&gt; doing? Why is it checking &lt;code&gt;get_site_option('initial_db_version')&lt;/code&gt;? What is that version for?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I understand it:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$wp_db_version&lt;/code&gt;, defined in &lt;code&gt;wp-includes/version.php&lt;/code&gt;, is the latest committed revision number from the WordPress Trac, for changes that matters to the database schema.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;initial_db_version&lt;/code&gt; option stores the value of &lt;code&gt;$wp_db_version&lt;/code&gt; when the WordPress is installed.
&lt;/p&gt;
&lt;p&gt;
So checking &lt;code&gt;get_site_option('initial_db_version') &amp;lt; 23588 &lt;/code&gt; is to ensure &lt;em&gt;backward compatibility&lt;/em&gt;, that only activates these deprecated user contacts, for installs made before the deprecated change was made when &lt;code&gt;$wp_db_version&lt;/code&gt; was &lt;code&gt;23588&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
ps: I hope I'm not misunderstanding the ticket, but I think it would be helpful to refer to the core code that should be removed. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44287 (REST API: Declare user capability to perform actions using JSON Hyper ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 20 Jun 2018 00:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44287#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44287#comment:10/1529452906126246</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@TimothyBlynJacobs Thanks for updating.
&lt;/p&gt;
&lt;p&gt;
I've tested this patch by:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Applying the patch locally:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;grunt patch:https://core.trac.wordpress.org/attachment/ticket/44287/44287.1.patch
grunt build
&lt;/pre&gt;&lt;ol start="2"&gt;&lt;li&gt;Disabling Gutenberg's existing shim:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;-       add_filter( "rest_prepare_{$post_type}", 'gutenberg_add_target_schema_to_links', 10, 3 );
+       // add_filter( "rest_prepare_{$post_type}", 'gutenberg_add_target_schema_to_links', 10, 3 );
&lt;/pre&gt;&lt;ol start="3"&gt;&lt;li&gt;Verifying that the following UI is present when creating a Post as an Administrator:
&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Author
&lt;/li&gt;&lt;li&gt;Categories
&lt;/li&gt;&lt;li&gt;Visibility
&lt;/li&gt;&lt;li&gt;Sticky
&lt;/li&gt;&lt;/ul&gt;&lt;ol start="4"&gt;&lt;li&gt;Verifying that aforementioned UI isn't present when creating a Post as a Contributor.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I think this is good for commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>