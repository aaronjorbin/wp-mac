<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #9007 (Poor get_category_children() performance; rewrite to use ...) updated</title>
      
        <dc:creator>_timk</dc:creator>

      <pubDate>Sat, 31 Jan 2009 22:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9007#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9007#comment:5/1233439886000000</guid>
      <description>&lt;p&gt;
You're right, of course; my apologies.  I somehow managed to misread both the xdebug call trace and a quick grep through the tree to make sure the function wasn't an orphan.  It turns out the function was being called directly on a portion of the site under someone else's control.
&lt;/p&gt;
&lt;p&gt;
I support deprecation.  When I first encountered the function, I actually expected it to behave like get_term_children(), returning an array of category IDs or objects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 31 Jan 2009 20:36:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:13/1233434188000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9005#comment:12" title="Comment 12"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Exactly, will have to add the AJAX only on posts that are couple of days old.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd personally suggest a month at the very least. ;-)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, in theory the browser should display the page before calling wp-cron. However while testing that wasn't always the case. The test: added 5 seconds delay to wp-cron and ran it constantly. While accessing the site with two browsers concurrently, one would wait for 5 sec. sometimes before showing the post.
&lt;/p&gt;
&lt;p&gt;
Think that has been tried before too but didn't make it into core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1. if apache is configured to gzip the output before sending it to the browser, the php script would then need to complete before anything gets sent. and take forever for the page to load.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 20:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:12/1233433879000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9005#comment:9" title="Comment 9"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I smell trouble. Picture a super-cached site. Php, let alone WP, doesn't even get loaded...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually the opposite would be worse when a page with the AJAX js is cached.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
More recent posts are a different matter of course -- you wouldn't want an ajax call around when your site's on Digg.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly, will have to add the AJAX only on posts that are couple of days old.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9005#comment:11" title="Comment 11"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could you elaborate? wp_ob_end_flush_all() is called on shutdown with priority 1...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, in theory the browser should display the page before calling wp-cron. However while testing that wasn't always the case. The test: added 5 seconds delay to wp-cron and ran it constantly. While accessing the site with two browsers concurrently, one would wait for 5 sec. sometimes before showing the post.
&lt;/p&gt;
&lt;p&gt;
Think that has been tried before too but didn't make it into core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sat, 31 Jan 2009 20:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:11/1233432196000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9005#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... So instead let's fallback for them on making a direct call to wp_cron() on shutdown.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was the first thing I've tested. Unfortunately that would slow down page load considerably in some cases.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you elaborate?  &lt;code&gt;wp_ob_end_flush_all()&lt;/code&gt; is called on shutdown with priority 1, so all text should already be sent to the browser when wp_cron() does its thing.  I would think that while the request might still be open, the complete DOM should already be there, and all the JS, for example, would be able to do its thing.  And of course, this should only occur occasionally for a few blogs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 31 Jan 2009 20:01:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:10/1233432062000000</guid>
      <description>&lt;p&gt;
Imo, you could safely add the ajax call to old posts' permalinks (i.e. is_single()), regardless of the user agent, and regardless of pending cron jobs. Based on the blog stats I've seen, old posts only get so much traffic, and it's usually from visitors who arrive from search engines.
&lt;/p&gt;
&lt;p&gt;
More recent posts are a different matter of course -- you wouldn't want an ajax call around when your site's on Digg.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 31 Jan 2009 19:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:9/1233431672000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps we can try running wp-cron directly for all common bots and also together with wp-comments-post. Would rarely need the AJAX then as it's only added when there are cron jobs pending.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I smell trouble. Picture a super-cached site. Php, let alone WP, doesn't even get loaded in that case. If there happened to be no pending cron jobs when google crawls the entire site, then one is much about certain that no cron job will get done for ages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 19:45:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:8/1233431116000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9005#comment:6" title="Comment 6"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
k... one quick question: when the cron is called, do pages get cached? because if they do, that may lead to quite a few misses.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's no output from wp-cron unless there are php errors, so there's nothing to cache. Also the AJAX call has a different query string every time.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
also, I vaguely recall that part of the reason that cron wasn't on an ajax query was to "profit" from spammers and spiders on low traffic blogs. this might be worth a revisit.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure, that can be done. We could try looking at the request headers for the more common bots and run wp-cron then. Another idea was to run wp-cron together with wp-comment-post so all bots that post spam do something useful too...
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9005#comment:7" title="Comment 7"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The people who are helped by this--those whose servers can't resolve domain names--are in small minority...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In many cases the problem seems to be that the site domain name is mapped to 127.0.0.1 in the hosts file and the web server won't connect back to itself.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... So instead let's fallback for them on making a direct call to wp_cron() on shutdown.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was the first thing I've tested. Unfortunately that would slow down page load considerably in some cases.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A large proportion of most web traffic are bots, which we should be able to take advantage of for cron purposes, as Denis suggests. Consider a small blog, which may not get any human traffic in the middle of the night. Relying on the JS approach could still mean missed scheduled future posts.
It just seems hacky to have to count on website visitors with JavaScript enabled in order for cron to work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps we can try running wp-cron directly for all common bots and also together with wp-comments-post. Would rarely need the AJAX then as it's only added when there are cron jobs pending.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6612 (Problems with setting XML-RPC date using metWeblog.newPost()) reopened</title>
      
        <dc:creator>t0mmmmmmm</dc:creator>

      <pubDate>Sat, 31 Jan 2009 19:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6612#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6612#comment:3/1233430691000000</guid>
      <description>&lt;p&gt;
Reading dateCreated works fine, but you can't set it.
&lt;/p&gt;
&lt;p&gt;
The getIso() method (part of IXR_Date) is being called on a string in 5 different places.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #8996 (Serve application/xhtml+xml if browser, theme and plugins are compliant) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sat, 31 Jan 2009 19:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8996#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8996#comment:3/1233430262000000</guid>
      <description>&lt;p&gt;
I think it would be better to allow the core to specify sections that aren't XHTML compatible than ones that are. There will be more areas that are compatible with XHTML mime type than not.
&lt;/p&gt;
&lt;p&gt;
I think it is a good idea to allow plugins to specify that it is XHTML compatible. However, it is really only need for areas that are outputted to the main site. I have plugins which don't mess with the actual front page content, so it would not be needed for me to specify that my theme is compatible.
&lt;/p&gt;
&lt;p&gt;
I'm not sure, I think it can be assumed that plugins are XHTML compatible unless otherwise stated as well. There should be hooks in place, so that a plugin can be created that can be set up to specify which plugins are not compatible, so that if they are activated, it will trip the text/html mime type.
&lt;/p&gt;
&lt;p&gt;
There can be a function available for theme authors that allows them to set the MIME type, and if it isn't set, then it is assumed that the theme doesn't want to have the XHTML mime type set. It would have to be set in the functions.php file and hook into wp_init very late..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sat, 31 Jan 2009 18:44:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:7/1233427447000000</guid>
      <description>&lt;p&gt;
I don't think we should do it this way.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The people who are helped by this--those whose servers can't resolve domain names--are in small minority, and they are going to have lots of other problems that can't be solved: they can't send pingbacks/trackbacks, can't ping search engines, can't check for core / theme / plugin updates.  So instead let's fallback &lt;em&gt;for them&lt;/em&gt; on making a direct call to &lt;code&gt;wp_cron()&lt;/code&gt; on shutdown.
&lt;/li&gt;&lt;li&gt;A large proportion of most web traffic are bots, which we should be able to take advantage of for cron purposes, as Denis suggests.  Consider a small blog, which may not get any human traffic in the middle of the night.  Relying on the JS approach could still mean missed scheduled future posts.
&lt;/li&gt;&lt;li&gt;It just seems hacky to have to count on website visitors with JavaScript enabled in order for cron to work.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8999 (Completely New LiveJournal Importer) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 18:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8999#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8999#comment:2/1233427296000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10475" title="Completely New LiveJournal Importer, props beaulebens, see #8999"&gt;[10475]&lt;/a&gt;) Completely New LiveJournal Importer, props beaulebens, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8999" title="#8999: task (blessed): Completely New LiveJournal Importer (closed: fixed)"&gt;#8999&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [10475]: Completely New LiveJournal Importer, props beaulebens, see #8999</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 18:41:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10475/1233427295305226</guid>
      <description>&lt;p&gt;
Completely New LiveJournal Importer, props beaulebens, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8999" title="#8999: task (blessed): Completely New LiveJournal Importer (closed: fixed)"&gt;#8999&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 31 Jan 2009 18:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:6/1233426852000000</guid>
      <description>&lt;p&gt;
k... one quick question: when the cron is called, do pages get cached? because if they do, that may lead to quite a few misses.
&lt;/p&gt;
&lt;p&gt;
also, I vaguely recall that part of the reason that cron wasn't on an ajax query was to "profit" from spammers and spiders on low traffic blogs. this might be worth a revisit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 31 Jan 2009 18:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:5/1233426794000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 18:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:4/1233425653000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9005#comment:3" title="Comment 3"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... On wp_head, the job would need to complete before the actual page gets loaded...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, it does "head" AJAX request that is asynchronous (doesn't stop the execution of the rest of the scripts) and additionally has a timeout of 10ms (0.01 sec.) so the browser doesn't wait for returned content. "wp_footer" would have been a good place for it too, however many themes don't have the wp_footer() call.
&lt;/p&gt;
&lt;p&gt;
Also many hosts seem to give access to the "real" cron through their control panels. The changes to wp-cron make it easier to run it from crontab as a scheduled task either through wget, lynx or CLI if available.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>deprecate_get_category_children.9007.diff attached to Ticket #9007</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sat, 31 Jan 2009 17:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9007/deprecate_get_category_children.9007.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9007/deprecate_get_category_children.9007.diff/1233421677000000</guid>
      <description>&lt;p&gt;
Deprecate get_category_children.  Really, how often do you need a string of concatenated category children ids?
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9007 (Poor get_category_children() performance; rewrite to use ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sat, 31 Jan 2009 16:54:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9007#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9007#comment:4/1233420891000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
_timk, thanks for bringing this old function to light, but there are some odd things here.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You say that your problems stemmed from &lt;code&gt;get_categories&lt;/code&gt;'s calling &lt;code&gt;get_category_children&lt;/code&gt;, but &lt;code&gt;get_categories&lt;/code&gt; has &lt;em&gt;never&lt;/em&gt; used &lt;code&gt;get_category_children&lt;/code&gt;.  Up to version 2.3 of WordPress, &lt;code&gt;get_categories&lt;/code&gt; did use the private function &lt;code&gt;_get_cat_children&lt;/code&gt;, but that was dropped in 2.3 with the implementation of the new taxonomy system.
&lt;/li&gt;&lt;li&gt;Since WordPress 2.3 &lt;em&gt;no&lt;/em&gt; core functions have called &lt;code&gt;get_category_children&lt;/code&gt;.  It's basically a vestige from the 2.2 and earlier days when it was used to build category queries.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_category_children&lt;/code&gt;, having been used originally in core to build category queries, would have been better off as a private function, IMO.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_category_children&lt;/code&gt; is not used in core, and my grep of the plugins repository turns up its use in only 5 plugins.  Of those plugins, 3 seem to have been abandoned, as they're using the old 2.2 category tables.  The other 2 say "tested up to 2.5.1"
&lt;/li&gt;&lt;li&gt;So I think we should deprecate &lt;code&gt;get_category_children&lt;/code&gt;.  My patch does that.
&lt;/li&gt;&lt;li&gt;_timk, if you're having performance issues in WordPress 2.7 or trunk, it's probably due to something else---let's try to figure out what that is.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8735 (The function the_content_rss() is not working) closed</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sat, 31 Jan 2009 16:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8735#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8735#comment:3/1233420689000000</guid>
      <description>duplicate: &lt;p&gt;
Covered by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8706" title="#8706: defect (bug): Inconsistent use of the_content() and the_content_rss() (closed: invalid)"&gt;#8706&lt;/a&gt; I believe
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8735 (The function the_content_rss() is not working) updated</title>
      
        <dc:creator>glycoknob</dc:creator>

      <pubDate>Sat, 31 Jan 2009 16:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8735#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8735#comment:2/1233420264000000</guid>
      <description>&lt;p&gt;
This also breaks rss comment feeds with umlauts. in the &amp;lt;description&amp;gt; field html entity is used when the function is active.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 31 Jan 2009 13:53:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:3/1233410009000000</guid>
      <description>&lt;p&gt;
I think it should be very late on wp_footer, and on admin_footer, rather than just wp_head. On wp_head, the job would need to complete before the actual page gets loaded, due to the fact that it's in the head area -- much like google analytics when inserted in that area.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9007 (Poor get_category_children() performance; rewrite to use ...) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Sat, 31 Jan 2009 10:07:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9007#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9007#comment:3/1233396441000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9007 (Poor get_category_children() performance; rewrite to use ...) updated</title>
      
        <dc:creator>_timk</dc:creator>

      <pubDate>Sat, 31 Jan 2009 10:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9007#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9007#comment:2/1233396037000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9007 (Poor get_category_children() performance; rewrite to use ...) updated</title>
      
        <dc:creator>_timk</dc:creator>

      <pubDate>Sat, 31 Jan 2009 10:00:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9007#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9007#comment:1/1233396002000000</guid>
      <description>&lt;p&gt;
I re-ran the tests and came up with rough (time- and microtime-measured) execution times of 87 seconds and 0.00099 seconds for the original and revised implementations, respectively.
&lt;/p&gt;
&lt;p&gt;
Improvement of almost 5 orders of magnitude for my case, extracting just under 600 child categories from a total of 1500+ in the database.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>category-template.diff attached to Ticket #9007</title>
      
        <dc:creator>_timk</dc:creator>

      <pubDate>Sat, 31 Jan 2009 09:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9007/category-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9007/category-template.diff/1233394668000000</guid>
      <description>&lt;p&gt;
Patch: rewritten get_category_children() using get_term_children()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9003 (Deleting Parent Comment Causes Child Comments To Be Incorrectly Displayed) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sat, 31 Jan 2009 09:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9003#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9003#comment:1/1233394189000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Or optionally the "deleted" parent could be replaced by a placeholder, so that the other comments do not lose all their context..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9007 (Poor get_category_children() performance; rewrite to use ...) created</title>
      
        <dc:creator>_timk</dc:creator>

      <pubDate>Sat, 31 Jan 2009 09:26:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9007</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9007/1233394015000000</guid>
      <description>&lt;p&gt;
I'm working on a WordPress site with a few thousand categories.  The categories are structured a bit, with one master category, a few organizational subcategories, and then the bulk of the remaining categories under those.
&lt;/p&gt;
&lt;p&gt;
I'm looking to get a list of children for one of the middle-tier categories.  Running get_categories() with the 'child_of' parameter calls get_category_children().  This call hits the 30-second server time limit.  Outside the web environment, get_category_children() takes around a minute and 40 seconds to build a list of 589 categories on a relatively powerful desktop PC.
&lt;/p&gt;
&lt;p&gt;
I'll attach a revised, non-recursive implementation of get_category_children() that uses get_term_children() and runs several orders of magnitude faster than the original in my environment.  It returns almost instantly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8568 (Plugin activation hook should not be run when scraping errors.) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Sat, 31 Jan 2009 08:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8568#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8568#comment:8/1233389573000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The Request in Question is 'error_scrape'. I can not find a clear description what this means and for what the code is intended for.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It if for after a failed activation, To display the errors produced to the web browser.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyway, I adopt the criticism in this patch partly: It is simply unclear what should happen here. Is the Plugin Activated anyway afterwards or is this a Test _only_?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is a re-creation of a activation failure, with the intent to display the error to the browser.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about creating an additional Testdrive Process that is run only on Activation?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This happens, If upon activation, A error occurs, Then the plugin will not be activated, Instead, It'll direct back to the plugins page, an an iframe with error_scrape will load up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9006 (wp_page_menu link_before and link_after do not apply to home) created</title>
      
        <dc:creator>jhgravelle</dc:creator>

      <pubDate>Sat, 31 Jan 2009 05:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9006</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9006/1233379746000000</guid>
      <description>&lt;p&gt;
when selecting the home=1 option as well as the link_before and link_after options.  Whatever string you enter for link_before and link_after, are not applied to the Home link.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>8702.6.diff attached to Ticket #8702</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 31 Jan 2009 03:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8702/8702.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8702/8702.6.diff/1233371630000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8702 (HTTP API Updates) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 31 Jan 2009 03:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8702#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8702#comment:20/1233371608000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10474" title="Spawn cron with AJAX request, see #9005"&gt;r10474&lt;/a&gt; removes the wp_remote_post to fire off the cron and replaces it with an AJAX call.  Removing the https_local_ssl_verify filter since that was the only place it was in use at.
&lt;/p&gt;
&lt;p&gt;
8702.6.diff is the new patch with this removed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [10474]: Spawn cron with AJAX request, see #9005</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 02:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10474/1233368604003643</guid>
      <description>&lt;p&gt;
Spawn cron with AJAX request, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9005" title="#9005: enhancement: Cron spawning improvements (closed: fixed)"&gt;#9005&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 02:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:2/1233368604000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10474" title="Spawn cron with AJAX request, see #9005"&gt;[10474]&lt;/a&gt;) Spawn cron with AJAX request, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9005" title="#9005: enhancement: Cron spawning improvements (closed: fixed)"&gt;#9005&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 02:22:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005#comment:1/1233368548000000</guid>
      <description>&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10472" title="Lose hash check"&gt;[10472]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10473" title="Lose hash check"&gt;[10473]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9005 (Cron spawning improvements) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 31 Jan 2009 02:21:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9005</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9005/1233368468000000</guid>
      <description>&lt;p&gt;
Cron fails to start on some servers as the server either cannot connect back to itself or cannot resolve it's own name with DNS. Spawning it with an AJAX request fixes this.
&lt;/p&gt;
&lt;p&gt;
Also the processing can be optimized: instead of using an (evil) serialized array, each cron job can be separate entry that is deleted when the job is completed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>lj-api-importer.diff attached to Ticket #8999</title>
      
        <dc:creator>beaulebens</dc:creator>

      <pubDate>Sat, 31 Jan 2009 01:50:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8999/lj-api-importer.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8999/lj-api-importer.diff/1233366610000000</guid>
      <description>&lt;p&gt;
My bad - use this diff instead. Had a renaming issue from dev -&amp;gt; diff.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>3962.diff attached to Ticket #3962</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3962/3962.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3962/3962.diff/1233359096000000</guid>
      <description>&lt;p&gt;
First draft of smarter timezone support
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>term-sort.diff attached to Ticket #9004</title>
      
        <dc:creator>jhodgdon</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:44:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9004/term-sort.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9004/term-sort.diff/1233359082000000</guid>
      <description>&lt;p&gt;
Patch that adds filters for custom term sorting (patch is relative to the wp-includes directory)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9004 (More filtering in get_terms() and wp_generate_tag_cloud()) created</title>
      
        <dc:creator>jhodgdon</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:42:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9004</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9004/1233358934000000</guid>
      <description>&lt;p&gt;
I maintain a plugin that enables WordPress to switch languages at the click of a link.
&lt;/p&gt;
&lt;p&gt;
One issue that my users have is that lists of categories and tags that are supposed to be sorted by name end up not in alphabetical order if you switch languages. The reason for this is that the term name field contains something like this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;[lang_en]book[/lang_en][lang_es]libro[/lang_es]&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(the language mumbo-jumbo and the non-current language info is filtered out upon display). While this tag would belong in letter "B" (book) if you are reading in English, if you switch to Spanish, it should be in "L" (libro), and obviously sorting by the term name field is not going to get that right.
&lt;/p&gt;
&lt;p&gt;
I looked into resolving this issue, and I was able to fix the sorting by adding a couple of new filters in get_terms() in wp-includes/taxonomy.php, and one in wp_generate_tag_cloud() in wp-includes/category-template.php (see patch I am about to add to this ticket).
&lt;/p&gt;
&lt;p&gt;
I've tested the added filters patch against both 2.7 (I added the new filter lines manually, actually, not sure if the patch will apply) and 2.8-bleeding &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10469" title="Pluggables phpdoc updates. Props filosofo. fixes #9001"&gt;[10469]&lt;/a&gt; (the patch is against this version). I don't think it would do / could do / does anything bad, and it did allow me to add a few lines to my plugin and get everything sorted correctly. There's no straightforward way to get the sort working without this patch, aside from completely copying those two functions (and many others that depend on them) into the plugin, which would be a royal pain and difficult to maintain as well.
&lt;/p&gt;
&lt;p&gt;
So I'd appreciate it if you could add this in 2.7.1, or barring that, 2.8 would be OK. I even added to the doc headers. :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3962 (WordPress should adjust for DST ("location" appropriate)) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3962#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3962#comment:29/1233358821000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Okay, uploaded a first draft patch. This is a simple patch, not the best UI in the world, but it works. Needs more refinement and testing before I'd say it's ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9003 (Deleting Parent Comment Causes Child Comments To Be Incorrectly Displayed) created</title>
      
        <dc:creator>gogoplata</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:36:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9003</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9003/1233358579000000</guid>
      <description>&lt;p&gt;
When comment threading is enabled and a parent comment is deleted it's child comments are incorrectly displayed below all other comments, regardless of the time they were made. Deleting a parent comment should cause child comments to default to no parent and display in the comment list chronologically.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8954 (Setting timezone seems to have no effect) closed</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8954#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8954#comment:2/1233358578000000</guid>
      <description>invalid: &lt;p&gt;
Yes, not a bug. The post was made at, say, 8PM. Changing the timezone the blog is now in doesn't change when the post was made.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8154 (Differentiate between plural noun, verb and adjective Spam translations) updated</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8154#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8154#comment:12/1233358477000000</guid>
      <description>&lt;p&gt;
There is one more collision. - -the string Pending. Found by Kuba Zwolinski.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>more-more-collisions.diff attached to Ticket #8154</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8154/more-more-collisions.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8154/more-more-collisions.diff/1233358433000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8154 (Differentiate between plural noun, verb and adjective Spam translations) reopened</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Fri, 30 Jan 2009 23:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8154#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8154#comment:11/1233358404000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [10473]: Lose hash check</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 30 Jan 2009 22:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10473/1233354941281568</guid>
      <description>&lt;p&gt;
Lose hash check
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [10472]: Lose hash check</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 30 Jan 2009 22:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10472</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10472/1233354740088828</guid>
      <description>&lt;p&gt;
Lose hash check
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9002 (Custom columns not populated for user edit screen) created</title>
      
        <dc:creator>PeteHoliday</dc:creator>

      <pubDate>Fri, 30 Jan 2009 21:53:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9002</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9002/1233352395000000</guid>
      <description>&lt;p&gt;
While the "manage_posts_columns" filter is properly called, custom columns are not populated properly.
&lt;/p&gt;
&lt;p&gt;
Custom columns for other edit screens are populated by firing an action typically out of a switch statement. For custom columns in the post edit screen, this switch statement is located in template.php at line 1322. The default case (line 1482) fires the 'manage_posts_custom_column' action.
&lt;/p&gt;
&lt;p&gt;
The analogous switch statement for the users edit screen can be located at line 1843 of template.php. This switch statement lacks a default case, where the 'manage_users_custom_column' action should be fired. The default case should probably be inserted between lines 1869 and 1870.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8568 (Plugin activation hook should not be run when scraping errors.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 30 Jan 2009 21:51:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8568#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8568#comment:7/1233352277000000</guid>
      <description>&lt;p&gt;
It is a recommended practise to place Upgrade, Cleanup, Install-Checks etc. _in_ the Activation Hook &lt;a class="ext-link" href="http://funcdoc.wordpress.com/2008/01/08/writing-plugins-activation-and-deactivation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;1&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The Request in Question is 'error_scrape'. I can not find a clear description what this means and for what the code is intended for.
&lt;/p&gt;
&lt;p&gt;
As long as it remains unclear wether or not the plugin shouldn't be actived through 'error_scrape', the code should remain as it is and an additional Hook should not be called.
&lt;/p&gt;
&lt;p&gt;
Anyway, I adopt the criticism in this patch partly: It is simply unclear what should happen here. Is the Plugin Activated anyway afterwards or is this a Test _only_?
&lt;/p&gt;
&lt;p&gt;
What about creating an additional Testdrive Process that is run only on Activation?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [10471]: Bump</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 30 Jan 2009 21:07:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10471</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10471/1233349623544994</guid>
      <description>&lt;p&gt;
Bump
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [10470]: Add white-space:nowrap to plugins table action links, props DD32, ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 30 Jan 2009 19:15:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10470</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10470/1233342949331243</guid>
      <description>&lt;p&gt;
Add white-space:nowrap to plugins table action links, props DD32, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8810" title="#8810: enhancement: Add white-space:nowrap to plugins table action links (closed: fixed)"&gt;#8810&lt;/a&gt; for 2.7
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8810 (Add white-space:nowrap to plugins table action links) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 30 Jan 2009 19:15:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8810#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8810#comment:5/1233342949000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10470" title="Add white-space:nowrap to plugins table action links, props DD32, ..."&gt;[10470]&lt;/a&gt;) Add white-space:nowrap to plugins table action links, props DD32, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8810" title="#8810: enhancement: Add white-space:nowrap to plugins table action links (closed: fixed)"&gt;#8810&lt;/a&gt; for 2.7
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8997 (it's possible to comment on private posts.) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Fri, 30 Jan 2009 18:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8997#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8997#comment:1/1233341700000000</guid>
      <description>&lt;p&gt;
Could comments not be nonce protected? I mean the patch will prevent people from curl-ing in comments to private posts, but you can still submit as many comments as you like to normal published posts without actually using the submit form on the article's page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [10469]: Pluggables phpdoc updates. Props filosofo. fixes #9001</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 30 Jan 2009 18:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10469</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10469/1233338908471732</guid>
      <description>&lt;p&gt;
Pluggables phpdoc updates. Props filosofo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9001" title="#9001: defect (bug): Minor Documentation Fixes for Pluggables (closed: fixed)"&gt;#9001&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9001 (Minor Documentation Fixes for Pluggables) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 30 Jan 2009 18:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9001#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9001#comment:1/1233338908000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10469" title="Pluggables phpdoc updates. Props filosofo. fixes #9001"&gt;[10469]&lt;/a&gt;) Pluggables phpdoc updates. Props filosofo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9001" title="#9001: defect (bug): Minor Documentation Fixes for Pluggables (closed: fixed)"&gt;#9001&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8999 (Completely New LiveJournal Importer) updated</title>
      
        <dc:creator>beaulebens</dc:creator>

      <pubDate>Fri, 30 Jan 2009 16:47:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8999#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8999#comment:1/1233334066000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>pluggable_doc_fixes.9001.diff attached to Ticket #9001</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Fri, 30 Jan 2009 15:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9001/pluggable_doc_fixes.9001.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9001/pluggable_doc_fixes.9001.diff/1233328468000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9001 (Minor Documentation Fixes for Pluggables) created</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Fri, 30 Jan 2009 15:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9001</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9001/1233328447000000</guid>
      <description>&lt;p&gt;
Just some wrong @sinces.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8950 (Typo fix: occu[r]ed) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 30 Jan 2009 14:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8950#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8950#comment:1/1233325831000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10468" title="Typo fix: occured/occurred, props demetris, fixes #8950"&gt;[10468]&lt;/a&gt;) Typo fix: occured/occurred, props demetris, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8950" title="#8950: defect (bug): Typo fix: occu[r]ed (closed: fixed)"&gt;#8950&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [10468]: Typo fix: occured/occurred, props demetris, fixes #8950</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 30 Jan 2009 14:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10468</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10468/1233325830701764</guid>
      <description>&lt;p&gt;
Typo fix: occured/occurred, props demetris, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8950" title="#8950: defect (bug): Typo fix: occu[r]ed (closed: fixed)"&gt;#8950&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [10467]: Ensure get_the_title() is escaped in feed links, props Viper007Bond, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 30 Jan 2009 13:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10467</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10467/1233323408262820</guid>
      <description>&lt;p&gt;
Ensure get_the_title() is escaped in feed links, props Viper007Bond, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8878" title="#8878: enhancement: Allow theme developers to have feed links automatically outputted (closed: fixed)"&gt;#8878&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8878 (Allow theme developers to have feed links automatically outputted) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 30 Jan 2009 13:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8878#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8878#comment:11/1233323408000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10467" title="Ensure get_the_title() is escaped in feed links, props Viper007Bond, ..."&gt;[10467]&lt;/a&gt;) Ensure get_the_title() is escaped in feed links, props Viper007Bond, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8878" title="#8878: enhancement: Allow theme developers to have feed links automatically outputted (closed: fixed)"&gt;#8878&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [10466]: Support output_handler = ob_gzhandler in script/style compressor, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 30 Jan 2009 13:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/10466</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/10466/1233323105158728</guid>
      <description>&lt;p&gt;
Support output_handler = ob_gzhandler in script/style compressor, props DD32, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9000" title="#9000: defect (bug): Support output_handler = ob_gzhandler in script/style compresser (closed: fixed)"&gt;#9000&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9000 (Support output_handler = ob_gzhandler in script/style compresser) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 30 Jan 2009 13:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9000#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9000#comment:1/1233323105000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10466" title="Support output_handler = ob_gzhandler in script/style compressor, ..."&gt;[10466]&lt;/a&gt;) Support output_handler = ob_gzhandler in script/style compressor, props DD32, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9000" title="#9000: defect (bug): Support output_handler = ob_gzhandler in script/style compresser (closed: fixed)"&gt;#9000&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>8878.4.patch attached to Ticket #8878</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 30 Jan 2009 13:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8878/8878.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8878/8878.4.patch/1233322512000000</guid>
      <description>&lt;p&gt;
Ensure get_the_title() is escaped
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8878 (Allow theme developers to have feed links automatically outputted) reopened</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 30 Jan 2009 13:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8878#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8878#comment:10/1233322459000000</guid>
      <description>&lt;p&gt;
DD32 caught a bug with the single post's comments feed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if the_title contains HTML (ie. added by a filter), Then its not being properly escaped
&lt;/pre&gt;&lt;p&gt;
Incoming patch.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>9000.diff attached to Ticket #9000</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Fri, 30 Jan 2009 10:44:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9000/9000.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9000/9000.diff/1233312263000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9000 (Support output_handler = ob_gzhandler in script/style compresser) created</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Fri, 30 Jan 2009 10:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9000</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9000/1233312217000000</guid>
      <description>&lt;p&gt;
My host setup uses &lt;code&gt;output_handler = ob_gzhandler&lt;/code&gt; in order to allow for non-compressed output (Which isnt possible with zlib) for certain scripts, Under the current trunk, In the event that this setup is used, WordPress becomes unable to load the Styles (and quite possibly scripts).
&lt;/p&gt;
&lt;p&gt;
Whilst theres a test in the JS loader, i'm not sure how its working.. since i was getting a non-styled page under IE/FF.. (Opera handles double gzip encoding fine..)
&lt;/p&gt;
&lt;p&gt;
The attached patch adds a test for the above case to the load files.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8989 (RSS doesn't work in last update) updated</title>
      
        <dc:creator>bi0xid</dc:creator>

      <pubDate>Fri, 30 Jan 2009 09:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8989#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8989#comment:9/1233308247000000</guid>
      <description>&lt;p&gt;
Thanks. I'll try.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8989 (RSS doesn't work in last update) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Fri, 30 Jan 2009 09:36:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8989#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8989#comment:8/1233308179000000</guid>
      <description>&lt;p&gt;
add &lt;code&gt;define('WP_DEBUG', true);&lt;/code&gt; to your config file, see if any PHP errors are output then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8999 (Completely New LiveJournal Importer) created</title>
      
        <dc:creator>beaulebens</dc:creator>

      <pubDate>Fri, 30 Jan 2009 09:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8999</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8999/1233306570000000</guid>
      <description>&lt;p&gt;
Attached is a diff that, when applied to a recent revision on trunk (developed against &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10375" title="Add Content-Type header to admin-ajax and press this, props ..."&gt;r10375&lt;/a&gt;) will replace the current LiveJournal importer with a new version.
&lt;/p&gt;
&lt;p&gt;
This one uses their API to import posts and comments, and has been tested to handle over 3,500 posts and 190,000 comments. The data handling is all split up and uses AJAX to try to allow it to handle bigger imports.
&lt;/p&gt;
&lt;p&gt;
It also tries to load as much meta data on posts in LJ as custom fields/postmeta in WP, and translates lj-cut into &amp;lt; !--more--&amp;gt; and lj-user into real links.
&lt;/p&gt;
&lt;p&gt;
It'd be great to get some more people to try this out and see if it's "core-worthy".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8989 (RSS doesn't work in last update) updated</title>
      
        <dc:creator>bi0xid</dc:creator>

      <pubDate>Fri, 30 Jan 2009 08:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8989#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8989#comment:7/1233302934000000</guid>
      <description>&lt;p&gt;
&lt;em&gt;functions.php&lt;/em&gt; doesn't work for me. If I use 2.7 functions.php, it works correctly. But if I use latest, feed is broken :/
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8989 (RSS doesn't work in last update) updated</title>
      
        <dc:creator>bi0xid</dc:creator>

      <pubDate>Fri, 30 Jan 2009 06:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8989#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8989#comment:6/1233296739000000</guid>
      <description>&lt;p&gt;
It's something in wp-includes directory. I'm gonna upgrade files one-by-one to detect where is the fail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8989 (RSS doesn't work in last update) updated</title>
      
        <dc:creator>bi0xid</dc:creator>

      <pubDate>Fri, 30 Jan 2009 06:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8989#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8989#comment:5/1233296188000000</guid>
      <description>&lt;p&gt;
2.7 with no plugins works properly, RSS URI well formed and RSS well formed.
&lt;/p&gt;
&lt;p&gt;
Trying nightly build.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8989 (RSS doesn't work in last update) updated</title>
      
        <dc:creator>bi0xid</dc:creator>

      <pubDate>Fri, 30 Jan 2009 06:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8989#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8989#comment:4/1233295574000000</guid>
      <description>&lt;p&gt;
It's a live site, &lt;a class="ext-link" href="http://raven.es"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://raven.es&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I don't know what can be wrong. I have deactivated all plugins and it happens again.
I'm gonna try today back to 2.7 to see what is wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>