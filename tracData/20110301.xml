<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #16720 (Network Admin - Site Search breaks Row Action Links) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 01 Mar 2011 23:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16720#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16720#comment:7/1299023059637561</guid>
      <description>&lt;p&gt;
That part of code is only executed for directory installs so I am sure subdomain installs will not have this problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16720 (Network Admin - Site Search breaks Row Action Links) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 23:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16720#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16720#comment:6/1299022353178344</guid>
      <description>&lt;p&gt;
Patch works for me on subfolders (cannot repro on subdomains like nerx can, but it doesn't BREAK anythign I can see).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16720 (Network Admin - Site Search breaks Row Action Links) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 01 Mar 2011 23:06:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16720#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16720#comment:5/1299020803870393</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
see patch!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16720.diff attached to Ticket #16720</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 01 Mar 2011 23:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16720/16720.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16720/16720.diff/1299020774760829</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16639 (Site inaccessible after upgrade to 3.1, due to endless canonical redirects) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 22:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16639#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16639#comment:17/1299020119696825</guid>
      <description>&lt;p&gt;
After discussion with dd32, nacin, and MarkJaquith, we've decided to turn off canonical redirects for IIS again until we can figure out what is going on.  None of us can reproduce the problem right now, so let's just turn it off and figure it out for 3.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11359 (Don't nofollow links in admin comments) updated</title>
      
        <dc:creator>Everfluxx</dc:creator>

      <pubDate>Tue, 01 Mar 2011 22:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11359#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11359#comment:9/1299020071874956</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11359#comment:6" title="Comment 6"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Still outstanding in 3.1: current version also adds a "rel=external nofollow" attribute to all author URI links in comments, regardless whether the author URI is actually external.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The rel="external" attribute indicates that the referenced document is not part of the same web site as the current document. (&lt;a class="ext-link" href="https://code.google.com/p/doctype/wiki/RelExternalAttribute"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Source&lt;/a&gt;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I wrote an &lt;a class="ext-link" href="http://www.everfluxx.com/open-letter-to-matt-mullenweg/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;open letter to Matt Mullenweg&lt;/a&gt; about the default nofollow on admin comment links issue, and Matt replied to me via email saying that (I'm quoting him verbatim):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
People are free to modify WP's default behaviour through plugins, of which there are many in our official directory. I think the current behaviour is the best as default based on our own experience and advice from Google when nofollow was introduced.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Matt did note provide further details as to why he thinks that the current behavior is "the best as default", and did not answer my questions:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How can nofollowing editorial links help combat link spam? How can that benefit users, or search engines?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So, if he didn't change his mind, I didn't change mine, either.
&lt;/p&gt;
&lt;p&gt;
Therefore, I propose to implement the following behavior as default in WordPress:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Automatically add the "rel=nofollow" attribute to all links in comments, except those posted or edited by users with &lt;a class="ext-link" href="https://codex.wordpress.org/Roles_and_Capabilities#edit_comment"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;edit_comment&lt;/a&gt; capability.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Since I'm not familiar with the discussion, submission and review process for core updates, any pointers or advice would be greatly appreciated. I'm willing to post this to the wp-hackers mailing list and get feedback from other developers and users if deemed necessary. Last but not least, I am willing to contribute a patch for this enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 22:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:16/1299019119689190</guid>
      <description>&lt;p&gt;
Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 22:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:6/1299018541824107</guid>
      <description>&lt;p&gt;
No problems so far in testing.  Single post queries with various permalinks look good.  Category queries look good. Seems to fix The Events Calendar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16720 (Network Admin - Site Search breaks Row Action Links) updated</title>
      
        <dc:creator>nerx</dc:creator>

      <pubDate>Tue, 01 Mar 2011 22:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16720#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16720#comment:4/1299017885070341</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested with Subdomain from [1und1.de] Result: Same as &lt;strong&gt;subFOLDER&lt;/strong&gt;!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16721 (3.1 adding "hide-if-js" class to edit post/page) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 22:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16721#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16721#comment:3/1299017133010563</guid>
      <description>invalid: &lt;p&gt;
3.1 hides many metaboxes by default to simplify the posting interface. As duck_ mentions, they can be enabled via Screen Options.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16652 (network_site_url() does not use main site) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:55:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16652#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16652#comment:3/1299016513081607</guid>
      <description>&lt;p&gt;
If it is put on the domain vs. the main site, the blog id will almost always be 1.  That's nice, although we might need a more convenient programmatic way of getting the id for the domain blog.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14825 ('Sticky' Posts from excluded category still included in WP_Query results) updated</title>
      
        <dc:creator>newmediarts</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14825#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14825#comment:5/1299016478051212</guid>
      <description>&lt;p&gt;
Just a question:
If you wanted to try reducing this down to one query, wouldn't it be easier to do something like the following:
&lt;/p&gt;
&lt;p&gt;
Given &lt;code&gt;get_option("sticky_posts") == array(10, 12, 16)&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT * from wp_posts
WHERE wp_posts.post_type = "post"
ORDER_BY wp_posts.ID IN (10, 12, 16) DESC, # sticky_posts IDs
wp_posts.post_date DESC # regular orderby clause
&lt;/pre&gt;&lt;p&gt;
instead of doing two separate SQL queries? (simplified code used above)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16720 (Network Admin - Site Search breaks Row Action Links) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16720#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16720#comment:3/1299015838778587</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16721 (3.1 adding "hide-if-js" class to edit post/page) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:43:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16721#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16721#comment:2/1299015824646287</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sounds like you need to go to the Screen Options drop down tab (top right just below the grey header) and enable the meta boxes. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14212" title="#14212: enhancement: Hide more meta boxes by default (closed: fixed)"&gt;#14212&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14825 ('Sticky' Posts from excluded category still included in WP_Query results) updated</title>
      
        <dc:creator>newmediarts</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:37:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14825#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14825#comment:4/1299015477170761</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This patch seems to be working fine for me—thanks, Gary!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16389 (register_shutdown_function isn't run in SHORTINIT mode) updated</title>
      
        <dc:creator>jtclarke</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16389#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16389#comment:15/1299015313535428</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16720 (Network Admin - Site Search breaks Row Action Links) updated</title>
      
        <dc:creator>firmdot</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16720#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16720#comment:2/1299014831809491</guid>
      <description>&lt;p&gt;
I'm having same/similar issue.
&lt;/p&gt;
&lt;p&gt;
I go to Network Admin, Search sites. Search for a site with a wildcard i.e. photo* the results show up just fine, HOWEVER after clicking on any of the site options for the found site (i.e. Edit, Spam, Archive, Delete) the URL changes to:
&lt;/p&gt;
&lt;p&gt;
www.mydomain.com/&lt;strong&gt;photo%&lt;/strong&gt;/wp-admin/network/site-info.php?id=32
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16721 (3.1 adding "hide-if-js" class to edit post/page) updated</title>
      
        <dc:creator>mattcass</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16721#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16721#comment:1/1299014552649342</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen shot 2011-03-01 at 1.16.51 PM.jpg attached to Ticket #16721</title>
      
        <dc:creator>mattcass</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16721/Screen%20shot%202011-03-01%20at%201.16.51%20PM.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16721/Screen%20shot%202011-03-01%20at%201.16.51%20PM.jpg/1299014454131575</guid>
      <description>&lt;p&gt;
screenshot of missing sections below post from fresh install of 3.1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16721 (3.1 adding "hide-if-js" class to edit post/page) created</title>
      
        <dc:creator>mattcass</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:20:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16721</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16721/1299014424830901</guid>
      <description>&lt;p&gt;
Hey All, this sure looks like a bug in 3.1.  Recently updated 2 blogs from 3.0.5 to 3.1 and it's happening on both of them.  When editing a post or a page, all of the sections below the content editor are missing.
&lt;/p&gt;
&lt;p&gt;
Specifically, #normal-sortables and #advanced-sortables are having the class "hide-if-js" added to them.  This hides all of the sections that usually show up in this area, such as custom fields, author, comments, etc.
&lt;/p&gt;
&lt;p&gt;
I am running the plugin Adminimize on both blogs, but I have disabled it and the issues persist.  Have also disabled ALL other plugins but no luck.
&lt;/p&gt;
&lt;p&gt;
Have confirmed that changing the blog to use the 2010 theme does not make a difference.  The sections are still missing regardless of the theme.
&lt;/p&gt;
&lt;p&gt;
Also setup a fresh install of 3.1 on a new database and am able to replicate the issue.
&lt;/p&gt;
&lt;p&gt;
The only thing I can do to get these sections to show is overwrite the css in my theme's functions.php:
&lt;/p&gt;
&lt;p&gt;
function fix_wp_display_bug () {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
echo '&amp;lt;style type="text/css"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
#post-body #post-body-content #normal-sortables .hide-if-js { display:block; }
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/style&amp;gt;';
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
add_action('admin_head', 'fix_wp_display_bug');
&lt;/p&gt;
&lt;p&gt;
Is this a bug?
Thanks,
Matt
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16720 (Network Admin - Site Search breaks Row Action Links) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 21:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16720#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16720#comment:1/1299013276151781</guid>
      <description>&lt;p&gt;
Forum post wherein we sorted this out: &lt;a class="ext-link" href="http://wordpress.org/support/topic/network-admin-user-and-site-admin-links-dont-work-31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/network-admin-user-and-site-admin-links-dont-work-31&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(I can't repro the user issues he had, but I can the blog search)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16720 (Network Admin - Site Search breaks Row Action Links) created</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 20:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16720</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16720/1299012613866009</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://blog.dearbornschools.org/webmaster/files/2011/03/networkadmin_issue.swf"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.dearbornschools.org/webmaster/files/2011/03/networkadmin_issue.swf&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Basically.
&lt;/p&gt;
&lt;p&gt;
If you go to wp-admin/network/sites.php and try to mark a site as spam or anything on the hover-over links, it's fine.
&lt;/p&gt;
&lt;p&gt;
BUT if you SEARCH for a site, it CHANGES those row action links from
&lt;/p&gt;
&lt;p&gt;
/wp-admin/network/edit.php?action=confirm&amp;amp;action2=spamblog&amp;amp;id=11......
&lt;/p&gt;
&lt;p&gt;
to
&lt;/p&gt;
&lt;p&gt;
/SEARCHVALUE/wp-admin/network/edit.php?action=confirm&amp;amp;action2=spamblog&amp;amp;id=11......
&lt;/p&gt;
&lt;p&gt;
Which blows up in your face.
&lt;/p&gt;
&lt;p&gt;
Worse is if you use a wildcard, then you get SEARCHVALUE% as the URL.
&lt;/p&gt;
&lt;p&gt;
Here's the best part.  It only happens on subFOLDER multisite.  Works perfectly fine on subdomain.
&lt;/p&gt;
&lt;p&gt;
I was able to reproduce it on two separate subfolder installs, one with no plugins at all.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16718 (Deprecate in_category in favor of has_category) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Tue, 01 Mar 2011 20:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16718#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16718#comment:2/1299011540824587</guid>
      <description>&lt;p&gt;
Ah.. well, in that case, it might be worth making one call the other in order to avoid duplicated code and/or to prevent future changes from not happening to both of them.
&lt;/p&gt;
&lt;p&gt;
Also, might be worth switching twentyten to use has_category.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16719 (Remove vestige add_users capability) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 20:17:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16719</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16719/1299010658785937</guid>
      <description>&lt;p&gt;
Listed in populate_roles_300() and added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14174" title="Add add_users cap to allow distringuishing between adding and creating ..."&gt;[14174]&lt;/a&gt;, it was never used. The situation it was presumably introduced for now falls on promote_users.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16652 (network_site_url() does not use main site) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 20:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16652#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16652#comment:2/1299010290928445</guid>
      <description>&lt;p&gt;
I'm leaning toward the network admin being for the main site. It might cause funky URLs, but then you at least know which blog is running in the background (in the case of plugins etc).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 20:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:13/1299010180786881</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This really isn't major. The admin bar is opt-out, and a theme can also specify its own CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16718 (Deprecate in_category in favor of has_category) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 20:08:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16718#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16718#comment:1/1299010121561328</guid>
      <description>&lt;p&gt;
There was some discussion on this, possibly in IRC... Basically, in_category() is such an old function used by so much code, simply renaming it for pure consistency will be annoying, especially for reviewed themes. We're evil,  but not that evil. Introducing has_category() but not deprecating is_category() seemed like a fine idea at the time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>nerx</dc:creator>

      <pubDate>Tue, 01 Mar 2011 19:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:12/1299009589547265</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Should actually be &lt;strong&gt;Priority&lt;/strong&gt;: &lt;em&gt;High&lt;/em&gt; - Having problems with my Admin Bar CSS because of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt;!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16001 (Invited but not activated users can get lost) updated</title>
      
        <dc:creator>r-a-y</dc:creator>

      <pubDate>Tue, 01 Mar 2011 19:43:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16001#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16001#comment:7/1299008620630382</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16001#comment:6" title="Comment 6"&gt;garyc40&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;I don't know if &lt;code&gt;wp_signups&lt;/code&gt; ever gets cleaned up (those items where &lt;code&gt;active = 1&lt;/code&gt;)? If it does, could you point me to the code that does it?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I was just wondering about this myself.  wpmu_delete_user() doesn't appear to delete the accompanying data in the wp_signups table and was wondering if there was an underlying reason.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16715 (The "Create Menu" button should not be duplicated in the footer) updated</title>
      
        <dc:creator>nerx</dc:creator>

      <pubDate>Tue, 01 Mar 2011 19:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16715#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16715#comment:1/1299006935768579</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is kind of &lt;strong&gt;unnecessary&lt;/strong&gt; just remove it. There are plenty of Plugins/Hacks but still kind of a &lt;strong&gt;good point&lt;/strong&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16717 (Wrong error handling in query.php::get_posts()) updated</title>
      
        <dc:creator>nerx</dc:creator>

      <pubDate>Tue, 01 Mar 2011 19:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16717#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16717#comment:2/1299006827781257</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is new, I'm guessing you did play with the theme functions? Because &lt;em&gt;$cat_query&lt;/em&gt; should not get &lt;em&gt;&lt;a class="missing wiki"&gt;field?&lt;/a&gt;&lt;/em&gt; if you &lt;em&gt;handling&lt;/em&gt; in post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16714 (Introduce capabilities for adding new posts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 18:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16714#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16714#comment:2/1299005638558718</guid>
      <description>&lt;p&gt;
+1 as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>tigertech</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:16/1299002248304537</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16706#comment:13" title="Comment 13"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I ran some tests with SQL_NO_CACHE on (22600+ posts):
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By the way, that's still small enough that MySQL doesn't resort to a filesort.
&lt;/p&gt;
&lt;p&gt;
If you try the same thing when one of the &lt;code&gt;category__and&lt;/code&gt; categories is a category containing more than, say, 50000 posts, MySQL will switch to a filesort and the GROUP BY version of the test will suddenly start to take minutes/hours.
&lt;/p&gt;
&lt;p&gt;
(I'm not suggesting you actually do it -- just emphasizing that the problem can get much, much worse than these results indicate.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>tigertech</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:15/1299001891993849</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16706#comment:13" title="Comment 13"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I ran some tests with SQL_NO_CACHE on (22600+ posts):
&lt;/p&gt;
&lt;p&gt;
GROUP BY: 0.9389 sec
&lt;/p&gt;
&lt;p&gt;
COUNT: 0.1706 sec
&lt;/p&gt;
&lt;p&gt;
JOINs: 0.0013 sec
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, that makes sense. The fundamental problem with the first two is that the DEPENDENT SUBQUERY runs the inner query once for each outer row. My proposed change isn't the fastest possible; it merely makes sure that the subquery prefers the index that returns only a handful of rows (keeping the inner query manageable), instead of using the index that potentially returns tens of thousands of rows requiring a filesort that completely kills everything.
&lt;/p&gt;
&lt;p&gt;
The JOIN method avoids running a DEPENDENT SUBQUERY and is superior, but is unfortunately not possible in every case.
&lt;/p&gt;
&lt;p&gt;
I agree that using JOIN where possible, and my suggestion when it's not, seems to be the best possible solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [338]: More WP_Query properties and in order listed in WP_Query. Test verbose ...</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/338/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/338/tests/1299001716768466</guid>
      <description>&lt;p&gt;
More WP_Query properties and in order listed in WP_Query. Test verbose rules.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>tigertech</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:43:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:14/1299001421101776</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16706#comment:12" title="Comment 12"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I presume that &lt;code&gt;COUNT(1)&lt;/code&gt; can be safely replaced with the more common &lt;code&gt;COUNT(*)&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure, that's fine -- whichever is the WordPress style. (The "&lt;code&gt;COUNT(1)&lt;/code&gt;" style is faster in some cases involving NULLs, so I use it out of habit, but in this case it doesn't matter.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16718 (Deprecate in_category in favor of has_category) created</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16718/1299000134265212</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12526" title="#12526: enhancement: Introduce has_term() to the tax API (closed: fixed)"&gt;#12526&lt;/a&gt; introduced has_category. There was some patches there which did and did not deprecate in_category.
&lt;/p&gt;
&lt;p&gt;
End result is that they're now both in category-template.php, doing the exact same thing (serving as a wrapper to has_term).
&lt;/p&gt;
&lt;p&gt;
I think we need some naming consistency here. Deprecate one or the other of them in 3.2, perhaps.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16652 (network_site_url() does not use main site) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16652#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16652#comment:1/1298999822998403</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16717 (Wrong error handling in query.php::get_posts()) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16717#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16717#comment:1/1298999560313076</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16717.diff attached to Ticket #16717</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16717/16717.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16717/16717.diff/1298999294127979</guid>
      <description>&lt;p&gt;
Thanks to rboren for confirming the method, check !is_wp_error()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16652.diff attached to Ticket #16652</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 17:06:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16652/16652.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16652/16652.diff/1298999165635905</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16716 (Page Screen Options: Number of Columns Not Switching Correctly to 2) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 01 Mar 2011 16:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16716#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16716#comment:4/1298997970593067</guid>
      <description>duplicate: &lt;p&gt;
Duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16493" title="#16493: defect (bug): Screen options Number of layout (closed: invalid)"&gt;#16493&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13476" title="#13476: enhancement: Switching columns in screen options make you loose all your setting in ... (closed: wontfix)"&gt;#13476&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14423" title="#14423: enhancement: Retain 1 vs. 2 column editing settings independently (closed: duplicate)"&gt;#14423&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 01 Mar 2011 16:35:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:6/1298997308739233</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16695/16695.4.diff" title="Attachment '16695.4.diff' in Ticket #16695"&gt;16695.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16695/16695.4.diff" title="Download"&gt;​&lt;/a&gt;, which is a complete refactoring of &lt;code&gt;quicktags.dev.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
What has been improved:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Code passes &lt;a class="ext-link" href="http://www.jslint.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;JSLint&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Code duplication is addressed. Reduce total lines from 579 to 384.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;del&gt;Unobtrusive&lt;/del&gt; Obtrusive JavaScript such as &lt;code&gt;document.write()&lt;/code&gt; or &lt;code&gt;onclick="edInsertButton(...)"&lt;/code&gt; is not used.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Everything is properly namespaced, i.e. no more cluttered global scope.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Quick Links is removed
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;An API is provided for plugins and themes to add buttons to quicktags toolbar. Previously they either have to hack quicktags.js directly, or use the global &lt;code&gt;edButtons&lt;/code&gt; array. The API is based on JavaScript prototypal inheritance pattern.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
To add a button, a developer can extend QuickTags.Button or QuickTags.TagButton, override the callback to provide the desired functionality, then add the button by using:
&lt;/p&gt;
&lt;pre class="wiki"&gt;QuickTags.registerButton(id, btnClass);
&lt;/pre&gt;&lt;p&gt;
To extend the base classes:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// DivButton which inherits from TagButton
var DivButton = function() {
	// initialize properties, like parent::__construct() in PHP
	QuickTags.TagButton.call(this, 'div', 'div', '/div', 'd');
	// override the callback when the button is clicked
	this.callback = function(element, canvas, toolbar) {
		// do something
		// ...
		// then call the default TagButton callback, just like parent::callback() in PHP
		QuickTags.TagButton.prototype.callback.call(this, element, canvas, toolbar);
	};
};
// inherit all methods and properties from TagButton
DivButton.prototype = new QuickTags.TagButton();
&lt;/pre&gt;&lt;p&gt;
This of course still needs more testing and feedback from core devs, but I believe it's definitely an improvement compared to the original code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16695.4.diff attached to Ticket #16695</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 01 Mar 2011 16:31:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16695/16695.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16695/16695.4.diff/1298997095303315</guid>
      <description>&lt;p&gt;
remove console.log calls
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16704 (Do not do canonical redirects for unregistered feeds) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 16:23:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16704#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16704#comment:2/1298996592196756</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16704.diff attached to Ticket #16704</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 16:19:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16704/16704.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16704/16704.diff/1298996390573284</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16716 (Page Screen Options: Number of Columns Not Switching Correctly to 2) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Tue, 01 Mar 2011 16:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16716#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16716#comment:3/1298996364747870</guid>
      <description>&lt;p&gt;
In order for it to go back to the way you had it before the switch, we would have to store each previous position in the database. There should be no reason to do that. Once it changes, it's saved for good and you'll have to change it back manually. Unless we possibly put in a "Reset" option and only store the default positioning?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16695.3.diff attached to Ticket #16695</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 01 Mar 2011 16:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16695/16695.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16695/16695.3.diff/1298995613896312</guid>
      <description>&lt;p&gt;
completely refactor quicktags.dev
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12307 (files missing closing php tags) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Tue, 01 Mar 2011 15:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12307#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12307#comment:18/1298992024766309</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
wp-includes/default-filters.php has a blank line after the closing tag. Is that intended?
&lt;/p&gt;
&lt;p&gt;
I think, we should drop the closing tags. They do not add any value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16716 (Page Screen Options: Number of Columns Not Switching Correctly to 2) updated</title>
      
        <dc:creator>depi</dc:creator>

      <pubDate>Tue, 01 Mar 2011 14:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16716#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16716#comment:2/1298990460743099</guid>
      <description>&lt;p&gt;
Yes, that's right. However I think it should go back to its previous position. Also is it quite hard to put it back, is is hard to get that area for stick to appear.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16717 (Wrong error handling in query.php::get_posts()) created</title>
      
        <dc:creator>fabifott</dc:creator>

      <pubDate>Tue, 01 Mar 2011 14:31:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16717</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16717/1298989860416028</guid>
      <description>&lt;p&gt;
The bug seems to be in a back compat block, so not very important:
In lines 2187 and 2199 get_term_by() is called. In following line it is just checked if it returns are logical true value.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$the_cat = get_term_by( $cat_query['field'], $cat_query['terms'][0], 'category' );
if ( $the_cat ) {
	$this-&amp;gt;set( 'cat', $the_cat-&amp;gt;term_id );
	$this-&amp;gt;set( 'category_name', $the_cat-&amp;gt;slug );
}
&lt;/pre&gt;&lt;p&gt;
But get_term_by calls get_term(), and this function can return WP_Error. As a result, the error is not handled properly. This caused several warnings in Debug Mode, since the WP_Error object is treated as a Category object. The bug is actually in get_term_by() since it returns false in error case by definition.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16716 (Page Screen Options: Number of Columns Not Switching Correctly to 2) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 14:30:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16716#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16716#comment:1/1298989846788697</guid>
      <description>&lt;p&gt;
Works for me. Once you hide a column, it will be blank upon showing it again. You'll need to move the various meta boxes that started in column 2, back to column 2.
&lt;/p&gt;
&lt;p&gt;
Doubtful, but if the option is literally sticking, could this be a javascript error caused by a plugin?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16716 (Page Screen Options: Number of Columns Not Switching Correctly to 2) created</title>
      
        <dc:creator>depi</dc:creator>

      <pubDate>Tue, 01 Mar 2011 13:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16716</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16716/1298986140704300</guid>
      <description>&lt;p&gt;
This bug occurs when you are editing a Page and you setup a number of columns to 1 in the Screen Options and then change this setting back to 2. It remains fixed on 1.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10550 (nofollow attribute added to comment_reply_link function) updated</title>
      
        <dc:creator>joliss</dc:creator>

      <pubDate>Tue, 01 Mar 2011 13:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10550#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10550#comment:12/1298986131955840</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since the patch was applied, Googlebot and friends have started crawling pages that end like "/?replytocom=72" on my blog.
&lt;/p&gt;
&lt;p&gt;
I see the reasoning for removing nofollow, but I'm not convinced that having lots of duplicate pages is so great, either.  (For example I'm worried it might reduce the crawling frequency for my posts, because now they get drowned out by the replytocom pages.)
&lt;/p&gt;
&lt;p&gt;
So I'd like to politely suggest that there might be some better alternative (the POST form that filosofo suggested, perhaps?).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16715.diff attached to Ticket #16715</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 12:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16715/16715.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16715/16715.diff/1298984272164968</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16715 (The "Create Menu" button should not be duplicated in the footer) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 12:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16715</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16715/1298984211331762</guid>
      <description>&lt;p&gt;
When creating a menu, you need to enter a name, then click "Create Menu." This button is duplicated in the footer; it shouldn't be. Only the "Save Menu" button should be in both places, for saving a menu when you're closer to the bottom of it.
&lt;/p&gt;
&lt;p&gt;
It was introduced in 3.1, but given that the only regression is that it looks a little silly, this can hold off until 3.2.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16714 (Introduce capabilities for adding new posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 01 Mar 2011 12:42:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16714#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16714#comment:1/1298983357200727</guid>
      <description>&lt;p&gt;
+1 - The bbPress plugin and future BuddyPress versions will need to take advantage of something like this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16714 (Introduce capabilities for adding new posts) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 12:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16714</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16714/1298983273313462</guid>
      <description>&lt;p&gt;
Many plugins need to be able to deny the creation of new items, particularly for CPT use cases. Unfortunately this is not easy to do.
&lt;/p&gt;
&lt;p&gt;
I am suggesting a new cap for adding posts. Obviously, this has the potential to break quite a number of custom roles, but I think we can avoid that.
&lt;/p&gt;
&lt;p&gt;
Instead, it would by default simply map to edit_posts. It wouldn't actually get assigned to any roles, so it's more or less a meta cap. (Only, without an $id, because it'd be a new post even pre-auto-draft in some cases.) But it then opens up the ability for this to be filtered by a plugin.
&lt;/p&gt;
&lt;p&gt;
We could also potentially add this to the CPT capabilities array, but with the default being 'add_posts' =&amp;gt; 'edit_posts'. Ultimately there are a few ways to implement this.
&lt;/p&gt;
&lt;p&gt;
Ideally, the cap should be used for the admin menu, for post-new.php, for the 'Add New' button (no more clunky hiding it via CSS), XML-RPC, and the post handler for post-new.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16713 (Wordpress removes title attribute from images) updated</title>
      
        <dc:creator>ukdmbfan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 12:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16713#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16713#comment:1/1298983160175428</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16713 (Wordpress removes title attribute from images) created</title>
      
        <dc:creator>ukdmbfan</dc:creator>

      <pubDate>Tue, 01 Mar 2011 12:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16713/1298983147754020</guid>
      <description>&lt;p&gt;
For everyone apart from super-admin users, WordPress will remove a title attribute defined in an &amp;lt;img&amp;gt; tag. This is because it's not defined in the /wp-includes/kses.php file as being a valid attribute for &amp;lt;img&amp;gt;.
&lt;/p&gt;
&lt;p&gt;
It may be that WordPress doesn't consider title to be a valid attribute (even though it's a standard W3C HTML attribute) which is fine, but WordPress also provides an input box for the title in the image editing popup, which adds the title attribute to the &amp;lt;img&amp;gt; tag, which then doesn't save for anyone other than a super-admin user (even though all users can save a value in that box).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>16712.diff attached to Ticket #16712</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 12:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16712/16712.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16712/16712.diff/1298982072879009</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16712 (First comment should leave the line break for wpautop) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 12:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16712</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16712/1298982046394909</guid>
      <description>&lt;p&gt;
Besides being good form and the proper way to store comment text in the database, the &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; gets stripped in get_comment_excerpt() and causes "Hi, this is a comment.To delete a comment," in the recent comments dashboard widget (note the lack of a space).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16705 (Unclear wording: "An administrator must always approve the comment ") updated</title>
      
        <dc:creator>linuxologos</dc:creator>

      <pubDate>Tue, 01 Mar 2011 09:03:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16705#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16705#comment:2/1298970236893561</guid>
      <description>&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/6286" title="#6286: enhancement: Proposed changes to &amp;#34;E-mail me whenever&amp;#34; Discussion Options (new)"&gt;#6286&lt;/a&gt; ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 01 Mar 2011 07:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:5/1298964557297343</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16695#comment:3" title="Comment 3"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, if we're going to rewrite quicktags, let's get rid of some of that HTML-building duplication and generalize the edButton object to generate the markup (and attach its click callback) based on the parameters it already has.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.
&lt;/p&gt;
&lt;p&gt;
There's lots of ugly code duplication in &lt;code&gt;quicktags.dev&lt;/code&gt; that I'm addressing in an upcoming patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16711 (A way to handle post slugs that are entirely numeric is needed) closed</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Tue, 01 Mar 2011 07:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16711#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16711#comment:2/1298963646881341</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5305" title="#5305: defect (bug): permalinks broken when article name is numeric (closed: fixed)"&gt;#5305&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15066 (Create a Meta Box class) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15066#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15066#comment:21/1298961810947149</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16702 (is_blog_user() bug on Multisite) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16702#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16702#comment:3/1298961529822922</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You can also use &lt;code&gt;get_users()&lt;/code&gt; and look through that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16702.diff attached to Ticket #16702</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:37:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16702/16702.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16702/16702.diff/1298961424847867</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16711 (A way to handle post slugs that are entirely numeric is needed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:34:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16711#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16711#comment:1/1298961284192073</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16711 (A way to handle post slugs that are entirely numeric is needed) created</title>
      
        <dc:creator>waclawjacek</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:29:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16711</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16711/1298960954357432</guid>
      <description>&lt;p&gt;
If a post has a slug that's all numbers, which WordPress allows, the permalink to it will then be treated as a query containing the post ID, not the slug.
&lt;/p&gt;
&lt;p&gt;
I guess one way to do it would be to add a prefix to either all post ID requests, or just those slugs, that are all numbers?
&lt;/p&gt;
&lt;p&gt;
Cheers!
WJ
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16701 (JavaScript error on edit/new post/page) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16701#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16701#comment:1/1298960511265500</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can't reproduce. This appears to be a plugin issue - see &lt;a class="ext-link" href="http://wordpress.org/support/topic/nav_menusphp-suddenly-error-postboxes-is-not-defined"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Please try deactivating all plugins and see whether it still happens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14877 (Ability to create exclusive custom taxonomies) updated</title>
      
        <dc:creator>sbressler</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:19:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14877#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14877#comment:9/1298960340817057</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15066 (Create a Meta Box class) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15066#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15066#comment:20/1298959807775597</guid>
      <description>&lt;p&gt;
Related: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/14877" title="#14877: feature request: Ability to create exclusive custom taxonomies (accepted)"&gt;#14877&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14877 (Ability to create exclusive custom taxonomies) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 06:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14877#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14877#comment:8/1298959785389331</guid>
      <description>&lt;p&gt;
RE WP_Meta_Box: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15066" title="#15066: enhancement: Create a Meta Box class (closed: duplicate)"&gt;#15066&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14877 (Ability to create exclusive custom taxonomies) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14877#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14877#comment:7/1298958770700132</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16708" title="#16708: feature request: Taxonomy checkboxes to radio buttons (closed: duplicate)"&gt;#16708&lt;/a&gt; marked as a duplicate.
&lt;/p&gt;
&lt;p&gt;
Here's what I'm planning here. Basically, a taxonomy will be able to choose from a series of meta boxes.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;checkboxes (currently used for hierarchical taxonomies)
&lt;/li&gt;&lt;li&gt;input box (currently used for non-hierarchical taxonomies)
&lt;/li&gt;&lt;li&gt;radio buttons, based on the current checkbox meta box (exclusive)
&lt;/li&gt;&lt;li&gt;radio buttons, based on the current post format meta box (exclusive)
&lt;/li&gt;&lt;li&gt;a dropdown (exclusive)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are possibly others, especially hybrids (like the current non-hierarchical taxonomy box, only with a dropdown, like the current Trac keywords box). Also possibly one other that escapes me, but I think I got the main ones covered. I'm not even covering sortable term orders here, which is a whole other idea.
&lt;/p&gt;
&lt;p&gt;
Exclusive taxonomies (where you can enforce only one term being selected) will be enforced server-side. The post format stuff will be entirely abstracted into one of these meta boxes as well as the save handler.
&lt;/p&gt;
&lt;p&gt;
This will also allow us to adopt a flag to turn off the popular terms support, particularly the functionality in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3130" title="#3130: enhancement: Proposal for category improvements (closed: wontfix)"&gt;#3130&lt;/a&gt;, making the existing hierarchical taxonomy box far more flexible. There will also be a flag, where appropriate, for the option to choose no term, in the case of exclusive taxonomies (otherwise you couldn't de-select the choice). There can also be a flag for the ability to add new terms (possibly based on permissions), the tag cloud as appropriate, etc etc.
&lt;/p&gt;
&lt;p&gt;
I think this is also a perfect time to finally create a basic WP_Meta_Box class.
&lt;/p&gt;
&lt;p&gt;
This (as well as the class) is something I'm willing to shepherd for 3.2. Support it during the scope sessions if you like it.
&lt;/p&gt;
&lt;p&gt;
The ideas here have been bounced around a bit among other members of the core team (at Tybee), but I'd like to see where else this can go to grow a new API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:13/1298958512369098</guid>
      <description>&lt;p&gt;
I ran some tests with SQL_NO_CACHE on (22600+ posts):
&lt;/p&gt;
&lt;p&gt;
GROUP BY: 0.9389 sec
&lt;/p&gt;
&lt;p&gt;
COUNT: 0.1706 sec
&lt;/p&gt;
&lt;p&gt;
JOINs: 0.0013 sec
&lt;/p&gt;
&lt;p&gt;
If you turn on profiling, you see why the first two methods are so slow:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Sending data 	0.000031
executing 	0.000003
Sending data 	0.000007
executing 	0.000002
&lt;/pre&gt;&lt;p&gt;
over and over again.
&lt;/p&gt;
&lt;p&gt;
So, anyway, we can use both patches:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16706/16706.diff" title="Attachment '16706.diff' in Ticket #16706"&gt;16706.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16706/16706.diff" title="Download"&gt;​&lt;/a&gt; avoids 'AND' queries whenever possible.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16706/16706-tigertech.diff" title="Attachment '16706-tigertech.diff' in Ticket #16706"&gt;16706-tigertech.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16706/16706-tigertech.diff" title="Download"&gt;​&lt;/a&gt; optimizes the SQL for 'AND' queries when we have no choice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16708 (Taxonomy checkboxes to radio buttons) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16708#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16708#comment:5/1298957473705059</guid>
      <description>duplicate: &lt;p&gt;
Yep. Duplicate of &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/14877" title="#14877: feature request: Ability to create exclusive custom taxonomies (accepted)"&gt;#14877&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:30:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:12/1298957443602639</guid>
      <description>&lt;p&gt;
Indeed, we weren't talking about the same thing. Thanks for the clarification.
&lt;/p&gt;
&lt;p&gt;
I presume that &lt;code&gt;COUNT(1)&lt;/code&gt; can be safely replaced with the more common &lt;code&gt;COUNT(*)&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The question now is which is faster overall: the extra JOIN or your method.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10550 (nofollow attribute added to comment_reply_link function) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10550#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10550#comment:11/1298956763109927</guid>
      <description>&lt;p&gt;
Although I do remember a certain post on Matt Cutt's blog saying something along the lines of Google starting to look through forms too (not sure if just to find more URLs to crawl or also affecting the ranking).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10550 (nofollow attribute added to comment_reply_link function) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:16:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10550#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10550#comment:10/1298956618591804</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
One way to address this would be to make the reply "links" into separate POST-submitting forms. [...]
In addition to side-stepping the PageRank issues, this approach would have the positive side effect of making things more inline with HTTP protocol, for which GET requests are supposed to be idempotent.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree. You're just asking for the form for replying to a certain comment. You haven't POSTed anything yet.
&lt;/p&gt;
&lt;p&gt;
That said, a form sounds like a good idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16706-tigertech.diff attached to Ticket #16706</title>
      
        <dc:creator>tigertech</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:13:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16706/16706-tigertech.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16706/16706-tigertech.diff/1298956436009282</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>tigertech</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:13:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:11/1298956405390686</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16706#comment:5" title="Comment 5"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here's an experiment to try on a clean install:
&lt;/p&gt;
&lt;p&gt;
Make two categories A and B.
&lt;/p&gt;
&lt;p&gt;
Make Post 1 and assign it both category A and category B.
&lt;/p&gt;
&lt;p&gt;
Make Post 2 and assign it to just category A.
&lt;/p&gt;
&lt;p&gt;
Do the &lt;code&gt;category__and =&amp;gt; (A, B)&lt;/code&gt; query and compare.
&lt;/p&gt;
&lt;p&gt;
The query without GROUP BY will return Post 1 as well as Post 2, which is incorrect.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried a clean install and tested this. My change does not return both posts, though, and I'm not sure why you'd think it would. The results are identical.
&lt;/p&gt;
&lt;p&gt;
Did you try it? If so, I think you accidentally tried something different.
&lt;/p&gt;
&lt;p&gt;
It won't include Post 2 because when the outer query calls the inner query like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  AND (
  SELECT COUNT(1)
  FROM wp_term_relationships
  WHERE term_taxonomy_id IN (&amp;lt;A&amp;gt;,&amp;lt;B&amp;gt;)
  AND object_id = &amp;lt;Post_2_ID&amp;gt;
  ) = 2
&lt;/pre&gt;&lt;p&gt;
.... the "COUNT(1)" result won't equal 2. It will equal 1, because only one row in wp_term_relationships will match both WHERE/AND clauses. This subquery will therefore be false and the post won't be included.
&lt;/p&gt;
&lt;p&gt;
I'm attaching a patch to make 100% sure we're talking about the same change....
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16709 (?replytocom= links should have rel=nofollow) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16709#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16709#comment:2/1298956360261354</guid>
      <description>duplicate: &lt;p&gt;
Closing as duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10550" title="#10550: defect (bug): nofollow attribute added to comment_reply_link function (closed: fixed)"&gt;#10550&lt;/a&gt;. Please continue the discussion over there.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16710 (Deprecated ( wp_specialchars ) in wp-includes\functions.php) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16710#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16710#comment:1/1298956117148794</guid>
      <description>invalid: &lt;p&gt;
Erm, no, there isn't:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/wp-includes/functions.php?rev=17435"&gt;https://core.trac.wordpress.org/browser/trunk/wp-includes/functions.php?rev=17435&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You probably experienced an incomplete upgrade.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16709 (?replytocom= links should have rel=nofollow) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Tue, 01 Mar 2011 05:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16709#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16709#comment:1/1298955830176644</guid>
      <description>&lt;p&gt;
This was changed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10550" title="#10550: defect (bug): nofollow attribute added to comment_reply_link function (closed: fixed)"&gt;#10550&lt;/a&gt;. There is a lengthy discussion on the SEO implications there.
&lt;/p&gt;
&lt;p&gt;
rel="canonical" should be preventing duplicate indexing - but i do agree that it is unnecessary overhead.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/10550#comment:3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;filosofo's comment&lt;/a&gt; on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10550" title="#10550: defect (bug): nofollow attribute added to comment_reply_link function (closed: fixed)"&gt;#10550&lt;/a&gt; may offer a better solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16710 (Deprecated ( wp_specialchars ) in wp-includes\functions.php) created</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Tue, 01 Mar 2011 04:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16710</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16710/1298955247593972</guid>
      <description>&lt;p&gt;
Hi guys , There is Deprecated function in
&lt;/p&gt;
&lt;p&gt;
wp-includes\functions.php on line 3303
&lt;/p&gt;
&lt;p&gt;
( wp_specialchars )  it should be ( esc_html )
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 01 Mar 2011 04:21:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:10/1298953289405487</guid>
      <description>&lt;p&gt;
That could be the cause for 404's. Not sure what is causing infinite redirect loop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16709 (?replytocom= links should have rel=nofollow) created</title>
      
        <dc:creator>joliss</dc:creator>

      <pubDate>Tue, 01 Mar 2011 03:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16709</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16709/1298951079508579</guid>
      <description>&lt;p&gt;
Since Wordpress 3.1 I've been getting lots of hits from crawlers that end like "/?replytocom=72".  That's unnecessary network overhead and probably bad for SEO.
&lt;/p&gt;
&lt;p&gt;
I would suggest that the rel='nofollow' attribute should be set on the replytocom links in wp-includes/comment-template.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Tue, 01 Mar 2011 03:30:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:10/1298950238856110</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 01 Mar 2011 03:10:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:9/1298949033617526</guid>
      <description>&lt;p&gt;
Wow, that's funky. Not sure I ever noticed that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16708 (Taxonomy checkboxes to radio buttons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16708#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16708#comment:4/1298947179153276</guid>
      <description>&lt;p&gt;
This has been talked about before, specifically in the realm of the post formats box, a generic Taxonomy metabox which can specify radio|checkbox|tag-style-auto-suggest style.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16708 (Taxonomy checkboxes to radio buttons) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16708#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16708#comment:3/1298946789873123</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
(I did not mean to set myself as the owner. #blamenacin)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16708 (Taxonomy checkboxes to radio buttons) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:32:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16708#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16708#comment:2/1298946749785760</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16708 (Taxonomy checkboxes to radio buttons) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16708#comment:1/1298946696538577</guid>
      <description>&lt;p&gt;
I see you've set yourself as the owner. Do you plan to write a patch for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:184</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:184/1298946555873458</guid>
      <description>&lt;p&gt;
Another follow-up: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/16706" title="#16706: enhancement: Queries using &amp;#34;category__and&amp;#34; are slow on large databases (assigned)"&gt;#16706&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16662.2.diff attached to Ticket #16662</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16662/16662.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16662/16662.2.diff/1298946545391253</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:9/1298946349815918</guid>
      <description>&lt;p&gt;
Also, it only works if the relation between queries is also 'AND', because if it's 'OR', you have to group the IN queries that come from an AND one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:8/1298946165193265</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16706/16706.diff" title="Attachment '16706.diff' in Ticket #16706"&gt;16706.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16706/16706.diff" title="Download"&gt;​&lt;/a&gt; performs the transformation only if there are less than 10 terms involved per query, but I haven't done any testing to see at which point the number of JOINs causes worse performance than the GROUP BY method.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16708 (Taxonomy checkboxes to radio buttons) created</title>
      
        <dc:creator>anver</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16708</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16708/1298946123199266</guid>
      <description>&lt;p&gt;
A way to change the terms list checkboxes of a taxonomy in the admin area into radio buttons like the list of the wordpress post formats which was added in wp 3.1 would be a great feature so that the user can select just one from the list instead of selecting multiple terms from the list. Its a great CMS feature.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:8/1298946102938348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 3.0.5, for categories we have used $this-&amp;gt;front which includes the static string included in the permalinks whereas in 3.1 we have set with_front =&amp;gt; false
&lt;/p&gt;
&lt;p&gt;
In case of @reviewmylife,
3.0 -&amp;gt; category urls are like /blog/category/
3.1 -&amp;gt; category urls are /category/ due to the with_front =&amp;gt; flase
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16706.diff attached to Ticket #16706</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16706/16706.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16706/16706.diff/1298946065766319</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:18:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:7/1298945935784076</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:17:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:4/1298945852398903</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16695#comment:2" title="Comment 2"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think loading the buttons that fraction of a second earlier warrants the necessary extra code.  &lt;code&gt;16695.2.diff&lt;/code&gt; is a simplified version; not as clever but it works in every JS-supporting client I know of.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The simplified version does work, but it calls the callback too late - when everything on the page has finished loading. That's the downside of the onload event.
&lt;/p&gt;
&lt;p&gt;
In other words, if this function is used on the front end, where there is 500kb of css, scripts, images etc., the difference could be half a minute instead of a fraction of second. Not to mention this depends on the connection speed, not everyone has broadband.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16662.diff attached to Ticket #16662</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:14:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16662/16662.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16662/16662.diff/1298945670756003</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 02:04:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:6/1298945088667612</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
By the way, you can get the more efficient query I was talking about by using the more verbose syntax:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts(array(
  'tax_query' =&amp;gt; array(
    array( 'taxonomy' =&amp;gt; 'category', 'terms' =&amp;gt; 1 ),
    array( 'taxonomy' =&amp;gt; 'category', 'terms' =&amp;gt; 461 ),
  )
));
&lt;/pre&gt;&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS wp_posts . *
FROM wp_posts
INNER JOIN wp_term_relationships ON ( wp_posts.ID = wp_term_relationships.object_id )
INNER JOIN wp_term_relationships AS tt1 ON ( wp_posts.ID = tt1.object_id )
WHERE 1 =1
AND (
wp_term_relationships.term_taxonomy_id
IN ( 38 )
AND tt1.term_taxonomy_id
IN ( 37 )
&lt;/pre&gt;&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; wp_term_relationships &lt;/td&gt;&lt;td&gt; ref &lt;/td&gt;&lt;td&gt; PRIMARY,term_taxonomy_id &lt;/td&gt;&lt;td&gt; term_taxonomy_id &lt;/td&gt;&lt;td&gt; 8 &lt;/td&gt;&lt;td&gt; const &lt;/td&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; Using temporary; Using filesort
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; tt1 &lt;/td&gt;&lt;td&gt; eq_ref &lt;/td&gt;&lt;td&gt; PRIMARY,term_taxonomy_id &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; 16 &lt;/td&gt;&lt;td&gt; wp-trunk.wp_term_relationships.object_id,const &lt;/td&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; Using index
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; SIMPLE &lt;/td&gt;&lt;td&gt; wp_posts &lt;/td&gt;&lt;td&gt; eq_ref &lt;/td&gt;&lt;td&gt; PRIMARY,type_status_date &lt;/td&gt;&lt;td&gt; PRIMARY &lt;/td&gt;&lt;td&gt; 8 &lt;/td&gt;&lt;td&gt; wp-trunk.wp_term_relationships.object_id &lt;/td&gt;&lt;td&gt; 1 &lt;/td&gt;&lt;td&gt; Using where
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
So, it's just a matter of making the &lt;code&gt;'category__and'&lt;/code&gt; rewrite internally to that more efficient way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 01:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:5/1298944080049749</guid>
      <description>&lt;p&gt;
Here's an experiment to try on a clean install:
&lt;/p&gt;
&lt;p&gt;
Make two categories A and B.
&lt;/p&gt;
&lt;p&gt;
Make Post 1 and assign it both category A and category B.
&lt;/p&gt;
&lt;p&gt;
Make Post 2 and assign it to just category A.
&lt;/p&gt;
&lt;p&gt;
Do the &lt;code&gt;category__and =&amp;gt; (A, B)&lt;/code&gt; query and compare.
&lt;/p&gt;
&lt;p&gt;
The query without GROUP BY will return Post 1 as well as Post 2, which is incorrect.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>tigertech</dc:creator>

      <pubDate>Tue, 01 Mar 2011 01:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:4/1298943813305009</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16706#comment:2" title="Comment 2"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sure, they &lt;em&gt;seem&lt;/em&gt; to return the same posts, but they don't. That modified query is equivalent to using &lt;code&gt;'category__in'&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmmmm -- what makes you say that? I've tried it with some simpler queries than the example (which I unfortunately can't compare directly because the original WordPress version never finishes), and it seems to be correct.
&lt;/p&gt;
&lt;p&gt;
In either version, the &lt;code&gt;'category__and'&lt;/code&gt; nature of it comes from loading all the rows of  wp_term_relationships that match both the object_id and term_taxonomy_id, then counting them and making sure that the number of found rows is the same as the number of categories passed into the query (2 in this example).
&lt;/p&gt;
&lt;p&gt;
Even if my suggested change is wrong for a &lt;code&gt;'category__and'&lt;/code&gt; fix, I'm pretty sure it's not equivalent to &lt;code&gt;'category__in'&lt;/code&gt;. Using &lt;code&gt;'category__in'&lt;/code&gt; on our customer's data with "461" as one of the categories always results in at least 167 posts if I remove the LIMIT. But using my replacement query with "461" as one of the categories always results in fewer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 01:09:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:3/1298941765853719</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A correct solution would involve doing an extra join for each category in the array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 01 Mar 2011 01:05:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:2/1298941528066463</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sure, they &lt;em&gt;seem&lt;/em&gt; to return the same posts, but they don't. That modified query is equivalent to using &lt;code&gt;'category__in'&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 01 Mar 2011 00:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:25/1298939108465634</guid>
      <description>&lt;p&gt;
we have a few other download-to-file functions such as &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/functions.php#L1261"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp_get_http()&lt;/a&gt; I'd like to deprecate all the various wrappers and merge it into the HTTP API functions instead.
&lt;/p&gt;
&lt;p&gt;
ie. Instead of calling download_url(), call &lt;code&gt;wp_remote_get(..stream=path);&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>Slobajossi</dc:creator>

      <pubDate>Tue, 01 Mar 2011 00:03:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:11/1298937815882649</guid>
      <description>&lt;p&gt;
I'll use the html editor and I personally will not have problems with embedding the code, but I asked this because of the users that only use the visual editor and especially new-comers to WP.
&lt;/p&gt;
&lt;p&gt;
If you search the forum with "video 3.1" you'll notice few threads on this subject, and obviously oEmbed will do the job for the most folks. But still this creates an obstacle for those wishing to embed the internal swf or flv link from own server. There can be various reasons for using own server instead of YouTube or Vimeo, like one user stated, he needs it for training material.
&lt;/p&gt;
&lt;p&gt;
Anyway, thank you both, scribu and filosofo, on your time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16707 (No theme is one theme) created</title>
      
        <dc:creator>cogmios</dc:creator>

      <pubDate>Mon, 28 Feb 2011 23:39:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16707</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16707/1298936372799495</guid>
      <description>&lt;p&gt;
If you have no themes at all it still says:
&lt;/p&gt;
&lt;p&gt;
"You only have one theme installed right now. Live a little!"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) updated</title>
      
        <dc:creator>tigertech</dc:creator>

      <pubDate>Mon, 28 Feb 2011 23:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706#comment:1/1298936006641505</guid>
      <description>&lt;p&gt;
By the way, I showed this explanation to a co-worker here who said it wasn't clear why the second version is so much faster. So:
&lt;/p&gt;
&lt;p&gt;
The reason it's faster is that it can operate almost entirely on the wp_term_relationships index. For each row (post) in the outer query, the inner query uses the PRIMARY index to load a very small number of rows based on the object_id. So it ends up with something like five rows, which it can then examine to see if they match "term_taxonomy_id IN (1,461)". (A single index on "(object_id, term_taxonomy_id)" would probably speed this up even more and eliminate the "Using where" on the subquery, operating entirely on the index.)
&lt;/p&gt;
&lt;p&gt;
In contrast, the "GROUP BY" version attacks it the other way round: it first uses the term_taxonomy_id index to search for rows in wp_term_relationships that match "term_taxonomy_id IN (1,461)". Unfortunately, it ends up with tens of thousands (instead of a handful) in the worst case, which it shoves into a temporary table. It then sorts the unindexed temporary table to do the COUNT. That might be fine if MySQL 5.0.x only did that once, but it does it once for each outer query row, even though the results of the inner query are identical (constant) each time through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14333 (Better page ordering UI) updated</title>
      
        <dc:creator>jameslaws</dc:creator>

      <pubDate>Mon, 28 Feb 2011 23:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14333#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14333#comment:4/1298934727790527</guid>
      <description>&lt;p&gt;
Just wanted to throw my two cents in, I don't think this should ever be removed. There are way to many uses for the menu_order for automated listing where you don't want to have to create menus each time. Sometimes listing the pages is the best method but menu order is still the sorting method.
&lt;/p&gt;
&lt;p&gt;
Just my opinion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 28 Feb 2011 23:07:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:10/1298934423150081</guid>
      <description>&lt;p&gt;
The problem is that to be distributed with WordPress, which is under the GPL license, the component must be GPL-compatible.
&lt;/p&gt;
&lt;p&gt;
Unfortunately &lt;a class="ext-link" href="http://oos.moxiecode.com/flvplayer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;it has a license&lt;/a&gt; that does not have the same freedoms as the GPL.  In particular, the author states of the license:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I get a few questions about what kind of license this player is released under. I don´t know, really.&lt;br /&gt;
You can do pretty much whatever the hell you want with it as far as I´m concerned ;) So use it for whatever, redistribute it, etc.&lt;br /&gt;
As long as you don´t try to profit from/sell it in any way, it´s probably fine. If you are unsure, just drop me a quick email.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A GPL-compatible license cannot restrict you from profiting from the code.  It can't tell you to check with the author first to see if your intended use is allowed.
&lt;/p&gt;
&lt;p&gt;
However, I bet WordPress's &lt;a class="ext-link" href="http://codex.wordpress.org/Embeds"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;oEmbed&lt;/a&gt; will let you embed most of the same videos we comparable ease.  If not, surely there is a plugin that will.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14333 (Better page ordering UI) closed</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 28 Feb 2011 22:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14333#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14333#comment:3/1298933928040709</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16653 ("Class" dropdown box in link editor gone) updated</title>
      
        <dc:creator>techotronic</dc:creator>

      <pubDate>Mon, 28 Feb 2011 22:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16653#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16653#comment:2/1298933798780057</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16653#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, this was removed on purpose because it was a really old vestige.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
alright, no problem.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think I would mind checking if the filter adds any values and then only show a drop-down then. But I like that we've been able to simplify the UI while exponentially increasing speed and functionality.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was poking around earlier and saw that I could add my style to TinyMCEs "theme_advanced_styles", so re-adding the dropdown box to the link editor probably wouldn't be necessary.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Arne
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>Slobajossi</dc:creator>

      <pubDate>Mon, 28 Feb 2011 22:55:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:9/1298933750480530</guid>
      <description>&lt;p&gt;
Yes, actually it's embedder.
&lt;/p&gt;
&lt;p&gt;
And actually I do not understand where's the licencing problem, since it just helps people who don't understand code to embed the .swf file. It doesn't upload anything, just embed the video.
&lt;/p&gt;
&lt;p&gt;
On TinyMCE website the button is present on their demo site and I see other applications using this without any problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16639 (Site inaccessible after upgrade to 3.1, due to endless canonical redirects) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 28 Feb 2011 22:54:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16639#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16639#comment:16/1298933653645123</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16639#comment:12" title="Comment 12"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we want to allow only permalink supporting IIS through, my patch should do that..  &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16904" title="Fix fatal error on IIS after r16797. props peaceablewhale. Limit ..."&gt;r16904&lt;/a&gt; changed $is_IIS to $is_iis7 and I don't really see why.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Honestly,
I'm not sure the reason for the change, it looks like it was an  accidental change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16904" title="Fix fatal error on IIS after r16797. props peaceablewhale. Limit ..."&gt;r16904&lt;/a&gt;. that being said, I cant personally remember why iis is excluded from the canonical code, or only included in certain cases.
&lt;/p&gt;
&lt;p&gt;
If you can reproduce it, and reverting the variable change fixes it for all iis, go for it. But to me, It seems like IIS shouldn't be included in that short-circuit &lt;em&gt;at all&lt;/em&gt;, for the simple fact, that we should be able to parse/determine the url just as good as apache, the problem that sounds like is happening, is that the guessed url and the redirect url are always different, in which case, I would prefer to debug why it's not working, rather than just killing it.. (but for 3.1.1, just go ahead and disable it again)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16706 (Queries using "category__and" are slow on large databases) created</title>
      
        <dc:creator>tigertech</dc:creator>

      <pubDate>Mon, 28 Feb 2011 22:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16706</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16706/1298931652434551</guid>
      <description>&lt;p&gt;
Summary: Using "category__and" in query_posts() generates a dependent subquery in MySQL with extremely poor performance ("Using temporary, Using filesort") when one of the categories has a large number of posts. The result is so slow that WordPress appears to completely hang. Changing the query structure avoids the filesort and solves it.
&lt;/p&gt;
&lt;p&gt;
Details:
&lt;/p&gt;
&lt;p&gt;
We have a customer doing this as part of a theme in WordPress 3.1:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts(array(
  "category__and" =&amp;gt; array(1, 461),
  "posts_per_page" =&amp;gt; 6
));
&lt;/pre&gt;&lt;p&gt;
The database is fairly large. There are 45,610 posts in category 1, and 167 posts in category 461. The resulting database query runs for so long that it effectively hangs (it doesn't finish within 30 minutes).
&lt;/p&gt;
&lt;p&gt;
The generated MySQL query looks like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  WHERE 1=1  AND ( wp_posts.ID IN (
  SELECT object_id
  FROM wp_term_relationships
  WHERE term_taxonomy_id IN (1,461)
  GROUP BY object_id HAVING COUNT(object_id) = 2
) ) AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 6;
&lt;/pre&gt;&lt;p&gt;
An "explain" on this query shows that it generates a dependent subquery that devolves to a filesort:
&lt;/p&gt;
&lt;pre class="wiki"&gt;+----+--------------------+-----------------------+-------+------------------+------------------+---------+-------------+-------+-----------------------------------------------------------+
| id | select_type        | table                 | type  | possible_keys    | key              | key_len | ref         | rows  | Extra                                                     |
+----+--------------------+-----------------------+-------+------------------+------------------+---------+-------------+-------+-----------------------------------------------------------+
|  1 | PRIMARY            | wp_posts              | ref   | type_status_date | type_status_date | 44      | const,const |  8177 | Using where; Using index                                  |
|  2 | DEPENDENT SUBQUERY | wp_term_relationships | range | term_taxonomy_id | term_taxonomy_id | 8       | NULL        | 25665 | Using where; Using index; Using temporary; Using filesort |
+----+--------------------+-----------------------+-------+------------------+------------------+---------+-------------+-------+-----------------------------------------------------------+
&lt;/pre&gt;&lt;p&gt;
I've tried adding indexes, optimizing, and so on to get the filesort to go away, but I can't get it to do so, at least not with MySQL 5.0.x.
&lt;/p&gt;
&lt;p&gt;
The filesort comes from the "GROUP BY ... HAVING". Changing the query to avoid those fixes this. For example, this appears to produce the same results:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  WHERE 1=1  AND
(
  SELECT COUNT(1)
  FROM wp_term_relationships
  WHERE term_taxonomy_id IN (1,461)
  AND object_id = wp_posts.ID
) = 2
AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 6;
&lt;/pre&gt;&lt;p&gt;
But it finishes in a fraction of a second and generates cleaner "explain" output with no filesort:
&lt;/p&gt;
&lt;pre class="wiki"&gt;+----+--------------------+-----------------------+------+--------------------------+------------------+---------+----------------------+------+--------------------------+
| id | select_type        | table                 | type | possible_keys            | key              | key_len | ref                  | rows | Extra                    |
+----+--------------------+-----------------------+------+--------------------------+------------------+---------+----------------------+------+--------------------------+
|  1 | PRIMARY            | wp_posts              | ref  | type_status_date         | type_status_date | 44      | const,const          | 8177 | Using where              |
|  2 | DEPENDENT SUBQUERY | wp_term_relationships | ref  | PRIMARY,term_taxonomy_id | PRIMARY          | 8       | database.wp_posts.ID |    1 | Using where; Using index |
+----+--------------------+-----------------------+------+--------------------------+------------------+---------+----------------------+------+--------------------------+
&lt;/pre&gt;&lt;p&gt;
So my suggestion is that the "category__and" query be changed to something like this that avoids filesorts. (I could provide a patch if people agree that this change is a reasonable approach.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16705 (Unclear wording: "An administrator must always approve the comment ") updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16705#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16705#comment:1/1298930344872724</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe the intention is something like this:
&lt;/p&gt;
&lt;p&gt;
"Someone who can edit the comment must always approve it before it is displayed"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:52:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:5/1298929942999421</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16703.diff attached to Ticket #16703</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16703/16703.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16703/16703.diff/1298929919301503</guid>
      <description>&lt;p&gt;
check is_singular before altering query
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:4/1298929584492777</guid>
      <description>&lt;p&gt;
The SQL is indeed altered, but 'cat' isn't set, at least not in my testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16702 (is_blog_user() bug on Multisite) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:27:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16702#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16702#comment:2/1298928453285099</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16702 (is_blog_user() bug on Multisite) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16702#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16702#comment:1/1298928443623993</guid>
      <description>&lt;p&gt;
Yeah, we should be using $wpdb-&amp;gt;get_blog_prefix() there.
&lt;/p&gt;
&lt;p&gt;
It looks like it's @since MU, rather than 3.0. I'd recommending using get_blogs_of_user() then look through that, for now. We don't use this function in core and I'd be inclined to deprecate it simply for its simply horrible name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16705 (Unclear wording: "An administrator must always approve the comment ") created</title>
      
        <dc:creator>joe.woidpress</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16705/1298928132728994</guid>
      <description>&lt;p&gt;
I'm not certain if I should classify this as a bug or as a need to revise wording in the options menu, or if I should put in a feature request for a refined option...
&lt;/p&gt;
&lt;p&gt;
...but...
&lt;/p&gt;
&lt;p&gt;
If, under Settings-&amp;gt;Discussion you have "An administrator must always approve the comment" checked, if the author of the post receiving the comment has the "edit_comment" capability, they will receive an email notification to moderate the comment in the queue.
&lt;/p&gt;
&lt;p&gt;
After viewing the wp_notify_moderator function for 3.1 in pluggable.php (and comparing it to 3.0.5's version) I can see this functionality seems to be coded in by design.
&lt;/p&gt;
&lt;p&gt;
What's confusing is that the option reads "An administrator must always approve the comment" and it's difficult to discern if that means the user role of "Administrator" or anyone who can be an "administrator" of the comments.
&lt;/p&gt;
&lt;p&gt;
It's also hard to tell from the reading of the option text whether or not this means that the function is implemented incorrectly, or if the option is simply poorly worded.
&lt;/p&gt;
&lt;p&gt;
In either case, it would be useful to be able to have more granular control over who is getting these email notifications for comment moderation.
&lt;/p&gt;
&lt;p&gt;
Failing that, if the "An administrator must always approve the comment" is checked, that should mean that only users with the "Administrator" role should be able to approve the comment.
&lt;/p&gt;
&lt;p&gt;
...depending on what the expected behavior of this functionality is meant to be.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:3/1298927462699328</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 21:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:2/1298926923431231</guid>
      <description>&lt;p&gt;
Note that is_category is being correctly set to false.  Many plugins seem to be assuming a category query if 'cat' is set, however.  One could argue that setting 'cat' is correct, but let's preserve the old expectation as well as get rid of the term query gymnastics for single post queries.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16704 (Do not do canonical redirects for unregistered feeds) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 20:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16704#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16704#comment:1/1298925958665174</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16639 (Site inaccessible after upgrade to 3.1, due to endless canonical redirects) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 20:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16639#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16639#comment:15/1298925945570885</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16704" title="#16704: defect (bug): Do not do canonical redirects for unregistered feeds (closed: fixed)"&gt;#16704&lt;/a&gt; for the feed issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16704 (Do not do canonical redirects for unregistered feeds) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 20:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16704</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16704/1298925924607708</guid>
      <description>&lt;p&gt;
Canonical redirects will break unregistered feeds since they are not includes in the rewrite rules.  Several plugins go underneath instead of using add_feed().
&lt;/p&gt;
&lt;p&gt;
Discovered here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/31-rewrites?replies=6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/31-rewrites?replies=6&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 20:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:7/1298925798706731</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16703" title="#16703: defect (bug): Post permalinks that include %category% should not query the category (closed: fixed)"&gt;#16703&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 20:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:1/1298925712150012</guid>
      <description>&lt;p&gt;
3.0 query when resolving /%category%/%postname%/:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT wp_30_posts.* FROM wp_30_posts WHERE 1=1 AND wp_30_posts.post_name = 'an-event' AND wp_30_posts.post_type = 'post' ORDER BY wp_30_posts.post_date DESC
&lt;/pre&gt;&lt;p&gt;
3.1 query:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT wp_trunk_posts.* FROM wp_trunk_posts INNER JOIN wp_trunk_term_relationships ON (wp_trunk_posts.ID = wp_trunk_term_relationships.object_id) WHERE 1=1 AND wp_trunk_posts.post_name = 'an-event' AND ( wp_trunk_term_relationships.term_taxonomy_id IN (3) ) AND wp_trunk_posts.post_type = 'post' GROUP BY wp_trunk_posts.ID ORDER BY wp_trunk_posts.post_date DESC
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 20:38:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703/1298925528346055</guid>
      <description>&lt;p&gt;
3.1 now includes the category in the query when resolving a post permalink that includes %category%.  3.0 did not do this.  This results in 'cat' and other category query vars being set for single post queries. This confuses some plugins and unnecessarily complicates the query.  %category% is purely decorative since the post name is sufficient to find a post.
&lt;/p&gt;
&lt;p&gt;
Discovered here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/plugin-the-events-calendar-compatibility-with-wordpress-31?replies=11#post-1971053"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/plugin-the-events-calendar-compatibility-with-wordpress-31?replies=11#post-1971053&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16702 (is_blog_user() bug on Multisite) created</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 28 Feb 2011 20:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16702</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16702/1298925344102800</guid>
      <description>&lt;p&gt;
I've just installed a fresh WordPress 3.1 with Multisite enable and configured and there seems to be a glitch in is_blog_user().
&lt;/p&gt;
&lt;p&gt;
It looks for a capability with a key name of the site prefix . blog_id . _capabilties.
&lt;/p&gt;
&lt;p&gt;
But, the first installed blog on an MU site is installed without the blog_id in the key name.
&lt;/p&gt;
&lt;p&gt;
On my test site for example I have a the main site WPMU and 2 sub site Test1 and Test2.
&lt;/p&gt;
&lt;p&gt;
In the usermeta table there are capability keynames as follows:
&lt;/p&gt;
&lt;p&gt;
wpmu_capabilities (relating the my WPMU site)
wpmu_1_capabilities (relating to Test1)
wpmu_2_capabilities (relating to Test2)
&lt;/p&gt;
&lt;p&gt;
So, is_blog_user() returns false for all users of WPMU as the function is looking for the wrong key name.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16157 (category__and, tag__and, tag_slug__in, tag_slug__and support missing) updated</title>
      
        <dc:creator>ajsadeh</dc:creator>

      <pubDate>Mon, 28 Feb 2011 19:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16157#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16157#comment:10/1298922982407121</guid>
      <description>&lt;p&gt;
I have an issue that arose since release of 3.1 whereby
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array(
     'category__and' =&amp;gt; array($_GET['neighbourhood'],$_GET['venueType']),
     'posts_per_page' =&amp;gt; -1
     );
query_posts($args);
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
used to work, but does not now. I am cross-posting here in case it is of relevance to the changes made in this ticket - &lt;a class="ext-link" href="http://wordpress.org/support/topic/category_and-not-working-after-31-update?replies=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forum Post&lt;/a&gt; Thank you for any help.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 19:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:6/1298921599532421</guid>
      <description>&lt;p&gt;
Looking at those threads, the category problems seem to be with certain plugins, particularly Simple Tags. Simple Tags just pushed a new version that I can't reproduce the problem with.  The refresh loops are probably &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16639" title="#16639: defect (bug): Site inaccessible after upgrade to 3.1, due to endless canonical redirects (closed: fixed)"&gt;#16639&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>jlevandowski</dc:creator>

      <pubDate>Mon, 28 Feb 2011 19:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:9/1298921411753625</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16643#comment:8" title="Comment 8"&gt;ramoonus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16643#comment:6" title="Comment 6"&gt;jlevandowski&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI.  This worked fine in WordPress 3.0.4, so it's something that changed in 3.1
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
have you checked with 3.0.5?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Works fine in 3.0.5
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_parse_request_hook-v3.diff attached to Ticket #16692</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:52:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16692/wp_parse_request_hook-v3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16692/wp_parse_request_hook-v3.diff/1298919166643996</guid>
      <description>&lt;p&gt;
Changed from an action to a filter.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:46:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:8/1298918775105771</guid>
      <description>&lt;p&gt;
Actually I meant flv player and embedder.  The swf uploader is still in WP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16692 (Add hook to allow plugins to implement custom $wp-&gt;parse_request() ...) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:45:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16692#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16692#comment:11/1298918708785268</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16692#comment:8" title="Comment 8"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, I think your approach allows the most flexibility,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, it's cumbersome.  It could be made less cumbersome by making it a filter like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// This would go in /wp-includes/class-wp.php
if ( !apply_filters( 'wp_parse_request', false, $this, $query_args ) )
   $this-&amp;gt;parse_request( $query_args );
&lt;/pre&gt;&lt;p&gt;
If we used the above then we would not need to add the action in &lt;code&gt;/wp-settings.php&lt;/code&gt;. I'm liking this approach more as I write about it. You?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
even though it's a blasphemy in the OOP paradigm. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
heh. :)  It's basically a really loose form of multiple inheritance.
&lt;/p&gt;
&lt;p&gt;
But I think  that anyone who really sees it as OOP blasphemy &lt;em&gt;(not you, of course :)&lt;/em&gt; hasn't learned much since OOP became semi-mainstream in the mid 90s. For example they probably haven't read and/or groked the seminal work &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Design_pattern_(computer_science)"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Design Patterns&lt;/a&gt;.  This approach has aspects of each of the following patterns, and it enables the &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Interpreter_pattern"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Interpreter Pattern&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Strategy_pattern"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Strategy Pattern&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Template_method_pattern"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Template Method Pattern&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Visitor_pattern"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Visitor Pattern&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Command_pattern"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Command Pattern&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Chain-of-responsibility_pattern"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Chain-of-responsibility Pattern&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
WordPress already follows many of those patterns brilliantly in other areas.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16692#comment:10" title="Comment 10"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, this can only be done once, so you couldn't have multiple plugins doing pre-processing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16639 (Site inaccessible after upgrade to 3.1, due to endless canonical redirects) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16639#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16639#comment:14/1298918371851561</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16639#comment:13" title="Comment 13"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI, this seems to not JUST affect IIS.  I caught an apache build with it: &lt;a class="ext-link" href="http://wordpress.org/support/topic/31-rewrites?replies=6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/31-rewrites?replies=6&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I left a reply.  That is due to plugins that do not use add_feed().  &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16928" title="Remove redundancy. see #14288."&gt;r16928&lt;/a&gt; fixed canonical redirects for category feeds.  This fix breaks plugins that do not use add_feed() to register their feeds.  We might remove canonical redirects for unregistered feeds. I'll open a separate ticket if we decide to do that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>Slobajossi</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:22:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:7/1298917322903095</guid>
      <description>&lt;p&gt;
OK, thank you filosofo, obviously it's the licensing thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:6/1298916430207358</guid>
      <description>&lt;p&gt;
Are you referring to the swfuploader mentioned here? &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14647" title="#14647: defect (bug): Missing .swf source files (closed: fixed)"&gt;#14647&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It was removed for license-incompatibility reasons in 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:5/1298916388438546</guid>
      <description>wontfix: &lt;p&gt;
That button is present in WP 2.9, but was removed in WP 3.0, so it's intended behaviour.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:4/1298916157848468</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:02:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:3/1298916146289363</guid>
      <description>&lt;p&gt;
I am running a clean install of 3.0.5 and I don't see that button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>jserror.png attached to Ticket #16701</title>
      
        <dc:creator>PuffyThePirateBoy</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:01:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16701/jserror.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16701/jserror.png/1298916084331374</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16701 (JavaScript error on edit/new post/page) created</title>
      
        <dc:creator>PuffyThePirateBoy</dc:creator>

      <pubDate>Mon, 28 Feb 2011 18:00:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16701</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16701/1298916044502008</guid>
      <description>&lt;p&gt;
Using a clean install on Ubuntu/PHP5/WP 3.1 I get "Uncaught ReferenceError: postboxes is not defined" when adding or editing a post or page.
&lt;/p&gt;
&lt;p&gt;
{{{New post: load-scripts.php:158
Editing post: load-scripts.php:219
New page: load-scripts.php:158
Edit page: load-scripts.php:219}}}
&lt;/p&gt;
&lt;p&gt;
When this happen, "Edit permalink" button, drop down arrows in boxes (expand/collapse) and show/hide left column with boxes does not work.
&lt;/p&gt;
&lt;p&gt;
The permalink does not appear to be correct either on the edit pages. Not sure that is related though. See provided screenshot using permalink structure /%year%/%monthnum%/%postname%/.
&lt;/p&gt;
&lt;p&gt;
I have tried this using Win/Chrome 9, Win/FireFox 3.6 and Win/IE8.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 28 Feb 2011 17:58:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:3/1298915910192591</guid>
      <description>&lt;p&gt;
Also, if we're going to rewrite quicktags, let's get rid of some of that HTML-building duplication and generalize the edButton object to generate the markup (and attach its click callback) based on the parameters it already has.
&lt;/p&gt;
&lt;p&gt;
I did this a couple years ago like so:  (I'd change some things now, such as setting the DOM element properties instead of attributes, and it could just as well be an &lt;code&gt;input&lt;/code&gt; element instead of a &lt;code&gt;button&lt;/code&gt;.)
&lt;/p&gt;
&lt;pre class="wiki"&gt;
// button object
var Button = function(args) {
        args = args || {};
        var that = this;
        this.build = function() {
                var attrs = {
                        accesskey:this.access,
                        'class':'qtags-button',
                        id:this.id,
                        type:'button'
                },
                i, button = document.createElement('button');
                button.innerHTML = this.display;
                for ( i in attrs )
                        if ( attrs[i] )
                                button.setAttribute(i, attrs[i]);
                button.onclick = function() { that.callback.apply(that, that.callbackArgs) };
                return button;
        };
        this.opentags = function() {
                return !! ( this.opens &amp;gt; 0 );
        };
        this.opens = 0; // counts of open versions of this tag
        this.display = args.display;
        this.tagStart = args.tagStart || '&amp;lt;' + this.display + '&amp;gt;';
        this.tagEnd = args.tagEnd || '&amp;lt;/' + this.display + '&amp;gt;';
        this.id = args.id || 'qtags-' + this.display;
        this.callback = args.callback || function() {};
        this.callbackArgs = args.callbackArgs || [];
        this.access = args.access;
        this.open = args.open || 0;
        this.el = this.build();
        return this;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16695.2.diff attached to Ticket #16695</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 28 Feb 2011 17:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16695/16695.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16695/16695.2.diff/1298915010710491</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 28 Feb 2011 17:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:2/1298914859741352</guid>
      <description>&lt;p&gt;
I don't think loading the buttons that fraction of a second earlier warrants the necessary extra code.  &lt;code&gt;16695.2.diff&lt;/code&gt; is a simplified version; not as clever but it works in every JS-supporting client I know of.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>Slobajossi</dc:creator>

      <pubDate>Mon, 28 Feb 2011 17:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:2/1298914043306904</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Absolutely 100% sure. If you want to add a video from your server, i.e. not from YouTube, Vimeo, etc. this was the best way, especially for those who don't want to mess with the code and html editor.
&lt;/p&gt;
&lt;p&gt;
You can see a screenshot other user posted in the forum - &lt;a class="ext-link" href="http://thisismyurl.com/wp-content/uploads/2011/02/WordPress-31-Update-Before-After.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://thisismyurl.com/wp-content/uploads/2011/02/WordPress-31-Update-Before-After.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also here is the longest thread in the forum about this &lt;a class="ext-link" href="http://wordpress.org/support/topic/31-what-happened-to-embedded-video-button"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/31-what-happened-to-embedded-video-button&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16666 (Back-end searchable categories) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 17:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16666#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16666#comment:5/1298912441439794</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16666 (Back-end searchable categories) reopened</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 17:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16666#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16666#comment:4/1298912432143188</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16666 (Back-end searchable categories) closed</title>
      
        <dc:creator>jcorradino</dc:creator>

      <pubDate>Mon, 28 Feb 2011 16:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16666#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16666#comment:3/1298911836363636</guid>
      <description>fixed: &lt;p&gt;
Disregard, created a plugin that does this here - &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/searchable-categories/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/searchable-categories/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 16:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:1/1298909717408777</guid>
      <description>&lt;p&gt;
Are you sure the button wasn't added by a plugin?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16593 (wp_set_object_terms not creating links when in a save_post action) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 16:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16593#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16593#comment:5/1298908875846498</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Mon, 28 Feb 2011 15:35:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:24/1298907352926765</guid>
      <description>&lt;p&gt;
Would it make sense to add another arg to download_url()?  I am thinking in terms of media_sideload_image/wp_handle_sideload.  Looks like we download to a temp directory and then later move it over to uploads.  Perhaps we could cut out some code and just dump it directly in?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) created</title>
      
        <dc:creator>Slobajossi</dc:creator>

      <pubDate>Mon, 28 Feb 2011 15:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700/1298907102916713</guid>
      <description>&lt;p&gt;
I hope this isn't intentionally omitted, but since upgrading to WP 3.1 there's no button for embedding flash videos any more in visual editor.
&lt;/p&gt;
&lt;p&gt;
I see few threads in forum on this, but cannot see anyone reported this as a bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16628 (Parent or Child Themes for Post Formats?) updated</title>
      
        <dc:creator>michaelh</dc:creator>

      <pubDate>Mon, 28 Feb 2011 14:52:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16628#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16628#comment:6/1298904729433822</guid>
      <description>&lt;p&gt;
Stole nacin's words and put them into:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/add_theme_support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Function_Reference/add_theme_support&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Child_Themes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Child_Themes&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Post_Formats"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Post_Formats&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16330 (media_sideload_image() broken with filenames containing strange ...) updated</title>
      
        <dc:creator>Coolkevman</dc:creator>

      <pubDate>Mon, 28 Feb 2011 14:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16330#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16330#comment:8/1298902814177344</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16330#comment:7" title="Comment 7"&gt;Coolkevman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Now I think the problem lies somewhere in remote downloading code of WordPress, when it first download the remote file to a temporary location before moving it to the &lt;code&gt;uploads&lt;/code&gt; folder. That's just a guess, I still have to find hard evidences in the code...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here is why I say this. Look at this empty &lt;code&gt;pochette%20avant%20thumb.tmp&lt;/code&gt; temporary file lying in &lt;code&gt;wp-content&lt;/code&gt; folder:
&lt;/p&gt;
&lt;pre class="wiki"&gt;kevin@kev-laptop$ ls -lah ./wp-content
total 24K
drwxr-xr-x 5 www-data www-data 4.0K 2011-02-28 14:54 ./
drwxrwxrwx 7 www-data www-data 4.0K 2011-02-28 14:38 ../
-rwxr-xr-x 1 www-data www-data   30 2007-05-04 23:48 index.php*
drwxr-xr-x 5 www-data www-data 4.0K 2011-02-28 14:33 plugins/
-rw-r--r-- 1 www-data www-data    0 2011-02-28 14:46 pochette%20avant%20thumb.tmp
drwxr-xr-x 3 www-data www-data 4.0K 2011-02-23 15:53 themes/
drwxrwxrwx 3 www-data www-data 4.0K 2011-01-23 23:35 uploads/
$
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16699 (wp_enqueue_script prints current WordPress version not script version) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 28 Feb 2011 14:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16699#comment:2/1298902739886097</guid>
      <description>invalid: &lt;p&gt;
This is the expected behaviour.
&lt;/p&gt;
&lt;p&gt;
You can pass a &lt;code&gt;NULL&lt;/code&gt; parameter in as the version to prevent any version number being printed. See the &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/functions.wp-scripts.php#L37"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;documentation&lt;/a&gt; for this.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16330 (media_sideload_image() broken with filenames containing strange ...) reopened</title>
      
        <dc:creator>Coolkevman</dc:creator>

      <pubDate>Mon, 28 Feb 2011 14:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16330#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16330#comment:7/1298902305415935</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16330#comment:5" title="Comment 5"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As sivel wrote, URLs containing spaces are considered invalid. That's by the standards, so not a wordpress issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for this clarification. From now on I'll assume URLs with spaces are invalid and should be expressed with percent encoding.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However as you wrote you might still have a related problem.
&lt;/p&gt;
&lt;p&gt;
To further test, please replace the spaces inside the URL with %20 (that's the proper way how to write a space inside a URL) and try to fetch that file.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that's exactly what I've done as a second test in my original bug report. That's the part when I use these PHP statements:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  $img_url = str_replace(' ', '%20', html_entity_decode($img_url));
  $new_tag = media_sideload_image($img_url, $post_id);
&lt;/pre&gt;&lt;p&gt;
I just retried this test with the latest WordPress 3.1 (the final release, not the RCs) and it still have the same behaviour (look at my screenshots: &lt;a class="ext-link" href="http://twitpic.com/3s0ets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://twitpic.com/3s0ets&lt;/a&gt; and &lt;a class="ext-link" href="http://twitpic.com/3s0hup"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://twitpic.com/3s0hup&lt;/a&gt; ).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If this does not work, you need to find out which error it is returning and you need to find out which transport you're using. To reduce noise, you can install a plugin like &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/11499/11499-curlforce.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;11499-curlforce.php&lt;/a&gt; that will enforce the use of curl for debugging purposes, so the curl based transport will be always used.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just tried to use this plugin. It complained of missing Curl. So I just installed the &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;php5-curl&lt;/code&gt; package (I'm using kubuntu 10.10) and restarted my Apache to have it work.
&lt;/p&gt;
&lt;p&gt;
Then I've redone my tests (the one replacing spaces by &lt;code&gt;%20&lt;/code&gt;) and I still have the exact same error.
&lt;/p&gt;
&lt;p&gt;
Now I think the problem lies somewhere in remote downloading code of WordPress, when it first download the remote file to a temporary location before moving it to the &lt;code&gt;uploads&lt;/code&gt; folder. That's just a guess, I still have to find hard evidences in the code...
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16699 (wp_enqueue_script prints current WordPress version not script version) updated</title>
      
        <dc:creator>rfair404</dc:creator>

      <pubDate>Mon, 28 Feb 2011 14:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16699#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16699#comment:1/1298901817293144</guid>
      <description>&lt;p&gt;
As a follow up, I know that I am not including a version number when registering the script, but that is displayed as an optional argument on codex, so theoretically shouldn't leaving it blank just not show a version number at all?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16699 (wp_enqueue_script prints current WordPress version not script version) created</title>
      
        <dc:creator>rfair404</dc:creator>

      <pubDate>Mon, 28 Feb 2011 13:52:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16699/1298901177234863</guid>
      <description>&lt;p&gt;
When using wp_enqueue_script and wp_register_script the resulting html output in the header looks like this.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script type="text/javascript" src="http://192.168.1.133/wp-content/themes/pnap/lib/flash/player-files/jwplayer.js?ver=3.2-bleeding"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Notice that the version is 3.2-bleeding which is the the script version, but the wordpress version.
&lt;/p&gt;
&lt;p&gt;
here is the register and enqueue scripts...
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('init', 'pnap_flash_register_swfobject');
function pnap_flash_register_swfobject() {
wp_register_script('jwplayer', PNAP_FLA_URL.'/player-files/jwplayer.js');
}
add_action('wp_print_scripts', 'pnap_flash_enqueue_swfobject');
function pnap_flash_enqueue_swfobject() {
wp_enqueue_script('jwplayer');
}
&lt;/pre&gt;&lt;p&gt;
The good news is that this does not seem to cause any problems at the time being.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16058 (Error massage HTML tags escaped) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 13:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16058#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16058#comment:9/1298899507868915</guid>
      <description>&lt;p&gt;
In 3.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16058 (Error massage HTML tags escaped) reopened</title>
      
        <dc:creator>anthonycole</dc:creator>

      <pubDate>Mon, 28 Feb 2011 13:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16058#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16058#comment:8/1298899311889735</guid>
      <description>&lt;p&gt;
I'm getting this escaped error message with an incorrect password...
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;strong&amp;gt;Error:&amp;lt;/strong&amp;gt; There was an error connecting to the server, Please verify the settings are correct.
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16463 (the_title_attribute() bug) updated</title>
      
        <dc:creator>japh</dc:creator>

      <pubDate>Mon, 28 Feb 2011 13:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16463#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16463#comment:10/1298898933148144</guid>
      <description>&lt;p&gt;
Has this ticket been done?
&lt;/p&gt;
&lt;p&gt;
The codex seems to clearly explain in the description that HTML will be stripped, and the example shows the correct placing of the function and does not include any HTML within the function's parameters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 28 Feb 2011 12:06:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:1/1298894804955615</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16695/16695.diff" title="Attachment '16695.diff' in Ticket #16695"&gt;a patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16695/16695.diff" title="Download"&gt;​&lt;/a&gt; for this.
&lt;/p&gt;
&lt;p&gt;
Because &lt;code&gt;the_editor()&lt;/code&gt; can be used on the front-end, in order for it to be light-weight (having no dependencies), I had to write a DOM ready function for quicktags.js . But it will still utilize jQuery function if it's already there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16695.diff attached to Ticket #16695</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 28 Feb 2011 12:02:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16695/16695.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16695/16695.diff/1298894533812137</guid>
      <description>&lt;p&gt;
don't use document.write(), and output toolbar when DOM is ready
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11957 (Change Admin Menu Save-State Rules) updated</title>
      
        <dc:creator>sbressler</dc:creator>

      <pubDate>Mon, 28 Feb 2011 11:40:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11957#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11957#comment:9/1298893219415343</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10646 (Admin Menus Shouldn't Jump Around on Pageload) updated</title>
      
        <dc:creator>sbressler</dc:creator>

      <pubDate>Mon, 28 Feb 2011 11:40:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10646#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10646#comment:12/1298893210630887</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16698 (Better Table field value upgrade check (minor)) created</title>
      
        <dc:creator>cogmios</dc:creator>

      <pubDate>Mon, 28 Feb 2011 10:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16698</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16698/1298889066881073</guid>
      <description>&lt;p&gt;
line 1463 on /wp-admin/includes/upgrades.php is
&lt;/p&gt;
&lt;pre class="wiki"&gt;preg_match("|".$tablefield-&amp;gt;Field." ([^ ]*( unsigned)?)|i",$cfields[strtolower($tablefield-&amp;gt;Field)], $matches);
$fieldtype = $matches[1];
&lt;/pre&gt;&lt;p&gt;
There is no check IF a $matches is found. If there is no match found an error will be displayed 'undefined index 1'. An Error message could be added here.
&lt;/p&gt;
&lt;p&gt;
Can happen : if the sql code contains no spaces between the fieldname and the type it will generate the not found &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16697 (WordPress up to version 3.1 does not work with MySQL sql_mode = TRADITIONAL) created</title>
      
        <dc:creator>kupokomapa</dc:creator>

      <pubDate>Mon, 28 Feb 2011 08:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16697/1298880771741650</guid>
      <description>&lt;p&gt;
Being bitten up several times by this problem. If you use MariaDB as a MySQL server you would notice that their default settings for sql_mode (&lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.0/en/server-sql-mode.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://dev.mysql.com/doc/refman/5.0/en/server-sql-mode.html&lt;/a&gt;) is set to NO_ENGINE_SUBSTITUTION,TRADITIONAL
This does not work with many of the SQL queries in WordPress, expecially the ones that insert null values for date columns. So two choices here:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;is to make the sql_mode less strict byt choosing the optimal value for wordpress (I put this in the &lt;span class="underline"&gt;construct() method of WP_DB)
&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
mysql_query($this-&amp;gt;prepare("SET sql_mode = &lt;em&gt;;"), $this-&amp;gt;dbh);
&lt;/em&gt;&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;Fix the queries which insert non valid data to table fields (the dates are just one example)
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16694 (wp_dequeue_script() fails to dequeue when a registered script is dependent) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 08:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16694#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16694#comment:3/1298880253176529</guid>
      <description>&lt;p&gt;
I think the fix for that would be wp_enqueue_script() plus &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9346" title="#9346: enhancement: wp_enqueue_script() doesn't work mid-page for footer scripts (closed: fixed)"&gt;#9346&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16694 (wp_dequeue_script() fails to dequeue when a registered script is dependent) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 28 Feb 2011 08:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16694#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16694#comment:2/1298880117558419</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16694#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It should be properly enqueued, instead of printed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If we're to go with this direction, the key is automatically detecting when quicktags should be enqueued.
&lt;/p&gt;
&lt;p&gt;
Would requiring quicktags to be enqueued manually break existing themes or plugins that use &lt;code&gt;the_editor()&lt;/code&gt; on custom admin pages or on the front-end?
&lt;/p&gt;
&lt;p&gt;
Right now they assume &lt;code&gt;wp_print_scripts()&lt;/code&gt; already did the job for them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16696 (No synchronisation between "most used" and "all categories" in link edit) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 28 Feb 2011 07:17:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16696#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16696#comment:1/1298877477569447</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16696.diff attached to Ticket #16696</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 28 Feb 2011 07:16:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16696/16696.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16696/16696.diff/1298877364353869</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16696 (No synchronisation between "most used" and "all categories" in link edit) created</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Mon, 28 Feb 2011 07:14:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16696/1298877277800796</guid>
      <description>&lt;p&gt;
There are issues with the "all categories" and "most used" tabs when editing links:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Go to edit a link
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Click on "Most used" in the category section. All the listed categories are unchecked - including the ones that are checked in the "All Categories" tab. There is no sync between the two.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Now check a category in the "most used" tab. Go to the "all categories" tab and you will find that the same category is now checked (as expected). Now uncheck it from the "all categories" tab. Go to "most used" and it is still checked there. The sync only works one way ( "most used" -&amp;gt; "all categories" ).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The first issue is because &lt;code&gt;wp_popular_terms_checklist()&lt;/code&gt; assumes that you're using it in the context of a particular post, and sets checkedness based on whether the &lt;code&gt;$post&lt;/code&gt; global has that term. If the &lt;code&gt;$post&lt;/code&gt; global is empty (as when editing links), nothing is checked. I don't think we should be using &lt;code&gt;wp_popular_terms_checklist()&lt;/code&gt; as it's context is for individual posts.
&lt;/p&gt;
&lt;p&gt;
The second issue is because the IDs on the most used elements are wrong compared to what the Javascript is looking for.
&lt;/p&gt;
&lt;p&gt;
Patch to follow.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11824 (Erroneous MIME type for .ico files) updated</title>
      
        <dc:creator>RyanMurphy</dc:creator>

      <pubDate>Mon, 28 Feb 2011 07:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11824#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11824#comment:3/1298876579657607</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch still applies cleanly. Possible for 3.2?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2691 (HTML comments in posts aren't handled properly.) updated</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 28 Feb 2011 06:45:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2691#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2691#comment:7/1298875522804359</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've created a more resilient &lt;a class="ext-link" href="http://code.google.com/p/mrclay/source/browse/trunk/php/MrClay/AutoP.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;autop implementation&lt;/a&gt; and a more rigorous &lt;a class="ext-link" href="http://code.google.com/p/mrclay/source/browse/trunk/php/MrClay/AutoP/test.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;testcase&lt;/a&gt; cobbled from various WP tickets. It avoids the dangerous regex operations by doing most work in a DOMDocument object.
&lt;/p&gt;
&lt;p&gt;
This is undoubtedly slower than current wpautop (and may choke on extremely invalid HTML), but happily handles markup that the current wpautop breaks. Since there's no real spec for wpautop, it's hard to duplicate the style of markup wpautop outputs when it &lt;em&gt;does&lt;/em&gt; work, but a lot of testing will surely be necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16411 (Custom Login and Registration URLs) updated</title>
      
        <dc:creator>RyanMurphy</dc:creator>

      <pubDate>Mon, 28 Feb 2011 06:42:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16411#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16411#comment:9/1298875357149328</guid>
      <description>&lt;p&gt;
Ozh has a &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/ozh-simpler-login-url/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plugin&lt;/a&gt; that does /login instead of /wp-login.php. I don't think it would be too hard for it to also handle /register if someone asked/sent him a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) created</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 28 Feb 2011 06:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695/1298873422625694</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16694" title="#16694: defect (bug): wp_dequeue_script() fails to dequeue when a registered script is dependent (closed: fixed)"&gt;#16694&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In quicktags.js, &lt;code&gt;document.write()&lt;/code&gt; is used, which is obtrusive.
&lt;/p&gt;
&lt;p&gt;
This also causes a bug where dragging a meta box containing quicktags would render a page blank, with only a line of buttons at the top.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12307 (files missing closing php tags) updated</title>
      
        <dc:creator>RyanMurphy</dc:creator>

      <pubDate>Mon, 28 Feb 2011 05:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12307#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12307#comment:17/1298872054635868</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>12307.diff attached to Ticket #12307</title>
      
        <dc:creator>RyanMurphy</dc:creator>

      <pubDate>Mon, 28 Feb 2011 05:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12307/12307.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12307/12307.diff/1298871979323784</guid>
      <description>&lt;p&gt;
diff as of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17488" title="3.2-bleeding"&gt;r17488&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16628 (Parent or Child Themes for Post Formats?) updated</title>
      
        <dc:creator>Lorelle</dc:creator>

      <pubDate>Mon, 28 Feb 2011 05:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16628#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16628#comment:5/1298870941550828</guid>
      <description>&lt;p&gt;
Thanks. I'll test this and add it to the Codex if the article needs updating.
&lt;/p&gt;
&lt;p&gt;
And honestly, if post formats has been added to the core without some Admin access, it leaves folks digging into the code to get it working, which isn't the best of ideas. Just saying. More work for the support community to educate...no different from the custom post types.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16694 (wp_dequeue_script() fails to dequeue when a registered script is dependent) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 03:15:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16694#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16694#comment:1/1298862932415707</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like the issue is that quicktags gets spit out by wp_print_scripts(). Enqueueing it doesn't matter, thus dequeueing it doesn't matter.
&lt;/p&gt;
&lt;p&gt;
It should be properly enqueued, instead of printed. (The script should also fire on ready, not direct document.writes on load. Whole thing needs a rewrite.) That's probably for another ticket.
&lt;/p&gt;
&lt;p&gt;
Besides that, the dequeue function should really have a return value. The bug still stands in that wp_dequeue_script() fails to dequeue when an enqueued script is dependent. If that's not a bug, then we need a return false to know that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16694 (wp_dequeue_script() fails to dequeue when a registered script is dependent) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 03:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16694/1298862351930244</guid>
      <description>&lt;p&gt;
I'm trying to dequeue quicktags. It doesn't work.
&lt;/p&gt;
&lt;p&gt;
sivel was able to track down that scripts are not dequeued, when another script is dependent on them.
&lt;/p&gt;
&lt;p&gt;
Only, in this case, quicktag's only dependent (admin-comments), will always be registered, but on this page, it not enqueued. admin-comment's only dependent (dashboard) is also not enqueued, and is only registered.
&lt;/p&gt;
&lt;p&gt;
Two issues:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;These functions should have return values for them. If they're going to fail, we need to know.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;I should be able to dequeue quicktags in this situation. If admin-comments *is* enqueued, perhaps I should not, unless I dequeue admin-comments first. But at the very least, a registered and unqueued dependent should not prevent dequeueing.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
(Extra bug noticed -- the comment reply form is rendered on post-new.php, despite the comments meta box not being supported by this post type.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16693 (media_sideload_image() fails on jpeg names) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:36:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16693#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16693#comment:5/1298856991744205</guid>
      <description>&lt;p&gt;
Updated the patch to the stepping-on-toes edition (16693.4.diff)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16693.4.diff attached to Ticket #16693</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16693/16693.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16693/16693.4.diff/1298856924045915</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16693 (media_sideload_image() fails on jpeg names) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:29:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16693#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16693#comment:4/1298856567862648</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
sivel's patch looks good. I also went through other instances and made us a bit more consistent in select places.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16693.3.diff attached to Ticket #16693</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16693/16693.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16693/16693.3.diff/1298856516786333</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16693 (media_sideload_image() fails on jpeg names) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16693#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16693#comment:3/1298856367380144</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Small variation on the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16693.2.diff attached to Ticket #16693</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16693/16693.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16693/16693.2.diff/1298856301705562</guid>
      <description>&lt;p&gt;
Little variation on the patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16693.diff attached to Ticket #16693</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:19:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16693/16693.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16693/16693.diff/1298855988192131</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16693 (media_sideload_image() fails on jpeg names) updated</title>
      
        <dc:creator>numediaweb</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16693#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16693#comment:2/1298855283873690</guid>
      <description>&lt;p&gt;
Thanx ncin,
I copied the same function from media.php to my custom functions and added a prefix to its name, then, just deleted the jpe|JPE|
&lt;/p&gt;
&lt;p&gt;
waiting for the official fix in the next release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:5/1298855100134891</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've been unable to reproduce. If someone is willing to give me access to an install where I can reproduce it, I should be able to track this down. My email is my username here, at wordpress.org.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>reviewmylife</dc:creator>

      <pubDate>Mon, 28 Feb 2011 01:00:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:4/1298854811349450</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>reviewmylife</dc:creator>

      <pubDate>Mon, 28 Feb 2011 00:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:3/1298854450447402</guid>
      <description>&lt;p&gt;
Some more information to help you reproduce this - I got this on one of my blogs when I upgraded to 3.1. It is on an Apache server. All the category / tag pages now give a 404 error when accessed from the existing URLs.
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress address (URL): http://www.[MYBLOG].co.uk/blog
Site address (URL): http://www.[MYBLOG].co.uk
Permalink custom structure: /blog/%year%/%monthnum%/%day%/%postname%/
Category base:
Tag base:
&lt;/pre&gt;&lt;p&gt;
&lt;em&gt;Update (the category links in the posts are now consistent with the actual category locations (maybe I was looking at a cached page previously) - so the issue now is that the urls changed from '/blog/category/...' to '/category/...' when WP was updated.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
The categories were previously in this form:
&lt;a class="ext-link" href="http://www.[MYBLOG].co.uk/blog/category/japan/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.[MYBLOG].co.uk/blog/category/japan/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Now they have moved to:
&lt;a class="ext-link" href="http://www.[MYBLOG].co.uk/category/japan/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.[MYBLOG].co.uk/category/japan/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If I add 'blog' to the 'Category Base' then all the single posts start giving a 404.
&lt;/p&gt;
&lt;p&gt;
As a temporary workaround I have added a 302 redirect from the location where the categories / tags were previously to their new location:
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteRule ^blog/category/(.+)$ http://www.[MYBLOG].co.uk/category/$1 [R=302,L]
RewriteRule ^blog/tag/(.+)$ http://www.[MYBLOG].co.uk/tag/$1 [R=302,L]
&lt;/pre&gt;&lt;p&gt;
Maybe I'll make this a 301 redirect as the category/tag URLs do look better without the 'blog'.
&lt;/p&gt;
&lt;p&gt;
However adding an entry to the 'Category base' still shouldn't cause all posts to 404 - especially as the category has no part in the post URL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16693 (media_sideload_image() fails on jpeg names) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 00:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16693#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16693#comment:1/1298853984035200</guid>
      <description>&lt;p&gt;
Sounds like the ordering could be better. Try this for the regular expression instead:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/[^\?]+\.(jpg|jpeg|jpe|gif|png)/i&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16693 (media_sideload_image() fails on jpeg names) created</title>
      
        <dc:creator>numediaweb</dc:creator>

      <pubDate>Mon, 28 Feb 2011 00:38:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16693</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16693/1298853510938110</guid>
      <description>&lt;p&gt;
if you give an image file name with jpeg as extension, media_sideload_image() returns .jpe file name extension.
&lt;/p&gt;
&lt;p&gt;
the problem is in the function at file: wp-admin/includes/media.php,line 565
&lt;/p&gt;
&lt;pre class="wiki"&gt;preg_match('/[^\?]+\.(jpg|JPG|jpe|JPE|jpeg|JPEG|gif|GIF|png|PNG)/', 'test.jpeg', $matches);
echo basename($matches[0]); // returns : test.jpe
&lt;/pre&gt;&lt;p&gt;
this bugs image uploading process; it doesn't allow post thumbnail generation.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16690 (Hello Dolly readme.txt on Plugins SVN needs to be updated) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 28 Feb 2011 00:28:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16690#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16690#comment:3/1298852893818450</guid>
      <description>&lt;p&gt;
Probably.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16690 (Hello Dolly readme.txt on Plugins SVN needs to be updated) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Mon, 28 Feb 2011 00:24:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16690#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16690#comment:2/1298852694072003</guid>
      <description>&lt;p&gt;
Time it with 3.1.1? :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>