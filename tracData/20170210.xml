<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39055 (REST API: order is ignored when orderby is set to include) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 10 Feb 2017 23:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39055#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39055#comment:17/1486769095086219</guid>
      <description>&lt;p&gt;
I think we are getting close here 😅
&lt;/p&gt;
&lt;p&gt;
However, these tests don't match the expected behavior discussed earlier in the ticket, and they also fail on my WP install.  It looks like you still have &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39055/39055.diff" title="Attachment '39055.diff' in Ticket #39055"&gt;39055.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39055/39055.diff" title="Download"&gt;​&lt;/a&gt; from earlier in the thread applied to your WP checkout.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are there any resources I might have missed for guidance on where to place tests, or is just a matter of figuring it out on a case by case basis?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not aware of any - I noticed on a closer look that everything in &lt;code&gt;search.php&lt;/code&gt; was testing the &lt;code&gt;search&lt;/code&gt; parameter, and &lt;code&gt;results.php&lt;/code&gt; contained more generic tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:42:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:8/1486766531366800</guid>
      <description>invalid: &lt;p&gt;
Thanks for the follow-up!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:7/1486766189470554</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I tested with a fresh install of 4.7.2 and don't see this problem. I had previously deactivated all my plugins except those required for authorization thinking this would eliminate any plugin related issues. I've had a couple of different membership plugins installed in the past and I'm guessing one of these left something residual in place.
&lt;/p&gt;
&lt;p&gt;
Thanks for all the help in getting this resolved!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39830 (Unable to detect REST/rest_no_route) updated</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39830#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39830#comment:2/1486764910332617</guid>
      <description>&lt;p&gt;
Thank you for your guidance.
&lt;/p&gt;
&lt;p&gt;
I've chosen &lt;code&gt;rest_post_dispatch&lt;/code&gt; for status code inspection.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:33/1486764789519420</guid>
      <description>&lt;p&gt;
Seems like a solid core feature for 4.8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>nimmolo</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:32/1486764343493524</guid>
      <description>&lt;p&gt;
+1 for add to core. The plugin mentioned by @bfintal works great, but this seems like a necessary core feature. Sites hosted on servers without FTP access are too much of a chore to update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 21:47:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:6/1486763258824900</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39839#comment:5" title="Comment 5"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From a quick glance, it seems that you might not be passing the nonce with the request: &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/#cookie-authentication"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/#cookie-authentication&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you don't pass the nonce, the request will be treated as an unauthenticated request, and will give you the behaviour you're seeing here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the tip. I am using OAuth and researched it quite heavily to get it to work properly with the REST API. I definitely hit this issue at one point, but am able to both create and update a post with the same authentication routine now so the authentication appears to be working at this point. Additionally, I see the correct $user-&amp;gt;ID being checked in has_cap for this request.
&lt;/p&gt;
&lt;p&gt;
I also tested with Basic Auth and see the same behavior. I'm testing with a fresh install of 4.7.2 now to see if an old plugin has left something residual in place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39841 (Additional Post Button Options) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 10 Feb 2017 21:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39841#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39841#comment:3/1486760751845405</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39841#comment:2" title="Comment 2"&gt;lukecavanagh&lt;/a&gt;:
2.0, I think. Not sure when they disappeared :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:5/1486760222152957</guid>
      <description>&lt;p&gt;
From a quick glance, it seems that you might not be passing the nonce with the request: &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/#cookie-authentication"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/#cookie-authentication&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you don't pass the nonce, the request will be treated as an unauthenticated request, and will give you the behaviour you're seeing here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39841 (Additional Post Button Options) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:52:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39841#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39841#comment:2/1486759971111009</guid>
      <description>&lt;p&gt;
@johnbillion
&lt;/p&gt;
&lt;p&gt;
Which version of WP had those button options in it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:12/1486759125055484</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/27404#comment:52"&gt;Comment&lt;/a&gt; on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/27404" title="#27404: feature request: Widget Customizer: Allow adding inactive widgets to widget areas (assigned)"&gt;#27404&lt;/a&gt; (Widget Customizer: Allow adding inactive widgets to widget areas):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm going to suggest that widgets most commonly get moved to inactive widget area as the result of a theme switch (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;). It would be very useful if widgets that were made inactive as part of a theme switch could be grouped in a way to easily batch-add them to a sidebar in the new theme. By grouping them I don't mean widget persistent groups (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19912" title="#19912: feature request: Add Widget Groups and Locations (closed: maybelater)"&gt;#19912&lt;/a&gt;), but rather transient groupings that essentially are pulling the grouping of widgets from another theme's widget-sidebar assignments. Being able to easily and intuitively re-assign widgets from the previous theme's sidebars to the new theme's sidebars, maintaining their ordering, would be a huge.
&lt;/p&gt;
&lt;p&gt;
If the old theme has 3 sidebars whereas the new theme as 2 sidebars, note that this could mean that 2 groupings of inactive widgets could be added to one sidebar on the new theme. Two additional questions then come to mind: should the best-guess re-assignment of widgets from the old sidebar's theme to a sidebar in the new theme be eliminated unless the sidebar IDs are exact matches (e.g. &lt;code&gt;sidebar-1&lt;/code&gt;)? If not, then it is likely that a re-assignment of widgets in the new theme will be wrong and need to be re-assigned. In that case, there should have to be a way to bulk move all widgets from one sidebar to another.
&lt;/p&gt;
&lt;p&gt;
It may be that this theme-switch grouping is out of scope for this ticket and should instead be addressed as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:52/1486758893701371</guid>
      <description>&lt;p&gt;
I'm going to suggest that widgets most commonly get moved to inactive widget area as the result of a theme switch (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;). It would be very useful if widgets that were made inactive as part of a theme switch could be grouped in a way to easily batch-add them to a sidebar in the new theme. By grouping them I don't mean widget persistent groups (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19912" title="#19912: feature request: Add Widget Groups and Locations (closed: maybelater)"&gt;#19912&lt;/a&gt;), but rather transient groupings that essentially are pulling the grouping of widgets from another theme's widget-sidebar assignments. Being able to easily and intuitively re-assign widgets from the previous theme's sidebars to the new theme's sidebars, maintaining their ordering, would be a huge.
&lt;/p&gt;
&lt;p&gt;
If the old theme has 3 sidebars whereas the new theme as 2 sidebars, note that this could mean that 2 groupings of inactive widgets could be added to one sidebar on the new theme. Two additional questions then come to mind: should the best-guess re-assignment of widgets from the old sidebar's theme to a sidebar in the new theme be eliminated unless the sidebar IDs are exact matches (e.g. &lt;code&gt;sidebar-1&lt;/code&gt;)? If not, then it is likely that a re-assignment of widgets in the new theme will be wrong and need to be re-assigned. In that case, there should have to be a way to bulk move all widgets from one sidebar to another.
&lt;/p&gt;
&lt;p&gt;
It may be that this theme-switch grouping is out of scope for this ticket and should instead be addressed as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
/cc @melchoyce
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39296 (Create new dashicons (4.8)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39296#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39296#comment:3/1486758131692727</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design-dashicons by empireoflight. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design-dashicons/p1486758129000262"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38702 (REST API: Add accessor functions for post_status and post_parent) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:08:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38702#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38702#comment:2/1486757332757126</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The first thing to do is to replace any current usages of &lt;code&gt;$post-&amp;gt;post_status&lt;/code&gt; with simply &lt;code&gt;get_post_status( $post-&amp;gt;ID )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/214"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/214&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The lesser-important change to core is to handle permission checks for a post/page that has an &lt;code&gt;inherit&lt;/code&gt; status when the &lt;code&gt;post_parent&lt;/code&gt; itself is modified in the customized state. In this case, there needs to be filters applied on the &lt;code&gt;post_parent&lt;/code&gt; value itself. However, there is no &lt;code&gt;get_post_parent()&lt;/code&gt; function with any filters currently in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39830 (Unable to detect REST/rest_no_route) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39830#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39830#comment:1/1486757316112930</guid>
      <description>wontfix: &lt;p&gt;
The REST API routing system is independent of &lt;code&gt;template_redirect&lt;/code&gt;, since it's not part of the templating system. This is by design. &lt;code&gt;rest_post_dispatch&lt;/code&gt; or &lt;code&gt;rest_pre_serve_request&lt;/code&gt; can be used to catch errors from the API.
&lt;/p&gt;
&lt;p&gt;
(It's also possible for 404 errors to be generated inside controllers, not just by the routing. For example, a request to a nonexistent post ID will throw a 404.)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>back-in-the-day.png attached to Ticket #39841</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39841/back-in-the-day.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39841/back-in-the-day.png/1486756656809663</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:4/1486755730498689</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39839#comment:2" title="Comment 2"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the meta capability of “read” (mapped from “read_post”) is never present in the user’s capabilities in my testing, failing every request to read a draft post via the REST API. “read” is also never present when accessing this draft post from the UI, but processing continues as expected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, &lt;code&gt;read&lt;/code&gt; is the only basic capability available to &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/schema.php?marks=672,697,713,721,727#L692"&gt;all built-in user roles&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.7.2/src/wp-admin/includes/schema.php#L692" title="Download"&gt;​&lt;/a&gt;, including Subscriber.
&lt;/p&gt;
&lt;p&gt;
The user in your testing appears to have some custom capabilities created by plugins. Does the issue still happen on a clean install?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll test with a clean install this afternoon and update with the results. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:40:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:3/1486755656243740</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39839#comment:1" title="Comment 1"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've tested this using a few different test users with roles &lt;code&gt;administrator&lt;/code&gt;, &lt;code&gt;author&lt;/code&gt;, and &lt;code&gt;contributor&lt;/code&gt;.  All permissions to read my own or another user's post behave as I would expect in both the API and in wp-admin.
&lt;/p&gt;
&lt;p&gt;
Are you sure you're logged in as the same user account in both wp-admin and the REST API?  I'd suggest visiting your user profile in wp-admin and doing a request for &lt;code&gt;/users/me?context=edit&lt;/code&gt;, and comparing the results.
&lt;/p&gt;
&lt;p&gt;
There could also be a misbehaving plugin causing this issue.  Have you tried from a fresh install of WP?
&lt;/p&gt;
&lt;p&gt;
For future reference, it's really helpful to provide links to places in the WP code, rather than just files and line numbers.  Line numbers will change over time, making the ticket information invalid, and it is much easier to follow the flow of a ticket if I don't have to stop and look up lots of different places in the code.  For example:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1274#L1256"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1274#L1256&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/class-wp-rest-server.php?marks=902#L894"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/class-wp-rest-server.php?marks=902#L894&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think both of these checks in the API are correct... if a user is trying to read a post, then we need to perform the appropriate capabilities check.
&lt;/p&gt;
&lt;p&gt;
Neither of the wp-admin capabilities checks you referenced (for example &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/post.php?marks=1309#L1289"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/post.php?marks=1309#L1289&lt;/a&gt;) appear to be relevant to the core flow of editing a post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm definitely logged in to the same account (verified the ID internally). I'll test with a clean install of 4.7.2 this afternoon and post the results.
&lt;/p&gt;
&lt;p&gt;
Thanks for the quick response!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38073 (Deprecate and replace wp_reset_vars()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38073#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38073#comment:6/1486754266307186</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by lukecavanagh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1486754263013086"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:2/1486754255435460</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
the meta capability of “read” (mapped from “read_post”) is never present in the user’s capabilities in my testing, failing every request to read a draft post via the REST API. “read” is also never present when accessing this draft post from the UI, but processing continues as expected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, &lt;code&gt;read&lt;/code&gt; is the only basic capability available to &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/schema.php?marks=672,697,713,721,727#L692"&gt;all built-in user roles&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.7.2/src/wp-admin/includes/schema.php#L692" title="Download"&gt;​&lt;/a&gt;, including Subscriber.
&lt;/p&gt;
&lt;p&gt;
The user in your testing appears to have some custom capabilities created by plugins. Does the issue still happen on a clean install?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:1/1486753428159389</guid>
      <description>&lt;p&gt;
I've tested this using a few different test users with roles &lt;code&gt;administrator&lt;/code&gt;, &lt;code&gt;author&lt;/code&gt;, and &lt;code&gt;contributor&lt;/code&gt;.  All permissions to read my own or another user's post behave as I would expect in both the API and in wp-admin.
&lt;/p&gt;
&lt;p&gt;
Are you sure you're logged in as the same user account in both wp-admin and the REST API?  I'd suggest visiting your user profile in wp-admin and doing a request for &lt;code&gt;/users/me?context=edit&lt;/code&gt;, and comparing the results.
&lt;/p&gt;
&lt;p&gt;
There could also be a misbehaving plugin causing this issue.  Have you tried from a fresh install of WP?
&lt;/p&gt;
&lt;p&gt;
For future reference, it's really helpful to provide links to places in the WP code, rather than just files and line numbers.  Line numbers will change over time, making the ticket information invalid, and it is much easier to follow the flow of a ticket if I don't have to stop and look up lots of different places in the code.  For example:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1274#L1256"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1274#L1256&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/class-wp-rest-server.php?marks=902#L894"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/class-wp-rest-server.php?marks=902#L894&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think both of these checks in the API are correct... if a user is trying to read a post, then we need to perform the appropriate capabilities check.
&lt;/p&gt;
&lt;p&gt;
Neither of the wp-admin capabilities checks you referenced (for example &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/post.php?marks=1309#L1289"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/post.php?marks=1309#L1289&lt;/a&gt;) appear to be relevant to the core flow of editing a post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39841 (Additional Post Button Options) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39841#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39841#comment:1/1486753151061912</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39840 (Performance issue / Woocommerce) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39840#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39840#comment:2/1486752968455167</guid>
      <description>invalid: &lt;p&gt;
Hi @thomasoriis, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac instance is intended for bugs and enhancements in WordPress core. For plugin issues, please report them to the plugin authors.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Static.png attached to Ticket #39841</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39841/Static.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39841/Static.png/1486751937175364</guid>
      <description>&lt;p&gt;
Static
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Active.png attached to Ticket #39841</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39841/Active.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39841/Active.png/1486751926946266</guid>
      <description>&lt;p&gt;
Active
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39841 (Additional Post Button Options) created</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39841</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39841/1486751904849205</guid>
      <description>&lt;p&gt;
Turn "Update"/"Publish" into a button with a dropdown. So if a user selects say Update &amp;amp; Return it will redirect the user back to the posts admin screen. If a users selects the Update &amp;amp; Add New option then it would update that existing post, then redirect to a new posts screen or return to the post list screen instead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39814 (wp_usermeta uses umeta_id instead of meta_id) updated</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:35:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39814#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39814#comment:1/1486751749094745</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like the point.
It should be &lt;code&gt;meta_id&lt;/code&gt; as we already following same name for all meta-data tables.
It should considered as Bug. even it is not any issue with functionality but still for standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39647 (Make media upload "HTTP error." more user-helpful) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39647#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39647#comment:5/1486751492233365</guid>
      <description>&lt;p&gt;
As noted in the Slack mention above, @joemcgill and I met about this ticket a bit at Loopconf regarding what would be necessary for the first steps here.
&lt;/p&gt;
&lt;p&gt;
They look something like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improve JS handling of http error codes and body, to provide more detailed error messages
&lt;/li&gt;&lt;li&gt;Save progress of meta/&lt;code&gt;multi_resize&lt;/code&gt; during creation of the intermediate images (with save basic meta before starting resizing process)
&lt;/li&gt;&lt;li&gt;Resume &lt;code&gt;multi_resize&lt;/code&gt; without re-uploading the file
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've got a pretty good idea of what the latter two will look like, but any insights of the JS handling -- in particular, why we're not surfacing any error details -- would be appreciated. I remember that there were technical challenges (rather than deciding the information was not helpful) involved in resolving this, but do not remember all of the background.
&lt;/p&gt;
&lt;p&gt;
I don't think it necessarily needs to happen in this order, as making it so that thumbnail resizing resumes in any form will help more users be successful in getting their images uploaded (and eventually not having the HTTP Error show up).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39840 (Performance issue / Woocommerce) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39840#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39840#comment:1/1486751244472885</guid>
      <description>&lt;p&gt;
@thomasoriis
&lt;/p&gt;
&lt;p&gt;
A better place would be to post as an issue on GitHub.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827#comment:5/1486750744366787</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35827#comment:4" title="Comment 4"&gt;voldemortensen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've also been working through some concepts for this. I don't have a patch yet, but I'll take a look at @celloexpressions to get some ideas.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just wanted to follow up here — have you had a chance to review?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39647 (Make media upload "HTTP error." more user-helpful) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:12:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39647#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39647#comment:4/1486750342957752</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1486750340001090"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35126-ie11-postbox-underline.patch attached to Ticket #35126</title>
      
        <dc:creator>Cheffheid</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:12:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35126/35126-ie11-postbox-underline.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35126/35126-ie11-postbox-underline.patch/1486750325512576</guid>
      <description>&lt;p&gt;
Fixes stray underline in IE11 on postbox toggle arrows
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>Cheffheid</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:11:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:45/1486750282460440</guid>
      <description>&lt;p&gt;
It's slightly weird that IE11 would render that underline.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;text-decoration&lt;/code&gt; is being set to none on the &lt;code&gt;:before&lt;/code&gt; with an !important and everything, but I guess having &lt;code&gt;.button-link&lt;/code&gt; set it to underline is enough for it to render it on the button's content.
&lt;/p&gt;
&lt;p&gt;
Setting &lt;code&gt;text-decoration&lt;/code&gt; to none on the button seems to fix it. I'll upload a patch for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838#comment:3/1486750129091661</guid>
      <description>&lt;p&gt;
@SergeyBiryukov
&lt;/p&gt;
&lt;p&gt;
Yes, we need to maintain compatibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:19/1486750103215108</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1486750100001078"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39840 (Performance issue / Woocommerce) created</title>
      
        <dc:creator>thomasoriis</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:06:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39840</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39840/1486750008124113</guid>
      <description>&lt;p&gt;
I have noticed that woocommerce checks every single filter if it has a wrong name to raise a deprecated notice. They could handle this in a better way.
&lt;/p&gt;
&lt;p&gt;
I add the ticket with you som you can give Woothemes a guideline. With a small site it is no problem but when you have a lot of trafic it's bad. Maybe it only runs during debug (i am not sure). But if they just search for woocommerce if this sting is present they can start doing their check or leave early.
&lt;/p&gt;
&lt;p&gt;
I hope you will handle this matter with woocommerce.
&lt;/p&gt;
&lt;p&gt;
Best Regards Thomas Riis
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:05:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:29/1486749941532107</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1486749938001075"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838#comment:2/1486749426957565</guid>
      <description>&lt;p&gt;
Using &lt;code&gt;wp_enqueue_script()&lt;/code&gt; for &lt;code&gt;html5.js&lt;/code&gt; was previously suggested in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30810" title="#30810: enhancement: Twenty Fifteen: Enqueue html5.js (closed: wontfix)"&gt;#30810&lt;/a&gt;, but that was before conditional comments for JS became available (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16024" title="#16024: enhancement: Conditional Comments for JS (closed: fixed)"&gt;#16024&lt;/a&gt;), so we could probably take another look.
&lt;/p&gt;
&lt;p&gt;
There are backwards compatibility concerns though, conditional comments for JS are only available in WordPress 4.2+, and Twenty Fifteen should remain compatible with WordPress 4.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39764 ('pre_get_site_by_path' filter is called before plugin API is loaded) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:50:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39764#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39764#comment:1/1486749049300404</guid>
      <description>invalid: &lt;p&gt;
This filter is one of a few which are applied very early on during the bootstrap process of WordPress Multisite, before the current site has been determined.
&lt;/p&gt;
&lt;p&gt;
This filter fires before plugins are loaded, but it can be used within a custom &lt;code&gt;wp-content/sunrise.php&lt;/code&gt; file. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'pre_get_site_by_path', function( $site, $domain, $path, $segments, $paths ) {
	return WP_Site::get_instance( rand( 1, 10 ) );
}, 10, 5 );
&lt;/pre&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838#comment:1/1486748977176483</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The "One thought on ..." issue should be resolved in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39660" title="#39660: enhancement: Missing singular placeholder, needed for some languages on comments.php (closed: fixed)"&gt;#39660&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) created</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839/1486748658548823</guid>
      <description>&lt;p&gt;
I’m testing the REST API and have discovered a problem with how the REST API processes permissions. I am able to create a post or page successfully as well as update a post or page successfully, however, attempting to retrieve a draft post or page I had previously created fails with a 403 status from line 902 in class-wp-rest-server.php.
&lt;/p&gt;
&lt;p&gt;
For reference, I’m testing urls of the form:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://&amp;lt;domain&amp;gt;/wp-json/wp/v2/posts/&amp;lt;id&amp;gt;
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://&amp;lt;domain&amp;gt;/wp-json/wp/v2/posts/&amp;lt;id&amp;gt;?context=edit
&lt;/pre&gt;&lt;p&gt;
The reason for the failure is because the function get_item_permissions_check in class-wp-rest-posts-controller.php is returning false to class-wp-rest-server.php at the invocation on line 897. if $request[‘context’] is "edit", get_item_permissions_check makes a call to check_update_permission on line 395 (which always succeeds). It then makes a call to check_read_permission on line 412 and returns the return value of that function call to class-wp-rest-server.php. This return value is always false, causing class-wp-rest-server.php to fail the request with 403 on line 902.
&lt;/p&gt;
&lt;p&gt;
check_read_permission makes a call to current_user_can on line 1274 to check for the read_post capability. This call eventually invokes the has_cap function in class-wp-user.php on line 715. “read_post” is mapped to a meta capability of “read” on line 723. In the subsequent check for “read” in all the user’s capabilities ($capabilities) on line 750, “read” is not found, therefore the function returns false to check_read_permission, which in turn, returns false to get_item_permissions and back to class-wp-rest-server.php as well.
&lt;/p&gt;
&lt;p&gt;
The problem appears not to be in the evaluation of the permission by check_read_permission and subsequently called routines, but in the handling of the returned value by class-wp-rest-server.php. I verified this by analyzing these permission checks when viewing or editing the same draft post from the UI.
&lt;/p&gt;
&lt;p&gt;
In this case, I logged in as the same user I’m testing with from my REST API test program and clicked on Edit for the post I’ve been testing with which evaluates to a a url of the form:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://&amp;lt;domain&amp;gt;/wp-admin/post.php?post=&amp;lt;id&amp;gt;&amp;amp;action=edit
&lt;/pre&gt;&lt;p&gt;
In this case, there are a couple of calls to current_user_can for “read_post” from various locations in the code. admin-bar.php on line 593 makes a call to current_user_can for “read_post” and the evaluation of the permission from this point forward is identical to the REST-based request. “read_post” is mapped to a meta capability of “read” which is still not found in the full list of the user’s capabilities (wp-user.php line 750). The difference between the REST-based request and the UI request is how this false is ultimately handled. In the REST case, this false causes the request to fail with a 403. In this UI case, this false is returned to admin-bar.php on line 593 but processing continues. Likewise wp-admin-&amp;gt;includes-&amp;gt;post.php on line 1309 calls current_user_can for “read_post” and the evaluation of the permission occurs the same. In neither case, however, does the fact the check for the “read_post” capability returns false impact processing.
&lt;/p&gt;
&lt;p&gt;
In another instance, I tested from the UI with a url of the form:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://&amp;lt;domain&amp;gt;/?p=&amp;lt;id&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Using this approach to preview the draft post (while logged in as the same user), the “read_post” capability is never checked, only “edit_post” and “read” in various places. In each case, “read” meta maps to “read” which is again never found in the user’s capabilities, however, processing continues and the page displays as expected.
&lt;/p&gt;
&lt;p&gt;
For reference, in either the UI or API case, the user’s full set of capabilities is identical as determined in has_cap on line 743 in class-wp-user.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    [switch_themes] =&amp;gt; 1
    [edit_themes] =&amp;gt; 1
    [activate_plugins] =&amp;gt; 1
    [edit_plugins] =&amp;gt; 1
    [edit_users] =&amp;gt; 1
    [edit_files] =&amp;gt; 1
    [manage_options] =&amp;gt; 1
    [moderate_comments] =&amp;gt; 1
    [manage_categories] =&amp;gt; 1
    [manage_links] =&amp;gt; 1
    [upload_files] =&amp;gt; 1
    [import] =&amp;gt; 1
    [unfiltered_html] =&amp;gt; 1
    [edit_posts] =&amp;gt; 1
    [edit_others_posts] =&amp;gt; 1
    [edit_published_posts] =&amp;gt; 1
    [publish_posts] =&amp;gt; 1
    [edit_pages] =&amp;gt; 1
    [edit_others_pages] =&amp;gt; 1
    [edit_published_pages] =&amp;gt; 1
    [publish_pages] =&amp;gt; 1
    [delete_pages] =&amp;gt; 1
    [delete_others_pages] =&amp;gt; 1
    [delete_published_pages] =&amp;gt; 1
    [delete_posts] =&amp;gt; 1
    [delete_others_posts] =&amp;gt; 1
    [delete_published_posts] =&amp;gt; 1
    [delete_private_posts] =&amp;gt; 1
    [edit_private_posts] =&amp;gt; 1
    [read_private_posts] =&amp;gt; 1
    [delete_private_pages] =&amp;gt; 1
    [edit_private_pages] =&amp;gt; 1
    [read_private_pages] =&amp;gt; 1
    [delete_users] =&amp;gt; 1
    [create_users] =&amp;gt; 1
    [unfiltered_upload] =&amp;gt; 1
    [edit_dashboard] =&amp;gt; 1
    [update_plugins] =&amp;gt; 1
    [delete_plugins] =&amp;gt; 1
    [install_plugins] =&amp;gt; 1
    [update_themes] =&amp;gt; 1
    [install_themes] =&amp;gt; 1
    [update_core] =&amp;gt; 1
    [list_users] =&amp;gt; 1
    [remove_users] =&amp;gt; 1
    [promote_users] =&amp;gt; 1
    [edit_theme_options] =&amp;gt; 1
    [delete_themes] =&amp;gt; 1
    [export] =&amp;gt; 1
    [frm_view_forms] =&amp;gt; 1
    [frm_edit_forms] =&amp;gt; 1
    [frm_delete_forms] =&amp;gt; 1
    [frm_change_settings] =&amp;gt; 1
    [frm_view_entries] =&amp;gt; 1
    [frm_delete_entries] =&amp;gt; 1
    [email_users_notify] =&amp;gt; 1
    [email_single_user] =&amp;gt; 1
    [email_multiple_users] =&amp;gt; 1
    [email_user_groups] =&amp;gt; 1
    [administrator] =&amp;gt; 1
    [edit_wp-rest-api-logs] =&amp;gt; 1
    [delete_wp-rest-api-logs] =&amp;gt; 1
    [read_wp-rest-api-log] =&amp;gt; 1
    [edit_wp-rest-api-log] =&amp;gt; 1
    [delete_wp-rest-api-log] =&amp;gt; 1
&lt;/pre&gt;&lt;p&gt;
In summary, I’m not sure what the call to check_read_permission in class-wp-rest-posts-controller.php is intended to accomplish, but the meta capability of “read” (mapped from “read_post”) is never present in the user’s capabilities in my testing, failing every request to read a draft post via the REST API. “read” is also never present when accessing this draft post from the UI, but processing continues as expected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>39838#.patch attached to Ticket #39838</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39838/39838%23.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39838/39838%23.patch/1486748121955082</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838/1486748053918942</guid>
      <description>&lt;p&gt;
twentyfifteen: script file should use wp_enqueue_script and translation issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36882 (Add a reusable admin CSS class for destructive actions) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36882#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36882#comment:3/1486748050589855</guid>
      <description>&lt;p&gt;
Thinking at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35126" title="#35126: enhancement: Improvements for the new .button-link CSS class (closed: fixed)"&gt;#35126&lt;/a&gt; where a specific class &lt;code&gt;.button-link-delete&lt;/code&gt; was added for this purpose, it just makes sense to me to do the same thing for links too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:18:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:21/1486747138521180</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486747133004231"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39683 (REST API JS Client: Should enable connecting to multiple endpoints at ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:18:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39683#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39683#comment:4/1486747087451026</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486747084004229"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39837 (Random blank spaces appearing at end of lines) updated</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39837#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39837#comment:2/1486747072398112</guid>
      <description>&lt;p&gt;
From a friend who knows coding a bit more than I:
&lt;/p&gt;
&lt;p&gt;
He says that there are five spaces in the broken code that are actually non-breaking spaces (C2A0). They seem to have been inserted before and after HTML tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:17:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:5/1486747045184734</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486747042004227"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>repaired.txt attached to Ticket #39837</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:14:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39837/repaired.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39837/repaired.txt/1486746895419611</guid>
      <description>&lt;p&gt;
A sample of repaired HTML code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>broken.txt attached to Ticket #39837</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:14:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39837/broken.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39837/broken.txt/1486746875804187</guid>
      <description>&lt;p&gt;
A sample of broken HTML code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39837 (Random blank spaces appearing at end of lines) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39837#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39837#comment:1/1486746331154656</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>blank.png attached to Ticket #39837</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:04:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39837/blank.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39837/blank.png/1486746290627644</guid>
      <description>&lt;p&gt;
Comparison of the broken HTML code and the repaired HTML code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39837 (Random blank spaces appearing at end of lines) created</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39837</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39837/1486746260050748</guid>
      <description>&lt;p&gt;
So far, I have encountered this issue only with the visual editor.
&lt;/p&gt;
&lt;p&gt;
When I write in the visual editor, it often adds "ghost formatting" that makes it so that I get blank spaces a bit everywhere at the end of lines, while the next word(s) in the paragraph would totally fit in that blank space.
&lt;/p&gt;
&lt;p&gt;
I have no knowledge in technical terms, so I will define those random blank spaces as "ghost formatting", since it seems to be integrated in the HTML code, yet it's invisible in the HTML editor.
&lt;/p&gt;
&lt;p&gt;
I can easily find examples from my blog. However I am not sure that I can really share the broken HTML code, since in most text boxes the "ghost formatting" gets lost in the process...
&lt;/p&gt;
&lt;p&gt;
This is the broken HTML code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;La &amp;lt;em&amp;gt;Kompleta Gramatiko&amp;lt;/em&amp;gt; adaptis frazi ek verko qua esis obsoleta &amp;lt;em&amp;gt;de la komenco&amp;lt;/em&amp;gt;! Beaufront adaptis la paragrafo por la nova verbi «mixita», ma semblas, ke lu ankore nesavis pri &amp;lt;b&amp;gt;ind&amp;lt;/b&amp;gt;... Nam yen ke on ja trovis &amp;lt;b&amp;gt;honorinda&amp;lt;/b&amp;gt;, &amp;lt;b&amp;gt;ridinda&amp;lt;/b&amp;gt; e &amp;lt;b&amp;gt;shaminda&amp;lt;/b&amp;gt; en la &amp;lt;em&amp;gt;Dictionnaire français-international&amp;lt;/em&amp;gt; (1908)!
&lt;/pre&gt;&lt;p&gt;
This is the fixed HTML code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;La &amp;lt;em&amp;gt;Kompleta Gramatiko&amp;lt;/em&amp;gt; adaptis frazi ek verko qua esis obsoleta &amp;lt;em&amp;gt;de la komenco&amp;lt;/em&amp;gt;! Beaufront adaptis la paragrafo por la nova verbi «mixita», ma semblas, ke lu ankore nesavis pri &amp;lt;b&amp;gt;ind&amp;lt;/b&amp;gt;... Nam yen ke on ja trovis &amp;lt;b&amp;gt;honorinda&amp;lt;/b&amp;gt;, &amp;lt;b&amp;gt;ridinda&amp;lt;/b&amp;gt; e &amp;lt;b&amp;gt;shaminda&amp;lt;/b&amp;gt; en la &amp;lt;em&amp;gt;Dictionnaire français-international&amp;lt;/em&amp;gt; (1908)!
&lt;/pre&gt;&lt;p&gt;
Fixing it is simple: I copy the paragraph, paste it in a text box that doesn't support the "ghost formatting" (e.g. Chromium's address bar) then copy and paste it back into the HTML editor. Somehow, the blank spaces disappear. However, that workaround easily gets tedious since I have to do it every time...
&lt;/p&gt;
&lt;p&gt;
I attached a screenshot that shows how the two codes looks like on my blog and in the visual editor.
&lt;/p&gt;
&lt;p&gt;
I use Chromium 55.0.2883.87 Built on Ubuntu , running on elementary 0.4 (64-bit).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39836 (Display maximum file upload size on theme upload page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:56:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39836#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39836#comment:1/1486745767356136</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28171" title="#28171: defect (bug): Uploading themes over the PHP upload file size limit throws a non user ... (closed: worksforme)"&gt;#28171&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:32/1486745489549697</guid>
      <description>&lt;p&gt;
@melchoyce I do. Lets get that happening early next week.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39836#.patch attached to Ticket #39836</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39836/39836%23.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39836/39836%23.patch/1486745336712816</guid>
      <description>&lt;p&gt;
Core side changes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screenshot.png attached to Ticket #39836</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39836/screenshot.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39836/screenshot.png/1486745261897475</guid>
      <description>&lt;p&gt;
Screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39836 (Display maximum file upload size on theme upload page) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39836</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39836/1486745229025008</guid>
      <description>&lt;p&gt;
When we click on 'Upload Theme' button, WordPress displays "If you have a theme in a .zip format, you may install it by uploading it here." message on /wp-admin/theme-install.php
&lt;/p&gt;
&lt;p&gt;
If we can displays maximum file size in this message, it will really help WordPress users. They will consider increasing upload file size in php.ini instead starting upload and displaying a message "Are you sure want to do that?" and if debug is true, they will also see error message.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36281 (Importer Fails to import menu items in PHP7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36281#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36281#comment:7/1486745016501052</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1486745013013040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39793 (Scrolling up in the sticky post text editor does not scroll the page ...) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:17:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39793#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39793#comment:1/1486743431462550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20943 (Paragraphs get removed in table cells when Visual editor is refreshed) updated</title>
      
        <dc:creator>DarcPress</dc:creator>

      <pubDate>Fri, 10 Feb 2017 15:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20943#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20943#comment:54/1486740425005676</guid>
      <description>&lt;p&gt;
Still bugged the same way as of today.
&lt;/p&gt;
&lt;p&gt;
This is especially annoying when using ACF (Advanced Custom Fields) because sometimes the ACF takes time to load the TinyMCE and when it does, it behaves like moving from Text to Visual.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot from 2017-02-10 20:16:21.png attached to Ticket #39835</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39835/Screenshot%20from%202017-02-10%2020%3A16%3A21.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39835/Screenshot%20from%202017-02-10%2020%3A16%3A21.png/1486738268982712</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16841 (Manually created user roles not showing in author dropdown regardless ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:36:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16841#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16841#comment:40/1486737399904544</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just stumbled upon this whole user level handling now. Fun. I'll try to find some time to look into it properly.
&lt;/p&gt;
&lt;p&gt;
Even just using a role query in &lt;code&gt;post_author_meta_box()&lt;/code&gt; would already be a huge improvement, but I can see the benefits of capability queries.
&lt;/p&gt;
&lt;p&gt;
By the way, for anyone using the Members plugin, &lt;code&gt;add_filter( 'members_remove_old_levels', '__return_false' );&lt;/code&gt; should help there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38186 (Database Collations Bypassed by determine_charset() in wp-db.php) updated</title>
      
        <dc:creator>cimatti</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:32:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38186#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38186#comment:2/1486737175970583</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this is a deep issue with many potential consequence, because even if WordPress changed the default result of $wpdb-&amp;gt;charset and $wpdb-&amp;gt;collate , charset and collations in databases of already existings installations are not updated.
&lt;/p&gt;
&lt;p&gt;
Even plugins are involved, because they should use $wpdb-&amp;gt;charset and $wpdb-&amp;gt;collate to create tables. So plugins that created tables with collation utf8mb4_unicode_ci with an older WordPress version, now may create new tables and columns with collation utf8mb4_unicode_520_ci
&lt;/p&gt;
&lt;p&gt;
I already noticed in an old WordPress installation that wordpress columns remained on collation utf8mb4_unicode_ci but a plugin created a table with utf8mb4_unicode_520_ci. I have a plugin that has to create a temporary table and join it to existing tables to do a task. This stopped to work because old tables uses utf8mb4_unicode_ci and the new temporary table uses utf8mb4_unicode_520_ci
&lt;/p&gt;
&lt;p&gt;
So the big problem is that if you make a join or an operation between two columns with collation utf8mb4_unicode_ci and utf8mb4_unicode_520_ci the query fails
&lt;/p&gt;
&lt;p&gt;
The passage from utf8 to utf8mb4 could be problematic, because MySQL normally has a limit of 1000 byte for keys, so with utf8 the key can't hold more than 333 characters, and with utf8mb4 the limit is 250 and if you have a key valid with utf8 it may be too long with utf8mb4
&lt;/p&gt;
&lt;p&gt;
Changing a collation may be problematic too if you change it on a column with an unique key, because values that were considered different before, may be considered equal with the new collation
&lt;/p&gt;
&lt;p&gt;
I propose to follow this path:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;default charset and collation should be chosen during installation, and you should stick with that
&lt;/li&gt;&lt;li&gt;you should define a standard procedure to change collation, and plugins should implement a callback to change it in their tables when called
&lt;/li&gt;&lt;li&gt;anyway migration to another collation should be discouraged, and if necessary it should be tested before on a copy of the site, and in any case a backup is strongly suggested
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.php.patch attached to Ticket #39831</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39831/functions.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39831/functions.php.patch/1486736972556745</guid>
      <description>&lt;p&gt;
meta
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39296 (Create new dashicons (4.8)) updated</title>
      
        <dc:creator>EmpireOfLight</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:29:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39296#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39296#comment:2/1486736962682344</guid>
      <description>&lt;p&gt;
I used the icon posted here:
&lt;a class="ext-link" href="https://github.com/WordPress/dashicons/issues/152"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/dashicons/issues/152&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
it's in the latest vs. of Dashicons now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24985 (Custom roles missing from post author dropdown) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:25:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24985#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24985#comment:5/1486736728393618</guid>
      <description>&lt;p&gt;
For anyone stumbling upon this ticket, using &lt;code&gt;add_filter( 'members_remove_old_levels', '__return_false' );&lt;/code&gt; should do the trick when using the Members plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36574 (Redesign term pages) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36574#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36574#comment:11/1486736307075108</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's a lot of data from the old one that seems to be missing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36574/edit-term-new.png" title="Attachment 'edit-term-new.png' in Ticket #36574"&gt;edit-term-new.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36574/edit-term-new.png" title="Download"&gt;​&lt;/a&gt; looks good to me. I don't see anything missing there, except field descriptions maybe, but I think they belong more in the Help tab anyway, for consistency with other screens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39834 (Plugin Deletion does not auto refresh Plugin list in admin UI) updated</title>
      
        <dc:creator>yahil</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39834#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39834#comment:3/1486736142958046</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
Not able to reproduce, please check your console, error logs otherways Once disable all plugins and try to delete.
&lt;/p&gt;
&lt;p&gt;
Yahil :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39835 (Category slug could be auto-generated with ability to update manually) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39835#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39835#comment:2/1486735989478589</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39835 (Category slug could be auto-generated with ability to update manually) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39835#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39835#comment:1/1486735940607857</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36574" title="#36574: enhancement: Redesign term pages (new)"&gt;#36574&lt;/a&gt;. The screenshots there suggest this possibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39835 (Category slug could be auto-generated with ability to update manually) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39835</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39835/1486735859918507</guid>
      <description>&lt;p&gt;
Like adding a post, when category is created from Post &amp;gt; Category, if a default slug could be auto generated from title here as well with the ability to edit that would be time saving and helpful.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39834 (Plugin Deletion does not auto refresh Plugin list in admin UI) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:09:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39834#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39834#comment:2/1486735766210507</guid>
      <description>&lt;p&gt;
Are there any warnings or notices in server error logs?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39834 (Plugin Deletion does not auto refresh Plugin list in admin UI) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39834#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39834#comment:1/1486735375842696</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there, thanks for your report and welcome!
&lt;/p&gt;
&lt;p&gt;
I cannot reproduce this locally. Does this still happen with all plugins disabled'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39834 (Plugin Deletion does not auto refresh Plugin list in admin UI) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:58:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39834</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39834/1486735091699232</guid>
      <description>&lt;p&gt;
When I delete a plugin after deactivating it the on screen message halts at "Deleting...". It does not auto remove the plugin row from the DOM.
&lt;/p&gt;
&lt;p&gt;
This started after I upgraded to 4.7.2. I tested with two separate plugins and got the same result. Cross checked by reinstalling and deleting them from different browsers to make sure it is not a browser specific JavaScript issue.
&lt;/p&gt;
&lt;p&gt;
Refreshing page removes the entry though.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39824 (Gallery doesn't show images being uploaded) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:48:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39824#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39824#comment:2/1486734539044391</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39824/39824.diff" title="Attachment '39824.diff' in Ticket #39824"&gt;39824.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39824/39824.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Media: Disable the &lt;code&gt;Insert/Update Gallery&lt;/code&gt; button while uploads are in progress.
&lt;/p&gt;
&lt;p&gt;
Is there a better approach to resolving this issue?
&lt;/p&gt;
&lt;p&gt;
@gonom9 can you give this a test and see if it resolves the issue for you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39824.diff attached to Ticket #39824</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39824/39824.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39824/39824.diff/1486734204767502</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39824 (Gallery doesn't show images being uploaded) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39824#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39824#comment:1/1486733711605547</guid>
      <description>&lt;p&gt;
@gonom9 thanks for the bug report.
&lt;/p&gt;
&lt;p&gt;
I verified this issue and captured a screencast to demonstrate the issue: &lt;a class="ext-link" href="https://cl.ly/3F0s1y0j021h"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cl.ly/3F0s1y0j021h&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I have a potential solution I will upload shortly that disables the insert gallery button when you are in the process of uploading videos. I'm not certain this is the best approach, but it does prevent you from creating the broken condition you noted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) updated</title>
      
        <dc:creator>ivantipov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833#comment:5/1486733521447242</guid>
      <description>&lt;p&gt;
SEO would be an issue as we have legacy URL's already indexed, which had the canonicals set to multiple dashes. Not setting the redirects would create a mismatch, and setting old URL's in _wp_old_slug metas won't redirect them (since it accepts multiple dashes), so the only solution is setting up custom redirects, which I'd ideally like to avoid to prevent management/performance overhead.
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov Thanks, couldn't find it via search.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14773 (Error in slug parsing leads to unlimited URLs for the same article = ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14773#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14773#comment:22/1486732650901584</guid>
      <description>&lt;p&gt;
Related: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/17653" title="#17653: enhancement: Canonical Redirect when space(s) are used instead of hyphens when ... (accepted)"&gt;#17653&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17653 (Canonical Redirect when space(s) are used instead of hyphens when ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:17:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17653#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17653#comment:12/1486732646703506</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/14773" title="#14773: defect (bug): Error in slug parsing leads to unlimited URLs for the same article = ... (reviewing)"&gt;#14773&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #14773,​39833 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14773%2C39833</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14773%2C39833/1486732601650472</guid>
      <description>duplicate: &lt;p&gt;
Hi @ivantipov, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/14773" title="#14773: defect (bug): Error in slug parsing leads to unlimited URLs for the same article = ... (reviewing)"&gt;#14773&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833#comment:3/1486732535629550</guid>
      <description>&lt;p&gt;
@swissspidy My misunderstanding. Seems it is an issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39831 (Theme Tag Translation Ready) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:10:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39831#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39831#comment:1/1486732242371382</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33407" title="#33407: enhancement: Theme tags overhaul (closed: fixed)"&gt;#33407&lt;/a&gt;, &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/ticket%3A1187" title="ticket:1187 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#meta1187&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833#comment:2/1486730686679390</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
SEO isn't a problem because of &lt;code&gt;&amp;lt;link rel="canonical"&lt;/code&gt; tags. Google will see it as 1 URL.
&lt;/p&gt;
&lt;p&gt;
@rinkuyadav999 The plugin is irrelevant.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new post with title "Foo Bar". The slug will be "foo-bar"
&lt;/li&gt;&lt;li&gt;Visit &lt;code&gt;example.com/foo----bar/&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39832 (WooCommerce - Australia Post Shipping Calculator Help) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39832#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39832#comment:2/1486730613222113</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833#comment:1/1486730585763804</guid>
      <description>&lt;p&gt;
Hi @ivantipov
&lt;/p&gt;
&lt;p&gt;
Which plugin are you using to migrating posts from another CMS ?
&lt;/p&gt;
&lt;p&gt;
Please provide more description.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) created</title>
      
        <dc:creator>ivantipov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833/1486730311404417</guid>
      <description>&lt;p&gt;
This may be a feature, but there's something we've observed when migrating posts from another CMS - WordPress seems to accept URL's with multiple hyphens without redirecting them. Here's an example:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.com/2017/02/09/get-blog-goes-open-source/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.com/2017/02/09/get-blog-goes-open-source/&lt;/a&gt;
&lt;a class="ext-link" href="https://developer.wordpress.com/2017/02/09/get-blog-goes-open-----source/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.com/2017/02/09/get-blog-goes-open-----source/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This poses potential SEO problems as some of our indexed URL's will have multiple dashes and the internal WP links will be sanitized to single. We can set up redirects but I thought I'd flag it with you since this seems to be an error.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39832 (WooCommerce - Australia Post Shipping Calculator Help) closed</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:37:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39832#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39832#comment:1/1486730239797951</guid>
      <description>invalid: &lt;p&gt;
Hi @abhinavahuja35
&lt;/p&gt;
&lt;p&gt;
Seems it is related to woocommerce plugin. it is not part of core WordPress so you can ask here: &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce&lt;/a&gt; or &lt;a class="ext-link" href="https://wordpress.org/support/plugin/woocommerce"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/plugin/woocommerce&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39832 (WooCommerce - Australia Post Shipping Calculator Help) created</title>
      
        <dc:creator>abhinavahuja35</dc:creator>

      <pubDate>Fri, 10 Feb 2017 10:24:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39832</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39832/1486722247982223</guid>
      <description>&lt;p&gt;
Dear PAC User,
&lt;/p&gt;
&lt;p&gt;
As noted in our Postage Assessment Calculator (PAC) update in April 2016, we’ve now migrated the PAC API to a new host URL: &lt;a class="ext-link" href="https://digitalapi.auspost.com.au"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://digitalapi.auspost.com.au&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Next, we’re going to decommission the old PAC API URL: &lt;a class="ext-link" href="https://auspost.com.au/api"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://auspost.com.au/api&lt;/a&gt;
What you should do
Please update your websites and applications and migrate to the new URL as soon as possible. You can test the new URL directly at &lt;a class="ext-link" href="https://digitalapi.auspost.com.au"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://digitalapi.auspost.com.au&lt;/a&gt;.
What to expect
How you use the API won’t change. Your existing PAC API key, all of the API endpoints and the Service Codes will be the same. The API is fully documented on the Developer Centre.
Decommission date
We plan to decommission the old link by the end of 2016. We’ll monitor usage of the new and old URLs and will keep you updated on the final decommission date.
&lt;/p&gt;
&lt;p&gt;
I got this mail what should i do.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36882 (Add a reusable admin CSS class for destructive actions) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 10 Feb 2017 09:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36882#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36882#comment:2/1486719829279706</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35126" title="#35126: enhancement: Improvements for the new .button-link CSS class (closed: fixed)"&gt;#35126&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39831#.patch attached to Ticket #39831</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 09:26:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39831/39831%23.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39831/39831%23.patch/1486718810238697</guid>
      <description>&lt;p&gt;
Core side changes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39831 (Theme Tag Translation Ready) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 09:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39831/1486718709421037</guid>
      <description>&lt;p&gt;
As i read, All theme text strings are to be translatable. &amp;gt; &lt;a class="ext-link" href="https://make.wordpress.org/themes/handbook/review/required/#language"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/themes/handbook/review/required/#language&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In that case, seems it is compulsory and there is not any use of 'translation-ready' theme tag. Because all themes on directory should be translation ready. if we apply filter with 'translation-ready' checkbox, it will return all themes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39830 (Unable to detect REST/rest_no_route) created</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Fri, 10 Feb 2017 09:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39830</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39830/1486717340131813</guid>
      <description>&lt;p&gt;
AFAIK dispatch() in WP_REST_Server replies &lt;code&gt;rest_no_route&lt;/code&gt; with HTTP status code 404 &lt;strong&gt;on its own&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
There is no way to detect a HTTP/404 which is elemental for my WAF
&lt;a class="ext-link" href="https://github.com/szepeviktor/wordpress-fail2ban/blob/master/mu-plugin/wp-fail2ban-mu-instant.php#L138-L140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/szepeviktor/wordpress-fail2ban/blob/master/mu-plugin/wp-fail2ban-mu-instant.php#L138-L140&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please advise.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>password_version_4.JPG attached to Ticket #39817</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39817/password_version_4.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39817/password_version_4.JPG/1486713555367504</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>password_version_3.JPG attached to Ticket #39817</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39817/password_version_3.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39817/password_version_3.JPG/1486713545551117</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>password_version_2.JPG attached to Ticket #39817</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39817/password_version_2.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39817/password_version_2.JPG/1486713532596252</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>password_version_1.JPG attached to Ticket #39817</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:58:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39817/password_version_1.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39817/password_version_1.JPG/1486713521992859</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39817 (Confusing password strength behavior) reopened</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:56:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39817#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39817#comment:4/1486713366549549</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
thanks for your investigation. I've just set up a new WordPress installation by my hoster. It's clean. No lifterLMS, just some pre-installed plugins. Just "Limit Login Attempts" is activated.
&lt;/p&gt;
&lt;p&gt;
When a directly administer a user in the core WordPress UI then I still get the same strange behavior. See attached screen shots.
&lt;/p&gt;
&lt;p&gt;
So for me it seems a "problem" of WordPress core. Please have a look.
&lt;/p&gt;
&lt;p&gt;
Kind regards
Matthias
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #38712 (Button "Choose from the most used tags" is centerd) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38712#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38712#comment:7/1486712903327943</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38712 (Button "Choose from the most used tags" is centerd) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38712#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38712#comment:6/1486712894876916</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) updated</title>
      
        <dc:creator>skarabeq</dc:creator>

      <pubDate>Fri, 10 Feb 2017 06:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:7/1486709025009149</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39466.patch attached to Ticket #39466</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39466/39466.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39466/39466.patch/1486705498058134</guid>
      <description>&lt;p&gt;
Fix for this ticket
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:11/1486705457966375</guid>
      <description>&lt;p&gt;
@rachelbaker @jnylen0 Thanks for your input.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Status has a small set of possible values that can be filtered publicly, so this parameter is effectively already public (exposing it provides no new information that can't already be obtained elsewhere).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes I do agree with this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39829 (Missing Filter before user is created within "wp_insert_user" function) updated</title>
      
        <dc:creator>jaschaio</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:25:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39829#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39829#comment:2/1486704319015007</guid>
      <description>&lt;p&gt;
Hey @SergeyBiryukov, thanks for the fast reply. I have seen the other filters, but there is still no filter for the user &lt;code&gt;ID&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
As I explained: Within the &lt;code&gt;wp_insert_post_data&lt;/code&gt; function you have the ability to filter through all the &lt;code&gt;$data&lt;/code&gt; array. That means that you can modify the &lt;code&gt;$data[ID]&lt;/code&gt; and assign a different one before the post gets actually inserted into the database.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;/**
 * Filter to use random 6 digit number as post ID
 **/
function create_random_unique_id( $data, $postarr ) {
    // Check if we are updating an existing post or importing with a suggested post ID
    if ( ! empty( $postarr['ID'] ) || ! isset( $postarr['import_id'] ) ) {
        return $data;
    } else {
        // Get Wordpress Database
        global $wpdb;
        // Create random 6 digit number
        $random   = substr( rand() * 900000 + 100000, 0, 6 );
        // Check if ID is unique in database
        while ( $wpdb-&amp;gt;get_var( $wpdb-&amp;gt;prepare("SELECT ID FROM $wpdb-&amp;gt;posts WHERE ID = %d", $random ) ) ) {
            // Generate new random ID
            $random   = substr( rand() * 900000 + 100000, 0, 8 );
        }
        // Assign new post id random number
        $data['ID'] = $random;
        return $data;
    }
}
add_action( 'wp_insert_post_data', 'create_random_unique_id', 10, 2 );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The &lt;code&gt;wp_insert_user&lt;/code&gt; function seems to work different, as it inserts the user first into the database based on the nickname (and not like the post based on the ID) and than works with the ID returned by the database going forward. Meaning that I can't hook in anywhere to change the ID of the to be created user. The only thing I can do is updating the database after the user is created with the &lt;code&gt;user_register&lt;/code&gt; action. Here is an example for that:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function create_random_unique_user_id( $user_id ) {
    // Get global Wordpress Database Object
    global $wpdb;
    // Get newly created user ID
    $user_object = get_user_by( 'id', $user_id );
    // Create random 6 digit number
    $random   = substr( rand() * 900000 + 100000, 0, 6 );
    // Check if ID is unique in database
    while ( $wpdb-&amp;gt;get_var( $wpdb-&amp;gt;prepare("SELECT ID FROM $wpdb-&amp;gt;users WHERE ID = %d", $random ) ) ) {
        // Generate new random ID
        $random   = substr( rand() * 900000 + 100000, 0, 8 );
    }
    // Update all tables with new user ID
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;users, array( 'ID' =&amp;gt; $random ), array( 'ID' =&amp;gt; $user_id ) );
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;posts, array( 'ID' =&amp;gt; $random ), array( 'post_author' =&amp;gt; $user_id ) );
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;usermeta, array( 'ID' =&amp;gt; $random ), array( 'user_id' =&amp;gt; $user_id ) );
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;comments, array( 'ID' =&amp;gt; $random ), array( 'user_id' =&amp;gt; $user_id ) );
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;links, array( 'ID' =&amp;gt; $random ), array( 'link_owner' =&amp;gt; $user_id ) );
}
add_action( 'user_register', 'create_random_unique_user_id', 10, 1 );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But this is problematic as the &lt;code&gt;user_id&lt;/code&gt; returned by &lt;code&gt;wp_insert_user&lt;/code&gt; is still the old one. As such other functions who depend on the return value of &lt;code&gt;wp_insert_user&lt;/code&gt; fail.
&lt;/p&gt;
&lt;p&gt;
I just wondered why there are filters available for every other field of the user, but no one for the ID. Especially if its possible within the "wp_insert_post_data" function. These two should work similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:10/1486703339990618</guid>
      <description>&lt;p&gt;
Status has a small set of possible values that can be filtered publicly, so this parameter is effectively already public (exposing it provides no new information that can't already be obtained elsewhere).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:18/1486703167418338</guid>
      <description>&lt;p&gt;
Just wanted to note that the Customize Posts plugin also wrestled with the problem of registering meta specifically to a dedicated post type. We came up with a &lt;code&gt;register_post_type_meta&lt;/code&gt; method which takes three arguments: &lt;code&gt;$post_type&lt;/code&gt;, &lt;code&gt;$meta_key&lt;/code&gt;, &lt;code&gt;$setting_args&lt;/code&gt;. The setting args includes the sanitize callback, default value, required capability, single vs multi, and other customizer-specific properties. Here is the method definition: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/blob/f7b62df6744eb3eb54eb1aec9d877d51ee94cfff/php/class-wp-customize-posts.php#L230-L274"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts/blob/f7b62df6744eb3eb54eb1aec9d877d51ee94cfff/php/class-wp-customize-posts.php#L230-L274&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Hopefully this provides helpful real world usage patterns for an enhanced &lt;code&gt;register_meta()&lt;/code&gt;, specifically here with the needs of the customizer in view.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39815 (Format for the default image of WP_Customize_Media_Control and ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39815#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39815#comment:3/1486702842614628</guid>
      <description>wontfix: &lt;p&gt;
I think it might be rather a wontfix. While it would be possible to re-architect a setting to represent a URL or an ID, there could be a lot of problems for backwards compatibility for existing code that only expect attachment IDs.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39829 (Missing Filter before user is created within "wp_insert_user" function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39829#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39829#comment:1/1486702830794527</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @jaschaio, welcome to WordPress Trac! Thanks for the ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is a action called "user_register" that lets me do something once the user is created, but it doesn't let me modify the actual data the "wp_insert_user" function returns.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp_insert_user()&lt;/code&gt; does not return user data though, just user ID on success or a &lt;code&gt;WP_Error&lt;/code&gt; object on failure.
&lt;/p&gt;
&lt;p&gt;
There are filters for individual fields and metadata, any reason they don't work for your use case?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;pre_user_login&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_nicename&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_url&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_email&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_nickname&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_first_name&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_last_name&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_display_name&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_description&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;insert_user_meta&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39815 (Format for the default image of WP_Customize_Media_Control and ...) updated</title>
      
        <dc:creator>srikat</dc:creator>

      <pubDate>Fri, 10 Feb 2017 04:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39815#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39815#comment:2/1486702373549740</guid>
      <description>&lt;p&gt;
@westonruter Thanks, makes sense.
&lt;/p&gt;
&lt;p&gt;
Shall I set 'resolve as' of this ticket to 'invalid'? (I am new to trac)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39815 (Format for the default image of WP_Customize_Media_Control and ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 04:43:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39815#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39815#comment:1/1486701790045098</guid>
      <description>&lt;p&gt;
@srikat I don't think that it's feasible to supply a default image specifically in this way, given that the setting is expecting to model an integer attachment ID. The closest thing in core to what you want to do here I think is actually something seen in the starter content feature added in 4.7, where an image can be loaded into the customized state (changeset) and uploaded into the media library as an &lt;code&gt;attachment&lt;/code&gt; with the &lt;code&gt;auto-draft&lt;/code&gt; status. In this way, the attachment can be used as the default value for a given setting, but only after first uploading the image into the media library in that transitory state.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39829 (Missing Filter before user is created within "wp_insert_user" function) created</title>
      
        <dc:creator>jaschaio</dc:creator>

      <pubDate>Fri, 10 Feb 2017 04:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39829</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39829/1486700503458202</guid>
      <description>&lt;p&gt;
The "wp_insert_post" function has a filter called "wp_insert_post_data" that filters the post data right before the post is created.
&lt;/p&gt;
&lt;p&gt;
For me the "wp_insert_user" function should have as well a filter right before the user is created in the database.
&lt;/p&gt;
&lt;p&gt;
Unfortunately it doesn't exists. There is a action called "user_register" that lets me do something once the user is created, but it doesn't let me modify the actual data the "wp_insert_user" function returns.
&lt;/p&gt;
&lt;p&gt;
Background:
&lt;/p&gt;
&lt;p&gt;
I use the "wp_insert_post_data" filter to assign a random unique ID to each new post. This is helpful if you have a custom post type with sensitive data, where you don't want to make public how many exists or get created per day. (If the post ID is only auto increated each day, you could get this information by quering once in the morning and once in the night).
&lt;/p&gt;
&lt;p&gt;
But it's impossible to assign a random unique ID to a newly created user. Or actually, it is not possible, I can hook into the "user_register" action and udpate all database tables with a new user id. But I can not use that new information as the "wp_insert_user" function will still return the old ID.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39806 (Disable REST API by default, making it opt-in rather than always-on) updated</title>
      
        <dc:creator>pcarvalho</dc:creator>

      <pubDate>Fri, 10 Feb 2017 03:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39806#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39806#comment:16/1486696999772504</guid>
      <description>&lt;p&gt;
I believe REST API has a place within wp, and hopefully be useful in improving rewrites.
&lt;/p&gt;
&lt;p&gt;
With that said,
what we have done, at server level, was to block and ban ips requesting wp-json in our servers.
&lt;/p&gt;
&lt;p&gt;
It has been a though week.
&lt;/p&gt;
&lt;p&gt;
Lastly, I'm puzzled why this endpoint isn't protected by default:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://news.microsoft.com/wp-json/wp/v2/users"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://news.microsoft.com/wp-json/wp/v2/users&lt;/a&gt; ( random site from showcase gallery )
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Why make it easier than ever to get all the usernames?
&lt;/p&gt;
&lt;p&gt;
thanks for reading,
p.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39828 (Multiple do_pings events shouldn't be scheduled) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 03:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39828#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39828#comment:2/1486696108686647</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40054" title="Pings/Trackbacks: Avoid scheduling multiple `do_pings` events in ..."&gt;40054&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Pings/Trackbacks: Avoid scheduling multiple &lt;code&gt;do_pings&lt;/code&gt; events in &lt;code&gt;_publish_post_hook()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ethitter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39828" title="#39828: defect (bug): Multiple do_pings events shouldn't be scheduled (closed: fixed)"&gt;#39828&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40054]: Pings/Trackbacks: Avoid scheduling multiple `do_pings` events in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 03:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40054</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40054/1486696108213341</guid>
      <description>&lt;p&gt;
Pings/Trackbacks: Avoid scheduling multiple &lt;code&gt;do_pings&lt;/code&gt; events in &lt;code&gt;_publish_post_hook()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ethitter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39828" title="#39828: defect (bug): Multiple do_pings events shouldn't be scheduled (closed: fixed)"&gt;#39828&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39828 (Multiple do_pings events shouldn't be scheduled) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 03:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39828#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39828#comment:1/1486695810673202</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39828.diff attached to Ticket #39828</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39828/39828.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39828/39828.diff/1486694734007409</guid>
      <description>&lt;p&gt;
Only schedule an event if one doesn't exist
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39828 (Multiple do_pings events shouldn't be scheduled) created</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:44:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39828</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39828/1486694691542459</guid>
      <description>&lt;p&gt;
Whenever &lt;code&gt;_publish_post_hook()&lt;/code&gt; is called, a new &lt;code&gt;do_pings&lt;/code&gt; event is scheduled in wp-cron. Since &lt;code&gt;do_all_pings()&lt;/code&gt; (the callback hooked to &lt;code&gt;do_pings&lt;/code&gt; by default) takes no arguments, and pings &lt;em&gt;everything&lt;/em&gt; that needs pinging each time it runs, there's no need to schedule multiple of these events.
&lt;/p&gt;
&lt;p&gt;
The potential for duplicate events has existed since its introduction in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3663" title="Future post pinging and cron fixups from masquerade. fixes #2469"&gt;r3663&lt;/a&gt;. As part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6966" title="#6966: defect (bug): cron: prevent duplicate events (closed: fixed)"&gt;#6966&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9181" title="don't schedule a duplicate if there's already an identical event due ..."&gt;r9181&lt;/a&gt; aimed to reduce duplicate events. If a site's cron is backlogged, however, that workaround will fail as it only looks ahead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39827 (notice in wp-includes/canonical.php:392) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39827#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39827#comment:2/1486694093294771</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39827 (notice in wp-includes/canonical.php:392) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39827#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39827#comment:1/1486693753159427</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:28:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:6/1486693689903007</guid>
      <description>&lt;p&gt;
Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36485" title="Allow `get_terms()` results to ordered by metadata.
The `$orderby` ..."&gt;[36485]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38337" title="Taxonomy: in `get_terms()`, do not assume that legacy args are being ..."&gt;[38337]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39827 (notice in wp-includes/canonical.php:392) created</title>
      
        <dc:creator>jakubbis</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39827</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39827/1486693683307705</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
We're getting notice in wp-includes/canonical.php:392, but it requires some specific steps to obtain it.
&lt;/p&gt;
&lt;p&gt;
Steps:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Setup a clean install of WPML
&lt;/li&gt;&lt;li&gt;Set permalinks to postname without ending slash: /%postname%
&lt;/li&gt;&lt;li&gt;Create a page in secondary language
&lt;/li&gt;&lt;li&gt;Set this page as Home Page (under Settings/Reading) but only in the secondary language
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
When you enter "home page", you get 404 because a page for original language does not exist.
In line 121, you get &lt;code&gt;$redirect_url = get_permalink($redirect_post);&lt;/code&gt; and value of $redirect_url is for instance "&lt;a class="ext-link" href="http://testsite.dev?lang=fr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://testsite.dev?lang=fr&lt;/a&gt;". As you see, there is no "/" before "?", that's why path is empty.
&lt;/p&gt;
&lt;p&gt;
You have already fixed  the similar issue in line:77-79
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;// Notice fixing
if ( !isset($redirect['path']) )
   $redirect['path'] = '';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I suspect, we need the same fix before line: 392
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$redirect['path'] = preg_replace('|/' . preg_quote( $wp_rewrite-&amp;gt;index, '|' ) . '/*?$|', '/', $redirect['path']);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:5/1486693656515511</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40053" title="Docs: Add missing `meta_type` and `meta_compare` arguments to ..."&gt;40053&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add missing &lt;code&gt;meta_type&lt;/code&gt; and &lt;code&gt;meta_compare&lt;/code&gt; arguments to &lt;code&gt;WP_Term_Query::__construct()&lt;/code&gt; and &lt;code&gt;get_terms()&lt;/code&gt; docblocks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props 1naveengiri.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39825" title="#39825: defect (bug): Documentation: Missing argument (meta_type and meta_compare) in the ... (closed: fixed)"&gt;#39825&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40053]: Docs: Add missing `meta_type` and `meta_compare` arguments to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40053</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40053/1486693656008461</guid>
      <description>&lt;p&gt;
Docs: Add missing &lt;code&gt;meta_type&lt;/code&gt; and &lt;code&gt;meta_compare&lt;/code&gt; arguments to &lt;code&gt;WP_Term_Query::__construct()&lt;/code&gt; and &lt;code&gt;get_terms()&lt;/code&gt; docblocks.
&lt;/p&gt;
&lt;p&gt;
Props 1naveengiri.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39825" title="#39825: defect (bug): Documentation: Missing argument (meta_type and meta_compare) in the ... (closed: fixed)"&gt;#39825&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:6/1486692387912493</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) reopened</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 10 Feb 2017 01:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:4/1486689054083599</guid>
      <description>&lt;p&gt;
What was the reason to close this as invalid?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36737 (Single site reachable on multiple subdomains always redirected to site_url) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 01:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36737#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36737#comment:2/1486689004136941</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @jsoft, welcome to WordPress Trac!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We run a site which is reachable by multiple subdomains (nb. not multisite) For example customer1.site.nl, customer2.site.nl.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you provide some more details of your setup? Are there any filters used to modify the site URL on the fly?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since a recent update this stopped working. The visitor is always redirect to the site url www.site.nl.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's the exact purpose of canonical redirects, I don't see a bug here.
&lt;/p&gt;
&lt;p&gt;
Here's the snippet I generally use in &lt;code&gt;wp-config.php&lt;/code&gt; to make a site available from multiple domains and avoid unwanted redirects to the primary domain:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('WP_HOME',  "http://{$_SERVER['HTTP_HOST']}");
define('WP_SITEURL', "http://{$_SERVER['HTTP_HOST']}");
ob_start( 'ob_replace_home_url' );
function ob_replace_home_url( $content ) {
	$home_urls = array(
		'http://www.site.com',
		'http://subdomain1.site.com',
		'http://subdomain2.site.com',
	);
	$content = str_replace( $home_urls, WP_HOME, $content );
	return $content;
}
&lt;/pre&gt;&lt;p&gt;
Most of the time, just &lt;code&gt;WP_HOME&lt;/code&gt; and &lt;code&gt;WP_SITEURL&lt;/code&gt; would be enough to run the same install from multiple domains. The output buffering here just makes sure that URLs in content (images, etc.) always have the currently requested domain.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 10 Feb 2017 00:21:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822#comment:6/1486686064969991</guid>
      <description>&lt;p&gt;
There is also a deprecation error for the HHVM job: &lt;a class="ext-link" href="https://travis-ci.org/miya0001/WordPress/jobs/200084031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/miya0001/WordPress/jobs/200084031&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Fatal error: Class already declared: PHPUnit_Framework_Error_Deprecated in phar://phpunit-5.7.7.phar/phpunit/Framework/Error/Deprecated.php on line 21&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39116 (Twenty Seventeen: Display &amp; improve translator comment for Libre ...) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Thu, 09 Feb 2017 23:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39116#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39116#comment:8/1486684364994171</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@petya Would adding a link to the Google Font documentation for the theme's fonts help in this case? Example: &lt;a class="ext-link" href="https://fonts.google.com/specimen/Merriweather"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://fonts.google.com/specimen/Merriweather&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39826 (LIMIT clause not required in get_options function as there's already a ...) created</title>
      
        <dc:creator>arjenlentz</dc:creator>

      <pubDate>Thu, 09 Feb 2017 23:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39826</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39826/1486683665793944</guid>
      <description>&lt;p&gt;
The Core get_options (wp-includes/option.php) uses LIMIT 1 to retrieve only a single row for an option.
However, the option_name field already has a UNIQUE KEY in the table schema, so it's impossible for the db to contain or return more than one row for any option_name.
&lt;/p&gt;
&lt;p&gt;
Barring history I'm unaware of (if there used to not be a UNIQUE KEY on this field in the past), it's safe to remove the LIMIT 1 clauses from these queries (there are a few instances in the function.
&lt;/p&gt;
&lt;p&gt;
While LIMIT clauses can sometimes be harmful to performance, in this particular scenario that's not the case.  However, it's just superfluous.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39128 (Customize: Preview fails to load when domain mapping in use ...) updated</title>
      
        <dc:creator>DamienWilson</dc:creator>

      <pubDate>Thu, 09 Feb 2017 23:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39128#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39128#comment:56/1486681532813406</guid>
      <description>&lt;p&gt;
Just to say that I had this issue too. Thanks for submitting the workaround plugin.
&lt;/p&gt;
&lt;p&gt;
Issue: a rouge cookie in my case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 09 Feb 2017 22:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:44/1486680205767139</guid>
      <description>&lt;p&gt;
Let's integrate &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38712" title="#38712: defect (bug): Button &amp;#34;Choose from the most used tags&amp;#34; is centerd (closed: fixed)"&gt;#38712&lt;/a&gt; occasionally
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39804 (WP Cli Update Issue) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 09 Feb 2017 22:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39804#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39804#comment:3/1486679504854929</guid>
      <description>invalid: &lt;p&gt;
Hi, and welcome to Trac! Trac is primarily for bug reports for WordPress core, whereas wp-cli issues are &lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;tracked on GitHub&lt;/a&gt;. I'd recommend filing an issue over there instead.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 09 Feb 2017 22:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:9/1486678115944404</guid>
      <description>&lt;p&gt;
@dhanendran I honestly don't remember the logic for moving &lt;code&gt;status&lt;/code&gt; to the edit context.  Only one that comes to mind is that the status/visibility of a resource is rarely exposed publically.
However, in v1 of the REST API we did expose &lt;code&gt;post_status&lt;/code&gt; for all contexts: &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/blob/master/lib/class-wp-json-posts.php#L556"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/blob/master/lib/class-wp-json-posts.php#L556&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I do not have a strong opinion here one way or another.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 09 Feb 2017 21:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:20/1486676992155621</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486676989004157"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 09 Feb 2017 21:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:8/1486676592749452</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486676590004152"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39805.3.diff attached to Ticket #39805</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 09 Feb 2017 21:35:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39805/39805.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39805/39805.3.diff/1486676152365085</guid>
      <description>&lt;p&gt;
Adjust unit tests per patch feedback
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 09 Feb 2017 21:30:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:16/1486675854959689</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486675851004128"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38131 (REST API: Provide interface to include or exclude specific fields from ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 09 Feb 2017 21:29:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38131#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38131#comment:10/1486675751624326</guid>
      <description>&lt;p&gt;
It would be nice if this also provided a way to specify keys returned for embeds - &lt;code&gt;context=embed&lt;/code&gt; is a pretty limited set of data which is not always sufficient, as seen recently in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39805" title="#39805: enhancement: Expose featured_media property on post resources in &amp;#34;embed&amp;#34; context (closed: fixed)"&gt;#39805&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34659 (Whitelist for validation functions which only accept one argument) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 09 Feb 2017 21:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34659#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34659#comment:27/1486675226768077</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486675224004103"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38131 (REST API: Provide interface to include or exclude specific fields from ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 09 Feb 2017 21:18:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38131#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38131#comment:9/1486675104029827</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486675101004096"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39805 (Expose featured_media property on post resources in "embed" context) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 09 Feb 2017 21:09:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39805#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39805#comment:7/1486674542060954</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486674538004056"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28160 (Get authors user query in-efficient when dealing with large numbers of ...) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 09 Feb 2017 20:24:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28160#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28160#comment:8/1486671844243036</guid>
      <description>&lt;p&gt;
@brandonliles
&lt;/p&gt;
&lt;p&gt;
Thanks for sharing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) reopened</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 09 Feb 2017 20:22:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:43/1486671747997822</guid>
      <description>&lt;p&gt;
Minor visual breakages were expected. Noticed a couple so far:
&lt;/p&gt;
&lt;p&gt;
In IE 11 (doesn't happen on modern browsers): the post boxes &lt;code&gt;handlediv&lt;/code&gt; shows the underline
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/UqQOBXgkHI.png"&gt;&lt;img src="https://cldup.com/UqQOBXgkHI.png" alt="https://cldup.com/UqQOBXgkHI.png" crossorigin="anonymous" title="https://cldup.com/UqQOBXgkHI.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In all browsers: the Customizer "reorder toggle" needs some love: the button contains some span elements that use their own colors so on some button states, text and underline have different colors:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/D7Q8m7yaGz.png"&gt;&lt;img src="https://cldup.com/D7Q8m7yaGz.png" alt="https://cldup.com/D7Q8m7yaGz.png" crossorigin="anonymous" title="https://cldup.com/D7Q8m7yaGz.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #28160 (Get authors user query in-efficient when dealing with large numbers of ...) updated</title>
      
        <dc:creator>brandonliles</dc:creator>

      <pubDate>Thu, 09 Feb 2017 20:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28160#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28160#comment:7/1486671336233135</guid>
      <description>&lt;p&gt;
I made my first WP Plugin to hack around this. It basically just creates/maintains a cache table of author user_ids.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/bliles/wp-admin10x"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/bliles/wp-admin10x&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) closed</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 09 Feb 2017 20:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:3/1486671035240031</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) updated</title>
      
        <dc:creator>miyauchi</dc:creator>

      <pubDate>Thu, 09 Feb 2017 20:03:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822#comment:5/1486670634244752</guid>
      <description>&lt;p&gt;
Thanks @jdgrimes , @jorbin
&lt;/p&gt;
&lt;p&gt;
I updated the &lt;code&gt;bootstrap.php&lt;/code&gt; and &lt;code&gt;phpunit-6-compat.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
But there are some errors on &lt;code&gt;/usr/local/bin/phpunit --group ajax&lt;/code&gt; with PHPUnit 6 for now.
(Sorry I tried only &lt;code&gt;/usr/local/bin/phpunit&lt;/code&gt; (without option) on my local machine.)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://travis-ci.org/miya0001/WordPress/builds/200084016"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/miya0001/WordPress/builds/200084016&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'll try to fix it tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39822-2.patch attached to Ticket #39822</title>
      
        <dc:creator>miyauchi</dc:creator>

      <pubDate>Thu, 09 Feb 2017 19:56:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39822/39822-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39822/39822-2.patch/1486670188151472</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 09 Feb 2017 19:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:2/1486670159174082</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Thu, 09 Feb 2017 19:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:1/1486670122511090</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>docs.2.patch attached to Ticket #39825</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 09 Feb 2017 19:51:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39825/docs.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39825/docs.2.patch/1486669876112528</guid>
      <description>&lt;p&gt;
I added docblock for these two argument in current patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>docs.patch attached to Ticket #39825</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 09 Feb 2017 19:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39825/docs.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39825/docs.patch/1486669763018345</guid>
      <description>&lt;p&gt;
These are valid relevant doc for these two arguments.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) created</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 09 Feb 2017 19:48:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825/1486669689740627</guid>
      <description>&lt;p&gt;
The &lt;code&gt;meta_type&lt;/code&gt; and &lt;code&gt;meta_compare&lt;/code&gt;  input argument is missing in the get_terms() function's DocBlock.
&lt;/p&gt;
&lt;p&gt;
I also noticed they are missing in &lt;code&gt;WP_Term_Query::__construct()&lt;/code&gt; DocBlock.
I also noticed there is no Document available for these two argument in
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_terms/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/get_terms/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 09 Feb 2017 16:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822#comment:4/1486659465730146</guid>
      <description>&lt;p&gt;
The current patch fails on php5.2 - &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/WordPress/jobs/200040930"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/aaronjorbin/WordPress/jobs/200040930&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34242,​35126 batch updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 09 Feb 2017 16:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34242%2C35126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34242%2C35126/1486658818996771</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40052" title="Buttons: Improve the `.button-link` CSS class for link-like buttons.
 ..."&gt;40052&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Buttons: Improve the &lt;code&gt;.button-link&lt;/code&gt; CSS class for link-like buttons.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Updates &lt;code&gt;.button-link&lt;/code&gt; adding color and underline to make link-like buttons look&lt;br /&gt;
like links by default. Introduces &lt;code&gt;.button-link-delete&lt;/code&gt; as a modifier, stackable&lt;br /&gt;
CSS class for red button-links.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Cheffheid, afercia.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34242" title="#34242: defect (bug): Buttons styles: audit the button-reset and button-link styles (closed: fixed)"&gt;#34242&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35126" title="#35126: enhancement: Improvements for the new .button-link CSS class (closed: fixed)"&gt;#35126&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40052]: Buttons: Improve the `.button-link` CSS class for link-like buttons.  ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 09 Feb 2017 16:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40052</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40052/1486658818479175</guid>
      <description>&lt;p&gt;
Buttons: Improve the &lt;code&gt;.button-link&lt;/code&gt; CSS class for link-like buttons.
&lt;/p&gt;
&lt;p&gt;
Updates &lt;code&gt;.button-link&lt;/code&gt; adding color and underline to make link-like buttons look
like links by default. Introduces &lt;code&gt;.button-link-delete&lt;/code&gt; as a modifier, stackable
CSS class for red button-links.
&lt;/p&gt;
&lt;p&gt;
Props Cheffheid, afercia.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34242" title="#34242: defect (bug): Buttons styles: audit the button-reset and button-link styles (closed: fixed)"&gt;#34242&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35126" title="#35126: enhancement: Improvements for the new .button-link CSS class (closed: fixed)"&gt;#35126&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22938 (Presentation of hierarchical taxonomy in Media modal should be ...) updated</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Thu, 09 Feb 2017 16:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22938#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22938#comment:24/1486658747806569</guid>
      <description>&lt;p&gt;
Besides the UI choices (select2, metabox like in edit screen, ...) one thing that might enhances the current text input for attachment category would be a UI notice that shows to the user that the terms were saved.
&lt;/p&gt;
&lt;p&gt;
It's not evident to the user that category terms are saved until the text input "refresh" with terms listed by alphabetical order ASC.
&lt;/p&gt;
&lt;p&gt;
Also, I was thinking about enhancing the current text input with an "autosearch" feature. Just like the one implemented in the content editor when defining an anchor link. Perhaps re-use the existing work for the editor and provide similar autosearch for existing terms and if it doesn't add them to the input and finally return a UI (UX?) element that tells the user the terms were saved.
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 09 Feb 2017 16:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:41/1486658425707286</guid>
      <description>&lt;p&gt;
Refreshed patch to reset the subtle CSS transition on the media &lt;code&gt;.wp-core-ui .attachment-close&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35126.2.diff attached to Ticket #35126</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 09 Feb 2017 16:38:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35126/35126.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35126/35126.2.diff/1486658303367434</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39824 (Gallery doesn't show images being uploaded) created</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 09 Feb 2017 16:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39824</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39824/1486657123142147</guid>
      <description>&lt;p&gt;
When you insert a gallery with images being uploaded in Edit Post page, the gallery doesn't show the images.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;How to Reproduce&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Open Edit Post page.
&lt;/li&gt;&lt;li&gt;Insert a gallery with one uploaded image.
&lt;/li&gt;&lt;li&gt;Select the gallery in tinyMCE then click on Edit.
&lt;/li&gt;&lt;li&gt;Upload a big image file and/or slow down the internet to buy time for the following actions.
&lt;/li&gt;&lt;li&gt;Choose Edit Gallery tab then click on Update Gallery button while the big image is uploading.
&lt;/li&gt;&lt;li&gt;The gallery shows an empty element instead of the image.
&lt;/li&gt;&lt;li&gt;If you edit the gallery and open Edit Gallery tab after the image uploaded, you'll see it has gone.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 09 Feb 2017 16:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822#comment:3/1486656880094968</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39822#comment:2" title="Comment 2"&gt;miyauchi&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I think that this should work fine on PHP 5.2:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;class_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'PHPUnit\Runner\Version'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/phpunit-6-compat.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
In the &lt;code&gt;phpunit-6-compat.php&lt;/code&gt; file would be the rest of the code, of course.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39816 (When non-super admin clicks "login" on Meta widget, he is sent to the ...) updated</title>
      
        <dc:creator>hallcp</dc:creator>

      <pubDate>Thu, 09 Feb 2017 15:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39816#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39816#comment:2/1486654938782820</guid>
      <description>&lt;p&gt;
More digging... when calling "get_sites($args)" with a $args value like this (see below), null is returned:
&lt;/p&gt;
&lt;pre class="wiki"&gt;(
    [number] =&amp;gt;
    [site__in] =&amp;gt; Array
        (
            [0] =&amp;gt; 1
            [1] =&amp;gt; 9
            [2] =&amp;gt; 4
            [3] =&amp;gt; 13
            [4] =&amp;gt; 473
            [5] =&amp;gt; 413
            [6] =&amp;gt; 313
        )
    [archived] =&amp;gt; 0
    [spam] =&amp;gt; 0
    [deleted] =&amp;gt; 0
)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39823 (Added documentation to inline-edit-post.js) updated</title>
      
        <dc:creator>jjcomack</dc:creator>

      <pubDate>Thu, 09 Feb 2017 15:32:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39823#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39823#comment:3/1486654372917763</guid>
      <description>&lt;p&gt;
@SergeyBiryukov Done :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>js_doc-inline_edit_post.diff attached to Ticket #39823</title>
      
        <dc:creator>jjcomack</dc:creator>

      <pubDate>Thu, 09 Feb 2017 15:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39823/js_doc-inline_edit_post.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39823/js_doc-inline_edit_post.diff/1486654332717822</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39823 (Added documentation to inline-edit-post.js) updated</title>
      
        <dc:creator>jjcomack</dc:creator>

      <pubDate>Thu, 09 Feb 2017 15:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39823#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39823#comment:2/1486653926966593</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39823#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @jjcomack, thanks for the patch (and thanks to @rensw90 as well)!
&lt;/p&gt;
&lt;p&gt;
For easier review, could you attach the &lt;code&gt;.diff&lt;/code&gt; file itself, not in an archive?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh, of course! Sorry, I was instructed to upload this. Will get right on it!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39823 (Added documentation to inline-edit-post.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 09 Feb 2017 15:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39823#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39823#comment:1/1486653872243232</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @jjcomack, thanks for the patch (and thanks to @rensw90 as well)!
&lt;/p&gt;
&lt;p&gt;
For easier review, could you attach the &lt;code&gt;.diff&lt;/code&gt; file itself, not in an archive?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>js_doc-inline_edit_post.diff.zip attached to Ticket #39823</title>
      
        <dc:creator>jjcomack</dc:creator>

      <pubDate>Thu, 09 Feb 2017 15:16:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39823/js_doc-inline_edit_post.diff.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39823/js_doc-inline_edit_post.diff.zip/1486653387030911</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39823 (Added documentation to inline-edit-post.js) created</title>
      
        <dc:creator>jjcomack</dc:creator>

      <pubDate>Thu, 09 Feb 2017 15:15:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39823</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39823/1486653350462650</guid>
      <description>&lt;p&gt;
As part of Yoast's continous efforts to improve the JavaScript documentation, this patch adds documentation that was missing in inline-edit-post.js.
&lt;/p&gt;
&lt;p&gt;
Props to @rensw90 for doing this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) updated</title>
      
        <dc:creator>miyauchi</dc:creator>

      <pubDate>Thu, 09 Feb 2017 14:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822#comment:2/1486652185796711</guid>
      <description>&lt;p&gt;
Oh, that is exactly right!
Do you know any solution to include it for PHP 5.2.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( class_exists( 'PHPUnit\Runner\Version' ) {}&lt;/code&gt; doesn't work on PHP 5.2 right?
&lt;/p&gt;
&lt;p&gt;
Thanks for your response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39799 (Multisite User get "Sorry, that email address is not allowed!" ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 09 Feb 2017 14:48:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39799#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39799#comment:5/1486651689620850</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 09 Feb 2017 14:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:5/1486651654353390</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39816 (When non-super admin clicks "login" on Meta widget, he is sent to the ...) updated</title>
      
        <dc:creator>hallcp</dc:creator>

      <pubDate>Thu, 09 Feb 2017 14:45:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39816#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39816#comment:1/1486651548464966</guid>
      <description>&lt;p&gt;
I am now getting complaints that the "My Sites" pull-down is not showing any sites, despite the user being an administrator on multiple sites. Not sure if this is related to the above bug.
&lt;/p&gt;
&lt;p&gt;
I have looked more deeply into the original issue, and it appears that a call to "get_blogs_of_user()" is returning null on the affected systems. I am trying to follow up on that now.
&lt;/p&gt;
&lt;p&gt;
Charles.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 09 Feb 2017 14:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822#comment:1/1486648942633452</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Won't the use of the namespace separator in that code cause a parse an error on PHP 5.2? I know that it won't actually be executed, because an older version of PHPUnit will be running on that old of a version of PHP. But WordPress still runs its tests against PHP 5.2, so this solution needs to be PHP 5.2 compatible. And because the code is a part of the file, even if it isn't executed, it will still have to get parsed.
&lt;/p&gt;
&lt;p&gt;
I would say the best way to fix this would be to move the migration code to a separate file, that would only be included (and thus parsed), &lt;code&gt;if ( class_exists( 'PHPUnit\Runner\Version' ) {}&lt;/code&gt;. That way the main file should still parse on PHP 5.2, and the migration file that requires a newer PHP version to parse won't be loaded then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39804 (WP Cli Update Issue) updated</title>
      
        <dc:creator>designextreme</dc:creator>

      <pubDate>Thu, 09 Feb 2017 12:55:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39804#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39804#comment:2/1486644948941722</guid>
      <description>&lt;p&gt;
Here is what happened...
&lt;/p&gt;
&lt;pre class="wiki"&gt;root@server [~]# cd /home/user/public_html
root@server [/home/user/public_html]# wp --allow-root core version
4.7.1
root@server [/home/user/public_html]# wp --allow-root core update
root@server [/home/user/public_html]# wp --allow-root core update --debug
Debug (bootstrap): No readable global config found (0.006s)
Debug (bootstrap): No project config found (0.006s)
Debug (bootstrap): No package autoload found to load. (0.094s)
Debug (bootstrap): ABSPATH defined: /home/user/public_html/ (0.094s)
Debug (bootstrap): Begin WordPress load (0.094s)
Debug (bootstrap): wp-config.php path: /home/user/public_html/wp-config.php (0.094s)
&lt;/pre&gt;&lt;p&gt;
That's it.
&lt;/p&gt;
&lt;p&gt;
I've edited it a little for privacy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) closed</title>
      
        <dc:creator>skarabeq</dc:creator>

      <pubDate>Thu, 09 Feb 2017 12:24:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:4/1486643055332218</guid>
      <description>worksforme: &lt;p&gt;
Yes, it works! Thanks!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) updated</title>
      
        <dc:creator>Compute</dc:creator>

      <pubDate>Thu, 09 Feb 2017 12:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:3/1486642879742481</guid>
      <description>&lt;p&gt;
Did it work? Can we close this ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15619 (General Settings Tab Not Allowing trailing URL slash to be stored in ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 09 Feb 2017 11:59:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15619#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15619#comment:12/1486641541439913</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>39822.patch attached to Ticket #39822</title>
      
        <dc:creator>miyauchi</dc:creator>

      <pubDate>Thu, 09 Feb 2017 11:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39822/39822.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39822/39822.patch/1486639966148468</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) created</title>
      
        <dc:creator>miyauchi</dc:creator>

      <pubDate>Thu, 09 Feb 2017 11:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822/1486639928856022</guid>
      <description>&lt;p&gt;
PHPUnit no longer supports &lt;code&gt;PHPUnit_Framework_TestCase&lt;/code&gt; as the base class.
&lt;a class="ext-link" href="https://github.com/sebastianbergmann/phpunit/blob/6.0/ChangeLog-6.0.md#600---2017-02-03"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/sebastianbergmann/phpunit/blob/6.0/ChangeLog-6.0.md#600---2017-02-03&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ phpunit
Installing...
Running as single site... To run multisite, use -c tests/phpunit/multisite.xml
PHP Fatal error:  Class 'PHPUnit_Framework_TestCase' not found in /Users/miyauchi/wp-core/trunk/tests/phpunit/includes/testcase.php on line 15
&lt;/pre&gt;&lt;p&gt;
I wrote aliases for it.
It looks woking fine with phpunit 5.6 and phpunit 6.
&lt;/p&gt;
&lt;p&gt;
Related:
&lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/issues/3802"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-cli/wp-cli/issues/3802&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) updated</title>
      
        <dc:creator>skarabeq</dc:creator>

      <pubDate>Thu, 09 Feb 2017 10:43:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:2/1486637034294491</guid>
      <description>&lt;p&gt;
@Compute thank you for support.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) updated</title>
      
        <dc:creator>Compute</dc:creator>

      <pubDate>Thu, 09 Feb 2017 09:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:1/1486633141738117</guid>
      <description>&lt;p&gt;
You should be able to send arguments to wp_die(). Response code can be sent to the title argument.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_die/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/wp_die/&lt;/a&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/_ajax_wp_die_handler/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/_ajax_wp_die_handler/&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_int( $args ) ) {
	$args = array( 'response' =&amp;gt; $args );
} elseif ( is_int( $title ) ) {
	$args  = array( 'response' =&amp;gt; $title );
	$title = '';
}
&lt;/pre&gt;&lt;p&gt;
So if you use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die( '', 422 );
&lt;/pre&gt;&lt;p&gt;
Or:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_die( 'Message', 'Title, array( 422 ) );
&lt;/pre&gt;&lt;p&gt;
You should be able to change the response code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20027 (Use get_(template|stylesheet) instead of get_option( ...) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 09 Feb 2017 09:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20027#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20027#comment:19/1486632019510717</guid>
      <description>&lt;p&gt;
Patch for 4.8-alpha-40051
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20027.3.patch attached to Ticket #20027</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 09 Feb 2017 09:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20027/20027.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20027/20027.3.patch/1486631980413811</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39821 (Please make image extensions array filterable in wp_attachment_is()) created</title>
      
        <dc:creator>Hinjiriyo</dc:creator>

      <pubDate>Thu, 09 Feb 2017 08:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39821</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39821/1486630772129979</guid>
      <description>&lt;p&gt;
The function &lt;strong&gt;wp_attachment_is()&lt;/strong&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; checks the type of an attachment. While the checks for audio files and video files call subfunctions with filterable arrays of extensions &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3" title="*** empty log message ***
"&gt;[3]&lt;/a&gt; the check for image files uses a unfilterable - thus immutable - array.
&lt;/p&gt;
&lt;p&gt;
Please
1) make the array of image file extensions filterable like for audios and videos to let more image file formats allowed in WP
2) set that line in a subfunction just to be consistent with the functions for audios and videos, lets call it wp_get_image_extensions()
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; wp_attachment_is() in /wp-includes/post.php
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt; wp_get_audio_extensions() in /wp-includes/media.php
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt; wp_get_video_extensions() in /wp-includes/media.php
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) created</title>
      
        <dc:creator>skarabeq</dc:creator>

      <pubDate>Thu, 09 Feb 2017 07:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820/1486626087045183</guid>
      <description>&lt;p&gt;
After update wordpress from 4.6.1 to 4.7.2 I was unpleasantly surprised.In ajax response like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;post_contact_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$json_return&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;])){&lt;/span&gt;
    &lt;span class="nv"&gt;$error_status_header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;422&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;status_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$error_status_header&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$json_return&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'error'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Error. Please fill your name."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$json_return&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'success'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Form submitted."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$json_return&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;wp_die&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wp_ajax_post_contact_form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'post_contact_form'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wp_ajax_nopriv_post_contact_form'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'post_contact_form'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When I try to change status header to 422 , I just got http status header 200. In this case my fron-end logic was broked, because I check the ajax status code in ajax error handle.  Also I tried with status code 400 the result is same. Please fix it because this bug has created extremely inconvenience to the functionality of my site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39804 (WP Cli Update Issue) updated</title>
      
        <dc:creator>pothi</dc:creator>

      <pubDate>Thu, 09 Feb 2017 07:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39804#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39804#comment:1/1486625234022758</guid>
      <description>&lt;p&gt;
Hi Noah,
&lt;/p&gt;
&lt;p&gt;
Sorry to know that you have had issues in updating WP core.
&lt;/p&gt;
&lt;p&gt;
Try to run wp cli with --debug flag to see any errors.
&lt;/p&gt;
&lt;p&gt;
Also, please include as much information as possible to replicate the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39055_tests_current_behavior_refresh.diff attached to Ticket #39055</title>
      
        <dc:creator>fibonaccina</dc:creator>

      <pubDate>Thu, 09 Feb 2017 07:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39055/39055_tests_current_behavior_refresh.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39055/39055_tests_current_behavior_refresh.diff/1486623666007851</guid>
      <description>&lt;p&gt;
Relocate tests and fix indentation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39055 (REST API: order is ignored when orderby is set to include) updated</title>
      
        <dc:creator>fibonaccina</dc:creator>

      <pubDate>Thu, 09 Feb 2017 06:59:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39055#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39055#comment:16/1486623581096889</guid>
      <description>&lt;p&gt;
Thanks a lot for the feedback @jnylen0 !
&lt;/p&gt;
&lt;p&gt;
It seems my IDE (PhpStorm) was adding some unexpected indentation. Your link was very useful, I hadn't stumbled onto the WordPress-specific PHP coding standards yet, this will be very helpful going forward. I believe I've fixed the indentation, please let me know if anything doesn't look right. The newest version is &lt;code&gt;39055_tests_current_behavior_refresh.diff&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
As well, I wavered quite a bit whether to place the tests in &lt;code&gt;search.php&lt;/code&gt; or &lt;code&gt;results.php&lt;/code&gt;. Admittedly in the end I made a more or less educated guess, but especially now understanding the issue much better, there isn't a doubt in my mind that &lt;code&gt;results.php&lt;/code&gt; is the correct place. Are there any resources I might have missed for guidance on where to place tests, or is just a matter of figuring it out on a case by case basis?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38693 (REST API: Audit `orderby` params and add any others) updated</title>
      
        <dc:creator>openhatch</dc:creator>

      <pubDate>Thu, 09 Feb 2017 06:14:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38693#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38693#comment:26/1486620841545918</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38693#comment:22" title="Comment 22"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Okay, let's take a look at adding these via a filter in a separate ticket.  Thank y'all for weighing in.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Has this separate ticket been created? I'd be happy to see the random orderby reappear--but it was apparently decided that would be plugin territory. If that's so, would I need to code that myself?
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39818 (Bulk Publishing Posts (from Pending State) Causes Pagination To Break) created</title>
      
        <dc:creator>CrazyEngineers</dc:creator>

      <pubDate>Thu, 09 Feb 2017 06:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39818</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39818/1486620319511590</guid>
      <description>&lt;p&gt;
Steps: -
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create about 30 posts, all in 'pending' state.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;In admin panel, bulk edit all these posts and change status to 'publish'
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Observe: The order of the posts gets messed up in the admin panel. If pagination is in place, you can notice duplicate posts on pages.
&lt;/p&gt;
&lt;p&gt;
Apparently, the 'publish date' of the posts is messed up at the time of bulk publishing all the posts. WP_Query cannot decide how to paginate posts because multiple posts would have the same publishing time (unix timestamp).
&lt;/p&gt;
&lt;p&gt;
Notes: I encountered this bug at the time of creating posts using a script (to test my plugin). I could reproduce it on two different servers; but not on my local machine with exported XML.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #24044 (Add index to wp_options to aid/improve performance) updated</title>
      
        <dc:creator>arjenlentz</dc:creator>

      <pubDate>Thu, 09 Feb 2017 03:24:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24044#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24044#comment:67/1486610678970660</guid>
      <description>&lt;p&gt;
Having an index on a boolean column can make a significant difference - more so in more recent versions of MySQL and MariaDB.
&lt;/p&gt;
&lt;p&gt;
Let's just check this in the real world, as that's what matters (data from a live server):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;gt; explain SELECT option_name, option_value FROM wp_options WHERE autoload = 'yes';
+------+-------------+------------+------+---------------+------+---------+------+-------+-------------+
| id   | select_type | table      | type | possible_keys | key  | key_len | ref  | rows  | Extra       |
+------+-------------+------------+------+---------------+------+---------+------+-------+-------------+
|    1 | SIMPLE      | wp_options | ALL  | NULL          | NULL | NULL    | NULL | 60453 | Using where |
+------+-------------+------------+------+---------------+------+---------+------+-------+-------------+
&amp;gt; ALTER TABLE wp_options ADD INDEX (autoload);
&amp;gt; explain SELECT option_name, option_value FROM wp_options WHERE autoload = 'no';
+------+-------------+------------+------+---------------+----------+---------+-------+-------+-----------------------+
| id   | select_type | table      | type | possible_keys | key      | key_len | ref   | rows  | Extra                 |
+------+-------------+------------+------+---------------+----------+---------+-------+-------+-----------------------+
|    1 | SIMPLE      | wp_options | ref  | autoload      | autoload | 82      | const | 30228 | Using index condition |
+------+-------------+------------+------+---------------+----------+---------+-------+-------+-----------------------+
1 row in set (0.00 sec)
&amp;gt; explain SELECT option_name, option_value FROM wp_options WHERE autoload = 'yes';
+------+-------------+------------+------+---------------+----------+---------+-------+------+-----------------------+
| id   | select_type | table      | type | possible_keys | key      | key_len | ref   | rows | Extra                 |
+------+-------------+------------+------+---------------+----------+---------+-------+------+-----------------------+
|    1 | SIMPLE      | wp_options | ref  | autoload      | autoload | 82      | const | 2329 | Using index condition |
+------+-------------+------------+------+---------------+----------+---------+-------+------+-----------------------+
&lt;/pre&gt;&lt;p&gt;
As you can see, there is quite a difference with an index, particularly for the 'yes' case.
And in both cases the server does choose to use the index rather than do a tablescan - so the optimiser thinks that it's more beneficial.
&lt;/p&gt;
&lt;p&gt;
Now, mind that with the InnoDB storage engine a secondary index (such as autoload) causes a double lookup. That is, once it finds an entry in such an index, it has a pointer to the primary key where it then has to look up the rest of the row. So there is a cost to using a secondary index (rather than scanning the table using the clustered PRIMARY KEY), and the optimiser knows it.
&lt;/p&gt;
&lt;p&gt;
With this in mind, I think we can safely say that having the index makes sense. It may not make a huge
difference per query, but WP does a lot of queries and thus every optimisation helps.
&lt;/p&gt;
&lt;p&gt;
It is absolutely true that having more indexes slightly slows down writes, but that's not an argument against having indexes as such - it's an argument in having ineffective (superfluous) indexes.
This one is clearly useful. And since most operations on this table are in fact reads, not writes, the balance is really seriously in favour of having the index (as also indicated by the EXPLAIN output above).
&lt;/p&gt;
&lt;p&gt;
In MyISAM the gains would not necessarily be the same, however it will benefit. I would also note that any new install now will use InnoDB, as that has been the default engine in MySQL and MariaDB for some years already now. Granted, old installed may well still be using MyISAM, but if those installs cared for performance (or scaled up) they'd have done something about the engine they use (ALTER TABLE ... ENGINE=INNODB is all that's needed for that) as well as some decent server tuning. It's not something we want to be worrying about here, pandering to an archaic lowest denominator hurts users now.
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14258 (wp_options and MySQL's "log-queries-not-using-indexes" config) reopened</title>
      
        <dc:creator>arjenlentz</dc:creator>

      <pubDate>Thu, 09 Feb 2017 03:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14258#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14258#comment:8/1486609944520749</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14258#comment:3" title="Comment 3"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Adding an index won't improve performance for this. If a query going through an index reads more than 30% of the rows, MySQL will revert to a table scan.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry pento, but this is not correct. It is a neat rule of thumb that we've used in training also, but there is no such rule in the code itself. (feel free to try and prove me wrong, show me a relevant MySQL server source code snippet - hint: I used to work for MySQL).
&lt;/p&gt;
&lt;p&gt;
What's relevant is the selectivity, and having an index on a boolean can make a significant difference - more so in more recent versions of MySQL and MariaDB.
&lt;/p&gt;
&lt;p&gt;
But let's just check this in the real world, as that's what matters:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;gt; explain SELECT option_name, option_value FROM wp_options WHERE autoload = 'yes';
+------+-------------+------------+------+---------------+------+---------+------+-------+-------------+
| id   | select_type | table      | type | possible_keys | key  | key_len | ref  | rows  | Extra       |
+------+-------------+------------+------+---------------+------+---------+------+-------+-------------+
|    1 | SIMPLE      | wp_options | ALL  | NULL          | NULL | NULL    | NULL | 60453 | Using where |
+------+-------------+------------+------+---------------+------+---------+------+-------+-------------+
&amp;gt; ALTER TABLE wp_options ADD INDEX (autoload);
&amp;gt; explain SELECT option_name, option_value FROM wp_options WHERE autoload = 'no';
+------+-------------+------------+------+---------------+----------+---------+-------+-------+-----------------------+
| id   | select_type | table      | type | possible_keys | key      | key_len | ref   | rows  | Extra                 |
+------+-------------+------------+------+---------------+----------+---------+-------+-------+-----------------------+
|    1 | SIMPLE      | wp_options | ref  | autoload      | autoload | 82      | const | 30228 | Using index condition |
+------+-------------+------------+------+---------------+----------+---------+-------+-------+-----------------------+
1 row in set (0.00 sec)
&amp;gt; explain SELECT option_name, option_value FROM wp_options WHERE autoload = 'yes';
+------+-------------+------------+------+---------------+----------+---------+-------+------+-----------------------+
| id   | select_type | table      | type | possible_keys | key      | key_len | ref   | rows | Extra                 |
+------+-------------+------------+------+---------------+----------+---------+-------+------+-----------------------+
|    1 | SIMPLE      | wp_options | ref  | autoload      | autoload | 82      | const | 2329 | Using index condition |
+------+-------------+------------+------+---------------+----------+---------+-------+------+-----------------------+
&lt;/pre&gt;&lt;p&gt;
As you can see, there is quite a difference with an index, particularly for the 'yes' case.
And in both cases the server does choose to use the index rather than do a tablescan - so the optimiser thinks that it's more beneficial.
&lt;/p&gt;
&lt;p&gt;
Now, mind that with the InnoDB storage engine a secondary index (such as autoload) causes a double lookup. That is, once it finds an entry in such an index, it has a pointer to the primary key where it then has to look up the rest of the row. So there is a cost to using a secondary index (rather than scanning the table using the clustered PRIMARY KEY), and the optimiser knows it.
&lt;/p&gt;
&lt;p&gt;
With this in mind, I think we can safely say that having the index makes sense. It may not make a huge difference per query, but WP does a lot of queries and thus every optimisation helps.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There would be no benefit to switching to enum. Even assuming a ludicrously massive wp_options table of 5000 rows, the space saving would still be less than a single InnoDB page.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Indeed, an ENUM would not help.
But an index does. Please add it. Cheap gain!
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item>
   </channel>
</rss>