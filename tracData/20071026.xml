<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #5258 (Check For Updated Plugins doesn't check) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 26 Oct 2007 23:54:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5258#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5258#comment:6/1193442876000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5262 (Theme editor should allow creation of files.) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 26 Oct 2007 22:41:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5262#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5262#comment:5/1193438469000000</guid>
      <description>&lt;p&gt;
We're talking about editing PHP code directly here. If they want to create a file, they can create any file they like. Edit the functions.php file in the theme and add this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$filename = 'wp-content/themes/themename/whatever.php';
if (!file_exists($filename)) {
$file = fopen($filename, "w");
fwrite($file, '&amp;lt;?php bad_code() ?&amp;gt;');
fclose($file);
}
&lt;/pre&gt;&lt;p&gt;
Done and done. Very next page load, functions.php is loaded and the file is created (assuming permissions are allowable to do that). I've used this trick to create files in the theme directory and then edited them directly using the editor before.
&lt;/p&gt;
&lt;p&gt;
There is no security added by not being directly allowed to create files. If you can edit the code, you can create files as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6294]: Strip term name and description before preparing for DB.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 26 Oct 2007 19:44:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6294/1193427897793226</guid>
      <description>&lt;p&gt;
Strip term name and description before preparing for DB.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5262 (Theme editor should allow creation of files.) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Fri, 26 Oct 2007 17:19:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5262#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5262#comment:4/1193419148000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5262#comment:3" title="Comment 3"&gt;santosj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, they can still include the wp-config.php and totally pwn the server without their mad skillz.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I still don't understand. They could *already* edit an existing theme file to do just that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5262 (Theme editor should allow creation of files.) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Fri, 26 Oct 2007 16:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5262#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5262#comment:3/1193416351000000</guid>
      <description>&lt;p&gt;
Yeah, they can still include the wp-config.php and totally pwn the server without their mad skillz.
&lt;/p&gt;
&lt;p&gt;
Creating files should only be allowed by FTP only. For security. Unless you like, want other people to be able to customize their stuff and use other themes. It might be a pain, but you know because I don't really.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6293]: 2.3.1</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 26 Oct 2007 16:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6293</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6293/1193415008903985</guid>
      <description>&lt;p&gt;
2.3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [6292]: Ship it</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 26 Oct 2007 16:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6292</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6292/1193414897244798</guid>
      <description>&lt;p&gt;
Ship it
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5262 (Theme editor should allow creation of files.) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Fri, 26 Oct 2007 15:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5262#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5262#comment:2/1193412291000000</guid>
      <description>&lt;p&gt;
santosj, if they only can create files in the theme directory, how are you any more owned then you already are?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4742 (phpdoc for taxonomy API) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Fri, 26 Oct 2007 15:22:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4742#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4742#comment:16/1193412136000000</guid>
      <description>&lt;p&gt;
Dude! Sweet!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5262 (Theme editor should allow creation of files.) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Fri, 26 Oct 2007 14:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5262#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5262#comment:1/1193410558000000</guid>
      <description>&lt;p&gt;
I think that would be a very bad idea for something that is built in. If anyone was able to gain access to that section, they would own you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5262 (Theme editor should allow creation of files.) created</title>
      
        <dc:creator>youngmicroserf</dc:creator>

      <pubDate>Fri, 26 Oct 2007 14:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5262</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5262/1193409479000000</guid>
      <description>&lt;p&gt;
I find it annoying that the built in theme editor doesn't allow the creation of files, say, a specific category template, but that I have to resort to my ftp programme to do so.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5261 (Array issues in plugins.php) created</title>
      
        <dc:creator>aroundmyroom</dc:creator>

      <pubDate>Fri, 26 Oct 2007 14:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5261</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5261/1193408631000000</guid>
      <description>&lt;p&gt;
version 2.1.3 is working without any problem, but with the release of version 2.2.2 there was introduced a bug called: ARRAY bug
at the support forums you can read this issue from other people as well
&lt;a class="ext-link" href="http://wordpress.org/support/topic/118367/page/2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/118367/page/2&lt;/a&gt;
the solution for 2.2.2. was given by user SEVENETH posting some code to be changed in the plugin.php
&lt;/p&gt;
&lt;p&gt;
Trying to upgrade from 2.1.3 to 2.3 causes for me a lot of array issues inside the dashboard and options including the loss of all categories
&lt;/p&gt;
&lt;p&gt;
During my testing for 2.3 and now 2.3.1 I see the same issue
&lt;/p&gt;
&lt;p&gt;
if tracking my test weblog at &lt;a class="ext-link" href="http://www.aroudmyroom.com/test"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.aroudmyroom.com/test&lt;/a&gt; you also can see that there does exist an array category made by the system itself
&lt;/p&gt;
&lt;p&gt;
The server is running
PHP Version 4.3.9
Apache/2.0.52 (CentOS
&lt;/p&gt;
&lt;p&gt;
in the support forums it seems that the ticket for the array issue was too easily closed and too easily refered to an necessary update for PHP and/or ZEND
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5258 (Check For Updated Plugins doesn't check) closed</title>
      
        <dc:creator>zamoose</dc:creator>

      <pubDate>Fri, 26 Oct 2007 13:09:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5258#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5258#comment:5/1193404165000000</guid>
      <description>invalid: &lt;p&gt;
I concur with Viper.  That's not the WordPress plugin update checking UI.
&lt;/p&gt;
&lt;p&gt;
Closing as non-WP-related.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Fri, 26 Oct 2007 12:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:11/1193403060000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:10" title="Comment 10"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...The problem there is that role management requires a plugin.  Perhaps that needs to change.  And it's certainly more likely to happen if our cap/role system trims some of the fat.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Excellent observation.  +1 for adding role/cap management to the core.  With the initiative to improve the admin experience underway, in addition to providing users role/cap management, might consider allowing users to manage the capabilities necessary to execute each admin function.  Of course that might mean adding a manage_cap cap ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 26 Oct 2007 07:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:10/1193384996000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:8" title="Comment 8"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
First, it's not clear to me what you're proposing.  Ryan says above that "If you want to change what a user can do, give the user a new role with a new set of capabilities."  That sounds to me like you can't change a role's existing capabilities; instead, you have to create a new role with its own capabilities.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Two different scenarios:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You want to add Cap_X to User_Y
&lt;/li&gt;&lt;li&gt;You want to add Cap_X to Role_Z
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Ryan is saying that what would change in order to do &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; is that you would need to create a new role in order to isolate the changes for that user.  &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; doesn't change at all... so you'll still be able to change an existing role's capabilities.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Second, even if the proposed system does allow one to add capabilities to roles, that seems of trivial use. Let's say my plugin checks for its "edit_video" capability.  If I can add that capability only on a per-role basis, what's the point?  Instead of adding "edit_video" to all "editors," I should just check whether someone is an "editor."  The particular capability has become superfluous.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Checking the role assumes that the role exists, and that its meaning has not changed.  That's not necessarily the case.  So it's much better for a plugin to define new capabilities and let the user decide which roles should get those capabilities.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead, a more likely--and useful--situation is that I want to assign the "edit_video" capability in a way that doesn't map neatly to existing roles. So for example Bob who is an "author" can "edit_video," as well as Mary an "editor," but not other editors or authors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it doesn't map neatly to existing roles, yeah, you'd need a new role.  Not ideal for that scenario the first time you need to do it, but it scales a lot better if you create a new role, because you can perform bulk operations on that role.  "Add foo_bar to everyone with edit_video" is a lot easier if you only have to do it for each role with edit_video, and not every individual user.  Obviously there are pros and cons, but I think that few people are going to want a large number of distinct capability combinations.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Besides, we don't really use roles that much, at least in core WP. Grepping through 2.3 I don't see anywhere that we check for users having the role of 'administrator' or 'editor.'  Rather, we check capabilities.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Roles are containers of capabilities, for grouping purposes.  They don't have inherent meaning.  That's why we don't do &lt;code&gt;current_user_can('editor')&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If each user has a distinct role, then yeah, you'll have a user:role ratio of 1.  That's not the common case in multi-user installs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right--what I'm saying is that if users can have only one role, then that's the kind of situation you could end up with.  If I want Bob to "edit_video" and have all the other capabilities of an author, but I don't want other authors to have the "edit_video" cap, then I'll have to create a new role with author capabilities + the "edit_video" capability, and assign it to Bob.  Then if another plugin wants to assign, say, the "make_podcast" capability without giving it to everyone within an existing role, that plugin will have to generate a new role. It seems like the following would be some of the consequences to this arrangement:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Plugins clutter up the system with new roles for what would otherwise be slight changes (adding a capability).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Plugins shouldn't add new roles for this reason.  Instead, they should allow users to make the choice of adding the new capability to existing roles and/or new roles.  The problem there is that role management requires a plugin.  Perhaps that needs to change.  And it's certainly more likely to happen if our cap/role system trims some of the fat.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Roles become meaningless.  I can't assume that Bob is an author anymore, as he might have become the new role that combines the capabilities of an author with "edit_video."  So it does no good to test someone's role.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Roles &lt;strong&gt;are&lt;/strong&gt; meaningless.  They're only containers of capabilities.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4742 (phpdoc for taxonomy API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Fri, 26 Oct 2007 05:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4742#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4742#comment:15/1193375630000000</guid>
      <description>&lt;p&gt;
Dude! Only four more functions to go! Also three of them are going to be quite time consuming. Can't wait to call this file done!
&lt;/p&gt;
&lt;p&gt;
Patch fixes several errors, @see should not be used in descriptions and must be on its own line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>taxonomy.r6291.phpdoc.patch attached to Ticket #4742</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Fri, 26 Oct 2007 05:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4742/taxonomy.r6291.phpdoc.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4742/taxonomy.r6291.phpdoc.patch/1193375461000000</guid>
      <description>&lt;p&gt;
Patched against &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6291" title="Fix the require_once in install-helper.php so that it works when ..."&gt;r6291&lt;/a&gt; and cleans up and brings the total needing documentation to four
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5087 (WYSIWYG Insert/Edit Image button issues) updated</title>
      
        <dc:creator>bl968</dc:creator>

      <pubDate>Fri, 26 Oct 2007 04:49:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5087#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5087#comment:18/1193374156000000</guid>
      <description>&lt;p&gt;
You can reach me by phone at 931-920-0043 or via im at ICQ: 560860, msn messenger at blarson@…, or aim at BillLarson968
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5087 (WYSIWYG Insert/Edit Image button issues) updated</title>
      
        <dc:creator>bl968</dc:creator>

      <pubDate>Fri, 26 Oct 2007 04:33:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5087#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5087#comment:17/1193373215000000</guid>
      <description>&lt;p&gt;
Server: Apache/2.0.61 (Unix) PHP/5.2.2
&lt;/p&gt;
&lt;p&gt;
Steps:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to write post screen
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;upload and/or insert image[br]
&lt;/li&gt;&lt;/ol&gt;&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;img src="&lt;a class="ext-link" href="http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg&lt;/a&gt;" /&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start="3"&gt;&lt;li&gt;Edit image with the insert/edit image button (alt-m)
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Change image alignment to left.
&lt;/li&gt;&lt;/ol&gt;&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;img border="0" align="left" width="1" src="&lt;a class="ext-link" href="http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg&lt;/a&gt;" height="1" /&amp;gt;&amp;lt;img border="0" align="left" width="1" src="&lt;a class="ext-link" href="http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg&lt;/a&gt;" height="1" /&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the image code notice width and height are set to 1 even though we did not change the width or height on the image. Also the image tag has been duplicated.[br]
&lt;/p&gt;
&lt;p&gt;
Anything else you would like to know I will be happy to provide. If you have anything you wish for me to try just let me know.
&lt;/p&gt;
&lt;p&gt;
(I really hate the formatting here)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5087 (WYSIWYG Insert/Edit Image button issues) updated</title>
      
        <dc:creator>bl968</dc:creator>

      <pubDate>Fri, 26 Oct 2007 04:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5087#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5087#comment:16/1193372994000000</guid>
      <description>&lt;p&gt;
Server: Apache/2.0.61 (Unix) PHP/5.2.2
&lt;/p&gt;
&lt;p&gt;
Steps:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to write post screen[br]
&lt;/li&gt;&lt;li&gt;upload and/or insert image[br]
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;&amp;lt;img src="http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg" /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
[br]
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;Edit image with the insert/edit image button (alt-m)[br]
&lt;/li&gt;&lt;li&gt;Change image alignment to left.[br]
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;&amp;lt;img border="0" align="left" width="1" src="http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg" height="1" /&amp;gt;&amp;lt;img border="0" align="left" width="1" src="http://www.clarksvilleonline.com/wp-content/uploads/2007/10/co-gateway.jpg" height="1" /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This is the image code notice width and height are set to 1 even though we did not change the width or height on the image. Also the image tag has been duplicated.[br]
&lt;/p&gt;
&lt;p&gt;
Anything else you would like to know I will be happy to provide. If you have anything you wish for me to try just let me know.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5260 (&lt;!-- nextpage --&gt; Problem) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 26 Oct 2007 04:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5260#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5260#comment:5/1193372446000000</guid>
      <description>&lt;p&gt;
It's used for created an auto-except of sorts.
&lt;/p&gt;
&lt;p&gt;
For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;This part of the post will display on the homepage, archives, etc.
It's a really interesting article. Oh, and hey, here's some big pictures or a ton of text:
&amp;lt;!--more--&amp;gt;
This text will ONLY appear on the single post view.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5260 (&lt;!-- nextpage --&gt; Problem) updated</title>
      
        <dc:creator>ReneeGirl</dc:creator>

      <pubDate>Fri, 26 Oct 2007 03:12:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5260#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5260#comment:4/1193368325000000</guid>
      <description>&lt;p&gt;
So what do you use for the more tag then?  &amp;lt;!-- more (What?) --&amp;gt;  Just curious.  And as far as the rest, I seem to remember the next page tag, unless I'm going senile xx;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5260 (&lt;!-- nextpage --&gt; Problem) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 26 Oct 2007 03:04:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5260#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5260#comment:3/1193367887000000</guid>
      <description>&lt;p&gt;
No, it shouldn't be. They are completely different. For example, I use &lt;code&gt;&amp;lt;!--more Some text here--&amp;gt;&lt;/code&gt; all the and I never, ever have used &lt;code&gt;&amp;lt;!--nextpage--&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm all for having both, but don't remove "more". I think it's probably used 100x as much.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5260 (&lt;!-- nextpage --&gt; Problem) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Fri, 26 Oct 2007 02:45:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5260#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5260#comment:2/1193366717000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5260 (&lt;!-- nextpage --&gt; Problem) updated</title>
      
        <dc:creator>ReneeGirl</dc:creator>

      <pubDate>Fri, 26 Oct 2007 02:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5260#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5260#comment:1/1193364424000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5260 (&lt;!-- nextpage --&gt; Problem) created</title>
      
        <dc:creator>ReneeGirl</dc:creator>

      <pubDate>Fri, 26 Oct 2007 01:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5260</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5260/1193361493000000</guid>
      <description>&lt;p&gt;
In /wp-admin/edit-pages.php, the "more" bbcode should be changed to "nextpage".  I spent forever working and reworking my page template trying to figure out what was wrong but found here on the tracker the "nextpage" tag and that fixed my problem.  Not a big deal, but if you've not made pages that span multiple pages in WordPress before then it is very vexing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Milestone 2.3.1 completed</title>
      

      <pubDate>Fri, 26 Oct 2007 00:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/2.3.1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/2.3.1/1193356800000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/development/2007/10/wordpress-231/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/development/2007/10/wordpress-231/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>milestone</category>
    </item><item>
      <title>Ticket #5258 (Check For Updated Plugins doesn't check) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 25 Oct 2007 23:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5258#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5258#comment:4/1193355553000000</guid>
      <description>&lt;p&gt;
Uh, what UI is that? Looks to be a plugin...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5259 (Files uploaded via FTP (or other means outside of WP) don't show up in ...) created</title>
      
        <dc:creator>stpagh</dc:creator>

      <pubDate>Thu, 25 Oct 2007 21:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5259</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5259/1193348719000000</guid>
      <description>&lt;p&gt;
Hello, I'm new to WordPress, but the first thing I want to do seems to be a problem. I have read a discussion about it here: &lt;a class="ext-link" href="http://wordpress.org/support/topic/106176?replies=7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/106176?replies=7&lt;/a&gt; but there does not appear to be a solution as yet.
&lt;/p&gt;
&lt;p&gt;
When a large file is uploaded via FTP it is not visible in the Upload Manager where you can click on the file and have a link to it created in the post entry. We are trying to publish our pastor's sermons and so the file sizes will be quite large and it does not appear that we can upload them through the normal Upload feature as the browser times out. I want the process to be as easy as possible for none techy people so the interface is great, but we have to be able to use it with our files!
&lt;/p&gt;
&lt;p&gt;
Any way this could be fixed for the upcoming release?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Thu, 25 Oct 2007 21:24:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:9/1193347447000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:8" title="Comment 8"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead, a more likely--and useful--situation is that I want to assign the "edit_video" capability in a way that doesn't map neatly to existing roles. So for example Bob who is an "author" can "edit_video," as well as Mary an "editor," but not other editors or authors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's exactly how I change capabilities, and I find that very useful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5258 (Check For Updated Plugins doesn't check) updated</title>
      
        <dc:creator>romo9</dc:creator>

      <pubDate>Thu, 25 Oct 2007 19:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5258#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5258#comment:3/1193339396000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5258#comment:1" title="Comment 1"&gt;foolswisdom&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you provide an example of plugins (versions) to test this with?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This error is for all plug ins not selected ones.  now all of my plug ins are updated now cause i had to deactivate them all in order to see what worked and what didnt (though i could have just done it one at a time.) and so i feel it would better serve the user if it was notated on each plugin when a new update was available just like when a new version of wordpress is made available.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>section1.bmp attached to Ticket #5258</title>
      
        <dc:creator>romo9</dc:creator>

      <pubDate>Thu, 25 Oct 2007 19:06:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5258/section1.bmp</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5258/section1.bmp/1193339163000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 25 Oct 2007 18:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:8/1193337101000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:7" title="Comment 7"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:6" title="Comment 6"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How would you get around the following two problems?  Currently, if a plugin wants to add a capability to a role, say "cap_X", it degrades nicely when the plugin is no longer in use--i.e. having an unused capability doesn't hurt anything. However, under the proposed system one would have to create a new role for each new combination of capabilities.  If I add "cap_X" to all my administrators, then they will no longer each be an "administrator"; they will be something plugin-specific.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You don't add cap_X to your administrators, you add it to the administrator role, and all of your users with that role get that capability because it is contained in the role they're using.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
First, it's not clear to me what you're proposing.  Ryan says above that "If you want to change what a user can do, give the user a new role with a new set of capabilities."  That sounds to me like you can't change a role's existing capabilities; instead, you have to create a new role with its own capabilities.
&lt;/p&gt;
&lt;p&gt;
Second, even if the proposed system does allow one to add capabilities to roles, that seems of trivial use. Let's say my plugin checks for its "edit_video" capability.  If I can add that capability only on a per-role basis, what's the point?  Instead of adding "edit_video" to all "editors," I should just check whether someone is an "editor."  The particular capability has become superfluous.
&lt;/p&gt;
&lt;p&gt;
Instead, a more likely--and useful--situation is that I want to assign the "edit_video" capability in a way that doesn't map neatly to existing roles. So for example Bob who is an "author" can "edit_video," as well as Mary an "editor," but not other editors or authors.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:7" title="Comment 7"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:6" title="Comment 6"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why not just drop roles entirely, and list capabilities on separate usermeta rows?  Then if you want to find out who can edit posts or whatever, it's a simple query.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because then you lose the ability to modify roles and have all people using that role get the modification.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We could get around that by making roles into capabilities; then adding a capability to users who can "administrate" would be as simple as 1. changing the default caps for administrators (for future new users) and 2. adding the capability to all users who currently can administrate.
&lt;/p&gt;
&lt;p&gt;
Besides, we don't really use roles that much, at least in core WP. Grepping through 2.3 I don't see anywhere that we check for users having the role of 'administrator' or 'editor.'  Rather, we check capabilities.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:7" title="Comment 7"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:6" title="Comment 6"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The second problem is getting two different plugins that add capabilities to work together.  One wants to give a user "cap_X," and the other wants to give the same user "cap_Y", so which gets to define the role?  It seems to me that in some fairly common scenarios the number of distinct roles could approach the number of users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If each user has a distinct role, then yeah, you'll have a user:role ratio of 1.  That's not the common case in multi-user installs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right--what I'm saying is that if users can have only one role, then that's the kind of situation you could end up with.  If I want Bob to "edit_video" and have all the other capabilities of an author, but I don't want other authors to have the "edit_video" cap, then I'll have to create a new role with author capabilities + the "edit_video" capability, and assign it to Bob.  Then if another plugin wants to assign, say, the "make_podcast" capability without giving it to everyone within an existing role, that plugin will have to generate a new role. It seems like the following would be some of the consequences to this arrangement:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Plugins clutter up the system with new roles for what would otherwise be slight changes (adding a capability).
&lt;/li&gt;&lt;li&gt;Roles become meaningless.  I can't assume that Bob is an author anymore, as he might have become the new role that combines the capabilities of an author with "edit_video."  So it does no good to test someone's role.
&lt;/li&gt;&lt;li&gt;Plugins' different roles collide.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5087 (WYSIWYG Insert/Edit Image button issues) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 25 Oct 2007 18:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5087#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5087#comment:15/1193336155000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5087#comment:14" title="Comment 14"&gt;bl968&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Bug still exists in 2.3.1 RC 1...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for this update.
&lt;/p&gt;
&lt;p&gt;
Unfortunately I can't reproduce this issue.
&lt;/p&gt;
&lt;p&gt;
Are you able to debug the issue or give more detailed information on how to reproduce?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5258 (Check For Updated Plugins doesn't check) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Thu, 25 Oct 2007 17:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5258#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5258#comment:2/1193334912000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5258 (Check For Updated Plugins doesn't check) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Thu, 25 Oct 2007 17:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5258#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5258#comment:1/1193334897000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you provide an example of plugins (versions) to test this with?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6291]: Fix the require_once in install-helper.php so that it works when ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 25 Oct 2007 17:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6291</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6291/1193333735632283</guid>
      <description>&lt;p&gt;
Fix the require_once in install-helper.php so that it works when included from a plugin. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5090" title="#5090: defect (bug): maybe_create_table call to config.php issue (closed: fixed)"&gt;#5090&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5090 (maybe_create_table call to config.php issue) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 25 Oct 2007 17:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5090#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5090#comment:12/1193333735000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6291" title="Fix the require_once in install-helper.php so that it works when ..."&gt;[6291]&lt;/a&gt;) Fix the require_once in install-helper.php so that it works when included from a plugin. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5090" title="#5090: defect (bug): maybe_create_table call to config.php issue (closed: fixed)"&gt;#5090&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5090 (maybe_create_table call to config.php issue) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 25 Oct 2007 17:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5090#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5090#comment:11/1193333688000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It is probably best to preserve the ability to just include install-helper.php and let it get you wp-config.php
&lt;/p&gt;
&lt;p&gt;
Therefore a &lt;code&gt;dirname(dirname(__FILE__)).'/wp.config.php'&lt;/code&gt; is probably best
&lt;/p&gt;
&lt;p&gt;
Moving to 2.4 as 2.3.1 has gone RC
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 25 Oct 2007 17:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:7/1193332523000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:6" title="Comment 6"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why not just drop roles entirely, and list capabilities on separate usermeta rows?  Then if you want to find out who can edit posts or whatever, it's a simple query.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because then you lose the ability to modify roles and have all people using that role get the modification.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How would you get around the following two problems?  Currently, if a plugin wants to add a capability to a role, say "cap_X", it degrades nicely when the plugin is no longer in use--i.e. having an unused capability doesn't hurt anything. However, under the proposed system one would have to create a new role for each new combination of capabilities.  If I add "cap_X" to all my administrators, then they will no longer each be an "administrator"; they will be something plugin-specific.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You don't add cap_X to your administrators, you add it to the administrator role, and all of your users with that role get that capability because it is contained in the role they're using.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The second problem is getting two different plugins that add capabilities to work together.  One wants to give a user "cap_X," and the other wants to give the same user "cap_Y", so which gets to define the role?  It seems to me that in some fairly common scenarios the number of distinct roles could approach the number of users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If each user has a distinct role, then yeah, you'll have a user:role ratio of 1.  That's not the common case in multi-user installs.
&lt;/p&gt;
&lt;p&gt;
The reason arbitrary capabilities have been a flop is that there is no built-in method for modifying roles.  The plugin has to make assumptions -- assuming that the default roles exist and that they haven't been severly modified such that its assumptions are incorrect.  I'm not sure there's a good solution to that  besides having a simple built-in method of assigning these new capabilities to roles.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5257 (Pages Must Be Saved Before Adding Custom Fields) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 25 Oct 2007 17:04:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5257#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5257#comment:1/1193331886000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3700" title="#3700: defect (bug): Adding a custom field to an unsaved Page before publishing causes weirdness (closed: duplicate)"&gt;#3700&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5256 (Ambiguous column in query.php method get_posts()) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Thu, 25 Oct 2007 16:27:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5256#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5256#comment:2/1193329649000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5258 (Check For Updated Plugins doesn't check) created</title>
      
        <dc:creator>romo9</dc:creator>

      <pubDate>Thu, 25 Oct 2007 15:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5258</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5258/1193324621000000</guid>
      <description>&lt;p&gt;
When clicking on the "Check For Updated Plug-in's" it doesn't check instead says "There are currently no updates for your plugins."  But upon deactivating all plugins i see links to update various plugins (not only is this a hassle i believe any updates for plugins should be automatic or notification given to the "update available" selected plugins
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 25 Oct 2007 14:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:6/1193323795000000</guid>
      <description>&lt;p&gt;
Why not just drop roles entirely, and list capabilities on separate usermeta rows?  Then if you want to find out who can edit posts or whatever, it's a simple query.
&lt;/p&gt;
&lt;p&gt;
Likewise, it's a simple query to see what capabilities a user has on a given site.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:5" title="Comment 5"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To get all users with a given capability, lookup which roles have that capability and fetch users with those roles.  Simpler code and queries, and also simpler conceptually.  What can this user do?  Look at his role definition. He can do only what his role allows.  This is pretty much what we do at wordpress.com to handle the many users there.  Multiple role and capability assignments get unmanageable pretty quickly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How would you get around the following two problems?  Currently, if a plugin wants to add a capability to a role, say "cap_X", it degrades nicely when the plugin is no longer in use--i.e. having an unused capability doesn't hurt anything. However, under the proposed system one would have to create a new role for each new combination of capabilities.  If I add "cap_X" to all my administrators, then they will no longer each be an "administrator"; they will be something plugin-specific.
&lt;/p&gt;
&lt;p&gt;
The first problem occurs if you de-activate the plugin: poof! all the administrators lose *all* of their capabilities, as their plugin-specific role no longer means anything.
&lt;/p&gt;
&lt;p&gt;
The second problem is getting two different plugins that add capabilities to work together.  One wants to give a user "cap_X," and the other wants to give the same user "cap_Y", so which gets to define the role?  It seems to me that in some fairly common scenarios the number of distinct roles could approach the number of users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5257 (Pages Must Be Saved Before Adding Custom Fields) created</title>
      
        <dc:creator>hughbiquitous</dc:creator>

      <pubDate>Thu, 25 Oct 2007 13:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5257</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5257/1193317702000000</guid>
      <description>&lt;p&gt;
If you add a custom field to an unsaved page, publishing the page turns it into a &lt;strong&gt;draft post&lt;/strong&gt; and data is lost.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Environment:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;At 2.3.1-RC1, SVN version 6280 (&lt;a class="ext-link" href="http://svn.automattic.com/wordpress/branches/2.3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://svn.automattic.com/wordpress/branches/2.3&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Repro Steps:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new page.
&lt;/li&gt;&lt;li&gt;Title it "Custom Field Bug".
&lt;/li&gt;&lt;li&gt;Enter some text into the Page Content area.
&lt;/li&gt;&lt;li&gt;Create a custom field (I used key="file", value="foo bar baz"). Click "Add Custom Field".
&lt;/li&gt;&lt;li&gt;Click Publish.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;Expected Result:&lt;/strong&gt; Page should publish.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Observed Result:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;After you click publish, it navigates to "Manage-&amp;gt;Pages" menu but the page is not there.
&lt;/li&gt;&lt;li&gt;Click on "Manage-&amp;gt;Posts" and you will see a new, unpublished &lt;strong&gt;post&lt;/strong&gt; (not &lt;strong&gt;page&lt;/strong&gt;) that
&lt;ul&gt;&lt;li&gt;(A) &lt;strong&gt;does&lt;/strong&gt; have the custom field, and
&lt;/li&gt;&lt;li&gt;(B) does &lt;strong&gt;not&lt;/strong&gt; have the Post Content entered in step 3, and
&lt;/li&gt;&lt;li&gt;(C) does &lt;strong&gt;not&lt;/strong&gt; have the title "Custom Field Bug" from step 2 -- instead, the title is "Draft created on (date &amp;amp; time)".
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt; I could not reproduce this for a post. It only happens for pages.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Workaround:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new page.
&lt;/li&gt;&lt;li&gt;Title it "Custom Field Bug Workaround".
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Click "Save and continue editing".&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;Create a custom field (I used key="file", value="foo bar baz"). Click "Add Custom Field".
&lt;/li&gt;&lt;li&gt;Click Publish.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This gives the expected result.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5087 (WYSIWYG Insert/Edit Image button issues) updated</title>
      
        <dc:creator>bl968</dc:creator>

      <pubDate>Thu, 25 Oct 2007 09:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5087#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5087#comment:14/1193304406000000</guid>
      <description>&lt;p&gt;
Bug still exists in 2.3.1 RC 1...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5090 (maybe_create_table call to config.php issue) updated</title>
      
        <dc:creator>mattyrob</dc:creator>

      <pubDate>Thu, 25 Oct 2007 08:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5090#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5090#comment:10/1193302031000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5090#comment:9" title="Comment 9"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So your plugin file is being called directly rather than in a WordPress page load?
&lt;/p&gt;
&lt;p&gt;
The attached patch can't work if you haven't already got ABSPATH defined and that is &lt;span class="underline"&gt;normally&lt;/span&gt; defined in wp-config.php - ideally we should say that including install-helper.php requires you to have already pulled in wp-config.php and then we could remove the require_once at the top and resolve this issue that way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My plugin (Subscribe2) has changed over time and I've added a colum to the table created. To make sure this doesn't cause problems when users upgrade I have an upgrade function added to the shutdown hook. This upgrade function needs to use maybe_create_table and maybe_add_column. That is how the call is made.
&lt;/p&gt;
&lt;p&gt;
The patch does work - I've tested it! However, if wp-config.php is not really required by install-helper.php then removing it should also fix my issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4376 (Protected posts aren't after (WXM) Import) updated</title>
      
        <dc:creator>Emanon</dc:creator>

      <pubDate>Thu, 25 Oct 2007 07:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4376#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4376#comment:6/1193298110000000</guid>
      <description>&lt;p&gt;
Any hope that this can make it into 2.3.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6290]: Pass literal strings not vars to compact.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 25 Oct 2007 07:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6290</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6290/1193296502796602</guid>
      <description>&lt;p&gt;
Pass literal strings not vars to compact.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>5256.diff attached to Ticket #5256</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Thu, 25 Oct 2007 07:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5256/5256.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5256/5256.diff/1193295817000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5256 (Ambiguous column in query.php method get_posts()) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Thu, 25 Oct 2007 07:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5256#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5256#comment:1/1193295805000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
what about line 849?
Attached a patch based on what you've asked for against trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5256 (Ambiguous column in query.php method get_posts()) created</title>
      
        <dc:creator>lawrence123</dc:creator>

      <pubDate>Thu, 25 Oct 2007 06:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5256</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5256/1193295423000000</guid>
      <description>&lt;p&gt;
Using v2.3, line 871 should be:
&lt;/p&gt;
&lt;p&gt;
$where = " AND $wpdb-&amp;gt;posts.ID = " . $q&lt;a class="missing wiki"&gt;p?&lt;/a&gt;;
&lt;/p&gt;
&lt;p&gt;
and line 876 should be:
&lt;/p&gt;
&lt;p&gt;
$where = " AND $wpdb-&amp;gt;posts.ID = " . $q&lt;a class="missing wiki"&gt;page_id?&lt;/a&gt;;
&lt;/p&gt;
&lt;p&gt;
Background: My plugin uses the posts_where and post_join filters. When you join with another table that also has an ID column the query will fail, because above lines currently show: ' AND ID = '
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [6289]: get rid of old style ajax adder junk. Fixes adding cats from manage -&gt; ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 25 Oct 2007 05:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6289</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6289/1193291418490960</guid>
      <description>&lt;p&gt;
get rid of old style ajax adder junk. Fixes adding cats from manage -&amp;gt; categories. Props mdawaffe
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5232 (Get the current action and current filter name) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Thu, 25 Oct 2007 04:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5232#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5232#comment:10/1193285238000000</guid>
      <description>&lt;p&gt;
Agreed, I had to overcome a similar limitation while developing a patch. One of the problems perhaps is that every millisecond adds up when you need to have calls totaling over 3000 times. I'm unsure what the total is WordPress, but in which case the upper limit before things start running really slow (1-3 seconds) is around 4000 to 6000 times.
&lt;/p&gt;
&lt;p&gt;
The problem is that in most cases when you do Object Oriented code, you'll want to do the time consuming tests once and before the hook is added. That way, you can just focus on calling what you need without doing the checks in the call method.
&lt;/p&gt;
&lt;p&gt;
I've done some prototyping with this (all complete crap). I was thinking about it. That the code would be a really good candidate for a PHP extension. The code is simple enough, that it wouldn't take more than a few days to write, test, and deploy. The only problem is that you'll need something that everyone would have and not many would go through the effort to install a PECL extension.
&lt;/p&gt;
&lt;p&gt;
I'm not so much concern with the objects as I am with having to support PHP4 with such an object. I'll be unwilling to write OO code that has to be compatible with PHP4.
&lt;/p&gt;
&lt;p&gt;
The patch is beautiful by the way. I really do think it should be accepted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-current-filter-revised-r6278.patch attached to Ticket #5232</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Thu, 25 Oct 2007 03:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5232/wp-current-filter-revised-r6278.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5232/wp-current-filter-revised-r6278.patch/1193283815000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5232 (Get the current action and current filter name) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Thu, 25 Oct 2007 03:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5232#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5232#comment:9/1193283800000000</guid>
      <description>&lt;p&gt;
I wrote a few draft patches for this yesterday, and after reviewing those I came to two conclusions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The filter/action code is time critical.  Anything that adds an extra function call, object dereference or similar can have a significant impact on performance.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Properly encapsulating the current_filter data requires a singleton object; a function with a static variable is messy and involves several branches and function calls (which affect performance).  Short of refactoring the filter/action API, I can't see a good way to overcome that.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
wp-current-filter-revised-&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6278" title="Add atom:self link to rss2 feeds per RSS Best Practices Profile. Fixes ..."&gt;r6278&lt;/a&gt;.patch is a compromise.  It uses only one global, and provides a current_filter() API function for fetching the filter or action name.  Only 2 lines of code are needed in each of the time critical functions, with no branching or user function calls.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 25 Oct 2007 03:26:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:5/1193282768000000</guid>
      <description>&lt;p&gt;
The current implementation has several faults.  Fetching all users with a given role or capability is painful. This is due mainly to how things are stored in arrays rather than rows in a table. Also, role definitions are stored per-blog in the options table rather than globally.  This creates pain for those doing multi-blog WP.  Finally, allowing multiple roles and caps per user is extra complexity for little gain.  It's a bunch of largely unused cruft.
&lt;/p&gt;
&lt;p&gt;
Limiting users to one role instead of multiple roles and capabilities cleans up much of this.  A user has one role and that's it.  All capabilities come through it.  If you want to change what a user can do, give the user a new role with a new set of capabilities.  The user's assigned role would no longer be stored in usermeta as an array but as a single value.  This allows easy fetching of all users with a given role without having to parse array values out of a SELECT.  To get all users with a given capability, lookup which roles have that capability and fetch users with those roles.  Simpler code and queries, and also simpler conceptually.  What can this user do?  Look at his role definition. He can do only what his role allows.  This is pretty much what we do at wordpress.com to handle the many users there.  Multiple role and capability assignments get unmanageable pretty quickly.
&lt;/p&gt;
&lt;p&gt;
The next phase would be to rewrite the role storage to use the proposed sitemeta table so that we can fetch role definitions out of a proper table instead of out of an array stored in the options table. We could directly join on this, if desired, or we could continue doing the role cap lookup.  People would still have the option of foregoing storing the role definitions in the DB altogether, which is what many multi-blog WP and WPMU sites do.
&lt;/p&gt;
&lt;p&gt;
We've had this redesign discussion several times since we created capabilities.  I think the time has come to fix this mess.  No one likes it as is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5185 (SQL Error on feeds for invalid posts) updated</title>
      
        <dc:creator>robertaccettura</dc:creator>

      <pubDate>Thu, 25 Oct 2007 02:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5185#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5185#comment:7/1193280236000000</guid>
      <description>&lt;p&gt;
Silly me... when in doubt clear your cache.  Title's are the same, that fixes the security aspect.
&lt;/p&gt;
&lt;p&gt;
As to best behavior, both I think are Ok, though I personally prefer the 404.  Otherwise there are a billion blank feeds available on the site.  404's don't need feeds.
&lt;/p&gt;
&lt;p&gt;
Pardon rushed appearance here... hand injury.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5185 (SQL Error on feeds for invalid posts) updated</title>
      
        <dc:creator>robertaccettura</dc:creator>

      <pubDate>Thu, 25 Oct 2007 02:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5185#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5185#comment:6/1193279982000000</guid>
      <description>&lt;p&gt;
I presume that's for the trunk.  I've only got 2.3 running atm...
&lt;/p&gt;
&lt;pre class="wiki"&gt;-              if ( $this-&amp;gt;is_comment_feed &amp;amp;&amp;amp; $this-&amp;gt;is_singular ) {
+                if ( $this-&amp;gt;is_comment_feed &amp;amp;&amp;amp; $this-&amp;gt;is_singular &amp;amp;&amp;amp; $this-&amp;gt;have_posts() ) {
&lt;/pre&gt;&lt;p&gt;
Not really fixing it.
&lt;/p&gt;
&lt;p&gt;
For example:
/private-post/feed/
&lt;/p&gt;
&lt;p&gt;
Title on feed reads: Comments on: ...
&lt;/p&gt;
&lt;p&gt;
For example
/invalid-post/feed/
Title on feed reads: Blog Name » 2007 » October » 14
&lt;/p&gt;
&lt;p&gt;
I think throwing a 404 is 100% acceptable to be perfectly honest.  AFAIK most feed readers do know/understand the header.  Most are very http complaint (thanks to 301's and If-Modified-Since). Those that don't will either:
&lt;/p&gt;
&lt;p&gt;
a) do nothing (not so bad considering the situation).
b) find the feed invalid (not so bad considering there is no feed).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Thu, 25 Oct 2007 01:59:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:4/1193277565000000</guid>
      <description>&lt;p&gt;
It seems to me that both of the features you want to drop were part of the plan from the beginning:
&lt;/p&gt;
&lt;p&gt;
From &lt;a class="ext-link" href="http://codex.wordpress.org/Roles_and_Capabilities"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Roles_and_Capabilities&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Plugin developers will likely revise the 'standard' Roles and Capabilities because WordPress Developers left open the future possibility of assigning a user to one or more Roles, or assigning Capabilities directly to a User.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From &lt;a class="ext-link" href="http://boren.nu/archives/2005/12/01/whats-new-in-20-roles-and-capabilities/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://boren.nu/archives/2005/12/01/whats-new-in-20-roles-and-capabilities/&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Users can belong to one or more roles and can have individual capabilities assigned to them outside of the context of a role.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Thu, 25 Oct 2007 01:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:3/1193277411000000</guid>
      <description>&lt;p&gt;
It isn't that the feature is broken because of its perceived complexity (why would you want to simplify it otherwise?), it is broken because the API doesn't allow for one quick stop for adding capabilities.
&lt;/p&gt;
&lt;p&gt;
Why would want to take away an excellent feature that would make WordPress worthy of being a CMS? It doesn't make sense. Just add a couple more functions that does the simplification for you. If you want to change the scheme, okay, just allow for what is currently available.
&lt;/p&gt;
&lt;p&gt;
I would seriously have to reevaluate my position of using WordPress in the business environment if such a neat feature is dismissed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4642 (Enhanced wp-mail.php) updated</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Thu, 25 Oct 2007 01:14:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4642#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4642#comment:16/1193274874000000</guid>
      <description>&lt;p&gt;
OK, here you go - 4642.4.diff.  I added the function get_user_by, which returns the ID, to pluggable.php.  (The svn diff command output is funky because of where it resynchronized.  Not sure how to make that look nicer.)  I modified get_userbylogin to call get_user_by, but I removed the caching in the process, because I don't know how to add caching to get_user_by.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>4642.4.diff attached to Ticket #4642</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Thu, 25 Oct 2007 01:07:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4642/4642.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4642/4642.4.diff/1193274434000000</guid>
      <description>&lt;p&gt;
Set post status based on author's capabilities; includes new function get_user_by
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5255 (Simplify role/capability for easier cap =&gt; user lookups) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 25 Oct 2007 00:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5255#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5255#comment:2/1193272256000000</guid>
      <description>&lt;p&gt;
While it &lt;em&gt;may&lt;/em&gt; remove some flexibility, I think it's worth it as it greatly simplifies the whole capabilities system and more in the spirit of the original feature's idea IMO.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5255#comment:1" title="Comment 1"&gt;Bobcat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I understand your description, this will break features that I use on my blog.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You'd still be able to do it, you'd just have to have a role with the permissions you want the user to have and then assign that user to that role. Possibly a role per user depending on how customized your roles are (i.e. if no two permissions are alike).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5252 (base64-encoded post-by-email post garbled.) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 25 Oct 2007 00:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5252#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5252#comment:1/1193271977000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>