<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #18418 (Clarifying what "Private" means in post visibility) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 15 Aug 2011 23:39:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18418#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18418#comment:5/1313451581278852</guid>
      <description>&lt;p&gt;
That makes sense to me too
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17916 (Enqueued styles are only printed on login_footer in wp-login.php) updated</title>
      
        <dc:creator>Cimmo</dc:creator>

      <pubDate>Mon, 15 Aug 2011 22:31:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17916#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17916#comment:11/1313447460483680</guid>
      <description>&lt;p&gt;
Ok my bad but still I don't get it when to use exactly wp_register_style and wp_enqueue_style
I need the css file in the login/registration pages only and I tried this code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function cimy_uef_register_init_css() {
	global $cuef_css_webpath;
	wp_register_style("cimy_uef_register", $cuef_css_webpath."/cimy_uef_register.css", false, false);
	wp_enqueue_style("cimy_uef_register");
}
add_action('wp_print_styles', 'cimy_uef_register_init_css');
&lt;/pre&gt;&lt;p&gt;
but works only for WordPress MS, not for non-MS. Using 'after_setup_theme' hook has same effect.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18396 (Custom post type of "tab" creates query conflict with media uploader.) updated</title>
      
        <dc:creator>theandystratton</dc:creator>

      <pubDate>Mon, 15 Aug 2011 21:56:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18396#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18396#comment:5/1313445406513794</guid>
      <description>&lt;p&gt;
Noted, Alex Mills also pointed this out to me during my session at WCSF.
&lt;/p&gt;
&lt;p&gt;
@johnbillion spoke with Nacin the same day, this is the case... being that I'm relatively new to working with core, can I simply work on and submit a patch or is any approval required?
&lt;/p&gt;
&lt;p&gt;
If it's something that's going to be closed, would rather look at an open bug/ticket for my first patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18418 (Clarifying what "Private" means in post visibility) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 21:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18418#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18418#comment:4/1313443320744374</guid>
      <description>&lt;p&gt;
Maybe just “Private to editors and administrators”, without “blog”?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18418 (Clarifying what "Private" means in post visibility) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 15 Aug 2011 21:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18418#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18418#comment:3/1313442840681760</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18418 (Clarifying what "Private" means in post visibility) updated</title>
      
        <dc:creator>PeteMall</dc:creator>

      <pubDate>Mon, 15 Aug 2011 21:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18418#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18418#comment:2/1313442209309171</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18421 (Admin user info CSS) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 21:03:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18421#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18421#comment:1/1313442181209606</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like &lt;code&gt;8px&lt;/code&gt; would be in line with menu items.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18421.after.png attached to Ticket #18421</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 21:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18421/18421.after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18421/18421.after.png/1313442152031046</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>18421.before.png attached to Ticket #18421</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 21:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18421/18421.before.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18421/18421.before.png/1313442144642077</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>18421.patch attached to Ticket #18421</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 21:02:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18421/18421.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18421/18421.patch/1313442137802212</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15806 (get_terms with hide_empty returns count &gt; 0 with unpublished items) updated</title>
      
        <dc:creator>jgadbois</dc:creator>

      <pubDate>Mon, 15 Aug 2011 20:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15806#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15806#comment:6/1313441871566611</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems like either a join will be needed in get_terms() or wp_update_term_count_now() will need to be modified to only count terms tied to published posts.  This second method will also require counts to be updated when post status changes.
&lt;/p&gt;
&lt;p&gt;
I'd be happy to look at this one...anyone want to chime in as to which approach would be preferred?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18421 (Admin user info CSS) created</title>
      
        <dc:creator>austyfrosty</dc:creator>

      <pubDate>Mon, 15 Aug 2011 20:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18421</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18421/1313439820475922</guid>
      <description>&lt;p&gt;
The width is off by one pixel in the admin user drop down menu.
&lt;/p&gt;
&lt;p&gt;
should be 7px instead of 6px.
&lt;/p&gt;
&lt;p&gt;
#user_info { padding-left: 7px; }
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>18420.patch attached to Ticket #18420</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 19:57:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18420/18420.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18420/18420.patch/1313438225905637</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18420 (RTL CSS cleanup for credits.php) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 19:56:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18420</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18420/1313438213428936</guid>
      <description>&lt;p&gt;
Looking over &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18116" title="RTL fixes for credits.php. Props BenChapman, rasheed. fixes #17602"&gt;[18116]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18149" title="RTL fixes for credits.php. fixes #17602"&gt;[18149]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18162" title="Credits screen redux. Add external libraries, gravatars for language ..."&gt;[18162]&lt;/a&gt;, I've noticed some duplicate rules and one obsolete line.
&lt;/p&gt;
&lt;p&gt;
Attaching a patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18355 (Request to include 'object' in $default_no_texturize_tags of ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 19:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18355#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18355#comment:3/1313437085043359</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8912" title="#8912: defect (bug): wptexturize malforms HTML comments that contain HTML tags (closed: fixed)"&gt;#8912&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16060" title="#16060: defect (bug): Cannot close HTML comments in WordPress page/post (closed: duplicate)"&gt;#16060&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>privatetext.18418.1.patch attached to Ticket #18418</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 15 Aug 2011 19:14:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18418/privatetext.18418.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18418/privatetext.18418.1.patch/1313435643477735</guid>
      <description>&lt;p&gt;
Replace "Private" text with "Private to blog editors and administrators"
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18419 (TinyMCE Anchor doesn't render in Visual Editor) created</title>
      
        <dc:creator>MadtownLems</dc:creator>

      <pubDate>Mon, 15 Aug 2011 19:13:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18419</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18419/1313435622175742</guid>
      <description>&lt;p&gt;
I'm adding the Anchor button to TinyMCE via plugin with the normal method.
&lt;/p&gt;
&lt;p&gt;
Excerpt:
array_push($buttons, "anchor");
return $buttons;
&lt;/p&gt;
&lt;p&gt;
The Anchor button displays fine. Clicking it presents a dialog box fine.  Completing the dialog box inserts the necessary HTML. However, the problem is that a little picture of an anchor is no longer visible in the Visual Editor
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18418 (Clarifying what "Private" means in post visibility) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 15 Aug 2011 19:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18418#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18418#comment:1/1313435161051010</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18418 (Clarifying what "Private" means in post visibility) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 15 Aug 2011 19:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18418</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18418/1313435151155497</guid>
      <description>&lt;p&gt;
When choosing visibility for a single post, “Private” doesn’t make much sense as a label and requires extra explanation as to whom the post will be private to.
&lt;/p&gt;
&lt;p&gt;
Context: At the Newbie Workshop during WCSF 2011, we had to talk brand new users through the myriad of features offered in WordPress. "Private" as a post visibility required extra explanation and even I realized I didn't know what it did.
&lt;/p&gt;
&lt;p&gt;
"Private" should be replaced with text like "Private to blog editors and administrators"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13821 (Changing visibility to password-protected without entering a password ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 15 Aug 2011 18:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13821#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13821#comment:10/1313434653054837</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18417 (Comment whitelist in discussion settings) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 15 Aug 2011 18:48:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18417/1313434126385809</guid>
      <description>&lt;p&gt;
Currently, there are methods for automatically flagging comments for moderation or blacklisting comments, but there's no way to auto-approve comments that meet a certain criteria.
&lt;/p&gt;
&lt;p&gt;
In Discussion Settings, it would be nice to have "Comment Whitelist" option to automatically approve comments from a specific IP address, using a specific email address, or matching certain keywords.
&lt;/p&gt;
&lt;p&gt;
One use case: a conference or workshop where lots of people are posting comments from the same IP address often invokes the "Slow down, you're posting too fast" message. Instead, we should be able to add the IP address to the whitelist (possibly temporarily) so that everyone can comment without hitting the restriction.
&lt;/p&gt;
&lt;p&gt;
The concern I can think of is that this would add another large paragraph box to the Discussion Settings view.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18404 (Reorganize rewrite_rules into a tree of strings and patterns) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 15 Aug 2011 18:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18404#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18404#comment:5/1313433667814391</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
How much faster is it when used on sites with lots of custom post types and/or with plugins like BuddyPress as opposed to just the default use-case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18362 (Post timestamp creation should use whitelisted post statuses instead ...) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 15 Aug 2011 18:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18362#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18362#comment:4/1313432197004546</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10660 (Time zone suggester based on nascent WordPress.org API call) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 15 Aug 2011 17:48:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10660#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10660#comment:7/1313430532179087</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18416 (Version.php - Error 500) updated</title>
      
        <dc:creator>plugpress</dc:creator>

      <pubDate>Mon, 15 Aug 2011 17:48:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18416#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18416#comment:1/1313430513853813</guid>
      <description>&lt;p&gt;
Note: When I say "...and I save", I did not chagne anything.  Just went to the page and saved.
&lt;/p&gt;
&lt;p&gt;
And the error in the log is :
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;[Mon Aug 15 10:12:18 2011] [error] File does not exist: /home/mydomain/public_html/500.shtml, referer: http://mydomain.com/wp-admin/options-general.php&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18416 (Version.php - Error 500) created</title>
      
        <dc:creator>plugpress</dc:creator>

      <pubDate>Mon, 15 Aug 2011 17:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18416</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18416/1313429862837531</guid>
      <description>&lt;p&gt;
I installed a fresh copy of WordPress 3.2.1
&lt;/p&gt;
&lt;p&gt;
When in the Admin section &amp;gt; Settings &amp;gt; General Settings and I save, I get an Error 500.
&lt;/p&gt;
&lt;p&gt;
This server configuration is ok : it has PHP 5.2.10 and MySQL 5.0.
&lt;/p&gt;
&lt;p&gt;
I debugged the code to see where the error was coming from.  As weird as it sounds, the error comes from:
&lt;/p&gt;
&lt;p&gt;
File: &lt;code&gt;wp-includes/update.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Function : &lt;code&gt;_maybe_update_core&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Error line: &lt;code&gt;include (ABSPATH . WPINC . '/version.php'); // include an unmodified $wp_version&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
As a developer, I know what you're thinking: WTF ?!  If I print something and exit before this line : no problem.  If I try to print something after this line, I get the error 500.  I checked the version.php error and it only contains variable.
&lt;/p&gt;
&lt;p&gt;
I did a file_get_contents on the file and I could get the content.
&lt;/p&gt;
&lt;p&gt;
Seriously, I really don't have any clue about what the problem is.
&lt;/p&gt;
&lt;p&gt;
If needed, I can provide private credentials to this account so that tests can be run.
&lt;/p&gt;
&lt;p&gt;
This error makes WordPress unusable.  The server has all requirements asked to run WordPress.
&lt;/p&gt;
&lt;p&gt;
I also have other instances (3-4) of WordPress (before 3.2) that runs without any problems on the same server.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18408 (Can't wp_reset_postdata after custom WP_Query in an admin edit page) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 15 Aug 2011 17:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18408#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18408#comment:1/1313428024019362</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18415 (Misleading error message when registering a username that already exists) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 16:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18415#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18415#comment:1/1313426989460605</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18414 (Fatal error: Cannot redeclare class) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 16:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18414#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18414#comment:1/1313426791932878</guid>
      <description>invalid: &lt;p&gt;
Please use the support forums for help requests: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18415 (Misleading error message when registering a username that already exists) created</title>
      
        <dc:creator>mintindeed</dc:creator>

      <pubDate>Mon, 15 Aug 2011 16:42:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18415</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18415/1313426571838499</guid>
      <description>&lt;p&gt;
I tried to register a new account today and the username already existed.  Instead of getting that message with a red background, it just said "required" next to the field.  I had no idea what the problem was, on a lark I realized there may have been a user already with the name I was trying to register.  Indeed, that was the problem.
&lt;/p&gt;
&lt;p&gt;
When I just tried again to get the exact error message (or lack of it), I would sometimes get "Required" and sometimes get "Username already exists" with a red background, I couldn't figure out the rhyme or reason.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18414 (Fatal error: Cannot redeclare class) created</title>
      
        <dc:creator>aliaamirbrw</dc:creator>

      <pubDate>Mon, 15 Aug 2011 16:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18414</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18414/1313426115347223</guid>
      <description>&lt;p&gt;
I m facing the following error while activate the wp-covert-linkz-plugin
&lt;/p&gt;
&lt;p&gt;
*Plugin could not be activated because it triggered a fatal error.
&lt;/p&gt;
&lt;p&gt;
Fatal error: Cannot redeclare class CF4FA567E254B62C4FA9CEAE36ECD89CE in /home/public_html/demo/wp-content/plugins/wp-covert-linkz-plugin/StealthLinks.php on line 1
&lt;/p&gt;
&lt;p&gt;
php code is following,
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php   class CF4FA567E254B62C4FA9CEAE36ECD89CE{    function CreateMenu()    {     add_options_page('Wordpress Covert Linkz', 'Covert Linkz', 10, 'wpStealthLinksOptions', array($this,'OptionsPage'));}function OptionsPage()    {     ?&amp;gt;&amp;lt;div class="wrap"&amp;gt;&amp;lt;h2&amp;gt;Wordpress Covert Linkz&amp;lt;/h2&amp;gt;&amp;lt;form method="post" action="options-general.php?page=wpStealthLinksOptions"&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;Your Link Title&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Affiliate Link&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;small&amp;gt; &amp;lt;?php echo get_option('home'); ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Kindly help me to resolve the issue.
Thanks!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17590 (wp_list_pages() not setting "current_page_item" classes on custom post ...) updated</title>
      
        <dc:creator>tobiasn</dc:creator>

      <pubDate>Mon, 15 Aug 2011 15:44:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17590#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17590#comment:3/1313423060766920</guid>
      <description>&lt;p&gt;
Nice quickfix, however i would prefer pinpointing custom post types.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17590#comment:1" title="Comment 1"&gt;husobj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As a temporary measure you can hook into to add selected classes like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function my_page_css_class( $css_class, $page ) {
	global $post;
	if ( $post-&amp;gt;ID == $page-&amp;gt;ID ) {
		$css_class[] = 'current_page_item';
	}
	return $css_class;
}
add_filter( 'page_css_class', 'my_page_css_class', 10, 2 );
&lt;/pre&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13961 (search query_vars bug when using search base) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 15:12:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13961#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13961#comment:13/1313421129437294</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13961#comment:9" title="Comment 9"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You're right in that case, patch needs testing for stripslashes/etc but seems good for 3.2
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Tested the patch with keywords like &lt;code&gt;//test%20search&lt;/code&gt; and other examples from here.
&lt;/p&gt;
&lt;p&gt;
Refreshed for 3.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13961.2.patch attached to Ticket #13961</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 15:09:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13961/13961.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13961/13961.2.patch/1313420955931199</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18362 (Post timestamp creation should use whitelisted post statuses instead ...) updated</title>
      
        <dc:creator>sbressler</dc:creator>

      <pubDate>Mon, 15 Aug 2011 15:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18362#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18362#comment:3/1313420941888517</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18413 (Ability to Add Custom "Add User" Link) created</title>
      
        <dc:creator>axelseaa</dc:creator>

      <pubDate>Mon, 15 Aug 2011 14:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18413</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18413/1313419494375750</guid>
      <description>&lt;p&gt;
For the ldap plugin i'd like to be able to utilize the current location of the "Add New" and "Add Existing" button to override it to show a button to link to the custom page for the ldap add user page.
&lt;/p&gt;
&lt;p&gt;
Currently there are no hooks or filters that would allow me to add something in there - would it be possible to add in an action in there after the existing code to print out the add buttons?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18412 ("%20" in an uploaded image file name breaks thumbnails) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 15 Aug 2011 14:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18412#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18412#comment:2/1313418709576893</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16330" title="#16330: defect (bug): media_sideload_image() broken with filenames containing strange ... (closed: fixed)"&gt;#16330&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18412 ("%20" in an uploaded image file name breaks thumbnails) updated</title>
      
        <dc:creator>ripperdoc</dc:creator>

      <pubDate>Mon, 15 Aug 2011 13:55:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18412#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18412#comment:1/1313416517315466</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18412 ("%20" in an uploaded image file name breaks thumbnails) created</title>
      
        <dc:creator>ripperdoc</dc:creator>

      <pubDate>Mon, 15 Aug 2011 13:54:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18412</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18412/1313416488977148</guid>
      <description>&lt;p&gt;
When uploading an image file where the name contains %20, it will not show thumbnails. It is still possible to edit the image in the image editor, however.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17750 (Export formats tags and categories incorrectly) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Mon, 15 Aug 2011 13:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17750#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17750#comment:5/1313413630698998</guid>
      <description>&lt;p&gt;
Update - When I export FROM a MultiSite to a new SingleSite, it all works just fine.  So if anything, something is hinky with importing TO a MultiSite.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18411 (locked out of login) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:53:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18411#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18411#comment:2/1313412828087964</guid>
      <description>&lt;p&gt;
Sorry, I mean't to link to this article: &lt;a class="ext-link" href="http://codex.wordpress.org/Moving_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Moving_WordPress&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It sounds like you've done the first few steps of that, just follow through with the file movement parts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18411 (locked out of login) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18411#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18411#comment:1/1313412753862787</guid>
      <description>invalid: &lt;p&gt;
Trac is for reporting applications bugs, not for individual support.
&lt;/p&gt;
&lt;p&gt;
Please see the codex on how to recover from this sort of thing: &lt;a class="ext-link" href="http://codex.wordpress.org/Changing_The_Site_URL#Changing_the_Site_URL"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Changing_The_Site_URL#Changing_the_Site_URL&lt;/a&gt;
and direct any further help requests to the Support Forums: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18411 (locked out of login) created</title>
      
        <dc:creator>Fine Line</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:45:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18411</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18411/1313412308358435</guid>
      <description>&lt;p&gt;
I tried to change the URL of my site from www.mybeautifulchandelier.org/wordpress to www.mybeautifulchandelier.org because that is the correct name.
&lt;/p&gt;
&lt;p&gt;
I did this in the dashboard general settings then I was automatically logged out and unable to log back in.  I received this message when I tried:
Error Summary
HTTP Error 404.0 - Not Found
The resource you are looking for has been removed, had its name changed, or is temporarily unavailable.
Detailed Error Information
Module        IIS Web Core
Notification        MapRequestHandler
Handler        PHP5-ISAPI-php
Error Code        0x80070002
Requested URL        &lt;a class="ext-link" href="http://mybeautifulchandelier.org:80/wp-login.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://mybeautifulchandelier.org:80/wp-login.php&lt;/a&gt;
Physical Path        D:\inetpub\vhosts\mybeautifulchandelier.org\httpdocs\wp-login.php
Logon Method        Anonymous
Logon User        Anonymous
&lt;/p&gt;
&lt;p&gt;
I then followed the steps to change the URL in the php files (both those to change the URL and those for if I'd changed my URL before other setting, using filezilla, but it has made no difference.
&lt;/p&gt;
&lt;p&gt;
I installed the debugging file, but that has made no difference either.
&lt;/p&gt;
&lt;p&gt;
Parts of the site appear when I enter the URL, but most of it is missing and the links don't work.
&lt;/p&gt;
&lt;p&gt;
I would like to change my domain name to www.mybeautifulchandelier.org (that is the domain I bought through 5quidhost and I don't know why wordpress has added its name to the URL) and to correct the errors that caused me to be locked out of my dashboard.
&lt;/p&gt;
&lt;p&gt;
Thanks for taking the time,
&lt;/p&gt;
&lt;p&gt;
Kate
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18410 (WP_Query should unserialize serialized data before matching) updated</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18410#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18410#comment:4/1313411098492658</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18410#comment:3" title="Comment 3"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
ou mention storing them under one key - that would still make it an array (albeit one with only one entry) and would still cause it to become serialized, right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Almost, Metakeys are not unique. For example, You can store multiple meta items, eg:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Post ID MetaName  MetaValue
  1       test     value1
  1       test     value2
  1       test     value3
&lt;/pre&gt;&lt;p&gt;
calling get_post_meta(1, 'test') would then return  array(value1, value2, value3).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Calling get_post_meta() for my above example works - it is the querying with meta_query that doesn't work. Would it work for your example? I assume it would, since the MetaValues would be stored as strings and not arrays, right?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was rather thinking of checking if the input is an array, if the DB entry is serialized and only if both are, unserializing the DB entry for matching.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Take a step back, The querying/matching is done within the Database, ie. within the SQL. SQL doesnt understand PHP's serialized format, therefor, all SQL see's is a long string..
In order to do what you're suggesting, It would require loading ALL meta keys into memory, unserializing them (well, some of them), and then implementing a Database-style comparison function in-WordPresss.. It's reinventing the wheel.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe I'm not understanding it correctly, but I really do not see how calling is_serialized() and if so, maybe_unserialize() on one value in the database is ineffective. I'm not saying the SQL should do this check, but rather PHP. When inputting an array as value in the meta_query array, WP_Query could simply check if the value in the database is serialized and if so, unserialize it to enable matching.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It may be that you're using the wrong storage mechanism, You might for example, be better off storing it in a Taxonomy to allow easier querying..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I will definitely look into that, having run into this wall of opposition :P .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18410 (WP_Query should unserialize serialized data before matching) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18410#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18410#comment:3/1313410670452055</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
ou mention storing them under one key - that would still make it an array (albeit one with only one entry) and would still cause it to become serialized, right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Almost, Metakeys are not unique. For example, You can store multiple meta items, eg:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Post ID MetaName  MetaValue
  1       test     value1
  1       test     value2
  1       test     value3
&lt;/pre&gt;&lt;p&gt;
calling get_post_meta(1, 'test') would then return  array(value1, value2, value3).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was rather thinking of checking if the input is an array, if the DB entry is serialized and only if both are, unserializing the DB entry for matching.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Take a step back, The querying/matching is done within the Database, ie. within the SQL. SQL doesnt understand PHP's serialized format, therefor, all SQL see's is a long string..
In order to do what you're suggesting, It would require loading ALL meta keys into memory, unserializing them (well, some of them), and then implementing a Database-style comparison function in-WordPresss.. It's reinventing the wheel.
&lt;/p&gt;
&lt;p&gt;
It may be that you're using the wrong storage mechanism, You might for example, be better off storing it in a Taxonomy to allow easier querying..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16829 (Automatically set 'compare' =&gt; 'IN', when meta value is an array) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:15:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16829#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16829#comment:12/1313410541905810</guid>
      <description>&lt;p&gt;
No, I don't think we should mention in on the Codex, since storing arrays in custom fields and then trying to match against them is a bad idea anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18410 (WP_Query should unserialize serialized data before matching) updated</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18410#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18410#comment:2/1313410389113628</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18410#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
First of all: arrays are not the prefered way of storing data in custom fields; you can have multiple custom field values with the same key, for the same post. All the more reason if you plan on querying against custom field values.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Say I have a list of checkboxes - would I store their values all under one key? Comma separated? That sounds like much more of a hassle than simply storing them in an array. You mention storing them under one key - that would still make it an array (albeit one with only one entry) and would still cause it to become serialized, right?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Secondly getting all the custom fields, unserializing them and then looking for a match would be a really inefficient way to go about it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was rather thinking of checking if the input is an array, if the DB entry is serialized and only if both are, unserializing the DB entry for matching.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead, you can call maybe_serialize() on the value you are trying to match against.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If by "the value you are trying to match against" you mean the input array, I did call maybe_serialize() on that, but to no avail. The DB entry is being treated as a string and will only match if there is an exact match with the input array. I'd rather like to have the flexibility of choosing either an exact or partial match.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18410 (WP_Query should unserialize serialized data before matching) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18410#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18410#comment:1/1313409987712306</guid>
      <description>wontfix: &lt;p&gt;
First of all: arrays are not the prefered way of storing data in custom fields; you can have multiple custom field values with the same key, for the same post. All the more reason if you plan on querying against those values.
&lt;/p&gt;
&lt;p&gt;
Secondly, getting all the custom fields, unserializing them, and then looking for a match would be a really inefficient way to do it.
&lt;/p&gt;
&lt;p&gt;
Instead, you can call maybe_serialize() on the value you are trying to match against before passing it to WP_Query.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18402 (Confused page ordering if filter drops parent pages) updated</title>
      
        <dc:creator>erdnah</dc:creator>

      <pubDate>Mon, 15 Aug 2011 12:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18402#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18402#comment:4/1313409866209057</guid>
      <description>&lt;p&gt;
Correction of my Example section:
&lt;/p&gt;
&lt;p&gt;
It should become:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Page A1: Parent Page is A
- Page A1.1
- Page A1.2
&lt;/pre&gt;&lt;p&gt;
(one dash only of course, not two)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18410 (WP_Query should unserialize serialized data before matching) created</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Mon, 15 Aug 2011 11:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18410</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18410/1313409261047293</guid>
      <description>&lt;p&gt;
When storing an array (from a custom field, for example) in the database, it gets serialized. After having been serialized, there is to my knowledge no way to perform a meta_query with another (either serialized or unserialized) array and match the two. This can become a major hassle, as arrays are the preferred form of storing data for a host of different types of custom fields.
&lt;/p&gt;
&lt;p&gt;
WP_Query should, preferably, check for serialized data and unserialize it before attempting to match against an array, should it not?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18404 (Reorganize rewrite_rules into a tree of strings and patterns) updated</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Mon, 15 Aug 2011 07:44:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18404#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18404#comment:4/1313394272704623</guid>
      <description>&lt;p&gt;
I should clarify that this made wp::parse_request() 30% faster on average with an original rewrite_rules array of about 100 rules. The smaller improvement of 1-2% quoted above applies to the overall page load time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18408.patch attached to Ticket #18408</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 15 Aug 2011 07:15:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18408/18408.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18408/18408.patch/1313392503279571</guid>
      <description>&lt;p&gt;
.patch file version
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10964 (Improving query_posts performance) updated</title>
      
        <dc:creator>JediSthlm</dc:creator>

      <pubDate>Mon, 15 Aug 2011 07:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10964#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10964#comment:95/1313392160186376</guid>
      <description>&lt;p&gt;
I'm on Wordpress 3.2.1 with over 14k posts and having major problem as described above that the mysqld server goes up to 100% CPU and sometimes crashes. There was no problem on 2.9.2 which I upgraded from a few weeks back.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Could someone point me to a correct query.php without me having to understand how to make diff etc to the original file?
&lt;/li&gt;&lt;li&gt;What is the status of this ticket, will it be fixed for the next version?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Cheers,
Jens
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18206 (Upgrade the file uploader) updated</title>
      
        <dc:creator>mau</dc:creator>

      <pubDate>Mon, 15 Aug 2011 07:08:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18206#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18206#comment:35/1313392085582223</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [18549]: Use ini_set instead of set_magic_quotes_runtime() to prevent silenced ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 15 Aug 2011 06:42:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/18549</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/18549/1313390563463469</guid>
      <description>&lt;p&gt;
Use ini_set instead of set_magic_quotes_runtime() to prevent silenced E_DEPRECATED notice. props wonderboymusic.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #18409 (Improve compatibility with phpxref) updated</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Mon, 15 Aug 2011 04:53:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18409#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18409#comment:5/1313383995680924</guid>
      <description>&lt;p&gt;
I was gonna say... :)
&lt;/p&gt;
&lt;p&gt;
Also, this might be a new submit-to-commit record for me!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18409 (Improve compatibility with phpxref) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 15 Aug 2011 04:51:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18409#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18409#comment:4/1313383902455663</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18548" title="Break HTML comment up into two lines to prevent phpxref from choking ..."&gt;[18548]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Break HTML comment up into two lines to prevent phpxref from choking on the rest of functions.php. props trepmal, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18409" title="#18409: defect (bug): Improve compatibility with phpxref (closed: fixed)"&gt;#18409&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [18548]: Break HTML comment up into two lines to prevent phpxref from choking ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 15 Aug 2011 04:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/18548</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/18548/1313383901596558</guid>
      <description>&lt;p&gt;
Break HTML comment up into two lines to prevent phpxref from choking on the rest of functions.php. props trepmal, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18409" title="#18409: defect (bug): Improve compatibility with phpxref (closed: fixed)"&gt;#18409&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #18409 (Improve compatibility with phpxref) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 15 Aug 2011 04:51:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18409#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18409#comment:3/1313383874541295</guid>
      <description>&lt;p&gt;
Nevermind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18409 (Improve compatibility with phpxref) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 15 Aug 2011 04:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18409#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18409#comment:2/1313383762058760</guid>
      <description>&lt;p&gt;
Oddly, it looks fine here: xref.yoast.com/trunk/wp-includes/functions.php.source.html
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18409 (Improve compatibility with phpxref) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 15 Aug 2011 04:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18409#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18409#comment:1/1313383558874733</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This has bothered me for literally two years, but I've never noticed why it happened. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.diff attached to Ticket #18409</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Mon, 15 Aug 2011 04:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18409/functions.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18409/functions.diff/1313383276978853</guid>
      <description>&lt;p&gt;
split comment into 2 lines
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18409 (Improve compatibility with phpxref) created</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Mon, 15 Aug 2011 04:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18409</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18409/1313383236534033</guid>
      <description>&lt;p&gt;
Because of the number sign inside the html comment tag, and on the same line as the closing tag, about 56 functions in wp-includes/functions.php are not parsed by the phpxref software.
&lt;/p&gt;
&lt;p&gt;
By simply moving the closing tag to the next line, the problem is fixed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>post.php attached to Ticket #18408</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 15 Aug 2011 02:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18408/post.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18408/post.php/1313376091240493</guid>
      <description>&lt;p&gt;
wp-admin/includes/post.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18407 (WPDB Prepare(), update(), insert() refer to %d as a decimal) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 15 Aug 2011 02:40:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18407#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18407#comment:2/1313376022685113</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
In return, we should probably add %f. I think there's another ticket for that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds good to me, But I don't recall seeing, and can't find, another ticket referencing that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18408 (Can't wp_reset_postdata after custom WP_Query in an admin edit page) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 15 Aug 2011 02:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18408</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18408/1313375887918084</guid>
      <description>&lt;p&gt;
While on an edit post page (or any post type), if you create a custom WP_Query object before the editor has been output, the post data from the custom WP_Query will fill out the edit post form, not the original content of the post that is actually trying to be edited.
&lt;/p&gt;
&lt;p&gt;
I found this out when trying to create a custom metabox in the 'side' context. You can reproduce this by inserting this code into a plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
add_action( 'add_meta_boxes', 'myplugin_add_custom_box' );
function myplugin_add_custom_box() {
	add_meta_box(
        'myplugin_sectionid',
        __( 'My Post Section Title', 'myplugin_textdomain' ),
        'myplugin_inner_custom_box',
        'post',
        'side'
    );
}
function myplugin_inner_custom_box() {
	global $post;
	$a = new WP_Query('post_type=page');
	while($a-&amp;gt;have_posts() ) : $a-&amp;gt;the_post();
	endwhile;
	wp_reset_postdata();
}
&lt;/pre&gt;&lt;p&gt;
This happens because $wp_query-&amp;gt;post is never defined in the admin load, which wp_reset_postdata relies on to reset the original post data.
&lt;/p&gt;
&lt;p&gt;
I am attaching a patch that defines $wp_query-&amp;gt;post after the $post global has been defined.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18407 (WPDB Prepare(), update(), insert() refer to %d as a decimal) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 15 Aug 2011 02:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18407#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18407#comment:1/1313374823469154</guid>
      <description>&lt;p&gt;
In return, we should probably add %f. I think there's another ticket for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18407 (WPDB Prepare(), update(), insert() refer to %d as a decimal) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 15 Aug 2011 02:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18407</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18407/1313373686723324</guid>
      <description>&lt;p&gt;
%d is refered to as a decimal in the inline docs for functions which use prepare().
&lt;/p&gt;
&lt;p&gt;
%d is also refered to as a decimal in the PHP docs as well, however, %d represents the input as a Integer, not a Decimal, resulting in the loss of the fraction part of the number.
&lt;/p&gt;
&lt;p&gt;
Mentioned by &lt;a class="ext-link" href="http://lists.automattic.com/pipermail/wp-hackers/2011-August/040436.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;24/7 on wp-hackers&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8833 (extract pluggable.php function logic into separate functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8833#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8833#comment:22/1313373392561239</guid>
      <description>&lt;p&gt;
Marked &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18405" title="#18405: enhancement: Check if pluggable function was already defined by other plugin (closed: duplicate)"&gt;#18405&lt;/a&gt; as duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18405 (Check if pluggable function was already defined by other plugin) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18405#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18405#comment:3/1313373331553911</guid>
      <description>duplicate</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18405 (Check if pluggable function was already defined by other plugin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:55:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18405#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18405#comment:2/1313373321359732</guid>
      <description>&lt;p&gt;
Pluggable functions suck, for this and other reasons.
&lt;/p&gt;
&lt;p&gt;
Closing as duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8833" title="#8833: enhancement: extract pluggable.php function logic into separate functions (closed: maybelater)"&gt;#8833&lt;/a&gt; since I don't see another way to handle this - with or without a _doing_it_wrong() call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18405 (Check if pluggable function was already defined by other plugin) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18405#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18405#comment:1/1313372550565661</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
See also: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8833" title="#8833: enhancement: extract pluggable.php function logic into separate functions (closed: maybelater)"&gt;#8833&lt;/a&gt; - Pluggable functions shouldn't really be needed, instead, all pluggable functions should be a filter set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18406 (Check if pluggable function was already defined by other plugin) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:39:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18406#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18406#comment:1/1313372399973555</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18405" title="#18405: enhancement: Check if pluggable function was already defined by other plugin (closed: duplicate)"&gt;#18405&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18406 (Check if pluggable function was already defined by other plugin) created</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18406</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18406/1313371695652108</guid>
      <description>&lt;p&gt;
Currently there's no way to check if a pluggable function is already defined by some other plugin in a normal single site WP installation.
&lt;/p&gt;
&lt;p&gt;
With the current design "pluggables" are only &lt;em&gt;really pluggable&lt;/em&gt; for your own installations. Hosting a plugin the redefines a pluggable function in the official repository will only lead to lots of problems and unsatisfied/angry users that run into non-debugable errors.
&lt;/p&gt;
&lt;p&gt;
The problem is that there's no standartized way to check if the function was already defined. Imho there &lt;em&gt;should&lt;/em&gt; be a hook to allow for save checking if the function was defined and then throw something like a &lt;em&gt;_doing_it_wrong();&lt;/em&gt;-message, visible only for developers.
&lt;/p&gt;
&lt;p&gt;
Sample plugin (for a multisite installation) to test and discuss this.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
Plugin Name:	___Pluggable Test
Plugin URI:		___
Description:	___
Author:			___
Author URI: 	___
Version:		0.1
License:		___
*/
function wp_rand( $min = 0, $max = 0 )
{
	return 'I am just a test';
}
function trac_test_the_hook()
{
	$title = 'pluggable test output';
	$msg  = 'The current filter is "'.current_filter().'" and works.';
	if ( function_exists( 'wp_rand' ) )
		$msg .= '&amp;lt;br /&amp;gt;The function &amp;lt;em&amp;gt;"wp_rand()"&amp;lt;/em&amp;gt; was already defined elsewhere.';
	wp_die( $msg, $title );
}
// Change the 'muplugins_loaded' to test other hooks
add_action( 'muplugins_loaded', 'trac_test_the_hook', 999 );
&lt;/pre&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; [wp-hackers thread|&lt;a class="ext-link" href="https://groups.google.com/forum/?hl=de#!topic/wp-hackers/-EJbmkdMLjg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://groups.google.com/forum/?hl=de#!topic/wp-hackers/-EJbmkdMLjg&lt;/a&gt;]
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18405 (Check if pluggable function was already defined by other plugin) created</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18405</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18405/1313371652458790</guid>
      <description>&lt;p&gt;
Currently there's no way to check if a pluggable function is already defined by some other plugin in a normal single site WP installation.
&lt;/p&gt;
&lt;p&gt;
With the current design "pluggables" are only &lt;em&gt;really pluggable&lt;/em&gt; for your own installations. Hosting a plugin the redefines a pluggable function in the official repository will only lead to lots of problems and unsatisfied/angry users that run into non-debugable errors.
&lt;/p&gt;
&lt;p&gt;
The problem is that there's no standartized way to check if the function was already defined. Imho there &lt;em&gt;should&lt;/em&gt; be a hook to allow for save checking if the function was defined and then throw something like a
&lt;/p&gt;
&lt;pre class="wiki"&gt;_doing_it_wrong();
&lt;/pre&gt;&lt;p&gt;
-message, visible only for developers.
&lt;/p&gt;
&lt;p&gt;
Sample plugin (for a multisite installation) to test and discuss this.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
Plugin Name:	___Pluggable Test
Plugin URI:		___
Description:	___
Author:			___
Author URI: 	___
Version:		0.1
License:		___
*/
function wp_rand( $min = 0, $max = 0 )
{
	return 'I am just a test';
}
function trac_test_the_hook()
{
	$title = 'pluggable test output';
	$msg  = 'The current filter is "'.current_filter().'" and works.';
	if ( function_exists( 'wp_rand' ) )
		$msg .= '&amp;lt;br /&amp;gt;The function &amp;lt;em&amp;gt;"wp_rand()"&amp;lt;/em&amp;gt; was already defined elsewhere.';
	wp_die( $msg, $title );
}
// Change the 'muplugins_loaded' to test other hooks
add_action( 'muplugins_loaded', 'trac_test_the_hook', 999 );
&lt;/pre&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; {wp-hackers thread|&lt;a class="ext-link" href="https://groups.google.com/forum/?hl=de#!topic/wp-hackers/-EJbmkdMLjg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://groups.google.com/forum/?hl=de#!topic/wp-hackers/-EJbmkdMLjg&lt;/a&gt;]
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18404 (Reorganize rewrite_rules into a tree of strings and patterns) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:13:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18404#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18404#comment:3/1313370788910992</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's surprising how fast anchored regular expressions are sometimes..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18404 (Reorganize rewrite_rules into a tree of strings and patterns) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 15 Aug 2011 01:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18404#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18404#comment:2/1313370457895500</guid>
      <description>&lt;p&gt;
Interesting approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17048 (URLs delivered to the browser should be root-relative) updated</title>
      
        <dc:creator>edwardw</dc:creator>

      <pubDate>Mon, 15 Aug 2011 00:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17048#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17048#comment:21/1313367490852116</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17048#comment:20" title="Comment 20"&gt;dmole&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Images, links, and css seem to all be working, but redirects are not:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://192.168.1.110/wordpress/wp-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://192.168.1.110/wordpress/wp-admin/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
redirects to
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://my.domain.tld/wordpress/wp-login.php?redirect_to=http%3A%2F%2F192.168.1.110%2Fwordpress%2Fwp-admin%2F&amp;amp;reauth=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://my.domain.tld/wordpress/wp-login.php?redirect_to=http%3A%2F%2F192.168.1.110%2Fwordpress%2Fwp-admin%2F&amp;amp;reauth=1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
so that patch still needs redirects tweaked before it's usable.
Good work so far.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;$ wget http://192.168.2.101:81/wordpress/wp-admin/
--2011-08-14 20:15:36--  http://192.168.2.101:81/wordpress/wp-admin/
Connecting to 192.168.2.101:81... connected.
HTTP request sent, awaiting response... 302 Found
Location: /wordpress/wp-login.php?redirect_to=http%3A%2F%2F192.168.2.101%3A81%2Fwordpress%2Fwp-admin%2F&amp;amp;reauth=1 [following]
--2011-08-14 20:15:37--  http://192.168.2.101:81/wordpress/wp-login.php?redirect_to=http%3A%2F%2F192.168.2.101%3A81%2Fwordpress%2Fwp-admin%2F&amp;amp;reauth=1
Connecting to 192.168.2.101:81... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1980 (1.9K) [text/html]
Saving to: `index.html'
100%[======================================&amp;gt;] 1,980       --.-K/s   in 0s
2011-08-14 20:15:37 (111 MB/s) - `index.html' saved [1980/1980]
&lt;/pre&gt;&lt;p&gt;
At least this part looks OK to me - you might want to check your siteurl and home settings in your &lt;em&gt;wp_options&lt;/em&gt; table. The "external" URL used for feeds and such (in the database) is localhost:81.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17048 (URLs delivered to the browser should be root-relative) updated</title>
      
        <dc:creator>dmole</dc:creator>

      <pubDate>Sun, 14 Aug 2011 23:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17048#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17048#comment:20/1313366204364648</guid>
      <description>&lt;p&gt;
Images, links, and css seem to all be working, but redirects are not:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://192.168.1.110/wordpress/wp-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://192.168.1.110/wordpress/wp-admin/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
redirects to
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://my.domain.tld/wordpress/wp-login.php?redirect_to=http%3A%2F%2F192.168.1.110%2Fwordpress%2Fwp-admin%2F&amp;amp;reauth=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://my.domain.tld/wordpress/wp-login.php?redirect_to=http%3A%2F%2F192.168.1.110%2Fwordpress%2Fwp-admin%2F&amp;amp;reauth=1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
so that patch still needs redirects tweaked before it's usable.
Good work so far.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18403 (Cache ajax nonce in internal linking) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 14 Aug 2011 23:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18403#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18403#comment:2/1313364765015686</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18404 (Reorganize rewrite_rules into a tree of strings and patterns) closed</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Sun, 14 Aug 2011 23:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18404#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18404#comment:1/1313364020508274</guid>
      <description>maybelater</description>
      <category>closedticket</category>
    </item><item>
      <title>18404.diff attached to Ticket #18404</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Sun, 14 Aug 2011 23:20:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18404/18404.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18404/18404.diff/1313364007651189</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18404 (Reorganize rewrite_rules into a tree of strings and patterns) created</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Sun, 14 Aug 2011 23:19:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18404</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18404/1313363977584916</guid>
      <description>&lt;p&gt;
At WordCamp San Francisco 2011 (WCSF2011) we discussed optimizing wp::parse_request by converting the flat array of rewrite_rules into a tree by inspecting common prefixes. The proof-of-concept code performed on average about 1ms faster per parse_request. Core team decided to shelve the idea as the added complexity is hard to justify with a 1-2% speed improvement.
&lt;/p&gt;
&lt;p&gt;
The attached patch is a snapshot of the code as it stood on my wordpress.com sandbox during speed testing. The script treetest.php was run from wpsh.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [18547]: Add postname to Settings &gt; Permalinks and remove the help text talking ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 14 Aug 2011 22:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/18547</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/18547/1313360602555092</guid>
      <description>&lt;p&gt;
Add postname to Settings &amp;gt; Permalinks and remove the help text talking about permalink performance. Make the slugs (and /archives/ rewrite base) translatable. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18541" title="#18541: enhancement: Add comments_open() conditional to Twenty Eleven's comment-reply.js call (closed: wontfix)"&gt;#18541&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #18179 (WP_Meta_Box) updated</title>
      
        <dc:creator>lumpysimon</dc:creator>

      <pubDate>Sun, 14 Aug 2011 22:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18179#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18179#comment:29/1313360266591366</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17048 (URLs delivered to the browser should be root-relative) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Sun, 14 Aug 2011 21:28:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17048#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17048#comment:19/1313357305020167</guid>
      <description>&lt;p&gt;
Defaulting to root_relative on things like get_permalink() sounds like it'll break any existing code that expects absolute URLs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17048 (URLs delivered to the browser should be root-relative) updated</title>
      
        <dc:creator>dmole</dc:creator>

      <pubDate>Sun, 14 Aug 2011 20:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17048#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17048#comment:18/1313355269175979</guid>
      <description>&lt;p&gt;
Thanks edwardw, at first glance that looks like it's on the right track.
Is there a reason not to merge the three functions (get_home_url get_site_url network_site_url) into one?
Also I hope the other 101 url functions call one of the three you changed
grep -R "function .*_url" * | grep -v "js:"
I'll test out your patch a bit more later
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17048 (URLs delivered to the browser should be root-relative) reopened</title>
      
        <dc:creator>edwardw</dc:creator>

      <pubDate>Sun, 14 Aug 2011 20:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17048#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17048#comment:17/1313353180535492</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17048#comment:16" title="Comment 16"&gt;dmole&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17048#comment:15" title="Comment 15"&gt;edwardw&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So what you are saying is that with ob_start you would break links to other posts in the post content and things like that as opposed to the dynamically generated part. What we do need is absolute URLs for RSS feeds, e-mail notifications and external non-browser URLs. For URLs served to the browser, then what we need is to serve URLs relative to the root specified in the database, with external URLs (email, RSS) served the "external" domain.
&lt;/p&gt;
&lt;p&gt;
Also, I see what you mean when you say that it might break e-mails if URLs are generated internally, since the domain that the insider sees is different from the outsider.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
yes that's the idea
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then why do you oppose me trying to find a solution to this problem? I think it would make WordPress more robust as a result, but I keep running into un-cooperative responses.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be great if you could make a solution, I was just pointing out that your previous comment was on the wrong track; $_SERVER['HTTP_HOST' ] won't help at all (it won't hurt either), what would help is if we could make or find a central place where URLS are prefixed with "siteurl"+"home" and make it only use "home" if the URL is sent to a browser.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please see the sample proof-of-concept patch attached above - it is not perfect and only a first draft, but it implements the ideas from this topic and if it is on the right track then the patch can be refined and polished.
&lt;/p&gt;
&lt;p&gt;
Again, just trying to help find a solution for what seems to me a good idea.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>patch17048_draft.diff attached to Ticket #17048</title>
      
        <dc:creator>edwardw</dc:creator>

      <pubDate>Sun, 14 Aug 2011 20:16:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17048/patch17048_draft.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17048/patch17048_draft.diff/1313352970261196</guid>
      <description>&lt;p&gt;
Proof-of-concept draft patch for root-relative URLs (not final)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>18403.diff attached to Ticket #18403</title>
      
        <dc:creator>mitchoyoshitaka</dc:creator>

      <pubDate>Sun, 14 Aug 2011 19:49:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18403/18403.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18403/18403.diff/1313351367198383</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18403 (Cache ajax nonce in internal linking) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 14 Aug 2011 19:25:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18403#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18403#comment:1/1313349945514832</guid>
      <description>&lt;p&gt;
&lt;code&gt;inputs.nonce&lt;/code&gt; might be cleaner.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18403 (Cache ajax nonce in internal linking) created</title>
      
        <dc:creator>mitchoyoshitaka</dc:creator>

      <pubDate>Sun, 14 Aug 2011 19:10:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18403</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18403/1313349014983905</guid>
      <description>&lt;p&gt;
Every time we make an internal linking query, we lookup $('#_ajax_linking_nonce').val(). It's super fast, but why not just check it once?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18402 (Confused page ordering if filter drops parent pages) updated</title>
      
        <dc:creator>erdnah</dc:creator>

      <pubDate>Sun, 14 Aug 2011 18:10:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18402#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18402#comment:3/1313345442195383</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18402 (Confused page ordering if filter drops parent pages) updated</title>
      
        <dc:creator>erdnah</dc:creator>

      <pubDate>Sun, 14 Aug 2011 18:10:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18402#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18402#comment:2/1313345406040002</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18402 (Confused page ordering if filter drops parent pages) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 14 Aug 2011 17:09:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18402#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18402#comment:1/1313341776766855</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11520 (print_scripts_l10n() should use json_encode()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:50:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11520#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11520#comment:54/1313337059321299</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11520#comment:52" title="Comment 52"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Daryl mentioned that wp_localize_script() escapes data differently than json_encode().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not exactly, wp_localize_script() didn't escape anything. We have esc_js() hard coded on some strings (not sure why not all) in script_loader. Seems we have to remove it there as json_encode() does that now.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure I like &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18496" title="Optimize script-loader a bit, see #11520"&gt;[18496]&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This only affects making the initial queue in script_loader, i.e. it's internal use only.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Removing l10n.js is probably guaranteed to trigger fatal errors in a plugin that is trying to use it (such as on the frontend). Mind you, they might be calling convertEntities().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By default it's (supposed to be) used in a try/catch statement, so removing the function shouldn't affect anything. Perhaps there are couple of plugins that try to call it directly, we can put a dummy function &lt;code&gt;function convertEntities(s){return s;}&lt;/code&gt; in the head to keep them from breaking.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13932 (Child page permalinks exclude parent(s) until published) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13932#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13932#comment:5/1313336245944867</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13932 (Child page permalinks exclude parent(s) until published) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:36:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13932#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13932#comment:4/1313336219440827</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16829 (Automatically set 'compare' =&gt; 'IN', when meta value is an array) updated</title>
      
        <dc:creator>ldebrouwer</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16829#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16829#comment:11/1313336100218441</guid>
      <description>&lt;p&gt;
Maybe that's something for the codex page on get_posts().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18402 (Confused page ordering if filter drops parent pages) created</title>
      
        <dc:creator>erdnah</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18402</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18402/1313336047375458</guid>
      <description>&lt;h1 id="Problem"&gt;Problem&lt;/h1&gt;
&lt;p&gt;
In WordPress's page management section, the page ordering is confused if a page filter drops a page parent.
&lt;/p&gt;
&lt;p&gt;
Originally, I experienced this with the User Access Manager Plugin:
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/user-access-manager/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/user-access-manager/&lt;/a&gt;
This plugin only shows allowed pages to the user.
&lt;/p&gt;
&lt;h1 id="Example"&gt;Example&lt;/h1&gt;
&lt;pre class="wiki"&gt;Page A
- Page A1
-- Page A1.1
-- Page A1.2
&lt;/pre&gt;&lt;p&gt;
By dropping page A, the ordering becomes for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;-- Page A1.1: Parent Page is Page A1
-- Page A1.2: Parent Page is Page A1
- Page A1: Parent Page is A
&lt;/pre&gt;&lt;p&gt;
But should become:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Page A1: Parent Page is A
-- Page A1.1
-- Page A1.2
&lt;/pre&gt;&lt;h1 id="Solution"&gt;Solution&lt;/h1&gt;
&lt;p&gt;
The confusion results from the function &lt;code&gt;_display_rows_hierarchical&lt;/code&gt;
in &lt;code&gt;wp-admin/includes/class-wp-posts-list-table.php&lt;/code&gt; which only adds pages to $top_level_pages whose parent is 0 – the wrong assumption here.
&lt;/p&gt;
&lt;p&gt;
By adding pages to $top_level_pages whose parent is either 0 or doesn't exist in $pages we get a usable order:
So I added to the above-mentioned file:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function is_parent_in_pages( $parent, $pages ) {
    foreach ( $pages as $page ) {
        if ( $page-&amp;gt;ID == $parent ) return true;
    }
    return false;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and changed &lt;code&gt;_display_rows_hierarchical&lt;/code&gt;
from
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( 0 == $page-&amp;gt;post_parent )
    $top_level_pages[] = $page;
else
    $children_pages[ $page-&amp;gt;post_parent ][] = $page;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( 0 == $page-&amp;gt;post_parent || !$this-&amp;gt;is_parent_in_pages( $page-&amp;gt;post_parent, $pages ))
    $top_level_pages[] = $page;
else
    $children_pages[ $page-&amp;gt;post_parent ][] = $page;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And finally - in order to remove the leading dash of $top_level_pages - I removed
the $level++ in function &lt;code&gt;single_row&lt;/code&gt; (same file) below "&lt;code&gt;case 'title':&lt;/code&gt;"
&lt;/p&gt;
&lt;p&gt;
Small change, better user experience :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18235 (Clean up remnants from having negative Post_IDs) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18235#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18235#comment:5/1313336021697985</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13932 (Child page permalinks exclude parent(s) until published) closed</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13932#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13932#comment:3/1313335866757946</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18235 (Clean up remnants from having negative Post_IDs) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18235#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18235#comment:4/1313335710542950</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18235.2.patch attached to Ticket #18235</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:27:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18235/18235.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18235/18235.2.patch/1313335663572287</guid>
      <description>&lt;p&gt;
Removed old code as indicated by azaozz, tested editor and QuickPress (JS and non-JS), fixed internal references to wp_write_post.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18400 (Suggested label change for "Stick this post to the front page") updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18400#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18400#comment:2/1313334733164963</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16829 (Automatically set 'compare' =&gt; 'IN', when meta value is an array) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 14 Aug 2011 15:02:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16829#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16829#comment:10/1313334127353365</guid>
      <description>&lt;p&gt;
Because some people might expect that when using meta_query, the value will automatically be serialized for them, like it is when using update_post_meta(), for instance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16829 (Automatically set 'compare' =&gt; 'IN', when meta value is an array) updated</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Sun, 14 Aug 2011 14:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16829#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16829#comment:9/1313333720991279</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16829#comment:8" title="Comment 8"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note that if you're trying to match against an actual array as a value, you will have to manually apply maybe_serialize() on it. Also, you can still explicitly set the 'compare' parameter to '='.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What do you mean? If what you're matching against (i.e. the DB entry) is serialized? If you know that data is serialized then you'll of course serialize your &lt;code&gt;value&lt;/code&gt; - am I wrong? Why point such a thing out?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15290 (Blogger Importer plugin broken) updated</title>
      
        <dc:creator>yorksranter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 14:49:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15290#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15290#comment:16/1313333364092048</guid>
      <description>&lt;p&gt;
this diff seems to address the problem: &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/14525/14525.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/attachment/ticket/14525/14525.diff&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
not much about dns errors there. the branch has its own problems (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14525" title="#14525: defect (bug): Blogger importer prepends &amp;#34;&amp;gt;&amp;#34; to all content (closed: fixed)"&gt;#14525&lt;/a&gt;) but I think they will be solved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14525 (Blogger importer prepends "&gt;" to all content) updated</title>
      
        <dc:creator>yorksranter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 14:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14525#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14525#comment:12/1313332942081948</guid>
      <description>&lt;p&gt;
I tested this branch against my Blogger account (6 blogs, biggest 2,724 posts, 1,943 comments). I have been trying to import this blog for 9 months (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15290" title="#15290: defect (bug): Blogger Importer plugin broken (closed: fixed)"&gt;#15290&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
The good news - the OAuth handshake works, although Google thinks the application is on my local machine and advises me not to trust it (illogically). I assume that's the "Google thing" mentioned in the source.
&lt;/p&gt;
&lt;p&gt;
The better news - unlike previous versions (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15290" title="#15290: defect (bug): Blogger Importer plugin broken (closed: fixed)"&gt;#15290&lt;/a&gt;), it successfully acquires the Blogger metafeed and reads out metadata for all the blogs. And it even begins to import content.
&lt;/p&gt;
&lt;p&gt;
The bad news: It imports exactly 25 posts and 1 comment. Then wants a kick ("Continue"). This doesn't cause any more import, though. It then goes to "Set Authors". I've not yet been able to get it to venture beyond the first 25 posts yet, despite turning up MAX_RESULTS and MAX_EXECUTION_TIME.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15290 (Blogger Importer plugin broken) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 14 Aug 2011 14:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15290#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15290#comment:15/1313332685175374</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The version field is used to track the earliest reported version which an issue affects.
&lt;/p&gt;
&lt;p&gt;
Also, don't be a kid please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15290 (Blogger Importer plugin broken) updated</title>
      
        <dc:creator>yorksranter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 14:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15290#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15290#comment:14/1313332297602544</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You're really not getting this, are you?
&lt;/p&gt;
&lt;p&gt;
Yes. It emits a DNS failure message. Then it retries. It does this exactly twice. On the third attempt, it successfully resolves the host name and downloads the Blogger metafeed. We know this because it returns data from it! Data that it can only know by resolving it!
&lt;/p&gt;
&lt;p&gt;
But it only reads metadata from the first blog in the metafeed and the header of the second. After the header of the second, it returns crap. Not an error message - it just sets the counter to "0/ ".
&lt;/p&gt;
&lt;p&gt;
If it was doing a GET per blog ID for metadata, it would only return ANYTHING for the first blog (if that one worked). Then nothing, or perhaps a DNS or HTTP error message.
&lt;/p&gt;
&lt;p&gt;
But it doesn't. It returns correct metadata for the first blog, then wrong metadata for the second, and then fails silently.
&lt;/p&gt;
&lt;p&gt;
Also, I see no reason for the version change. I'm running 3.2.1. I updated this morning.
&lt;/p&gt;
&lt;p&gt;
Now, the branch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14525" title="#14525: defect (bug): Blogger importer prepends &amp;#34;&amp;gt;&amp;#34; to all content (closed: fixed)"&gt;#14525&lt;/a&gt; doesn't exhibit the problem. It gets the metafeed with all 6 blogs and correct counts, and it will even start to import content. It fucks up after the first 25 entries, but that's another problem.
&lt;/p&gt;
&lt;p&gt;
Note that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14525" title="#14525: defect (bug): Blogger importer prepends &amp;#34;&amp;gt;&amp;#34; to all content (closed: fixed)"&gt;#14525&lt;/a&gt; is a ticket about....inserting funny characters during the parsing process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16829 (Automatically set 'compare' =&gt; 'IN', when meta value is an array) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 14 Aug 2011 12:49:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16829#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16829#comment:8/1313326155131297</guid>
      <description>&lt;p&gt;
Note that if you're trying to match against an actual array as a value, you will have to manually apply maybe_serialize() on it. Also, you can still explicitly set the 'compare' parameter to '='.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16829 (Automatically set 'compare' =&gt; 'IN', when meta value is an array) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 14 Aug 2011 12:46:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16829#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16829#comment:7/1313326008367500</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Marked &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18401" title="#18401: defect (bug): Passing array as 'value' to 'meta_query' yields failed SQL request (closed: duplicate)"&gt;#18401&lt;/a&gt; as dup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18401 (Passing array as 'value' to 'meta_query' yields failed SQL request) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 14 Aug 2011 12:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18401#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18401#comment:5/1313325980977021</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16829" title="#16829: enhancement: Automatically set 'compare' =&amp;gt; 'IN', when meta value is an array (closed: fixed)"&gt;#16829&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15290 (Blogger Importer plugin broken) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 14 Aug 2011 12:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15290#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15290#comment:13/1313325877855330</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
it's possible to create a sentient life-form
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then please do so. Or provide a patch.
&lt;/p&gt;
&lt;p&gt;
This bug remains a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15560" title="#15560: defect (bug): Blogger Importer does not use HTTP API (closed: fixed)"&gt;#15560&lt;/a&gt;, The error message here is provided BY PHP, This is not just the importer randomly throwing its hands up, this is it saying "Hey, the plannet I lived in just broke in two.. I dont have anywhere to live now".
&lt;/p&gt;
&lt;p&gt;
The best, and only resolution possible, is to switch to a more reliable HTTP transport functionality, which is what the above ticket is for.
&lt;/p&gt;
&lt;p&gt;
As a possible work around, Import onto a server which doesn't exhibit the issues, and export to a WordPress WXR format export, and then import that into the server which is having the issue.
&lt;/p&gt;
&lt;p&gt;
Also, I still fail to see how it fails to parse it, given the error message you keep giving is, literally, a DNS failure message.
My only thought pattern for your issue, is that it's randomly failing to connect, The blogger import process requires multiple HTTP requests to do it's job, if one is timing out due to network congestion, server speed or config, or a dodgy PHP install (they exist), then that'll bring the entire process to a halt.
&lt;/p&gt;
&lt;p&gt;
I'm not re-closing this, as I know you'll only re-open it, which doesnt help anyone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15290 (Blogger Importer plugin broken) updated</title>
      
        <dc:creator>yorksranter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 12:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15290#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15290#comment:12/1313324574411335</guid>
      <description>&lt;p&gt;
PS, it's possible to create a sentient life-form in the time it has so far taken to get this resolved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15290 (Blogger Importer plugin broken) updated</title>
      
        <dc:creator>yorksranter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 12:21:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15290#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15290#comment:11/1313324467956152</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15290 (Blogger Importer plugin broken) reopened</title>
      
        <dc:creator>yorksranter</dc:creator>

      <pubDate>Sun, 14 Aug 2011 12:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15290#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15290#comment:10/1313324380540214</guid>
      <description>&lt;p&gt;
&lt;em&gt;PHP is unable to contact the Blogger servers, due to DNS issue with PHP&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
I think it would help if you were to read the bug report.
&lt;/p&gt;
&lt;p&gt;
1) It makes 2 efforts to contact Blogger, which return a DNS error. True so far.
&lt;/p&gt;
&lt;p&gt;
2) BUT - key moment! - it then *succeeds* and returns correct post and comment counts for one of my two blogger blogs.
&lt;/p&gt;
&lt;p&gt;
3) However, it returns zero posts and zero comments for the other. Which is the one I want to import. IF I WANTED TO IMPORT THE FIRST BLOG, I COULD.
&lt;/p&gt;
&lt;p&gt;
This quite evidently has nothing whatsoever to do with DNS and everything to do with parsing. If it was a DNS issue, how could it possibly find out the post count for the first blog?
&lt;/p&gt;
&lt;p&gt;
Coda: it's always 2 DNS errors. Always. If it was just a transient DNS problem, it might be zero, or one, or 15. But it's always precisely 2. If you can think of any plausible failure mode that would lead a DNS resolver to ignore the first two A record queries but then function normally, but only manifest itself for WordPress... It's always 2.
&lt;/p&gt;
&lt;p&gt;
Reopening as the only chance of fixing this is a maintainer grasping the point that it is a parsing issue completely unconnected with DNS.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #18400 (Suggested label change for "Stick this post to the front page") updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 14 Aug 2011 12:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18400#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18400#comment:1/1313323907387861</guid>
      <description>&lt;p&gt;
I prefer the same label as we use in Quick Edit "Make this post sticky". Sticky posts aren't always on front page, even less on top.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18401-fixed.patch attached to Ticket #18401</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Sun, 14 Aug 2011 10:38:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18401/18401-fixed.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18401/18401-fixed.patch/1313318282734115</guid>
      <description>&lt;p&gt;
Fixed version of the above. Line numbers were wrong.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>18401.patch attached to Ticket #18401</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Sun, 14 Aug 2011 10:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18401/18401.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18401/18401.patch/1313317753060863</guid>
      <description>&lt;p&gt;
If array is passed and 'compare' isn't already set to IN, NOT IN, BETWEEN, it will default to IN
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18401 (Passing array as 'value' to 'meta_query' yields failed SQL request) updated</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Sun, 14 Aug 2011 10:19:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18401#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18401#comment:4/1313317182639803</guid>
      <description>&lt;p&gt;
Ah.
&lt;/p&gt;
&lt;p&gt;
I can confirm that setting 'compare' to 'IN' works, but I agree that there should be either documentation or a built-in fix to mitigate this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18401 (Passing array as 'value' to 'meta_query' yields failed SQL request) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 14 Aug 2011 10:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18401#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18401#comment:3/1313317033697336</guid>
      <description>&lt;p&gt;
IIRC if you specify an array for the value parameter, you need to specify the compare parameter too (eg. IN, NOT IN, BETWEEN) else it defaults to '='.
&lt;/p&gt;
&lt;p&gt;
Maybe the compare parameter should default to IN if an array is passed as the value parameter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18401 (Passing array as 'value' to 'meta_query' yields failed SQL request) updated</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Sun, 14 Aug 2011 10:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18401#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18401#comment:2/1313316976157053</guid>
      <description>&lt;p&gt;
Forgot to mention the following error that appears when using the array(3):
&lt;em&gt;Warning: trim() expects parameter 1 to be string, array given in xxxx\wp-includes\meta.php on line 526&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18401 (Passing array as 'value' to 'meta_query' yields failed SQL request) updated</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Sun, 14 Aug 2011 10:09:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18401#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18401#comment:1/1313316564047931</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18401 (Passing array as 'value' to 'meta_query' yields failed SQL request) created</title>
      
        <dc:creator>Doggie52</dc:creator>

      <pubDate>Sun, 14 Aug 2011 09:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18401</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18401/1313315330301866</guid>
      <description>&lt;p&gt;
Say I have a custom post type called 'review' and it has a custom field called 'score'. The one and only 'review' has a 'score' of 3. The following code will output a $posts object with that 'review'.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array('post_type' =&amp;gt; 'review');
$args['meta_query'] = array(
	array(
	'key' =&amp;gt; 'score',
	'value' =&amp;gt; 3
));
$posts = new WP_Query($args);
&lt;/pre&gt;&lt;p&gt;
SQL request made:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  INNER JOIN wp_postmeta ON (wp_posts.ID = wp_postmeta.post_id) WHERE 1=1  AND wp_posts.post_type = 'review' AND (wp_posts.post_status = 'publish' OR wp_posts.post_author = 1 AND wp_posts.post_status = 'private') AND ( (wp_postmeta.meta_key = 'score' AND CAST(wp_postmeta.meta_value AS CHAR) = '3') ) GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10
&lt;/pre&gt;&lt;p&gt;
When passing an array with that '4', however, it does something out of the ordinary. The $posts object does not contain a post, and look at the SQL request around &lt;em&gt;wp_postmeta.meta_value&lt;/em&gt;.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array('post_type' =&amp;gt; 'review');
$args['meta_query'] = array(
	array(
	'key' =&amp;gt; 'score',
	'value' =&amp;gt; array(3)
));
&lt;/pre&gt;&lt;p&gt;
SQL request:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  INNER JOIN wp_postmeta ON (wp_posts.ID = wp_postmeta.post_id) WHERE 1=1  AND wp_posts.post_type = 'review' AND (wp_posts.post_status = 'publish' OR wp_posts.post_author = 1 AND wp_posts.post_status = 'private') AND ( (wp_postmeta.meta_key = 'score' AND CAST(wp_postmeta.meta_value AS CHAR) = '') ) GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10
&lt;/pre&gt;&lt;p&gt;
I apologize if the Component marked is incorrect, I was unable to find something that fit good enough.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18396 (Custom post type of "tab" creates query conflict with media uploader.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 14 Aug 2011 08:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18396#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18396#comment:4/1313311823844424</guid>
      <description>&lt;p&gt;
Because of this you should always prefix your names.
&lt;a class="ext-link" href="http://codex.wordpress.org/Post_Types#Naming_Best_Practices"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Post_Types#Naming_Best_Practices&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16687.minor-typo-fix.patch attached to Ticket #16687</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 14 Aug 2011 08:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16687/16687.minor-typo-fix.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16687/16687.minor-typo-fix.patch/1313311284070632</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18285 (New Settings API and workflow) updated</title>
      
        <dc:creator>ciobi</dc:creator>

      <pubDate>Sun, 14 Aug 2011 08:20:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18285#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18285#comment:47/1313310057477109</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18399 (Password Strength Meter should usually mark passwords that contain ...) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sun, 14 Aug 2011 08:01:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18399#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18399#comment:2/1313308863316558</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
And what about translation of "password" for other languages?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14401 (Unable to locate WordPress Content directory (wp-content).) updated</title>
      
        <dc:creator>vericgar</dc:creator>

      <pubDate>Sun, 14 Aug 2011 01:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14401#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14401#comment:19/1313287107131523</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I ran into the same issue in 3.2.1.
&lt;/p&gt;
&lt;p&gt;
The path on my host as visible to PHP is /f5/username/public/wp-content
The path via FTP is /public/wp-content
&lt;/p&gt;
&lt;p&gt;
Setting FTP_BASE and FTP_CONTENT_DIR helped, but then it errored out when looking for the themes directory. There was no option that I could find to override where it was looking for the theme directory.
&lt;/p&gt;
&lt;p&gt;
I created a fix, that when using find_folder, if FTP_BASE is set, will look for ABSPATH in $folder and replace it with FTP_BASE. This fix should solve the issues with the paths between FTP and PHP being so different.
&lt;/p&gt;
&lt;p&gt;
The patch is against 3.2.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress-ftp-path-fix.diff attached to Ticket #14401</title>
      
        <dc:creator>vericgar</dc:creator>

      <pubDate>Sun, 14 Aug 2011 01:54:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14401/wordpress-ftp-path-fix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14401/wordpress-ftp-path-fix.diff/1313286854776355</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18396 (Custom post type of "tab" creates query conflict with media uploader.) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 14 Aug 2011 01:54:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18396#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18396#comment:3/1313286841226847</guid>
      <description>&lt;p&gt;
I haven't checked, but wouldn't this also apply to any CPT that shares a name with a public query var?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17975 (_default_wp_die_handler css referencing logic is fragile and doesn't ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 14 Aug 2011 01:22:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17975#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17975#comment:9/1313284968723150</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
maybe the installer should not use wp_die to displayerror messages and instead display the itself?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I completely agree with you there actually, the validation errors should be inline, and i'll be attacking that in a seperate ticket shortly i think.
&lt;/p&gt;
&lt;p&gt;
That being said, The wp_die() instance I was refering to there comes directly from wpdb, and I expect a number of plugins which utilise wp_die() expect the h1 and button stylings at least.
&lt;/p&gt;
&lt;p&gt;
The suggested patch from me could be vastly simplified, instead, if it just checked for admin_url() being valid and enqueued the stylesheet then perhaps..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18400.diff attached to Ticket #18400</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Sun, 14 Aug 2011 01:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18400/18400.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18400/18400.diff/1313284806927134</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18400 (Suggested label change for "Stick this post to the front page") created</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Sun, 14 Aug 2011 01:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18400</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18400/1313284793969288</guid>
      <description>&lt;p&gt;
In the Publish meta box, it would be more clear to say "Stick this post to the top of the front page" compared to saying "Stick this post to the front page".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16330 (media_sideload_image() broken with filenames containing strange ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 14 Aug 2011 00:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16330#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16330#comment:12/1313282649594343</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18399 (Password Strength Meter should usually mark passwords that contain ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 14 Aug 2011 00:05:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18399#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18399#comment:1/1313280301578464</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>