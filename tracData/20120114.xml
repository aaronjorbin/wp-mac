<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #19586 (Admin menu display broken when hovering item on IE8) updated</title>
      
        <dc:creator>casben79</dc:creator>

      <pubDate>Sat, 14 Jan 2012 23:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19586#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19586#comment:6/1326584247630518</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added The Following At line 1816 in wp-admin.dev.css and updated wp-admin.css
&lt;/p&gt;
&lt;pre class="wiki"&gt;.ie8 #adminmenu .wp-menu-arrow{
    display:none!important; /*Hide The Menu Arrow Always In IE8 - http://core.trac.wordpress.org/ticket/19586 */
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>ie8_bug.diff attached to Ticket #19586</title>
      
        <dc:creator>casben79</dc:creator>

      <pubDate>Sat, 14 Jan 2012 23:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19586/ie8_bug.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19586/ie8_bug.diff/1326584134974234</guid>
      <description>&lt;p&gt;
diff to hide the stray div in ie8
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19590 (Warnings when unregistering core taxonomies and post types) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 22:53:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19590#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19590#comment:11/1326581614075368</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14761" title="#14761: task (blessed): unregister_post_type() (closed: fixed)"&gt;#14761&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14761 (unregister_post_type()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 22:53:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14761#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14761#comment:14/1326581587434160</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14761#comment:13" title="Comment 13"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The 'Right Now' dashboard widget has hardcoded output for posts, pages, categories and tags. These should only be shown if the corresponding post type / taxonomy is actually registered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/19590" title="#19590: defect (bug): Warnings when unregistering core taxonomies and post types (new)"&gt;#19590&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>semicolonfix.diff attached to Ticket #19830</title>
      
        <dc:creator>tw2113</dc:creator>

      <pubDate>Sat, 14 Jan 2012 22:49:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19830/semicolonfix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19830/semicolonfix.diff/1326581391082887</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14761 (unregister_post_type()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 14 Jan 2012 22:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14761#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14761#comment:13/1326581141167489</guid>
      <description>&lt;p&gt;
I'm currently looking into whether it's workable to unregister the 'post' post type on a site. Two related issues I've found with unregistering post types:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Any associated taxonomies should probably also be unregistered when unregistering a post type.
&lt;/li&gt;&lt;li&gt;The 'Right Now' dashboard widget has hardcoded output for posts, pages, categories and tags. These should only be shown if the corresponding post type / taxonomy is actually registered. I suspect there are other areas like this, this is the first one I've noticed.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14761#comment:8" title="Comment 8"&gt;johnkolbert&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about doing something like this: &lt;a class="ext-link" href="https://gist.github.com/769160"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://gist.github.com/769160&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You'd only need &lt;code&gt;remove_menu_page()&lt;/code&gt; in there if you were unregistering a post type after the menu has been built. I'd say -1 on this, you should unregister post types on the 'init' hook (albeit probably with a later priority than normal).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jan 2012 21:59:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:11/1326578347492001</guid>
      <description>&lt;p&gt;
Yes, another filter would do the trick but has many drawbacks. If we decide to use these attributes in core, there will be no good way to add them: it will interfere with what plugins are adding (or removing) in all cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19817 (Media Uploader sticks at 'Crunching' for Subscriber Uploads) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Jan 2012 21:49:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19817#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19817#comment:3/1326577791136907</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19817#comment:2" title="Comment 2"&gt;walkinonwat3r&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Adding edit_posts does indeed allow you to move past the 'crunching' step. However, I don't think the edit_posts capability should be a dependency for media. Perhaps there should be an edit_media, edit_images(_videos, _audio, etc), or edit_attachments, as well as a delete_, capability instead?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Adding an &lt;code&gt;edit_attachments&lt;/code&gt; cap would make good sense and I agree. Why is editing attachments tied to editing posts? The two are mutually exclusive.
&lt;/p&gt;
&lt;p&gt;
Maybe you should create another ticket for the enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Jan 2012 21:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:8/1326576873344957</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18549 (wp_texturize incorrectly curls closing quotes after inline HTML end tags) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 21:33:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18549#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18549#comment:3/1326576827521800</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version number indicates when the bug was initially introduced/reported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19830 (wp_localize_script() combines statements improperly) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 21:29:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19830#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19830#comment:4/1326576551260164</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Jan 2012 21:25:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832#comment:4/1326576304308104</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19446 (TortoiseSVN 1.7.x Cannot Browse Plugins Repository) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 14 Jan 2012 21:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19446#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19446#comment:16/1326575855251466</guid>
      <description>&lt;p&gt;
After some extremely patient testing I'm giving up on 1.7.4.  In some cases the browser will initialize if I don't touch it for 2 to 3 minutes.  About half the time it fails to initialize and either nothing happens or I get an error message, "There has been a problem contacting the server."  Useless.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19446 (TortoiseSVN 1.7.x Cannot Browse Plugins Repository) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 14 Jan 2012 20:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19446#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19446#comment:15/1326574334863988</guid>
      <description>&lt;p&gt;
Version 1.7.4 has been released and remains broken.  I can't really tell if it's going slightly faster or not, but is still listing every directory in the repository when I try to browse a trunk subdir.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19815 (Theme install and search screens should infinitely scroll) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Sat, 14 Jan 2012 20:51:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19815#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19815#comment:6/1326574298399330</guid>
      <description>&lt;p&gt;
Infinite scroll on the themes screen has already been implemented on wordpress.com, so it may just be a matter of asking for their code and touching it up for core, rather than starting from scratch. Ask Koopersmith for details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19830 (wp_localize_script() combines statements improperly) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Sat, 14 Jan 2012 20:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19830#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19830#comment:3/1326572567989947</guid>
      <description>&lt;p&gt;
Yes, that's true, as the two semicolons are not causing any issues/warnings/errors. It's just looking weird, and with just one semicolon the code looks cleaner (I feel).
&lt;/p&gt;
&lt;p&gt;
Moving it from line 151 to 146 looks good to me, as the only time when the semicolon could matter would be, if the semicolon at the end of the legacy &lt;code&gt;l10n_print_after&lt;/code&gt; is missing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12515 (Destructive Autosaves Happening on All Drafts) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jan 2012 19:27:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12515#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12515#comment:7/1326569240501952</guid>
      <description>wontfix: &lt;p&gt;
Re-reading this ticked after two years still don't see a point in having multiple autosave revisions for drafts. At best that would be plugin material.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12104 ('moderate_comments' capability by itself should grant the user the ...) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Sat, 14 Jan 2012 19:23:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12104#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12104#comment:19/1326569021804536</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17391 (Alternative color schemes and theme settings in editor styles) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jan 2012 19:10:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17391#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17391#comment:10/1326568210455203</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17391#comment:7" title="Comment 7"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Now, the question is, how practical it is for writing, and for technical implementation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The technical implementation is to add another (PHP generated) &amp;lt;style&amp;gt; tag in the editor's iframe. As that iframe is generated with JS, the &amp;lt;stile&amp;gt; tag should be generated with JS too (not very hard).
&lt;/p&gt;
&lt;p&gt;
The problem is with standardization. Adding a variable, core generated styles to the editor may interfere with some themes editor_style.css. I've seen wildly different styling in some editor_style.css files, thinking best would be to try and standardize what can be added there and what shouldn't. Then we can safely implement this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11034 (AJAX requests stored as UTF-8 even if a non-UTF-8 charset is in use) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jan 2012 18:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11034#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11034#comment:10/1326567181603405</guid>
      <description>wontfix: &lt;p&gt;
Using iconv to try to rectify the character encoding doesn't seem right:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The external app is usually not available.
&lt;/li&gt;&lt;li&gt;When available, running the requests through it and presuming they are UTF-8 is wrong (and would break a lot of sites).
&lt;/li&gt;&lt;li&gt;This is a JS problem and would be better to use JS to fix it.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
By default JS is UTF-8. The most straightforward solution seems to be to json encode any text passed through XHR when the HTML document's encoding is not UTF-8. Of course the "best" solution is still to use UTF-8 everywhere :)
&lt;/p&gt;
&lt;p&gt;
This problem has been around for so long that starting to doubt it really needs fixing. Since WordPress has been using UTF-8 by default for several years, it seems there are very few people left that use different encodings, i.e. nearly all users have converted to UTF-8.
&lt;/p&gt;
&lt;p&gt;
Closing as wontfix for now, if there's till need to try and handle this in core, feel free to reopen with a patch.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Sat, 14 Jan 2012 18:42:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:10/1326566572827441</guid>
      <description>&lt;p&gt;
These attributes are backwards compatible. I donâ€™t think supporting them would do any harm.
&lt;/p&gt;
&lt;p&gt;
But I donâ€™t like more arguments for &lt;code&gt;wp_register_script()&lt;/code&gt;. We have already four, thatâ€™s more than enough. How about a very simple extra string in &lt;code&gt;WP_Scripts::do_item()&lt;/code&gt;?
&lt;/p&gt;
&lt;pre class="wiki"&gt;$src = esc_url( apply_filters( 'script_loader_src', $src, $handle ) );
$extra = apply_filters( 'script_extra', '', $src, $handle );
if ( $this-&amp;gt;do_concat )
	$this-&amp;gt;print_html .= "&amp;lt;script type='text/javascript' src='$src' $extra&amp;gt;&amp;lt;/script&amp;gt;\n";
else
	echo "&amp;lt;script type='text/javascript' src='$src' $extra&amp;gt;&amp;lt;/script&amp;gt;\n";
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17699 (Border at bottom of active tabs are inconsistent) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jan 2012 18:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17699#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17699#comment:15/1326565872926892</guid>
      <description>worksforme: &lt;p&gt;
Is this still happening? These styles were changed in the meantime. Looking at the screenshots, that border shouldn't be there. Haven't seen it recently (at least in FF).
&lt;/p&gt;
&lt;p&gt;
Closing as 'worksforme' for now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19815 (Theme install and search screens should infinitely scroll) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sat, 14 Jan 2012 18:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19815#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19815#comment:5/1326564428333657</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19815#comment:4" title="Comment 4"&gt;garyc40&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd like to tackle this task if no core devs intend to take over yet?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
DH-Shredder and I are teamed up on it (see &lt;a class="ext-link" href="http://wpdevel.wordpress.com/2012/01/11/this-is-not-a-feature-list/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wpdevel.wordpress.com/2012/01/11/this-is-not-a-feature-list/&lt;/a&gt;) but haven't quite started the dev cycle yet. Not sure how exactly we're approaching labeling who's on what, etc., but I imagine that doesn't exclude participation by any means :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A question though, this infinite scroll enhancement can only be applied to the theme search screen right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It also applies to the installed themes screen, which is where we are starting for proof-of-concept.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jan 2012 17:55:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:9/1326563739043412</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12009#comment:5" title="Comment 5"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As always, users find weird workarounds when the API doesn't oblige...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. However I'm still feeling a bit "uneasy" about adding support for a feature that is not supported by more than half of the browsers currently in use: &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Usage_share_of_web_browsers"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://en.wikipedia.org/wiki/Usage_share_of_web_browsers&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19830 (wp_localize_script() combines statements improperly) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jan 2012 17:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19830#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19830#comment:2/1326563146145155</guid>
      <description>&lt;p&gt;
Generally having two consecutive semicolons in JS is acceptable (not only at the end of line). Many JS libraries still add a semicolon at the very beginning (when minimized) to prevent concatenation errors.
&lt;/p&gt;
&lt;p&gt;
The second semicolon could be moved to &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class.wp-scripts.php#L146"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;L:146&lt;/a&gt; as it matters only when there's &lt;code&gt;'l10n_print_after'&lt;/code&gt; part.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19139 ("View Site" and other items below site/admin title need to grow) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 17:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19139#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19139#comment:16/1326562253372647</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8223 (Possibility to specify parameters when writing new page or post) closed</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Sat, 14 Jan 2012 17:28:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8223#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8223#comment:8/1326562128823032</guid>
      <description>maybelater: &lt;p&gt;
3 years with no interest
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19833 (can not sort by 2 custom fields) created</title>
      
        <dc:creator>zied86</dc:creator>

      <pubDate>Sat, 14 Jan 2012 17:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19833</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19833/1326561826192892</guid>
      <description>&lt;p&gt;
Hello
I followed the syntax of the codex to sort by two criteria of custom fields, but unfortunately it does not work.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It accepts only one custom field:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array(
'post_type' =&amp;gt; 'post_type',
'posts_per_page' =&amp;gt; '20',
'orderby' =&amp;gt; 'custom_field1 custom_field2',
'order' =&amp;gt; 'ASC');
$query = new WP_Query( $args );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19825 (Bugs and modifications to localize script) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jan 2012 17:19:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19825#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19825#comment:3/1326561568854769</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19825#comment:2" title="Comment 2"&gt;ssmathias&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[The code in 11520] is also the code, as currently implemented in trunk, that is generating a fatal error when I attempt to pass an object into wp_localize_script.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
$wp_scripts-&amp;gt;localize() accepts an associative array as argument, why would you pass an object? Further it has "dual functionality": that array can be multi-dimentional and html_entity_decode() is run only on the first level, leaving the second + levels untouched.
&lt;/p&gt;
&lt;p&gt;
Don't see any advantages in storing the associative array(s) and json_encoding them at output (it actually used to do that at one point). This can only bring some collision problems when localize() is called more than once for the same script.
&lt;/p&gt;
&lt;p&gt;
Also direct hacking into the $wp_scripts object is not supported as the internals can change in newer versions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19817 (Media Uploader sticks at 'Crunching' for Subscriber Uploads) updated</title>
      
        <dc:creator>walkinonwat3r</dc:creator>

      <pubDate>Sat, 14 Jan 2012 17:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19817#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19817#comment:2/1326561509061823</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for getting back to me on this. Adding edit_posts does indeed allow you to move past the 'crunching' step. However, I don't think the edit_posts capability should be a dependency for media. Perhaps there should be an edit_media, edit_images(_videos, _audio, etc), or edit_attachments, as well as a delete_, capability instead?
&lt;/p&gt;
&lt;p&gt;
I can see a couple of ways the current method is lacking:
1) Adding the edit_posts capability adds the 'Posts' item to the sidebar and allows the user to submit posts for review. This isn't &lt;em&gt;horrible&lt;/em&gt;, but it definitely doesn't necessarily follow from wanting the user to be able to edit media.
2) What if you're using a custom post type with a custom capability type? (My situation) Or what if you just want the user to edit pages, not posts, but want them to be able to add media easily?
3) What if you have some sort of audit trail responsibility and can't have users deleting content they added?
&lt;/p&gt;
&lt;p&gt;
Most of these issues can probably be hacked around, but posts and pages both have robust capability controls. Why shouldn't attachments mirror this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19815 (Theme install and search screens should infinitely scroll) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Sat, 14 Jan 2012 15:48:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19815#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19815#comment:4/1326556113882814</guid>
      <description>&lt;p&gt;
I'd like to tackle this task if no core devs intend to take over yet? It's been a while since I last contributed something to core.
&lt;/p&gt;
&lt;p&gt;
A question though, this infinite scroll enhancement can only be applied to the theme search screen right? Other screens such as Featured, Newest or Recently Updated don't have pagination, so I doubt wordpress.org has API for those screens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15202 (get_calendar() lacks filters on it's database queries) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Sat, 14 Jan 2012 15:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15202#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15202#comment:5/1326555146450428</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The proposed patch adds two filters: getcalendar_join and getcalendar_where (as it is done for wp_get_archives).
&lt;/p&gt;
&lt;p&gt;
My choice was not to include the date in the where filter. The main reason for this is that this way the filter is called only one time for the 4 sql queries included in get_calendar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>general-template.diff attached to Ticket #15202</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Sat, 14 Jan 2012 15:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15202/general-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15202/general-template.diff/1326554774473301</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sat, 14 Jan 2012 11:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832#comment:3/1326541766128122</guid>
      <description>&lt;p&gt;
Thank you, I thought that this ticket is especially for header information, but you are right, there is also special textdomain mentioned.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) updated</title>
      
        <dc:creator>wet</dc:creator>

      <pubDate>Sat, 14 Jan 2012 11:48:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832#comment:2/1326541701061722</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>wet</dc:creator>

      <pubDate>Sat, 14 Jan 2012 11:47:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:7/1326541668948821</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18200 (Language Packs) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 11:42:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18200#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18200#comment:25/1326541329926861</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19832" title="#19832: defect (bug): Splitting translation files for better performance (closed: maybelater)"&gt;#19832&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 11:41:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832#comment:1/1326541288163762</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19597" title="#19597: task (blessed): Bundled plugins need a Text Domain header (closed: fixed)"&gt;#19597&lt;/a&gt; for Akismet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19829 (impossible to moderate comment in custom post) closed</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Sat, 14 Jan 2012 11:20:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19829#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19829#comment:4/1326540031922373</guid>
      <description>worksforme: &lt;p&gt;
I have now tested in 6 different installs and am not able to duplicate this.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19829 (impossible to moderate comment in custom post) reopened</title>
      
        <dc:creator>zied86</dc:creator>

      <pubDate>Sat, 14 Jan 2012 11:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19829#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19829#comment:3/1326538921020746</guid>
      <description>&lt;p&gt;
@thee17 : I tried to empty the tables comments
and added new comments
but unfortunately same problem
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov : pas mal de fois j'ai essayÃ© le forum mais malheuresement pas de de rÃ©ponse :(
&lt;/p&gt;
&lt;p&gt;
thank you for your help
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #17128 (POMO library performance considerations) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sat, 14 Jan 2012 11:00:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17128#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17128#comment:19/1326538849866011</guid>
      <description>&lt;p&gt;
OK, there are 2 new tickets: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19831" title="#19831: defect (bug): Multisite strings in standard translation (closed: wontfix)"&gt;#19831&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19832" title="#19832: defect (bug): Splitting translation files for better performance (closed: maybelater)"&gt;#19832&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19832 (Splitting translation files for better performance) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sat, 14 Jan 2012 10:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19832</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19832/1326538771516931</guid>
      <description>&lt;p&gt;
Originally suggested by Chouby: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17128#comment:15" title="#17128: enhancement: POMO library performance considerations (closed: fixed)"&gt;17128#comment:15&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Localization file is bigger and bigger with every new release. It would be very helpfull to split it into several files:
&lt;/p&gt;
&lt;p&gt;
1) Frontend - There are only several strings which are needed on frontend side, but localization file is loaded as a whole.
&lt;/p&gt;
&lt;p&gt;
2) Backend
&lt;/p&gt;
&lt;p&gt;
3) Akismet - Please remove Akismet strings from default localization file. I understand that there is any reason to bundle Akismet with WordPress, no problem, but why all users have to load many strings when they do not need them? Akismet is not updated with WordPress anymore, but strings are still available...
&lt;/p&gt;
&lt;p&gt;
4) Consider About page and Help tabs. There are many long strings and not all users need them translated. They would be much more happier when they could save 2 - 3 MB of memory_limit. It could be help textdomain which would be enabled by default, but could be turned off for example by plugin.
&lt;/p&gt;
&lt;p&gt;
Together with Language packs it would be real improvement for 3.4.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17128" title="#17128: enhancement: POMO library performance considerations (closed: fixed)"&gt;#17128&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sat, 14 Jan 2012 10:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:6/1326538033269887</guid>
      <description>&lt;p&gt;
Thank you, I did not notice that ticket. There was not enough time during beta, so strings were not marked with textdomain, but loaded conditionally. And .pot generator is not smart enough to select all multisite strings for ms-locale.pot file. So should it be solved on the side of generator or adding special ms textdomain?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Jan 2012 10:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:5/1326536821850495</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13565" title="#13565: enhancement: Put multisite strings in a separate pot file (closed: fixed)"&gt;#13565&lt;/a&gt; for background.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sat, 14 Jan 2012 10:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:4/1326536581830336</guid>
      <description>&lt;p&gt;
So, it should work as expected, but only strings are in different file? These strings have usually condition if ( is_multisite() ) so they should be loaded from ms-locale.mo file. But because they are not marked somehow in code (for example with textdomain), then .pot generator adds them into standard localization file and they are loaded everytime for all users. Is there any solution? Adding ms textdomain to all strings?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Jan 2012 10:11:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:3/1326535882907129</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;code&gt;load_default_textdomain()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_multisite() || ( defined( 'WP_INSTALLING_NETWORK' ) &amp;amp;&amp;amp; WP_INSTALLING_NETWORK ) ) {
    load_textdomain( 'default', WP_LANG_DIR . "/ms-$locale.mo" );
}
&lt;/pre&gt;&lt;p&gt;
And &lt;code&gt;WP_INSTALLING_NETWORK&lt;/code&gt; is defined in &lt;code&gt;wp-admin/network.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sat, 14 Jan 2012 10:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:2/1326535421313572</guid>
      <description>&lt;p&gt;
Examples:
&lt;/p&gt;
&lt;pre class="wiki"&gt;menu.php: "My Sites", "Network Setup", "Delete Site"
users.php: "Remove allows you to remove a user from your site. It does not delete their posts. You can also remove multiple users at once by using Bulk Actions."
&lt;/pre&gt;&lt;p&gt;
These strings can be seen only when Multisite is enabled.
&lt;/p&gt;
&lt;p&gt;
I can create the whole list (about 50 - 100 strings), but I am not sure if it is possible to solve it somehow? For multisite translation is loaded ms-locale.mo file, but strings have no ms textdomain, so I suppose that there is any automatic localization script on files in wp-admin/network directory?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 09:20:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:3/1326532851943802</guid>
      <description>&lt;p&gt;
Duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9087" title="#9087: enhancement: &amp;#34;Edit Posts&amp;#34; heading in /wp-admin/edit.php should state filters (i.e. ... (closed: wontfix)"&gt;#9087&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Jan 2012 09:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831#comment:1/1326532177459029</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are many strings
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which are?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19817 (Media Uploader sticks at 'Crunching' for Subscriber Uploads) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 14 Jan 2012 06:37:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19817#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19817#comment:1/1326523044204808</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That would be because you've given the subscriber permission to &lt;code&gt;upload_files&lt;/code&gt;, but not to &lt;code&gt;edit_posts&lt;/code&gt;, so that after it's uploaded they are not allowed to change any of the data associated with it (title, caption, description etc).
&lt;/p&gt;
&lt;p&gt;
I'm inclined to suggest that this is how it should be - if you want subscribers to be able to upload attachments then you also need to give them permissions to edit them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19829 (impossible to moderate comment in custom post) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jan 2012 05:43:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19829#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19829#comment:2/1326519822809204</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please try the support forums: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>scep</dc:creator>

      <pubDate>Sat, 14 Jan 2012 04:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:8/1326516162012255</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>defer and async.patch attached to Ticket #12009</title>
      
        <dc:creator>scep</dc:creator>

      <pubDate>Sat, 14 Jan 2012 04:33:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12009/defer%20and%20async.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12009/defer%20and%20async.patch/1326515628734837</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>scep</dc:creator>

      <pubDate>Sat, 14 Jan 2012 04:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:7/1326515433717301</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I was also looking for this feature, saw that it did not exist so i took a shot at it writing it in, I attached a patch for what I did.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15989 (image_resize_dimensions() mistakenly defaults crop center as image's ...) updated</title>
      
        <dc:creator>mgolawala</dc:creator>

      <pubDate>Sat, 14 Jan 2012 02:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15989#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15989#comment:8/1326507271837577</guid>
      <description>&lt;p&gt;
We are using the thumbnail API to generate our thumbnails from portrait images. When we noticed the cropping around the center was incorrectly causing the faces of the subject of the photograph to be lost, we investigated the API to see if there was any way to change the center from which the crop was taken. On searching trac, we came across this ticket and it would make a lot of sense for us to use a filter such as the one in the patch, instead of implementing/adding a thumbnail plugin just so we can crop from the top instead of the center.
&lt;/p&gt;
&lt;p&gt;
Is there a plan to include this in core soon? Are there any steps our team can take to help move this along and have it included in core?
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19829 (impossible to moderate comment in custom post) closed</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Sat, 14 Jan 2012 00:41:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19829#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19829#comment:1/1326501704040103</guid>
      <description>worksforme: &lt;p&gt;
I made a comment on my CPT and moderation worked as expected. There appears to be a language thing modifying your comments that may be causing your issues.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18549 (wp_texturize incorrectly curls closing quotes after inline HTML end tags) updated</title>
      
        <dc:creator>Ammaletu</dc:creator>

      <pubDate>Sat, 14 Jan 2012 00:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18549#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18549#comment:2/1326501643631267</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can confirm this issue. Haven't had time yet to write a test case or patch, but I took a look at the plugin "InTypo" (which I have been using for years to change the English quote characters to German ones). This plugin completely replaces wptexturize and does not show this bug except in one minor case. What InTypo does: It first replaces the closing quotes and then the opening ones. This way, when you get to replacing the opening quotes, the closing quotes are already safely replaced.
&lt;/p&gt;
&lt;p&gt;
The code looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$dynamic_character = '/"([\.,;\!\?\s\)\]])/'
$dynamic_replacement = $closing_quote . '$1'
&lt;/pre&gt;&lt;p&gt;
Basically, it replaces every quote character with a closing quote that is followed by a space, a closing bracket or a number of punctuation marks. That is not perfect yet, for example wptexturize handles { and &amp;lt; for opening quotes, so these should be handled here as well. Also probably any punctuation marks from different languages (are there any missing?). And finally this fails if the closing quote is the very last character of the post, a case that could be handled by adding \Z.
&lt;/p&gt;
&lt;p&gt;
Could this be the basis for a patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2012-01-13 at 20.38.45 .png attached to Ticket #19829</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Sat, 14 Jan 2012 00:40:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19829/Screen%20Shot%202012-01-13%20at%2020.38.45%20.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19829/Screen%20Shot%202012-01-13%20at%2020.38.45%20.png/1326501602473142</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19831 (Multisite strings in standard translation) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sat, 14 Jan 2012 00:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19831/1326499710938715</guid>
      <description>&lt;p&gt;
There are many strings which are related to Multisite version, but they are part of standard WordPress localization files. Any chance to move them to proper ms-locale.mo file? It would be better for translators and also users (less strings = less memory used). Only a few percentage of users need Multisite version, so there is no need for every standard WordPress user to automatically load all these strings, I guess...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19820 (More post slug cleaning) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 13 Jan 2012 23:59:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19820#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19820#comment:2/1326499167763917</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19820/19820.2.patch" title="Attachment '19820.2.patch' in Ticket #19820"&gt;19820.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19820/19820.2.patch" title="Download"&gt;â€‹&lt;/a&gt; fixes this test case:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;assertEquals("one-two", sanitize_title_with_dashes("One &amp;amp; Two;", '', 'save'));
&lt;/pre&gt;&lt;p&gt;
Output was:
&lt;/p&gt;
&lt;pre class="wiki"&gt;There was 1 failure:
1) TestSanitizeTitleWithDashes::test_strips_entities
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'one-two'
+'one'
&lt;/pre&gt;&lt;p&gt;
This change is unrelated to SergeyBiryukov's patch, but is related to the request for unit tests.
&lt;/p&gt;
&lt;p&gt;
SergeyBiryukov's patch looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19820_unit_test.patch attached to Ticket #19820</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 13 Jan 2012 23:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19820/19820_unit_test.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19820/19820_unit_test.patch/1326498900076987</guid>
      <description>&lt;p&gt;
Unit test for quote entities and multiply sign
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19820.2.patch attached to Ticket #19820</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 13 Jan 2012 23:53:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19820/19820.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19820/19820.2.patch/1326498835428166</guid>
      <description>&lt;p&gt;
Fixes a unit test case
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17128 (POMO library performance considerations) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Jan 2012 23:06:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17128#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17128#comment:18/1326495963839455</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17128#comment:17" title="Comment 17"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or is there any reason why these strings are not inluded in existing separate multisite .mo file?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I guess this also should be investigated in a new ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19830 (wp_localize_script() combines statements improperly) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 13 Jan 2012 23:03:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19830#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19830#comment:1/1326495820178540</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19830 (wp_localize_script() combines statements improperly) created</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 13 Jan 2012 22:51:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19830</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19830/1326495063185899</guid>
      <description>&lt;p&gt;
When making multiple calls to &lt;code&gt;wp_localize_script()&lt;/code&gt; on the same &lt;code&gt;$handle&lt;/code&gt;, the individual JSONified objects are merged together with &lt;code&gt;;\n&lt;/code&gt; &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class.wp-scripts.php#L151"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;in this line&lt;/a&gt;.
However, each individual &lt;code&gt;var&lt;/code&gt; statement has already been correctly terminated by a semicolon &lt;code&gt;;&lt;/code&gt; &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class.wp-scripts.php#L143"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;a few lines above&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Due to that, the resulting output has an extra semicolon after each but the last &lt;code&gt;var&lt;/code&gt; statement (i.e. &lt;code&gt;;;&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
Removing the semicolon from the string in &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class.wp-scripts.php#L151"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;line 151&lt;/a&gt; should fix this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17128 (POMO library performance considerations) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Fri, 13 Jan 2012 22:30:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17128#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17128#comment:17/1326493800300385</guid>
      <description>&lt;p&gt;
There are also many strings which can be seen only in multisite version. Maybe they should get right textdomain? Or is there any reason why these strings are not inluded in existing separate multisite .mo file?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>commentaire-probleme.png attached to Ticket #19829</title>
      
        <dc:creator>zied86</dc:creator>

      <pubDate>Fri, 13 Jan 2012 22:26:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19829/commentaire-probleme.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19829/commentaire-probleme.png/1326493607535870</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19829 (impossible to moderate comment in custom post) created</title>
      
        <dc:creator>zied86</dc:creator>

      <pubDate>Fri, 13 Jan 2012 22:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19829</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19829/1326493577939209</guid>
      <description>&lt;p&gt;
Hello;
I added in my site customs post
the problem when I added comments in custom post but when I click / wp-admin/edit-comments.php it does not display the list of comments to moderate
does anyone can help me
thank you in advance
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17128 (POMO library performance considerations) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 13 Jan 2012 22:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17128#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17128#comment:16/1326492579957674</guid>
      <description>&lt;p&gt;
@Chouby: Splitting the translation files in two is an idea worth exploring, but you should open a new ticket for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>core-ticket19828.diff attached to Ticket #19828</title>
      
        <dc:creator>tfnab</dc:creator>

      <pubDate>Fri, 13 Jan 2012 22:02:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19828/core-ticket19828.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19828/core-ticket19828.diff/1326492145986792</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17128 (POMO library performance considerations) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 13 Jan 2012 21:54:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17128#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17128#comment:15/1326491665079535</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I observed the same issue.
&lt;/p&gt;
&lt;p&gt;
Please correct me if I am wrong, but it looks like every internationalized strings are loaded on every page. Loading the complete mo file on every page could explain such huge difference of performance between English and localized versions. Moreover, as WordPress is growing, the mo file is growing too (for de_DE.mo, it was 296 ko for 2.8, 386 ko for 3.0 and 435 ko now), so this performance issue is growing too.
&lt;/p&gt;
&lt;p&gt;
So if my assumption is good, the most optimized solution could be to load only the strings needed for the current page. I am not a specialist of the pomo structure, but I imagine that in the worst case it could mean splitting the current mo file in many small files. Obviously it would be difficult to do and maintain.
&lt;/p&gt;
&lt;p&gt;
However, it may be a good solution to split the current mo file in two. One small file for the frontend and the big file for the admin side (it seems to me that there are not a lot of core strings displayed on the frontend). Maybe it would be necessary to load both files on the admin side. I am not sure.
&lt;/p&gt;
&lt;p&gt;
This way, of course, we do not improve the time running on the admin side but we should improve a lot the time running on the frontend. Since, inn most cases, the frontend is loaded much more times than the admin, the server load decrease should be quite perceptible...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19828 (allowing to insert help tab in specific position) created</title>
      
        <dc:creator>tfnab</dc:creator>

      <pubDate>Fri, 13 Jan 2012 21:50:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19828</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19828/1326491415344280</guid>
      <description>&lt;p&gt;
this enhancement of add_help_tab() would allow plugin developers to insert help tabs on existing screens at an arbitrary position, e.g. place it on the "Writing Settings" screen's help tab between the "Overview" and "Press This" tabs
&lt;/p&gt;
&lt;p&gt;
the patch attached includes the bugfix from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19827" title="#19827: defect (bug): remove_help_tab() not working as expected (closed: fixed)"&gt;#19827&lt;/a&gt;, but this enhancement can be rewritten to work independently
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12235 (Display caption with the_post_thumbnail) updated</title>
      
        <dc:creator>globalchange</dc:creator>

      <pubDate>Fri, 13 Jan 2012 21:24:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12235#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12235#comment:11/1326489865674338</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12235#comment:10" title="Comment 10"&gt;GlobalChange&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi What are next steps? Thank you
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi am wondering what the next step would be.  Thank you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16854 (wp_query does not handle multiple exclude author properly) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Jan 2012 20:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16854#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16854#comment:9/1326487253394191</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13278 (query.php, exclude posts by more authors bug) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Jan 2012 20:40:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13278#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13278#comment:3/1326487215069121</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16854" title="#16854: enhancement: wp_query does not handle multiple exclude author properly (closed: fixed)"&gt;#16854&lt;/a&gt; has  a patch.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16854 (wp_query does not handle multiple exclude author properly) updated</title>
      
        <dc:creator>aesqe</dc:creator>

      <pubDate>Fri, 13 Jan 2012 20:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16854#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16854#comment:8/1326486603439318</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16854 (wp_query does not handle multiple exclude author properly) updated</title>
      
        <dc:creator>aesqe</dc:creator>

      <pubDate>Fri, 13 Jan 2012 20:28:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16854#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16854#comment:7/1326486534305362</guid>
      <description>&lt;p&gt;
duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13278" title="#13278: enhancement: query.php, exclude posts by more authors bug (closed: duplicate)"&gt;#13278&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>core-ticket19827.diff attached to Ticket #19827</title>
      
        <dc:creator>tfnab</dc:creator>

      <pubDate>Fri, 13 Jan 2012 20:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19827/core-ticket19827.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19827/core-ticket19827.diff/1326486444087219</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19827 (remove_help_tab() not working as expected) created</title>
      
        <dc:creator>tfnab</dc:creator>

      <pubDate>Fri, 13 Jan 2012 20:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19827</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19827/1326486372659717</guid>
      <description>&lt;p&gt;
remove_help_tab takes $id as a parameter. this is either confusing or wrong. the method does the following:
&lt;/p&gt;
&lt;p&gt;
unset( $this-&amp;gt;_help_tabs[ $id ] );
&lt;/p&gt;
&lt;p&gt;
but since add_help_tab simply does this:
&lt;/p&gt;
&lt;p&gt;
$this-&amp;gt;_help_tabs[] = $args;
&lt;/p&gt;
&lt;p&gt;
you have to call remove_help_tab with numerical values such as 0, 1, 2 etc. but not the 'this-id' passed in e.g.
&lt;/p&gt;
&lt;p&gt;
add_help_tab(array('id'=&amp;gt;'this-id',&lt;em&gt;...
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
in addition if you remove the zero element, initially there is no active tab on the help tab.
&lt;/p&gt;
&lt;p&gt;
fix attached. this makes the following line remove the previously created tab:
&lt;/p&gt;
&lt;p&gt;
remove_help_tab('this-id');
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18750 (specify post ID for is_page_template) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Fri, 13 Jan 2012 20:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18750#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18750#comment:9/1326485669295153</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I second (or third or fourth) the need for this capability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19826 (Error behavior for deleting trashed posts is different for Bulk Delete ...) created</title>
      
        <dc:creator>jpbellona</dc:creator>

      <pubDate>Fri, 13 Jan 2012 18:38:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19826</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19826/1326479880569131</guid>
      <description>&lt;p&gt;
Bug testing a custom blog build, but I may have located a bug with core (wp-die) Trash error messages.
&lt;/p&gt;
&lt;p&gt;
Background:
*The blog has different users, with different roles.
*Issue occurs on trash page of a custom post type (post status = trash .../edit.php?post_status=trash&amp;amp;post_type=subject)
*Trash contains posts by both an admin role (who can add/edit/delete all custom posts) and an author role (who can add/edit/delete his/her own posts).
*Logged in as an author.
*Using Capability Manager Plug-in. (Tested bug without plugin too)
*Issue is specific to behavior after normal WP-error is thrown.
&lt;/p&gt;
&lt;p&gt;
Issue:
Same WP error. Two different behaviors.
&lt;/p&gt;
&lt;p&gt;
Different functionality occurs between using the Bulk Actions (Delete Permanently) &amp;gt; "Apply" button and the "Empty Trash" button, after a normal WP error is thrown. In the first case (Bulk Actions &amp;gt; Apply [1a below]), after I return from the error page and refresh the Trash page, all of the selected author pages have been deleted. No admin pages have been deleted.
In the second case ("Empty Trash" [1b below]), after I return from the error page and refresh the Trash page, all of the selected author pages have NOT been deleted. No admin pages have been deleted.
&lt;/p&gt;
&lt;p&gt;
Behavior:
1a. When I am logged in as an author and I highlight posts by both author and admin, and I attempt to delete using Bulk Actions (Delete Per.) &amp;gt; "Apply", I receive the WordPress error "You are not allowed to delete this item." &lt;em&gt;/After I return from the error page and refresh the Trash page, all of the selected author pages have been deleted. No admin pages have been deleted.
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
1b. When I am logged in as an author and I highlight posts by both author and admin, and I attempt to delete using "Empty Trash" button, I receive the WordPress error "You are not allowed to delete this item." &lt;em&gt;/I return from the error page and refresh the Trash page, all of the selected author pages have NOT been deleted. No admin pages have been deleted.
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
returning to the Trash page. Tested both scenarios.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I hit back on the browser, and return to the Trash page. I refresh the page.
&lt;/li&gt;&lt;li&gt;Move to a different WP admin page, not the Trash page, then return to the Trash page.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Question, because the same text/error is thrown for both buttons, why is the functionality different? Both single functions seem appropriate, however, having both functions exist together instead of picking one behavior seems problematic.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19637 (Update hierarchy when deleting hierarchical CPT) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 13 Jan 2012 18:37:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19637#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19637#comment:3/1326479866886502</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19734" title="Update hierarchy for all hierarchical post types when deleting a ..."&gt;[19734]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Update hierarchy for all hierarchical post types when deleting a parent post, not just for pages. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19637" title="#19637: defect (bug): Update hierarchy when deleting hierarchical CPT (closed: fixed)"&gt;#19637&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19734]: Update hierarchy for all hierarchical post types when deleting a ...</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 13 Jan 2012 18:37:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19734</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19734/1326479866018194</guid>
      <description>&lt;p&gt;
Update hierarchy for all hierarchical post types when deleting a parent post, not just for pages. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19637" title="#19637: defect (bug): Update hierarchy when deleting hierarchical CPT (closed: fixed)"&gt;#19637&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19377 (Notice: Undefined index: settings-updated in ...) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 13 Jan 2012 18:15:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19377#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19377#comment:4/1326478556478231</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19733" title="Prevent &amp;#34;Undefined index: settings-updated&amp;#34; notice in ..."&gt;[19733]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Prevent "Undefined index: settings-updated" notice in settings_errors(). Props garyc40. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19377" title="#19377: defect (bug): Notice: Undefined index: settings-updated in ... (closed: fixed)"&gt;#19377&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19733]: Prevent "Undefined index: settings-updated" notice in ...</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 13 Jan 2012 18:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19733</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19733/1326478555532017</guid>
      <description>&lt;p&gt;
Prevent "Undefined index: settings-updated" notice in settings_errors(). Props garyc40. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19377" title="#19377: defect (bug): Notice: Undefined index: settings-updated in ... (closed: fixed)"&gt;#19377&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Fri, 13 Jan 2012 18:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:96/1326477689550861</guid>
      <description>&lt;p&gt;
Is this feature being contemplated for version 3.4? Even just the bare bones infrastructure, without any UI support would be great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19825 (Bugs and modifications to localize script) updated</title>
      
        <dc:creator>ssmathias</dc:creator>

      <pubDate>Fri, 13 Jan 2012 17:26:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19825#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19825#comment:2/1326475594798358</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19825#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This has been discussed extensively in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11520" title="#11520: enhancement: print_scripts_l10n() should use json_encode() (closed: fixed)"&gt;#11520&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is true. I didn't see a reasoning for the string implementation versus storing the data, however, and believe this approach would ultimately serve better.
&lt;/p&gt;
&lt;p&gt;
[The code in 11520] is also the code, as currently implemented in trunk, that is generating a fatal error when I attempt to pass an object into wp_localize_script.
&lt;/p&gt;
&lt;p&gt;
Edit for clarity.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19825 (Bugs and modifications to localize script) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 13 Jan 2012 17:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19825#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19825#comment:1/1326474603916780</guid>
      <description>&lt;p&gt;
This has been discussed extensively in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11520" title="#11520: enhancement: print_scripts_l10n() should use json_encode() (closed: fixed)"&gt;#11520&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp33patch.txt attached to Ticket #19825</title>
      
        <dc:creator>ssmathias</dc:creator>

      <pubDate>Fri, 13 Jan 2012 16:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19825/wp33patch.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19825/wp33patch.txt/1326473311406840</guid>
      <description>&lt;p&gt;
Core patch modifying localize scripts functionality
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19825 (Bugs and modifications to localize script) created</title>
      
        <dc:creator>ssmathias</dc:creator>

      <pubDate>Fri, 13 Jan 2012 16:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19825</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19825/1326473275534894</guid>
      <description>&lt;p&gt;
After working in trunk, I noted that I get a fatal error when trying to localize some objects with wp_localize_script informing me that I cannot use an object of that type as an array. For tests, I've done this with $wp, $wp_query, $wpdb, and $wp_scripts on a clean install with no plugins.
&lt;/p&gt;
&lt;p&gt;
I also have been working on sites that would like to compress all of their JS calls into a single request where possible, but in the past I was not able to keep localizations that certain scripts required, and had to leave them out.
&lt;/p&gt;
&lt;p&gt;
With the changes I've made in this patch file, the issues regarding pushing arbitrary objects for localization are addressed. It also stores those objects, rather than a string of JS with $wp_scripts. This allows me to pull the localizations used for some files, and attach them instead to another file using wp_localize_script.
&lt;/p&gt;
&lt;p&gt;
As a side benefit, by not processing the object into JS until output, we are able to preserve the data cleanly, and reduce process on any script that may be dequeued later that has such dependencies.
&lt;/p&gt;
&lt;p&gt;
I would like to submit this patch as a core patch for a future release. Its design is fully compatible with existing functionality in 3.3, with the exception of any code modifying the underlying data key in an enqueued script directly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17242 (Themes: Allow flexible sizes for custom header uploads) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 13 Jan 2012 16:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17242#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17242#comment:26/1326472671648187</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think our first step needs to be deciding what we want to support, then deciding how that will work for theme developers.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I think it makes sense to support flexible widths &lt;strong&gt;and&lt;/strong&gt; heights.  Height is obvious, but even in fixed width themes allowing the header to extend past the content can help eliminate the boxy feel.
&lt;/li&gt;&lt;li&gt;We need to decide if we're going to allow for min and/or max.  Here are the possible options:
&lt;ol class="loweralpha"&gt;&lt;li&gt;Support flexible sizes for width and/or height.  This would let a theme author say any of the following:
&lt;ol&gt;&lt;li&gt;Header should be 1000px wide and 300px high
&lt;/li&gt;&lt;li&gt;Header should be 1000px wide and any height
&lt;/li&gt;&lt;li&gt;Header can be any width and 300px high
&lt;/li&gt;&lt;li&gt;Header can be any size
&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Support minimums.  This would add the ability to say that the header should be &lt;strong&gt;at least&lt;/strong&gt; 1000px wide or &lt;strong&gt;at least&lt;/strong&gt; 40px high.  This seems to make sense for widths more than heights.
&lt;/li&gt;&lt;li&gt;Support maximums.  This would add the ability to say that the header should be &lt;strong&gt;no more&lt;/strong&gt; than 1000px wide or &lt;strong&gt;no more&lt;/strong&gt; than 500px high.  This seems to make more sense for heights than widths.
&lt;/li&gt;&lt;li&gt;Support both min and max.  This would let the theme say that the header should be &lt;strong&gt;at least&lt;/strong&gt; 1000px wide and &lt;strong&gt;no more&lt;/strong&gt; than 500px high.
&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Once we decide the above we'll need to decide what theme authors need to do to add support.  It seems obvious to &lt;code&gt;add_theme_support()&lt;/code&gt; but depending on whether we support min and/or max we'll have to decide on the exact wording/syntax.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
My original stance was that it would be really nice to allow for the min/max options.  However, the more I think about it the more I realize this really encourages theme authors to take control away from users.  While I look at a 1000px wide design and think a header should be at least that wide, what's the big deal if a user wants a 500px wide header?  It seems like they should be able to make their site look however they want.  I think option 'a' that just allows fixed or flexible "helps you make things look the way you want" more than the others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19823 (typo fix in wp-includes/post.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Jan 2012 15:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19823#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19823#comment:2/1326469663139083</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17902 (Add a "Plugin Details" link to installed plugins.) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 13 Jan 2012 15:08:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17902#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17902#comment:9/1326467323729721</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17902#comment:8" title="Comment 8"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see why extensive editing of the existing markup would be necessary. Just use the same markup everywhere, since it shouldn't matter if the info comes from the readme file or from wp.org.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The rules are tied to specific element IDs which are written out by the &lt;code&gt;plugin_readme_information()&lt;/code&gt; and &lt;code&gt;install_plugin_information()&lt;/code&gt; functions.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;plugin_readme_information()&lt;/code&gt; function writes out the markup the same way as &lt;code&gt;install_plugin_information()&lt;/code&gt; does.  The element IDs are based on a query string variable (&amp;amp;tab=...).
&lt;/p&gt;
&lt;p&gt;
It would be possible to have the new function (&lt;code&gt;plugin_readme_information()&lt;/code&gt;) to ignore the query string and force the same id as &lt;code&gt;install_plugin_information()&lt;/code&gt;.  Do you think this would be confusing for future developers?
&lt;/p&gt;
&lt;p&gt;
Or did I completely misunderstand what you said?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Fri, 13 Jan 2012 13:01:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:15/1326459670366631</guid>
      <description>&lt;p&gt;
Oh drat, I left it as INNER JOIN, didn't I?  I meant for that to be LEFT JOIN.  My bad.
&lt;/p&gt;
&lt;p&gt;
Basically, if it can't find anything to join to, it will just return 'NULL' for those values.  So if you test for NULL in a field that would never be null if a value is returned (like post_id for instance, like I have) -- it will tell you if it found something to join with, or came up empty.
&lt;/p&gt;
&lt;p&gt;
The only thing I haven't considered if what if there's multiple instances of a meta_key -- if that would return multiple rows in the final result.  I wrote it assuming a max of 1 per.  I'll need to test for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17902 (Add a "Plugin Details" link to installed plugins.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 13 Jan 2012 12:21:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17902#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17902#comment:8/1326457267794480</guid>
      <description>&lt;p&gt;
Your patch has a property change on the class-wp-plugins-list-table.php file.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Genericize the rules to classes and edit the existing markup (and risk a regression)
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I don't see why extensive editing of the existing markup would be necessary. Just use the same markup everywhere, since it shouldn't matter if the info comes from the readme file or from wp.org.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 13 Jan 2012 12:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:14/1326456899624365</guid>
      <description>&lt;p&gt;
So, if it's an INNER JOIN, how could meta_id ever be null?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15311 (dynamic image resize (on the fly) using already available functions) updated</title>
      
        <dc:creator>aharner</dc:creator>

      <pubDate>Fri, 13 Jan 2012 11:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15311#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15311#comment:33/1326455955611147</guid>
      <description>&lt;p&gt;
I had run into an issue where I used direct URLs to my images that I was generating from a custom database, and in those URLs I had converted spaces to '%20' for proper URLs to my images.
&lt;/p&gt;
&lt;p&gt;
because the file structure had them as spaces, I had to do a quick str_replace to fix the problem.
&lt;/p&gt;
&lt;p&gt;
figured I'd just make this note here incase anyone else ever runs into that issue:
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;//after this line:
$actual_file_path = ltrim( $file_path['path'], '/' );
$actual_file_path = rtrim( ABSPATH, '/' ).$file_path['path'];
//ADDED THIS to replace '%20' from the URL with spaces:
$actual_file_path = str_replace('%20', ' ', $actual_file_path);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15548 (Cache inconsistencies between get_option and get_blog_option) updated</title>
      
        <dc:creator>mohanjith</dc:creator>

      <pubDate>Fri, 13 Jan 2012 11:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15548#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15548#comment:5/1326455308961032</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19824.patch attached to Ticket #19824</title>
      
        <dc:creator>linuxologos</dc:creator>

      <pubDate>Fri, 13 Jan 2012 11:40:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19824/19824.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19824/19824.patch/1326454823895273</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19824 (Capability checks missing for some links after a plugin/theme upgrade) created</title>
      
        <dc:creator>linuxologos</dc:creator>

      <pubDate>Fri, 13 Jan 2012 11:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19824</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19824/1326454762833282</guid>
      <description>&lt;p&gt;
After a plugin's/theme's update has been finished through the Dashboard &amp;gt; Updates (update-core.php) screen, the "Return to Plugins page" or "Return to Themes page" links are offered, but there is no check if current user can access those pages (plugins.php/themes.php).
&lt;/p&gt;
&lt;p&gt;
This problem can show up, if a user is given the update_core and one or both of update_plugins, update_themes capabilities, but doesn't have any of activate_plugins, edit_theme_options, switch_themes capabilities.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15548 (Cache inconsistencies between get_option and get_blog_option) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Jan 2012 11:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15548#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15548#comment:4/1326453623185030</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19822" title="#19822: defect (bug): get_blog_option doesn't return new value once the same option is ... (closed: duplicate)"&gt;#19822&lt;/a&gt; as a duplicate. Has a patch: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19822/patch.diff" title="Attachment 'patch.diff' in Ticket #19822"&gt;ticket:19822:patch.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19822/patch.diff" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19822 (get_blog_option doesn't return new value once the same option is ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Jan 2012 11:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19822#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19822#comment:1/1326453617078810</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15548" title="#15548: defect (bug): Cache inconsistencies between get_option and get_blog_option (closed: fixed)"&gt;#15548&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19820 (More post slug cleaning) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Jan 2012 11:08:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19820#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19820#comment:1/1326452905540059</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19820/19820.patch" title="Attachment '19820.patch' in Ticket #19820"&gt;19820.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19820/19820.patch" title="Download"&gt;â€‹&lt;/a&gt; adds the remaining &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Quotation_mark_glyphs#Quotation_marks_in_Unicode"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;quotation marks&lt;/a&gt; and &lt;code&gt;&amp;amp;times&lt;/code&gt; sign to the replacement list.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19820.patch attached to Ticket #19820</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Jan 2012 11:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19820/19820.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19820/19820.patch/1326452544857597</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19823 (typo fix in wp-includes/post.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Jan 2012 10:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19823#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19823#comment:1/1326451730397283</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>post.diff attached to Ticket #19823</title>
      
        <dc:creator>Latz</dc:creator>

      <pubDate>Fri, 13 Jan 2012 10:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19823/post.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19823/post.diff/1326451064542502</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19823 (typo fix in wp-includes/post.php) created</title>
      
        <dc:creator>Latz</dc:creator>

      <pubDate>Fri, 13 Jan 2012 10:37:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19823</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19823/1326451024772964</guid>
      <description>&lt;p&gt;
Minor typo in phpdoc block.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>patch.diff attached to Ticket #19822</title>
      
        <dc:creator>mohanjith</dc:creator>

      <pubDate>Fri, 13 Jan 2012 10:17:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19822/patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19822/patch.diff/1326449853647191</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19822 (get_blog_option doesn't return new value once the same option is ...) created</title>
      
        <dc:creator>mohanjith</dc:creator>

      <pubDate>Fri, 13 Jan 2012 10:15:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19822</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19822/1326449716709556</guid>
      <description>&lt;p&gt;
Once a blog option is cached into object cache any updates to the same option made with &lt;code&gt;update_option()&lt;/code&gt; are not propagated unless the cache expires or is removed by other means.
&lt;/p&gt;
&lt;p&gt;
In the attached patch I hook onto &lt;code&gt;updated_option&lt;/code&gt; action and update the option cached into site-options group and also calls &lt;code&gt;refresh_blog_details($wpdb-&amp;gt;blogid)&lt;/code&gt; if the updated option concerns blog details (Only for 'blogname','siteurl','post_count').
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19819 (Plugins repository: recently updated radiobutton disappeared so limits ...) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 13 Jan 2012 09:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19819#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19819#comment:4/1326447573664778</guid>
      <description>&lt;p&gt;
You may rephrase the description to ask for this removal to be reverted, and then reopen the ticket as an enhancement. I admit I miss the feature sometimes, but I also see that this type of search or sorting is quite irrelevant. I have no problems with this, and it's a recent decision by the project leadership, as I understand.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19732.diff attached to Ticket #19821</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Fri, 13 Jan 2012 09:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19821/19732.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19821/19732.diff/1326447190864734</guid>
      <description>&lt;p&gt;
Proposed patch + coding standard
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19821 (Make wp_validate_auth_cookie() filterable) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Fri, 13 Jan 2012 09:30:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19821</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19821/1326447035877954</guid>
      <description>&lt;p&gt;
When WordPress loads, it does not call the same functions as when login form is submitted - instead it uses different ones to validate that authentication cookie is present and valid. Call stack is as follows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;settings.php
WP::init()
wp_get_current_user()
get_currentuserinfo()
wp_validate_auth_cookie()
&lt;/pre&gt;&lt;p&gt;
When plugin wants to validate some extra things (e.g. decide if user can login by checking user meta), the only way is to replace one of functions defined in pluggable.php -  &lt;code&gt;wp_validate_auth_cookie()&lt;/code&gt; seems to be a good candidate for this. Unfortunately this can be done only once, so now it is impossible to use few plugins which wants to do some extra checks at the same time. Therefore I propose to extend the &lt;code&gt;wp_validate_auth_cookie()&lt;/code&gt; function by adding &lt;code&gt;validate_auth_cookie&lt;/code&gt; filter to it - see attached patch. It will allow to hook into the cookie validation process, without the need to replace pluggable function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19819 (Plugins repository: recently updated radiobutton disappeared so limits ...) updated</title>
      
        <dc:creator>michelwppi</dc:creator>

      <pubDate>Fri, 13 Jan 2012 09:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19819#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19819#comment:3/1326445537557985</guid>
      <description>&lt;p&gt;
I don't find this previous post using keys - recently updated - (the content was a little unsimilar to this purpose) :-(&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I agree with unmaintained plugins but I think results sorted by recently updating is a good way to detect what happens on  plugin latest months especially during WP version changing [[BR]]
&lt;/p&gt;
&lt;p&gt;
Best regards
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Fri, 13 Jan 2012 08:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:95/1326444965255986</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19819 (Plugins repository: recently updated radiobutton disappeared so limits ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Jan 2012 08:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19819#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19819#comment:2/1326444455948640</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19819 (Plugins repository: recently updated radiobutton disappeared so limits ...) closed</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 13 Jan 2012 08:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19819#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19819#comment:1/1326444338581854</guid>
      <description>wontfix: &lt;p&gt;
This is a decision. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19573" title="#19573: task (blessed): Remove 'Recently Updated' from plugin installer (closed: fixed)"&gt;#19573&lt;/a&gt;. Old, unmaintained plugins are already excluded form search. And please do a search on Trac before creating a ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19820 (More post slug cleaning) created</title>
      
        <dc:creator>honza.skypala</dc:creator>

      <pubDate>Fri, 13 Jan 2012 08:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19820</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19820/1326443485575520</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
removing a number of funky characters from post slugs in WP 3.3 is a great improvement, I suggest two more characters:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;â€ž (lower curly quotes, used by some european languages) - remove from slug
&lt;/li&gt;&lt;li&gt;Ã— (multiplay sign) - substitute with letter x
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Thx. Take care,
&lt;/p&gt;
&lt;p&gt;
Honza
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19819 (Plugins repository: recently updated radiobutton disappeared so limits ...) created</title>
      
        <dc:creator>michelwppi</dc:creator>

      <pubDate>Fri, 13 Jan 2012 08:06:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19819</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19819/1326442016108784</guid>
      <description>&lt;p&gt;
Plugins repository: Recently, we discover that the radiobutton "recently updated" has disappeared. &lt;br /&gt;
For what reason ? &lt;br /&gt;
By experience, it is not good because, by checking this during search, it is a way to avoid very old plugins about a subject and a way to find well maintained plugin...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the answer...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12104 ('moderate_comments' capability by itself should grant the user the ...) updated</title>
      
        <dc:creator>Mamaduka</dc:creator>

      <pubDate>Fri, 13 Jan 2012 07:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12104#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12104#comment:18/1326440122881870</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19428 (Twenty Eleven: One column layout w/ comment layout issue) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 13 Jan 2012 06:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19428#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19428#comment:2/1326436739496091</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looking at the CSS, this appears to be intentional, to use less space given that the width of the &lt;code&gt;primary&lt;/code&gt; div is quite narrow.
&lt;/p&gt;
&lt;pre class="wiki"&gt;.one-column .commentlist .avatar {
    background: none repeat scroll 0 0 transparent;
    display: block;
    left: auto;
    padding: 0;
    right: 1.625em;
    top: 1.625em;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19588 (Move to Trash results in a page with a "0") updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 13 Jan 2012 06:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19588#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19588#comment:2/1326435876677372</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19752.diff attached to Ticket #19752</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 13 Jan 2012 05:48:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19752/19752.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19752/19752.diff/1326433731642997</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19752 (Bad error message: "An error occurred while updating PLUGIN: The ...) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 13 Jan 2012 05:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19752#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19752#comment:1/1326433714067943</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just to add, this only happens with the bulk upgrader. For individual upgrades it just reports that the plugin is already up to date.
&lt;/p&gt;
&lt;p&gt;
Attached is a patch that reports an already up to date plugin/theme as a success (instead of an error). The "plugin is at the latest version" bit then appears under "show details". The current code doesn't really allow for a neutral message, it has to be either success or error, and success seems more appropriate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16690 (Hello Dolly readme.txt on Plugins SVN needs to be updated) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 13 Jan 2012 01:01:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16690#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16690#comment:7/1326416501406409</guid>
      <description>&lt;p&gt;
Why isn't Hello Dolly an external like Akismet is?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16690 (Hello Dolly readme.txt on Plugins SVN needs to be updated) updated</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Fri, 13 Jan 2012 00:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16690#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16690#comment:6/1326414602085289</guid>
      <description>&lt;p&gt;
Seriously, 5 months and still no movement on this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19687 (Third column of welcome panel wraps to a new row) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Fri, 13 Jan 2012 00:29:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19687#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19687#comment:8/1326414547272013</guid>
      <description>&lt;p&gt;
It works fine for me on Win XP and IE 8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>