<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 24 Nov 2016 23:46:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:3/1480031198277213</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38929#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...anyone modifying &lt;code&gt;$wp_filter&lt;/code&gt; directly shouldn't probably be doing so anyway after WordPress loads.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Don't think anybody should be modifying &lt;code&gt;$wp_filter&lt;/code&gt; directly in any case. Do you think it is a good idea to add "Doing it wrong..." somewhere? Perhaps in &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt; as it exists to fix that "bad behavior".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38924 (Getting 'embed_autourls' option still generates a DB query) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 24 Nov 2016 23:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38924#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38924#comment:1/1480030103498258</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38936 (Alter Table Always Expects a COLUMN; Crashes on a CONSTRAINT) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 24 Nov 2016 23:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38936#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38936#comment:1/1480028678060869</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the bug report, @philsown!
&lt;/p&gt;
&lt;p&gt;
Could you post the CREATE TABLE statement that's causing this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 24 Nov 2016 23:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:2/1480028529924350</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 24 Nov 2016 22:43:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:75/1480027419143741</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Couple more issues.
&lt;/p&gt;
&lt;p&gt;
1
I'm not sure the locale in &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; can be left to &lt;code&gt;undefined&lt;/code&gt;. I live in Italy, but I keep my operating system and browsers in English. Seems there are inconsistencies across browsers, see the screenshot below.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/6IGfEVZaln.jpg"&gt;&lt;img src="https://cldup.com/6IGfEVZaln.jpg" alt="https://cldup.com/6IGfEVZaln.jpg" crossorigin="anonymous" title="https://cldup.com/6IGfEVZaln.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Notice the OS default language is set to a "generic" English (no en-GB or en-US) and Chrome on the left displays an en-GB date format while Firefox on the right an en-US one. I have to manually change my OS language to en-US to get the same behaviour in both browsers. Besides the inconsistency, seems setting the locale to &lt;code&gt;undefined&lt;/code&gt; makes the date format dependent on the OS language, at least on macOS. This may vary on other platforms.
&lt;/p&gt;
&lt;p&gt;
By the way, the main issue is that I've set the admin UI in French :) Regardless of the OS or browser language, the date should be displayed in the format of the language set in the user profile.
&lt;/p&gt;
&lt;p&gt;
2
When quickly clicking twice the "Save Draft" button, I get two new drafts. While the list below the form shows just one new draft, on the Posts &amp;gt; Drafts screen I have two new ones. This is probably because the button doesn't get disabled when submitting the form as in the previous AJAX implementation.
Note: when the form gets re-rendered, focus should be moved to the title field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38939 (Twenty Seventeen: input backgrounds are only styled for webkit browsers) created</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 24 Nov 2016 22:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38939</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38939/1480026097778780</guid>
      <description>&lt;p&gt;
The styles for inputs are all styled with &lt;code&gt;background-image: -webkit-linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0))&lt;/code&gt;, this means there are situations where you may end up with dark text on dark backgrounds, for example when working with high contrast computer setups.
&lt;/p&gt;
&lt;p&gt;
We need a fallback for non-webkit browsers here, Twenty Sixteen does this by defining &lt;code&gt;background: #f7f7f7&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Originally reported by @schamane in &lt;a class="ext-link" href="https://wordpress.org/support/topic/twentyseventeen-input-fields-unreadable-on-reversed-screens/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/twentyseventeen-input-fields-unreadable-on-reversed-screens/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [39359]: Trunk is really 4.8-alpha now. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:55:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39359</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39359/1480024517990867</guid>
      <description>&lt;p&gt;
Trunk is really 4.8-alpha now.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:6/1480023787776953</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39358" title="Build/Test Tools: Add npm-shrinkwrap.json to 4.7.
By shrinkwraping ..."&gt;39358&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Add npm-shrinkwrap.json to 4.7.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By shrinkwraping our dependencies, the same versions of everything will be installed no matter what rules the dependency package.json has specified.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38657" title="#38657: task (blessed): Shrinkwrap npm dependencies for 4.7 (closed: fixed)"&gt;#38657&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39358]: Build/Test Tools: Add npm-shrinkwrap.json to 4.7.  By shrinkwraping ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39358</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39358/1480023787234716</guid>
      <description>&lt;p&gt;
Build/Test Tools: Add npm-shrinkwrap.json to 4.7.
&lt;/p&gt;
&lt;p&gt;
By shrinkwraping our dependencies, the same versions of everything will be installed no matter what rules the dependency package.json has specified.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38657" title="#38657: task (blessed): Shrinkwrap npm dependencies for 4.7 (closed: fixed)"&gt;#38657&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [39357]: Trunk is now 4.8-alpha. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39357</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39357/1480023467989790</guid>
      <description>&lt;p&gt;
Trunk is now 4.8-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:5/1480023346593719</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1480023343004232"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [39356]: Branch 4.7.</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39356</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39356/1480023119868123</guid>
      <description>&lt;p&gt;
Branch 4.7.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:49:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930#comment:4/1480016983386099</guid>
      <description>&lt;p&gt;
Added a patch to pass the 3rd arg to the filter. This arg is "Was the default value passed by the caller" which is used to choose if the &lt;code&gt;register_setting&lt;/code&gt; default should override the the &lt;code&gt;false&lt;/code&gt; default. In this case, like &lt;code&gt;update_option&lt;/code&gt;, it should.
&lt;/p&gt;
&lt;p&gt;
I added a unit test for this rather specific case where &lt;code&gt;alloptions&lt;/code&gt; is not loaded, which before the patch will fail from a notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38930.diff attached to Ticket #38930</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38930/38930.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38930/38930.diff/1480016894494359</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>kuzvac</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:42/1480015490103398</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21668#comment:41" title="Comment 41"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Patch needs a refresh.
&lt;/p&gt;
&lt;p&gt;
@kuzvac It only requires one of the two. So if someone doesn't has Imagick, GD will be used. So we are fine.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ok, thanks for clarifying.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:41/1480015158824847</guid>
      <description>&lt;p&gt;
Patch needs a refresh.
&lt;/p&gt;
&lt;p&gt;
@kuzvac It only requires one of the two. So if someone doesn't has Imagick, GD will be used. So we are fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38926 (REST API: Validate thumbnail ID in response) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38926#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38926#comment:2/1480014560917872</guid>
      <description>&lt;p&gt;
Good question - I'm not totally sure of the behaviour too. Perhaps we could not link to it if it's not found, but still put the value in the response. As WordPress actually just lets you store any ID in the field, it's plausible that people could be using it for something other than an attachment ID I guess.
&lt;/p&gt;
&lt;p&gt;
This is part of a broader question that has come up before: what do we do with data that is already stored, that is technically not valid. Ignoring the data from the REST API output also makes round-trips of that data very difficult, as we have to make a lot of exceptions on data validation.
&lt;/p&gt;
&lt;p&gt;
I'm tempted to err on the side of a clean API, rather than misconfigured data, though that's probably a controversial view. If there's an invalid ID stored in thumbnail_id, the API would output it as &lt;code&gt;null&lt;/code&gt;, if you updated the resource, it would then set the thumbnail ID to &lt;code&gt;null&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37056 (paginate_links should be a method on WP_Query) updated</title>
      
        <dc:creator>xavivars</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37056#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37056#comment:1/1480014159991165</guid>
      <description>&lt;p&gt;
I'd even go further, and have a function (or static method) so you provide the the base URL, the current and total pages, and other stuff like the format to use on the pages,... and then have that method used by the current &lt;code&gt;paginate_links()&lt;/code&gt; method (to keep backwards compatiblity).
&lt;/p&gt;
&lt;p&gt;
That would make it much easier to reuse the logic of the pagination in other places (like plugins, or &lt;a class="ext-link" href="https://github.com/timber/timber/blob/master/lib/Pagination.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Timber&lt;/a&gt;) relying on core code, so no more ugly code needs to be written to simulate that behaviour.
&lt;/p&gt;
&lt;p&gt;
That would also make it much easier to unit test (no need to setup too much WordPress global stuff, but relying on input parameters only.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>kuzvac</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:40/1480014023485963</guid>
      <description>&lt;p&gt;
I think the final patch will not be submitted, because it's required Imagick &amp;amp; GD work. But on in cheap hosting Imagick can not be installed.
This is my opinion
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38915 (Improvements to password reset) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38915#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38915#comment:3/1480013260739998</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #19629,​38938 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:44:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=19629%2C38938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=19629%2C38938/1480013072466608</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for opening a ticket! We're already tracking this enhancement in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19629" title="#19629: task (blessed): return option for media_sideload_image (closed: fixed)"&gt;#19629&lt;/a&gt;. Would you mind checking out the current patch and share yours there?
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>wordpress_38938.diff attached to Ticket #38938</title>
      
        <dc:creator>dotancohen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38938/wordpress_38938.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38938/wordpress_38938.diff/1480012759273089</guid>
      <description>&lt;p&gt;
Patch to optionally return the ID of a sideloaded media file.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:39/1480012544640422</guid>
      <description>&lt;p&gt;
Currently this ticket is lacking a finalized patch, so it is not being considered for any release. If one was made, the earliest it could go in would be 4.8 as 4.7 is well beyond enhancement window.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38938 (WP API does not expose the ID of sideloaded media.) created</title>
      
        <dc:creator>dotancohen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38938/1480012297698653</guid>
      <description>&lt;p&gt;
Retrieving the ID of sideloaded media requires horrible workarounds:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/46363/get-image-id-after-uploading-with-media-sideload-image"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/questions/46363/get-image-id-after-uploading-with-media-sideload-image&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I will attach a patch to this issue which makes life easier for WP Theme and Plugin developers who need this feature.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38937 (Twenty Seventeen: Specific fonts for Thai font) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38937#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38937#comment:1/1480012203515093</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
corresponding patch
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38937.diff attached to Ticket #38937</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38937/38937.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38937/38937.diff/1480012161345612</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38932 (Add unit (px) to suggested image size in customizer) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38932#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38932#comment:1/1480011377271014</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
From an accessibility perspective, worth noting all similar abbreviations should be avoided or expanded with the full form. For example, the suggested dimensions (including the missing "px") gets read out by a screen reader as:
&lt;code&gt;one two zero zero times two eight zero pee ex&lt;/code&gt;
Numbers should be properly formatted too.
Recently, in another project, I've changed a similar string in "2000 by 1200 pixels" which is slightly better.
&lt;/p&gt;
&lt;p&gt;
Same for the file size: &lt;code&gt;one gee bee&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
By the way, this applies to all the similar cases in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38937 (Twenty Seventeen: Specific fonts for Thai font) created</title>
      
        <dc:creator>Imnok</dc:creator>

      <pubDate>Thu, 24 Nov 2016 17:40:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38937/1480009206130780</guid>
      <description>&lt;p&gt;
Hi there, Twenty Seventeen theme is very cool! I really love it.
&lt;/p&gt;
&lt;p&gt;
To make it better with Thai font, I think we can add specific fonts as well.
Here is my suggestion.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* Typography for Thai Font */
html[lang="th"] h1,
html[lang="th"] h2,
html[lang="th"] h3,
html[lang="th"] h4,
html[lang="th"] h5,
html[lang="th"] h6 {
line-height: 1.65;
font-family: "Sukhumvit Set", "Helvetica Neue", helvetica, arial, sans-serif;
}
html[lang="th"] body,
html[lang="th"] button,
html[lang="th"] input,
html[lang="th"] select,
html[lang="th"] textarea {
line-height: 1.8;
font-family: "Helvetica Neue", helvetica, arial, sans-serif;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38936 (Alter Table Always Expects a COLUMN; Crashes on a CONSTRAINT) created</title>
      
        <dc:creator>philsown</dc:creator>

      <pubDate>Thu, 24 Nov 2016 17:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38936</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38936/1480008313833349</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I'm attempting to activate a plugin I'm developing. The database creation scripts have CONSTRAINTs on them. When I attempt to reactivate, I'm getting this error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress database error: [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONSTRAINT `mytable_mycol_foreign` FOREIGN KEY (`mycol' at line 1]
ALTER TABLE wp_mytable ADD COLUMN CONSTRAINT `mytable_mycol_foreign` FOREIGN KEY (`mycol`) REFERENCES `myothertable` (`myothercol`)
&lt;/pre&gt;&lt;p&gt;
As you can see the SQL error lies in &lt;code&gt;ADD COLUMN CONSTRAINT&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This is being generated in &lt;code&gt;wp-admin/includes/upgrade.php&lt;/code&gt; around line 2392
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// For every remaining field specified for the table.
&lt;/span&gt;&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cfields&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$fieldname&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$fielddef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Push a query line into $cqueries that adds the field to that table.
&lt;/span&gt;        &lt;span class="nv"&gt;$cqueries&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ALTER TABLE &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ADD COLUMN &lt;/span&gt;&lt;span class="si"&gt;$fielddef&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$for_update&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fieldname&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Added column '&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fieldname&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;ADD COLUMN&lt;/code&gt; is hardcoded and is creating this SQL error. I googled for a solution but didn't find anything.
&lt;/p&gt;
&lt;p&gt;
I've tried it with the constraints being part of the full table creation statement, and also as a stand alone statement, with the same results.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38935 (Proposition to add the theme mod name as a param to the dynamic ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 24 Nov 2016 17:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38935#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38935#comment:1/1480007213267801</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38014 (blank /wp-admin/index.php after upgrade from 4.5.x, missing Save ...) updated</title>
      
        <dc:creator>scaturan</dc:creator>

      <pubDate>Thu, 24 Nov 2016 17:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38014#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38014#comment:14/1480007167020614</guid>
      <description>&lt;p&gt;
the problem still exist on WordPress 4.7-RC1 both under PHP 5.6 and 7.0.13 -- the remedy is the same as I noted earlier.
&lt;/p&gt;
&lt;p&gt;
I also noticed that opening /wp-admin/update-core.php renders a blank page alongside a 500 Internal Server Error response status, but after a browser REFRESH, a 200 response status is sent and the page renders correctly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38935.patch attached to Ticket #38935</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Thu, 24 Nov 2016 15:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38935/38935.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38935/38935.patch/1480000104527183</guid>
      <description>&lt;p&gt;
add the theme mod name to the dynamic theme_mod_{$name} filters
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38933 (Document wp-admin/js/editor.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Nov 2016 15:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38933#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38933#comment:1/1480000084273819</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38935 (Proposition to add the theme mod name as a param to the dynamic ...) created</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Thu, 24 Nov 2016 15:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38935</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38935/1480000040218422</guid>
      <description>&lt;p&gt;
Hi !
It would be convenient to be able to target a specific theme mod name when applying the same callback to all theme mods with &lt;code&gt;add_filter( "theme_mod_{$name}", '_my_generic_callback' )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Right now we need to extract the theme mod with a code looking like this :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;_my_generic_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$theme_mod_value&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//extract theme mod name
&lt;/span&gt;  &lt;span class="nv"&gt;$_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current_filter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nv"&gt;$_ptrn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'theme_mod_'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_ptrn&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_ptrn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$theme_mod_value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$_mod_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_ptrn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="nv"&gt;$_filter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;//do things now
&lt;/span&gt;  &lt;span class="c1"&gt;// ...
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>missing_px.jpg attached to Ticket #38932</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38932/missing_px.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38932/missing_px.jpg/1479998974251793</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38934 (Bug with Category selector view when using child categories) created</title>
      
        <dc:creator>Venutius</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38934</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38934/1479998528202868</guid>
      <description>&lt;p&gt;
There seems to be a bug when editing a page and using child categories.
&lt;/p&gt;
&lt;p&gt;
Lets say I have a category with ten child categories.
&lt;/p&gt;
&lt;p&gt;
If I add on of those children to the page and then save the page, when I come back to look at those categories the parent child relationship is lost in the display. What I mean by this is that the master category will noly display one child (the one that was picked for the page) the other children are now displayed as if they were independent top level categories.
&lt;/p&gt;
&lt;p&gt;
This makes it very difficult to select the right categories for a post when you come back to edit it.
&lt;/p&gt;
&lt;p&gt;
The workaround is to deselect all categories and save the page. The parent child relationship will then re-establish itself and the categories can be selected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>editorjs.diff attached to Ticket #38933</title>
      
        <dc:creator>terwdan</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:28:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38933/editorjs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38933/editorjs.diff/1479997726583976</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38933 (Document wp-admin/js/editor.js) created</title>
      
        <dc:creator>terwdan</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38933</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38933/1479997708061157</guid>
      <description>&lt;p&gt;
Documented the wp-admin/js/editor.js file.
&lt;/p&gt;
&lt;p&gt;
Please also give props to &lt;a class="ext-link" href="https://profiles.wordpress.org/ireneyoast"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ireneyoast&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38932 (Add unit (px) to suggested image size in customizer) created</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38932</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38932/1479996439057895</guid>
      <description>&lt;p&gt;
When you go to Customizer &amp;gt; Header Media &amp;gt; Add new image
&lt;/p&gt;
&lt;p&gt;
you see a notice about image size like:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggested image dimensions: 2000 × 1200&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
It should have a unit
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggested image dimensions: 2000 × 1200 px&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) updated</title>
      
        <dc:creator>lucasstark</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930#comment:3/1479995036280044</guid>
      <description>&lt;p&gt;
The warning is coming from filter_default_option yes, since it get's called though the applying of the filter, default_option_WPLANG
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) updated</title>
      
        <dc:creator>lucasstark</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:42:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930#comment:2/1479994952585575</guid>
      <description>&lt;p&gt;
I am using the REST API and a custom endpoint to allow users to create / manage sites inside of a multisite.   Inside of my sites custom endpoint I have a create method, where I call the following:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$current_site_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wpmu_create_blog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$prepared_data&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$prepared_data&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$prepared_data&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;get_current_user_id&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'public'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When I call that function it raises the warning when the filter "default_option_WPLANG" is applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38931 (`update_option()` race condition with non-autoloaded options) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38931#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38931#comment:1/1479994756783857</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930#comment:1/1479994730972370</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Pushing into 4.7 for review, as the 3rd parameter was added in 4.7 (on 3 of the 5 instances of the filter) &amp;amp; the warning may be coming from &lt;code&gt;filter_default_option()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@lucasstark Can you give any more information over what option calls are triggering it for you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38931.diff attached to Ticket #38931</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38931/38931.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38931/38931.diff/1479994361857077</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38931 (`update_option()` race condition with non-autoloaded options) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:31:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38931</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38931/1479994315515359</guid>
      <description>&lt;p&gt;
Starting back in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25664" title="When queries fail in option functions, bail before setting cache.
 ..."&gt;[25664]&lt;/a&gt; there's a race condition with object caches where &lt;code&gt;get_option()&lt;/code&gt; will return a value, but &lt;code&gt;update_option()&lt;/code&gt; will refuse to update it.
This is kind-of-related to &lt;code&gt;alloptions&lt;/code&gt;, but affects non-autoloaded options (which are not in &lt;code&gt;alloptions&lt;/code&gt;, but in their own cache).
&lt;/p&gt;
&lt;p&gt;
Consider the following scenario:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Process 1: Fetch option_a. Fills local cache.
Process 2: Update option_a.
Process 1: Delete option_a.
Process 2: Update DB.
Process 1: Delete from DB. Delete from remote cache.
Process 2: Update remote cache.
...
Process 5: Fetch option_a. Fills local cache from remote cache.
Process 5: Update option_a.  FAIL. DB doesn't have option. abort. cache not updated.
...
(repeat process 5 above many times)
Process 10: Get option_a (Still the value that Process 2 set in cache, even though it's not in the DB)
Process 10: Update option_a (Doing the same as Process 5 now). FAIL.
&lt;/pre&gt;&lt;p&gt;
Seems very racey and unlikely, but I've seen it happen on WordPress.org at least twice in the last few weeks when we update Jetpack (which makes heavy usage of the options table, and is loaded on most WordPress.org requests).
&lt;/p&gt;
&lt;p&gt;
When it happens, &lt;code&gt;get_option()&lt;/code&gt; will continue to return a stale value from the cache that no longer exists in the DB and &lt;code&gt;update_option()&lt;/code&gt; will fail to update the option as long as it exists in cache.
If a plugin is performing an operation to update the stale option often, it can cause a huge load spike on the database server of never-ending failing &lt;code&gt;UPDATE&lt;/code&gt; queries.
The only way to 'fix' it is to create the DB row manually, or flush the object cache key.
&lt;/p&gt;
&lt;p&gt;
The patch attached attempts to perform an &lt;code&gt;add_option()&lt;/code&gt; in the case of the &lt;code&gt;update_option()&lt;/code&gt; DB query failing.
This isn't exactly a new behaviour for options - &lt;code&gt;add_option()&lt;/code&gt; will effectively perform an &lt;code&gt;update_option()&lt;/code&gt; in the event the option you're trying to add already exists (through it using &lt;code&gt;INSERT .. ON DUPLICATE KEY UPDATE..&lt;/code&gt;), doing it in reverse doesn't seem that out of the question.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) created</title>
      
        <dc:creator>lucasstark</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930/1479991904474795</guid>
      <description>&lt;p&gt;
A warning will be raised inside of option.php, check_default_option when the following code is called on line 420.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// Make sure the option doesn't already exist. We can check the 'notoptions' cache before we ask for a db query
&lt;/span&gt;        &lt;span class="nv"&gt;$notoptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'notoptions'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$notoptions&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$notoptions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$option&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="sd"&gt;/** This filter is documented in wp-includes/option.php */&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'default_option_'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The default_option filter expects three arguments, only two are passed here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:1/1479991119624382</guid>
      <description>&lt;p&gt;
As noted in slack, I'll also mention that there's the possibility we could've simply used a new variable &lt;code&gt;$wp_filter_hooks&lt;/code&gt; (for example) and migrated added hooks over as needed (instead of calling &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt;)  - this would've have the ability of avoiding any lost hooks and fatal errors, but while having all our public API's continue to work.
&lt;/p&gt;
&lt;p&gt;
I can't really see any downside to that, but given the lack of bug reports during 4.7, and the ability to support the most common example I can think of (Batcache) through &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff" title="Attachment '38929.diff' in Ticket #38929"&gt;38929.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38929/38929.diff" title="Download"&gt;​&lt;/a&gt; I don't see the need to explore that option further at this point - anyone modifying &lt;code&gt;$wp_filter&lt;/code&gt; directly shouldn't probably be doing so anyway after WordPress loads.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>test-wp-hook.php attached to Ticket #38929</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38929/test-wp-hook.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38929/test-wp-hook.php/1479990619736590</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>38929.diff attached to Ticket #38929</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:27:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff/1479990465186783</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:25:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929/1479990336665049</guid>
      <description>&lt;p&gt;
As noted in &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479936387003877"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt;, with &lt;code&gt;WP_Hook&lt;/code&gt; in 4.7, we've seemingly glossed over the impact of these changes upon &lt;code&gt;advanced-cache.php&lt;/code&gt; dropins.
Prior to &lt;code&gt;WP_Hook&lt;/code&gt; being committed, we'd attempted to work around filter additions from &lt;code&gt;advanced-cache.php&lt;/code&gt; with some funky code which we eventually reverted in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38251" title="Bootstrap/Load: Revert Plugin Global restoration around ..."&gt;[38251]&lt;/a&gt; - we didn't *really* need it at the time, but with &lt;code&gt;WP_Hook&lt;/code&gt; additions we're now in the scenario where something like that IS needed.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Hook&lt;/code&gt; includes the ability to upgrade a non-wp_hook &lt;code&gt;$wp_filter&lt;/code&gt; array to an array of &lt;code&gt;WP_Hooks&lt;/code&gt; to account for cases where filters are added before &lt;code&gt;plugins.php&lt;/code&gt; / &lt;code&gt;WP_Hook&lt;/code&gt; loads.
&lt;/p&gt;
&lt;p&gt;
With the upgrade to 4.7, any user who is running an object cache which performs direct &lt;code&gt;$wp_filter&lt;/code&gt; modifications is likely to cause a fatal error, unless they've updated the cache first and done something like Batcache: &lt;a class="ext-link" href="https://github.com/Automattic/batcache/pull/76/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/batcache/pull/76/files&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However, thanks to the upgrade code, we can simply call it again after any non-code files are included - thankfully, the only user file which this could apply to is &lt;code&gt;advanced-cache.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Attached is a 4 line patch (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff" title="Attachment '38929.diff' in Ticket #38929"&gt;38929.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38929/38929.diff" title="Download"&gt;​&lt;/a&gt;) which upgrades the &lt;code&gt;$wp_filter&lt;/code&gt; modifications so that a older &lt;code&gt;advanced-cache.php&lt;/code&gt; is compatible with 4.7+.
&lt;/p&gt;
&lt;p&gt;
At this point of the pageload, most WordPress installs will have *zero* filters registered, unless something such as WP-CLI is in use, or a filter was added before WordPress loaded, so the performance of this is a no-op for most people.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
It's worth noting that there exist some incompatibilities with &lt;code&gt;WP_Hook&lt;/code&gt;, in that any plugin which manually alters &lt;code&gt;$wp_filter&lt;/code&gt; will at best cause a PHP notice, and at worst, cause a PHP fatal error (although it's also still possible to manually manipulate &lt;code&gt;$wp_filter&lt;/code&gt; if you must, by setting entire arrays rather than modifying it - see below)
&lt;/p&gt;
&lt;p&gt;
One of these cases affects &lt;code&gt;advanced-cache.php&lt;/code&gt; - If something has added a hook, and &lt;code&gt;advanced-cache.php&lt;/code&gt; attempts to also add a hook &lt;em&gt;through manual &lt;code&gt;$wp_filter&lt;/code&gt; modification&lt;/em&gt; it'll cause a PHP notice and the filter addition will fail - I feel that this is an edgecase enough not to need to support.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38929/test-wp-hook.php" title="Attachment 'test-wp-hook.php' in Ticket #38929"&gt;test-wp-hook.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38929/test-wp-hook.php" title="Download"&gt;​&lt;/a&gt; is a stand-alone-ish script to obviously show these edge cases, but also shows that the diff in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff" title="Attachment '38929.diff' in Ticket #38929"&gt;38929.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38929/38929.diff" title="Download"&gt;​&lt;/a&gt; should work as expected, if you discount the PHP notice possibility and the hopefully unlikely fatal.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38928 (Default theme content - problem with slugs) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38928</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38928/1479989287561432</guid>
      <description>&lt;p&gt;
I installed latest &lt;code&gt;RC1-39355&lt;/code&gt;, activated Twenty Seventeen and went to Customizer.
&lt;/p&gt;
&lt;p&gt;
There were 5 pages created, but with number in slug, for example &lt;code&gt;contact-2&lt;/code&gt;, &lt;code&gt;blog-2&lt;/code&gt;, etc. It is a fresh install and I did not have any pages created before. For every created page I have 3 records in database:
&lt;/p&gt;
&lt;pre class="wiki"&gt;- page: auto-draft &amp;gt; a-homepage-section
- page: publish &amp;gt; a-homepage-section-2
- revision: inherit &amp;gt; 20-revision-v1
&lt;/pre&gt;&lt;p&gt;
I do not think it is necessary? When default page during WP installation is created, there is only one &lt;code&gt;publish&lt;/code&gt; record in database.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38920 (Use REST API for link query in editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:06:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38920#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38920#comment:4/1479989205767574</guid>
      <description>&lt;p&gt;
I'm totally new to the REST API so I may be wrong, but maybe one thing to consider when using the API in core is that it returns by default all the post fields including the content. With very long posts the response could be huge, while here we need just the ID, title, permalink, and date (the "info").
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38927 (Twenty Seventeen: site navigation to position:fixed too early on front ...) created</title>
      
        <dc:creator>LittleBigThing</dc:creator>

      <pubDate>Thu, 24 Nov 2016 11:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38927</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38927/1479988157590888</guid>
      <description>&lt;p&gt;
Twenty Seventeen uses &lt;code&gt;position: fixed&lt;/code&gt; for the main-navigation when the header image/video is scrolled by on larger screens. The fixed position is set by adding &lt;code&gt;.site-navigation-fixed&lt;/code&gt; to the div &lt;code&gt;.navigation-top&lt;/code&gt; using JS. All working smooth, except on the front/blog page when no header image/video is set.
&lt;/p&gt;
&lt;p&gt;
The class &lt;code&gt;site-navigation-fixed&lt;/code&gt;is set based on the offset of the navigation (&lt;code&gt;headerOffset&lt;/code&gt;) in assets/js/global.js:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isFrontPage &amp;amp;&amp;amp; $customHeaderImage.length ) {
	headerOffset = $customHeader.innerHeight() - navigationOuterHeight;
} else {
	headerOffset = $customHeader.innerHeight();
}
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;$customHeaderImage.length&lt;/code&gt;is never 0 since there is always a &lt;code&gt;div.custom-header-image&lt;/code&gt;, even if there is no custom header is set (see template-parts/header/header-image.php).
&lt;/p&gt;
&lt;p&gt;
IMHO, the cleanest fix would be to avoid having a &lt;code&gt;div.custum-header-image&lt;/code&gt; when there is no header image/video set. This is achieved by adding a check in template-parts/header/header-image.php before outputting &lt;code&gt;div.custum-header-image&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php if ( has_header_image() || has_header_video() ) : ?&amp;gt;
	&amp;lt;div class="custom-header-image"&amp;gt;
		&amp;lt;?php the_custom_header_markup(); ?&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Another option would be to check whether &lt;code&gt;div.custum-header-image&lt;/code&gt; is empty based on its html content (including some trimming): &lt;code&gt;$.trim($customHeaderImage.html())&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
So something like this in assets/js/global.js:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isFrontPage &amp;amp;&amp;amp; $.trim($customHeaderImage.html()) ) {
	headerOffset = $customHeader.innerHeight() - navigationOuterHeight;
} else {
	headerOffset = $customHeader.innerHeight();
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 24 Nov 2016 11:35:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:74/1479987318548672</guid>
      <description>&lt;p&gt;
Hello everyone :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38342#comment:68" title="Comment 68"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Added calls to wp.a11y.speak() for success and failure when adding a draft. (not sure why but I didn't hear failures in voiceover/chrome although the code executed).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
That's probably because of this bug: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36853" title="#36853: defect (bug): Safari and VoiceOver don't announce repeated, identical, aria live messages (closed: fixed)"&gt;#36853&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, I'd recommend to use the &lt;code&gt;assertive&lt;/code&gt; parameter when calling &lt;code&gt;wp.a11y.speak()&lt;/code&gt;, this way the success/error messages will be announced immediately, without waiting for the screen reader to finish what it's currently reading out.
&lt;/p&gt;
&lt;p&gt;
I'd suggest to review a bit the error messages too. Currently, the visible ones are based on a try/catch and when there is a response that returns an error the message is:
1 - "Content, title, and excerpt are empty."
when there is no response:
2 - "An error has occurred. Please reload the page and try again."
&lt;/p&gt;
&lt;p&gt;
Instead, the audible error message is always the same:
3 - "An error has occurred. Please reload the page and try again."
&lt;/p&gt;
&lt;p&gt;
About 1, there's no "excerpt" field here. I see the API uses &lt;code&gt;wp_insert_post()&lt;/code&gt; but the message is not appropriate in this case.
&lt;/p&gt;
&lt;p&gt;
About 3, not sure why it should be different from the visual one. I'd say it should be paired with the visual messages to distinguish the two cases.
&lt;/p&gt;
&lt;p&gt;
Other quirks noticed about error handling:
&lt;/p&gt;
&lt;p&gt;
1
after a draft is created successfully:
leave empty the form and submit again
no error message is displayed
&lt;/p&gt;
&lt;p&gt;
2
refresh the page
leave empty the form and submit again
the error message is correctly displayed
now fill the form fields and submit
the new draft is correctly created but the error message is still displayed
&lt;/p&gt;
&lt;p&gt;
3
the error notice is displayed with the wrong colors, it currently uses a wrong CSS class &lt;code&gt;notice-info&lt;/code&gt; should be &lt;code&gt;notice-error&lt;/code&gt; instead
&lt;/p&gt;
&lt;p&gt;
Lastly, I'd consider to avoid inline styles e.g. &lt;code&gt;style="display: none;"&lt;/code&gt;, and use the CSS class &lt;code&gt;hidden&lt;/code&gt; when possible.
&lt;/p&gt;
&lt;p&gt;
I'm also noticing a couple more things that should be probably improved about date formatting and doubled entries, will try to post later after some more testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38926 (REST API: Validate thumbnail ID in response) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 24 Nov 2016 10:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38926#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38926#comment:1/1479984327391044</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38926 (REST API: Validate thumbnail ID in response) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 24 Nov 2016 10:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38926</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38926/1479984128192691</guid>
      <description>&lt;p&gt;
I'm not sure if this is expected or not, but I'll report it because it seems unexpected to me.
&lt;/p&gt;
&lt;p&gt;
Maybe this is also not really the problem of the REST API, but it affects it regardless.
&lt;/p&gt;
&lt;p&gt;
If the post has a thumbnail ID that is invalid (e.g. the post was imported with invalid IDs), it is still returned by the API. If linked resources are embedded, there will be a 404 error inside the response.
&lt;/p&gt;
&lt;p&gt;
Of course when someone uses the API, they should check for errors in the embeds, but it would be nice if linked resources don't 404.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;has_post_thumbnail&lt;/code&gt; doesn't seem to check this either...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>prasad-nevase</dc:creator>

      <pubDate>Thu, 24 Nov 2016 10:04:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:38/1479981856275591</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21668#comment:37" title="Comment 37"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's add this early in for 4.6. I will do some more testing on the current patch in the meanwhile.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This will be very interesting and helpful feature. I didn't find this in 4.6. As WordPress 4.7 RC is already out, could someone please confirm tentatively when this would be included in core?
&lt;/p&gt;
&lt;p&gt;
Thanks in advance!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38921 (Defining filter pre_get_table_charset causes errors) updated</title>
      
        <dc:creator>cjbj</dc:creator>

      <pubDate>Thu, 24 Nov 2016 09:20:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38921#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38921#comment:2/1479979204595413</guid>
      <description>&lt;p&gt;
I can confirm this bug. We discussed it in more detail on wpse: &lt;a class="ext-link" href="http://wordpress.stackexchange.com/q/247109/75495"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/q/247109/75495&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.27.diff attached to Ticket #17817</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 08:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.27.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.27.diff/1479975392605935</guid>
      <description>&lt;p&gt;
Upgrade filters added manually in advanced-cache.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>0001-Support-override-of-depth-constraint-on-reply-link.patch attached to Ticket #38925</title>
      
        <dc:creator>TravisR</dc:creator>

      <pubDate>Thu, 24 Nov 2016 06:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38925/0001-Support-override-of-depth-constraint-on-reply-link.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38925/0001-Support-override-of-depth-constraint-on-reply-link.patch/1479969767332937</guid>
      <description>&lt;p&gt;
git patch for the change
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38925 (Allow override of depth limits on comment reply link) created</title>
      
        <dc:creator>TravisR</dc:creator>

      <pubDate>Thu, 24 Nov 2016 06:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38925</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38925/1479969667937054</guid>
      <description>&lt;p&gt;
The core code currently hides the Reply link if a comment is at the maxDepth setting for comment nesting, but this appears to only be a constraint on the presentation. The API still allows replies through URL parameters and the REST interface, which demonstrates that there is not a functional reason for the constraint.
&lt;/p&gt;
&lt;p&gt;
I'm proposing that plugin authors are allowed to override this constraint by setting &lt;code&gt;$args['limit_by_depth'] = false&lt;/code&gt; in a &lt;code&gt;comment_reply_link_args&lt;/code&gt; filter. This requires only a minor, inconsequential change to comment-template.php per the attached patch.
&lt;/p&gt;
&lt;p&gt;
Note the '&lt;a class="ext-link" href="https://wordpress.org/plugins/infinite-comment-replies/developers/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Infinite Comment Replies&lt;/a&gt;' plugin currently achieves this by completely rewriting the reply link and thus masking everything that is handled in the core production of the link. The proposal above is a better option to achieve the same effect.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>38924.diff attached to Ticket #38924</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 24 Nov 2016 06:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38924/38924.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38924/38924.diff/1479968422931614</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38924 (Getting 'embed_autourls' option still generates a DB query) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 24 Nov 2016 06:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38924</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38924/1479968402474658</guid>
      <description>&lt;p&gt;
I noticed this behavior while debugging a plugin that checks &lt;code&gt;get_option( 'embed_autourls' )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;default-filters.php&lt;/code&gt; contains &lt;code&gt;add_filter( 'default_option_embed_autourls', '__return_true' )&lt;/code&gt;, but &lt;code&gt;get_option()&lt;/code&gt; will have already queried for the option before that filter is applied.
&lt;/p&gt;
&lt;p&gt;
The attached patch would switch to &lt;code&gt;pre_option_embed_autourls&lt;/code&gt; to shortcircuit &lt;code&gt;get_option()&lt;/code&gt; before it queries for anything.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>38922-2.diff attached to Ticket #38922</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Thu, 24 Nov 2016 04:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38922/38922-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38922/38922-2.diff/1479962993549745</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Thu, 24 Nov 2016 04:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:3/1479962959452112</guid>
      <description>&lt;p&gt;
38922-2 corrects the extra &lt;code&gt;=&lt;/code&gt; and ends the line with &lt;code&gt;,&lt;/code&gt; instead of &lt;code&gt;;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Also keeps the old ajax function, and uses it to retrieve the limit in a new GET request so as to preserve hook backwards compatibility with context. In order to have context but not have a second GET request the REST API would likely need to have an endpoint that uses the min-chars filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [39355]: Post-4.7 RC1 bump. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 04:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39355</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39355/1479961738663102</guid>
      <description>&lt;p&gt;
Post-4.7 RC1 bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [39354]: WordPress 4.7 RC1. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 04:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39354</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39354/1479960144536022</guid>
      <description>&lt;p&gt;
WordPress 4.7 RC1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38921 (Defining filter pre_get_table_charset causes errors) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 24 Nov 2016 03:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38921#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38921#comment:1/1479958813106960</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the bug report @haoran!
&lt;/p&gt;
&lt;p&gt;
We can definitely get this fixed up. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38858 (Prepare bundled themes for 4.7) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 03:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38858#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38858#comment:7/1479958214462558</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38923 (Introduce `WP_Action_Handler` to clean up admin action mess) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38923#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38923#comment:1/1479951245898431</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38923/38923.diff" title="Attachment '38923.diff' in Ticket #38923"&gt;38923.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38923/38923.diff" title="Download"&gt;​&lt;/a&gt; shows what I have in mind. The core of this patch are the new files &lt;code&gt;wp-admin/includes/class-wp-action-handler.php&lt;/code&gt; and &lt;code&gt;wp-admin/includes/action-handler.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To test the behavior of the new class and to build it in a way that makes sense, I also created implementations for two screens, &lt;code&gt;user-new.php&lt;/code&gt; and &lt;code&gt;post.php&lt;/code&gt;. They both have their own action handler classes, so the code two handle their actions has been moved into these classes and the screen files are much shorter now as a result.
Functionality-wise there have not been any changes in the patch, everything should work exactly as before.
&lt;/p&gt;
&lt;p&gt;
While the action handler class was made specifically for use-cases in the way that &lt;code&gt;user-new.php&lt;/code&gt; works, it also brings significant improvements in terms of testing and extendability to &lt;code&gt;post.php&lt;/code&gt; although that file works completely different (no messages, basically the entire file is an action clause). The functionality for the &lt;code&gt;edit&lt;/code&gt; action was left in the main file since this is not really just an action, but rather displays the entire regular admin screen.
&lt;/p&gt;
&lt;p&gt;
I could probably describe a lot more here, but looking at the code will likely give the best overview anyway. If there are any questions about the approach, please ask. Also feel free to tear it apart - this patch should of course be the opener for a discussion.
&lt;/p&gt;
&lt;p&gt;
Regardless of how we will scaffold such a class, I think this will definitely be a valuable improvement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38918-forced-test.diff attached to Ticket #38918</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38918/38918-forced-test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38918/38918-forced-test.diff/1479951200864624</guid>
      <description>&lt;p&gt;
Forced output of plugin delete failure message (even when successfully deleted) for easier testing. Not for production.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38918 (delete_plugins() needs a proper singular and plural form for its error ...) updated</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:29:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38918#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38918#comment:4/1479950981953058</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested a couple of older versions to check against what they were doing and in the eventuality that multiple plugins failed to delete, only the last message would show anyway (deleted 3 plugins, but was shown the following error):
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Plugin could not be deleted due to an error: Could not fully remove the plugin(s) rest-api/plugin.php.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Given that all these errors have been brought in-line anyway now, each error will show next to the relevant plugin that's failed (if multiple), so a singular phrase seems fine.
&lt;/p&gt;
&lt;p&gt;
I've added an extra patch to force errors on successfully removing a plugin, just to make testing the output a little easier - the initial patch is the correct one to apply going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38923.diff attached to Ticket #38923</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38923/38923.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38923/38923.diff/1479949758285706</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38923 (Introduce `WP_Action_Handler` to clean up admin action mess) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38923</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38923/1479949715543094</guid>
      <description>&lt;p&gt;
We all know that several parts of the admin code are messy in a way. After we had to take several looks at these files during today's multisite chat, I thought we need to do something about it.
&lt;/p&gt;
&lt;p&gt;
My proposal for now is to introduce a new base class &lt;code&gt;WP_Action_Handler&lt;/code&gt;. This abstract class would lay a foundation to handle any kind of actions on any admin screen. Currently there's a (sometimes huge) switch clause at the beginning of almost every page. By removing these clauses entirely and handling the logic in a dedicated class for this instead, we get the following benefits:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;easier readable code
&lt;/li&gt;&lt;li&gt;less huge files
&lt;/li&gt;&lt;li&gt;possibility to add unit tests for each of the switch cases
&lt;/li&gt;&lt;li&gt;possibility to add unit tests the entire handling of an action
&lt;/li&gt;&lt;li&gt;easy addition of any custom actions in plugins, beyond just bulk actions (which have become easier to implement thanks to 4.7)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I have been experimenting with such a class over the past few hours and will upload a first patch below. Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The class usage is almost similar to all the list table classes: There's a base class, and then there's (or rather there will be) one class (which extends the base class) for each screen that could benefit from that.
&lt;/li&gt;&lt;li&gt;Many of the actions have similarities: They mostly use &lt;code&gt;check_admin_referer()&lt;/code&gt; at the beginning, followed by some capability and other permission checks to verify the user is allowed to perform the action. Therefore the base class should be able to handle nonces on its own. The capability checks should be separated from the actual action logic for better organization and easier testing.
&lt;/li&gt;&lt;li&gt;Many of the actions redirect back to the admin page, with a GET parameter denoting a notification message to show to the user. &lt;code&gt;WP_Action_Handler&lt;/code&gt; should also be capable of managing such messages to make that easier as well. This will furthermore allow to remove a bunch of code from the admin screen files where they "bootstrap" their supported messages.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
More notes will follow on the initial patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38918 (delete_plugins() needs a proper singular and plural form for its error ...) updated</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:00:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38918#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38918#comment:3/1479949201360896</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38918.diff attached to Ticket #38918</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:58:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38918/38918.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38918/38918.diff/1479949096434707</guid>
      <description>&lt;p&gt;
Removing plural for translation string and adding colon to make clearer that plugin name follows
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>38834.diff attached to Ticket #38834</title>
      
        <dc:creator>MrFlannagan</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:45:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38834/38834.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38834/38834.diff/1479948301055216</guid>
      <description>&lt;p&gt;
The patch checks if the current date and time is before that of a post then instead of removing the "Schedule" option on an inline post edit in draft mode, it leaves "Schedule" and removes "Publish"
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38918 (delete_plugins() needs a proper singular and plural form for its error ...) updated</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38918#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38918#comment:2/1479947433543549</guid>
      <description>&lt;p&gt;
I tried swapping this to use _n() and then realised that the plugins are removed inline, so each error message is shown next to the plugin, rather than in a list at the top.
&lt;/p&gt;
&lt;p&gt;
As a result, should the translation case instead be to remove the (s) plural altogether and just retain this as a pure &lt;code&gt;__()&lt;/code&gt; singular translation string?
&lt;/p&gt;
&lt;p&gt;
To illustrate: Each error will only ever appear once next to each plugin that fails to be deleted, so (should) output:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Could not fully remove the plugin hello-dolly/hello.php.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Rather than what would currently show:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Could not fully remove the plugin(s) hello-dolly/hello.php.&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) closed</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:11/1479946070692038</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39353" title="REST API: Special case the “standard” post format to always be ..."&gt;39353&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Special case the “standard” post format to always be allowed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38916" title="#38916: defect (bug): REST API: Can't set existing post format if theme does not support it (closed: fixed)"&gt;#38916&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39353]: REST API: Special case the “standard” post format to always be ...</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39353</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39353/1479946070215432</guid>
      <description>&lt;p&gt;
REST API: Special case the “standard” post format to always be allowed.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38916" title="#38916: defect (bug): REST API: Can't set existing post format if theme does not support it (closed: fixed)"&gt;#38916&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:2/1479944999058888</guid>
      <description>&lt;p&gt;
There's a typo on the minLength line I'm not going to bother to fix right now, but it works otherwise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:44:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:1/1479944663073912</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38922/38922.diff" title="Attachment '38922.diff' in Ticket #38922"&gt;38922.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38922/38922.diff" title="Download"&gt;​&lt;/a&gt; follows the same pattern as &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38920" title="#38920: enhancement: Use REST API for link query in editor (new)"&gt;#38920&lt;/a&gt; which uses a localized rest_url which isn't really ideal. Is it worth having a helper a la ajaxurl? wp-api.js doesn't seem to expose a nice method for this. wp.api.url('wp/v2/tags') would be nice, perhaps. Or obviously I could use wp-api.js, but wanted to try this approach as a targeted diff.
&lt;/p&gt;
&lt;p&gt;
Obviously we wouldn't actually remove the old action, and instead deprecate it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38922.diff attached to Ticket #38922</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:40:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38922/38922.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38922/38922.diff/1479944435589605</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922/1479944424601292</guid>
      <description>&lt;p&gt;
Proof of concept. Probably can't be done because you lose the context on the filter -- we will continue to see this for &lt;em&gt;existing&lt;/em&gt; ajax actions, but this will be super nice for newer things.
&lt;/p&gt;
&lt;p&gt;
Similar: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38920" title="#38920: enhancement: Use REST API for link query in editor (new)"&gt;#38920&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38921 (Defining filter pre_get_table_charset causes errors) created</title>
      
        <dc:creator>haoran</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38921</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38921/1479943066161868</guid>
      <description>&lt;p&gt;
In wp-db.php::get_table_charset(), a filter is defined, &lt;strong&gt;pre_get_table_charset&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
However, if this filter is defined, wp-db.php::get_col_charset() throws errors. This is because the latter assumes that it can find cached results cached in:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;table_charset[];
&lt;/pre&gt;&lt;p&gt;
The assumption seems to be that if you add the &lt;strong&gt;pre_get_table_charset&lt;/strong&gt; filter, you will also define the &lt;strong&gt;pre_get_col_charset&lt;/strong&gt; filter.
Code reference: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/wp-db.php#L2437"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/wp-db.php#L2437&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note: defining this filter lets you hard-code the charset of tables, rather than doing a database lookup every time. This can be done quite safely because the most recent upgrade forced our DB tables to be &lt;strong&gt;utf8mb4&lt;/strong&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38920 (Use REST API for link query in editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38920#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38920#comment:3/1479942955966300</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by iseulde. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1479942953002495"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38920 (Use REST API for link query in editor) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38920#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38920#comment:2/1479942772508947</guid>
      <description>&lt;p&gt;
One of the things I run into with this: there seems to be no way to query all post types as once (or a set) like you can do with WP_Query. So you have to start making multiple requests which is a bit insane.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38919 (REST API: Can't unset password) closed</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:12:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38919#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38919#comment:7/1479942726275931</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39352" title="REST API: Allow unsetting a post’s password.
Props danielbachhuber, ..."&gt;39352&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Allow unsetting a post’s password.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber, iseulde.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38919" title="#38919: defect (bug): REST API: Can't unset password (closed: fixed)"&gt;#38919&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39352]: REST API: Allow unsetting a post’s password.  Props danielbachhuber, ...</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:12:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39352</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39352/1479942725305298</guid>
      <description>&lt;p&gt;
REST API: Allow unsetting a post’s password.
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber, iseulde.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38919" title="#38919: defect (bug): REST API: Can't unset password (closed: fixed)"&gt;#38919&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38920 (Use REST API for link query in editor) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38920#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38920#comment:1/1479942451020202</guid>
      <description>&lt;p&gt;
Love this!  Thanks @iseuldebot
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38919 (REST API: Can't unset password) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 23:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38919#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38919#comment:6/1479942030254152</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by danielbachhuber. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1479942027002474"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38920.patch attached to Ticket #38920</title>
      
        <dc:creator>iseuldebot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 22:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38920/38920.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38920/38920.patch/1479941333017279</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38920 (Use REST API for link query in editor) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 22:48:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38920</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38920/1479941321482934</guid>
      <description>&lt;p&gt;
This doesn't necessarily show best practices or whatever, it's just replacing and admin ajax endpoint with a REST API one and not a big change.
&lt;/p&gt;
&lt;p&gt;
Reviewing the implementation of this is a good place to start, e.g. handling date formatting.
&lt;/p&gt;
&lt;p&gt;
Patch still needs date formatting and query other post types.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 22:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:73/1479938727673454</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479938724003992"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36819 (Load plugin.php earlier in wp-settings.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:40:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36819#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36819#comment:54/1479937232739731</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479937229003936"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34084 (Automatically log user in after installation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34084#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34084#comment:9/1479936239136807</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by johnbillion. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479936236003867"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38917 (Paste As Text alert displays full-width) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:08:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38917#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38917#comment:3/1479935313562684</guid>
      <description>&lt;p&gt;
For reference, used to look like this:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/dNTgsDy_7q.png"&gt;&lt;img src="https://cldup.com/dNTgsDy_7q.png" alt="https://cldup.com/dNTgsDy_7q.png" crossorigin="anonymous" title="https://cldup.com/dNTgsDy_7q.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
New alert should at least limit its footprint to something similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38919 (REST API: Can't unset password) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38919#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38919#comment:5/1479935308680526</guid>
      <description>&lt;p&gt;
@swissspidy Technically, there are two separate scenarios: Post already has &lt;code&gt;sticky=true&lt;/code&gt;, vs. &lt;code&gt;sticky=true&lt;/code&gt; is in the request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:04:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:10/1479935086536383</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479935083003811"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38919 (REST API: Can't unset password) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:04:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38919#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38919#comment:4/1479935086445700</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479935083003811"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38616 (4.7 About Page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38616#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38616#comment:12/1479935038442906</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479935035003807"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:4/1479935038343209</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479935035003807"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38858 (Prepare bundled themes for 4.7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 21:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38858#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38858#comment:6/1479935038220301</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479935035003807"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38919 (REST API: Can't unset password) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 20:51:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38919#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38919#comment:3/1479934293272301</guid>
      <description>&lt;p&gt;
Why are there two separate error messages? &lt;code&gt;'A post can not be sticky and have a password.'&lt;/code&gt; and &lt;code&gt;'A sticky post can not be password protected.'&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38917 (Paste As Text alert displays full-width) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 20:25:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38917#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38917#comment:2/1479932702636578</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like something goes wrong when TinyMCE calculates the position.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38919 (REST API: Can't unset password) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 20:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38919#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38919#comment:2/1479932052747733</guid>
      <description>&lt;p&gt;
Nice. Works well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38919.1.diff attached to Ticket #38919</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 23 Nov 2016 20:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38919/38919.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38919/38919.1.diff/1479931698624487</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38919 (REST API: Can't unset password) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 23 Nov 2016 20:07:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38919#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38919#comment:1/1479931636823381</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Itsabug!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38919 (REST API: Can't unset password) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:57:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38919/1479931021067505</guid>
      <description>&lt;p&gt;
Once a password is set, it's not possible to unset it. The password is explicitly prevented from being set when it's an empty string:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $schema['properties']['password'] ) &amp;amp;&amp;amp; isset( $request['password'] ) &amp;amp;&amp;amp; '' !== $request['password'] ) {
  $prepared_post-&amp;gt;post_password = $request['password'];
  ...
&lt;/pre&gt;&lt;p&gt;
Is there a reason for this? Not sure if I'm missing something.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38772 (restrict_manage_posts in wp-media-list-table.php missing 2nd param) updated</title>
      
        <dc:creator>wpsmith</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:39:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38772#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38772#comment:5/1479929994347400</guid>
      <description>&lt;p&gt;
Updated the patch to trunk &amp;amp; added documentation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38772.diff attached to Ticket #38772</title>
      
        <dc:creator>wpsmith</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:39:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38772/38772.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38772/38772.diff/1479929940580214</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38917 (Paste As Text alert displays full-width) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:30:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38917#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38917#comment:1/1479929416378403</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by mor10. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1479929414000391"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38342.17.diff attached to Ticket #38342</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38342/38342.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38342/38342.17.diff/1479929297407419</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:27:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:72/1479929272894035</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38342/38342.17.diff" title="Attachment '38342.17.diff' in Ticket #38342"&gt;38342.17.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38342/38342.17.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;First pass at adding additional inline docs
&lt;/li&gt;&lt;li&gt;remove setActiveEditor handlers, these appear unused and extraneous unless I am missing something
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
working on the other issues next
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37616 (Replace `is_super_admin()` calls with real capability checks) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:11:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37616#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37616#comment:26/1479928283953490</guid>
      <description>&lt;p&gt;
Results from today's meeting (continues the above comment):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ticket 6: replace 2 checks with &lt;code&gt;current_user_can( 'manage_network' )&lt;/code&gt; in &lt;code&gt;wp-includes/option.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Ticket 7: replace 1 check with &lt;code&gt;current_user_can( 'manage_network' )&lt;/code&gt; in &lt;code&gt;wp-signup.php&lt;/code&gt;; in addition, change the message string to &lt;code&gt;Greetings Network Administrator! The network currently allows &amp;amp;#8220;%s&amp;amp;#8221; registrations. To change or disable registration go to your &amp;lt;a href="%s"&amp;gt;Options page&amp;lt;/a&amp;gt;.&lt;/code&gt; and the &lt;code&gt;$i18n['blog']&lt;/code&gt; string to &lt;code&gt;site&lt;/code&gt; to match current naming conventions
&lt;/li&gt;&lt;li&gt;Ticket 8: replace 2 checks with &lt;code&gt;current_user_can( 'manage_network_options' )&lt;/code&gt; in &lt;code&gt;wp-admin/options.php&lt;/code&gt; (lines 77 and 163)
&lt;/li&gt;&lt;li&gt;Ticket 9: replace 2 checks with &lt;code&gt;current_user_can( 'manage_network_users' )&lt;/code&gt; in &lt;code&gt;wp-admin/includes/ajax-actions.php&lt;/code&gt; and &lt;code&gt;wp-admin/user-new.php&lt;/code&gt; (line 228)
&lt;/li&gt;&lt;li&gt;Ticket 10: replace 2 checks with &lt;code&gt;current_user_can( 'manage_network_users' )&lt;/code&gt; in &lt;code&gt;wp-admin/user-new.php&lt;/code&gt; (lines 40 and 316)
&lt;/li&gt;&lt;li&gt;Ticket 11: remove 1 check in &lt;code&gt;wp-admin/user-new.php&lt;/code&gt; (line 66): it's not necessary and might even be considered a bug (right now, when adding a network administrator who's already on the site, that user is still invited again which makes no sense); the &lt;code&gt;$username != null&lt;/code&gt; check might be removed as well, but that should be discussed on another ticket
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The review will continue (starting with the occurrence in &lt;code&gt;wp-admin/users.php&lt;/code&gt;) during the next multisite office hours (Tuesday 17:00 UTC).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38918 (delete_plugins() needs a proper singular and plural form for its error ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38918#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38918#comment:1/1479928070603043</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38918 (delete_plugins() needs a proper singular and plural form for its error ...) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:07:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38918/1479928060680160</guid>
      <description>&lt;p&gt;
The &lt;code&gt;delete_plugins()&lt;/code&gt; function uses the following string as an error message:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Could not fully remove the plugin(s) %s.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This would be better if it used &lt;code&gt;_n()&lt;/code&gt; and provided a proper singular and plural form based on the number of errors.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38518 (Rewrite Rules rebuilding on parse_request) updated</title>
      
        <dc:creator>andyphillips82</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:04:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38518#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38518#comment:1/1479927887915671</guid>
      <description>&lt;p&gt;
allo?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34281,​38915 batch updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Wed, 23 Nov 2016 19:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34281%2C38915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34281%2C38915/1479927853587243</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/34281" title="#34281: enhancement: Allow admins to send users a 'Reset Password' link (assigned)"&gt;#34281&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This seems to a duplicate enhancement request.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #38917 (Paste As Text alert displays full-width) created</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Wed, 23 Nov 2016 18:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38917</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38917/1479925821691527</guid>
      <description>&lt;p&gt;
4.7-beta4-39340
&lt;/p&gt;
&lt;p&gt;
When clicking Paste as Text button for the first time, the alert that shows up has incomplete styling, spanning the full width of the screen rather than hovering over the content (see screenshot).
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/rj9Jx7Y6eX.png"&gt;&lt;img src="https://cldup.com/rj9Jx7Y6eX.png" alt="https://cldup.com/rj9Jx7Y6eX.png" crossorigin="anonymous" title="https://cldup.com/rj9Jx7Y6eX.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38915 (Improvements to password reset) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Wed, 23 Nov 2016 18:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38915#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38915#comment:1/1479925555071048</guid>
      <description>&lt;p&gt;
@tomdxw
&lt;/p&gt;
&lt;p&gt;
Good idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14955 (Themes should support uninstall.php or uninstall hook) updated</title>
      
        <dc:creator>okvee</dc:creator>

      <pubDate>Wed, 23 Nov 2016 18:22:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14955#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14955#comment:31/1479925354888014</guid>
      <description>&lt;p&gt;
I have a very simple theme that has no feature, just index.php style.css and screenshot.png.
&lt;/p&gt;
&lt;p&gt;
WordPress have customizer and save settings in the db. (Its name is &lt;strong&gt;theme_mods_&lt;em&gt;MYTHEMENAME&lt;/em&gt;&lt;/strong&gt; in the options table.)
&lt;/p&gt;
&lt;p&gt;
When I delete my theme WordPress &lt;strong&gt;did not delete&lt;/strong&gt; that value in the db.
&lt;/p&gt;
&lt;p&gt;
And @nacin  said "This doesn't seem like functionality I'd want themes to have."!
I don't think you love junk.
&lt;/p&gt;
&lt;p&gt;
Please have a function to work on delete/uninstall the theme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38914 (Add version for introduction of get_shortcode_regex() parameter) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 23 Nov 2016 17:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38914#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38914#comment:2/1479922451727492</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39351" title="Docs: Add a missing changelog entry for the point where the ..."&gt;39351&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add a missing changelog entry for the point where the &lt;code&gt;$tagnames&lt;/code&gt; parameter was added to &lt;code&gt;get_shortcode_regex()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props keesiemeijer.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38914" title="#38914: defect (bug): Add version for introduction of get_shortcode_regex() parameter (closed: fixed)"&gt;#38914&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39351]: Docs: Add a missing changelog entry for the point where the ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 23 Nov 2016 17:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39351</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39351/1479922450549350</guid>
      <description>&lt;p&gt;
Docs: Add a missing changelog entry for the point where the &lt;code&gt;$tagnames&lt;/code&gt; parameter was added to &lt;code&gt;get_shortcode_regex()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props keesiemeijer.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38914" title="#38914: defect (bug): Add version for introduction of get_shortcode_regex() parameter (closed: fixed)"&gt;#38914&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38914 (Add version for introduction of get_shortcode_regex() parameter) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 23 Nov 2016 17:34:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38914#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38914#comment:1/1479922443861549</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #38672,​35395 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 17:33:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38672%2C35395</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38672%2C35395/1479922402253914</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39350" title="Customize: Refactor logic for updating `custom_css` posts by ..."&gt;39350&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Refactor logic for updating &lt;code&gt;custom_css&lt;/code&gt; posts by introducing &lt;code&gt;wp_update_custom_css_post()&lt;/code&gt; function and renaming update filter.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Moves logic from &lt;code&gt;WP_Customize_Custom_CSS_Setting::update()&lt;/code&gt; into a re-usable &lt;code&gt;wp_update_custom_css_post()&lt;/code&gt; function, useful for future REST API endpoint, WP-CLI command, or plugin migrations.
&lt;/li&gt;&lt;li&gt;Renames &lt;code&gt;customize_update_custom_css_post_content_args&lt;/code&gt; filter to &lt;code&gt;update_custom_css_data&lt;/code&gt; and improves the naming of the parameters. Instead of passing &lt;code&gt;post_content&lt;/code&gt; and &lt;code&gt;post_content_filtered&lt;/code&gt; the filtered array now contains &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;preprocessed&lt;/code&gt; respectively.
&lt;/li&gt;&lt;li&gt;The second context param for the &lt;code&gt;update_custom_css_data&lt;/code&gt; filter is now an array of the original args passed to &lt;code&gt;wp_update_custom_css_post()&lt;/code&gt; and there is now no more &lt;code&gt;$setting&lt;/code&gt; arg since it isn't necessarily being called in the customizer context.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props westonruter, georgestephanis.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35395" title="#35395: feature request: Provide a better gateway for code-based theme customizations with the ... (closed: fixed)"&gt;#35395&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38672" title="#38672: defect (bug): Custom CSS should work with existing Jetpack custom CSS (closed: fixed)"&gt;#38672&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39350]: Customize: Refactor logic for updating `custom_css` posts by ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 17:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39350</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39350/1479922401760634</guid>
      <description>&lt;p&gt;
Customize: Refactor logic for updating &lt;code&gt;custom_css&lt;/code&gt; posts by introducing &lt;code&gt;wp_update_custom_css_post()&lt;/code&gt; function and renaming update filter.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Moves logic from &lt;code&gt;WP_Customize_Custom_CSS_Setting::update()&lt;/code&gt; into a re-usable &lt;code&gt;wp_update_custom_css_post()&lt;/code&gt; function, useful for future REST API endpoint, WP-CLI command, or plugin migrations.
&lt;/li&gt;&lt;li&gt;Renames &lt;code&gt;customize_update_custom_css_post_content_args&lt;/code&gt; filter to &lt;code&gt;update_custom_css_data&lt;/code&gt; and improves the naming of the parameters. Instead of passing &lt;code&gt;post_content&lt;/code&gt; and &lt;code&gt;post_content_filtered&lt;/code&gt; the filtered array now contains &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;preprocessed&lt;/code&gt; respectively.
&lt;/li&gt;&lt;li&gt;The second context param for the &lt;code&gt;update_custom_css_data&lt;/code&gt; filter is now an array of the original args passed to &lt;code&gt;wp_update_custom_css_post()&lt;/code&gt; and there is now no more &lt;code&gt;$setting&lt;/code&gt; arg since it isn't necessarily being called in the customizer context.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props westonruter, georgestephanis.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35395" title="#35395: feature request: Provide a better gateway for code-based theme customizations with the ... (closed: fixed)"&gt;#35395&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38672" title="#38672: defect (bug): Custom CSS should work with existing Jetpack custom CSS (closed: fixed)"&gt;#38672&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29095 (The get/set_user_setting fails on multisite/network with sub-domains) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 17:19:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29095#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29095#comment:12/1479921585999883</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by richardtape. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1479921583000779"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37616 (Replace `is_super_admin()` calls with real capability checks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 17:03:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37616#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37616#comment:25/1479920580595389</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1479920578000757"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 16:21:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:9/1479918060613847</guid>
      <description>&lt;p&gt;
My 2c:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Shouldn't you be able to POST the data you got back to the server without errors?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Broadly speaking: yes. However, there are some edgecases when this isn't exactly possible., following to:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't it now conditional if it's based on the theme?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the distinction here is site wide conditional (say for the theme) or conditional based off a specific post. Right now, it's implement as:
&lt;/p&gt;
&lt;p&gt;
"Allow any of these values" (valid formats), however, if you have a non-valid format already on the resource, then you are actually saying "Allow any of these values, or the specific value that might already be stored for that specific post". Right now, most of the validation is not specific post aware.
&lt;/p&gt;
&lt;p&gt;
We only recently changed the validation to only support the values allowed by the current theme (as that's broadly what the admin does), however I thinking maybe that was a mistake and we should always support _all_ the post formats in the API. Even if we fixed the validation issue, it's somewhat annoying that you can get a post in the API which has an post format that you, as an api client, never knew the existence of.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38692 (REST API: Add support for comments of password-protected posts) closed</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 16:14:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38692#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38692#comment:8/1479917649022504</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39349" title="REST API: Add support for comments of password-protected posts.
Core ..."&gt;39349&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Add support for comments of password-protected posts.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Core requires the post password to view and create comments on password protected posts, so we must support a “password” param on the comments endpoint when fetch comments for a specific post and creating a comment on a password protected post.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props flixos90, jnylen0.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38692" title="#38692: defect (bug): REST API: Add support for comments of password-protected posts (closed: fixed)"&gt;#38692&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39349]: REST API: Add support for comments of password-protected posts.  Core ...</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 16:14:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39349</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39349/1479917648516072</guid>
      <description>&lt;p&gt;
REST API: Add support for comments of password-protected posts.
&lt;/p&gt;
&lt;p&gt;
Core requires the post password to view and create comments on password protected posts, so we must support a “password” param on the comments endpoint when fetch comments for a specific post and creating a comment on a password protected post.
&lt;/p&gt;
&lt;p&gt;
Props flixos90, jnylen0.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38692" title="#38692: defect (bug): REST API: Add support for comments of password-protected posts (closed: fixed)"&gt;#38692&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 16:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:8/1479917293401123</guid>
      <description>&lt;p&gt;
Isn't this conditional behaviour? &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?rev=39343#L974"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?rev=39343#L974&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38672.wp_update_custom_css_post.4.diff attached to Ticket #38672</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:59:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.4.diff/1479916740760149</guid>
      <description>&lt;p&gt;
Δ &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/204/commits/0b3b8fcccf5da324cfa578ef8bd446c31095ef4e"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/204/commits/0b3b8fcccf5da324cfa578ef8bd446c31095ef4e&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38905 (REST API: Bring consistency to the `rest_insert_*` actions) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38905#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38905#comment:5/1479915145991766</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39348" title="REST API: Always fire the `rest_insert_*` actions after the related ..."&gt;39348&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Always fire the &lt;code&gt;rest_insert_*&lt;/code&gt; actions after the related object is updated or inserted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Brings consistency to the &lt;code&gt;rest_insert_*&lt;/code&gt; actions. Also includes some shuffling and clean-up as well including:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ensure we are passing the most current &lt;code&gt;$post&lt;/code&gt; and &lt;code&gt;$user&lt;/code&gt; objects to the &lt;code&gt;update_additional_fields_for_object()&lt;/code&gt; callbacks.
&lt;/li&gt;&lt;li&gt;Changes the function signature of &lt;code&gt;handle_status_param()&lt;/code&gt; in the Comments controller to accept just the comment_id as the 2nd parameter, instead of a full WP_Comment object. Only the comment_id is needed in the method, this avoids having to include another &lt;code&gt;get_comment()&lt;/code&gt; call.
&lt;/li&gt;&lt;li&gt;Renames a variable in the &lt;code&gt;create_item()&lt;/code&gt; method of the Posts controller from &lt;code&gt;$post&lt;/code&gt; -&amp;gt; &lt;code&gt;$prepared_post&lt;/code&gt; to be more explicit.
&lt;/li&gt;&lt;li&gt;Minor fixes/clarifications to the rest_insert_* hook docs
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props rachelbaker, joehoyle&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38905" title="#38905: defect (bug): REST API: Bring consistency to the `rest_insert_*` actions (closed: fixed)"&gt;#38905&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39348]: REST API: Always fire the `rest_insert_*` actions after the related ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39348</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39348/1479915145513572</guid>
      <description>&lt;p&gt;
REST API: Always fire the &lt;code&gt;rest_insert_*&lt;/code&gt; actions after the related object is updated or inserted.
&lt;/p&gt;
&lt;p&gt;
Brings consistency to the &lt;code&gt;rest_insert_*&lt;/code&gt; actions. Also includes some shuffling and clean-up as well including:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ensure we are passing the most current &lt;code&gt;$post&lt;/code&gt; and &lt;code&gt;$user&lt;/code&gt; objects to the &lt;code&gt;update_additional_fields_for_object()&lt;/code&gt; callbacks.
&lt;/li&gt;&lt;li&gt;Changes the function signature of &lt;code&gt;handle_status_param()&lt;/code&gt; in the Comments controller to accept just the comment_id as the 2nd parameter, instead of a full WP_Comment object. Only the comment_id is needed in the method, this avoids having to include another &lt;code&gt;get_comment()&lt;/code&gt; call.
&lt;/li&gt;&lt;li&gt;Renames a variable in the &lt;code&gt;create_item()&lt;/code&gt; method of the Posts controller from &lt;code&gt;$post&lt;/code&gt; -&amp;gt; &lt;code&gt;$prepared_post&lt;/code&gt; to be more explicit.
&lt;/li&gt;&lt;li&gt;Minor fixes/clarifications to the rest_insert_* hook docs
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props rachelbaker, joehoyle
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38905" title="#38905: defect (bug): REST API: Bring consistency to the `rest_insert_*` actions (closed: fixed)"&gt;#38905&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:7/1479915139760688</guid>
      <description>&lt;p&gt;
Of course not straight to the endpoint. But then the server passing it along will need to handle this, which is okay I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:6/1479914769936395</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
HTML forms don't let you omit the field without the help of JS.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How does a HTML form handle a JSON response in the first place?
&lt;/p&gt;
&lt;p&gt;
A HTML form POSTing to an API endpoint will always need JavaScript if it wants to avoid displaying JSON to the end user.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Shouldn't you be able to POST the data you got back to the server without errors?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ideally yes, but I don't think the API can guarantee this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't it now conditional if it's based on the theme?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure, it's conditional in the sense that any PHP code can modify the &lt;code&gt;enum&lt;/code&gt;. Validation doesn't change from request to request though, which is one of the principles of REST.
&lt;/p&gt;
&lt;p&gt;
I'm open to always supporting 'standard' as a value though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38905 (REST API: Bring consistency to the `rest_insert_*` actions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38905#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38905#comment:4/1479914624080642</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by rachelbaker. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1479914621002289"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:18:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:5/1479914296461014</guid>
      <description>&lt;p&gt;
HTML forms don't let you omit the field without the help of JS.
&lt;/p&gt;
&lt;p&gt;
Shouldn't you be able to POST the data you got back to the server without errors?
&lt;/p&gt;
&lt;p&gt;
Isn't it now conditional if it's based on the theme?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37770 (Docs improvements for 4.7) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:17:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37770#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37770#comment:31/1479914247994595</guid>
      <description>&lt;p&gt;
@georgestephanis Good question. I'm not 100% sure. I mean, using a &lt;code&gt;switch&lt;/code&gt; increases the overall block size (37 lines instead of 27 lines) and it seems that &lt;code&gt;switch&lt;/code&gt; statements are more brittle than &lt;code&gt;if&lt;/code&gt; like when a &lt;code&gt;break&lt;/code&gt; is forgotten. But I don't feel that strongly either way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:4/1479913559631083</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We can ignore the update to the &lt;code&gt;format&lt;/code&gt; field if the value is the same as what's currently saved. Does that make sense as a way to address the issue?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure introducing conditional behavior in our validation framework is the best way to go about this.
&lt;/p&gt;
&lt;p&gt;
I'm also not sure this is a bug. If a client doesn't want to update a field, it can and should omit the field from the request. If the client is trying to the field to a value that isn't supported, the API should rightfully error.
&lt;/p&gt;
&lt;p&gt;
As a corollary example to consider, what should happen if you try to update &lt;code&gt;template&lt;/code&gt; for a Page to a template value that doesn't exist in the theme?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 15:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:3/1479913293402664</guid>
      <description>&lt;p&gt;
Best to leave the existing value though, I don't like the idea of quietly changing the content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 14:58:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:2/1479913124164542</guid>
      <description>&lt;p&gt;
I think we should at least always support "standard" (as a way to unset). Additionally we could support the existing value as well so it is kept on update. If not, I think we should unset it to "standard" and not throw an error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 23 Nov 2016 14:51:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:1/1479912681643457</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We don't yet have a strategy for documenting parameters that have a dynamic list of values like this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;'enum' =&amp;gt; array_values( get_post_format_slugs() ),&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
We can ignore the update to the &lt;code&gt;format&lt;/code&gt; field if the value is the same as what's currently saved.  Does that make sense as a way to address the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 23 Nov 2016 14:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916/1479912125069752</guid>
      <description>&lt;p&gt;
The schema for the post format depends on the theme. If the theme does not support e.g. "standard", and an existing post has that format, then trying to update that post with "standard" as the format won't work. You get the error &lt;code&gt;Invalid parameter(s): format&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In addition, the documentation says standard, aside, chat, gallery, link, image, quote, status, video, audio are all allowed, while it actually depends on the theme.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://v2.wp-api.org/reference/posts/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://v2.wp-api.org/reference/posts/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/issues/1448"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/issues/1448&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38915 (Improvements to password reset) created</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Wed, 23 Nov 2016 14:37:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38915/1479911866267213</guid>
      <description>&lt;p&gt;
When creating a user, an admin can leave the password unset and the user will be sent a link with which they can set their password.
&lt;/p&gt;
&lt;p&gt;
This option does not exist when a user account already exists. The administrator can set the user's password to a random string generated by WordPress and email that to the user, or set the password to a string of their choosing and email that to the user.
&lt;/p&gt;
&lt;p&gt;
Either way it's not ideal. There's always a risk the user will not change their password even after they've been told to - then there will be plaintext copies of the password which could be obtained (this could be an issue if the attacker is able to exploit a vulnerability in the email servers, but not the site itself).
&lt;/p&gt;
&lt;p&gt;
The administrator should be able to force a user to reset their password in the same manner as when a user account is created. There should be a button on the user's profile page which disables the user's current password and emails a link to the user which the user can use to reset their own password.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38367 (Adding Screencast.com as an oEmbed provider) updated</title>
      
        <dc:creator>austinnort</dc:creator>

      <pubDate>Wed, 23 Nov 2016 14:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38367#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38367#comment:14/1479911474611566</guid>
      <description>&lt;p&gt;
Hi @swissspidy and @pento, I'm just checking in on this ticket.  I'm the project manager for Screencast.com here at TechSmith.  We are really looking forward to being whitelisted so that our mutual customers will be able to utilize our services to the fullest potential.
It looks like this was moved to the milestone for consideration 2 weeks ago.  Do you have an idea of when we can expect this to be completed?  Feel free to reach out with any questions!
&lt;/p&gt;
&lt;p&gt;
Cheers!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38914.patch attached to Ticket #38914</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Wed, 23 Nov 2016 14:14:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38914/38914.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38914/38914.patch/1479910488525129</guid>
      <description>&lt;p&gt;
Add @since 4.4.0
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38914 (Add version for introduction of get_shortcode_regex() parameter) created</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Wed, 23 Nov 2016 14:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38914/1479910321626826</guid>
      <description>&lt;p&gt;
The &lt;code&gt;$tagnames&lt;/code&gt; parameter was added in WP 4.4.0 but was not documented.
&lt;/p&gt;
&lt;p&gt;
It was added in ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33517" title="#33517: defect (bug): Crash After Registering 500+ Shortcodes (closed: fixed)"&gt;#33517&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 23 Nov 2016 14:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:71/1479910191057995</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38342#comment:69" title="Comment 69"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reviewing &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38342/38342.15.diff" title="Attachment '38342.15.diff' in Ticket #38342"&gt;38342.15.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38342/38342.15.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the additional feedback @pento! I will try to address your concerns in an upcoming patch.
&lt;/p&gt;
&lt;p&gt;
Regarding the choice of Backbone here - I'm open to exploring other technologies such as Vue or React, however I have a feeling Backbone is the right tool for this task. Using Backbone makes sense here because buys us a lot of built in functionality: we leverage syncing and the Backbone JS client, and leverage collections to handle management of the draft list. I find the backbone code here straightforward to understand and follow, this is a much simpler feature than the media library. What advantages might we hope to find by switching to React or Vue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38694 (Embeds not working in IE 11) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 13:37:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38694#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38694#comment:9/1479908233324410</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39347" title="Embeds: Correctly remove security attribute from iframes in IE 10 and ..."&gt;39347&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Embeds: Correctly remove security attribute from iframes in IE 10 and IE 11.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This was originally added in 4.4, but presumably broke with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35708" title="Embeds: Remove `&amp;amp;` characters from the inline embed JS.
Older ..."&gt;[35708]&lt;/a&gt;, which prevented these browsers from actually reaching the relevant code section.&lt;br /&gt;
Let's make embeds work again in IE 10 and IE 11.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38694" title="#38694: defect (bug): Embeds not working in IE 11 (closed: fixed)"&gt;#38694&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39347]: Embeds: Correctly remove security attribute from iframes in IE 10 and ...</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 13:37:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39347</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39347/1479908232842363</guid>
      <description>&lt;p&gt;
Embeds: Correctly remove security attribute from iframes in IE 10 and IE 11.
&lt;/p&gt;
&lt;p&gt;
This was originally added in 4.4, but presumably broke with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35708" title="Embeds: Remove `&amp;amp;` characters from the inline embed JS.
Older ..."&gt;[35708]&lt;/a&gt;, which prevented these browsers from actually reaching the relevant code section.
Let's make embeds work again in IE 10 and IE 11.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38694" title="#38694: defect (bug): Embeds not working in IE 11 (closed: fixed)"&gt;#38694&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38694 (Embeds not working in IE 11) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 13:34:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38694#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38694#comment:8/1479908044021812</guid>
      <description>&lt;p&gt;
@pento Actually, it was &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35708" title="Embeds: Remove `&amp;amp;` characters from the inline embed JS.
Older ..."&gt;[35708]&lt;/a&gt;. Memories.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>elseif-to-switch.diff attached to Ticket #37770</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Wed, 23 Nov 2016 13:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37770/elseif-to-switch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37770/elseif-to-switch.diff/1479906360165052</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37770 (Docs improvements for 4.7) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Wed, 23 Nov 2016 13:05:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37770#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37770#comment:30/1479906338816718</guid>
      <description>&lt;p&gt;
@westonruter re: your changes from &lt;code&gt;else if&lt;/code&gt; to &lt;code&gt;elseif&lt;/code&gt; -- would that block make more sense as a &lt;code&gt;switch&lt;/code&gt;?  Something like this (patch following)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36958 (extending has_shortcode to allow searching in custom fields) updated</title>
      
        <dc:creator>radugroza</dc:creator>

      <pubDate>Wed, 23 Nov 2016 12:54:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36958#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36958#comment:1/1479905681805313</guid>
      <description>&lt;p&gt;
ping / bump ? :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38811 (REST API: ambiguous strings) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 23 Nov 2016 12:46:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38811#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38811#comment:17/1479905190122378</guid>
      <description>&lt;p&gt;
Just for the record, these changes have made the descriptions more inconsistent than they were before. I used "resource" originally for consistency. Now, because of class inheritance, any given controller is going to have a mix of language.
&lt;/p&gt;
&lt;p&gt;
Context: &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/issues/2056"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/issues/2056&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38913 (Aggregation of contracted and not contracted verb forms (cannot, doesn't)?) created</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 23 Nov 2016 12:37:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38913/1479904660892056</guid>
      <description>&lt;p&gt;
I count
&lt;/p&gt;
&lt;p&gt;
18x &lt;code&gt;does not&lt;/code&gt; vs. 5x &lt;code&gt;doesn't&lt;/code&gt;
28x &lt;code&gt;cannot&lt;/code&gt; vs. 4x &lt;code&gt;can not&lt;/code&gt; vs. 1x &lt;code&gt;can't&lt;/code&gt; (+ 1x in 'administration')
lots of &lt;code&gt;is not&lt;/code&gt; vs 1x &lt;code&gt;isn't&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Do we want to combine them?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38912 (Pluploader click event not firing in MS Edge) created</title>
      
        <dc:creator>hnla</dc:creator>

      <pubDate>Wed, 23 Nov 2016 10:41:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38912/1479897669053101</guid>
      <description>&lt;p&gt;
Reported on buddypress trac: &lt;a class="ext-link" href="https://buddypress.trac.wordpress.org/ticket/7360"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://buddypress.trac.wordpress.org/ticket/7360&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Possibly related to this ticket: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37039" title="#37039: defect (bug): Cannot Upload New Media Via &amp;#34;Select Files&amp;#34; On Microsoft Edge Browser (closed: fixed)"&gt;#37039&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Is an issue with our image upload functions for avatar/cover images in BuddyPress profiles where the drag 'n' drop works but the click to open folder doesn't (known to be an issue with Plupload/Edge).
&lt;/p&gt;
&lt;p&gt;
Fix on the WP ticket seems specific to WP backend?
&lt;/p&gt;
&lt;p&gt;
Tested updating WP core plupload vendor files  taking plupload.full.min.js to v.2.2.0 and this appears to have corrected the BP issue ( not tested exhaustively though).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38692 (REST API: Add support for comments of password-protected posts) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 10:12:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38692#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38692#comment:7/1479895962683883</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1479895960002286"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38694 (Embeds not working in IE 11) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 09:56:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38694#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38694#comment:7/1479894984557264</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479894980003743"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38615 (Round out and refine starter content) closed</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 23 Nov 2016 09:52:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38615#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38615#comment:42/1479894748420518</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39346" title="Theme starter content: Add support for featured images and page ..."&gt;39346&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Theme starter content: Add support for featured images and page templates.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Featured image support means that attachments can now be imported. Media can be sideloaded from within theme or plugin directories. Like other posts, attachments are auto-drafts until customizer changes are published, and are not duplicated when they already exist in the customized state. Attachment IDs can be used for any number of purposes, much like post IDs. Twenty Seventeen now includes 3 images used as featured images to best showcase the multi-section homepage setup.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As featured image IDs are stored in post meta, it also made sense to add support for page templates. Twenty Seventeen does not include any such templates, but the functionality can be quite important for displaying themes to their best effect.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props westonruter, helen, flixos90.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38615" title="#38615: task (blessed): Round out and refine starter content (closed: fixed)"&gt;#38615&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39346]: Theme starter content: Add support for featured images and page ...</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 23 Nov 2016 09:52:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39346</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39346/1479894747903858</guid>
      <description>&lt;p&gt;
Theme starter content: Add support for featured images and page templates.
&lt;/p&gt;
&lt;p&gt;
Featured image support means that attachments can now be imported. Media can be sideloaded from within theme or plugin directories. Like other posts, attachments are auto-drafts until customizer changes are published, and are not duplicated when they already exist in the customized state. Attachment IDs can be used for any number of purposes, much like post IDs. Twenty Seventeen now includes 3 images used as featured images to best showcase the multi-section homepage setup.
&lt;/p&gt;
&lt;p&gt;
As featured image IDs are stored in post meta, it also made sense to add support for page templates. Twenty Seventeen does not include any such templates, but the functionality can be quite important for displaying themes to their best effect.
&lt;/p&gt;
&lt;p&gt;
props westonruter, helen, flixos90.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38615" title="#38615: task (blessed): Round out and refine starter content (closed: fixed)"&gt;#38615&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 23 Nov 2016 09:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:70/1479892679186709</guid>
      <description>&lt;p&gt;
Patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38342/38342.16.diff" title="Attachment '38342.16.diff' in Ticket #38342"&gt;38342.16.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38342/38342.16.diff" title="Download"&gt;​&lt;/a&gt; updates &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38342/38342.15.diff" title="Attachment '38342.15.diff' in Ticket #38342"&gt;38342.15.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38342/38342.15.diff" title="Download"&gt;​&lt;/a&gt; per WordPress CSS Coding Standards (No other changes)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38342.16.diff attached to Ticket #38342</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 23 Nov 2016 09:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38342/38342.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38342/38342.16.diff/1479892487794317</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>38085.2.patch attached to Ticket #38085</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 23 Nov 2016 08:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38085/38085.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38085/38085.2.patch/1479890938436062</guid>
      <description>&lt;p&gt;
Whitespace, and skip if &lt;code&gt;get_author_posts_url()&lt;/code&gt; returns an empty result (thanks to a mutable filter at the end)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20307 (Edit User link in admin toolbar) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 23 Nov 2016 08:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20307#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20307#comment:24/1479890528991069</guid>
      <description>&lt;p&gt;
20307.2.patch looks OK to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38615 (Round out and refine starter content) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 23 Nov 2016 08:40:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38615#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38615#comment:41/1479890428552282</guid>
      <description>&lt;p&gt;
That was a pretty wild PHP bug chase :) &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38615/38615.15.diff" title="Attachment '38615.15.diff' in Ticket #38615"&gt;38615.15.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38615/38615.15.diff" title="Download"&gt;​&lt;/a&gt; fixes the issue caught in the tests - I think we're ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38615.15.diff attached to Ticket #38615</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 23 Nov 2016 08:35:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38615/38615.15.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38615/38615.15.diff/1479890150725049</guid>
      <description>&lt;p&gt;
Δ &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/201/files/a3dd024..da2d931"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/201/files/a3dd024..da2d931&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38911 (Prevent Media Library search making an AJAX request for each char typed.) created</title>
      
        <dc:creator>brandomeniconi</dc:creator>

      <pubDate>Wed, 23 Nov 2016 08:29:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38911/1479889760743066</guid>
      <description>&lt;p&gt;
I've noticed that while searching for a media in the "Media Library", WP makes an AJAX request immediately after a char is typed. So if I type in a long word, it will do a lot of sequential AJAX requests to the server.
&lt;/p&gt;
&lt;p&gt;
In most small site environments that is fine, but in some large WP installations with a lot of media (and traffic), sometimes each request takes few seconds to complete, causing the latest requests failing due to queue timeout and the Library interface to hang.
&lt;/p&gt;
&lt;p&gt;
I will be great if, while the user is typing, the UI only makes an AJAX request if the user has stopped writing for a determined amount of time. I've noticed that there is already a _.debounce handler in media-grid.js but it doesn't cancel the intermediate requests.
&lt;/p&gt;
&lt;p&gt;
I've inspected this in few sites (with WP 4.6.1 ad very few plugins) and all have this behavior.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38694 (Embeds not working in IE 11) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 07:56:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38694#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38694#comment:6/1479887780440113</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37770,​38908 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 06:04:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37770%2C38908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37770%2C38908/1479881064445064</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39345" title="Customize: Clean up docs and code style for customize changes in 4.7.
 ..."&gt;39345&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Clean up docs and code style for customize changes in 4.7.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds missing &lt;code&gt;resolve&lt;/code&gt;/&lt;code&gt;fail&lt;/code&gt; for promise returned by &lt;code&gt;loadThemePreview&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds missing jsdoc blocks and tags.
&lt;/li&gt;&lt;li&gt;Adds missing phpdoc and makes corrections.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38908" title="#38908: defect (bug): Customize: Cleanup docs and code style in 4.7 (closed: fixed)"&gt;#38908&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39345]: Customize: Clean up docs and code style for customize changes in 4.7.  ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 06:04:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39345</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39345/1479881063937036</guid>
      <description>&lt;p&gt;
Customize: Clean up docs and code style for customize changes in 4.7.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds missing &lt;code&gt;resolve&lt;/code&gt;/&lt;code&gt;fail&lt;/code&gt; for promise returned by &lt;code&gt;loadThemePreview&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds missing jsdoc blocks and tags.
&lt;/li&gt;&lt;li&gt;Adds missing phpdoc and makes corrections.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38908" title="#38908: defect (bug): Customize: Cleanup docs and code style in 4.7 (closed: fixed)"&gt;#38908&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38908 (Customize: Cleanup docs and code style in 4.7) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 05:57:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38908#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38908#comment:3/1479880674531987</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 23 Nov 2016 05:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:69/1479879740594822</guid>
      <description>&lt;p&gt;
Reviewing &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38342/38342.15.diff" title="Attachment '38342.15.diff' in Ticket #38342"&gt;38342.15.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38342/38342.15.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In &lt;code&gt;wp_dashboard_print_recent_drafts_template()&lt;/code&gt;, the edit URL is still hard coded. This is a blocker, we cannot be setting the example of hardcoding URLs that previously could be filtered.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;@deprecated&lt;/code&gt; comment should use the full version, &lt;code&gt;4.7.0&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Is &lt;code&gt;rest-api.php&lt;/code&gt; the best place for a filter that only needs to be run on the Dashboard home?
&lt;/li&gt;&lt;li&gt;None of the &lt;code&gt;QuickPress&lt;/code&gt; functions have JS docs. Let's set a good example. :-)
&lt;/li&gt;&lt;li&gt;Having the timezone offset (and the current user ID, for that matter) come from the Quick Draft settings is not very extendable. This is information that should be available to all features as they're ported, rather than each one needing to reimplement it.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38342#comment:58" title="Comment 58"&gt;aduth&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
I'm not wild about the date formatting code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With good utilities, I could see this logic living in the template. The bulk of the current logic is converting to the site time on the client. What do you envision being the arguments and return value of the utility method you mentioned? I'm not familiar with what's involved in adding a library like Moment.js, but given the quirks and variations in parsing and formatting dates, I couldn't recommend it enough.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A good start would be a function that does exactly what the current formatting code is doing - take a date (ISO8601, &lt;code&gt;Date&lt;/code&gt; object or unix timestamp), and return it with the site's current date formatting settings.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Generally speaking, the JavaScript feel overly verbose
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are there specific parts that could be simplified?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As @joehoyle mentioned elsewhere, this was a bit a rabbit hole to poke at, without really going into detail. Let me try and expand a bit. :-)
&lt;/p&gt;
&lt;p&gt;
I'm looking at this patch with the firm point of view of "how does this look as a pattern for existing Dashboard features to be ported to the REST API in the future?". With that in mind, I keep running into problems. For such a small feature, we've had to make quite a few architectural compromises - some of these have been fixed, some of them seem to be genuine sticking points, or symptoms of larger problems. I'm not wild about the idea of continually running into these same problems every time we try to port a feature across.
&lt;/p&gt;
&lt;p&gt;
When I read the &lt;code&gt;QuickPress&lt;/code&gt; code, it's not dissimilar in structure to the media grid, with which we've significant problems maintaining over the years. Is that a problem with all Backbone-based code? Would we face similar problems if we were to use other libraries?
&lt;/p&gt;
&lt;p&gt;
The decision to use Backbone seems to be based on the fact that we always use Backbone. Given that we're talking about the future of WordPress Dashboard development, I really would like to see some exploration of other technologies. React has gone really well for Automattic with Calypso. Vue.js seems to be gaining a lot of traction with folks who find React to be overkill. There hasn't been much discussion on what the best direction here might be.
&lt;/p&gt;
&lt;p&gt;
At the end of the day, I don't think that keeping it as Backbone is a blocker. But the original point of this ticket was to both test for shortcoming in the endpoints, which it has done successfully; and spark investigation into what the future of WordPress Dashboard development will look like, which it hasn't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38672 (Custom CSS should work with existing Jetpack custom CSS) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 05:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38672#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38672#comment:51/1479879629655605</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.3.diff" title="Attachment '38672.wp_update_custom_css_post.3.diff' in Ticket #38672"&gt;38672.wp_update_custom_css_post.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38672/38672.wp_update_custom_css_post.3.diff" title="Download"&gt;​&lt;/a&gt; (&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/204/files/9dc5be9..8052e63"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;see changes&lt;/a&gt;) I've renamed &lt;code&gt;customize_update_custom_css_post_content_args&lt;/code&gt; filter to just &lt;code&gt;update_custom_css_data&lt;/code&gt; and moved it from &lt;code&gt;\WP_Customize_Custom_CSS_Setting::update()&lt;/code&gt; to &lt;code&gt;wp_update_custom_css_post()&lt;/code&gt;. The filter's arguments are changed to align with the arguments for the new &lt;code&gt;wp_update_custom_css_post()&lt;/code&gt; function. This all seems better but it will require some changes to the WIP Jetpack PR and other projects that are in the midst of refactor. But better now change than forever be something we're not happy with architecturally.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38672.wp_update_custom_css_post.3.diff attached to Ticket #38672</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 04:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.3.diff/1479876588518133</guid>
      <description>&lt;p&gt;
Δ &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/204/files/9dc5be9..8052e63"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/204/files/9dc5be9..8052e63&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38694 (Embeds not working in IE 11) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 23 Nov 2016 04:44:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38694#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38694#comment:5/1479876240991543</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm a little surprised that this managed to be broken for so long, but I agree that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35577" title="Embeds: Fix support for embedding in non-WordPress sites.
This moves ..."&gt;[35577]&lt;/a&gt; is the likely culprit.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38694/38694.diff" title="Attachment '38694.diff' in Ticket #38694"&gt;38694.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38694/38694.diff" title="Download"&gt;​&lt;/a&gt; looks good as a fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38905 (REST API: Bring consistency to the `rest_insert_*` actions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 04:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38905#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38905#comment:3/1479875072309239</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1479875069002283"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38905 (REST API: Bring consistency to the `rest_insert_*` actions) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 04:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38905#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38905#comment:2/1479875006850083</guid>
      <description>&lt;p&gt;
This all looks good to me, though I'd like to get a review from @rmccue given how late in the cycle this is - it would be then good to commit asap to make rc1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38899 (Deletion of auto-drafts and trashed posts never gets scheduled unless ...) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:59:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38899#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38899#comment:7/1479869982839132</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38899 (Deletion of auto-drafts and trashed posts never gets scheduled unless ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38899#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38899#comment:6/1479869759714083</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479869757003675"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37968 (HTML validation errors in admin tool) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37968#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37968#comment:13/1479869752847597</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Got it, thanks. Clearing the version since this isn't new to trunk, unfortunately I can't put time into actually looking at these actual instances and whether it makes sense to fix things at the moment, but if anybody wants to look at this and make a decision that would be appreciate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38895 (REST API JS Client should cache schema in sessionStorage by default ...) closed</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38895#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38895#comment:3/1479869664739199</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39344" title="REST API: Make JS Client store schema in session storage.
Props ..."&gt;39344&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Make JS Client store schema in session storage.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props adamsilverstein.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38895" title="#38895: defect (bug): REST API JS Client should cache schema in sessionStorage by default ... (closed: fixed)"&gt;#38895&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39344]: REST API: Make JS Client store schema in session storage.  Props ...</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39344</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39344/1479869664276920</guid>
      <description>&lt;p&gt;
REST API: Make JS Client store schema in session storage.
&lt;/p&gt;
&lt;p&gt;
Props adamsilverstein.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38895" title="#38895: defect (bug): REST API JS Client should cache schema in sessionStorage by default ... (closed: fixed)"&gt;#38895&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38895 (REST API JS Client should cache schema in sessionStorage by default ...) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38895#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38895#comment:2/1479869535033645</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38877 (REST API - Unable to update page when default template used.) closed</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:46:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38877#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38877#comment:12/1479869202664038</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39343" title="REST API: Allow unsetting of page templates in update requests.
 ..."&gt;39343&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Allow unsetting of page templates in update requests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sending a request to update a page with the template property set to an empty string resulted in an error because “” was not a valid value in the enum.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props lucasstark, swissspidy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38877" title="#38877: defect (bug): REST API - Unable to update page when default template used. (closed: fixed)"&gt;#38877&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39343]: REST API: Allow unsetting of page templates in update requests.  ...</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:46:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39343</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39343/1479869202171536</guid>
      <description>&lt;p&gt;
REST API: Allow unsetting of page templates in update requests.
&lt;/p&gt;
&lt;p&gt;
Sending a request to update a page with the template property set to an empty string resulted in an error because “” was not a valid value in the enum.
&lt;/p&gt;
&lt;p&gt;
Props lucasstark, swissspidy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38877" title="#38877: defect (bug): REST API - Unable to update page when default template used. (closed: fixed)"&gt;#38877&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38811 (REST API: ambiguous strings) closed</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38811#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38811#comment:16/1479868921185580</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39342" title="REST API: Update “resource” strings to use the appropriate nouns.
 ..."&gt;39342&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Update “resource” strings to use the appropriate nouns.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ramiy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38811" title="#38811: defect (bug): REST API: ambiguous strings (closed: fixed)"&gt;#38811&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39342]: REST API: Update “resource” strings to use the appropriate nouns.  ...</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:42:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39342</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39342/1479868920696746</guid>
      <description>&lt;p&gt;
REST API: Update “resource” strings to use the appropriate nouns.
&lt;/p&gt;
&lt;p&gt;
Props ramiy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38811" title="#38811: defect (bug): REST API: ambiguous strings (closed: fixed)"&gt;#38811&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38811 (REST API: ambiguous strings) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:38:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38811#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38811#comment:15/1479868692444278</guid>
      <description>&lt;p&gt;
Ugh sorry I put the wrong file in my comment, I meant &lt;code&gt;class-wp-rest-posts-controller.php&lt;/code&gt;, however - given we call &lt;code&gt;types&lt;/code&gt; "Post Types" then I guess it's ok we refer to "pages" as a &lt;code&gt;post&lt;/code&gt; in the error messages; at least maybe it's better than "resource". I'll commit this, and maybe we can look at using post type labels in the future in the posts controller.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38910 (`is_post_type_archive()` return true when the current page is tag archive) updated</title>
      
        <dc:creator>yaquawa</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:18:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38910#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38910#comment:1/1479867517844170</guid>
      <description>&lt;p&gt;
Seems like I can't edit my ticket after I've submitted it?
&lt;/p&gt;
&lt;p&gt;
I'm sorry, but I want to correct my ticket:
&lt;/p&gt;
&lt;p&gt;
To get a stricter result of &lt;code&gt;is_post_type_archive()&lt;/code&gt;, it should check if the current queried_object is a &lt;code&gt;WP_Post&lt;/code&gt; type or not.
&lt;/p&gt;
&lt;p&gt;
↓
&lt;/p&gt;
&lt;p&gt;
To get a stricter result of &lt;code&gt;is_post_type_archive()&lt;/code&gt;, it should check if the current queried_object is a &lt;strong&gt;&lt;code&gt;WP_Post_Type&lt;/code&gt;&lt;/strong&gt; type or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38910 (`is_post_type_archive()` return true when the current page is tag archive) created</title>
      
        <dc:creator>yaquawa</dc:creator>

      <pubDate>Wed, 23 Nov 2016 02:03:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38910/1479866634282362</guid>
      <description>&lt;p&gt;
See if you register a post type "fruit". And you have a tag "sample-tag".
&lt;/p&gt;
&lt;p&gt;
When you access:
&lt;a class="ext-link" href="http://localhost/tag/sample-tag/?post_type=fruit"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost/tag/sample-tag/?post_type=fruit&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You'll be taken to the post type archive page(template) rather than the tag archive page even the URL is telling you this is a tag archive page.
&lt;/p&gt;
&lt;p&gt;
This is because the &lt;code&gt;is_post_type_archive()&lt;/code&gt; is called earlier than &lt;code&gt;is_tag()&lt;/code&gt; in &lt;code&gt;wp-includes/template-loader.php&lt;/code&gt;.  It should never depend on the order of condifional functions be called, I believe this is a serious bug.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;is_post_type_archive()&lt;/code&gt; should return false when the current page is NOT a post type archive page.
&lt;/p&gt;
&lt;p&gt;
To get a stricter result of &lt;code&gt;is_post_type_archive()&lt;/code&gt;, it should check if the current &lt;code&gt;queried_object&lt;/code&gt; is a WP_Post type or not.
If you are viewing a tag archive, the &lt;code&gt;queried_object&lt;/code&gt; is an instance of &lt;code&gt;WP_Term&lt;/code&gt; , obviously, this is NOT a "post type archive" page at all.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38909 (`wp.uploadFile` ignores `overwrite` parameter) created</title>
      
        <dc:creator>bhabba</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38909/1479866358884098</guid>
      <description>&lt;p&gt;
The &lt;code&gt;overwrite&lt;/code&gt; parameter of the XMLRPC method &lt;code&gt;wp.uploadFile&lt;/code&gt; seems to be ignored, files are never overwritten in Wordpress 4.6.1. If the file already exists, a &lt;code&gt;-&lt;/code&gt; plus a number starting with &lt;code&gt;1&lt;/code&gt; is appended when uploaded again.
&lt;/p&gt;
&lt;p&gt;
This has already been an issue some time ago (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17604" title="#17604: defect (bug): wp.uploadFile overwrite doesn't work (closed: fixed)"&gt;#17604&lt;/a&gt;), then got fixed but was reintroduced in Wordpress 4.4 according to this support thread: &lt;a class="ext-link" href="https://wordpress.org/support/topic/xmlrpc-uploadfile-overwrite/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/xmlrpc-uploadfile-overwrite/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:53:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:68/1479866019474473</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38342/38342.15.diff" title="Attachment '38342.15.diff' in Ticket #38342"&gt;38342.15.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38342/38342.15.diff" title="Download"&gt;​&lt;/a&gt; :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Added calls to wp.a11y.speak() for success and failure when adding a draft. (not sure why but I didn't hear failures in voiceover/chrome although the code executed).
&lt;/li&gt;&lt;li&gt;Added some QUnit tests for &lt;code&gt;wp.formatting.trimWords()&lt;/code&gt;, based on out phpunit tests for &lt;code&gt;wp_trim_words&lt;/code&gt;, I only left out the tag and style removal tests as those don't apply here.
&lt;/li&gt;&lt;li&gt;Clean up logic for showing View All link, using &lt;code&gt;this.collection.hasMore()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Switched the error notice to use the alternate style and put it above the form.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The error notice looks like this now:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cl.ly/2y1w030R0G06/Dashboard__wpdev__WordPress_2016-11-22_20-54-49.jpg"&gt;&lt;img src="https://cl.ly/2y1w030R0G06/Dashboard__wpdev__WordPress_2016-11-22_20-54-49.jpg" alt="https://cl.ly/2y1w030R0G06/Dashboard__wpdev__WordPress_2016-11-22_20-54-49.jpg" crossorigin="anonymous" title="https://cl.ly/2y1w030R0G06/Dashboard__wpdev__WordPress_2016-11-22_20-54-49.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I also cleaned up the inline docs a little and am going to continue working on that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38342.15.diff attached to Ticket #38342</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:44:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38342/38342.15.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38342/38342.15.diff/1479865480176175</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>38672.wp_update_custom_css_post.2.diff attached to Ticket #38672</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.2.diff/1479865466611949</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>38342.5.diff attached to Ticket #38342</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38342/38342.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38342/38342.5.diff/1479865411949138</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38908 (Customize: Cleanup docs and code style in 4.7) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:24:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38908#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38908#comment:2/1479864279741232</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38908 (Customize: Cleanup docs and code style in 4.7) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38908#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38908#comment:1/1479864272896631</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38908.0.diff attached to Ticket #38908</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:24:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38908/38908.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38908/38908.0.diff/1479864265024615</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38908 (Customize: Cleanup docs and code style in 4.7) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38908/1479864246809954</guid>
      <description>&lt;p&gt;
A pass should be done on the new code added in 4.7 to audit for correctness of docs and code style.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38892 (Twenty Seventeen: A "Page Content" Section Option would be nice) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38892#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38892#comment:2/1479863306972526</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38892 (Twenty Seventeen: A "Page Content" Section Option would be nice) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 01:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38892#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38892#comment:1/1479863290481737</guid>
      <description>&lt;p&gt;
@johnjamesjacoby Thanks for the ticket! I don't think this was brought up before, so no worries there.
&lt;/p&gt;
&lt;p&gt;
What would be a use case for this? Leaving that content blank? I don't think I've ever set a static page as the home page and &lt;em&gt;not&lt;/em&gt; wanted to show its content.
&lt;/p&gt;
&lt;p&gt;
I could see the need of maybe wanting to make this fail more gracefully, because it doesn't look good if you have no content in there. But that seems like it would be a rare use case for this theme in particular. Plus, now it can be hidden with custom CSS in Core. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38907 (Add `path_is_absolute` filter.) created</title>
      
        <dc:creator>tmatsuo</dc:creator>

      <pubDate>Wed, 23 Nov 2016 00:52:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38907/1479862320712636</guid>
      <description>&lt;p&gt;
so that plugin developers can easily add media functionalities with stream wrappers.
&lt;/p&gt;
&lt;p&gt;
The path_is_absolute function will be updated to:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;path_is_absolute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/*
     * First apply a filter and see the result
     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'path_is_absolute'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/*
     * This is definitive if true but fails if $path does not exist or contains
     * a symbolic link.
     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'.'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Windows allows absolute paths like this.
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#^[a-zA-Z]:\\\\#'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// A path starting with / or \ is absolute; anything else is relative.
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'\\'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Background:
&lt;/p&gt;
&lt;p&gt;
I'm developing a plugin for uploading media files to Google Cloud Storage, using Google Cloud Storage stream wrapper (gs:// path).
&lt;/p&gt;
&lt;p&gt;
It's easy to use the &lt;code&gt;upload_dir&lt;/code&gt; to achieve it, but when it comes to deleting media files, there is a problem.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;wp-includes/post.php&lt;/code&gt;, there are some code to delete related files when you delete an uploaded media file:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="c1"&gt;// Remove intermediate and backup images if there are any.
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$meta&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'sizes'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$meta&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'sizes'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$meta&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'sizes'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$size&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$sizeinfo&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$intermediate_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$sizeinfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'file'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="sd"&gt;/** This filter is documented in wp-includes/functions.php */&lt;/span&gt;
                        &lt;span class="nv"&gt;$intermediate_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_delete_file'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$intermediate_file&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="o"&gt;@&lt;/span&gt; &lt;span class="nb"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;path_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$uploadpath&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'basedir'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$intermediate_file&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When we replace directories with &lt;code&gt;upload_dir&lt;/code&gt; filter, the values of &lt;code&gt;$uploadpath['basedir']&lt;/code&gt; and $intermediate_file are:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$uploadpath&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'basedir'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// gs://bucket_name/1/
&lt;/span&gt;&lt;span class="nv"&gt;$intermediate_file&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// gs://bucket_name/1/2016/11/old-electrical-panel-150x150.jpg
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So the path_join now returns something like: &lt;code&gt;gs://bucket_name/1/gs://bucket_name/1/2016/11/old-electrical-panel-150x150.jpg&lt;/code&gt; because the file path is not considered as absolute. If we can customize the return value of &lt;code&gt;path_is_absolute&lt;/code&gt;, then the return value of &lt;code&gt;path_join&lt;/code&gt; will be something like &lt;code&gt;gs://bucket_name/1/2016/11/old-electrical-panel-150x150.jpg&lt;/code&gt; and the media editor correctly unlink the files.
&lt;/p&gt;
&lt;p&gt;
I'd appreciate it if you could consider adding this filter.
Of course, let me know if there are better solutions.
&lt;/p&gt;
&lt;p&gt;
Thanks,
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38876 (Twenty Seventeen: Edit button label is displayed vertical in some ...) closed</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 00:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38876#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38876#comment:11/1479861802697764</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39341" title="Twenty Seventeen: Ensure edit button label displays properly in other ..."&gt;39341&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Twenty Seventeen: Ensure edit button label displays properly in other languages&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This bug occurred in any language where text wraps character-by-character, since those languages don't delimit words with spaces. In Japanese, Chinese and Korean, etc., it was possible for the label to be displayed vertically.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props tg29359, afercia, odysseygate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38876" title="#38876: defect (bug): Twenty Seventeen: Edit button label is displayed vertical in some ... (closed: fixed)"&gt;#38876&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39341]: Twenty Seventeen: Ensure edit button label displays properly in other ...</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Wed, 23 Nov 2016 00:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39341</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39341/1479861802241677</guid>
      <description>&lt;p&gt;
Twenty Seventeen: Ensure edit button label displays properly in other languages
&lt;/p&gt;
&lt;p&gt;
This bug occurred in any language where text wraps character-by-character, since those languages don't delimit words with spaces. In Japanese, Chinese and Korean, etc., it was possible for the label to be displayed vertically.
&lt;/p&gt;
&lt;p&gt;
Props tg29359, afercia, odysseygate.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38876" title="#38876: defect (bug): Twenty Seventeen: Edit button label is displayed vertical in some ... (closed: fixed)"&gt;#38876&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34729 (Use short CURIEs instead of full URIs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 23 Nov 2016 00:24:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34729#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34729#comment:34/1479860699666006</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by rachelbaker. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1479860697002212"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38672.wp_update_custom_css_post.1.diff attached to Ticket #38672</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 23 Nov 2016 00:04:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38672/38672.wp_update_custom_css_post.1.diff/1479859480235751</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/204"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/204&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item>
   </channel>
</rss>