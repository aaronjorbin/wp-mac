<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>15327.5.diff attached to Ticket #15327</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 20 Jan 2012 23:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15327/15327.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15327/15327.5.diff/1327102637924682</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>19810.2.patch attached to Ticket #19810</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 20 Jan 2012 23:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19810/19810.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19810/19810.2.patch/1327102292989280</guid>
      <description>&lt;p&gt;
Refreshed date in script loader and added user-new.dev.js
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18534 (Synchronize block tags between PHP and JS versions of wpautop()) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 20 Jan 2012 23:15:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18534#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18534#comment:7/1327101327332229</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 20 Jan 2012 23:09:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:16/1327100978629173</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/15327/15327.4.diff" title="Attachment '15327.4.diff' in Ticket #15327"&gt;15327.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/15327/15327.4.diff" title="Download"&gt;​&lt;/a&gt; also passes $_REQUEST&lt;a class="missing wiki"&gt;action?&lt;/a&gt; to the do_action() calls. Some core callbacks require this. While they can be re-jiggered to not require it, some plugins may like it as then multiple ajax actions can go through the same callback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15327.4.diff attached to Ticket #15327</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 20 Jan 2012 23:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15327/15327.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15327/15327.4.diff/1327100895700043</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 20 Jan 2012 23:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:15/1327100766496356</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/15327/15327.3.diff" title="Attachment '15327.3.diff' in Ticket #15327"&gt;15327.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/15327/15327.3.diff" title="Download"&gt;​&lt;/a&gt; further extends the work of kurtpayne and ryan. I addressed the three notes in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15327#comment:14" title="Comment 14"&gt;comment 14&lt;/a&gt; and went through every callback in ajax-actions.php, first with a script and then by hand.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/1650009"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;The script&lt;/a&gt; identified any local variables that were set before use. These problems were addressed by either globalizing a variable or tweaking the code to make the assignment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19868 (Custom post type called 'preview' admin issues.) created</title>
      
        <dc:creator>pnomolos</dc:creator>

      <pubDate>Fri, 20 Jan 2012 22:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19868</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19868/1327100376831231</guid>
      <description>&lt;p&gt;
The admin css includes a general rule for the .preview class of { float: right }.  If you have a custom post type of 'preview' then this css rule causes all sorts of issues when viewing the list of CPT Previews in the backend.  Adding a tr.preview { float: none } rule should fix this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>15327.3.diff attached to Ticket #15327</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 20 Jan 2012 22:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15327/15327.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15327/15327.3.diff/1327100325096569</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19864 (Abstract export_wp() for use by CLI scripts) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 20 Jan 2012 22:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19864#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19864#comment:2/1327099076592386</guid>
      <description>&lt;p&gt;
westi indicated a desire (in IRC) that core should support this. I agree.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19867 (wp_dropdown_users() still not scalable) updated</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Fri, 20 Jan 2012 22:12:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19867#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19867#comment:1/1327097579070041</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19867/user_autocomplete.diff" title="Attachment 'user_autocomplete.diff' in Ticket #19867"&gt;attachment:ticket:19867:user_autocomplete.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19867/user_autocomplete.diff" title="Download"&gt;​&lt;/a&gt; is a suggested solution using an autocomplete handling to replace the select box after a threshold of results is hit.
&lt;/p&gt;
&lt;p&gt;
As an alternative, I'm working on a second patch that will just be a tweak to add a filter that will a plugin to add this functionality before the dropdown is generated, in case a built in solution isn't accepted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18450 (New safe action to add rewrite rules on) updated</title>
      
        <dc:creator>ejdanderson</dc:creator>

      <pubDate>Fri, 20 Jan 2012 22:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18450#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18450#comment:22/1327097322605767</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>user_autocomplete.diff attached to Ticket #19867</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Fri, 20 Jan 2012 22:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19867/user_autocomplete.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19867/user_autocomplete.diff/1327097242524239</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19867 (wp_dropdown_users() still not scalable) created</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Fri, 20 Jan 2012 22:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19867</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19867/1327097067295535</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14572" title="#14572: task (blessed): post_author_meta_box causes fatal error on site with large userbase. (closed: fixed)"&gt;#14572&lt;/a&gt; made huge improvements to the performance of wp_dropdown_users(), however, on certain sites that have an unusually large set of authors, wp_dropdown_users() still isn't usable.  It either causes a memory error on the server, or potentially crashes the client browser due to content size.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>19800.remove-resize.diff attached to Ticket #19800</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 20 Jan 2012 21:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19800/19800.remove-resize.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19800/19800.remove-resize.diff/1327094866086113</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19863 (Add filters to export_wp() process for granular export control) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 20 Jan 2012 21:13:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19863#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19863#comment:1/1327094022151355</guid>
      <description>&lt;p&gt;
+1 for being able to filter which posts get exported through a hook.
&lt;/p&gt;
&lt;p&gt;
Not so sure about the hooks for manipulating the export format.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19809 (can't pass an array(class, method) as a callback in add_settings_field()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 20 Jan 2012 21:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19809#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19809#comment:5/1327093944913189</guid>
      <description>invalid: &lt;p&gt;
Feel free to reopen with more exact steps to reproduce if there's still a problem.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19864 (Abstract export_wp() for use by CLI scripts) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 20 Jan 2012 21:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19864#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19864#comment:1/1327093793832353</guid>
      <description>wontfix: &lt;p&gt;
There already is a CLI script that can do exports: &lt;a class="ext-link" href="https://github.com/andreascreten/wp-cli"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/andreascreten/wp-cli&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Type &lt;code&gt;wp help export&lt;/code&gt; to see how to use it.
&lt;/p&gt;
&lt;p&gt;
Implementation details: &lt;a class="ext-link" href="https://github.com/andreascreten/wp-cli/issues/44"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/andreascreten/wp-cli/issues/44&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #6531 (Recursively search for files in theme and plugin editors) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 20 Jan 2012 20:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6531#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6531#comment:11/1327092977194869</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17552 (Plugin editor incorrectly calls some files inactive.) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 20 Jan 2012 20:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17552#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17552#comment:4/1327092833478065</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 20 Jan 2012 20:51:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:13/1327092696233411</guid>
      <description>&lt;p&gt;
CodeMirror is a  solid and unobtrusive editor (degrades gracefully, ie, doesn't impact without javascript) which is simple to include into the plugin/theme editor pages. For example, I've quickly integrated it into Scripts-n-Styles to see what would be involved (and because I thought it'd be useful):
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/unFocus/Scripts-n-Styles/blob/master/js/code-editor.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/unFocus/Scripts-n-Styles/blob/master/js/code-editor.js&lt;/a&gt; &lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/unFocus/Scripts-n-Styles/blob/master/includes/class.SnS_Admin_Code_Editor.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/unFocus/Scripts-n-Styles/blob/master/includes/class.SnS_Admin_Code_Editor.php&lt;/a&gt; &lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/unFocus/Scripts-n-Styles/blob/master/css/code-editor.css"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/unFocus/Scripts-n-Styles/blob/master/css/code-editor.css&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The CodeMirror part of it works great (though there are bugs in the wp side of the editor). There are also quite a few other plugins that configure CodeMirror in more advanced ways, to include Search-n-Replace, Auto-complete, and more. (This also means it is somewhat tested in the wordpress environment.)
&lt;/p&gt;
&lt;p&gt;
CodeMirror is open and actively developed &lt;a class="ext-link" href="https://github.com/marijnh/CodeMirror2/graphs/impact"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/marijnh/CodeMirror2/graphs/impact&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Supports Firefox 2+, Chrome (any version), Safari 3+, Internet Explorer 6+, Opera 9+ &lt;a class="ext-link" href="http://codemirror.net/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codemirror.net/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Anyone still interested in this? I think I remember something about splitting the editors completely out of core and into a "Core Plugin" like the importer plugin. If so, any interest in that? (I'd contribute if it had blessing.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 20 Jan 2012 20:36:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:14/1327091782499886</guid>
      <description>&lt;p&gt;
Resounding +1.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Notes:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It looks like indentation is off in ajax-actions.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;We would be well-served to do a svn cp admin-ajax.php includes/ajax-actions.php, to keep the history of individual actions, particularly since we can get away with it in terms of indentation being the same.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;I would normally like the abstraction in the handler, but since it is a nice heads up display, I would vote it become a bit more obvious, something like:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;add_action( 'wp_ajax_nopriv_autosave', 'wp_ajax_nopriv_autosave' ), 1 );
$core_actions = array( ... );
foreach ( $core_actions as $action ) {
    add_action( 'wp_ajax_' . $action, 'wp_ajax_' . str_replace( '-', '_', $action ), 1 );
}
unset( $core_actions, $action );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 20:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:13/1327091169800582</guid>
      <description>&lt;p&gt;
We were split on whether to use pure actions or a whitelist of core action that would be directly called.  This patch is something of a compromise. The core actions are added from a list after admin_init. This means the core actions cannot be removed easily using remove_action(). The core actions are added with priority 1. For a plugin to override they would have to explicitly use priority 0. These couple of hoops might at least make plugin authors a bit wary of overriding core ajax actions.
&lt;/p&gt;
&lt;p&gt;
This approach could easily be converted from using add_action() to directly calling the core actions.
&lt;/p&gt;
&lt;p&gt;
I think removing the add_action() calls from ajax-actions.php and instead using a list in admin-ajax.php is a good thing either way.  We have one easy to read canonical list, it is a bit more DRY, and ajax-actions.php becomes a pure include file (something I wish we were more diligent about).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15327.2.diff attached to Ticket #15327</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 20:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15327/15327.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15327/15327.2.diff/1327090892196057</guid>
      <description>&lt;p&gt;
Whitelist with add_action at priority 1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19866 (Allow specifications of any wp_posts field(s) in WP_Query) created</title>
      
        <dc:creator>bigdawggi</dc:creator>

      <pubDate>Fri, 20 Jan 2012 19:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19866</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19866/1327089523819461</guid>
      <description>&lt;p&gt;
Hi guys, I'm considering writing a patch to be able to pull specific fields from a WP_Query but wanted to see if there was already something in the works on another ticket.  I searched trac and hackers list (via its Google Group) and surprisingly didn't see anything.
&lt;/p&gt;
&lt;p&gt;
Here's the current implementation which limits people to only querying for certain fields: wp-includes/query.php:2033
&lt;/p&gt;
&lt;pre class="wiki"&gt;		switch ( $q['fields'] ) {
			case 'ids':
				$fields = "$wpdb-&amp;gt;posts.ID";
				break;
			case 'id=&amp;gt;parent':
				$fields = "$wpdb-&amp;gt;posts.ID, $wpdb-&amp;gt;posts.post_parent";
				break;
			default:
				$fields = "$wpdb-&amp;gt;posts.*";
		}
&lt;/pre&gt;&lt;p&gt;
Stems from a situation where we needed all posts of a certain type -- potentially thousands -- but really only required post_title and ID fields, so didn't want all that memory overhead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15475 (Proposed new function: wp_unset_object_terms) updated</title>
      
        <dc:creator>ejdanderson</dc:creator>

      <pubDate>Fri, 20 Jan 2012 19:31:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15475#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15475#comment:15/1327087910493571</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>do_enclose-19735.diff attached to Ticket #19865</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Fri, 20 Jan 2012 19:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19865/do_enclose-19735.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19865/do_enclose-19735.diff/1327087178070494</guid>
      <description>&lt;p&gt;
fix do_enclose throwing errors while checking for media to enclose
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19865 (do_enclose() throws WP_DEBUG notices when $headers has no content_type) created</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Fri, 20 Jan 2012 19:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19865</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19865/1327087142015888</guid>
      <description>&lt;p&gt;
This only happens in the background so you'll have to enable debug.log (WP_DEBUG_LOG) as well as WP_DEBUG to see the output, but &lt;code&gt;do_enclose()&lt;/code&gt; chokes on the results of &lt;code&gt;wp_get_http_headers( $url)&lt;/code&gt; because it assumes there will be a 'content-length' in the results.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
[20-Jan-2012 18:56:10] PHP Notice:  Undefined index:  content-length in /path-to-site/wp-svn/wp-includes/functions.php on line 524
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I noticed it when saving a post that had a lot of links in it. Not all of them caused the error, but enough that it flooded debug.log. I suspect the effect is harmless because they weren't video or audio links. This just got overlooked 'cause it's so deep in the background.
&lt;/p&gt;
&lt;p&gt;
Th lack of checking with isset() also applies to 'content-type' so the patch addresses that as well. I'm pretty sure this will safely fix the problem because the foreach section only does anything if 'content-type' is 'audio' or 'video' and all the urls that were bugged for me were pages.
&lt;/p&gt;
&lt;p&gt;
I tested this by inserting an mp3 URL and it was added as an 'enclosure' meta with the length and type.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>NA1</dc:creator>

      <pubDate>Fri, 20 Jan 2012 19:13:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:35/1327086822666290</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19643 (Allow array for $extra_fields in request_filesystem_credentials) updated</title>
      
        <dc:creator>wpsmith</dc:creator>

      <pubDate>Fri, 20 Jan 2012 18:41:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19643#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19643#comment:9/1327084911992223</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19864 (Abstract export_wp() for use by CLI scripts) created</title>
      
        <dc:creator>scottconnerly</dc:creator>

      <pubDate>Fri, 20 Jan 2012 18:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19864</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19864/1327083377592422</guid>
      <description>&lt;p&gt;
Need to be able to execute an export from the PHP CLI for the purpose of running cron / maintenance scripts that write out exports.
&lt;/p&gt;
&lt;p&gt;
This would include writing additional hooks that allow the arguments to be pulled from the cli as well as hooks that allow the output to redirected from the output buffer to a file.
&lt;/p&gt;
&lt;p&gt;
Related ticket: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19863" title="#19863: enhancement: Add filters to export_wp() process for granular export control (closed: fixed)"&gt;#19863&lt;/a&gt;, extra hooks for manipulating content and arguments of an export
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19863 (Add filters to export_wp() process for granular export control) created</title>
      
        <dc:creator>scottconnerly</dc:creator>

      <pubDate>Fri, 20 Jan 2012 17:34:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19863/1327080889919908</guid>
      <description>&lt;p&gt;
The only hook that allows for export customization right now is do_action('export_wp'). There should be a filter on the $args in the same area as well as actions in the export form so additional export filters can be defined on any post type (especially the custom post types)
&lt;/p&gt;
&lt;p&gt;
Use case example would be the shopping experience I'm building as a plugin. Administrators need to be able to export order CSVs for fulfillment systems, inventory systems, accounting systems, etc. I need to be able to filter by date range as well as some custom taxonomies I have defined to manage the order's present status.
&lt;/p&gt;
&lt;p&gt;
Then I need to be able to generate CSVs rather than XMLs in the output. For that I can currently hijack the process at do_action('export_wp'), but it'd be better if there were hooks all through the export process that allowed me to output different headers, adjust the query, and manipulate the retrieved data.
&lt;/p&gt;
&lt;p&gt;
Essentially, we're currently allowed to import any custom post content via CSV in a bespoke manner, but there's no way to get it back out in a similar format.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 17:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:12/1327079872192989</guid>
      <description>&lt;p&gt;
Discussed this a little bit with nacin. I overall like it, but a couple of points came up:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The change from global to local scope could break things in core and in plugins. There is probably a plugin somewhere that modified global context in order to affect a core ajax action. Not that that should be encouraged.
&lt;/li&gt;&lt;li&gt;Core ajax handlers can now be overridden. That could get ugly.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 17:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:35/1327079317779456</guid>
      <description>&lt;p&gt;
nacin seems interested, so have fun. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) reopened</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 17:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:34/1327079290094992</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19862 ("My Sites" menu should include "Create a new site" if enabled in ...) created</title>
      
        <dc:creator>ebellempire</dc:creator>

      <pubDate>Fri, 20 Jan 2012 16:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19862</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19862/1327078694432904</guid>
      <description>&lt;p&gt;
The "My Sites" menu should include "Create a new site" if blog registration is enabled in Network settings.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 20 Jan 2012 16:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:33/1327077815641169</guid>
      <description>&lt;p&gt;
Any reason given for the maybelater?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Fri, 20 Jan 2012 16:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:7/1327077469315963</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 16:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:32/1327077386303571</guid>
      <description>maybelater</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12693 (Inaccurate user role filtering) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 16:34:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12693#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12693#comment:14/1327077267603530</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19735" title="Match the exact role name when counting users in a role. Props 082net. ..."&gt;[19735]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Match the exact role name when counting users in a role. Props 082net. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12693" title="#12693: defect (bug): Inaccurate user role filtering (closed: fixed)"&gt;#12693&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19735]: Match the exact role name when counting users in a role. Props 082net. ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 16:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19735</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19735/1327077266727754</guid>
      <description>&lt;p&gt;
Match the exact role name when counting users in a role. Props 082net. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12693" title="#12693: defect (bug): Inaccurate user role filtering (closed: fixed)"&gt;#12693&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12693 (Inaccurate user role filtering) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 20 Jan 2012 16:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12693#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12693#comment:13/1327077201011003</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12693 (Inaccurate user role filtering) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 20 Jan 2012 15:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12693#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12693#comment:12/1327071987676723</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19858 (Close comments on attached images) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 20 Jan 2012 12:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19858#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19858#comment:3/1327064118003607</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19858#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19858/19858.diff" title="Attachment '19858.diff' in Ticket #19858"&gt;19858.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19858/19858.diff" title="Download"&gt;​&lt;/a&gt; simply adds 'attachment' to the array of post types to be closed. It's kind of weak — we should probably check the parent of the attachment to ensure it is either 0 or a post type of 'post' (the filter result) before continuing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe we should be using the status of inherit to mean we look at the parent in this filter instead?
&lt;/p&gt;
&lt;p&gt;
So if post-status is inherit we look at the parent's post type and date
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19859 ("Bulk Edit" Missing The Ability To Edit Tags) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 20 Jan 2012 11:16:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19859#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19859#comment:2/1327058187372128</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19845 (Drag and drop files into the Visual Editor) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 20 Jan 2012 10:57:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19845#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19845#comment:6/1327057045617181</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19396 (Featured image dialog box has "From URL" tab (which doesn't apply/work)) updated</title>
      
        <dc:creator>zemanta</dc:creator>

      <pubDate>Fri, 20 Jan 2012 10:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19396#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19396#comment:6/1327056530895647</guid>
      <description>&lt;p&gt;
We have implemented setting featured images from our widget by uploading the image through ajax on our WP plugin. Would be great to have this support in WP so we could use it from our browser extension too, and people could use the URL upload!
Let us know if we can contribute anything!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19861 ($wpdb-&gt;prepare() fails with localized floats) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 20 Jan 2012 10:41:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19861#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19861#comment:1/1327056071394664</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It would be useful if you could transform your code into a patch:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/wiki#HowtoSubmitPatches"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/wiki#HowtoSubmitPatches&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If not, just upload the modified wp-db.php file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19809 (can't pass an array(class, method) as a callback in add_settings_field()) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 20 Jan 2012 10:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19809#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19809#comment:4/1327055652117181</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19860 (pre_comment_approved filter has second argument undefined) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 20 Jan 2012 10:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19860#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19860#comment:1/1327055361770520</guid>
      <description>invalid: &lt;p&gt;
You must specifically add the filter asking for 2 arguements to be passed.:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter($action, $function, $priority=10, $number_of_args=1);&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
So you want:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter('pre_comment_approved', 'tgb_comment_filter_approved', 10, 2);&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19861 ($wpdb-&gt;prepare() fails with localized floats) created</title>
      
        <dc:creator>laotse</dc:creator>

      <pubDate>Fri, 20 Jan 2012 09:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19861</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19861/1327051226513124</guid>
      <description>&lt;p&gt;
The implementation of $wpdb-&amp;gt;prepare() is buggy in several aspects. The mess shows strikingly, if you try to write floats using %f to the database using a server locale, which has a decimal colon instead of a dot.
&lt;/p&gt;
&lt;p&gt;
Unfortunately sprintf() is localized in contrast to sccanf()! Furthermore, since PHP performs auto conversion, it can happen that a float is already passed as a string. Unfortunately, the array_walk() in prepare() escapes the ',' such that floatval() will drop the decimals. At least it does not produce another value, like if a float was passed.
&lt;/p&gt;
&lt;p&gt;
I wrote a re-implementation, which also does without any '@' prefixes. It does well for the plugin - I did not yet try to replace the core function. I'd gladly provide my code to someone, who knows how to test the code thoroughly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19860 (pre_comment_approved filter has second argument undefined) created</title>
      
        <dc:creator>laotse</dc:creator>

      <pubDate>Fri, 20 Jan 2012 09:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19860/1327050186930370</guid>
      <description>&lt;p&gt;
I wrote a filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function tgb_comment_filter_approved($mApproved, $aCommentData){ ... }
add_filter('pre_comment_approved', 'tgb_comment_filter_approved');
&lt;/pre&gt;&lt;p&gt;
and $aCommentData is always undefined. So effectively the changeset 15592 fixing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14802" title="#14802: enhancement: 'pre_comment_approved' filter does not provide context (closed: fixed)"&gt;#14802&lt;/a&gt; does not work.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19859 ("Bulk Edit" Missing The Ability To Edit Tags) closed</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 20 Jan 2012 08:07:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19859#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19859#comment:1/1327046878901034</guid>
      <description>worksforme: &lt;p&gt;
The feature is already there. When I open a bulk edit with the Use button, there is a textarea labelled tags. I put them in there, comma separated, and expect them all to be added to all posts tagged for editing.
&lt;/p&gt;
&lt;p&gt;
If this doesn't show up or work for you I suggest the support forums.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>14325-patch2.png attached to Ticket #14325</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 20 Jan 2012 05:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch2.png/1327038043711993</guid>
      <description>&lt;p&gt;
Screenshot of 14325-patch2.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14325-patch2.diff attached to Ticket #14325</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 20 Jan 2012 05:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch2.diff/1327037876131421</guid>
      <description>&lt;p&gt;
First try and rearranging elements
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14325 (No possibillity to add a "Home"-link to the nav_menu when there are no ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 20 Jan 2012 05:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14325#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14325#comment:16/1327036632921770</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch2.diff" title="Attachment '14325-patch2.diff' in Ticket #14325"&gt;attachment:14325-patch2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/14325/14325-patch2.diff" title="Download"&gt;​&lt;/a&gt; Rearranges the 'Add Home Link' button to float left.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14325 (No possibillity to add a "Home"-link to the nav_menu when there are no ...) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Fri, 20 Jan 2012 04:43:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14325#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14325#comment:15/1327034634587003</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14325#comment:14" title="Comment 14"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14325#comment:13" title="Comment 13"&gt;master jake&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Woah you have a HUGE resolution!! Anyways, as far as it not working, you do know you have to rename the .js file right? WordPress uses the mimicked one, but I submitted the patch on the dev version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ahh yes, it has indeed been a long day. I played a bit with floating the 'Add Home Link' button left but I had a heckuva time getting the 'Delete Menu' link to stay in line.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hehe, been a long day for me as well. I suppose if the button is having issues we could just make it a regular link.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14325 (No possibillity to add a "Home"-link to the nav_menu when there are no ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 20 Jan 2012 04:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14325#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14325#comment:14/1327034078229242</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14325#comment:13" title="Comment 13"&gt;master jake&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Woah you have a HUGE resolution!! Anyways, as far as it not working, you do know you have to rename the .js file right? WordPress uses the mimicked one, but I submitted the patch on the dev version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ahh yes, it has indeed been a long day. I played a bit with floating the 'Add Home Link' button left but I had a heckuva time getting the 'Delete Menu' link to stay in line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14325 (No possibillity to add a "Home"-link to the nav_menu when there are no ...) updated</title>
      
        <dc:creator>master jake</dc:creator>

      <pubDate>Fri, 20 Jan 2012 04:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14325#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14325#comment:13/1327033930960502</guid>
      <description>&lt;p&gt;
Woah you have a HUGE resolution!! Anyways, as far as it not working, you do know you have to rename the .js file right? WordPress uses the minified one, but I submitted the patch on the dev version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14325 (No possibillity to add a "Home"-link to the nav_menu when there are no ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 20 Jan 2012 04:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14325#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14325#comment:12/1327033331033225</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1.diff" title="Attachment '14325-patch1.diff' in Ticket #14325"&gt;attachment:14325-patch1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/14325/14325-patch1.diff" title="Download"&gt;​&lt;/a&gt; isn't inserting the menu item for me.
&lt;/p&gt;
&lt;p&gt;
Also, attached a screenshot of @MasterJake's &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1.diff" title="Attachment '14325-patch1.diff' in Ticket #14325"&gt;attachment:14325-patch1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/14325/14325-patch1.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
From a workflow standpoint, my main issue with the location of the Add Home Link button in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1.png" title="Attachment '14325-patch1.png' in Ticket #14325"&gt;attachment:14325-patch1.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/14325/14325-patch1.png" title="Download"&gt;​&lt;/a&gt; is that it's so far over on the right with the 'Save Menu' button. What about floating it left, something along the lines of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1B.png" title="Attachment '14325-patch1B.png' in Ticket #14325"&gt;attachment:14325-patch1B.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/14325/14325-patch1B.png" title="Download"&gt;​&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 20 Jan 2012 04:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:31/1327032194265903</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6211 (allow identical taxonomy slugs in different taxonomies) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 20 Jan 2012 04:01:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6211#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6211#comment:20/1327032079007632</guid>
      <description>duplicate: &lt;p&gt;
This is the same issue as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5809" title="#5809: defect (bug): Updating a term in one taxonomy affects the term in every taxonomy (closed: fixed)"&gt;#5809&lt;/a&gt;, just with different terminology. Closing as dupe as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5809" title="#5809: defect (bug): Updating a term in one taxonomy affects the term in every taxonomy (closed: fixed)"&gt;#5809&lt;/a&gt; has patches.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>14325-patch1B.png attached to Ticket #14325</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 20 Jan 2012 03:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1B.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1B.png/1327031744196955</guid>
      <description>&lt;p&gt;
Left float button suggestion based on 14325-patch1.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14325-patch1.png attached to Ticket #14325</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 20 Jan 2012 03:54:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1.png/1327031676572839</guid>
      <description>&lt;p&gt;
Screenshot of 14325-patch1.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19859 ("Bulk Edit" Missing The Ability To Edit Tags) created</title>
      
        <dc:creator>ademos</dc:creator>

      <pubDate>Fri, 20 Jan 2012 02:56:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19859</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19859/1327028184095139</guid>
      <description>&lt;p&gt;
Though I can add, remove and edit "categories," I cannot do such actions to "tags" inside of /wp-admin/edit.php
&lt;/p&gt;
&lt;p&gt;
So basically, I'm interested in a "bulk tag editing" GUI for the WordPress admin.
&lt;/p&gt;
&lt;p&gt;
===
&lt;/p&gt;
&lt;p&gt;
I was hoping to find out the status of this feature (planned, not planned, etc) but it appears that no one has spoken about this feature on the WordPress Trac.
&lt;/p&gt;
&lt;p&gt;
Is there any interest in adding this feature? And could the respondent please provide any details on why or why not?
&lt;/p&gt;
&lt;p&gt;
Thank you for your time.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14325 (No possibillity to add a "Home"-link to the nav_menu when there are no ...) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Fri, 20 Jan 2012 02:44:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14325#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14325#comment:11/1327027471898284</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14325-patch1.diff attached to Ticket #14325</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Fri, 20 Jan 2012 02:43:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14325/14325-patch1.diff/1327027381088157</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 20 Jan 2012 00:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855#comment:4/1327019559782883</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19855#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Coding this wouldn't be hard: &lt;code&gt;preg_split('|&amp;lt;/?pre[ &amp;gt;]|', $pee, -1, PREG_SPLIT_DELIM_CAPTURE)&lt;/code&gt;, then go through the array and replace strings starting with &lt;code&gt;&amp;lt;pre&lt;/code&gt; with incremental placeholder, keeping them for later in an &lt;code&gt;array('placeholder_#' =&amp;gt; 'string', ...)&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I used preg_match_all instead of preg_split.  I didn't see a performance a significant performance difference either way.  Let me know if you see any problems with the patch.  The sample content did not work before the patch, and worked fine with the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19855.patch attached to Ticket #19855</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 20 Jan 2012 00:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19855/19855.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19855/19855.patch/1327019461391537</guid>
      <description>&lt;p&gt;
Replace pre blocks with tokens at the start of wpautop, then reverse the process at the end
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19852.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 19 Jan 2012 22:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852.diff/1327013073080290</guid>
      <description>&lt;p&gt;
First pass at loading the new mo files
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19437 (Pass post type as a class to TinyMCE init) updated</title>
      
        <dc:creator>gluten</dc:creator>

      <pubDate>Thu, 19 Jan 2012 21:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19437#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19437#comment:4/1327008662732918</guid>
      <description>&lt;p&gt;
It would also be useful to have a class added with the wp_editor() $editor_id to allow for unique styling of TinyMCE editors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19437 (Pass post type as a class to TinyMCE init) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 19 Jan 2012 21:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19437#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19437#comment:3/1327008555400693</guid>
      <description>&lt;p&gt;
Just dropping a note while it's on my mind, this will become increasingly more important as plugins (like bbPress/BuddyPress) start including wp_editor() in places outside of the traditional post editor; within the theme, for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19599.diff attached to Ticket #19599</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 21:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19599/19599.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19599/19599.diff/1327007287925975</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19689 (Context for Dismiss) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 20:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19689#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19689#comment:3/1327005576543510</guid>
      <description>&lt;p&gt;
There are a number of contexts here. How exactly should they be split?
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;"Dismiss" to hide an inline error message (async-upload.php, and the second one in script-loader.php)
&lt;/li&gt;&lt;li&gt;"Dismiss" to hide a boxed area (dashboard.php, both instances — Browse Happy and the Welcome panel)
&lt;/li&gt;&lt;li&gt;"Dismiss" to close a pointer (the first one in script-loader.php)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The contexts for the first bullet point are "Cancel upload" (per the patch) and the second and third points are "Close window" (per the patch). Is there a difference between what is occurring in points 2 and 3? To me, I'd think that point 2 is aligned with point 1, not point 3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Jan 2012 19:47:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855#comment:3/1327002446083340</guid>
      <description>&lt;p&gt;
Generally wpautop should be leaving the content of the &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tags untouched. How about we replace any &lt;code&gt;&amp;lt;pre&amp;gt; ... &amp;lt;/pre&amp;gt;&lt;/code&gt; with placeholders at the beginning and put them back at the end? That would not only remove this preg_replace_callback() (and the backtracking) but also speed up wpautop as it wouldn't backtrack through these parts of the post_content.
&lt;/p&gt;
&lt;p&gt;
Coding this wouldn't be hard: &lt;code&gt;preg_split('|&amp;lt;/?pre[ &amp;gt;]|', $pee, -1, PREG_SPLIT_DELIM_CAPTURE)&lt;/code&gt;, then go through the array and replace strings starting with &lt;code&gt;&amp;lt;pre&lt;/code&gt; with incremental placeholder, keeping them for later in an &lt;code&gt;array('placeholder_#' =&amp;gt; 'string', ...)&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19852-makepot.5.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 19 Jan 2012 19:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.5.diff/1327001498590204</guid>
      <description>&lt;p&gt;
User and site admin in same pot. Dupe removal for net admin pot.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19852-makepot.4.diff attached to Ticket #19852</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 19 Jan 2012 19:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19852/19852-makepot.4.diff/1326999985378015</guid>
      <description>&lt;p&gt;
With some fixes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19589 (Simplify the recording of backtraces) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 18:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19589#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19589#comment:4/1326998403262966</guid>
      <description>&lt;p&gt;
I think it would be better for the function to return an array that can then be imploded. For example someone may wish to turn this into a list, or reverse it first, before printing it. The comma is a bit hard-coded in.
&lt;/p&gt;
&lt;p&gt;
Beyond that, +1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18909 (Bundled jQuery UI should have CSS) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 19 Jan 2012 17:47:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18909#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18909#comment:35/1326995221199282</guid>
      <description>&lt;p&gt;
I think that in the event of a major WP admin refresh, or a major jQuery-UI update, retracing (redoing) the steps above might be better then forking the current state of the theme and back-applying compatibility for the (possibly cryptic or even drastic) wp-admin or jquery-ui changes.
&lt;/p&gt;
&lt;p&gt;
It comes down to whether its easier redoing the two github commits or search/replacing whatever changes occur in wp-admin or jquery-ui (which really depends on how significant those changes are). With major changes the former is better; minor changes, the latter is better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18909 (Bundled jQuery UI should have CSS) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 19 Jan 2012 17:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18909#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18909#comment:34/1326993863234572</guid>
      <description>&lt;p&gt;
To follow the development so far, these are the steps taken to date:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
The original base for the CSS was "Smoothness" &lt;a class="ext-link" href="http://jqueryui.com/themeroller/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://jqueryui.com/themeroller/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Smoothness" was altered using ThemeRoller to arrive at the initial commit for github (See CSS source for the url link which shows this ThemeRoller configuration)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
"CSS3 gradients instead of images, blue gradient for progress bar" &lt;a class="ext-link" href="https://github.com/helenhousandi/wp-admin-jquery-ui/commit/ea08c09bbca3f73be325e67b879659a78dd7f882"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/helenhousandi/wp-admin-jquery-ui/commit/ea08c09bbca3f73be325e67b879659a78dd7f882&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Better matched overlay and drop shadow (per F J Kaiser)" &lt;a class="ext-link" href="https://github.com/helenhousandi/wp-admin-jquery-ui/commit/7c3c4de3e3de97aeb6be37e9274fdccaadf60ec4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/helenhousandi/wp-admin-jquery-ui/commit/7c3c4de3e3de97aeb6be37e9274fdccaadf60ec4&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You should now be all caught up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #761 (Add hook to conditionally disable comment notifications) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/761#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/761#comment:6/1326991650515873</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Epic revival.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8592 (Private Pages not listed in the Parent dropdown) updated</title>
      
        <dc:creator>Master Jake</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8592#comment:138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8592#comment:138/1326991523789300</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Definitely needs refresh. I discovered another issue today where if you assign a page as a child of another page, and then set that parent page's status to private, the child page is still associated with the parent but the dropdown list on the child pages shows (no parent).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19027 (XML-RPC metaWeblog.getPost and metaWeblog.getRecentPosts don't return ...) updated</title>
      
        <dc:creator>ocollet</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:42:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19027#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19027#comment:5/1326991353186713</guid>
      <description>&lt;p&gt;
I was actually trying to get consistent with the &lt;code&gt;postCreated&lt;/code&gt; property, therefore my suggestion to have the following fields:
&lt;code&gt;postCreated&lt;/code&gt;, &lt;code&gt;postModified&lt;/code&gt;, &lt;code&gt;post_date_gmt&lt;/code&gt; and &lt;code&gt;post_modified_gmt&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19027#comment:4" title="Comment 4"&gt;ericmann&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19027#comment:3" title="Comment 3"&gt;maxcutler&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you only expose the GMT version, then XML-RPC clients have to do their own datetime math (and call getOption to figure out the blog display timezone) to determine what the displayed value should be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree.  We should expose both the GMT and local post modified fields ... but we should be consistent in how we name them.  If we're using &lt;code&gt;post_modified_gmt&lt;/code&gt; we should also use &lt;code&gt;post_modified&lt;/code&gt; rather than &lt;code&gt;postModified&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13917 (wp.uploadFile cannot be attached to any post) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13917#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13917#comment:5/1326991009120935</guid>
      <description>&lt;p&gt;
Updated diff looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18683 (XMLRPC wp.getMediaLibrary doesn't return attachment ids) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18683#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18683#comment:4/1326990944985275</guid>
      <description>&lt;p&gt;
+1 On returning IDs.  I know of at least 2 XMLRPC clients that would benefit from this addition.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18126 (Expose image options on XML-RPC) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:34:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18126#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18126#comment:6/1326990867978636</guid>
      <description>&lt;p&gt;
Looks fine to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19027 (XML-RPC metaWeblog.getPost and metaWeblog.getRecentPosts don't return ...) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19027#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19027#comment:4/1326990704488302</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19027#comment:3" title="Comment 3"&gt;maxcutler&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you only expose the GMT version, then XML-RPC clients have to do their own datetime math (and call getOption to figure out the blog display timezone) to determine what the displayed value should be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree.  We should expose both the GMT and local post modified fields ... but we should be consistent in how we name them.  If we're using &lt;code&gt;post_modified_gmt&lt;/code&gt; we should also use &lt;code&gt;post_modified&lt;/code&gt; rather than &lt;code&gt;postModified&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment.php.r19734.diff attached to Ticket #761</title>
      
        <dc:creator>jeffstieler</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:16:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/761/comment.php.r19734.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/761/comment.php.r19734.diff/1326989796969402</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #761 (Add hook to conditionally disable comment notifications) reopened</title>
      
        <dc:creator>jeffstieler</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:16:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/761#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/761#comment:5/1326989782946582</guid>
      <description>&lt;p&gt;
The "just rewrite them" response needs to be reconsidered as the &lt;code&gt;wp_notify_postauthor&lt;/code&gt; function is about 100 lines long now.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19858 (Close comments on attached images) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19858#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19858#comment:2/1326989635451274</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19858/19858.diff" title="Attachment '19858.diff' in Ticket #19858"&gt;19858.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19858/19858.diff" title="Download"&gt;​&lt;/a&gt; simply adds 'attachment' to the array of post types to be closed. It's kind of weak — we should probably check the parent of the attachment to ensure it is either 0 or a post type of 'post' (the filter result) before continuing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19858.diff attached to Ticket #19858</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19858/19858.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19858/19858.diff/1326989535280013</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19858 (Close comments on attached images) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19858#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19858#comment:1/1326989493787923</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Caused by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16090" title="#16090: enhancement: _close_comments_for_old_posts should not close pages (closed: fixed)"&gt;#16090&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16090 (_close_comments_for_old_posts should not close pages) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16090#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16090#comment:12/1326989474983162</guid>
      <description>&lt;p&gt;
We forgot about attachments here. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19858" title="#19858: defect (bug): Close comments on attached images (closed: duplicate)"&gt;#19858&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19858 (Close comments on attached images) created</title>
      
        <dc:creator>dohman</dc:creator>

      <pubDate>Thu, 19 Jan 2012 16:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19858/1326988983868419</guid>
      <description>&lt;p&gt;
In posts, for gallery images and individual images which open in an attachment page when clicked, the image attachment page does not close comments after the designated xx days as the original post does.
&lt;/p&gt;
&lt;p&gt;
This creates a pile of spam to manage for users that rely on closed comments after xx days and post lots of images.
&lt;/p&gt;
&lt;p&gt;
You can replicate the problem with these steps:
1) In Discussion Settings: set comments to close after 1 day. 'Automatically close comments on articles older than 1 days'
&lt;/p&gt;
&lt;p&gt;
2)Create a post with publish date 2 days ago. Insert an image or gallery which opens in in an attachment page, not just as the image file.
&lt;/p&gt;
&lt;p&gt;
3) The post will have comments closed.
&lt;/p&gt;
&lt;p&gt;
4) The image attachment page will still have comments open.
&lt;/p&gt;
&lt;p&gt;
Here's a test post of mine. Notice the comments closed on the post but still open for the images.
&lt;a class="ext-link" href="http://hackhappy.wordpress.com/2012/01/17/image-attachment-comment-test/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://hackhappy.wordpress.com/2012/01/17/image-attachment-comment-test/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Bottom Line: Comments should also close after xx days for image attachments, just as the post does. Users reasonably expect this.
&lt;/p&gt;
&lt;p&gt;
Check the post type for image attachment page. It may be marked as a regular page as pages are not controlled by this setting.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19815 (Theme install and search screens should infinitely scroll) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 15:05:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19815#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19815#comment:9/1326985542409480</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19815#comment:8" title="Comment 8"&gt;garyc40&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There should be some way for the user to quickly scroll to top to navigate to other pages, or refine their search criteria.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hooray for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18578" title="#18578: defect (bug): Remove unused (?) 'hierarchical' arg from register_post_status defaults (closed: fixed)"&gt;#18578&lt;/a&gt;, then! Will keep the rest of your points in mind as we get on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10142 (Add metadata support for taxonomy terms) updated</title>
      
        <dc:creator>Mamaduka</dc:creator>

      <pubDate>Thu, 19 Jan 2012 14:50:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10142#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10142#comment:56/1326984654609644</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19232 (Smush admin images to lower file size) updated</title>
      
        <dc:creator>l3rady</dc:creator>

      <pubDate>Thu, 19 Jan 2012 14:39:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19232#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19232#comment:6/1326983951409318</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19232 (Smush admin images to lower file size) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 14:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19232#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19232#comment:5/1326983710391485</guid>
      <description>&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19857" title="#19857: enhancement: PNG Optimization or core images (closed: duplicate)"&gt;#19857&lt;/a&gt; as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19857 (PNG Optimization or core images) closed</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 14:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19857#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19857#comment:1/1326983690526273</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19232" title="#19232: enhancement: Smush admin images to lower file size (closed: fixed)"&gt;#19232&lt;/a&gt;, which has files attached from the &lt;code&gt;wp-admin&lt;/code&gt; and &lt;code&gt;wp-includes&lt;/code&gt; folders.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) updated</title>
      
        <dc:creator>AdamBackstrom</dc:creator>

      <pubDate>Thu, 19 Jan 2012 12:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855#comment:2/1326975876573065</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is affected by the &lt;code&gt;pcre.backtrack_limit&lt;/code&gt; in php.ini. The default in PHP &amp;lt; 5.3.7 was 100000, and in PHP 5.3.7 they increased limit 10x, which is still 10x lower than PCRE internal defaults.
&lt;/p&gt;
&lt;p&gt;
You observe the limit with this bit of code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function clean_pre($matches) {
	return $matches[1] . $matches[2] . "&amp;lt;/pre&amp;gt;";
}
$pee = '&amp;lt;pre&amp;gt;' . str_repeat( 'a', 99995 ) . '&amp;lt;/pre&amp;gt;';
ini_set( 'pcre.backtrack_limit', 100000 ); // php &amp;lt; 5.3.7 default
$pee = preg_replace_callback('!(&amp;lt;pre[^&amp;gt;]*&amp;gt;)(.*?)&amp;lt;/pre&amp;gt;!is', 'clean_pre', $pee );
var_dump( null == $pee );
ini_set( 'pcre.backtrack_limit', 99999 );
$pee = preg_replace_callback('!(&amp;lt;pre[^&amp;gt;]*&amp;gt;)(.*?)&amp;lt;/pre&amp;gt;!is', 'clean_pre', $pee );
var_dump( null == $pee );
&lt;/pre&gt;&lt;p&gt;
See also: PHP &lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=40846"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Request #40846 pcre.backtrack_limit too restrictive&lt;/a&gt;. Both &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8553" title="#8553: defect (bug): preg_replace_callback in do_shortcode returns empty for large posts (closed: fixed)"&gt;#8553&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15600" title="#15600: defect (bug): shortcode_unautop returns emtpy string (closed: fixed)"&gt;#15600&lt;/a&gt; reference the backtrack limit in relation to shortcodes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19589 (Simplify the recording of backtraces) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 19 Jan 2012 12:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19589#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19589#comment:3/1326974899279782</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>PNGsOptimized.patch attached to Ticket #19857</title>
      
        <dc:creator>l3rady</dc:creator>

      <pubDate>Thu, 19 Jan 2012 11:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19857/PNGsOptimized.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19857/PNGsOptimized.patch/1326973402603968</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19857 (PNG Optimization or core images) created</title>
      
        <dc:creator>l3rady</dc:creator>

      <pubDate>Thu, 19 Jan 2012 11:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19857</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19857/1326973384015244</guid>
      <description>&lt;p&gt;
Just out of curiosity I went to see if the images distributed with WordPress were optimized to give their smallest possible file size. Well after running all the PNGs through PNGGauntlet I was able to shave off 68KB of filesize.
&lt;/p&gt;
&lt;p&gt;
A small amount, but its a task that took all of two minutes to preform. I'd love to see WordPress run an optimization on images before publishing versions.
&lt;/p&gt;
&lt;p&gt;
I've attached a patch of the optimized PNGs
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19815 (Theme install and search screens should infinitely scroll) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 19 Jan 2012 08:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19815#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19815#comment:8/1326961749607444</guid>
      <description>&lt;p&gt;
Looking forward to seeing your work on this :)
&lt;/p&gt;
&lt;p&gt;
Several UX things I usually encounter with infinite scrolling in other web sites / apps:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;As the list infinitely expands, the user scrolls farther away from the top. There should be some way for the user to quickly scroll to top to navigate to other pages, or refine their search criteria.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Let's say the user navigates away from the page. If the user decides to go back by clicking the browser's "Back" button, they should be presented with the previous theme browsing state, rather than with page 1.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Some sort of indication of the range of items being displayed versus the total number of items should be presented to the user as the next page is preloaded and displayed (e.g. 120 - 145 of 20000 total).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Don't know if all of these should apply to this case, but could be some idea to consider.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19856.diff attached to Ticket #19856</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 19 Jan 2012 08:09:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19856/19856.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19856/19856.diff/1326960554837591</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19856 (wp_get_referer() doesn't return false when the referer URL is the same ...) created</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 19 Jan 2012 08:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19856/1326960533577027</guid>
      <description>&lt;p&gt;
Inside wp_get_referer(), there's this conditional statement:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( $ref &amp;amp;&amp;amp; $ref !== $_SERVER['REQUEST_URI'] )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
It is there to ensure that wp_get_referer() doesn't return the same page I'm on. This is useful when redirecting because I can detect and avoid infinite redirection.
&lt;/p&gt;
&lt;p&gt;
According to PHP documentation, &lt;code&gt;$_SERVER['REQUEST_URI']&lt;/code&gt; is only the URI on the host. As a result, the conditional statement above fails in this case:
&lt;/p&gt;
&lt;p&gt;
Let's say I was redirected from &lt;a class="ext-link" href="http://example.com/sample-uri"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/sample-uri&lt;/a&gt; to itself (either by clicking a link or a form submission). Then:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ref = 'http://example.com/sample-uri';
$_SERVER['REQUEST_URI'] = '/sample-uri';
&lt;/pre&gt;&lt;p&gt;
So technically, the referrer is the same page, but wp_get_referer() doesn't return false as expected, because &lt;code&gt;$ref !== $_SERVER['REQUEST_URI']&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
A better conditional statement would be:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( $ref &amp;amp;&amp;amp; parse_url( $ref, PHP_URL_PATH ) !== $_SERVER['REQUEST_URI']  )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Patch attached.
&lt;/p&gt;
&lt;p&gt;
I'm using PHP 5.3.6, Apache 2.2.20.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 19 Jan 2012 07:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855#comment:1/1326956859659161</guid>
      <description>&lt;p&gt;
Sounds similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15600" title="#15600: defect (bug): shortcode_unautop returns emtpy string (closed: fixed)"&gt;#15600&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18311 (Support HTML in image captions.) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 19 Jan 2012 05:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18311#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18311#comment:22/1326950713228905</guid>
      <description>&lt;p&gt;
Related plugin? &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/rps-attach-caption-expand/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RPS Attach Caption Expand&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 04:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:6/1326946525790918</guid>
      <description>&lt;p&gt;
Ah, the description, file path, and tags are hidden by default in my patch on &lt;code&gt;themes.php&lt;/code&gt;. The screenshot just shows one expanded (to show what that looks like and to show where the update notice goes when details are shown).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:5/1326945085453042</guid>
      <description>&lt;p&gt;
I wouldn't remove altogether, but I'd hide them both in the default view -- the info should be available to be expanded, but if I've already searched for and installed a theme and I'm looking right at the screenshot, I don't need to know that it's white and 2-column.
&lt;/p&gt;
&lt;p&gt;
Another argument for having the description available to be expanded (or viewed somehow) is multisite users who already have a selection of themes in front of them without having gone through the search process themselves. They can filter by tag on the installed set, but they may never have had access to the description.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:43:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:4/1326944596346657</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:42:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:3/1326944579682630</guid>
      <description>&lt;p&gt;
Tags and descriptions. If you've already installed them, you know what they are. Maybe a 'click to expand'?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:41:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:2/1326944518629366</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19853/19853.diff" title="Attachment '19853.diff' in Ticket #19853"&gt;19853.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19853/19853.diff" title="Download"&gt;​&lt;/a&gt; moves the description into and the author out of the hidden details in &lt;code&gt;theme-install.php&lt;/code&gt; and moves things around on &lt;code&gt;themes.php&lt;/code&gt; to be more similar to the install screen. Could not find the same author name and link in the .org API response, so it's a little different for &lt;code&gt;theme-install.php&lt;/code&gt;, but maybe I missed it.
&lt;/p&gt;
&lt;p&gt;
Screenshot of &lt;code&gt;themes.php&lt;/code&gt; with one expanded: &lt;a class="ext-link" href="http://cl.ly/45282y440k0310113Q35"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/45282y440k0310113Q35&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Suggestion from Ipstenu and sabreuse is to remove tags from installed theme details entirely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19853.diff attached to Ticket #19853</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 03:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19853/19853.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19853/19853.diff/1326943686101783</guid>
      <description>&lt;p&gt;
Patch for themes.php and theme-install.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19855 (Too much text in &lt;pre&gt; tag causes no output) created</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 19 Jan 2012 01:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19855/1326937451934860</guid>
      <description>&lt;p&gt;
Posting this on behalf of Sirisian in IRC who sent the question to wp-hackers on my suggestion and didn't get anywhere.
&lt;/p&gt;
&lt;p&gt;
I was writing an article on my blog with a huge code dump at the end inside of a pre tag. I noticed that this breaks wordpress. This is 100% reproducible by pasting &lt;a class="ext-link" href="http://pastebin.com/6m3RVGbr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pastebin.com/6m3RVGbr&lt;/a&gt; into a post then hitting preview (You can use blank pre tags. I just had stuff in them for a syntax highlighter plugin. It doesn't generate a page even with all plugins disabled anyway).
&lt;/p&gt;
&lt;p&gt;
I believe it's caused because there's over 64 KB of data in the pre tags. Talking to someone in the IRC and they said:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
looks like there's a preg_replace_callback called clean_pre, probably that's what's failing due to size
basically, probably wpautop()'s fault
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18909 (Bundled jQuery UI should have CSS) updated</title>
      
        <dc:creator>jaredatch</dc:creator>

      <pubDate>Thu, 19 Jan 2012 01:35:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18909#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18909#comment:33/1326936953679569</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 00:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:34/1326932924805174</guid>
      <description>&lt;p&gt;
Nevermind, sanitize_post( $post, 'raw' ) is applied in get_post() as well, before the if, which just prevents a duplicate sanitization.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 00:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:33/1326932822863602</guid>
      <description>&lt;p&gt;
I also noticed an inconsistency:
&lt;/p&gt;
&lt;p&gt;
On the one hand, we have this in get_post():
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ($filter != 'raw')
	$_post = sanitize_post($_post, $filter);
&lt;/pre&gt;&lt;p&gt;
On the other, we call &lt;code&gt;sanitize_post( $post, 'raw' ) &lt;/code&gt; in WP_Query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18536 (Improve performance of WP_Query core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 19 Jan 2012 00:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18536#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18536#comment:32/1326931825813453</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18536/18536.3.diff" title="Attachment '18536.3.diff' in Ticket #18536"&gt;18536.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18536/18536.3.diff" title="Download"&gt;​&lt;/a&gt; does what I said in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18536#comment:30" title="Comment 30"&gt;30&lt;/a&gt;. Still don't know how to handle &lt;code&gt;'cache_results' =&amp;gt; false&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17249 (thickbox modal window dimensions are fixed in wp-admin) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 19 Jan 2012 00:03:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17249#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17249#comment:1/1326931415976802</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd like to start a dialogue about this issue as it has plagued me for years. I'm sick of telling people that our theme or plugin has a compatibility problem with a plugin simply because the conflicting plugin enqueues media-upload on every admin page.
&lt;/p&gt;
&lt;p&gt;
The core issue is that any page that has media-upload enqueued on it will cause every Thickbox on that page to be modified to work as the media uploader expects the Thickbox to be modified, even if nothing on the page uses the media uploader.
&lt;/p&gt;
&lt;p&gt;
There are three critical issues that need to be resolved in order to fix this problem:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rather than writing a custom handler to resize the media uploader's Thickbox, the media-upload script simply replaces the tb_position function that is defined by the Thickbox code. This means that the original sizing functionality offered by the Thickbox library will be completely replaced with a new one, causing drastically different Thickbox behaviors depending on whether or not the media-upload script was enqueued. While this may be technically elegant, it creates a huge number of limitations and potential conflicts when using WordPress' built-in Thickbox library.
&lt;/li&gt;&lt;li&gt;The media-upload script automatically replaces all width and height arguments of any Thickbox link with its own calculated values. Even if there were a simple way to avoid the issue of the tb_position override, this code would still cause significant changes to any Thickbox link, resulting in unexpected behavior.
&lt;/li&gt;&lt;li&gt;The media-upload script binds a call to the tb_position function to the window's resize event. This makes it very, very difficult to code around the issues created by the media-upload script.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are many possible solutions to this issue, but given that I'm very confused on why the script does certain things (such as why it changes all the width and height arguments), I figured it would be better to start a discussion to decide what a new approach would require.
&lt;/p&gt;
&lt;p&gt;
I'd like to propose two possible solutions.
&lt;/p&gt;
&lt;p&gt;
The first one is relatively-simple and is more of a fix than a solution. The core issue seems to be that it is difficult to recognize specific Thickboxes from the main page looking into the Thickbox. Thus, the code simply targets everything. I suggest reversing the way this is structured.
&lt;/p&gt;
&lt;p&gt;
Rather than housing the resize code outside of the Thickbox and modifying all of them, the resize code could be loaded by the wp-admin/media-upload.php page (the page loaded by the iFrame inside the media uploader's Thickbox) and use outward-looking checks to discover information about the window size. This will cause the code to be reliably run only on media uploader Thickboxes and removes any possible interference with other uses of Thickboxes (even if other non-media uploader Thickboxes exist on the same page).
&lt;/p&gt;
&lt;p&gt;
My biggest concern with this type of approach is that it isn't really elegant. If WordPress core needs a solution to finely control how Thickboxes size and auto-resize themselves, it stands to reason that other code probably has need to do this as well.
&lt;/p&gt;
&lt;p&gt;
My second suggestion is to improve the Thickbox code to handle a more robust set of query arguments. For example a link such as the following would emulate the current behavior of the the media-upload resize code.
&lt;/p&gt;
&lt;pre class="wiki"&gt;link?TB_iframe=1&amp;amp;width=full&amp;amp;height=full&amp;amp;max-width=720
&lt;/pre&gt;&lt;p&gt;
There would be four attributes that would be the main focus:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;width
&lt;ul&gt;&lt;li&gt;full - Expand to fill the full width of the containing window
&lt;/li&gt;&lt;li&gt;content (default) - The width automatically matches the width of the content
&lt;/li&gt;&lt;li&gt;[int value] - A specific pixel width
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;height
&lt;ul&gt;&lt;li&gt;full - Expand to fill the full height of the containing window
&lt;/li&gt;&lt;li&gt;content (default) - The height automatically matches the height of the content
&lt;/li&gt;&lt;li&gt;[int value] - A specific pixel height
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;max-width
&lt;ul&gt;&lt;li&gt;full (default) - The width will be limited to that of the "full" width
&lt;/li&gt;&lt;li&gt;[int value] - The width will be limited to a specific pixel width
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;max-height
&lt;ul&gt;&lt;li&gt;full (default) - The height will be limited to that of the "full" height
&lt;/li&gt;&lt;li&gt;[int value] - The height will be limited to a specific pixel height
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of the calculations will naturally also handle compensating sizes for necessary margin and padding sizes as well as compensating for the presence of the admin bar.
&lt;/p&gt;
&lt;p&gt;
The code will also automatically handle resize events to ensure 1) that the current attribute options are respected and 2) that the Thickbox doesn't overflow the window.
&lt;/p&gt;
&lt;p&gt;
With a setup like this, Thickboxes become much more useful to the average developer and an annoying code conflict source is removed.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>