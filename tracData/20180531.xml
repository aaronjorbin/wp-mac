<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44287 (REST API: Declare user capability to perform actions using JSON Hyper ...) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 31 May 2018 23:54:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44287</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44287/1527810854735083</guid>
      <description>&lt;p&gt;
There are a variety of operations a WordPress user can only perform if they have the correct capabilities. For instance, a WordPress who can create posts can only change authors on the post if they have the &lt;code&gt;edit_others_posts&lt;/code&gt; capability.
&lt;/p&gt;
&lt;p&gt;
A REST API client should only display UI for one of these operations if the WordPress user can perform the action. Only editors should see the author dropdown, not authors.
&lt;/p&gt;
&lt;p&gt;
However, user capabilities are evaluated at runtime. The result of &lt;code&gt;current_user_can()&lt;/code&gt; can be modified by the &lt;code&gt;map_meta_cap&lt;/code&gt; and &lt;code&gt;user_can&lt;/code&gt; filters. This means we can't expose capabilities directly, but instead need to expose their computed value.
&lt;/p&gt;
&lt;p&gt;
Fortunately, JSON Hyper Schema &lt;code&gt;targetSchema&lt;/code&gt; provides a language for us to communicate this information. To resolve this issue, we'll need to commit a patch prepared from the following pull requests:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/6529"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Use `targetSchema` of JSON Hyper Schema to communicate sticky action&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/6630"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Use `wp:action-assign-author` to indicate if user can assign authors&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/6670"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Introduce `wp:action-publish`; update corresponding UI to reference&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/6761"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Ensure contributors can create tags and manage categories&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
From &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/6361"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Avoid direct use of user capabilities in client-side code&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 23:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:32/1527810391975355</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527805814000241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31130 (WP_INSTALLING causes leakage between unit tests) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 23:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31130#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31130#comment:30/1527810391930175</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527805814000241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2018-05-31 at 4.33.16 PM.png attached to Ticket #44286</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Thu, 31 May 2018 23:34:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44286/Screen%20Shot%202018-05-31%20at%204.33.16%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44286/Screen%20Shot%202018-05-31%20at%204.33.16%20PM.png/1527809669939299</guid>
      <description>&lt;p&gt;
Menu Settings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-05-31 at 4.33.29 PM.png attached to Ticket #44286</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Thu, 31 May 2018 23:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44286/Screen%20Shot%202018-05-31%20at%204.33.29%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44286/Screen%20Shot%202018-05-31%20at%204.33.29%20PM.png/1527809645248505</guid>
      <description>&lt;p&gt;
Create Menu
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44286 (Feature Request: Provide Menu Settings on create new menu) created</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Thu, 31 May 2018 23:33:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44286</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44286/1527809622970321</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I wanted to request an improvement to the Menu creation workflow to reduce the workflow. Currently you create a menu with name and then once created can set the Menu Settings for 'Auto add pages' and 'Display location'. It would be nice to have those options available on the create menu screen thus removing a step in the process if you're not adding any menu items.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 22:12:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:49/1527804753020320</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43986#comment:46" title="Comment 46"&gt;lakenh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just a few little accessibility nitpicks with the most recent patch :)
&lt;/p&gt;
&lt;p&gt;
As discussed a bit in Slack, the "Why?" link isn't very descriptive on its own. There was an aria-label that's also on the "More Details" link added, however, that causes a bit of an accessibility problem on its own. The link text is now redundant, and that aria-label doesn't describe the error, nor tell a screen-reader user that clicking on that will help them fix the problem.
&lt;/p&gt;
&lt;p&gt;
I still think that the link text should be changed to something that tells the entire function of the page it's linking.
&lt;/p&gt;
&lt;p&gt;
Alternatively, the WordPress admin has a screen-reader text class, and so we could also have the link text be something like &lt;code&gt;Why &amp;lt;span class="screen-reader-text"&amp;gt;is there an installation incompatibility&amp;lt;/span&amp;gt;?&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If the aria-label though is the way we're doing it, I'd recommend changing it to something like "View plugin installation incompatibility."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I’ve updated the aria-label in both of the latest patches based upon design input.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39941 (Allow using Content-Security-Policy without unsafe-inline) updated</title>
      
        <dc:creator>RagnarKarlsson</dc:creator>

      <pubDate>Thu, 31 May 2018 21:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39941#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39941#comment:13/1527802153813752</guid>
      <description>&lt;p&gt;
Has consideration been made to hook this, so that nonces can be included within security plugins (such as Ninjafirewall) which set a full CSP? Adding the header with just the script-src element as per the example plugin would be overwritten if a subsequent csp is defined in a second header.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44285 (URL in e-mail confirmation of e-mail change doesn't work.) created</title>
      
        <dc:creator>candeeg</dc:creator>

      <pubDate>Thu, 31 May 2018 20:53:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44285</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44285/1527800019840751</guid>
      <description>&lt;p&gt;
I recently submitted a change in the settings of my dashboard and the user was sent a url of:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://domain.com/wp-admin/options.php?adminhash=5548a03855733b261230e15a76328fb1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://domain.com/wp-admin/options.php?adminhash=5548a03855733b261230e15a76328fb1&lt;/a&gt;
but following the link generated a 404 page not found.
I changed the url to
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://domain.com/wp-admin/options-general.php?adminhash=5548a03855733b261230e15a76328fb1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://domain.com/wp-admin/options-general.php?adminhash=5548a03855733b261230e15a76328fb1&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
and the change was accepted
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43986v5.2.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 20:04:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v5.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v5.2.diff/1527797084828739</guid>
      <description>&lt;p&gt;
updated aria-label
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43986v4.3.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 20:04:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v4.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v4.3.diff/1527797043860979</guid>
      <description>&lt;p&gt;
updated aria-label
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 31 May 2018 19:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:64/1527796614528184</guid>
      <description>&lt;p&gt;
I haven't had a chance to test this out in full yet, but the direction and patch are looking nice. :thumbsup:
&lt;/p&gt;
&lt;p&gt;
One thing that caught my eye is how many line changes there are in existing tests. Most (almost all?) of this seems like it can be done without the object subtype handling (e.g. the conversion to static &lt;code&gt;$author&lt;/code&gt;, &lt;code&gt;$post_id&lt;/code&gt;, &lt;code&gt;$post_id_2&lt;/code&gt; throughout). I would commit that first to better convey what is actually changing in the tests vs being added as new in the introduction of subtype handling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 31 May 2018 19:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:3/1527796025644224</guid>
      <description>&lt;p&gt;
e.preventDefault(); needs to be removed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 31 May 2018 19:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:2/1527795984929943</guid>
      <description>&lt;p&gt;
It does not cause an error but the problem is that I can not save the widget settings, if I have an input with min value = 1, and if I insert value 0..
&lt;/p&gt;
&lt;p&gt;
see this example:
&amp;lt;input type="number" name="name_here" min="1"&amp;gt;
&lt;/p&gt;
&lt;p&gt;
if I insert into the input field "0", then the widget will not be saved and no notification will show because we have e.preventDefault(); function that blocks notifications...
&lt;/p&gt;
&lt;p&gt;
The line to be removed in file wp-admin/js/widgets.js is 182.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'widget-control-save'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;wpWidgets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;closest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'div.widget'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43019 (Hook to validate post form data before save) updated</title>
      
        <dc:creator>foresmac</dc:creator>

      <pubDate>Thu, 31 May 2018 19:46:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43019#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43019#comment:7/1527795983721661</guid>
      <description>&lt;p&gt;
This would be super useful. Maybe the way to do it is to have the callback return an array of WP_Error for each custom field that fails validation? If it's empty, then there are no custom field errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 19:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:48/1527795745609590</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43986/43986v5.2.diff" title="Attachment '43986v5.2.diff' in Ticket #43986"&gt;43986v5.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43986/43986v5.2.diff" title="Download"&gt;​&lt;/a&gt; is patch for inline notice that still shows plugin card information, including compatibility info and updated aria-label.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_14.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/43986/screenshot_14.png" alt="Design style #2" crossorigin="anonymous" title="Design style #2" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
More Details window hasn't changed.
&lt;/p&gt;
&lt;p&gt;
@melchoyce here's the second version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screenshot_14.png attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 19:40:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_14.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_14.png/1527795611328386</guid>
      <description>&lt;p&gt;
Design style &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 31 May 2018 19:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284#comment:1/1527795575242385</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @alexvorn2, thanks for submitting your ticket.
&lt;/p&gt;
&lt;p&gt;
Could you please share more information as to why we need to remove &lt;code&gt; e.preventDefault()&lt;/code&gt; from the &lt;code&gt; wp-admin/js/widgets.js&lt;/code&gt; file? Is there is specific reason that you feel it should be removed? Is it causing an error?
&lt;/p&gt;
&lt;p&gt;
Thank you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43986v5.1.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 19:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v5.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v5.1.diff/1527795530136410</guid>
      <description>&lt;p&gt;
Design style &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;, displays plugin info, 2 lines
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 31 May 2018 19:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:13/1527794583347458</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43750#comment:12" title="Comment 12"&gt;iandunn&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hmmm, I'm kinda leery of the idea of relying on a dev manually setting &lt;code&gt;readme.txt&lt;/code&gt; headers. It feels like it'll be much more likely that results will be inaccurate. A dev could forget to update it when they add/remove export/erase callbacks, use the wrong values, etc.
It's also adding another thing that devs have to learn about and do.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely - this is a downside to this. That said, I don't think plugin developers will be in the habit of removing integration to core privacy, in fact i suspect they'll probably be adding these privacy related tags just once in their plugin's lifecycle.
&lt;/p&gt;
&lt;p&gt;
I'm also comforted by the fact that themes do this tag business already.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if there's a way we can add support for identifiers to the export/erase callback registration process, in a way that'll maintain back-compat?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We could, but what would you do for plugins that don't need the exporter/erasers because they don't collect or copy personal data? The plugin header approach supports those plugins (which i suspect are the vast majority of plugins.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or maybe &lt;a class="ext-link" href="https://stackoverflow.com/a/2222404/450127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;use ReflectionFunction to determine the plugin that the callback is from&lt;/a&gt;, or see which plugins are hooking in to &lt;code&gt;wp_privacy_personal_data_exporters&lt;/code&gt;. Those could have some false-positives there too, though, but maybe it's less likely than relying on them being manually set?  Maybe automatic detection could be the primary method, then then there's also a filter to let devs override the result?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We could do this, but we wouldn't know what plugins implemented the export and erasure hooks until after we call all the registered exporters and erasers? I'd love to present this information to the admin before they run any export. Seems a little complicated and therefore potentially brittle too?
&lt;/p&gt;
&lt;p&gt;
It also suffers from the vast-majority problem - plugins that don't collect or copy personal data and so don't need to participate in export or erasure.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
None of that feels like a very elegant solution, though; a &lt;code&gt;readme.txt&lt;/code&gt; header would probably be simpler. I don't have a strong opinion either way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
LOL, nope, neither is foolproof, but i think the readme.txt header tags idea has an edge in simplicity.
&lt;/p&gt;
&lt;p&gt;
Another neat thing about the Tags: idea is that other concepts might show up there, like requires-php-7 for example :P
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44280 (Glitch when activating theme) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 31 May 2018 19:11:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44280#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44280#comment:3/1527793871334304</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The bug seems to have been fixed or gone away, so I am recommending closing this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43904 (Media toolbar spacing inconsistent across views) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 31 May 2018 19:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43904#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43904#comment:5/1527793722076679</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43904.4.diff attached to Ticket #43904</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 31 May 2018 19:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43904/43904.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43904/43904.4.diff/1527793697053935</guid>
      <description>&lt;p&gt;
Refreshed patch and tested with current trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 31 May 2018 19:02:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:12/1527793347818221</guid>
      <description>&lt;p&gt;
Hmmm, I'm kinda leery of the idea of relying on a dev manually setting &lt;code&gt;readme.txt&lt;/code&gt; headers. It feels like it'll be much more likely that results will be inaccurate. A dev could forget to update it when they add/remove export/erase callbacks, use the wrong values, etc.
&lt;/p&gt;
&lt;p&gt;
It's also adding another thing that devs have to learn about and do.
&lt;/p&gt;
&lt;p&gt;
I wonder if there's a way we can add support for identifiers to the export/erase callback registration process, in a way that'll maintain back-compat?
&lt;/p&gt;
&lt;p&gt;
Or maybe &lt;a class="ext-link" href="https://stackoverflow.com/a/2222404/450127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;use ReflectionFunction to determine the plugin that the callback is from&lt;/a&gt;, or see which plugins are hooking in to &lt;code&gt;wp_privacy_personal_data_exporters&lt;/code&gt;. Those could have some false-positives there too, though, but maybe it's less likely than relying on them being manually set?  Maybe automatic detection could be the primary method, then then there's also a filter to let devs override the result?
&lt;/p&gt;
&lt;p&gt;
None of that feels like a very elegant solution, though; a &lt;code&gt;readme.txt&lt;/code&gt; header would probably be simpler. I don't have a strong opinion either way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>image (1).png attached to Ticket #43986</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 31 May 2018 18:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/image%20(1).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/image%20(1).png/1527791974072025</guid>
      <description>&lt;p&gt;
An alternate idea where the bottom information isn't obscured.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 18:39:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:47/1527791948362770</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by lakenh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1527791947000314"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43986v4.2.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 18:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v4.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v4.2.diff/1527791904242476</guid>
      <description>&lt;p&gt;
oops forgot a commit in the last patch. Shouldn't be functionally different but one less conditional.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Thu, 31 May 2018 18:38:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:46/1527791888749635</guid>
      <description>&lt;p&gt;
Just a few little accessibility nitpicks with the most recent patch :)
&lt;/p&gt;
&lt;p&gt;
As discussed a bit in Slack, the "Why?" link isn't very descriptive on its own. There was an aria-label that's also on the "More Details" link added, however, that causes a bit of an accessibility problem on its own. The link text is now redundant, and that aria-label doesn't describe the error, nor tell a screen-reader user that clicking on that will help them fix the problem.
&lt;/p&gt;
&lt;p&gt;
I still think that the link text should be changed to something that tells the entire function of the page it's linking.
&lt;/p&gt;
&lt;p&gt;
Alternatively, the WordPress admin has a screen-reader text class, and so we could also have the link text be something like &lt;code&gt;Why &amp;lt;span class="screen-reader-text"&amp;gt;is there an installation incompatibility&amp;lt;/span&amp;gt;?&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If the aria-label though is the way we're doing it, I'd recommend changing it to something like "View plugin installation incompatibility."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 18:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:45/1527790765138070</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afragen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1527790764000342"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 18:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:44/1527790734688067</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-php by afragen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1527790734000039"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 18:18:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:43/1527790720852524</guid>
      <description>&lt;p&gt;
Thanks for the design feedback and thanks to @melchoyce for continuing the discussion and refining stuff.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43986/43986v4.3.diff" title="Attachment '43986v4.3.diff' in Ticket #43986"&gt;43986v4.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43986/43986v4.3.diff" title="Download"&gt;​&lt;/a&gt; is the new patch with the design feedback regarding replacement of the info panel with an incompatibility notice and updated aria-label.
&lt;/p&gt;
&lt;p&gt;
Below is how the plugin card looks.
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_11.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/43986/screenshot_11.png" alt="plugin card with design feedback re: bottom info replacement" crossorigin="anonymous" title="plugin card with design feedback re: bottom info replacement" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Below is how the &lt;em&gt;More Details&lt;/em&gt; window looks.
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_12.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/43986/screenshot_12.png" alt="More Details window. No real changes from design." crossorigin="anonymous" title="More Details window. No real changes from design." /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screenshot_12.png attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 18:13:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_12.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_12.png/1527790398459008</guid>
      <description>&lt;p&gt;
More Details window. No real changes from design.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screenshot_11.png attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 18:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_11.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/screenshot_11.png/1527790338564014</guid>
      <description>&lt;p&gt;
plugin card with design feedback re: bottom info replacement
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43986v4.1.diff attached to Ticket #43986</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 31 May 2018 18:11:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/43986v4.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/43986v4.1.diff/1527790302156994</guid>
      <description>&lt;p&gt;
Design feedback with card bottom replaced.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 18:01:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:11/1527789662760559</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by allendav. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527789662000043"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 31 May 2018 18:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:10/1527789630114152</guid>
      <description>&lt;p&gt;
@azaozz @iandunn - for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43938" title="#43938: enhancement: Make it clear to administrators that not all plugins support privacy ... (new)"&gt;#43938&lt;/a&gt; I need to know whether or not a plugin has implemented the privacy policy guide, export and erasure interfaces. (None of the present interfaces has a means of capturing any identifier for the plugins when they call them.)
&lt;/p&gt;
&lt;p&gt;
I was thinking that, instead of (or perhaps in addition to) modifying those interfaces, if we could have a new row in the plugin header that indicates if the plugin implements those interfaces, then when could 1) have what we need for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43938" title="#43938: enhancement: Make it clear to administrators that not all plugins support privacy ... (new)"&gt;#43938&lt;/a&gt; AND 2) have a means (down the road) of showing privacy info/icons/something for plugins in the .org repository itself.
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
&lt;p&gt;
I was thinking that maybe plugins should have a Tags header something like what themes do ( &lt;a class="ext-link" href="https://codex.wordpress.org/File_Header"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/File_Header&lt;/a&gt; )
&lt;/p&gt;
&lt;p&gt;
The tags we need for privacy would be
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;adds-to-privacy-guide - for plugins that provide snippets for the privacy policy guide
&lt;/li&gt;&lt;li&gt;collects-personal-data - for plugins that register a personal data exporter and a personal data eraser for the personal data they collect and/or copy
&lt;/li&gt;&lt;li&gt;collects-no-personal-data - for plugins that do not collect or copy personal data (mutually exclusive with collects-personal-data)
&lt;/li&gt;&lt;li&gt;no-privacy-guide-text-needed - for plugins that do not do anything with personal data, and have nothing to add to the privacy policy (mutually exclusive with privacy-guide)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Admins can be alerted during privacy guide, export and erasure when they have activated plugins that don't have these tags in their header (e.g. something like "You are responsible for gathering any personal data collected by the following plugins: plugin1, plugin2, etc,")
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 31 May 2018 17:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:63/1527789563540227</guid>
      <description>&lt;p&gt;
Thank you @flixos90, this is looking good. As discussed in Slack today I will review, and barring any major Q's should commit this in the coming week! Even if there's any questions that arise I suspect we'll be able to close this out by WordCamp Europe :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44142 (Load Order: save_mod_rewrite_rules assumes wp-admin/includes/file.php ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 17:13:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44142#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44142#comment:28/1527786782300134</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta by shelob9. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta/p1527786781000456"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 17:02:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:62/1527786169224523</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1527786168000241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Untitled-2 copy.png attached to Ticket #44284</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 31 May 2018 17:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44284/Untitled-2%20copy.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44284/Untitled-2%20copy.png/1527786027766368</guid>
      <description>&lt;p&gt;
see example
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44284 (Remove e.preventDefault(); code line from widgets.js file) created</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 31 May 2018 17:00:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44284</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44284/1527786016515043</guid>
      <description>&lt;p&gt;
In wp-admin/js/widgets.js file we have some of this function that stops to display form validation errors on the page for widgets inputs...
&lt;/p&gt;
&lt;p&gt;
We need to remove these function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 31 May 2018 15:59:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:61/1527782366450324</guid>
      <description>&lt;p&gt;
Thanks a lot for writing all these tests @tharsheblows!
&lt;/p&gt;
&lt;p&gt;
I reviewed and made a few tweaks in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38323/38323.10.diff" title="Attachment '38323.10.diff' in Ticket #38323"&gt;38323.10.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38323/38323.10.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Always return 'comment' as subtype for comments in &lt;code&gt;get_object_subtype()&lt;/code&gt;, as we decided to not use comment subtypes at this point.
&lt;/li&gt;&lt;li&gt;Add ticket annotations to tests.
&lt;/li&gt;&lt;li&gt;Re-add &lt;code&gt;test_register_meta_with_term_object_type_populates_wp_meta_keys()&lt;/code&gt; test that was unnecessarily removed.
&lt;/li&gt;&lt;li&gt;Remove some duplicate test code.
&lt;/li&gt;&lt;li&gt;Simplify tests for &lt;code&gt;register_meta()&lt;/code&gt; and make them more comprehensive by using data providers.
&lt;/li&gt;&lt;li&gt;Remove some unnecessary cleanup code from some tests.
&lt;/li&gt;&lt;li&gt;Add further tests, particularly for other meta registration functions and subtypes.
&lt;/li&gt;&lt;li&gt;Remove duplicate tests for the wrapper functions. It is an unnecessary maintenance burden to have the same tests run twice, and to verify the wrapper functions work correctly, we only need to ensure that &lt;code&gt;register_meta()&lt;/code&gt; / &lt;code&gt;unregister_meta_key()&lt;/code&gt; are called correctly by them.
&lt;/li&gt;&lt;li&gt;Improve post meta test setup by only creating the necessary posts and user once.
&lt;/li&gt;&lt;li&gt;Fix array item alignments in REST post meta tests.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This appears to be in a solid state and very close to commit. I'm going to have a closer look at the REST API tests soon, as I didn't get to those yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38323.10.diff attached to Ticket #38323</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 31 May 2018 15:56:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38323/38323.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38323/38323.10.diff/1527782167890147</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44283 (Enclosure can't deal with CDN media files - WPCore redirects the URL) created</title>
      
        <dc:creator>researcher</dc:creator>

      <pubDate>Thu, 31 May 2018 15:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44283</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44283/1527781015143156</guid>
      <description>&lt;p&gt;
When using WP as audio collection, RSS2 is needed to get podcasts spread around f.i. to iTunes ect.&lt;br /&gt;
&lt;br /&gt;
To validate the feed right from WP 4.9.6 at &lt;a class="ext-link" href="http://www.feedvalidator.org"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.feedvalidator.org&lt;/a&gt; from source &lt;a class="ext-link" href="https://ferrie.audio/cat/podcasts/feed/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ferrie.audio/cat/podcasts/feed/&lt;/a&gt; we recieve several errors where the most important one is the &lt;strong&gt;redirection&lt;/strong&gt; of CDN URL's to WP URL&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;example:&lt;/strong&gt; &lt;strong&gt;cdn.&lt;/strong&gt;ferrie.audio/blablabla/Can-You-hear-Me.m4a - the CDN.(= AWS3) location of the file&lt;br /&gt;
&lt;strong&gt;becomes:&lt;/strong&gt; ferrie.audio/blablabla/Can-You-hear-Me.m4a&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;without&lt;/strong&gt; the CDN. urlprefix there is no audio stream - all streams are at CDN.&lt;br /&gt;
adding the CDN. urlprefix enclosure by hand and then save the blogpost results is 2 enclosures - 1 with CDN. - 1 without&lt;br /&gt;
adding the enclosure but NOT save the blogpost shows the correct enclosure - but - the RSS output shows the URL &lt;strong&gt;without&lt;/strong&gt; the CDN. urlprefix&lt;br /&gt;
&lt;br /&gt;
have been looking into the /wp-includes/feed.php - but there is for me no place to find where this redirection takes place - an feed expert might be able to correct this problem - sorry that i can't - i'm no coder i make music.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44280 (Glitch when activating theme) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 31 May 2018 15:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44280#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44280#comment:2/1527780621925495</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems to be an &lt;code&gt; Uncaught SyntaxError: Unexpected string&lt;/code&gt; on the Themes page
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The SyntaxError is coming from the &lt;code&gt; wp-emoji-loader.js&lt;/code&gt; file, included on &lt;code&gt; line 46&lt;/code&gt; on &lt;code&gt; wp-admin/themes.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
After further testing, it appears that this may only be a Windows 10/Chrome issue. Mac users are not seeing the glitch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44193 (Export Data request "Action Confirmed" email gets trimmed in gmail) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 31 May 2018 14:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44193#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44193#comment:3/1527777601566540</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44030 (Remove unnecessary `This email has been sent to ###EMAIL###` from ...) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 31 May 2018 14:30:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44030#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44030#comment:6/1527777059905642</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44013 (Add Basic Access and Deletion Front-end Request Forms as ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 14:22:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44013#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44013#comment:14/1527776548805922</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527776548000023"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44265.2.diff attached to Ticket #44265</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 31 May 2018 13:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44265/44265.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44265/44265.2.diff/1527774481238926</guid>
      <description>&lt;p&gt;
Changes filter name to be more accurate.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>psycleuk</dc:creator>

      <pubDate>Thu, 31 May 2018 13:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:4/1527773473212649</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Removing the close keyword, as based on my above comment i don't believe this issue should be considered resolved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 13:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:42/1527773227335379</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afragen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1527773226000462"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44067 (Refactor get_avatar and related functions to make Gravatar a Hook ...) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Thu, 31 May 2018 11:11:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44067#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44067#comment:2/1527765098886346</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this properly belongs to the &lt;code&gt;Privacy&lt;/code&gt; component, as avatars are used not only in comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44282 (Fatal error on 4.9.6 dashboard due to GPDR changes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 31 May 2018 11:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44282#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44282#comment:3/1527764432454677</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38323.9.diff attached to Ticket #38323</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Thu, 31 May 2018 10:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38323/38323.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38323/38323.9.diff/1527763171979746</guid>
      <description>&lt;p&gt;
post and term wrappers added back in with tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>tharsheblows</dc:creator>

      <pubDate>Thu, 31 May 2018 10:38:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:60/1527763117312888</guid>
      <description>&lt;p&gt;
This patch recombines the post and term wrappers with the extended &lt;code&gt;register_meta&lt;/code&gt; function and includes tests with duplicate tests for the wrapper functions – all as discussed (I think) in last week's REST API weekly meeting on Slack starting here: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQC26G/p1527182057000169"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RQC26G/p1527182057000169&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44282 (Fatal error on 4.9.6 dashboard due to GPDR changes) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 31 May 2018 10:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44282#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44282#comment:2/1527762373572151</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44282 (Fatal error on 4.9.6 dashboard due to GPDR changes) closed</title>
      
        <dc:creator>tristanleboss</dc:creator>

      <pubDate>Thu, 31 May 2018 10:11:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44282#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44282#comment:1/1527761495009955</guid>
      <description>invalid: &lt;p&gt;
We discovered that one file was not updated.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44282 (Fatal error on 4.9.6 dashboard due to GPDR changes) created</title>
      
        <dc:creator>tristanleboss</dc:creator>

      <pubDate>Thu, 31 May 2018 09:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44282</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44282/1527760498738297</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I encountered a fatal error after updating to 4.9.6 and accessing the dashboard home page.
&lt;/p&gt;
&lt;p&gt;
Something lead WordPress to use a (not yet) defined function:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP message: PHP Fatal error:  Uncaught Error: Call to undefined function wp_privacy_anonymize_ip() in /var/www/community/wp-admin/includes/class-wp-community-events.php:267
Stack trace:
#0 /var/www/community/wp-includes/script-loader.php(1158): WP_Community_Events::get_unsafe_client_ip()
#1 /var/www/community/wp-includes/class-wp-hook.php(286): wp_localize_community_events('')
#2 /var/www/community/wp-includes/class-wp-hook.php(310): WP_Hook-&amp;gt;apply_filters('', Array)
#3 /var/www/community/wp-includes/plugin.php(453): WP_Hook-&amp;gt;do_action(Array)
#4 /var/www/community/wp-admin/admin-header.php(118): do_action('admin_print_scr...')
#5 /var/www/community/wp-admin/index.php(100): include('/var/www/commun...')
#6 {main}
thrown in /var/www/community/wp-admin/includes/class-wp-community-events.php on line 267
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44281 (Codepen embeds won't render, lacks "referrer") updated</title>
      
        <dc:creator>Joen</dc:creator>

      <pubDate>Thu, 31 May 2018 08:54:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44281#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44281#comment:5/1527756875476311</guid>
      <description>&lt;p&gt;
Awesome, thanks a whole bunch for the info!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44281 (Codepen embeds won't render, lacks "referrer") closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 31 May 2018 08:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44281#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44281#comment:4/1527756303502810</guid>
      <description>invalid: &lt;p&gt;
Codepen isn't supported in WordPress via the whitelisted embeds, so there's nothing to remove.
&lt;/p&gt;
&lt;p&gt;
Your best bet is to get in touch with Codepen and let them know about the problem. It's not specific to WordPress.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44281 (Codepen embeds won't render, lacks "referrer") updated</title>
      
        <dc:creator>Joen</dc:creator>

      <pubDate>Thu, 31 May 2018 08:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44281#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44281#comment:3/1527755444480784</guid>
      <description>&lt;p&gt;
Thanks for the response. Would it be an option to simply remove Codepen oembed support?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34281 (Allow admins to send users a 'Reset Password' link) updated</title>
      
        <dc:creator>dainismichel</dc:creator>

      <pubDate>Thu, 31 May 2018 08:19:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34281#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34281#comment:51/1527754788407819</guid>
      <description>&lt;p&gt;
apparently some ppl were using this plugin
&lt;a class="ext-link" href="https://wordpress.org/plugins/re-send-welcome-email/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/re-send-welcome-email/&lt;/a&gt;
to accomplish "admin can send specific users a password reset link," but that plugin is now dated.
&lt;/p&gt;
&lt;p&gt;
how is interest and development looking for this feature?
&lt;/p&gt;
&lt;p&gt;
best,
dainis
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44281 (Codepen embeds won't render, lacks "referrer") updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 31 May 2018 08:17:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44281#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44281#comment:2/1527754621659982</guid>
      <description>&lt;p&gt;
Non-whitelisted embeds come with some security restrictions. I guess browsers don't send a referrer header in that case.
&lt;/p&gt;
&lt;p&gt;
To fix this, CodePen should either remove that requirement or we need to whitelist them. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27658" title="#27658: enhancement: Add oembed support for CodePen (closed: worksforme)"&gt;#27658&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Note that some people choose to not send referrers anyway, so even whitelisting doesn't help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44256 (Build can fail when `src` folder contains folders with many files) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 31 May 2018 08:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44256#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44256#comment:18/1527754396060331</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44256/44256.5.diff" title="Attachment '44256.5.diff' in Ticket #44256"&gt;44256.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44256/44256.5.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Replace the explicit list of themes with &lt;code&gt;wp-content/themes/twenty*&lt;/code&gt;: we already use this shorthand in a few other places in &lt;code&gt;Gruntfile.js&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Added the &lt;code&gt;/**&lt;/code&gt; suffix to the themes and Akismet, so their files are copied.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This is working pretty well for me, let's land it and see what happens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44256.5.diff attached to Ticket #44256</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 31 May 2018 08:10:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44256/44256.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44256/44256.5.diff/1527754237870487</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44256.4.diff attached to Ticket #44256</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 31 May 2018 08:07:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44256/44256.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44256/44256.4.diff/1527754066761613</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44281 (Codepen embeds won't render, lacks "referrer") updated</title>
      
        <dc:creator>Joen</dc:creator>

      <pubDate>Thu, 31 May 2018 07:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44281#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44281#comment:1/1527752101221166</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>codepen.png attached to Ticket #44281</title>
      
        <dc:creator>Joen</dc:creator>

      <pubDate>Thu, 31 May 2018 07:34:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44281/codepen.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44281/codepen.png/1527752040959307</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44281 (Codepen embeds won't render, lacks "referrer") created</title>
      
        <dc:creator>Joen</dc:creator>

      <pubDate>Thu, 31 May 2018 07:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44281</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44281/1527752033071571</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Paste a codepen into the editor. Such as this: &lt;a class="ext-link" href="https://codepen.io/joen/pen/oEzYxb"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codepen.io/joen/pen/oEzYxb&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Note how it converts to a codepen embed.
&lt;/li&gt;&lt;li&gt;Click "run pen", or publish first and then click "run pen" on the frontend.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Observe that the embed asks for a "referrer" that apparently isn't present.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Thu, 31 May 2018 07:33:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:19/1527752027292685</guid>
      <description>&lt;p&gt;
Hi,
I am collaborating via the &lt;a class="ext-link" href="https://profiles.wordpress.org/pluginkollektiv"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Pluginkollektiv&lt;/a&gt; on &lt;a class="ext-link" href="https://wordpress.org/plugins/antispam-bee/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Antispam Bee&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
We use the IP address for three different checks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can whitelist/blacklist countries and block comments which come from a specific country (we send an anonymized ip to an external service. currently &lt;a class="ext-link" href="https://github.com/pluginkollektiv/antispam-bee/blob/1f1b46d0f1d7123f32d5fa229e2e16777d009d39/antispam_bee.php#L1817-L1823"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;we anonymize ourselfs&lt;/a&gt;, lets see, if we could utilize the new anonymize functionality from core for this.
&lt;/li&gt;&lt;li&gt;We check the local database if we have spam-comments from the same IP. We have altered this behavior in the last release and we start to save a hash (using &lt;code&gt;wp_create_password($ip)&lt;/code&gt; in the meta data of the comment. We have to see, how this plays out for a couple of reasons (like its quite an expensive check). The options for us here right now is to get rid of this IP check completely or to strengthen it, because currently we are hooked into &lt;code&gt;comment_post&lt;/code&gt; to save the data out of &lt;code&gt;$comment_data&lt;/code&gt;. My thoughts here would be to abandon &lt;code&gt;$comment_data&lt;/code&gt; completely and rely on our own IP detection.
&lt;/li&gt;&lt;li&gt;The last check is called &lt;code&gt;fake_ip&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All those checks do not rely (or won't no longer regardless of your moves, as there are also some filters into play we need to consider, which are used by others to anonymize already) on the data given by &lt;code&gt;$comment_data&lt;/code&gt;, but we use &lt;a class="ext-link" href="https://github.com/pluginkollektiv/antispam-bee/blob/1f1b46d0f1d7123f32d5fa229e2e16777d009d39/antispam_bee.php#L2041-L2078"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;our own implementation&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
With all this said, in regards of Antispam Bee, we are monitoring the moves you guys and girls do in core closely and are very happy you are taking the necessary steps. Thanks a lot for all your work. Even if you wouldn't save the IP at all, this wouldn't affect us. But I can only speak for Antispam Bee.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin-install-error.jpg attached to Ticket #43986</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Thu, 31 May 2018 07:29:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43986/plugin-install-error.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43986/plugin-install-error.jpg/1527751788896907</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Thu, 31 May 2018 07:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:41/1527751746002459</guid>
      <description>&lt;p&gt;
We discussed this ticket in yesterday's design team meeting. We agree this would be a good way of preventing installation of plugins that don't work with older php-versions. However, we find the information on the plugin cards kind of overwhelming and the icons not very visible.
&lt;/p&gt;
&lt;p&gt;
Here's a few suggestions we have:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;reduce text
&lt;/li&gt;&lt;li&gt;don't show notification when the plugin is compatible. It should be compatible by default.
&lt;/li&gt;&lt;li&gt;place notification instead of 'rating' and 'last updated', to make it more prominent.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Please find attached the original card design for making the error message more visual.
&lt;/p&gt;
&lt;p&gt;
If there are any questions about this feedback, please feel free and jump by in the Design Slack Channel: &lt;a class="ext-link" href="https://wordpress.slack.com/messages/C02S78ZAL"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/messages/C02S78ZAL&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44256 (Build can fail when `src` folder contains folders with many files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 31 May 2018 05:44:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44256#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44256#comment:17/1527745445560893</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1527745444000254"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43711 (Let's create a standard development setup for WordPress core.) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 31 May 2018 00:12:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43711#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43711#comment:19/1527725545702811</guid>
      <description>&lt;p&gt;
From the original ticket description:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;the easiest possible development workflow: just download and boot.
&lt;/li&gt;&lt;li&gt;fast: reduce build and boot times to a minimum.
&lt;/li&gt;&lt;li&gt;reliable: it should just work.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
and
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@pento noted that eventually he'd like this thing to be configurable and installable through a GUI in order to reduce the barrier of entry for new contributors to the absolute minimum.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think these are the right objectives for the future. I don't think we can consider these complete while also requiring contributors to install Vagrant, VirtualBox, Docker, NPM, PHPUnit, and other command line tools to boot the box and get started.
&lt;/p&gt;
&lt;p&gt;
I think this happens when somebody creates a native app with a GUI that may run Docker or something else in the background, but shows no sign of that on the front. If we know people interested in tackling native app experiences in OSX and Windows, that would be super interesting.
&lt;/p&gt;
&lt;p&gt;
My (maybe slightly pessimistic) expectation of other solutions—new Vagrant VM, new Docker config, etc…—is that they'll all follow a similar path to VVV adoption over the last several years. More and more people use it, more and more people find bugs, a year or two later we have a bunch of the bugs figured out but it's still a pain for people to use in Windows.
&lt;/p&gt;
&lt;p&gt;
In the meantime, those who are frustrated with the new approach will filter off and install other tools that work for them (MAMP, Local, WPLib Box, etc…).
&lt;/p&gt;
&lt;p&gt;
One benefit that VVV has is that we've already ran into so many bugs at so many contributor days. And, as @TJNowell mentioned, VVV 3 will deliver a pre-provisioned Vagrant box that requires no time consuming process other than an initial download and future &lt;code&gt;vagrant box update&lt;/code&gt;s. We've reached that point as a result of years of investment. We probably could have reached it sooner, but yeah - provisioning with bash scripts is ugly. :)
&lt;/p&gt;
&lt;p&gt;
Aside: I &lt;a class="ext-link" href="https://jeremyfelt.com/2013/07/28/a-wordpress-core-vagrantfile/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;really wanted this as part of core&lt;/a&gt; 5 years ago, but maintaining an open source dev environment project has altered my view quite a bit.
&lt;/p&gt;
&lt;p&gt;
And that all said, whichever route we go, I believe it is even more important that we continue to improve our documentation around contributing code. What the build process is, how to manage basic tasks with NPM, Grunt, Git, etc... I think that will have a larger impact overall.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43711 (Let's create a standard development setup for WordPress core.) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Thu, 31 May 2018 00:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43711#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43711#comment:18/1527725219191018</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Weird, maybe I am confusing VIP QuickStart.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's correct, VIP Quickstart provisioned via a puppet setup, though VIP Quickstart is quite dead
&lt;/p&gt;
&lt;p&gt;
As a sidenote:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;VVV 2 is intended to be disposable, you configure what you want and provision, and a VM gets created, with the intention that you can throw the VM away and recreate it at any time
&lt;/li&gt;&lt;li&gt;We have Jenkins pre-building base boxes with Ubuntu 14, and are in the testing phase prior to merge
&lt;/li&gt;&lt;li&gt;VVV 2.2.1 now only requires a single vagrant plugin, and updates to the Contributor day USB generator now bundle that plugin with the USB drive, eliminating all network dependencies
&lt;/li&gt;&lt;li&gt;It seems Pento has his own solution that installs Node and grunt watchers on the host then fires up a docker based WP setup via an electron app ( &lt;a class="ext-link" href="https://github.com/pento/wordpress-development-environment"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/pento/wordpress-development-environment&lt;/a&gt; ). The irony being that the code could be simplified by swapping the commands for vagrant commands as only vagrant up, provision, and halt would be necessary
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I appreciate the desire to make getting started with contribution easier, but it's clear the existing projects for local dev already have this in mind as VVV demonstrates, and as Mike indicated with new versions of WP Lib Box.
&lt;/p&gt;
&lt;p&gt;
What we have here is a conflation of the Travis + PHP 5.2 problem, and &lt;a class="ext-link" href="https://xkcd.com/927/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this Xkcd comic&lt;/a&gt;. I don't expect that any contender will get picked here, either things will remain as they are, or something new will be built then used by a minority of people, for which we'll have a new support and maintenance burden.
&lt;/p&gt;
&lt;p&gt;
In the meantime, consider provisioning a more recent build of VVV 2 with Vagrant 2.1, VVV is a very different beast internally these days, and a lot of issues people remember were resolved years ago
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1272 (uninternationalized title in install.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 23:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1272#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1272#comment:3/1527723913021967</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-coding-standards by jrf. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-coding-standards/p1527723912000088"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1359 (Invalid 304 header for RSS under IIS/ISAPI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 23:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1359#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1359#comment:5/1527723912971046</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-coding-standards by jrf. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-coding-standards/p1527723912000088"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43711 (Let's create a standard development setup for WordPress core.) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 30 May 2018 23:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43711#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43711#comment:17/1527723066460348</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:16" title="Comment 16"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:15" title="Comment 15"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The fact VVV was provisioned locally using Puppet
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Never with Puppet, though we did give it a try on a branch 5 years ago. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Weird, maybe I am confusing VIP QuickStart.  That said, I found the 1000+ line Bash provision script almost as problematic.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>template.php.patch attached to Ticket #44274</title>
      
        <dc:creator>leanderiversen</dc:creator>

      <pubDate>Wed, 30 May 2018 23:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44274/template.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44274/template.php.patch/1527721630096074</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43711 (Let's create a standard development setup for WordPress core.) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 30 May 2018 22:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43711#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43711#comment:16/1527720258458883</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:15" title="Comment 15"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The fact VVV was provisioned locally using Puppet
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Never with Puppet, though we did give it a try on a branch 5 years ago. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43711 (Let's create a standard development setup for WordPress core.) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 30 May 2018 22:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43711#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43711#comment:15/1527719949087996</guid>
      <description>&lt;p&gt;
Hi everyone,
&lt;/p&gt;
&lt;p&gt;
I'd like to throw a new contender into the ring; &lt;em&gt;(currently named)&lt;/em&gt; &lt;a class="ext-link" href="https://github.com/wplib/wplib-box"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPLib Box&lt;/a&gt; &lt;a class="ext-link" href="https://github.com/wplib/wplib-box/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.17.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;0.17.0&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
We originally decided to build it because of frustrations with VVV. The fact VVV was provisioned locally using a 1000+ line Bash script that takes 30+ minutes to run, which often failed and required sysadmin level skills to debug meant that it was not a solution that developers with few sysadmin skills could trust.  Instead we wanted a box that “just worked,” so we built one that was pre-provisioned.  And as of &lt;code&gt;0.10.2&lt;/code&gt; it was really solid. That took us about a year, though not full time.
&lt;/p&gt;
&lt;p&gt;
Then we set our sites higher and decided to build a box that not only just worked but what capable of running any stack needed while still ensuring the most common use-cases were dead simple. And that lead us to planning the use of a set of orchestrated Docker containers.
&lt;/p&gt;
&lt;p&gt;
But what we found over the past year is that Docker for Mac has significant limitations, such as &lt;a class="ext-link" href="https://stackoverflow.com/questions/46286741/is-there-a-workaround-to-use-the-hosts-network-in-docker-for-mac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;only being able to use the host’s network&lt;/a&gt; on Docker for Mac. This issue alone makes a pure implementation of orchestrated Docker containers a non-starter, assuming you want to make it “just work” for the developer installing it.
&lt;/p&gt;
&lt;p&gt;
That lead us back to using a Vagrant and VirtualBox with Docker containers. Thus the current version of WPLib Box is &lt;code&gt;0.16.2&lt;/code&gt; (with &lt;code&gt;0.16.3&lt;/code&gt; coming later this week, hopefully) and the current version is based on Ubunutu 14.04 LTS + Vagrant + VirtualBox + individual Docker containers inside.
&lt;/p&gt;
&lt;p&gt;
But in reality Vagrant is very problematic, constantly breaking working boxes on updates and just persnickety when it comes to installation.  Further, Ubuntu is really memory intensive.
&lt;/p&gt;
&lt;p&gt;
So our plans are to release &lt;code&gt;0.17.0&lt;/code&gt; in the near future, and it will be based on either Tiny Core Linux or Alpine, VirtualBox and &lt;a class="ext-link" href="https://github.com/wplib?utf8=%E2%9C%93&amp;amp;q=docker"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;many Docker containers&lt;/a&gt;. It will also come with both a Mac and a Windows installer where the goal is for it to be as easy to get working as any application you might download and install on your Mac or Windows computer.
&lt;/p&gt;
&lt;p&gt;
Looking back, we worked on &lt;code&gt;0.16.0&lt;/code&gt; for over a year and it was a huge release which changed the box from a LEMP VM to a VM designed to orchestrate Docker containers and it positions us for a relatively quick release for &lt;code&gt;0.17.0&lt;/code&gt;. In order to release sooner or later we will probably not implement all of our &lt;a class="ext-link" href="https://github.com/wplib/wplib-box/issues?q=is%3Aopen+is%3Aissue+milestone%3A0.17.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;current backlog of issues tagged for 0.17.0&lt;/a&gt; and instead implement a lot of them in &lt;code&gt;0.17.x&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Longer term, we even plan to get rid of VirtualBox, but that will require more than a short-term engineering effort.
&lt;/p&gt;
&lt;p&gt;
Now on to the requirements mentioned by everyone in this thread:
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43711" title="#43711: enhancement: Let's create a standard development setup for WordPress core. (new)"&gt;omarreiss&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;Download and boot&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the easiest possible development workflow: just download and boot.
&lt;/li&gt;&lt;li&gt;reliable: it should just work.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
From day 1 that has been a mantra for WPLib Box, that is “just works.”
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;h2 id="Integratingwatchandbuildbehavior"&gt;Integrating watch and build behavior&lt;/h2&gt;
&lt;p&gt;
As we plan to &lt;a href="https://core.trac.wordpress.org/ticket/43055"&gt;introduce a build step to the development workflow&lt;/a&gt;, it becomes more important that building is not an afterthought but something that is integrated into the development workflow.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A key aspect of WPLIb Box is its extensible architecture. With that architecture we will be able to easily implement and incorporate the build solution from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43055" title="#43055: enhancement: Reorganize Core JS / introduce build step (closed: fixed)"&gt;#43055&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
WPLib’s extensibility features as based on two concepts: “Stacks” and “Installables.”  Stacks allow implementing any conceivable set of services you need with the default one being “WordPress.” But there could be a “WordPress Develop” stack, a “Tide” stack, or hell, even a “Drupal” or Node Express” stack.  Stacks can extend other stacks and WPLib Box will be able to run multiple stacks.
&lt;/p&gt;
&lt;p&gt;
Stacks are comprised of one of more “Installables”, and an Installable can be anything that either a “Project” needs or that the Box needs globally.  Further, Installables can a Docker container, a WordPress plugin, a Theme, a SQL data file, or even a collection of those things. or a collections of other Installables. An Installable can even be a Stack.
&lt;/p&gt;
&lt;p&gt;
Stacks and/or Installables required by a Project get written to a &lt;code&gt;project.json&lt;/code&gt; file that can be version controlled and shared so that when a team member, or another WordPress core contributor brings up a project they will automatically see the exact environment that was configured for them by the developer who committed the &lt;code&gt;project.json&lt;/code&gt; file.
&lt;/p&gt;
&lt;p&gt;
Note WPLib Box &lt;code&gt;0.17.0&lt;/code&gt; will support multiple “Projects,” each being identified by a local domain, e.g. &lt;code&gt;example.local&lt;/code&gt; (we don’t call is a “multi-site” box for hopefully obvious reasons.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;fast: reduce build and boot times to a minimum.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
You should download and try the current version to see for yourself. We’ve really made it to be very performant, and &lt;code&gt;0.17.0&lt;/code&gt; should only improve that.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@pento noted that eventually he'd like this thing to be configurable and installable through a GUI in order to reduce the barrier of entry for new contributors to the absolute minimum.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Part of our architecture will be to have an Electron-based admin console.  It will run based on the API we are building into the box.  Assuming something very similar to Local by Flywheel.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:1" title="Comment 1"&gt;youknowriad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Ideally, the integration and e2e tests (even unit tests since PHP unit tests require a full setup) should use the same environment
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
We are &lt;a class="ext-link" href="https://github.com/wplib/wplib-box/issues/25#issuecomment-368401449"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;adding PHPUnit to the box&lt;/a&gt; by implementing a &lt;a class="ext-link" href="https://github.com/wplib/wplib-box/issues/363"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;general-purpose PHP script container approach&lt;/a&gt; that will make adding PHP-script based solutions as easy as specifying the details in an &lt;code&gt;installable.json&lt;/code&gt; file.
&lt;/p&gt;
&lt;p&gt;
From that we should be able to create an Installable adds the integration and e2e test and then include them in the “WordPress Develop” stack.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;A dev environment even if it's hidden behind magical scripts should stay simple. When bugs happen developers of any level should be able to understand, debug and tweak how the environment works.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Saying this a different way, our goal with WPLib Box is that the common case is dead simple, and the edge cases are possible.  We are focused on hiding Docker containers completely from everyone except those that want to interact with them and/or build their own Docker containers for WPLib Box.
&lt;/p&gt;
&lt;p&gt;
We will be segmenting our UX to multiple levels:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt; &lt;strong&gt;End-user developer:&lt;/strong&gt; All they will need to ever see and are the installer and Electron-based admin console.
&lt;/li&gt;&lt;li&gt; &lt;strong&gt;Power-user developer:&lt;/strong&gt; In addition to the end-user developer they will also be interested in the &lt;code&gt;box&lt;/code&gt; command line tool that will work both in the box and also on the host. They will also be able to build simple installables such as a starting point for a website; e.g. WordPress core, a collection of plugins and a theme.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Front-end extension developer:&lt;/strong&gt; Beyond end- and power-user developer they will be able to extend the Electron-based admin using Vue.js and the Box API.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Box extension developer:&lt;/strong&gt; Beyond end- and power-user developer these people will be able to extend the box itself such as Installable containers and even Stacks, as well as adding commands to the &lt;code&gt;box&lt;/code&gt; CLI.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
From the above segmentation we should be able to directly support hiding all complexity and make the end-user developer’s use very simple.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:4" title="Comment 4"&gt;Mte90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One of the problems that has VVV right now is that require a lot of time on first start because of installation (and download of a lot of things) but the plan for version 3 (&lt;a class="ext-link" href="https://github.com/Varying-Vagrant-Vagrants/VVV/issues/1469"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Varying-Vagrant-Vagrants/VVV/issues/1469&lt;/a&gt;) with a box that contain everything and also the parallel for the provision will improve a lot this point.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The current WPLib Box (&lt;code&gt;0.16.2&lt;/code&gt;) contains everything and boots in about 30 seconds.  We expect the next major version  (&lt;code&gt;0.17.0&lt;/code&gt;) will boot in around 5 seconds.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The other problems that often at contributor day we have is Windows. Install virtualbox, vagrant, git on Windows is a big step because people do't know anything of them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We attend to hide the installation of VirtualBox via our installers.  We can also look into installing Git, or we can provide them Git access via &lt;code&gt;box git …&lt;/code&gt; which could be wrapped in a batch or Powershell file as just &lt;code&gt;git&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Often the problems on VVV is because there are different versions of powershell on the system (don't ask me why) and Vagrant or Virtualbox works with issue based on the version of ps.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For the most part this just won’t be an issue in &lt;code&gt;0.17.0&lt;/code&gt; given our architecture.  And our box command will be implemented in GoLang so that should resolve the cross platform issue.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With docker we will have more problems on Windows because we need a virtual machine so (virtualbox and git will be required in any case) so the only advantage that we don't have anymore the easy vagrant to use but docker (that is not so entry level).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, we are addressing all of this with an installer, a VM to contain and orchestrate the Docker containers, and a simple admin console to make things easy.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sure, there is the VVV USB Generator that prepare all the executables for download (maybe also the latest image) but we need to think that at contributor day not everyone has an OS dev friendly for *nix stuff.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We will support Windows day one.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From the other side VVV has the cool part to be used also for not contribute and very easy with vagrant up/halt and db backup so usually people are interested in that then contribute.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would like to have is so that when someone adopts WPLib Box because of how easy it is that we make it just as easy for them to contribute to WordPress by giving them a menu option to just get started.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Integrating watch and build behavior: As we plan to &lt;a href="https://core.trac.wordpress.org/ticket/43055"&gt;introduce a build step to the development workflow&lt;/a&gt;, it becomes more important that building is not an afterthought but something that is integrated into the development workflow.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We plan to add watching/building as a default installable for our WordPress stack.
&lt;/p&gt;
&lt;p&gt;
We have another mantra that is
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;"If we can simplify things for the end user and make it run in the box, we should make it run in the box."&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So our vision is to minimize the number of things developers have to (figure out how to) install and get working on their host machine, and that we instead deliver a default solution that "just works," but that is also configurable and extensible for their needs.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
having access to a &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Command-line_interface"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en.wikipedia.org/wiki/Command-line_interface&lt;/a&gt; (CLI) to run &lt;code&gt;grunt watch&lt;/code&gt; and &lt;code&gt;grunt build&lt;/code&gt; tasks will be an important part of the WordPress development workflow.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We will certainly have installables for Grunt and Gulp though we plan to have WebPack + NPM scripts be the default build solution for WordPress (and WordPress Develop.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;WordPress' CLI commands and scripts will need to be compatible with Mac, Windows, and *nix operating systems
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
The &lt;code&gt;box&lt;/code&gt; CLI will be compatible on Mac, Windows and *nix, and the build systems will be able to run in the box so the scripts we use will only need to run within our purpose-built containers &lt;em&gt;(which is the whole benefit of containers, right?)&lt;/em&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://getcomposer.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Composer&lt;/a&gt; is required as this was recently added in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt; for &lt;a class="ext-link" href="https://github.com/squizlabs/PHP_CodeSniffer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHPCS&lt;/a&gt; support
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
We already include support for &lt;a class="ext-link" href="https://github.com/wplib/composer-docker"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;several versions of Composer&lt;/a&gt; in WPLib Box &lt;code&gt;0.16.2&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Support multiple versions of MySQL and MariaDB for testing &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/30462" title="#30462: enhancement: Test multiple MySQL versions on Travis (new)"&gt;#30462&lt;/a&gt; &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42811" title="#42811: defect (bug): Run the PHP 5.2 Travis job with the MySQL Extension (new)"&gt;#42811&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
We already include support for &lt;a class="ext-link" href="https://github.com/wplib/mysql-docker"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;multiple versions of MySQL&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/wplib/mariadb-docker"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;multiple versions of MariaDB&lt;/a&gt; in WPLib Box &lt;code&gt;0.16.2&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Support multiple versions of PHPUnit for testing (Legacy PHP versions required legacy PHPUnit versions) &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43218" title="#43218: defect (bug): PHPUnit 7.x support (accepted)"&gt;#43218&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
As noted, we have plans to &lt;a class="ext-link" href="https://github.com/wplib/wplib-box/issues/25#issuecomment-368401449"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support all necessary versions of PHPUnit&lt;/a&gt; in &lt;code&gt;0.17.0&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Support multiple versions of PHP for testing,
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/wplib/wplib-box/issues?q=is%3Aissue+is%3Aopen+PHP+5.+label%3AFeature"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Check&lt;/a&gt;, for &lt;code&gt;0.17.0&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
at the moment Gutenberg is using &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/commit/3c3427472fadd4696347956b3b3e409bd21d606d"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;these&lt;/a&gt; scripts to manually install PHP 5.2 &amp;amp; 5.3 versions for Travis CI though they are quite fragile.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't fully understand what you are asking for, but I expect we can easily address it given our architecture.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:7" title="Comment 7"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any solution would require a provisioning script to set up the database user and the relevant files, as well as perform checks that relevant tools are installed. This would seem to be a more portable approach that needs to be taken anyway regardless of what devops gets done.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WPLib Box currently provisions the database on first load, and a package of Installables should support all of this.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:8" title="Comment 8"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One of the most valuable things that Docker has done is to popularise the "container" concept: small, disposable, task-oriented VMs that are designed to spin up quickly, perform a single task well, and can be cheaply reset. This encourages tasks to be performed in the environment they most make sense: if something needs disk performance (eg, &lt;code&gt;watch&lt;/code&gt;-type tasks), it can be run on the host. If something requires specialised software or configuration (eg, a MySQL database), it can be run inside of a container.
This directly benefits the contributor experience: isolating the magic to little boxes that can't be easily broken (and can be easily reset in the event they are) reduces the cost of experimenting, knowing that you have a fast and reliable reset mechanism to fall back on. Drawing from my personal experience,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I cannot agree more. That is exactly why we chose to architect WPLib Box as a collection of orchestrated containers rather than try and create one big behemoth Docker container containing everything.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
VVV has the opposite experience: provisioning is a slow process, which discourages resetting, which makes experimenting a risky proposition.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yet again, agreed. That opposite experience is exactly why we first started to build WPLib Box.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Lightweight.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Check. See above.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Disposable.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
WPLib Box is currently designed to be disposable.  In &lt;code&gt;0.17.0&lt;/code&gt; we plan to continue that, if for no other reason than that will make upgrades trivial.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Centrally manageable.
&lt;/li&gt;&lt;li&gt;Swappable components &lt;em&gt;(such as for PHP)&lt;/em&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Check.  We will be managing containers centrally and will have the open to auto-update; currently you can run &lt;code&gt;box self-update&lt;/code&gt; in version &lt;code&gt;0.16.2&lt;/code&gt; and it does essentially that.  And swapping is just changing the name of the PHP container in the &lt;code&gt;projects.json&lt;/code&gt; file
&lt;/p&gt;
&lt;p&gt;
Further, given our architecture the WordPress core team could manage their own &lt;em&gt;"WordPress Develop"&lt;/em&gt; Stack &lt;em&gt;(basically a list of Installable containers and other installables)&lt;/em&gt; and those containers could either extend ours &lt;em&gt;(to make it quick and simple to get the this Stack started)&lt;/em&gt; or they could replace ours if the core team's needs are more urgent than we can respond and/or if the core team needs something that makes no sense to include in our standard WPLib Box containers.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:10" title="Comment 10"&gt;nbachiyski&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If our end goal is to make it really easy, the same way WordPress made website create easy 😜 we should aim higher
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely.  WPLib Box’s core mantra is “It just works” and everything we do is filtered with the lens of getting us there by version 1.0
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://c9.io/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://c9.io/&lt;/a&gt; – a web IDE now run by Amazon AWS (Janitor uses it).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I really hope we don’t decide to go there. I have tried using C9, and it cannot compare to a solid local experience with PHPStorm+XDEBUG.  I don’t know about others, but if contributing to WordPress required using c9, I would never even consider it.
&lt;/p&gt;
&lt;p&gt;
That said, if c9 were an &lt;em&gt;optional&lt;/em&gt; approach for newbies, that might make sense.  More on this &lt;em&gt;"optional"&lt;/em&gt; idea below.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43711#comment:12" title="Comment 12"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
web-based development environments require a continuous, reasonably stable internet connection.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely. A local solution that requires no internet connection is ideal.  Which is how we've configured WPLib Box.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Adding config for popular editors is a good idea. Mandating the editor is not.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Plus+1 for a WPLib Box Installable.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Storing GitHub/SVN/whatever credentials in the cloud is... less than ideal. 🙃 Requiring re-authentication for every commit is a terrible UX.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.  SSH passthru from host is better.  Auto-managing SSH in the box for those who do not already have set up is an even more ideal approach &lt;em&gt;(which we want to implement with a Installable container.)&lt;/em&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Fits existing uses. Primarily, core development, Gutenberg development (as a model for future core development), and can be easily setup at contributor days.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Check:  &lt;code&gt;0.16.2&lt;/code&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Is built with future uses in mind. Either container or full VM configurations can be relatively easily translated to online development environments, or to testing environments like calypso.live.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Check: &lt;code&gt;0.17.0&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
All that said, if you made it to this point I greatly appreciate it.
&lt;/p&gt;
&lt;p&gt;
What I do notice on this ticket is there are now three (3) solutions vying for adoption:  VVV, some abstract Docker solution, and now WPLib Box.
&lt;/p&gt;
&lt;p&gt;
So my proposal is this: Rather than make a hard and fast decision on one solution, why not leverage the competition inherent in the market and instead &lt;strong&gt;establish a set of requirements&lt;/strong&gt; that any recommended solution will need to provide, and then provide a recommended list of solution based on which one meets all &lt;em&gt;(or most)&lt;/em&gt; of those objectives?  That way you won't be shutting the door on a solution that might end up being significantly better simply by agreeing to choose one early one?
&lt;/p&gt;
&lt;p&gt;
And if the core team later chooses to adopt just one as the &lt;em&gt;"official"&lt;/em&gt; version then you will have the option of picking the one that evolved to be the best and not just the one that was anointed early on?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44094 (Hook for WP_User data hydration to enable strong data security) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 30 May 2018 21:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44094#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44094#comment:7/1527716330274903</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44094 (Hook for WP_User data hydration to enable strong data security) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 21:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44094#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44094#comment:6/1527715165942942</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by yaronguez. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527715164000421"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44240 (Avoid running full PHPUnit test suite for every PHP file change) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 20:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44240#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44240#comment:4/1527713672954083</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527713671000383"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 20:36:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:82/1527712613459241</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mikeschinkel. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527712611000716"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43534 (Wonky element attributes after coding standards cleanup) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 20:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43534#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43534#comment:7/1527712303849528</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1527712302000172"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44280 (Glitch when activating theme) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 30 May 2018 20:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44280#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44280#comment:1/1527712296145968</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 30 May 2018 20:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:81/1527712145827973</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12955#comment:80" title="Comment 80"&gt;danieltj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm slightly confused as to the direction of this ticket, sorry. I've had a quick skim through the recent discussion here but how come the original patch that was suggested is no longer valid here? The original direction is to add a filter and it seems it's shifted into wrapper classes for a different purpose?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, I can see how I made it confusing.
&lt;/p&gt;
&lt;p&gt;
To hopefully clarify I made an alternate proposal in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43740" title="#43740: enhancement: Filter WP_Post methods (vs. removing final/'get_post' filter) (new)"&gt;#43740&lt;/a&gt; but soon after realized &lt;strong&gt;there are really two (2) use-cases&lt;/strong&gt; and that &lt;strong&gt;the original use-case in this ticket is valid for custom post types&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
So I am proposing we continue with a modified version of this ticket as per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12955#comment:76" title="Comment 76"&gt;comment:76&lt;/a&gt; and also that we implement the hooks identified in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12955#comment:69" title="Comment 69"&gt;comment:96&lt;/a&gt; as proposed in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43740" title="#43740: enhancement: Filter WP_Post methods (vs. removing final/'get_post' filter) (new)"&gt;#43740&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44280 (Glitch when activating theme) created</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Wed, 30 May 2018 20:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44280/1527711996406983</guid>
      <description>&lt;p&gt;
I noticed a small glitch while activating any theme on the Appearance &amp;gt; Themes page. When you click Activate, the &lt;code&gt; .themes.wp-clearfix&lt;/code&gt; or &lt;code&gt; .theme-browser&lt;/code&gt; div either shrinks or expands a small amount. This issue only shows up on Chrome, Firefox does not have this issue.
&lt;/p&gt;
&lt;p&gt;
To recreate the issue:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Open latest Chrome browser
&lt;/li&gt;&lt;li&gt;Go to Appearance &amp;gt; Themes
&lt;/li&gt;&lt;li&gt;Click Activate on any theme and watch as the themes shrink or expand
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This glitch will not show while the "New theme activated" notification is showing, so it does not happen again after activating a theme. Unless you reload the page without the notification.
&lt;/p&gt;
&lt;p&gt;
Seems to be an &lt;code&gt; Uncaught SyntaxError: Unexpected string&lt;/code&gt; on the Themes page
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43880.3.diff attached to Ticket #43880</title>
      
        <dc:creator>lbenicio</dc:creator>

      <pubDate>Wed, 30 May 2018 20:07:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43880/43880.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43880/43880.3.diff/1527710872792734</guid>
      <description>&lt;p&gt;
move unit test to the correct place
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44134 (Update to TinyMCE 4.7.13) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 30 May 2018 20:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44134#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44134#comment:19/1527710598273148</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@azaozz Yes, &lt;code&gt;44134-test.diff&lt;/code&gt; fixes the issue for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44099 (Add Request Type into Admin Email Subject for GDPR) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 30 May 2018 19:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44099#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44099#comment:8/1527709953347319</guid>
      <description>&lt;p&gt;
The tests for this should be added to the test class being worked on in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43967" title="#43967: enhancement: Admin emails after email confirmation don't work for data privacy requests (closed: fixed)"&gt;#43967&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33885.5.4.diff attached to Ticket #33885</title>
      
        <dc:creator>lbenicio</dc:creator>

      <pubDate>Wed, 30 May 2018 19:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33885/33885.5.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33885/33885.5.4.diff/1527709899879444</guid>
      <description>&lt;p&gt;
unit test 33885.5 correct file(previous one was incorrect)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43967 (Admin emails after email confirmation don't work for data privacy requests) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 30 May 2018 19:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43967#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43967#comment:32/1527709789942928</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43967/43967.6.diff" title="Attachment '43967.6.diff' in Ticket #43967"&gt;43967.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43967/43967.6.diff" title="Download"&gt;​&lt;/a&gt; has the changes noted below.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should the tests check the user_request_action_confirmed action works properly?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I don't know that I have seen any tests before verifying that an action hook fires successfully (except the tests for the hooks API).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should the tests check that _wp_admin_notified is updated on the request post?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Added tests for this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should the tests be duplicated for erasure requests?
&lt;/li&gt;&lt;li&gt;Should the tests try and confirm a completed request?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/44234" title="#44234: enhancement: Add missing unit tests for erasing personal data by username or email ... (assigned)"&gt;#44234&lt;/a&gt; for erasure request related tests.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should any tests try to trigger the user_request_action_confirmed by loading the login page with confirmaction?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I couldn't find any tests for anything similar. May be worth investigating tests for the &lt;code&gt;wp-login.php&lt;/code&gt; page separately.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should any tests be done when the request doesn’t exist or was removed somehow?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Added assertions for the early returns in the function (an invalid post ID is provided, or an ID that is not of the &lt;code&gt;user_request&lt;/code&gt; post type).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43967.6.diff attached to Ticket #43967</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 30 May 2018 19:48:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43967/43967.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43967/43967.6.diff/1527709723589876</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>33885.5.3.diff attached to Ticket #33885</title>
      
        <dc:creator>lbenicio</dc:creator>

      <pubDate>Wed, 30 May 2018 19:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33885/33885.5.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33885/33885.5.3.diff/1527709692607232</guid>
      <description>&lt;p&gt;
Unit tests for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33885" title="#33885: defect (bug): meta_form performs a potentially expensive query (new)"&gt;#33885&lt;/a&gt;.5
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44134 (Update to TinyMCE 4.7.13) updated</title>
      
        <dc:creator>bdanzer29</dc:creator>

      <pubDate>Wed, 30 May 2018 19:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44134#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44134#comment:18/1527709567379750</guid>
      <description>&lt;p&gt;
@azaozz When I remove that code it does work for me! Thanks for the help! Do you have any idea when 4.9.7 might be released?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44134 (Update to TinyMCE 4.7.13) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 May 2018 19:23:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44134#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44134#comment:17/1527708185178932</guid>
      <description>&lt;p&gt;
Think I found the problem. @danielbachhuber @bdanzer29 can you see if 44134-test.diff fixes it for you? It removes the "old" way of loading external plugins that doesn't seem needed any more.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44134-test.diff attached to Ticket #44134</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 May 2018 19:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44134/44134-test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44134/44134-test.diff/1527708039336009</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44133 (Should the Data Export indicate when we have no information on the user) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 30 May 2018 19:04:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44133#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44133#comment:8/1527707075951565</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 for not generating and sending a ZIP when no data is found for a user.
&lt;/p&gt;
&lt;p&gt;
@birgire the patch looks good overall and just needs a refresh. Here is some general feedback.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can we change the &lt;code&gt;wp_privacy_send_personal_data_export_email()&lt;/code&gt; documentation to make note that an email is sent to a user if no data is found.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_privacy_personal_data_email_content&lt;/code&gt; &lt;code&gt;bool&lt;/code&gt; type for the new parameter is misaligned.
&lt;/li&gt;&lt;li&gt; A &lt;code&gt;@since 4.9.7&lt;/code&gt; tag should be added to the &lt;code&gt;wp_privacy_send_personal_data_export_email()&lt;/code&gt; function and &lt;code&gt;wp_privacy_personal_data_email_content&lt;/code&gt; filter noting the introduction of the new &lt;code&gt;$has_data_export&lt;/code&gt; parameter.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, is there any reason a plugin would want to override the value of &lt;code&gt;$has_data_export&lt;/code&gt;? If so, a filter could be added there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44139 (i18n: "About" disambiguation) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 30 May 2018 18:52:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44139#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44139#comment:11/1527706375082124</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch, @XpertOne! Welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44139/44139.diff" title="Attachment '44139.diff' in Ticket #44139"&gt;44139.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44139/44139.diff" title="Download"&gt;​&lt;/a&gt; is the right format to provide a patch. Can we change it to only introduce a context for each string (leave both strings as "About") per @swissspidy's &lt;a href="https://core.trac.wordpress.org/ticket/44139#comment:6"&gt;suggestion&lt;/a&gt;?
&lt;/p&gt;
&lt;p&gt;
Also, the context in the patch still does not describe the context very well. Maybe "Page title of the about WordPress page in the admin." and "Header for the About section in a personal data export, which contains general site details."?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 30 May 2018 18:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:18/1527705315014132</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some input from spam detection plugins would be useful here. Some plugins may be checking a comment for spam on edit or when the comment status is changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43631 (Contents of About page hosted on third party server) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Wed, 30 May 2018 18:23:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43631#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43631#comment:9/1527704584623216</guid>
      <description>wontfix: &lt;p&gt;
After discussing this during the recent bug scrub, for now, it's something that is plugin territory. The About page is not explicitly sending the IP as data.
&lt;/p&gt;
&lt;p&gt;
If this level of hardening is desired, the &lt;code&gt;admin_init&lt;/code&gt; hook can be used to redirect users to an alternate about page, and the URL in the admin bar can be changed in a number of ways.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>juergen74</dc:creator>

      <pubDate>Wed, 30 May 2018 18:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:57/1527704125496784</guid>
      <description>&lt;p&gt;
For me this seem to be a problem of Themes or Plugins calling the Function get_the_content() outside of the Loop.
&lt;/p&gt;
&lt;p&gt;
So if you call it outside the loop the global $pages = null
&lt;/p&gt;
&lt;p&gt;
There are some easy fixes for this error: Don't call the function from outside of the loop! :) And if you see a theme or plugin that is doing that, ask the developers to fix it.
&lt;/p&gt;
&lt;p&gt;
or we could check $pages for null and return an empty string right at the begining of the function.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_the_content( $more_link_text = null, $strip_teaser = false ) {
	global $page, $more, $preview, $pages, $multipage;
        if (is_null($pages)) { return ''; }    // new line
	$post = get_post();
....
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43631 (Contents of About page hosted on third party server) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 17:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43631#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43631#comment:8/1527701477888628</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527701476000127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43986 (Disable "Install Plugin" button for PHP required version mismatch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 17:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43986#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43986#comment:40/1527699713559091</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by michelemiz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1527699712000731"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44236 (Maintain consistency between privacy export report and archive filenames) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 16:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44236#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44236#comment:1/1527697501889121</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by iandunn. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527697501000153"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44278 (Smileys got rendered inside pre/code tags in case html attributes are ...) updated</title>
      
        <dc:creator>Andi Dittrich</dc:creator>

      <pubDate>Wed, 30 May 2018 16:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44278#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44278#comment:2/1527696454652682</guid>
      <description>&lt;p&gt;
the old ticket adds the generic functionality to exclude pre/code tags from convert_smilies.
but it uses a weak regex which didn't handle html attributes on these tags.
&lt;/p&gt;
&lt;p&gt;
this patch fixes the feature introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16448" title="#16448: enhancement: Smilies should not be placed inside of pre or code tags (closed: fixed)"&gt;#16448&lt;/a&gt; by modifying the regex
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44278 (Smileys got rendered inside pre/code tags in case html attributes are ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 30 May 2018 15:57:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44278#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44278#comment:1/1527695854877750</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket and patch @Andi Dittrich
&lt;/p&gt;
&lt;p&gt;
There is already ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16448" title="#16448: enhancement: Smilies should not be placed inside of pre or code tags (closed: fixed)"&gt;#16448&lt;/a&gt; that is marked as fixed, so did something change since then?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44274 (htmlspecialchars call in template.php needs to be update) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 30 May 2018 15:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44274#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44274#comment:2/1527695053914939</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;esc_attr()&lt;/code&gt; accepts 1 parameter, not 3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44279 (`get_terms()` with `child_of` and `childless` combined) created</title>
      
        <dc:creator>nonverbla</dc:creator>

      <pubDate>Wed, 30 May 2018 15:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44279</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44279/1527694232166113</guid>
      <description>&lt;p&gt;
Hi there! I'm not sure if I found a bug or this is intended behaviour: If  I use a combination of &lt;code&gt;childless&lt;/code&gt; and &lt;code&gt;child_of&lt;/code&gt; in a &lt;code&gt;get_terms&lt;/code&gt; call, I get zero results.
My taxonomy's structure:
&lt;/p&gt;
&lt;pre class="wiki"&gt;- Genre
-- Hip Hop
-- Trap
-- Rap
- Location
-- Europe
--- Germany
--- Sweden
--- Austria
-- Asia
--- China
--- Japan
--- Taiwan
&lt;/pre&gt;&lt;p&gt;
My code:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$location_parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_term&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my_custom_taxonomy'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$countries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_terms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s1"&gt;'taxonomy'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$location_parent&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;taxonomy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'hide_empty'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'child_of'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$location_parent&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;term_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'childless'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm trying to only list countries, basically children of 'location' that don't have children of their own.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44141 (Privacy: Don't replace comment author URL and email with anything) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 30 May 2018 15:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44141#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44141#comment:10/1527693674376356</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44141/44141.2.diff" title="Attachment '44141.2.diff' in Ticket #44141"&gt;44141.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44141/44141.2.diff" title="Download"&gt;​&lt;/a&gt; includes some minor suggestions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Uses &lt;code&gt;assertSame()&lt;/code&gt; instead of &lt;code&gt;assertEquals()&lt;/code&gt;, for stricter checks.
&lt;/li&gt;&lt;li&gt;Changes &lt;code&gt;@since 5.0.0&lt;/code&gt; to &lt;code&gt;@since 4.9.6.&lt;/code&gt; in &lt;code&gt;anonymization.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adjusts the &lt;code&gt;test_anonymize_with_filter()&lt;/code&gt;, so it removes only the filter callback that was added, before the assertions.
&lt;/li&gt;&lt;li&gt;Adjusts the &lt;code&gt;filter_wp_privacy_anonymize_data()&lt;/code&gt; so it also tests the &lt;code&gt;$data&lt;/code&gt; input argument.
&lt;/li&gt;&lt;li&gt;Adjusts the inline docblock for &lt;code&gt;filter_wp_privacy_anonymize_data()&lt;/code&gt;:  adds a &lt;code&gt;@since&lt;/code&gt; and adds the variable to the &lt;code&gt;@return&lt;/code&gt; line.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
ps: I noticed that &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44141/44141.diff" title="Attachment '44141.diff' in Ticket #44141"&gt;44141.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44141/44141.diff" title="Download"&gt;​&lt;/a&gt; changes the email anonymization as well. Should the ticket be adjusted to mention that as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>convert_smilies_regex_v2.patch attached to Ticket #44278</title>
      
        <dc:creator>Andi Dittrich</dc:creator>

      <pubDate>Wed, 30 May 2018 15:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44278/convert_smilies_regex_v2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44278/convert_smilies_regex_v2.patch/1527693392086007</guid>
      <description>&lt;p&gt;
removed repetition quantifier (regex should be ungreedy)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44268 (GDPR concerns on the core commenting flow) updated</title>
      
        <dc:creator>asadkn</dc:creator>

      <pubDate>Wed, 30 May 2018 15:15:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44268#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44268#comment:10/1527693321972674</guid>
      <description>&lt;p&gt;
There's a lot of misinformation around &lt;em&gt;consent&lt;/em&gt;. There are six other lawful basis in EU GDPR law and legitimate interest does cover things like functional needs of software or network security.
&lt;/p&gt;
&lt;p&gt;
Unless the email is going to be used for something else like marketing (bundled form), there’s simply no reason for consent for WordPress comments. Storing personal data in a cookie was more of a concern since it's not really a necessity but an enhancement, and stores the data in a less secure format that's a cookie - WordPress has that covered already now.
&lt;/p&gt;
&lt;p&gt;
In many unbundled forms like these, submitting the form itself is consent. You obviously have to mention it in your Privacy Policy, but there's no need for consent. In the comment form:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;IP address is recorded for network security, spam etc. (Data retention shouldn’t be more than needed though)
&lt;/li&gt;&lt;li&gt;Name is basic functional need for comments.
&lt;/li&gt;&lt;li&gt;Email is needed for avatar, spam prevention, and perhaps duplication/flood checks etc. (Though, WordPress should have an option to make email optional here if the site owner decides not to use it for anything)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
What I believe will be helpful:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A message to meet right to be informed. This can be a statement below the comment form with a link to privacy policy such as (just a quick example, not concrete): "When adding a comment, your email addresses will be used to display your Gravatar and your name will be displayed. Review our Privacy Policy."
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Data retention policies on IP address for comments.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #470 ('Invalid argument supplied for foreach() ' message being sent to syslog) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 15:11:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/470#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/470#comment:3/1527693095918858</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by bemdesign. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1527693095000104"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44141.2.diff attached to Ticket #44141</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 30 May 2018 15:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44141/44141.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44141/44141.2.diff/1527693000522731</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44127 (editing an image can result in intermediate sized images left over ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 15:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44127#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44127#comment:4/1527692956943210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1527692955000734"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44228 ("Read more about setting up your local development environment" needs ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 30 May 2018 14:55:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44228#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44228#comment:5/1527692111848680</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43328" title="Build/Test Tools: Replace Codex home page link in &amp;#34;Read more about ..."&gt;43328&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Replace Codex home page link in "Read more about setting up your local development environment" with a more specific handbook link.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props abdullahramzan, johnbillion.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44228" title="#44228: defect (bug): &amp;#34;Read more about setting up your local development environment&amp;#34; needs ... (closed: fixed)"&gt;#44228&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43328]: Build/Test Tools: Replace Codex home page link in "Read more about ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 30 May 2018 14:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43328</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43328/1527692110872092</guid>
      <description>&lt;p&gt;
Build/Test Tools: Replace Codex home page link in "Read more about setting up your local development environment" with a more specific handbook link.
&lt;/p&gt;
&lt;p&gt;
Props abdullahramzan, johnbillion.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44228" title="#44228: defect (bug): &amp;#34;Read more about setting up your local development environment&amp;#34; needs ... (closed: fixed)"&gt;#44228&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43732 (Improve wording on notice preventing development from src directory.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 30 May 2018 14:48:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43732#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43732#comment:2/1527691698494595</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34698565-0a2cf5d0-f4d9-11e7-981f-6f64b15a0c79.png attached to Ticket #43732</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 30 May 2018 14:47:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43732/34698565-0a2cf5d0-f4d9-11e7-981f-6f64b15a0c79.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43732/34698565-0a2cf5d0-f4d9-11e7-981f-6f64b15a0c79.png/1527691672278880</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44253-3.diff attached to Ticket #44253</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 30 May 2018 14:38:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44253/44253-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44253/44253-3.diff/1527691124566671</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44253 (@return missing in doc comment of get_admin_page_parent function) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 30 May 2018 14:38:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44253#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44253#comment:3/1527691106479599</guid>
      <description>&lt;p&gt;
@kennithnichol I understand the concern! Thank you for explaining and correcting me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44261 (Export User Data includes media URLs, not the actual media files in ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 30 May 2018 14:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44261#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44261#comment:4/1527690730493085</guid>
      <description>&lt;p&gt;
You are right! That's the reason I proposed an alternative way that will create a separate backup on the server and the URLs in &lt;code&gt;index.html&lt;/code&gt; will point to this location only. Everything in this file remain the same only except the file location will be different than we have now. This will definitely prevent us from sending large attachments! In fact, we don't have to worry about sending any additional attachment except the one (&lt;code&gt;index.html&lt;/code&gt;) WordPress is sending now.
&lt;/p&gt;
&lt;p&gt;
Also since the backup will be kept for only a stipulated period and will be erased after that, server space will not get overused for long time. Users will be notified about the time frame he has to download before it gets removed physically from the server for ever.
&lt;/p&gt;
&lt;p&gt;
Does this make any sense?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44261#comment:3" title="Comment 3"&gt;allendav&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I worry about large attachments making the ZIPs ridiculous, so if we did something like this, let's consider having settings or at least filters controlling the maximum size attachment that can be added and also controlling the maximum size export ZIP we are willing to create.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44277 (Post type rewrite breaks page url's) updated</title>
      
        <dc:creator>garethgillman</dc:creator>

      <pubDate>Wed, 30 May 2018 14:30:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44277#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44277#comment:4/1527690618960553</guid>
      <description>&lt;p&gt;
The variable is defined in a filter which uses str_replace to change it, this works fine and removing the filter doesn't affect the above, as I said, adding the variable to the slug breaks the page permalinks across the site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44134 (Update to TinyMCE 4.7.13) updated</title>
      
        <dc:creator>bdanzer29</dc:creator>

      <pubDate>Wed, 30 May 2018 14:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44134#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44134#comment:16/1527690320081879</guid>
      <description>&lt;p&gt;
I am registering my script through mce_external_plugins filter.
&lt;/p&gt;
&lt;p&gt;
Edit: Also wanted to add that even if I add a later priority to the filter I still get the same issue.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'mce_external_plugins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$plugin_array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$plugin_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'lorem'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Assets&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get_plugin_url&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Assets&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get_asset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lorem'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$plugin_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'lorem2'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Assets&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get_plugin_url&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Assets&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;get_asset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lorem2'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$plugin_array&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>convert_smilies_regex.patch attached to Ticket #44278</title>
      
        <dc:creator>Andi Dittrich</dc:creator>

      <pubDate>Wed, 30 May 2018 14:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44278/convert_smilies_regex.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44278/convert_smilies_regex.patch/1527690177087635</guid>
      <description>&lt;p&gt;
patch to fix the regex
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44278 (Smileys got rendered inside pre/code tags in case html attributes are ...) created</title>
      
        <dc:creator>Andi Dittrich</dc:creator>

      <pubDate>Wed, 30 May 2018 14:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44278</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44278/1527690152018183</guid>
      <description>&lt;p&gt;
hi!
&lt;/p&gt;
&lt;p&gt;
in case "raw" content is posted in a pre tag, legacy smiley sequences are processed by the convert_smilies function and converted to images, even if the html tags are in the &lt;strong&gt;$tags_to_ignore&lt;/strong&gt; list.
&lt;/p&gt;
&lt;p&gt;
this is caused by a weak regex inside the function which didn't take care of html attributes
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;current behaviour&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://media.andidittrich.de/wp-trac/current.png"&gt;&lt;img src="https://media.andidittrich.de/wp-trac/current.png" alt="https://media.andidittrich.de/wp-trac/current.png" crossorigin="anonymous" title="https://media.andidittrich.de/wp-trac/current.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;expected behaviour&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://media.andidittrich.de/wp-trac/expected.png"&gt;&lt;img src="https://media.andidittrich.de/wp-trac/expected.png" alt="https://media.andidittrich.de/wp-trac/expected.png" crossorigin="anonymous" title="https://media.andidittrich.de/wp-trac/expected.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;example content to reproduce the issue&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;hello :)
this is sourcecode and should not contain smiley images:
&amp;lt;pre class="EnlighterJSRAW" data-enlighter-language="js"&amp;gt;alert(':)');
// :)&amp;lt;/pre&amp;gt;
and text :(
&lt;/pre&gt;&lt;p&gt;
attached a fixed version which is taking care of additional html attributes
&lt;/p&gt;
&lt;p&gt;
best regards, Andi
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44277 (Post type rewrite breaks page url's) updated</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Wed, 30 May 2018 14:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44277#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44277#comment:3/1527689111996906</guid>
      <description>&lt;p&gt;
Where is this variable defined? Most WordPress variables have names that start with &lt;code&gt;wp_&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6895 (Classic Theme Reversed posts_nav_link arguments) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 13:45:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6895#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6895#comment:3/1527687929954176</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by chrisvanpatten. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1527687929000267"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43987 (Block plugin updates if required PHP version is not supported - ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 13:40:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43987#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43987#comment:12/1527687657628422</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-php by afragen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1527687657000037"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44134 (Update to TinyMCE 4.7.13) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 30 May 2018 13:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44134#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44134#comment:15/1527686685084214</guid>
      <description>&lt;p&gt;
@azaozz I'm simply registering &lt;a class="ext-link" href="https://gist.github.com/danielbachhuber/7994605866299c57e2d9f9bac021f423"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this GitHub Gist&lt;/a&gt; with the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;public static function filter_mce_external_plugins( $plugins ) {
	$assets_path           = dirname( dirname( __FILE__ ) ) . '/assets';
	$assets_url            = plugins_url( 'assets', __DIR__ );
	$filepath              = '/js/tinymce-plugin.js';
	$mtime                 = filemtime( $assets_path . $filepath );
	$plugins['tastylinks'] = $assets_url . $filepath . '?v=' . (int) $mtime;
	return $plugins;
}
&lt;/pre&gt;&lt;p&gt;
My TinyMCE plugin closely parallels wplink, so I'm not sure why wplink works and my TinyMCE plugin doesn't.
&lt;/p&gt;
&lt;pre class="wiki"&gt;(function(tinymce){
	tinymce.ui.Factory.add( 'WPTastyLinkPreview', tinymce.ui.Control.extend( {
&lt;/pre&gt;&lt;p&gt;
vs.
&lt;/p&gt;
&lt;pre class="wiki"&gt;( function( tinymce ) {
	tinymce.ui.Factory.add( 'WPLinkPreview', tinymce.ui.Control.extend( {
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44277 (Post type rewrite breaks page url's) updated</title>
      
        <dc:creator>garethgillman</dc:creator>

      <pubDate>Wed, 30 May 2018 13:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44277#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44277#comment:2/1527685618400833</guid>
      <description>&lt;p&gt;
I believe this is a WP bug, I have got help from other sources to see if it was my code causing the error and we can't find anything that will cause it.
&lt;/p&gt;
&lt;p&gt;
I then used a brand new install of WP to test if it's something in my code that I may have missed and get the same result.
&lt;/p&gt;
&lt;p&gt;
Not sure what else I can do, we have done everything we can to try and fix it in our code and got no where.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44141 (Privacy: Don't replace comment author URL and email with anything) updated</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Wed, 30 May 2018 12:58:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44141#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44141#comment:9/1527685133510048</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44141/44141.diff" title="Attachment '44141.diff' in Ticket #44141"&gt;44141.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44141/44141.diff" title="Download"&gt;​&lt;/a&gt; looks good and works well for me.
&lt;/p&gt;
&lt;p&gt;
I don't think it's necessary to store an array of the fields that were anonymized instead the boolean that you have in your patch. IMO, the point of anonymizing is to remove any indication of who made the comment in the first place. In that regard, it &lt;em&gt;might&lt;/em&gt; be helpful to know that it was anonymized for overall tracking purposes, but it doesn't matter what specifically about the comment was anonymized.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44277 (Post type rewrite breaks page url's) closed</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Wed, 30 May 2018 12:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44277#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44277#comment:1/1527684486063844</guid>
      <description>invalid: &lt;p&gt;
This trac instance is used to follow-up on confirmed bugs and improvement suggestions in WordPress core.
In this case, where you try to figure out what's happened on your site and how to fix it, the support forums at support.wordpress.org is a much better place.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44151 (Personal data exports - lower priority exporters should place their ...) updated</title>
      
        <dc:creator>robobot3000</dc:creator>

      <pubDate>Wed, 30 May 2018 12:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44151#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44151#comment:9/1527684277662831</guid>
      <description>&lt;p&gt;
@allendav : if we want to keep the code simple and ignore the keys then we can just append the data to the result array (see 44151.3.patch).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should probably flag that as doingitwrong
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure what the expected result of this would be. Could you elaborate? I looked into &lt;code&gt;_doing_it_wrong&lt;/code&gt; and &lt;code&gt;wp_send_json_error&lt;/code&gt; but the former doesn't work while doing AJAX, and the latter prevents the whole download from happening.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44151.3.patch attached to Ticket #44151</title>
      
        <dc:creator>robobot3000</dc:creator>

      <pubDate>Wed, 30 May 2018 12:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44151/44151.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44151/44151.3.patch/1527684003741238</guid>
      <description>&lt;p&gt;
Always append the new data to the result array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44141 (Privacy: Don't replace comment author URL and email with anything) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 30 May 2018 12:18:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44141#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44141#comment:8/1527682727279342</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1527682726000407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44274.1.diff attached to Ticket #44274</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Wed, 30 May 2018 11:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44274/44274.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44274/44274.1.diff/1527680439236856</guid>
      <description>&lt;p&gt;
Please consider this one.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>44274 attached to Ticket #44274</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Wed, 30 May 2018 11:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44274/44274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44274/44274/1527680312269910</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44134 (Update to TinyMCE 4.7.13) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 May 2018 11:14:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44134#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44134#comment:14/1527678867748664</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@danielbachhuber @bdanzer29 confirmed that &lt;code&gt;tinymce.ui.Control&lt;/code&gt; is not available before TinyMCE is initialized. This seems to be a change in TinyMCE 4.7.0 and is the same in TinyMCE 4.7.13.
&lt;/p&gt;
&lt;p&gt;
However in my testing the theme seems to always be loaded and initialized first, before the plugins (at least in the default editors in WP, the main editor and the Text widget).
&lt;/p&gt;
&lt;p&gt;
I'm not sure if this will be "fixed" upstream. Also not sure why your plugins are running before TinyMCE and the theme are initialized. Please add any additional info on how to reproduce this, if possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44277 (Post type rewrite breaks page url's) created</title>
      
        <dc:creator>garethgillman</dc:creator>

      <pubDate>Wed, 30 May 2018 10:59:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44277</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44277/1527677975984139</guid>
      <description>&lt;p&gt;
I have a post type which we rewrite a custom url using the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'slug' =&amp;gt; '%kh_product_cat%',
&lt;/pre&gt;&lt;p&gt;
It used to work but not sure when but it stopped working and although the post type url's work, the page url's don't.
&lt;/p&gt;
&lt;p&gt;
Take that line out and the page url's work again, tested on a clean install of WP to make sure and get the same problem.
&lt;/p&gt;
&lt;p&gt;
Has something been changed in WP recently which would affect this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #44134,​44272 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 May 2018 10:38:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=44134%2C44272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=44134%2C44272/1527676728356733</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44134" title="#44134: task (blessed): Update to TinyMCE 4.7.13 (closed: fixed)"&gt;#44134&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44134 (Update to TinyMCE 4.7.13) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 May 2018 10:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44134#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44134#comment:12/1527676707302733</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44134#comment:11" title="Comment 11"&gt;bdanzer29&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also get the same issue as @danielbachhuber with tinymce.ui.Control not working.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, think we should close &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44272" title="#44272: defect (bug): tinymce.ui.Control not working since WordPress 4.9.6 (closed: duplicate)"&gt;#44272&lt;/a&gt; as duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44276.diff attached to Ticket #44276</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 30 May 2018 10:21:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44276/44276.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44276/44276.diff/1527675687640808</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44276 (Add AppVeyor Windows-based CI (Continuous Integration) Service) created</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 30 May 2018 10:21:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44276</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44276/1527675660419870</guid>
      <description>&lt;p&gt;
AppVeyor is a Windows-based CI (Continuous Integration) Service &lt;a class="ext-link" href="https://www.appveyor.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.appveyor.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With issues arising such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44262" title="#44262: defect (bug): Build tools: &amp;#34;grunt watch&amp;#34; throws fatal error on Windows (closed: fixed)"&gt;#44262&lt;/a&gt; (Build tools: "grunt watch" throws fatal error on Windows)
&lt;/p&gt;
&lt;p&gt;
By adding AppVeyor we can hopefully prevent some basic issues when running WordPress' &lt;em&gt;build tools&lt;/em&gt; on Windows-based platforms.
&lt;/p&gt;
&lt;p&gt;
In future iterations, we can investigate further &lt;em&gt;build tools&lt;/em&gt; testing, be it Grunt tasks, Webpack, PHPCS, or PHPUnit
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Once the forthcoming patch has been committed the following is required to set up the GitHub and Slack integrations for the &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop&lt;/a&gt; repo :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Slack - &lt;a class="ext-link" href="https://www.appveyor.com/docs/notifications/#slack"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.appveyor.com/docs/notifications/#slack&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;GitHub - &lt;a class="ext-link" href="https://www.appveyor.com/docs/team-setup/#github-integration"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.appveyor.com/docs/team-setup/#github-integration&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;
Here is the latest CI build from my mirror: &lt;a class="ext-link" href="https://ci.appveyor.com/project/ntwb/wordpress/build/1.0.3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ci.appveyor.com/project/ntwb/wordpress/build/1.0.3&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43771 (use wp_rand instead of mt_rand()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 30 May 2018 10:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43771#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43771#comment:6/1527675113783922</guid>
      <description>&lt;p&gt;
I should say at this point that in the future it would be great if you could &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;report security-related issues to the project's HackerOne program&lt;/a&gt; instead of here on the public issue tracker. This particular issue is just hardening, but it's always better to be safe than sorry.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43771 (use wp_rand instead of mt_rand()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 30 May 2018 10:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43771#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43771#comment:5/1527674853017890</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report and the patch @BjornW!
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;mt_rand()&lt;/code&gt; is also used in &lt;code&gt;update_option_new_admin_email()&lt;/code&gt; for the same purpose, so this instance will need to be changed too.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;md5()&lt;/code&gt; is only used here as a hashing function, not for a cryptographic purpose. The randomness comes from &lt;code&gt;(mt|wp)_rand()&lt;/code&gt; and &lt;code&gt;md5()&lt;/code&gt; just converts the result into a user-facing, URL-safe format. If the hash was successfully reverse engineered it wouldn't expose any information that isn't already stored along side it in the &lt;code&gt;adminhash&lt;/code&gt; option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>jacklenox</dc:creator>

      <pubDate>Wed, 30 May 2018 10:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:8/1527674662002836</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44229#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unless I'm missing something, there will still be an HTTP request to an unavailable resource before switching to fallback, leading to a slower, not faster experience.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah I see. Yes, this is a consideration. There are a number of ways this could be mitigated:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When the CDN doesn't respond, a cache value could be set to not bother trying it again for a predetermined amount of time, perhaps indefinitely. As soon as the local version of jQuery is loaded, there is no longer a case for trying to provide the client with the CDN version. The cache value could include country data which would prevent future users from the same country experiencing this problem.
&lt;/li&gt;&lt;li&gt;There could be an option to unset a constant that would allow people to disable the CDN in their wp-config. E.g. something like &lt;code&gt;define( 'WP_USE_CDN', false );&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think in the vast majority of cases, the CDN option would work fine, save a lot of energy and represent an improvement for most users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31518 (WP_User::has_cap and 'map_meta_cap' filter) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 30 May 2018 09:53:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31518#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31518#comment:10/1527674025726683</guid>
      <description>wontfix: &lt;p&gt;
I believe this change has too high a chance to break something that is relying on the user cap check returning true when the cap check is an empty array. If some malicious code can affect the return value of the &lt;code&gt;map_meta_cap&lt;/code&gt; filter, then it can effectively allow anything on the site anyway.
&lt;/p&gt;
&lt;p&gt;
Thanks for the report @dugi digitaly. It lead to a few improvements in the core code and in the unit tests.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44268 (GDPR concerns on the core commenting flow) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Wed, 30 May 2018 09:48:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44268#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44268#comment:9/1527673683328375</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44268#comment:6" title="Comment 6"&gt;allendav&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On the other hand, I do wonder if the majority would be served by adding static text, with a link to the privacy policy, at the bottom of the comment form. The text would be filterable and could be un-hooked if desired, e.g.
&lt;/p&gt;
&lt;p&gt;
"Before submitting your comment, please read our privacy policy."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You can already do that by filtering the &lt;code&gt;comment_form_defaults&lt;/code&gt; and adapting the  &lt;code&gt;comment_notes_before&lt;/code&gt; or  adding &lt;code&gt;comment_notes_after&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44274 (htmlspecialchars call in template.php needs to be update) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 30 May 2018 09:40:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44274#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44274#comment:1/1527673226226245</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @khaihong! Welcome to WordPress Trac.
&lt;/p&gt;
&lt;p&gt;
It looks like this warning is coming from the &lt;code&gt;do_meta_boxes()&lt;/code&gt; function. The &lt;code&gt;$context&lt;/code&gt; parameter should be escaped with &lt;code&gt;esc_attr()&lt;/code&gt; instead of &lt;code&gt;htmlspecialchars()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44275 (&lt;span data-mce-type="bookmark" style="display: inline-block; width: ...) created</title>
      
        <dc:creator>michaelukr</dc:creator>

      <pubDate>Wed, 30 May 2018 09:14:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44275</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44275/1527671688918148</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42908" title="#42908: defect (bug): 4.9.1 Bug Found in TinyMCE Visual/Text Tab (closed: fixed)"&gt;#42908&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
when inserting youtube or any shotrcode in text mode and gets into visual mode tinyMCE inserting &amp;lt;span data-mce-type="bookmark" style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" class="mce_SELRES_start"&amp;gt;﻿&amp;lt;/span&amp;gt; code
and its hard to erase it
because its respawn again and again
&lt;/p&gt;
&lt;p&gt;
Wordpress 4.9.6
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>psycleuk</dc:creator>

      <pubDate>Wed, 30 May 2018 08:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:3/1527670319956425</guid>
      <description>&lt;p&gt;
Apologies for not being clear enough in my initial wording - our concerns are that the file has no access control on it.
&lt;/p&gt;
&lt;p&gt;
How guessable the file name is bears no relevance, as secure by obscurity is not secure. Once the file has been created anyone can access it and download it.
&lt;/p&gt;
&lt;p&gt;
As Wordpress is an open source CMS and by default the code is open, it would therefore not be too difficult to reverse engineer how the file is created to build a script to exploit it.
&lt;/p&gt;
&lt;p&gt;
There is also a potential issue with using index.html as a way to block directory viewing of the personal data folder, as any server that is configured to not default to index.html would be exposed. Although, i do appreciate that catering for server configurations is a difficult task. Ideally using .htaccess to block all public access to this folder is preferred, then any developer using nginx only setups would need to copy the rules into the nginx config.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>sgreger</dc:creator>

      <pubDate>Wed, 30 May 2018 08:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:47/1527668472207175</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:20" title="Comment 20"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:19" title="Comment 19"&gt;pputzer&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Have you got any source for this? I know of no such ruling and have not been able to find any German article that mentions it. All German articles on the topic of IP anonymization seem talk about killing the last octet (or using Google's standard &lt;code&gt;_anonymizeIp()&lt;/code&gt; function).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Somebody mentioned this few weeks ago in Slack (I think) but can't find anything more about it either. Thinking we can consider this as "not real unless proven otherwise" :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am not aware of any court rulings, but the consideration about a potential requirement of cutting to only the first two octets (IPv4) may stem from the EU Article 29 Working Group's &lt;a class="ext-link" href="http://ec.europa.eu/justice/article-29/documentation/opinion-recommendation/files/2008/wp148_en.pdf"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Opinion paper WP148&lt;/a&gt; (2008):
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;"Currently, some search engine providers truncate IPv4 addresses by removing the final octet, thus in effect retaining information about the user's ISP or subnet, but not directly
identifying the individual. The activity could then originate from any of 254 IP addresses. &lt;strong&gt;This may not always be enough to guarantee anonymisation&lt;/strong&gt;."&lt;/em&gt; (emphasis mine)
&lt;/p&gt;
&lt;p&gt;
The "Unabhängiges Landeszentrum für Datenschutz Schleswig-Holstein", one of Germany's 16 Federal Data Protection Authorities references that text in their &lt;a class="ext-link" href="https://www.datenschutzzentrum.de/artikel/575-IP-Adressen-und-andere-Nutzungsdaten-Haeufig-gestellte-Fragen.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;FAQ on IP addresses (in German)&lt;/a&gt; to suggest obfuscation of two octets as acceptable.
&lt;/p&gt;
&lt;p&gt;
This is the opinion of public advisory bodies on data protection, not binding law; deleting the last octet appears to indeed be common practice in Germany, though some sources (legal blogs, mainly) tend to recommend deleting two. Since privacy compliance is always about minimising risk, not absolute rules, I believe that at least a filter to set a higher anonymization level could be worth considering?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44273 (page routing problems) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 30 May 2018 07:50:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44273#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44273#comment:2/1527666645638478</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @musicforte, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
We don't generally delete tickets unless it's spam. If it turned out to be a plugin or theme issue rather than WordPress core, the ticket can be closed as &lt;code&gt;invalid&lt;/code&gt;, or &lt;code&gt;worksforme&lt;/code&gt; if the issue is unclear but can no longer be reproduced: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/contribute/trac/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/contribute/trac/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44268 (GDPR concerns on the core commenting flow) updated</title>
      
        <dc:creator>patricedefago</dc:creator>

      <pubDate>Wed, 30 May 2018 07:09:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44268#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44268#comment:8/1527664145917796</guid>
      <description>&lt;p&gt;
Thanks @allendav 😀
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44268#comment:5" title="Comment 5"&gt;allendav&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44268#comment:4" title="Comment 4"&gt;patricedefago&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @allendav ,
&lt;/p&gt;
&lt;p&gt;
Thanks for explain that and sorry for my bad ticket.
&lt;/p&gt;
&lt;p&gt;
Effectively it's a misunderstanding what is for this checkbox.
&lt;/p&gt;
&lt;p&gt;
But that doesn't take away the fact that you need a checkbox for the consent of data storage on the site, before the user comment.
&lt;/p&gt;
&lt;p&gt;
Best regard.
&lt;/p&gt;
&lt;p&gt;
Patrice
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is no such thing as a bad ticket - well, at least this isn't one :)
&lt;/p&gt;
&lt;p&gt;
I think it will be good to resolve this matter (either way) and this ticket will be a good thread to capture that discussion and resolution.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44268 (GDPR concerns on the core commenting flow) updated</title>
      
        <dc:creator>patricedefago</dc:creator>

      <pubDate>Wed, 30 May 2018 07:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44268#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44268#comment:7/1527664076314959</guid>
      <description>&lt;p&gt;
WordPress has already begun its compliance with data export capability, as well as other data related functions, and the creation of a privacy policy page.
&lt;/p&gt;
&lt;p&gt;
Why stop there?
&lt;/p&gt;
&lt;p&gt;
Data management concerns comments (among others), but it is not complete without this consent management.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44268#comment:6" title="Comment 6"&gt;allendav&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Providing a required checkbox and prompt concerning personal data processing before enabling the comment button presumes that a majority of site owners will be relying on consent as their lawful basis for processing comments. In core we are endeavoring to provide tools to assist the majority of sites with GDPR requirements, and it isn’t clear that a majority requires this basis. This particular use case might be better served by a plugin that extends the existing comment form.
&lt;/p&gt;
&lt;p&gt;
On the other hand, I do wonder if the majority would be served by adding static text, with a link to the privacy policy, at the bottom of the comment form. The text would be filterable and could be un-hooked if desired, e.g.
&lt;/p&gt;
&lt;p&gt;
"Before submitting your comment, please read our privacy policy."
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44273 (page routing problems) closed</title>
      
        <dc:creator>musicforte</dc:creator>

      <pubDate>Wed, 30 May 2018 02:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44273#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44273#comment:1/1527648166952752</guid>
      <description>invalid: &lt;p&gt;
It seems that the update threw off a lot of plugins.  So I'd like to delete this ticket. That option isn't available, so I've updated this to a feature request.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44094 (Hook for WP_User data hydration to enable strong data security) updated</title>
      
        <dc:creator>yguez</dc:creator>

      <pubDate>Wed, 30 May 2018 02:14:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44094#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44094#comment:5/1527646495905550</guid>
      <description>&lt;p&gt;
Thanks, @macbookandrew !
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44274 (htmlspecialchars call in template.php needs to be update) created</title>
      
        <dc:creator>khaihong</dc:creator>

      <pubDate>Wed, 30 May 2018 02:12:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44274/1527646364696291</guid>
      <description>&lt;p&gt;
Under wp-admin/includes/, the call needs to be changed from
htmlspecialchars($context))
to
htmlspecialchars($context, $flags=NULL, $encoding='UTF-8'))
&lt;/p&gt;
&lt;p&gt;
Otherwise, there are constant debug warnings:
htmlspecialchars(): charset   not supported, assuming utf-8
&lt;/p&gt;
&lt;p&gt;
I've had those warnings for themes twenty-fourteen and twenty-seventeen, using only 2 active plugins Query Monitor and Really Simple SSL.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43998 (REST API: Permit unbounded per_page=-1 requests for authorized users) updated</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Wed, 30 May 2018 00:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43998#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43998#comment:7/1527641465575463</guid>
      <description>&lt;p&gt;
Based on discussions in the REST API weekly meeting last week, we may be able to avoid this depending on the UI solutions implemented in Gutenberg. That said, I went ahead and did some work on it just in case we end up needing to go this route.
&lt;/p&gt;
&lt;p&gt;
I pushed some working changes up to a new branch on @danielbachhuber 's git fork for anyone who wants to follow or add to it:
&lt;a class="ext-link" href="https://github.com/danielbachhuber/wordpress-develop/commit/8ff6e4faf5dd90ac2f8bc0d2e873e64b5673482e"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/danielbachhuber/wordpress-develop/commit/8ff6e4faf5dd90ac2f8bc0d2e873e64b5673482e&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41751 (save_post_{custom_post_type} not behaving exactly as save_post) updated</title>
      
        <dc:creator>macbookandrew</dc:creator>

      <pubDate>Wed, 30 May 2018 00:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41751#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41751#comment:5/1527639506130237</guid>
      <description>&lt;p&gt;
Sounds to me like ACF and CMB2 are hooking into &lt;code&gt;save_post&lt;/code&gt; rather than &lt;code&gt;save_post_{$post-&amp;gt;post_type}&lt;/code&gt;, and so have not yet saved the metadata to the postmeta table by the time &lt;code&gt;save_post_{$post-&amp;gt;post_type}&lt;/code&gt; runs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44273 (page routing problems) created</title>
      
        <dc:creator>musicforte</dc:creator>

      <pubDate>Wed, 30 May 2018 00:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44273</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44273/1527639410157462</guid>
      <description>&lt;p&gt;
With the 4.9.6 update I have pages that are routing to blank pages with HTTP/1.1 200 OK
&lt;/p&gt;
&lt;pre class="wiki"&gt;[local@KnownHost ~]$ curl -IL https://www.felixandfingers.com/blog-projects/
HTTP/1.1 200 OK
Date: Tue, 29 May 2018 20:45:37 GMT
Server: Apache
X-Powered-By: PHP/5.6.31
Cache-Control: max-age=0
Expires: Tue, 29 May 2018 20:45:37 GMT
Vary: Accept-Encoding
Content-Type: text/html; charset=UTF-8
[local@KnownHost ~]$ curl https://www.felixandfingers.com/blog-projects/
[local@KnownHost ~]$
-----
&lt;/pre&gt;&lt;p&gt;
That would lead me to suspect that something's wrong within WordPress's page router, and it's not routing to the correct page. No errors are generated, as I monitored all error_log files in the document root as well as the primary Apache error log, and no errors were triggered. It seems to be entirely a WordPress malfunction at this point.
&lt;/p&gt;
&lt;p&gt;
I have other examples of pages if needed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44094.2.patch attached to Ticket #44094</title>
      
        <dc:creator>macbookandrew</dc:creator>

      <pubDate>Wed, 30 May 2018 00:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44094/44094.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44094/44094.2.patch/1527638958755799</guid>
      <description>&lt;p&gt;
patch as described by @yguez with inline documentation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item>
   </channel>
</rss>